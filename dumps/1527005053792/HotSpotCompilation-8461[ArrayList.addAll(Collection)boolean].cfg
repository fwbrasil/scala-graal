begin_compilation
  name " HotSpotCompilation-8461[java.util.ArrayList.addAll(Collection)]"
  method "HotSpotCompilation-8461[java.util.ArrayList.addAll(Collection)]"
  date 1527005193067
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B47" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v3359 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v3359  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/ArrayList;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 ?6 v3429 v3431 ?34 ?806 ?57 ?1519 ?750 ?241 ?1518 v3430 ?1516 j2270 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a -
uncheckedStamp: a Ljava/util/Collection;
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v3418 ?791 v1005 v3443 v3415 v3419 v3416 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<ArrayList.addAll(Collection)>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: ArrayList.java
sourceLine: 581
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - - 
=== Succesors ===
=== Usages ===
v1691 a2058 a1904 a1807 v3359 v3552 i3369 v3553 i3375 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - -  <|@  <|@
f <@~|@floating>@ <|@
tid v3443 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v3359 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3359 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v3443 
=== Succesors ===
next: v125 
=== Usages ===
v2339 v2335 v2337 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v3443 #next: v125  <|@  <|@
f <@~|@floating>@ <|@
tid v2334 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
rawvalue: meta{HotSpotType<Ljava/util/ArrayList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/ArrayList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2335 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2335 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v3359 
y: v2334 
=== Succesors ===
=== Usages ===
v125 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v3359 y: v2334  <|@  <|@
f <@~|@floating>@ <|@
tid a1548 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:178) [bci: 41]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1747 ?6 a1690 a1690 a1690 a1690 a1690 a1690 a1690 a1690 a1690 a1690 v1757 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2033 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 44]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2032 v2274 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i23 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList.addAll(ArrayList.java:586) [bci: 45]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i24 i55 v61 i76 v90 v1275 i233 i475 i680 i693 i748 i761 v832 v1262 i3346 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1874 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:158) [bci: 12]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1875 j1960 j1993 j2023 v3464 j2114 j2265 v3491 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i632 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.AbstractList$Itr.<init>(AbstractList.java:341) [bci: 15]
at java.util.AbstractList$Itr.<init>(AbstractList.java:330) [bci: 2]
at java.util.AbstractList$ListItr.<init>(AbstractList.java:391) [bci: 8]
at java.util.AbstractList.listIterator(AbstractList.java:327) [bci: 11]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i655 i718 i780 i1856 i2247 i2096 i2005 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1852 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:157) [bci: 8]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1854 j1860 j1940 j1946 j1973 j1979 j2003 j2009 j2029 j2094 j2100 j2245 j2251 j2271 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a3244 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: n - NULL
stampKind: n -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v3205 v3227 v3239 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v3245 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL>
stampKind: <n -,n ->
value: SIMD<null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v3207 v3228 v3240 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v3246 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null,null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL,n - NULL,n - NULL>
stampKind: <n -,n -,n -,n ->
value: SIMD<null,null,null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v3209 v3229 v3241 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v3243 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null,null,null,null,null,null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL>
stampKind: <n -,n -,n -,n -,n -,n -,n -,n ->
value: SIMD<null,null,null,null,null,null,null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v3242 v3230 v3210 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1188 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1189 j1239 j1866 j1952 j1985 j2015 j2106 j2257 j3031 j3073 j3124 j3166 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2827 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2828 j2881 j2921 j2957 j3003 j3049 j3096 j3142 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2855 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2856 j2978 j3028 j3070 j3121 j3163 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2813 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2836 j2889 j2927 j2963 j3011 j3055 j3104 j3148 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2851 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2852 j2975 j3025 j3067 j3118 j3160 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1770 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2933 j2897 j3154 j3112 j3061 j3019 j2969 j2844 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2845 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2846 j2970 j3020 j3062 j3113 j3155 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1818 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v3063 j3056 j3050 j3105 v3156 j2829 j2837 v2847 j3149 j2882 j2890 j3143 j2922 j2928 j3097 j2958 j2964 v2971 v3114 j3004 j3012 v3021 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1778 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1837 j1862 v1867 v1924 j1948 v1953 j1981 v1986 j2011 v2016 v2078 j2102 v2107 v2229 j2253 v2258 v2585 v2693 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i912 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2097 i2248 i1791 i1857 i1881 i2036 i2192 i2006 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1814 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1815 i1911 i2065 i2214 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1792 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1793 i1882 i2037 i2193 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i13 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 21]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
a2207 v22 i24 v79 v1571 v1524 v1267 v188 i216 v300 v573 v1272 i670 i738 v2131 v1081 v2112 a1807 v1848 v1872 a1904 v2289 v1958 v2263 v1991 v2240 v2021 a2058 i3346 v3353 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v3416 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i3361 i3372 i3389 i3392 i3394 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v3415 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a3360 i3371 i3390 i3393 a3395 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v125 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList; target_method=toArray target_method_class=Ljava/util/ArrayList; position=at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
trueSuccessorProbability: 0.7101534901468434
=== Inputs ===
condition: v2335 
=== Succesors ===
trueSuccessor: v118 
falseSuccessor: v124 
=== Usages ===
=== Predecessor ===
v3359 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2335 #trueSuccessor: v118 #falseSuccessor: v124  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4604571713532478778
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList; target_method=toArray target_method_class=Ljava/util/ArrayList; position=at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: a3360 
=== Usages ===
=== Predecessor ===
v125 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a3360  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3360 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList.elementData
nodeSourcePosition: at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 1]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v3415 
=== Succesors ===
next: v3552 
=== Usages ===
v3444 v3552 v3417 v3435 
=== Predecessor ===
v118 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3415 #next: v3552  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3552 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
object: a3360 
=== Succesors ===
next: i3361 
=== Usages ===
=== Predecessor ===
a3360 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: a3360 #next: i3361  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3361 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList.size
nodeSourcePosition: at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 5]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v3416 
=== Succesors ===
next: v1577 
=== Usages ===
j2467 i808 v1571 v1587 i1618 a1807 v1836 i1856 v1848 i1791 
=== Predecessor ===
v3552 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3416 #next: v1577  <|@  <|@
f <@~|@floating>@ <|@
tid v1571 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 22]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:171) [bci: 3]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3361 
y: i13 
=== Succesors ===
=== Usages ===
v1577 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3361 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v1577 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 33]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:171) [bci: 3]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1571 
=== Succesors ===
trueSuccessor: v1576 
falseSuccessor: v1572 
=== Usages ===
=== Predecessor ===
i3361 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1571 #trueSuccessor: v1576 #falseSuccessor: v1572  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B237" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1576 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:187) [bci: 55]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:171) [bci: 3]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1721 
=== Usages ===
=== Predecessor ===
v1577 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1721  <|@  <|@
f <@~|@floating>@ <|@
tid i1722 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -405345
stableDimension: 0
stamp: i32 [-405345] ⇊00000000fff9d09f ⇈00000000fff9d09f
stampKind: i32
value: int[-405345|0xfffffffffff9d09f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1689 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1721 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1686 
=== Predecessor ===
v1576 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4604571713532478778
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1572 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 36]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:171) [bci: 3]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1794 
=== Usages ===
=== Predecessor ===
v1577 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1794  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1794 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1833 
=== Usages ===
v3445 v3446 
=== Predecessor ===
v1572 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1833  <|@  <|@
f <@~|@floating>@ <|@
tid v3445 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1794 
index: - 
=== Succesors ===
=== Usages ===
j1833 v1835 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1794 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1833 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3445 
=== Succesors ===
next: j1834 
=== Usages ===
j1798 v3447 v3448 a1806 v3453 v3449 v3450 v3451 v3452 
=== Predecessor ===
j1794 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3445 #next: j1834  <|@  <|@
f <@~|@floating>@ <|@
tid v3446 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1794 
index: - 
=== Succesors ===
=== Usages ===
j1834 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1794 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1834 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3446 
=== Succesors ===
next: v3362 
=== Usages ===
v1799 
=== Predecessor ===
j1833 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3446 #next: v3362  <|@  <|@
f <@~|@floating>@ <|@
tid v3444 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3360 
=== Succesors ===
=== Usages ===
v3362 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3360  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3362 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.ClassGetHubNode.readClass(Class) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.getComponentType(HotSpotClassSubstitutions.java:120) [bci: 1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 6]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v3444 
=== Succesors ===
next: v1802 
=== Usages ===
v1776 v1840 
=== Predecessor ===
j1834 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3444 #next: v1802  <|@  <|@
f <@~|@floating>@ <|@
tid i1791 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i3361 
y: i912 
=== Succesors ===
=== Usages ===
i1815 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i3361 y: i912  <|@  <|@
f <@~|@floating>@ <|@
tid i1815 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i32 [-2147483645 - 2147483647] ⇊0000000000000003
=== Inputs ===
x: i1791 
y: i1814 
=== Succesors ===
=== Usages ===
i1793 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1791 y: i1814  <|@  <|@
f <@~|@floating>@ <|@
tid i1793 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i1815 
y: i1792 
=== Succesors ===
=== Usages ===
j1797 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i1815 y: i1792  <|@  <|@
f <@~|@floating>@ <|@
tid j1797 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i1793 
=== Succesors ===
=== Usages ===
j1798 v3449 v3450 v3451 v3452 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1793  <|@  <|@
f <@~|@floating>@ <|@
tid j1798 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i64
=== Inputs ===
x: j1797 
y: j1833 
=== Succesors ===
=== Usages ===
v1799 v1835 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1797 y: j1833  <|@  <|@
f <@~|@floating>@ <|@
tid v1799 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1834 
y: j1798 
=== Succesors ===
=== Usages ===
v1802 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1834 y: j1798  <|@  <|@
f <@*|@fixed>@ <|@
tid v1802 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1799 
=== Succesors ===
trueSuccessor: v1800 
falseSuccessor: v1801 
=== Usages ===
=== Predecessor ===
v3362 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1799 #trueSuccessor: v1800 #falseSuccessor: v1801  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4574837534457301975
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1800 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1807 
=== Usages ===
=== Predecessor ===
v1802 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1807  <|@  <|@
f <@~|@floating>@ <|@
tid v1776 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.ClassGetHubNode.readClass(Class) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.getComponentType(HotSpotClassSubstitutions.java:120) [bci: 1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 6]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v3362 
=== Succesors ===
=== Usages ===
a1807 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v3362  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1807 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v1776 i3361 i13 
=== Succesors ===
next: v1810 
=== Usages ===
a1811 
=== Predecessor ===
v1800 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v1776 i3361 i13 #next: v1810  <|@  <|@
f <@*|@fixed>@ <|@
tid v1810 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1809 
=== Predecessor ===
a1807 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4604507748592606754
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1801 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1835 
=== Usages ===
=== Predecessor ===
v1802 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1835  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1835 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3445 
value: j1798 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1820 
=== Usages ===
=== Predecessor ===
v1801 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3445 value: j1798 stateAfter: - lastLocationAccess: - #next: v1820  <|@  <|@
f <@~|@floating>@ <|@
tid v3449 <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j1797 
index: j1833 
=== Succesors ===
=== Usages ===
v1820 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1797 index: j1833  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1820 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
address: v3449 
=== Succesors ===
next: v1823 
=== Usages ===
=== Predecessor ===
v1835 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3449 #next: v1823  <|@  <|@
f <@~|@floating>@ <|@
tid v3450 <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j1797 
index: j1833 
=== Succesors ===
=== Usages ===
v1823 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1797 index: j1833  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1823 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
address: v3450 
=== Succesors ===
next: v1826 
=== Usages ===
=== Predecessor ===
v1820 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3450 #next: v1826  <|@  <|@
f <@~|@floating>@ <|@
tid v3451 <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j1797 
index: j1833 
=== Succesors ===
=== Usages ===
v1826 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1797 index: j1833  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1826 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
address: v3451 
=== Succesors ===
next: v1829 
=== Usages ===
=== Predecessor ===
v1823 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3451 #next: v1829  <|@  <|@
f <@~|@floating>@ <|@
tid v3452 <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j1797 
index: j1833 
=== Succesors ===
=== Usages ===
v1829 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1797 index: j1833  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1829 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
address: v3452 
=== Succesors ===
next: v1836 
=== Usages ===
=== Predecessor ===
v1826 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3452 #next: v1836  <|@  <|@
f <@~|@floating>@ <|@
tid v3447 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1833 
index: - 
=== Succesors ===
=== Usages ===
v1836 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1833 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1836 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3447 
value: i3361 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1837 
=== Usages ===
=== Predecessor ===
v1829 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3447 value: i3361 stateAfter: - lastLocationAccess: - #next: v1837  <|@  <|@
f <@~|@floating>@ <|@
tid v3448 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1833 
index: - 
=== Succesors ===
=== Usages ===
v1837 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1833 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1837 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3448 
value: j1778 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1840 
=== Usages ===
=== Predecessor ===
v1836 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3448 value: j1778 stateAfter: - lastLocationAccess: - #next: v1840  <|@  <|@
f <@~|@floating>@ <|@
tid v3453 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1833 
index: - 
=== Succesors ===
=== Usages ===
v1840 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1833 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1840 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3453 
value: v3362 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1805 
=== Usages ===
=== Predecessor ===
v1837 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3453 value: v3362 stateAfter: - lastLocationAccess: - #next: v1805  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1805 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1806 
=== Usages ===
=== Predecessor ===
v1840 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a1806  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1806 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j1833 
=== Succesors ===
next: v1808 
=== Usages ===
a1811 
=== Predecessor ===
v1805 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1833 #next: v1808  <|@  <|@
f <@*|@fixed>@ <|@
tid v1808 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1809 
=== Predecessor ===
a1806 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4604571713532478778
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a1811 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v1809 
values: a1806 a1807 
=== Succesors ===
=== Usages ===
v3500 a1646 v3440 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1809 values: a1806 a1807  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1809 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1808 v1810 
=== Succesors ===
next: v3077 
=== Usages ===
a1811 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1808 v1810 #next: v3077  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3077 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: i3363 
=== Usages ===
j3078 j3080 
=== Predecessor ===
v1809 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: i3363  <|@  <|@
f <@~|@floating>@ <|@
tid v3417 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3360 
=== Succesors ===
=== Usages ===
i3363 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3360  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3363 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 2]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v3417 
=== Succesors ===
next: v2696 
=== Usages ===
i1618 v1587 
=== Predecessor ===
v3077 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3417 #next: v2696  <|@  <|@
f <@~|@floating>@ <|@
tid v1587 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 4]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:174) [bci: 19]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3363 
y: i3361 
=== Succesors ===
=== Usages ===
i1618 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3363 y: i3361  <|@  <|@
f <@~|@floating>@ <|@
tid i1618 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v1587 
trueValue: i3363 
falseValue: i3361 
=== Succesors ===
=== Usages ===
j2468 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v1587 trueValue: i3363 falseValue: i3361  <|@  <|@
f <@~|@floating>@ <|@
tid j2468 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1618 
=== Succesors ===
=== Usages ===
j3124 v3500 j2472 v2693 v2804 j3113 j3118 j3121 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1618  <|@  <|@
f <@~|@floating>@ <|@
tid v2693 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2468 
y: j1778 
=== Succesors ===
=== Usages ===
v2696 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2468 y: j1778  <|@  <|@
f <@~|@floating>@ <|@
tid v3440 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1811 
index: - 
=== Succesors ===
=== Usages ===
j3080 j1855 j1853 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1811 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v2696 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v2693 
=== Succesors ===
trueSuccessor: v2694 
falseSuccessor: v2695 
=== Usages ===
=== Predecessor ===
i3363 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2693 #trueSuccessor: v2694 #falseSuccessor: v2695  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B22" 
    xhandlers
    flags 
    probability 4600068113905108282
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2694 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2712 
=== Usages ===
=== Predecessor ===
v2696 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2712  <|@  <|@
f <@*|@fixed>@ <|@
tid v2712 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2713 
=== Predecessor ===
v2694 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4600068113905108282
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2695 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2699 
=== Usages ===
=== Predecessor ===
v2696 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2699  <|@  <|@
f <@~|@floating>@ <|@
tid j3113 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j2468 
y: j2845 
=== Succesors ===
=== Usages ===
v3114 v3116 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2468 y: j2845  <|@  <|@
f <@~|@floating>@ <|@
tid v3114 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3113 
y: j1818 
=== Succesors ===
=== Usages ===
v2699 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3113 y: j1818  <|@  <|@
f <@~|@floating>@ <|@
tid j3080 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v3077 
address: v3440 
=== Succesors ===
=== Usages ===
v3537 v3539 v3541 v3543 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v3077 address: v3440  <|@  <|@
f <@~|@floating>@ <|@
tid v3435 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3360 
=== Succesors ===
=== Usages ===
j3078 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3360  <|@  <|@
f <@~|@floating>@ <|@
tid j3078 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v3077 
address: v3435 
=== Succesors ===
=== Usages ===
v3538 v3540 v3542 v3544 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v3077 address: v3435  <|@  <|@
f <@*|@fixed>@ <|@
tid v2699 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v3114 
=== Succesors ===
trueSuccessor: v2697 
falseSuccessor: v2698 
=== Usages ===
=== Predecessor ===
v2695 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3114 #trueSuccessor: v2697 #falseSuccessor: v2698  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    probability 4598468990408307692
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2697 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2708 
=== Usages ===
=== Predecessor ===
v2699 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2708  <|@  <|@
f <@*|@fixed>@ <|@
tid v2708 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2709 
=== Predecessor ===
v2697 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4591060914650367290
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2698 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2700 
=== Usages ===
=== Predecessor ===
v2699 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2700  <|@  <|@
f <@*|@fixed>@ <|@
tid v2700 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2701 
=== Predecessor ===
v2698 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B46" 
    successors "B12" "B46" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4600068113905108282
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3105 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2701 
values: j1818 j3112 
=== Succesors ===
=== Usages ===
v3544 j3112 v3543 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2701 values: j1818 j3112  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2701 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v2700 
=== Succesors ===
next: v3364 
=== Usages ===
v3364 v2704 v2705 j3105 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v2700 #next: v3364  <|@  <|@
f <@~|@floating>@ <|@
tid v3544 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j3078 
index: j3105 
=== Succesors ===
=== Usages ===
v3364 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3078 index: j3105  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3364 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: <n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;>
=== Inputs ===
stateBefore: - 
guard: v2701 
address: v3544 
=== Succesors ===
next: v3238 
=== Usages ===
v3238 
=== Predecessor ===
v2701 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2701 address: v3544 #next: v3238  <|@  <|@
f <@~|@floating>@ <|@
tid v3543 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j3080 
index: j3105 
=== Succesors ===
=== Usages ===
v3238 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3080 index: j3105  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3238 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3543 
value: v3364 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2707 
=== Usages ===
=== Predecessor ===
v3364 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3543 value: v3364 stateAfter: - lastLocationAccess: - #next: v2707  <|@  <|@
f <@~|@floating>@ <|@
tid j3112 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3105 
y: j1770 
=== Succesors ===
=== Usages ===
j3097 j3105 v3116 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3105 y: j1770  <|@  <|@
f <@~|@floating>@ <|@
tid v3116 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3113 
y: j3112 
=== Succesors ===
=== Usages ===
v2707 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3113 y: j3112  <|@  <|@
f <@*|@fixed>@ <|@
tid v2707 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3116 
=== Succesors ===
trueSuccessor: v2704 
falseSuccessor: v2706 
=== Usages ===
=== Predecessor ===
v3238 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3116 #trueSuccessor: v2704 #falseSuccessor: v2706  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4591060914650367290
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2704 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v2701 
=== Succesors ===
next: v2710 
=== Usages ===
=== Predecessor ===
v2707 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v2701 #next: v2710  <|@  <|@
f <@*|@fixed>@ <|@
tid v2710 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2709 
=== Predecessor ===
v2704 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4600068113905108282
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3097 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2709 
values: j1818 j3112 
=== Succesors ===
=== Usages ===
v3542 j3104 j3089 v3119 v3541 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2709 values: j1818 j3112  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2709 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2708 v2710 
=== Succesors ===
next: v2728 
=== Usages ===
j3097 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2708 v2710 #next: v2728  <|@  <|@
f <@~|@floating>@ <|@
tid j3118 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j2468 
y: j2851 
=== Succesors ===
=== Usages ===
v3119 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2468 y: j2851  <|@  <|@
f <@~|@floating>@ <|@
tid v3119 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3118 
y: j3097 
=== Succesors ===
=== Usages ===
v2728 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3118 y: j3097  <|@  <|@
f <@*|@fixed>@ <|@
tid v2728 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3119 
=== Succesors ===
trueSuccessor: v2727 
falseSuccessor: v2726 
=== Usages ===
=== Predecessor ===
v2709 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3119 #trueSuccessor: v2727 #falseSuccessor: v2726  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4591060914650367290
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2727 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2731 
=== Usages ===
=== Predecessor ===
v2728 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2731  <|@  <|@
f <@*|@fixed>@ <|@
tid v2731 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2720 
=== Predecessor ===
v2727 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4598468990408307692
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2726 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3365 
=== Usages ===
v3365 
=== Predecessor ===
v2728 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3365  <|@  <|@
f <@~|@floating>@ <|@
tid v3542 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j3078 
index: j3097 
=== Succesors ===
=== Usages ===
v3365 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3078 index: j3097  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3365 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: <n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;>
=== Inputs ===
stateBefore: - 
guard: v2726 
address: v3542 
=== Succesors ===
next: v3236 
=== Usages ===
v3236 
=== Predecessor ===
v2726 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2726 address: v3542 #next: v3236  <|@  <|@
f <@~|@floating>@ <|@
tid v3541 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j3080 
index: j3097 
=== Succesors ===
=== Usages ===
v3236 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3080 index: j3097  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3236 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3541 
value: v3365 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2719 
=== Usages ===
=== Predecessor ===
v3365 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3541 value: v3365 stateAfter: - lastLocationAccess: - #next: v2719  <|@  <|@
f <@~|@floating>@ <|@
tid j3104 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3097 
y: j2813 
=== Succesors ===
=== Usages ===
j3089 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3097 y: j2813  <|@  <|@
f <@*|@fixed>@ <|@
tid v2719 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2720 
=== Predecessor ===
v3236 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4600068113905108282
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3089 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2720 
values: j3104 j3097 
=== Succesors ===
=== Usages ===
v3540 j3096 j3081 v3122 v3539 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2720 values: j3104 j3097  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2720 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2719 v2731 
=== Succesors ===
next: v2734 
=== Usages ===
j3089 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2719 v2731 #next: v2734  <|@  <|@
f <@~|@floating>@ <|@
tid j3121 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j2468 
y: j2855 
=== Succesors ===
=== Usages ===
v3122 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2468 y: j2855  <|@  <|@
f <@~|@floating>@ <|@
tid v3122 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3121 
y: j3089 
=== Succesors ===
=== Usages ===
v2734 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3121 y: j3089  <|@  <|@
f <@*|@fixed>@ <|@
tid v2734 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3122 
=== Succesors ===
trueSuccessor: v2733 
falseSuccessor: v2732 
=== Usages ===
=== Predecessor ===
v2720 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3122 #trueSuccessor: v2733 #falseSuccessor: v2732  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4591060914650367290
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2733 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2737 
=== Usages ===
=== Predecessor ===
v2734 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2737  <|@  <|@
f <@*|@fixed>@ <|@
tid v2737 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2723 
=== Predecessor ===
v2733 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4598468990408307692
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2732 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3366 
=== Usages ===
v3366 
=== Predecessor ===
v2734 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3366  <|@  <|@
f <@~|@floating>@ <|@
tid v3540 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j3078 
index: j3089 
=== Succesors ===
=== Usages ===
v3366 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3078 index: j3089  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3366 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: <n Ljava/lang/Object;,n Ljava/lang/Object;>
=== Inputs ===
stateBefore: - 
guard: v2732 
address: v3540 
=== Succesors ===
next: v3234 
=== Usages ===
v3234 
=== Predecessor ===
v2732 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2732 address: v3540 #next: v3234  <|@  <|@
f <@~|@floating>@ <|@
tid v3539 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j3080 
index: j3089 
=== Succesors ===
=== Usages ===
v3234 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3080 index: j3089  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3234 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3539 
value: v3366 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2722 
=== Usages ===
=== Predecessor ===
v3366 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3539 value: v3366 stateAfter: - lastLocationAccess: - #next: v2722  <|@  <|@
f <@~|@floating>@ <|@
tid j3096 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3089 
y: j2827 
=== Succesors ===
=== Usages ===
j3081 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3089 y: j2827  <|@  <|@
f <@*|@fixed>@ <|@
tid v2722 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2723 
=== Predecessor ===
v3234 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4600068113905108282
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3081 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2723 
values: j3096 j3089 
=== Succesors ===
=== Usages ===
v3538 v3125 v3537 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2723 values: j3096 j3089  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2723 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2722 v2737 
=== Succesors ===
next: v2740 
=== Usages ===
j3081 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2722 v2737 #next: v2740  <|@  <|@
f <@~|@floating>@ <|@
tid j3124 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j2468 
y: j1188 
=== Succesors ===
=== Usages ===
v3125 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2468 y: j1188  <|@  <|@
f <@~|@floating>@ <|@
tid v3125 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3124 
y: j3081 
=== Succesors ===
=== Usages ===
v2740 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3124 y: j3081  <|@  <|@
f <@*|@fixed>@ <|@
tid v2740 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3125 
=== Succesors ===
trueSuccessor: v2739 
falseSuccessor: v2738 
=== Usages ===
=== Predecessor ===
v2723 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3125 #trueSuccessor: v2739 #falseSuccessor: v2738  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4591060914650367290
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2739 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2743 
=== Usages ===
=== Predecessor ===
v2740 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2743  <|@  <|@
f <@*|@fixed>@ <|@
tid v2743 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2713 
=== Predecessor ===
v2739 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4598468990408307692
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2738 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a3367 
=== Usages ===
a3367 
=== Predecessor ===
v2740 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a3367  <|@  <|@
f <@~|@floating>@ <|@
tid v3538 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j3078 
index: j3081 
=== Succesors ===
=== Usages ===
a3367 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3078 index: j3081  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3367 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v2738 
address: v3538 
=== Succesors ===
next: v3232 
=== Usages ===
v3232 
=== Predecessor ===
v2738 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2738 address: v3538 #next: v3232  <|@  <|@
f <@~|@floating>@ <|@
tid v3537 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j3080 
index: j3081 
=== Succesors ===
=== Usages ===
v3232 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3080 index: j3081  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3232 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3537 
value: a3367 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2725 
=== Usages ===
=== Predecessor ===
a3367 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3537 value: a3367 stateAfter: - lastLocationAccess: - #next: v2725  <|@  <|@
f <@*|@fixed>@ <|@
tid v2725 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2713 
=== Predecessor ===
v3232 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B7" "B21" "B20" 
    successors "B23" "B38" 
    xhandlers
    flags 
    probability 4604571713532478778
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2713 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2712 v2725 v2743 
=== Succesors ===
next: v3128 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2712 v2725 v2743 #next: v3128  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3128 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v2750 
=== Usages ===
j3130 
=== Predecessor ===
v2713 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v2750  <|@  <|@
f <@~|@floating>@ <|@
tid j2467 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i3361 
=== Succesors ===
=== Usages ===
j2472 v2804 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i3361  <|@  <|@
f <@~|@floating>@ <|@
tid v2804 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2468 
y: j2467 
=== Succesors ===
=== Usages ===
v2750 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2468 y: j2467  <|@  <|@
f <@*|@fixed>@ <|@
tid v2750 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v2804 
=== Succesors ===
trueSuccessor: v2749 
falseSuccessor: v2748 
=== Usages ===
=== Predecessor ===
v3128 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2804 #trueSuccessor: v2749 #falseSuccessor: v2748  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4600068113905108282
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2749 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2753 
=== Usages ===
=== Predecessor ===
v2750 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2753  <|@  <|@
f <@~|@floating>@ <|@
tid v3500 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1811 
index: j2468 
=== Succesors ===
=== Usages ===
j3130 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1811 index: j2468  <|@  <|@
f <@~|@floating>@ <|@
tid j3130 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v3128 
address: v3500 
=== Succesors ===
=== Usages ===
v3545 v3546 v3547 v3548 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v3128 address: v3500  <|@  <|@
f <@~|@floating>@ <|@
tid j2472 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j2467 
y: j2468 
=== Succesors ===
=== Usages ===
j3166 j3155 j3160 j3163 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j2467 y: j2468  <|@  <|@
f <@~|@floating>@ <|@
tid j3155 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967303 - 4294967287]
=== Inputs ===
x: j2472 
y: j2845 
=== Succesors ===
=== Usages ===
v3156 v3158 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2472 y: j2845  <|@  <|@
f <@~|@floating>@ <|@
tid v3156 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3155 
y: j1818 
=== Succesors ===
=== Usages ===
v2753 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3155 y: j1818  <|@  <|@
f <@*|@fixed>@ <|@
tid v2753 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v3156 
=== Succesors ===
trueSuccessor: v2751 
falseSuccessor: v2752 
=== Usages ===
=== Predecessor ===
v2749 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3156 #trueSuccessor: v2751 #falseSuccessor: v2752  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 4598468990408307692
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2751 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2762 
=== Usages ===
=== Predecessor ===
v2753 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2762  <|@  <|@
f <@*|@fixed>@ <|@
tid v2762 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2763 
=== Predecessor ===
v2751 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4591060914650367290
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2752 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2754 
=== Usages ===
=== Predecessor ===
v2753 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2754  <|@  <|@
f <@*|@fixed>@ <|@
tid v2754 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2755 
=== Predecessor ===
v2752 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B37" 
    successors "B27" "B37" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4600068113905108282
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3149 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2755 
values: j1818 j3154 
=== Succesors ===
=== Usages ===
v3548 j3154 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2755 values: j1818 j3154  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2755 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v2754 
=== Succesors ===
next: v3242 
=== Usages ===
j3149 v2758 v2759 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v2754 #next: v3242  <|@  <|@
f <@~|@floating>@ <|@
tid v3548 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j3130 
index: j3149 
=== Succesors ===
=== Usages ===
v3242 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3130 index: j3149  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3242 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3548 
value: v3243 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2761 
=== Usages ===
=== Predecessor ===
v2755 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3548 value: v3243 stateAfter: - lastLocationAccess: - #next: v2761  <|@  <|@
f <@~|@floating>@ <|@
tid j3154 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3149 
y: j1770 
=== Succesors ===
=== Usages ===
j3143 j3149 v3158 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3149 y: j1770  <|@  <|@
f <@~|@floating>@ <|@
tid v3158 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3155 
y: j3154 
=== Succesors ===
=== Usages ===
v2761 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3155 y: j3154  <|@  <|@
f <@*|@fixed>@ <|@
tid v2761 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3158 
=== Succesors ===
trueSuccessor: v2758 
falseSuccessor: v2760 
=== Usages ===
=== Predecessor ===
v3242 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3158 #trueSuccessor: v2758 #falseSuccessor: v2760  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    probability 4591060914650367290
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2758 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v2755 
=== Succesors ===
next: v2764 
=== Usages ===
=== Predecessor ===
v2761 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v2755 #next: v2764  <|@  <|@
f <@*|@fixed>@ <|@
tid v2764 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2763 
=== Predecessor ===
v2758 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B24" "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4600068113905108282
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3143 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2763 
values: j1818 j3154 
=== Succesors ===
=== Usages ===
v3547 j3148 j3137 v3161 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2763 values: j1818 j3154  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2763 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2762 v2764 
=== Succesors ===
next: v2782 
=== Usages ===
j3143 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2762 v2764 #next: v2782  <|@  <|@
f <@~|@floating>@ <|@
tid j3160 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967299 - 4294967291]
=== Inputs ===
x: j2472 
y: j2851 
=== Succesors ===
=== Usages ===
v3161 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2472 y: j2851  <|@  <|@
f <@~|@floating>@ <|@
tid v3161 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3160 
y: j3143 
=== Succesors ===
=== Usages ===
v2782 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3160 y: j3143  <|@  <|@
f <@*|@fixed>@ <|@
tid v2782 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3161 
=== Succesors ===
trueSuccessor: v2781 
falseSuccessor: v2780 
=== Usages ===
=== Predecessor ===
v2763 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3161 #trueSuccessor: v2781 #falseSuccessor: v2780  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4591060914650367290
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2781 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2785 
=== Usages ===
=== Predecessor ===
v2782 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2785  <|@  <|@
f <@*|@fixed>@ <|@
tid v2785 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2774 
=== Predecessor ===
v2781 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4598468990408307692
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2780 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3241 
=== Usages ===
=== Predecessor ===
v2782 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3241  <|@  <|@
f <@~|@floating>@ <|@
tid v3547 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j3130 
index: j3143 
=== Succesors ===
=== Usages ===
v3241 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3130 index: j3143  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3241 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3547 
value: v3246 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2773 
=== Usages ===
=== Predecessor ===
v2780 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3547 value: v3246 stateAfter: - lastLocationAccess: - #next: v2773  <|@  <|@
f <@~|@floating>@ <|@
tid j3148 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3143 
y: j2813 
=== Succesors ===
=== Usages ===
j3137 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3143 y: j2813  <|@  <|@
f <@*|@fixed>@ <|@
tid v2773 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2774 
=== Predecessor ===
v3241 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4600068113905108282
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3137 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2774 
values: j3148 j3143 
=== Succesors ===
=== Usages ===
v3546 j3142 j3131 v3164 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2774 values: j3148 j3143  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2774 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2773 v2785 
=== Succesors ===
next: v2788 
=== Usages ===
j3137 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2773 v2785 #next: v2788  <|@  <|@
f <@~|@floating>@ <|@
tid j3163 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j2472 
y: j2855 
=== Succesors ===
=== Usages ===
v3164 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2472 y: j2855  <|@  <|@
f <@~|@floating>@ <|@
tid v3164 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3163 
y: j3137 
=== Succesors ===
=== Usages ===
v2788 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3163 y: j3137  <|@  <|@
f <@*|@fixed>@ <|@
tid v2788 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3164 
=== Succesors ===
trueSuccessor: v2787 
falseSuccessor: v2786 
=== Usages ===
=== Predecessor ===
v2774 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3164 #trueSuccessor: v2787 #falseSuccessor: v2786  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4591060914650367290
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2787 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2791 
=== Usages ===
=== Predecessor ===
v2788 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2791  <|@  <|@
f <@*|@fixed>@ <|@
tid v2791 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2777 
=== Predecessor ===
v2787 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4598468990408307692
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2786 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3240 
=== Usages ===
=== Predecessor ===
v2788 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3240  <|@  <|@
f <@~|@floating>@ <|@
tid v3546 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j3130 
index: j3137 
=== Succesors ===
=== Usages ===
v3240 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3130 index: j3137  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3240 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3546 
value: v3245 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2776 
=== Usages ===
=== Predecessor ===
v2786 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3546 value: v3245 stateAfter: - lastLocationAccess: - #next: v2776  <|@  <|@
f <@~|@floating>@ <|@
tid j3142 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3137 
y: j2827 
=== Succesors ===
=== Usages ===
j3131 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3137 y: j2827  <|@  <|@
f <@*|@fixed>@ <|@
tid v2776 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2777 
=== Predecessor ===
v3240 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4600068113905108282
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3131 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2777 
values: j3142 j3137 
=== Succesors ===
=== Usages ===
v3545 v3167 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2777 values: j3142 j3137  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2777 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2776 v2791 
=== Succesors ===
next: v2794 
=== Usages ===
j3131 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2776 v2791 #next: v2794  <|@  <|@
f <@~|@floating>@ <|@
tid j3166 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j2472 
y: j1188 
=== Succesors ===
=== Usages ===
v3167 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2472 y: j1188  <|@  <|@
f <@~|@floating>@ <|@
tid v3167 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3166 
y: j3131 
=== Succesors ===
=== Usages ===
v2794 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3166 y: j3131  <|@  <|@
f <@*|@fixed>@ <|@
tid v2794 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3167 
=== Succesors ===
trueSuccessor: v2793 
falseSuccessor: v2792 
=== Usages ===
=== Predecessor ===
v2777 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3167 #trueSuccessor: v2793 #falseSuccessor: v2792  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B39" 
    xhandlers
    flags 
    probability 4591060914650367290
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2793 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2797 
=== Usages ===
=== Predecessor ===
v2794 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2797  <|@  <|@
f <@*|@fixed>@ <|@
tid v2797 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2767 
=== Predecessor ===
v2793 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B39" 
    xhandlers
    flags 
    probability 4598468990408307692
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2792 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3239 
=== Usages ===
=== Predecessor ===
v2794 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3239  <|@  <|@
f <@~|@floating>@ <|@
tid v3545 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j3130 
index: j3131 
=== Succesors ===
=== Usages ===
v3239 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3130 index: j3131  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3239 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3545 
value: a3244 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2779 
=== Usages ===
=== Predecessor ===
v2792 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3545 value: a3244 stateAfter: - lastLocationAccess: - #next: v2779  <|@  <|@
f <@*|@fixed>@ <|@
tid v2779 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2767 
=== Predecessor ===
v3239 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4598468990408307692
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2760 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2759 
=== Usages ===
=== Predecessor ===
v2761 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2759  <|@  <|@
f <@*|@fixed>@ <|@
tid v2759 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v2755 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2760 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v2755  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B39" 
    xhandlers
    flags 
    probability 4600068113905108282
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2748 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2766 
=== Usages ===
=== Predecessor ===
v2750 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2766  <|@  <|@
f <@*|@fixed>@ <|@
tid v2766 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2767 
=== Predecessor ===
v2748 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B36" "B35" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4604571713532478778
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2767 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2766 v2779 v2797 
=== Succesors ===
next: v1851 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2766 v2779 v2797 #next: v1851  <|@  <|@
f <@~|@floating>@ <|@
tid v1848 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:154) [bci: 1]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3361 
y: i13 
=== Succesors ===
=== Usages ===
v1851 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i3361 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v1851 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:154) [bci: 1]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1848 
=== Succesors ===
trueSuccessor: v1849 
falseSuccessor: v1850 
=== Usages ===
=== Predecessor ===
v2767 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1848 #trueSuccessor: v1849 #falseSuccessor: v1850  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    probability 4600068113905108282
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1849 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:155) [bci: 4]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1877 
=== Usages ===
=== Predecessor ===
v1851 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1877  <|@  <|@
f <@*|@fixed>@ <|@
tid v1877 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1876 
=== Predecessor ===
v1849 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4600068113905108282
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1850 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:157) [bci: 5]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1853 
=== Usages ===
=== Predecessor ===
v1851 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1853  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1853 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToFirstArrayElement(WriteBarrierSnippets.java:376) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:159) [bci: 20]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v3440 
=== Succesors ===
next: j1855 
=== Usages ===
j1854 
=== Predecessor ===
v1850 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v3440 #next: j1855  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1855 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:385) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v3440 
=== Succesors ===
next: v1863 
=== Usages ===
j1859 
=== Predecessor ===
j1853 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v3440 #next: v1863  <|@  <|@
f <@~|@floating>@ <|@
tid i1856 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i32
=== Inputs ===
x: i3361 
y: i632 
=== Succesors ===
=== Usages ===
i1857 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i3361 y: i632  <|@  <|@
f <@~|@floating>@ <|@
tid i1857 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i1856 
y: i912 
=== Succesors ===
=== Usages ===
j1858 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i1856 y: i912  <|@  <|@
f <@~|@floating>@ <|@
tid j1858 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 26]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
resultBits: 64
stamp: i64 [-2147483648 - 2147483644] ⇈fffffffffffffffc
=== Inputs ===
value: i1857 
=== Succesors ===
=== Usages ===
j1859 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1857  <|@  <|@
f <@~|@floating>@ <|@
tid j1859 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 27]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i64
=== Inputs ===
x: j1855 
y: j1858 
=== Succesors ===
=== Usages ===
j1860 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1855 y: j1858  <|@  <|@
f <@~|@floating>@ <|@
tid j1860 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 34]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1859 
y: i1852 
=== Succesors ===
=== Usages ===
j1861 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1859 y: i1852  <|@  <|@
f <@~|@floating>@ <|@
tid j1854 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:159) [bci: 24]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1853 
y: i1852 
=== Succesors ===
=== Usages ===
j1861 j1875 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1853 y: i1852  <|@  <|@
f <@~|@floating>@ <|@
tid j1861 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:161) [bci: 41]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i64 [-36028797018963967 - 36028797018963967]
=== Inputs ===
x: j1860 
y: j1854 
=== Succesors ===
=== Usages ===
j1862 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j1860 y: j1854  <|@  <|@
f <@~|@floating>@ <|@
tid j1862 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:161) [bci: 43]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i64 [-36028797018963966 - 36028797018963968]
=== Inputs ===
x: j1861 
y: j1778 
=== Succesors ===
=== Usages ===
j1865 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1861 y: j1778  <|@  <|@
f <@*|@fixed>@ <|@
tid v1863 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1864 
=== Predecessor ===
j1855 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B45" 
    successors "B43" "B45" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4604571713532478778
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1865 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1864 
values: j1862 j1866 
=== Succesors ===
=== Usages ===
j1866 v1867 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1864 values: j1862 j1866  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1864 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 2.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v1863 
=== Succesors ===
next: v1870 
=== Usages ===
j1865 v1868 v1873 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v1863 #next: v1870  <|@  <|@
f <@~|@floating>@ <|@
tid v1867 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 55]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1865 
y: j1778 
=== Succesors ===
=== Usages ===
v1870 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1865 y: j1778  <|@  <|@
f <@*|@fixed>@ <|@
tid v1870 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 55]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1867 
=== Succesors ===
trueSuccessor: v1868 
falseSuccessor: v1869 
=== Usages ===
=== Predecessor ===
v1864 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1867 #trueSuccessor: v1868 #falseSuccessor: v1869  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" 
    xhandlers
    flags 
    probability 4600068113905108282
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1868 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:165) [bci: 76]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v1864 
=== Succesors ===
next: v1878 
=== Usages ===
=== Predecessor ===
v1870 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v1864 #next: v1878  <|@  <|@
f <@*|@fixed>@ <|@
tid v1878 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1876 
=== Predecessor ===
v1868 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B40" "B43" 
    successors "B239" 
    xhandlers
    flags 
    probability 4604571713532478778
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1876 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1877 v1878 
=== Succesors ===
next: a1646 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1877 v1878 #next: a1646  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1646 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a1811 
=== Succesors ===
next: v807 
=== Usages ===
a1174 
=== Predecessor ===
v1876 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1811 #next: v807  <|@  <|@
f <@*|@fixed>@ <|@
tid v807 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v805 
=== Predecessor ===
a1646 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B42" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4600068113905108282
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1869 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 58]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1872 
=== Usages ===
=== Predecessor ===
v1870 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1872  <|@  <|@
f <@~|@floating>@ <|@
tid j1866 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 50]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i64
=== Inputs ===
x: j1865 
y: j1188 
=== Succesors ===
=== Usages ===
j1865 j1871 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1865 y: j1188  <|@  <|@
f <@~|@floating>@ <|@
tid j1875 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 62]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i64 [4682670080 - 36028801701634047] ⇈00ffffffffffffff
=== Inputs ===
x: j1854 
y: j1874 
=== Succesors ===
=== Usages ===
j1871 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1854 y: j1874  <|@  <|@
f <@~|@floating>@ <|@
tid j1871 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 65]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i64
=== Inputs ===
x: j1866 
y: j1875 
=== Succesors ===
=== Usages ===
v1872 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1866 y: j1875  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1872 <|@
d <@d|@=== Debug Properties ===
kind: boolean
nodeSourcePosition: at org.graalvm.compiler.replacements.nodes.DirectStoreNode.storeBoolean(long, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 70]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
address: j1871 
value: i13 
=== Succesors ===
next: v1873 
=== Usages ===
=== Predecessor ===
v1869 >@ <|@
instruction <@DirectStore|@org.graalvm.compiler.replacements.nodes.DirectStoreNode>@ address: j1871 value: i13 #next: v1873  <|@  <|@
f <@*|@fixed>@ <|@
tid v1873 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
loopBegin: v1864 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1872 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v1864  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4598468990408307692
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2706 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2705 
=== Usages ===
=== Predecessor ===
v2707 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2705  <|@  <|@
f <@*|@fixed>@ <|@
tid v2705 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v2701 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2706 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v2701  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B48" "B199" 
    xhandlers
    flags 
    probability 4598893030452983180
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v205 
=== Usages ===
=== Predecessor ===
v125 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v205  <|@  <|@
f <@~|@floating>@ <|@
tid v2336 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
rawvalue: meta{HotSpotType<Ljava/util/RandomAccessSubList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/RandomAccessSubList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2337 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2337 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v3359 
y: v2336 
=== Succesors ===
=== Usages ===
v205 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v3359 y: v2336  <|@  <|@
f <@~|@floating>@ <|@
tid v1880 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
rawvalue: meta{HotSpotType<[Ljava/lang/Object;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[Ljava/lang/Object;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a1904 a2058 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2340 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
rawvalue: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1927 v2081 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1888 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 48]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1889 v2043 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v205 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/RandomAccessSubList; target_method=toArray target_method_class=Ljava/util/AbstractCollection; position=at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
trueSuccessorProbability: 0.5054073948247549
=== Inputs ===
condition: v2337 
=== Succesors ===
trueSuccessor: v201 
falseSuccessor: v154 
=== Usages ===
=== Predecessor ===
v124 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2337 #trueSuccessor: v201 #falseSuccessor: v154  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B198" 
    xhandlers
    flags 
    probability 4594445899282223279
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v201 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/RandomAccessSubList; target_method=toArray target_method_class=Ljava/util/AbstractCollection; position=at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: a3368 
=== Usages ===
=== Predecessor ===
v205 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a3368  <|@  <|@
f <@~|@floating>@ <|@
tid v3419 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a3368 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3368 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList.l
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 5]
at java.util.SubList.size(AbstractList.java:645) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 1]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
nullCheck: false
stamp: n Ljava/util/AbstractList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v3419 
=== Succesors ===
next: i3369 
=== Usages ===
a878 v3463 v3421 v3423 v3425 a3556 
=== Predecessor ===
v201 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3419 #next: i3369  <|@  <|@
f <@~|@floating>@ <|@
tid v3425 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3368 
=== Succesors ===
=== Usages ===
i3391 i3369 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3368  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3369 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 8]
at java.util.SubList.size(AbstractList.java:645) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 1]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v3425 
=== Succesors ===
next: i3370 
=== Usages ===
v290 ?661 ?781 v764 
=== Predecessor ===
a3368 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v3425 #next: i3370  <|@  <|@
f <@~|@floating>@ <|@
tid v3418 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i3370 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3370 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 1]
at java.util.SubList.size(AbstractList.java:645) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 1]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v3418 
=== Succesors ===
next: v1300 
=== Usages ===
v290 
=== Predecessor ===
i3369 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3418 #next: v1300  <|@  <|@
f <@~|@floating>@ <|@
tid v290 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 11]
at java.util.SubList.size(AbstractList.java:645) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 1]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3369 
y: i3370 
=== Succesors ===
=== Usages ===
v1300 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i3369 y: i3370  <|@  <|@
f <@*|@fixed>@ <|@
tid v1300 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 11]
at java.util.SubList.size(AbstractList.java:645) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 1]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v290 
=== Succesors ===
trueSuccessor: v1297 
falseSuccessor: v1299 
=== Usages ===
=== Predecessor ===
i3370 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v290 #trueSuccessor: v1297 #falseSuccessor: v1299  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4594445899282223279
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1297 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 11]
at java.util.SubList.size(AbstractList.java:645) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 1]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: i3371 
=== Usages ===
=== Predecessor ===
v1300 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i3371  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3371 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList.size
nodeSourcePosition: at java.util.SubList.size(AbstractList.java:646) [bci: 5]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 1]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v3415 
=== Succesors ===
next: v1304 
=== Usages ===
v218 a1904 v300 v672 v740 i808 v1267 v1262 j1185 v1889 i1881 v1923 i2005 
=== Predecessor ===
v1297 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3415 #next: v1304  <|@  <|@
f <@~|@floating>@ <|@
tid v300 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.SubList.rangeCheckForAdd(AbstractList.java:759) [bci: 9]
at java.util.SubList.listIterator(AbstractList.java:696) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3371 
y: i13 
=== Succesors ===
=== Usages ===
v1304 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3371 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v1304 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.SubList.rangeCheckForAdd(AbstractList.java:759) [bci: 9]
at java.util.SubList.listIterator(AbstractList.java:696) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v300 
=== Succesors ===
trueSuccessor: v1303 
falseSuccessor: v1301 
=== Usages ===
=== Predecessor ===
i3371 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v300 #trueSuccessor: v1303 #falseSuccessor: v1301  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B237" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1303 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.SubList.rangeCheckForAdd(AbstractList.java:759) [bci: 9]
at java.util.SubList.listIterator(AbstractList.java:696) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1698 
=== Usages ===
=== Predecessor ===
v1304 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1698  <|@  <|@
f <@~|@floating>@ <|@
tid i1699 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -227859
stableDimension: 0
stamp: i32 [-227859] ⇊00000000fffc85ed ⇈00000000fffc85ed
stampKind: i32
value: int[-227859|0xfffffffffffc85ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1689 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1698 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1686 
=== Predecessor ===
v1303 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4594445899282223279
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1301 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.SubList.rangeCheckForAdd(AbstractList.java:759) [bci: 9]
at java.util.SubList.listIterator(AbstractList.java:696) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: i3372 
=== Usages ===
=== Predecessor ===
v1304 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i3372  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3372 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList.offset
nodeSourcePosition: at java.util.SubList.access$000(AbstractList.java:613) [bci: 1]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 30]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v3416 
=== Succesors ===
next: v1308 
=== Usages ===
i654 v578 j1187 v573 v819 v832 i717 i779 v1222 v1201 
=== Predecessor ===
v1301 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3416 #next: v1308  <|@  <|@
f <@~|@floating>@ <|@
tid v573 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3372 
y: i13 
=== Succesors ===
=== Usages ===
v1308 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3372 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v1308 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v573 
=== Succesors ===
trueSuccessor: v1307 
falseSuccessor: v1305 
=== Usages ===
=== Predecessor ===
i3372 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v573 #trueSuccessor: v1307 #falseSuccessor: v1305  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B237" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1307 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1707 
=== Usages ===
=== Predecessor ===
v1308 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1707  <|@  <|@
f <@~|@floating>@ <|@
tid i1708 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -229907
stableDimension: 0
stamp: i32 [-229907] ⇊00000000fffc7ded ⇈00000000fffc7ded
stampKind: i32
value: int[-229907|0xfffffffffffc7ded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1689 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1707 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1686 
=== Predecessor ===
v1307 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B57" 
    xhandlers
    flags 
    probability 4594445899282223279
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1305 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1883 
=== Usages ===
=== Predecessor ===
v1308 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1883  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1883 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1920 
=== Usages ===
v3454 v3455 
=== Predecessor ===
v1305 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1920  <|@  <|@
f <@~|@floating>@ <|@
tid v3454 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1883 
index: - 
=== Succesors ===
=== Usages ===
j1920 v1922 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1883 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1920 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3454 
=== Succesors ===
next: j1921 
=== Usages ===
j1887 v3456 v3457 a1903 v3462 v3458 v3459 v3460 v3461 
=== Predecessor ===
j1883 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3454 #next: j1921  <|@  <|@
f <@~|@floating>@ <|@
tid v3455 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1883 
index: - 
=== Succesors ===
=== Usages ===
j1921 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1883 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1921 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3455 
=== Succesors ===
next: v1892 
=== Usages ===
v1893 
=== Predecessor ===
j1920 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3455 #next: v1892  <|@  <|@
f <@~|@floating>@ <|@
tid v1889 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3371 
y: i1888 
=== Succesors ===
=== Usages ===
v1892 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i3371 y: i1888  <|@  <|@
f <@*|@fixed>@ <|@
tid v1892 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v1889 
=== Succesors ===
trueSuccessor: v1891 
falseSuccessor: v1890 
=== Usages ===
=== Predecessor ===
j1921 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1889 #trueSuccessor: v1891 #falseSuccessor: v1890  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4593918111383054494
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1891 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1899 
=== Usages ===
=== Predecessor ===
v1892 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1899  <|@  <|@
f <@~|@floating>@ <|@
tid i1881 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i3371 
y: i912 
=== Succesors ===
=== Usages ===
i1911 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i3371 y: i912  <|@  <|@
f <@~|@floating>@ <|@
tid i1911 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i32 [-2147483645 - 2147483647] ⇊0000000000000003
=== Inputs ===
x: i1881 
y: i1814 
=== Succesors ===
=== Usages ===
i1882 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1881 y: i1814  <|@  <|@
f <@~|@floating>@ <|@
tid i1882 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i1911 
y: i1792 
=== Succesors ===
=== Usages ===
j1886 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i1911 y: i1792  <|@  <|@
f <@~|@floating>@ <|@
tid j1886 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i1882 
=== Succesors ===
=== Usages ===
j1887 v3458 v3459 v3460 v3461 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1882  <|@  <|@
f <@~|@floating>@ <|@
tid j1887 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i64
=== Inputs ===
x: j1886 
y: j1920 
=== Succesors ===
=== Usages ===
v1893 v1922 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1886 y: j1920  <|@  <|@
f <@~|@floating>@ <|@
tid v1893 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1921 
y: j1887 
=== Succesors ===
=== Usages ===
v1899 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1921 y: j1887  <|@  <|@
f <@*|@fixed>@ <|@
tid v1899 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1893 
=== Succesors ===
trueSuccessor: v1898 
falseSuccessor: v1897 
=== Usages ===
=== Predecessor ===
v1891 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1893 #trueSuccessor: v1898 #falseSuccessor: v1897  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B58" 
    xhandlers
    flags 
    probability 4563722939497366367
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1898 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1896 
=== Usages ===
=== Predecessor ===
v1899 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1896  <|@  <|@
f <@*|@fixed>@ <|@
tid v1896 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1895 
=== Predecessor ===
v1898 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B59" 
    xhandlers
    flags 
    probability 4593870610472129303
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1897 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1922 
=== Usages ===
=== Predecessor ===
v1899 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1922  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1922 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3454 
value: j1887 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1913 
=== Usages ===
=== Predecessor ===
v1897 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3454 value: j1887 stateAfter: - lastLocationAccess: - #next: v1913  <|@  <|@
f <@~|@floating>@ <|@
tid v3458 <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j1886 
index: j1920 
=== Succesors ===
=== Usages ===
v1913 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1886 index: j1920  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1913 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
address: v3458 
=== Succesors ===
next: v1915 
=== Usages ===
=== Predecessor ===
v1922 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3458 #next: v1915  <|@  <|@
f <@~|@floating>@ <|@
tid v3459 <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j1886 
index: j1920 
=== Succesors ===
=== Usages ===
v1915 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1886 index: j1920  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1915 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
address: v3459 
=== Succesors ===
next: v1917 
=== Usages ===
=== Predecessor ===
v1913 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3459 #next: v1917  <|@  <|@
f <@~|@floating>@ <|@
tid v3460 <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j1886 
index: j1920 
=== Succesors ===
=== Usages ===
v1917 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1886 index: j1920  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1917 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
address: v3460 
=== Succesors ===
next: v1919 
=== Usages ===
=== Predecessor ===
v1915 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3460 #next: v1919  <|@  <|@
f <@~|@floating>@ <|@
tid v3461 <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j1886 
index: j1920 
=== Succesors ===
=== Usages ===
v1919 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1886 index: j1920  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1919 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
address: v3461 
=== Succesors ===
next: v1923 
=== Usages ===
=== Predecessor ===
v1917 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3461 #next: v1923  <|@  <|@
f <@~|@floating>@ <|@
tid v3456 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1920 
index: - 
=== Succesors ===
=== Usages ===
v1923 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1920 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1923 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3456 
value: i3371 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1924 
=== Usages ===
=== Predecessor ===
v1919 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3456 value: i3371 stateAfter: - lastLocationAccess: - #next: v1924  <|@  <|@
f <@~|@floating>@ <|@
tid v3457 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1920 
index: - 
=== Succesors ===
=== Usages ===
v1924 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1920 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1924 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3457 
value: j1778 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1927 
=== Usages ===
=== Predecessor ===
v1923 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3457 value: j1778 stateAfter: - lastLocationAccess: - #next: v1927  <|@  <|@
f <@~|@floating>@ <|@
tid v3462 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1920 
index: - 
=== Succesors ===
=== Usages ===
v1927 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1920 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1927 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3462 
value: v2340 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1902 
=== Usages ===
=== Predecessor ===
v1924 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3462 value: v2340 stateAfter: - lastLocationAccess: - #next: v1902  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1902 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1903 
=== Usages ===
=== Predecessor ===
v1927 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a1903  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1903 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j1920 
=== Succesors ===
next: v1905 
=== Usages ===
a1908 
=== Predecessor ===
v1902 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1920 #next: v1905  <|@  <|@
f <@*|@fixed>@ <|@
tid v1905 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1906 
=== Predecessor ===
a1903 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B58" 
    xhandlers
    flags 
    probability 4579598228167754006
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1890 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1894 
=== Usages ===
=== Predecessor ===
v1892 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1894  <|@  <|@
f <@*|@fixed>@ <|@
tid v1894 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1895 
=== Predecessor ===
v1890 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B55" 
    successors "B59" 
    xhandlers
    flags 
    probability 4580259531889175745
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1895 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1894 v1896 
=== Succesors ===
next: a1904 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1894 v1896 #next: a1904  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1904 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v1880 i3371 i13 
=== Succesors ===
next: v1907 
=== Usages ===
a1908 
=== Predecessor ===
v1895 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v1880 i3371 i13 #next: v1907  <|@  <|@
f <@*|@fixed>@ <|@
tid v1907 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1906 
=== Predecessor ===
a1904 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4594445899282223279
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a1908 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v1906 
values: a1903 a1904 
=== Succesors ===
=== Usages ===
v3441 a1650 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1906 values: a1903 a1904  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1906 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1905 v1907 
=== Succesors ===
next: v2907 
=== Usages ===
a1908 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1905 v1907 #next: v2907  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2907 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v2480 
=== Usages ===
j2909 
=== Predecessor ===
v1906 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v2480  <|@  <|@
f <@~|@floating>@ <|@
tid v3441 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1908 
index: - 
=== Succesors ===
=== Usages ===
j2909 j1941 j1939 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1908 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1185 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i3371 
=== Succesors ===
=== Usages ===
j1189 v1207 j2856 j2846 j2852 v3357 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i3371  <|@  <|@
f <@~|@floating>@ <|@
tid j1189 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j1185 
y: j1188 
=== Succesors ===
=== Usages ===
j1190 v1207 v2859 v2904 v2940 v3357 j3358 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1185 y: j1188  <|@  <|@
f <@~|@floating>@ <|@
tid j2856 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j1185 
y: j2855 
=== Succesors ===
=== Usages ===
v2857 v2902 v2938 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1185 y: j2855  <|@  <|@
f <@~|@floating>@ <|@
tid j2852 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j1185 
y: j2851 
=== Succesors ===
=== Usages ===
v2853 v2900 v2936 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1185 y: j2851  <|@  <|@
f <@~|@floating>@ <|@
tid j2846 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j1185 
y: j2845 
=== Succesors ===
=== Usages ===
v2847 v2849 v2898 v2934 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1185 y: j2845  <|@  <|@
f <@~|@floating>@ <|@
tid v2847 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2846 
y: j1818 
=== Succesors ===
=== Usages ===
v2483 v2360 v2415 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2846 y: j1818  <|@  <|@
f <@~|@floating>@ <|@
tid v1262 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3371 
y: i23 
=== Succesors ===
=== Usages ===
v3270 v3302 v3254 v2357 v2412 v2480 v3286 v3294 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3371 y: i23  <|@  <|@
f <@*|@fixed>@ <|@
tid v2480 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1262 
=== Succesors ===
trueSuccessor: v2478 
falseSuccessor: v2479 
=== Usages ===
=== Predecessor ===
v2907 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1262 #trueSuccessor: v2478 #falseSuccessor: v2479  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B75" 
    xhandlers
    flags 
    probability 4589942299654852783
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2478 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2496 
=== Usages ===
=== Predecessor ===
v2480 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2496  <|@  <|@
f <@*|@fixed>@ <|@
tid v2496 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2497 
=== Predecessor ===
v2478 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4589942299654852783
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2479 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2483 
=== Usages ===
=== Predecessor ===
v2480 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2483  <|@  <|@
f <@~|@floating>@ <|@
tid j2909 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v2907 
address: v3441 
=== Succesors ===
=== Usages ===
v3517 v3518 v3519 v3520 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v2907 address: v3441  <|@  <|@
f <@*|@fixed>@ <|@
tid v2483 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v2847 
=== Succesors ===
trueSuccessor: v2481 
falseSuccessor: v2482 
=== Usages ===
=== Predecessor ===
v2479 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2847 #trueSuccessor: v2481 #falseSuccessor: v2482  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B66" 
    xhandlers
    flags 
    probability 4588077639523326214
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2481 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2492 
=== Usages ===
=== Predecessor ===
v2483 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2492  <|@  <|@
f <@*|@fixed>@ <|@
tid v2492 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2493 
=== Predecessor ===
v2481 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" 
    xhandlers
    flags 
    probability 4580935100400111791
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2482 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2484 
=== Usages ===
=== Predecessor ===
v2483 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2484  <|@  <|@
f <@*|@fixed>@ <|@
tid v2484 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2485 
=== Predecessor ===
v2482 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" "B197" 
    successors "B65" "B197" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4589942299654852783
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2928 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2485 
values: j1818 j2933 
=== Succesors ===
=== Usages ===
v3520 j2933 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2485 values: j1818 j2933  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2485 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v2484 
=== Succesors ===
next: v3210 
=== Usages ===
j2928 v2488 v2489 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v2484 #next: v3210  <|@  <|@
f <@~|@floating>@ <|@
tid v3520 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j2909 
index: j2928 
=== Succesors ===
=== Usages ===
v3210 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2909 index: j2928  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3210 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3520 
value: v3243 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2491 
=== Usages ===
=== Predecessor ===
v2485 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3520 value: v3243 stateAfter: - lastLocationAccess: - #next: v2491  <|@  <|@
f <@~|@floating>@ <|@
tid j2933 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2928 
y: j1770 
=== Succesors ===
=== Usages ===
j2922 j2928 v2934 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2928 y: j1770  <|@  <|@
f <@~|@floating>@ <|@
tid v2934 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2846 
y: j2933 
=== Succesors ===
=== Usages ===
v2491 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2846 y: j2933  <|@  <|@
f <@*|@fixed>@ <|@
tid v2491 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2934 
=== Succesors ===
trueSuccessor: v2488 
falseSuccessor: v2490 
=== Usages ===
=== Predecessor ===
v3210 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2934 #trueSuccessor: v2488 #falseSuccessor: v2490  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B66" 
    xhandlers
    flags 
    probability 4580935100400111791
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2488 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v2485 
=== Succesors ===
next: v2494 
=== Usages ===
=== Predecessor ===
v2491 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v2485 #next: v2494  <|@  <|@
f <@*|@fixed>@ <|@
tid v2494 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2493 
=== Predecessor ===
v2488 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B62" "B65" 
    successors "B67" "B68" 
    xhandlers
    flags 
    probability 4589942299654852783
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2922 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2493 
values: j1818 j2933 
=== Succesors ===
=== Usages ===
v3519 j2927 j2916 v2936 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2493 values: j1818 j2933  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2493 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2492 v2494 
=== Succesors ===
next: v2512 
=== Usages ===
j2922 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2492 v2494 #next: v2512  <|@  <|@
f <@~|@floating>@ <|@
tid v2936 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2852 
y: j2922 
=== Succesors ===
=== Usages ===
v2512 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2852 y: j2922  <|@  <|@
f <@*|@fixed>@ <|@
tid v2512 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2936 
=== Succesors ===
trueSuccessor: v2511 
falseSuccessor: v2510 
=== Usages ===
=== Predecessor ===
v2493 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2936 #trueSuccessor: v2511 #falseSuccessor: v2510  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    probability 4580935100400111791
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2511 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2515 
=== Usages ===
=== Predecessor ===
v2512 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2515  <|@  <|@
f <@*|@fixed>@ <|@
tid v2515 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2504 
=== Predecessor ===
v2511 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    probability 4588077639523326214
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2510 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3209 
=== Usages ===
=== Predecessor ===
v2512 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3209  <|@  <|@
f <@~|@floating>@ <|@
tid v3519 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j2909 
index: j2922 
=== Succesors ===
=== Usages ===
v3209 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2909 index: j2922  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3209 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3519 
value: v3246 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2503 
=== Usages ===
=== Predecessor ===
v2510 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3519 value: v3246 stateAfter: - lastLocationAccess: - #next: v2503  <|@  <|@
f <@~|@floating>@ <|@
tid j2927 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2922 
y: j2813 
=== Succesors ===
=== Usages ===
j2916 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2922 y: j2813  <|@  <|@
f <@*|@fixed>@ <|@
tid v2503 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2504 
=== Predecessor ===
v3209 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    probability 4589942299654852783
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2916 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2504 
values: j2927 j2922 
=== Succesors ===
=== Usages ===
v3518 j2921 j2910 v2938 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2504 values: j2927 j2922  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2504 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2503 v2515 
=== Succesors ===
next: v2518 
=== Usages ===
j2916 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2503 v2515 #next: v2518  <|@  <|@
f <@~|@floating>@ <|@
tid v2938 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2856 
y: j2916 
=== Succesors ===
=== Usages ===
v2518 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2856 y: j2916  <|@  <|@
f <@*|@fixed>@ <|@
tid v2518 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2938 
=== Succesors ===
trueSuccessor: v2517 
falseSuccessor: v2516 
=== Usages ===
=== Predecessor ===
v2504 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2938 #trueSuccessor: v2517 #falseSuccessor: v2516  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4580935100400111791
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2517 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2521 
=== Usages ===
=== Predecessor ===
v2518 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2521  <|@  <|@
f <@*|@fixed>@ <|@
tid v2521 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2507 
=== Predecessor ===
v2517 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4588077639523326214
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2516 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3207 
=== Usages ===
=== Predecessor ===
v2518 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3207  <|@  <|@
f <@~|@floating>@ <|@
tid v3518 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j2909 
index: j2916 
=== Succesors ===
=== Usages ===
v3207 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2909 index: j2916  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3207 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3518 
value: v3245 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2506 
=== Usages ===
=== Predecessor ===
v2516 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3518 value: v3245 stateAfter: - lastLocationAccess: - #next: v2506  <|@  <|@
f <@~|@floating>@ <|@
tid j2921 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2916 
y: j2827 
=== Succesors ===
=== Usages ===
j2910 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2916 y: j2827  <|@  <|@
f <@*|@fixed>@ <|@
tid v2506 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2507 
=== Predecessor ===
v3207 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    probability 4589942299654852783
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2910 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2507 
values: j2921 j2916 
=== Succesors ===
=== Usages ===
v3517 v2940 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2507 values: j2921 j2916  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2507 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2506 v2521 
=== Succesors ===
next: v2524 
=== Usages ===
j2910 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2506 v2521 #next: v2524  <|@  <|@
f <@~|@floating>@ <|@
tid v2940 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1189 
y: j2910 
=== Succesors ===
=== Usages ===
v2524 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1189 y: j2910  <|@  <|@
f <@*|@fixed>@ <|@
tid v2524 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2940 
=== Succesors ===
trueSuccessor: v2523 
falseSuccessor: v2522 
=== Usages ===
=== Predecessor ===
v2507 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2940 #trueSuccessor: v2523 #falseSuccessor: v2522  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" 
    xhandlers
    flags 
    probability 4580935100400111791
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2523 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2527 
=== Usages ===
=== Predecessor ===
v2524 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2527  <|@  <|@
f <@*|@fixed>@ <|@
tid v2527 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2497 
=== Predecessor ===
v2523 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" 
    xhandlers
    flags 
    probability 4588077639523326214
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2522 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3205 
=== Usages ===
=== Predecessor ===
v2524 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3205  <|@  <|@
f <@~|@floating>@ <|@
tid v3517 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j2909 
index: j2910 
=== Succesors ===
=== Usages ===
v3205 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2909 index: j2910  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3205 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3517 
value: a3244 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2509 
=== Usages ===
=== Predecessor ===
v2522 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3517 value: a3244 stateAfter: - lastLocationAccess: - #next: v2509  <|@  <|@
f <@*|@fixed>@ <|@
tid v2509 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2497 
=== Predecessor ===
v3205 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B60" "B74" "B73" 
    successors "B76" "B77" 
    xhandlers
    flags 
    probability 4594445899282223279
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2497 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2496 v2509 v2527 
=== Succesors ===
next: v1938 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2496 v2509 v2527 #next: v1938  <|@  <|@
f <@~|@floating>@ <|@
tid i2005 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i32
=== Inputs ===
x: i3371 
y: i632 
=== Succesors ===
=== Usages ===
i2006 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i3371 y: i632  <|@  <|@
f <@~|@floating>@ <|@
tid i2006 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i2005 
y: i912 
=== Succesors ===
=== Usages ===
j2007 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i2005 y: i912  <|@  <|@
f <@~|@floating>@ <|@
tid j2007 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483644] ⇈fffffffffffffffc
=== Inputs ===
value: i2006 
=== Succesors ===
=== Usages ===
j2008 j1978 j1945 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2006  <|@  <|@
f <@~|@floating>@ <|@
tid v1267 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3371 
y: i13 
=== Succesors ===
=== Usages ===
v2001 v1938 v1971 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i3371 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v1938 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:154) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1267 
=== Succesors ===
trueSuccessor: v1936 
falseSuccessor: v1937 
=== Usages ===
=== Predecessor ===
v2497 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1267 #trueSuccessor: v1936 #falseSuccessor: v1937  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B80" 
    xhandlers
    flags 
    probability 4589942299654852783
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1936 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:155) [bci: 4]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1962 
=== Usages ===
=== Predecessor ===
v1938 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1962  <|@  <|@
f <@*|@fixed>@ <|@
tid v1962 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1961 
=== Predecessor ===
v1936 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B78" 
    xhandlers
    flags 
    probability 4589942299654852783
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1937 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:157) [bci: 5]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1939 
=== Usages ===
=== Predecessor ===
v1938 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1939  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1939 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToFirstArrayElement(WriteBarrierSnippets.java:376) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:159) [bci: 20]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v3441 
=== Succesors ===
next: j1941 
=== Usages ===
j1940 
=== Predecessor ===
v1937 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v3441 #next: j1941  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1941 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:385) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v3441 
=== Succesors ===
next: v1949 
=== Usages ===
j1945 
=== Predecessor ===
j1939 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v3441 #next: v1949  <|@  <|@
f <@~|@floating>@ <|@
tid j1945 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 27]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i64
=== Inputs ===
x: j1941 
y: j2007 
=== Succesors ===
=== Usages ===
j1946 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1941 y: j2007  <|@  <|@
f <@~|@floating>@ <|@
tid j1946 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 34]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1945 
y: i1852 
=== Succesors ===
=== Usages ===
j1947 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1945 y: i1852  <|@  <|@
f <@~|@floating>@ <|@
tid j1940 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:159) [bci: 24]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1939 
y: i1852 
=== Succesors ===
=== Usages ===
j1947 j1960 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1939 y: i1852  <|@  <|@
f <@~|@floating>@ <|@
tid j1947 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:161) [bci: 41]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i64 [-36028797018963967 - 36028797018963967]
=== Inputs ===
x: j1946 
y: j1940 
=== Succesors ===
=== Usages ===
j1948 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j1946 y: j1940  <|@  <|@
f <@~|@floating>@ <|@
tid j1948 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:161) [bci: 43]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i64 [-36028797018963966 - 36028797018963968]
=== Inputs ===
x: j1947 
y: j1778 
=== Succesors ===
=== Usages ===
j1951 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1947 y: j1778  <|@  <|@
f <@*|@fixed>@ <|@
tid v1949 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1950 
=== Predecessor ===
j1941 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" "B196" 
    successors "B79" "B196" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4594445899282223279
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1951 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1950 
values: j1948 j1952 
=== Succesors ===
=== Usages ===
j1952 v1953 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1950 values: j1948 j1952  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1950 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 2.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v1949 
=== Succesors ===
next: v1956 
=== Usages ===
j1951 v1954 v1959 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v1949 #next: v1956  <|@  <|@
f <@~|@floating>@ <|@
tid v1953 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 55]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1951 
y: j1778 
=== Succesors ===
=== Usages ===
v1956 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1951 y: j1778  <|@  <|@
f <@*|@fixed>@ <|@
tid v1956 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 55]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1953 
=== Succesors ===
trueSuccessor: v1954 
falseSuccessor: v1955 
=== Usages ===
=== Predecessor ===
v1950 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1953 #trueSuccessor: v1954 #falseSuccessor: v1955  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B80" 
    xhandlers
    flags 
    probability 4589942299654852783
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1954 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:165) [bci: 76]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v1950 
=== Succesors ===
next: v1963 
=== Usages ===
=== Predecessor ===
v1956 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v1950 #next: v1963  <|@  <|@
f <@*|@fixed>@ <|@
tid v1963 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1961 
=== Predecessor ===
v1954 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B76" "B79" 
    successors "B81" "B195" 
    xhandlers
    flags 
    probability 4594445899282223279
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1961 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1962 v1963 
=== Succesors ===
next: a1650 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1962 v1963 #next: a1650  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1650 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a1908 
=== Succesors ===
next: v3373 
=== Usages ===
?739 v3426 ?221 a1174 ?757 ?757 v3437 
=== Predecessor ===
v1961 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1908 #next: v3373  <|@  <|@
f <@~|@floating>@ <|@
tid v3463 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3368 
=== Succesors ===
=== Usages ===
v3373 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3368  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3373 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v3463 
=== Succesors ===
next: v896 
=== Usages ===
v3420 v2342 v2344 v2346 v3354 
=== Predecessor ===
a1650 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3463 #next: v896  <|@  <|@
f <@~|@floating>@ <|@
tid v3420 <|@
d <@d|@=== Debug Properties ===
displacement: 696
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v3373 
=== Succesors ===
=== Usages ===
v896 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v3373  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v896 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
nullCheck: false
stamp: Method*!
=== Inputs ===
stateBefore: - 
guard: - 
address: v3420 
=== Succesors ===
next: v1312 
=== Usages ===
v542 
=== Predecessor ===
v3373 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3420 #next: v1312  <|@  <|@
f <@~|@floating>@ <|@
tid v540 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
rawvalue: meta{HotSpotMethod<AbstractList.listIterator(int)>}
stableDimension: 0
stamp: Method*!
stampKind: Method*
value: meta{HotSpotMethod<AbstractList.listIterator(int)>}
=== Inputs ===
=== Succesors ===
=== Usages ===
v542 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v542 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v896 
y: v540 
=== Succesors ===
=== Usages ===
v1312 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v896 y: v540  <|@  <|@
f <@*|@fixed>@ <|@
tid v1312 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=null target_method=listIterator target_method_class=Ljava/util/AbstractList; position=at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v542 
=== Succesors ===
trueSuccessor: v1309 
falseSuccessor: v1311 
=== Usages ===
=== Predecessor ===
v896 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v542 #trueSuccessor: v1309 #falseSuccessor: v1311  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B82" "B85" 
    xhandlers
    flags 
    probability 4594445899282223279
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1309 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=null target_method=listIterator target_method_class=Ljava/util/AbstractList; position=at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v607 
=== Usages ===
=== Predecessor ===
v1312 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v607  <|@  <|@
f <@~|@floating>@ <|@
tid v2343 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
rawvalue: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2344 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2344 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v3373 
y: v2343 
=== Succesors ===
=== Usages ===
v667 v607 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v3373 y: v2343  <|@  <|@
f <@~|@floating>@ <|@
tid v3421 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3368 
=== Succesors ===
=== Usages ===
a3377 a3374 i3376 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3368  <|@  <|@
f <@~|@floating>@ <|@
tid v2341 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
rawvalue: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2342 v3354 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v607 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Arrays$ArrayList; target_method=size target_method_class=Ljava/util/Arrays$ArrayList; position=at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
trueSuccessorProbability: 0.5468793050355748
=== Inputs ===
condition: v2344 
=== Succesors ===
trueSuccessor: v603 
falseSuccessor: v606 
=== Usages ===
=== Predecessor ===
v1309 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2344 #trueSuccessor: v603 #falseSuccessor: v606  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B83" "B84" 
    xhandlers
    flags 
    probability 4590437146253237157
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v603 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Arrays$ArrayList; target_method=size target_method_class=Ljava/util/Arrays$ArrayList; position=at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: a3374 
=== Usages ===
=== Predecessor ===
v607 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a3374  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3374 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Arrays$ArrayList.a
nodeSourcePosition: at java.util.Arrays$ArrayList.size(Arrays.java:3818) [bci: 1]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v3421 
=== Succesors ===
next: i3375 
=== Usages ===
v3427 
=== Predecessor ===
v603 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3421 #next: i3375  <|@  <|@
f <@~|@floating>@ <|@
tid v3427 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3374 
=== Succesors ===
=== Usages ===
i3375 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3374  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3375 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.Arrays$ArrayList.size(Arrays.java:3818) [bci: 4]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v3427 
=== Succesors ===
next: v1320 
=== Usages ===
v819 
=== Predecessor ===
a3374 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v3427 #next: v1320  <|@  <|@
f <@~|@floating>@ <|@
tid v819 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3375 
y: i3372 
=== Succesors ===
=== Usages ===
v1320 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3375 y: i3372  <|@  <|@
f <@*|@fixed>@ <|@
tid v1320 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v819 
=== Succesors ===
trueSuccessor: v1319 
falseSuccessor: v1317 
=== Usages ===
=== Predecessor ===
i3375 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v819 #trueSuccessor: v1319 #falseSuccessor: v1317  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B237" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1319 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1713 
=== Usages ===
=== Predecessor ===
v1320 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1713  <|@  <|@
f <@~|@floating>@ <|@
tid i1714 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -251411
stableDimension: 0
stamp: i32 [-251411] ⇊00000000fffc29ed ⇈00000000fffc29ed
stampKind: i32
value: int[-251411|0xfffffffffffc29ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1689 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1713 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1686 
=== Predecessor ===
v1319 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B93" 
    xhandlers
    flags 
    probability 4590437146253237157
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1317 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v815 
=== Usages ===
=== Predecessor ===
v1320 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v815  <|@  <|@
f <@*|@fixed>@ <|@
tid v815 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v813 
=== Predecessor ===
v1317 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B86" "B89" 
    xhandlers
    flags 
    probability 4589447453056468409
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v606 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v616 
=== Usages ===
=== Predecessor ===
v607 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v616  <|@  <|@
f <@~|@floating>@ <|@
tid v2345 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
rawvalue: meta{HotSpotType<Ljava/util/Collections$EmptyList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/Collections$EmptyList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2346 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2346 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v3373 
y: v2345 
=== Succesors ===
=== Usages ===
v616 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v3373 y: v2345  <|@  <|@
f <@*|@fixed>@ <|@
tid v616 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Collections$EmptyList; target_method=size target_method_class=Ljava/util/Collections$EmptyList; position=at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
trueSuccessorProbability: 0.5024679876958296
=== Inputs ===
condition: v2346 
=== Succesors ===
trueSuccessor: v612 
falseSuccessor: v615 
=== Usages ===
=== Predecessor ===
v606 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2346 #trueSuccessor: v612 #falseSuccessor: v615  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B87" "B88" 
    xhandlers
    flags 
    probability 4584967462359288767
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v612 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Collections$EmptyList; target_method=size target_method_class=Ljava/util/Collections$EmptyList; position=at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1324 
=== Usages ===
=== Predecessor ===
v616 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1324  <|@  <|@
f <@~|@floating>@ <|@
tid v832 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3372 
y: i23 
=== Succesors ===
=== Usages ===
v1324 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3372 y: i23  <|@  <|@
f <@*|@fixed>@ <|@
tid v1324 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v832 
=== Succesors ===
trueSuccessor: v1321 
falseSuccessor: v1323 
=== Usages ===
=== Predecessor ===
v612 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v832 #trueSuccessor: v1321 #falseSuccessor: v1323  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B93" 
    xhandlers
    flags 
    probability 4584967462359288767
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1321 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v831 
=== Usages ===
=== Predecessor ===
v1324 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v831  <|@  <|@
f <@*|@fixed>@ <|@
tid v831 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v813 
=== Predecessor ===
v1321 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B237" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1323 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1717 
=== Usages ===
=== Predecessor ===
v1324 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1717  <|@  <|@
f <@~|@floating>@ <|@
tid i1718 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -251667
stableDimension: 0
stamp: i32 [-251667] ⇊00000000fffc28ed ⇈00000000fffc28ed
stampKind: i32
value: int[-251667|0xfffffffffffc28ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1689 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1717 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1686 
=== Predecessor ===
v1323 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B90" "B194" 
    xhandlers
    flags 
    probability 4584920244498907059
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v615 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1328 
=== Usages ===
=== Predecessor ===
v616 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1328  <|@  <|@
f <@~|@floating>@ <|@
tid v3354 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v3373 
y: v2341 
=== Succesors ===
=== Usages ===
v1328 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v3373 y: v2341  <|@  <|@
f <@*|@fixed>@ <|@
tid v1328 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=size target_method_class=Lorg/graalvm/compiler/graph/NodeList; position=at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v3354 
=== Succesors ===
trueSuccessor: v1325 
falseSuccessor: v1327 
=== Usages ===
=== Predecessor ===
v615 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3354 #trueSuccessor: v1325 #falseSuccessor: v1327  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B91" "B92" 
    xhandlers
    flags 
    probability 4584920244498907059
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1325 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=size target_method_class=Lorg/graalvm/compiler/graph/NodeList; position=at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: i3376 
=== Usages ===
=== Predecessor ===
v1328 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i3376  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3376 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: NodeList.size
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.size(NodeList.java:119) [bci: 1]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v3421 
=== Succesors ===
next: v1332 
=== Usages ===
v578 
=== Predecessor ===
v1325 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3421 #next: v1332  <|@  <|@
f <@~|@floating>@ <|@
tid v578 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3376 
y: i3372 
=== Succesors ===
=== Usages ===
v1332 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3376 y: i3372  <|@  <|@
f <@*|@fixed>@ <|@
tid v1332 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v578 
=== Succesors ===
trueSuccessor: v1331 
falseSuccessor: v1329 
=== Usages ===
=== Predecessor ===
i3376 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v578 #trueSuccessor: v1331 #falseSuccessor: v1329  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B237" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1331 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1715 
=== Usages ===
=== Predecessor ===
v1332 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1715  <|@  <|@
f <@~|@floating>@ <|@
tid i1716 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -252691
stableDimension: 0
stamp: i32 [-252691] ⇊00000000fffc24ed ⇈00000000fffc24ed
stampKind: i32
value: int[-252691|0xfffffffffffc24ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1689 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1715 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1686 
=== Predecessor ===
v1331 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B93" 
    xhandlers
    flags 
    probability 4584920244498907059
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1329 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v812 
=== Usages ===
=== Predecessor ===
v1332 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v812  <|@  <|@
f <@*|@fixed>@ <|@
tid v812 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v813 
=== Predecessor ===
v1329 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" "B84" "B87" 
    successors "B94" "B135" 
    xhandlers
    flags 
    probability 4594445899282223279
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v813 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v812 v815 v831 
=== Succesors ===
next: v667 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v812 v815 v831 #next: v667  <|@  <|@
f <@~|@floating>@ <|@
tid v3437 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1650 
index: - 
=== Succesors ===
=== Usages ===
j2865 j2810 j1974 j2004 j1972 j2002 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1650 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1187 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i3372 
=== Succesors ===
=== Usages ===
j1190 v3436 v3438 j3358 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i3372  <|@  <|@
f <@~|@floating>@ <|@
tid a1725 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@1399295821
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@1399295821]
=== Inputs ===
=== Succesors ===
=== Usages ===
a1690 a1690 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a1733 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@1800298093
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@1800298093]
=== Inputs ===
=== Succesors ===
=== Usages ===
a1690 a1690 a1690 a1690 a1690 a1690 a1690 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid a399 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@396e90a6
hasIdentity: true
objectId: -1
stamp: a!# Ljava/util/SubList$1;
type: HotSpotType<Ljava/util/SubList$1;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?755 ?791 ?739 ?755 ?757 ?221 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid a652 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@204a1cd0
hasIdentity: true
objectId: -1
stamp: a!# Ljava/util/AbstractList$ListItr;
type: HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?661 ?1517 ?791 ?781 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?791 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a399 
values: - a652 a2 
=== Succesors ===
=== Usages ===
?739 ?221 ?1517 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a399 values: - a652 a2  <|@  <|@
f <@*|@fixed>@ <|@
tid v667 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Arrays$ArrayList; target_method=get target_method_class=Ljava/util/Arrays$ArrayList; position=at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
trueSuccessorProbability: 0.9304948647614187
=== Inputs ===
condition: v2344 
=== Succesors ===
trueSuccessor: v668 
falseSuccessor: v734 
=== Usages ===
=== Predecessor ===
v813 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2344 #trueSuccessor: v668 #falseSuccessor: v734  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B95" "B96" 
    xhandlers
    flags 
    probability 4594079059589133148
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v668 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:138) [bci: 15]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: a3377 
=== Usages ===
=== Predecessor ===
v667 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a3377  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3377 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Arrays$ArrayList.a
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 1]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v3421 
=== Succesors ===
next: v1336 
=== Usages ===
a902 v903 v3422 
=== Predecessor ===
v668 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3421 #next: v1336  <|@  <|@
f <@~|@floating>@ <|@
tid v903 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
value: a3377 
=== Succesors ===
=== Usages ===
v1336 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a3377  <|@  <|@
f <@*|@fixed>@ <|@
tid v1336 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v903 
=== Succesors ===
trueSuccessor: v1335 
falseSuccessor: v1333 
=== Usages ===
=== Predecessor ===
a3377 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v903 #trueSuccessor: v1335 #falseSuccessor: v1333  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B237" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1335 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1723 
=== Usages ===
=== Predecessor ===
v1336 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1723  <|@  <|@
f <@~|@floating>@ <|@
tid i1724 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -231435
stableDimension: 0
stamp: i32 [-231435] ⇊00000000fffc77f5 ⇈00000000fffc77f5
stampKind: i32
value: int[-231435|0xfffffffffffc77f5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1689 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1723 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1686 
=== Predecessor ===
v1335 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" "B98" 
    xhandlers
    flags 
    probability 4594079059589133148
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1333 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3254 
=== Usages ===
=== Predecessor ===
v1336 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3254  <|@  <|@
f <@*|@fixed>@ <|@
tid v3254 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1262 
=== Succesors ===
trueSuccessor: v3250 
falseSuccessor: v3253 
=== Usages ===
=== Predecessor ===
v1333 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1262 #trueSuccessor: v3250 #falseSuccessor: v3253  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B101" 
    xhandlers
    flags 
    probability 4589575459961762652
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3250 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3248 
=== Usages ===
=== Predecessor ===
v3254 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3248  <|@  <|@
f <@*|@fixed>@ <|@
tid v3248 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3247 
=== Predecessor ===
v3250 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B99" "B134" 
    xhandlers
    flags 
    probability 4589575459961762652
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3253 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: i3378 
=== Usages ===
=== Predecessor ===
v3254 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i3378  <|@  <|@
f <@~|@floating>@ <|@
tid v3422 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3377 
=== Succesors ===
=== Usages ===
i3378 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3377  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3378 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v3422 
=== Succesors ===
next: v3262 
=== Usages ===
v1201 j1198 
=== Predecessor ===
v3253 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3422 #next: v3262  <|@  <|@
f <@~|@floating>@ <|@
tid j1190 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j1187 
y: j1189 
=== Succesors ===
=== Usages ===
v1200 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1187 y: j1189  <|@  <|@
f <@~|@floating>@ <|@
tid j1198 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i3378 
=== Succesors ===
=== Usages ===
v1200 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i3378  <|@  <|@
f <@~|@floating>@ <|@
tid v1200 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1190 
y: j1198 
=== Succesors ===
=== Usages ===
v3262 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1190 y: j1198  <|@  <|@
f <@~|@floating>@ <|@
tid i1732 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -232731
stableDimension: 0
stamp: i32 [-232731] ⇊00000000fffc72e5 ⇈00000000fffc72e5
stampKind: i32
value: int[-232731|0xfffffffffffc72e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1689 i1689 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v3262 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1200 
=== Succesors ===
trueSuccessor: v3261 
falseSuccessor: v3258 
=== Usages ===
=== Predecessor ===
i3378 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1200 #trueSuccessor: v3261 #falseSuccessor: v3258  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B100" "B133" 
    xhandlers
    flags 
    probability 4589575459961762652
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3261 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3260 
=== Usages ===
=== Predecessor ===
v3262 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3260  <|@  <|@
f <@~|@floating>@ <|@
tid v1201 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3372 
y: i3378 
=== Succesors ===
=== Usages ===
v3260 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i3372 y: i3378  <|@  <|@
f <@*|@fixed>@ <|@
tid v3260 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1201 
=== Succesors ===
trueSuccessor: v3251 
falseSuccessor: v3259 
=== Usages ===
=== Predecessor ===
v3261 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1201 #trueSuccessor: v3251 #falseSuccessor: v3259  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B101" 
    xhandlers
    flags 
    probability 4589575459961762652
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3251 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3249 
=== Usages ===
=== Predecessor ===
v3260 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3249  <|@  <|@
f <@*|@fixed>@ <|@
tid v3249 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3247 
=== Predecessor ===
v3251 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B97" "B100" 
    successors "B102" "B103" 
    xhandlers
    flags 
    probability 4594079059589133148
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3247 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3248 v3249 
=== Succesors ===
next: v3286 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3248 v3249 #next: v3286  <|@  <|@
f <@*|@fixed>@ <|@
tid v3286 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 44]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1262 
=== Succesors ===
trueSuccessor: v3282 
falseSuccessor: v3285 
=== Usages ===
=== Predecessor ===
v3247 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1262 #trueSuccessor: v3282 #falseSuccessor: v3285  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B105" 
    xhandlers
    flags 
    probability 4589575459961762652
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3282 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 44]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3280 
=== Usages ===
=== Predecessor ===
v3286 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3280  <|@  <|@
f <@*|@fixed>@ <|@
tid v3280 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 44]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3279 
=== Predecessor ===
v3282 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" "B132" 
    xhandlers
    flags 
    probability 4589575459961762652
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3285 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 44]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3326 
=== Usages ===
=== Predecessor ===
v3286 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3326  <|@  <|@
f <@~|@floating>@ <|@
tid v1207 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1189 
y: j1185 
=== Succesors ===
=== Usages ===
v3326 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1189 y: j1185  <|@  <|@
f <@*|@fixed>@ <|@
tid v3326 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 44]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1207 
=== Succesors ===
trueSuccessor: v3325 
falseSuccessor: v3322 
=== Usages ===
=== Predecessor ===
v3285 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1207 #trueSuccessor: v3325 #falseSuccessor: v3322  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B105" 
    xhandlers
    flags 
    probability 4589575459961762652
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3325 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 44]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3281 
=== Usages ===
=== Predecessor ===
v3326 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3281  <|@  <|@
f <@*|@fixed>@ <|@
tid v3281 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 44]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3279 
=== Predecessor ===
v3325 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B102" "B104" 
    successors "B106" "B107" 
    xhandlers
    flags 
    probability 4594079059589133148
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3279 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 44]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3280 v3281 
=== Succesors ===
next: v2807 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3280 v3281 #next: v2807  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2807 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v2357 
=== Usages ===
j2808 j2810 
=== Predecessor ===
v3279 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v2357  <|@  <|@
f <@*|@fixed>@ <|@
tid v2357 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1262 
=== Succesors ===
trueSuccessor: v2355 
falseSuccessor: v2356 
=== Usages ===
=== Predecessor ===
v2807 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1262 #trueSuccessor: v2355 #falseSuccessor: v2356  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B121" 
    xhandlers
    flags 
    probability 4589575459961762652
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2355 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2374 
=== Usages ===
=== Predecessor ===
v2357 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2374  <|@  <|@
f <@*|@fixed>@ <|@
tid v2374 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2375 
=== Predecessor ===
v2355 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" "B109" 
    xhandlers
    flags 
    probability 4589575459961762652
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2356 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2360 
=== Usages ===
=== Predecessor ===
v2357 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2360  <|@  <|@
f <@~|@floating>@ <|@
tid j2810 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v2807 
address: v3437 
=== Succesors ===
=== Usages ===
v3501 v3503 v3505 v3507 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v2807 address: v3437  <|@  <|@
f <@~|@floating>@ <|@
tid a902 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 1]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a3377 
=== Succesors ===
=== Usages ===
v3436 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a3377  <|@  <|@
f <@~|@floating>@ <|@
tid v3436 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a902 
index: j1187 
=== Succesors ===
=== Usages ===
j2808 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a902 index: j1187  <|@  <|@
f <@~|@floating>@ <|@
tid j2808 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v2807 
address: v3436 
=== Succesors ===
=== Usages ===
v3502 v3504 v3506 v3508 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v2807 address: v3436  <|@  <|@
f <@*|@fixed>@ <|@
tid v2360 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v2847 
=== Succesors ===
trueSuccessor: v2358 
falseSuccessor: v2359 
=== Usages ===
=== Predecessor ===
v2356 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2847 #trueSuccessor: v2358 #falseSuccessor: v2359  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B112" 
    xhandlers
    flags 
    probability 4587527379983691018
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2358 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2370 
=== Usages ===
=== Predecessor ===
v2360 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2370  <|@  <|@
f <@*|@fixed>@ <|@
tid v2370 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2371 
=== Predecessor ===
v2358 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B110" 
    xhandlers
    flags 
    probability 4580568260707021660
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2359 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2361 
=== Usages ===
=== Predecessor ===
v2360 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2361  <|@  <|@
f <@*|@fixed>@ <|@
tid v2361 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2362 
=== Predecessor ===
v2359 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" "B131" 
    successors "B111" "B131" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4589575459961762652
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2837 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2362 
values: j1818 j2844 
=== Succesors ===
=== Usages ===
v3508 j2844 v3507 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2362 values: j1818 j2844  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2362 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v2361 
=== Succesors ===
next: v3379 
=== Usages ===
v3379 v2366 v2367 j2837 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v2361 #next: v3379  <|@  <|@
f <@~|@floating>@ <|@
tid v3508 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j2808 
index: j2837 
=== Succesors ===
=== Usages ===
v3379 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2808 index: j2837  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3379 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: <n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;>
=== Inputs ===
stateBefore: - 
guard: v2362 
address: v3508 
=== Succesors ===
next: v3194 
=== Usages ===
v3194 
=== Predecessor ===
v2362 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2362 address: v3508 #next: v3194  <|@  <|@
f <@~|@floating>@ <|@
tid v3507 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j2810 
index: j2837 
=== Succesors ===
=== Usages ===
v3194 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2810 index: j2837  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3194 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: Object
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3507 
value: v3379 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2369 
=== Usages ===
=== Predecessor ===
v3379 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3507 value: v3379 stateAfter: - lastLocationAccess: - #next: v2369  <|@  <|@
f <@~|@floating>@ <|@
tid j2844 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2837 
y: j1770 
=== Succesors ===
=== Usages ===
j2829 j2837 v2849 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2837 y: j1770  <|@  <|@
f <@~|@floating>@ <|@
tid v2849 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2846 
y: j2844 
=== Succesors ===
=== Usages ===
v2369 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2846 y: j2844  <|@  <|@
f <@*|@fixed>@ <|@
tid v2369 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2849 
=== Succesors ===
trueSuccessor: v2366 
falseSuccessor: v2368 
=== Usages ===
=== Predecessor ===
v3194 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2849 #trueSuccessor: v2366 #falseSuccessor: v2368  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B112" 
    xhandlers
    flags 
    probability 4580568260707021660
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2366 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v2362 
=== Succesors ===
next: v2372 
=== Usages ===
=== Predecessor ===
v2369 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v2362 #next: v2372  <|@  <|@
f <@*|@fixed>@ <|@
tid v2372 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2371 
=== Predecessor ===
v2366 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B108" "B111" 
    successors "B113" "B114" 
    xhandlers
    flags 
    probability 4589575459961762652
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2829 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2371 
values: j1818 j2844 
=== Succesors ===
=== Usages ===
v3506 j2836 j2820 v2853 v3505 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2371 values: j1818 j2844  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2371 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2370 v2372 
=== Succesors ===
next: v2390 
=== Usages ===
j2829 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2370 v2372 #next: v2390  <|@  <|@
f <@~|@floating>@ <|@
tid v2853 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2852 
y: j2829 
=== Succesors ===
=== Usages ===
v2390 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2852 y: j2829  <|@  <|@
f <@*|@fixed>@ <|@
tid v2390 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2853 
=== Succesors ===
trueSuccessor: v2389 
falseSuccessor: v2388 
=== Usages ===
=== Predecessor ===
v2371 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2853 #trueSuccessor: v2389 #falseSuccessor: v2388  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B115" 
    xhandlers
    flags 
    probability 4580568260707021660
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2389 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2393 
=== Usages ===
=== Predecessor ===
v2390 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2393  <|@  <|@
f <@*|@fixed>@ <|@
tid v2393 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2382 
=== Predecessor ===
v2389 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B115" 
    xhandlers
    flags 
    probability 4587527379983691018
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2388 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3380 
=== Usages ===
v3380 
=== Predecessor ===
v2390 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3380  <|@  <|@
f <@~|@floating>@ <|@
tid v3506 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j2808 
index: j2829 
=== Succesors ===
=== Usages ===
v3380 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2808 index: j2829  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3380 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: <n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;>
=== Inputs ===
stateBefore: - 
guard: v2388 
address: v3506 
=== Succesors ===
next: v3192 
=== Usages ===
v3192 
=== Predecessor ===
v2388 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2388 address: v3506 #next: v3192  <|@  <|@
f <@~|@floating>@ <|@
tid v3505 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j2810 
index: j2829 
=== Succesors ===
=== Usages ===
v3192 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2810 index: j2829  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3192 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: Object
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3505 
value: v3380 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2381 
=== Usages ===
=== Predecessor ===
v3380 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3505 value: v3380 stateAfter: - lastLocationAccess: - #next: v2381  <|@  <|@
f <@~|@floating>@ <|@
tid j2836 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2829 
y: j2813 
=== Succesors ===
=== Usages ===
j2820 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2829 y: j2813  <|@  <|@
f <@*|@fixed>@ <|@
tid v2381 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2382 
=== Predecessor ===
v3192 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" "B113" 
    successors "B116" "B117" 
    xhandlers
    flags 
    probability 4589575459961762652
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2820 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2382 
values: j2836 j2829 
=== Succesors ===
=== Usages ===
v3504 j2828 j2811 v2857 v3503 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2382 values: j2836 j2829  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2382 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2381 v2393 
=== Succesors ===
next: v2396 
=== Usages ===
j2820 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2381 v2393 #next: v2396  <|@  <|@
f <@~|@floating>@ <|@
tid v2857 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2856 
y: j2820 
=== Succesors ===
=== Usages ===
v2396 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2856 y: j2820  <|@  <|@
f <@*|@fixed>@ <|@
tid v2396 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2857 
=== Succesors ===
trueSuccessor: v2395 
falseSuccessor: v2394 
=== Usages ===
=== Predecessor ===
v2382 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2857 #trueSuccessor: v2395 #falseSuccessor: v2394  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    probability 4580568260707021660
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2395 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2399 
=== Usages ===
=== Predecessor ===
v2396 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2399  <|@  <|@
f <@*|@fixed>@ <|@
tid v2399 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2385 
=== Predecessor ===
v2395 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    probability 4587527379983691018
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2394 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3381 
=== Usages ===
v3381 
=== Predecessor ===
v2396 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3381  <|@  <|@
f <@~|@floating>@ <|@
tid v3504 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j2808 
index: j2820 
=== Succesors ===
=== Usages ===
v3381 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2808 index: j2820  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3381 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: <n Ljava/lang/Object;,n Ljava/lang/Object;>
=== Inputs ===
stateBefore: - 
guard: v2394 
address: v3504 
=== Succesors ===
next: v3190 
=== Usages ===
v3190 
=== Predecessor ===
v2394 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2394 address: v3504 #next: v3190  <|@  <|@
f <@~|@floating>@ <|@
tid v3503 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j2810 
index: j2820 
=== Succesors ===
=== Usages ===
v3190 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2810 index: j2820  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3190 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: Object
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3503 
value: v3381 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2384 
=== Usages ===
=== Predecessor ===
v3381 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3503 value: v3381 stateAfter: - lastLocationAccess: - #next: v2384  <|@  <|@
f <@~|@floating>@ <|@
tid j2828 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2820 
y: j2827 
=== Succesors ===
=== Usages ===
j2811 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2820 y: j2827  <|@  <|@
f <@*|@fixed>@ <|@
tid v2384 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2385 
=== Predecessor ===
v3190 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B117" "B116" 
    successors "B119" "B120" 
    xhandlers
    flags 
    probability 4589575459961762652
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2811 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2385 
values: j2828 j2820 
=== Succesors ===
=== Usages ===
v3502 v2859 v3501 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2385 values: j2828 j2820  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2385 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2384 v2399 
=== Succesors ===
next: v2402 
=== Usages ===
j2811 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2384 v2399 #next: v2402  <|@  <|@
f <@~|@floating>@ <|@
tid v2859 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1189 
y: j2811 
=== Succesors ===
=== Usages ===
v2402 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1189 y: j2811  <|@  <|@
f <@*|@fixed>@ <|@
tid v2402 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2859 
=== Succesors ===
trueSuccessor: v2401 
falseSuccessor: v2400 
=== Usages ===
=== Predecessor ===
v2385 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2859 #trueSuccessor: v2401 #falseSuccessor: v2400  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B121" 
    xhandlers
    flags 
    probability 4580568260707021660
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2401 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2405 
=== Usages ===
=== Predecessor ===
v2402 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2405  <|@  <|@
f <@*|@fixed>@ <|@
tid v2405 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2375 
=== Predecessor ===
v2401 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B121" 
    xhandlers
    flags 
    probability 4587527379983691018
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2400 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a3382 
=== Usages ===
a3382 
=== Predecessor ===
v2402 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a3382  <|@  <|@
f <@~|@floating>@ <|@
tid v3502 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j2808 
index: j2811 
=== Succesors ===
=== Usages ===
a3382 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2808 index: j2811  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3382 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v2400 
address: v3502 
=== Succesors ===
next: v3188 
=== Usages ===
v3188 
=== Predecessor ===
v2400 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2400 address: v3502 #next: v3188  <|@  <|@
f <@~|@floating>@ <|@
tid v3501 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j2810 
index: j2811 
=== Succesors ===
=== Usages ===
v3188 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2810 index: j2811  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3188 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: Object
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3501 
value: a3382 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2387 
=== Usages ===
=== Predecessor ===
a3382 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3501 value: a3382 stateAfter: - lastLocationAccess: - #next: v2387  <|@  <|@
f <@*|@fixed>@ <|@
tid v2387 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2375 
=== Predecessor ===
v3188 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B106" "B120" "B119" 
    successors "B122" "B123" 
    xhandlers
    flags 
    probability 4594079059589133148
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2375 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2374 v2387 v2405 
=== Succesors ===
next: v1971 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2374 v2387 v2405 #next: v1971  <|@  <|@
f <@*|@fixed>@ <|@
tid v1971 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1267 
=== Succesors ===
trueSuccessor: v1969 
falseSuccessor: v1970 
=== Usages ===
=== Predecessor ===
v2375 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1267 #trueSuccessor: v1969 #falseSuccessor: v1970  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" 
    successors "B126" 
    xhandlers
    flags 
    probability 4589575459961762652
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1969 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1995 
=== Usages ===
=== Predecessor ===
v1971 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1995  <|@  <|@
f <@*|@fixed>@ <|@
tid v1995 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1994 
=== Predecessor ===
v1969 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B121" 
    successors "B124" 
    xhandlers
    flags 
    probability 4589575459961762652
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1970 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: j1972 
=== Usages ===
=== Predecessor ===
v1971 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1972  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1972 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: v3437 
=== Succesors ===
next: j1974 
=== Usages ===
j1973 
=== Predecessor ===
v1970 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v3437 #next: j1974  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1974 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: v3437 
=== Succesors ===
next: v1982 
=== Usages ===
j1978 
=== Predecessor ===
j1972 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v3437 #next: v1982  <|@  <|@
f <@~|@floating>@ <|@
tid j1978 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1974 
y: j2007 
=== Succesors ===
=== Usages ===
j1979 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1974 y: j2007  <|@  <|@
f <@~|@floating>@ <|@
tid j1979 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1978 
y: i1852 
=== Succesors ===
=== Usages ===
j1980 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1978 y: i1852  <|@  <|@
f <@~|@floating>@ <|@
tid j1973 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1972 
y: i1852 
=== Succesors ===
=== Usages ===
j1980 j1993 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1972 y: i1852  <|@  <|@
f <@~|@floating>@ <|@
tid j1980 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i64 [-36028797018963967 - 36028797018963967]
=== Inputs ===
x: j1979 
y: j1973 
=== Succesors ===
=== Usages ===
j1981 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j1979 y: j1973  <|@  <|@
f <@~|@floating>@ <|@
tid j1981 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-36028797018963966 - 36028797018963968]
=== Inputs ===
x: j1980 
y: j1778 
=== Succesors ===
=== Usages ===
j1984 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1980 y: j1778  <|@  <|@
f <@*|@fixed>@ <|@
tid v1982 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1983 
=== Predecessor ===
j1974 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B123" "B130" 
    successors "B125" "B130" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 1
    probability 4594079059589133148
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1984 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1983 
values: j1981 j1985 
=== Succesors ===
=== Usages ===
j1985 v1986 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1983 values: j1981 j1985  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1983 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 2.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v1982 
=== Succesors ===
next: v1989 
=== Usages ===
j1984 v1987 v1992 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v1982 #next: v1989  <|@  <|@
f <@~|@floating>@ <|@
tid v1986 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1984 
y: j1778 
=== Succesors ===
=== Usages ===
v1989 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1984 y: j1778  <|@  <|@
f <@*|@fixed>@ <|@
tid v1989 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1986 
=== Succesors ===
trueSuccessor: v1987 
falseSuccessor: v1988 
=== Usages ===
=== Predecessor ===
v1983 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1986 #trueSuccessor: v1987 #falseSuccessor: v1988  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors "B126" 
    xhandlers
    flags 
    probability 4589575459961762652
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1987 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v1983 
=== Succesors ===
next: v1996 
=== Usages ===
=== Predecessor ===
v1989 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v1983 #next: v1996  <|@  <|@
f <@*|@fixed>@ <|@
tid v1996 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1994 
=== Predecessor ===
v1987 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B122" "B125" 
    successors "B127" 
    xhandlers
    flags 
    probability 4594079059589133148
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1994 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1995 v1996 
=== Succesors ===
next: v214 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1995 v1996 #next: v214  <|@  <|@
f <@*|@fixed>@ <|@
tid v214 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:138) [bci: 15]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v215 
=== Predecessor ===
v1994 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B126" "B128" 
    successors "B128" "B129" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 1
    probability 4603850469502835252
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i216 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v215 
values: i13 i233 
=== Succesors ===
=== Usages ===
i233 v218 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v215 values: i13 i233  <|@  <|@
f <@~|@floating>@ <|@
tid i654 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v215 
values: i3372 i475 
=== Succesors ===
=== Usages ===
i732 i655 i475 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v215 values: i3372 i475  <|@  <|@
f <@~|@floating>@ <|@
tid i655 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v215 
values: i632 i654 
=== Succesors ===
=== Usages ===
i733 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v215 values: i632 i654  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v215 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.622443122521394
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:138) [bci: 15]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 1
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v214 
=== Succesors ===
next: v222 
=== Usages ===
i216 v220 v234 i654 i655 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v214 #next: v222  <|@  <|@
f <@~|@floating>@ <|@
tid v218 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:138) [bci: 18]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i216 
y: i3371 
=== Succesors ===
=== Usages ===
v222 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i216 y: i3371  <|@  <|@
f <@*|@fixed>@ <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:138) [bci: 18]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
trueSuccessorProbability: 0.7836641850436589
=== Inputs ===
condition: v218 
=== Succesors ===
trueSuccessor: v219 
falseSuccessor: v220 
=== Usages ===
=== Predecessor ===
v215 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v218 #trueSuccessor: v219 #falseSuccessor: v220  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B127" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 1
    probability 4602566600183724730
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v219 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:139) [bci: 21]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v234 
=== Usages ===
=== Predecessor ===
v222 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v234  <|@  <|@
f <@~|@floating>@ <|@
tid i475 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:360) [bci: 26]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i32
=== Inputs ===
x: i654 
y: i23 
=== Succesors ===
=== Usages ===
i654 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i654 y: i23  <|@  <|@
f <@~|@floating>@ <|@
tid i233 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:138) [bci: 45]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i32
=== Inputs ===
x: i216 
y: i23 
=== Succesors ===
=== Usages ===
i216 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i216 y: i23  <|@  <|@
f <@*|@fixed>@ <|@
tid v234 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:138) [bci: 15]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
loopBegin: v215 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v219 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v215  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B190" 
    xhandlers
    flags 
    probability 4594079059589133149
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v220 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:143) [bci: 51]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v215 
=== Succesors ===
next: v726 
=== Usages ===
=== Predecessor ===
v222 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v215 #next: v726  <|@  <|@
f <@*|@fixed>@ <|@
tid v726 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v725 
=== Predecessor ===
v220 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors "B124" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 1
    probability 4589575459961762652
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1988 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1991 
=== Usages ===
=== Predecessor ===
v1989 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1991  <|@  <|@
f <@~|@floating>@ <|@
tid j1985 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1984 
y: j1188 
=== Succesors ===
=== Usages ===
j1984 j1990 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1984 y: j1188  <|@  <|@
f <@~|@floating>@ <|@
tid j1993 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [4682670080 - 36028801701634047] ⇈00ffffffffffffff
=== Inputs ===
x: j1973 
y: j1874 
=== Succesors ===
=== Usages ===
j1990 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1973 y: j1874  <|@  <|@
f <@~|@floating>@ <|@
tid j1990 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1985 
y: j1993 
=== Succesors ===
=== Usages ===
v1991 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1985 y: j1993  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1991 <|@
d <@d|@=== Debug Properties ===
kind: boolean
stamp: void
=== Inputs ===
address: j1990 
value: i13 
=== Succesors ===
next: v1992 
=== Usages ===
=== Predecessor ===
v1988 >@ <|@
instruction <@DirectStore|@org.graalvm.compiler.replacements.nodes.DirectStoreNode>@ address: j1990 value: i13 #next: v1992  <|@  <|@
f <@*|@fixed>@ <|@
tid v1992 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v1983 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1991 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v1983  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B110" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4587527379983691018
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2368 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2367 
=== Usages ===
=== Predecessor ===
v2369 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2367  <|@  <|@
f <@*|@fixed>@ <|@
tid v2367 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v2362 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2368 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v2362  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B237" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3322 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 44]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1734 
=== Usages ===
=== Predecessor ===
v3326 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1734  <|@  <|@
f <@~|@floating>@ <|@
tid i1735 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -235291
stableDimension: 0
stamp: i32 [-235291] ⇊00000000fffc68e5 ⇈00000000fffc68e5
stampKind: i32
value: int[-235291|0xfffffffffffc68e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1689 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1734 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1686 
=== Predecessor ===
v3322 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B237" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3259 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3549 
=== Usages ===
=== Predecessor ===
v3260 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3549  <|@  <|@
f <@*|@fixed>@ <|@
tid v3549 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1686 
=== Predecessor ===
v3259 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B237" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3258 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1731 
=== Usages ===
=== Predecessor ===
v3262 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1731  <|@  <|@
f <@*|@fixed>@ <|@
tid v1731 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1686 
=== Predecessor ===
v3258 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B136" "B177" 
    xhandlers
    flags 
    probability 4577023056870495540
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v734 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v735 
=== Usages ===
=== Predecessor ===
v667 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v735  <|@  <|@
f <@~|@floating>@ <|@
tid v2342 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v3373 
y: v2341 
=== Succesors ===
=== Usages ===
v735 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v3373 y: v2341  <|@  <|@
f <@~|@floating>@ <|@
tid v3357 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1189 
y: j1185 
=== Succesors ===
=== Usages ===
v3310 v3318 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1189 y: j1185  <|@  <|@
f <@*|@fixed>@ <|@
tid v735 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=get target_method_class=Lorg/graalvm/compiler/graph/NodeList; position=at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
trueSuccessorProbability: 0.9931451844203518
=== Inputs ===
condition: v2342 
=== Succesors ===
trueSuccessor: v736 
falseSuccessor: v796 
=== Usages ===
=== Predecessor ===
v734 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2342 #trueSuccessor: v736 #falseSuccessor: v796  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B135" 
    successors "B137" "B138" 
    xhandlers
    flags 
    probability 4576982822975400699
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v736 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a3383 
=== Usages ===
=== Predecessor ===
v735 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a3383  <|@  <|@
f <@~|@floating>@ <|@
tid v3423 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3368 
=== Succesors ===
=== Usages ===
a3383 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3368  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3383 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: NodeList.nodes
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 23]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
nullCheck: false
stamp: n [Lorg/graalvm/compiler/graph/Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v3423 
=== Succesors ===
next: v1349 
=== Usages ===
a931 v932 v3424 
=== Predecessor ===
v736 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3423 #next: v1349  <|@  <|@
f <@~|@floating>@ <|@
tid v932 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
value: a3383 
=== Succesors ===
=== Usages ===
v1349 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a3383  <|@  <|@
f <@*|@fixed>@ <|@
tid v1349 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v932 
=== Succesors ===
trueSuccessor: v1348 
falseSuccessor: v1346 
=== Usages ===
=== Predecessor ===
a3383 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v932 #trueSuccessor: v1348 #falseSuccessor: v1346  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B237" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1348 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1726 
=== Usages ===
=== Predecessor ===
v1349 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1726  <|@  <|@
f <@~|@floating>@ <|@
tid i1727 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -238859
stableDimension: 0
stamp: i32 [-238859] ⇊00000000fffc5af5 ⇈00000000fffc5af5
stampKind: i32
value: int[-238859|0xfffffffffffc5af5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1689 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1726 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1686 
=== Predecessor ===
v1348 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" "B140" 
    xhandlers
    flags 
    probability 4576982822975400699
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1346 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3270 
=== Usages ===
=== Predecessor ===
v1349 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3270  <|@  <|@
f <@*|@fixed>@ <|@
tid v3270 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1262 
=== Succesors ===
trueSuccessor: v3266 
falseSuccessor: v3269 
=== Usages ===
=== Predecessor ===
v1346 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1262 #trueSuccessor: v3266 #falseSuccessor: v3269  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B138" 
    successors "B143" 
    xhandlers
    flags 
    probability 4572479223348030203
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3266 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3264 
=== Usages ===
=== Predecessor ===
v3270 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3264  <|@  <|@
f <@*|@fixed>@ <|@
tid v3264 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3263 
=== Predecessor ===
v3266 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B138" 
    successors "B141" "B176" 
    xhandlers
    flags 
    probability 4572479223348030203
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3269 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: i3384 
=== Usages ===
=== Predecessor ===
v3270 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i3384  <|@  <|@
f <@~|@floating>@ <|@
tid v3424 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3383 
=== Succesors ===
=== Usages ===
i3384 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3383  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3384 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v3424 
=== Succesors ===
next: v3278 
=== Usages ===
v1222 j1219 
=== Predecessor ===
v3269 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3424 #next: v3278  <|@  <|@
f <@~|@floating>@ <|@
tid j3358 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j1187 
y: j1189 
=== Succesors ===
=== Usages ===
v1221 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1187 y: j1189  <|@  <|@
f <@~|@floating>@ <|@
tid j1219 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i3384 
=== Succesors ===
=== Usages ===
v1221 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i3384  <|@  <|@
f <@~|@floating>@ <|@
tid v1221 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3358 
y: j1219 
=== Succesors ===
=== Usages ===
v3278 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j3358 y: j1219  <|@  <|@
f <@~|@floating>@ <|@
tid i1739 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -240155
stableDimension: 0
stamp: i32 [-240155] ⇊00000000fffc55e5 ⇈00000000fffc55e5
stampKind: i32
value: int[-240155|0xfffffffffffc55e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1689 i1689 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v3278 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1221 
=== Succesors ===
trueSuccessor: v3277 
falseSuccessor: v3274 
=== Usages ===
=== Predecessor ===
i3384 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1221 #trueSuccessor: v3277 #falseSuccessor: v3274  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B142" "B175" 
    xhandlers
    flags 
    probability 4572479223348030203
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3277 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3276 
=== Usages ===
=== Predecessor ===
v3278 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3276  <|@  <|@
f <@~|@floating>@ <|@
tid v1222 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3372 
y: i3384 
=== Succesors ===
=== Usages ===
v3276 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i3372 y: i3384  <|@  <|@
f <@*|@fixed>@ <|@
tid v3276 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1222 
=== Succesors ===
trueSuccessor: v3267 
falseSuccessor: v3275 
=== Usages ===
=== Predecessor ===
v3277 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1222 #trueSuccessor: v3267 #falseSuccessor: v3275  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B143" 
    xhandlers
    flags 
    probability 4572479223348030203
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3267 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3265 
=== Usages ===
=== Predecessor ===
v3276 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3265  <|@  <|@
f <@*|@fixed>@ <|@
tid v3265 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3263 
=== Predecessor ===
v3267 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B139" "B142" 
    successors "B144" "B145" 
    xhandlers
    flags 
    probability 4576982822975400699
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3263 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3264 v3265 
=== Succesors ===
next: v3302 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3264 v3265 #next: v3302  <|@  <|@
f <@*|@fixed>@ <|@
tid v3302 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 44]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1262 
=== Succesors ===
trueSuccessor: v3298 
falseSuccessor: v3301 
=== Usages ===
=== Predecessor ===
v3263 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1262 #trueSuccessor: v3298 #falseSuccessor: v3301  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B143" 
    successors "B147" 
    xhandlers
    flags 
    probability 4572479223348030203
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3298 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 44]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3296 
=== Usages ===
=== Predecessor ===
v3302 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3296  <|@  <|@
f <@*|@fixed>@ <|@
tid v3296 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 44]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3295 
=== Predecessor ===
v3298 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B143" 
    successors "B146" "B174" 
    xhandlers
    flags 
    probability 4572479223348030203
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3301 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 44]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3310 
=== Usages ===
=== Predecessor ===
v3302 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3310  <|@  <|@
f <@*|@fixed>@ <|@
tid v3310 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 44]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v3357 
=== Succesors ===
trueSuccessor: v3309 
falseSuccessor: v3306 
=== Usages ===
=== Predecessor ===
v3301 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3357 #trueSuccessor: v3309 #falseSuccessor: v3306  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B145" 
    successors "B147" 
    xhandlers
    flags 
    probability 4572479223348030203
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3309 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 44]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3297 
=== Usages ===
=== Predecessor ===
v3310 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3297  <|@  <|@
f <@*|@fixed>@ <|@
tid v3297 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 44]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3295 
=== Predecessor ===
v3309 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B144" "B146" 
    successors "B148" "B149" 
    xhandlers
    flags 
    probability 4576982822975400699
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3295 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 44]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3296 v3297 
=== Succesors ===
next: v2862 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3296 v3297 #next: v2862  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2862 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v2412 
=== Usages ===
j2863 j2865 
=== Predecessor ===
v3295 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v2412  <|@  <|@
f <@*|@fixed>@ <|@
tid v2412 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1262 
=== Succesors ===
trueSuccessor: v2410 
falseSuccessor: v2411 
=== Usages ===
=== Predecessor ===
v2862 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1262 #trueSuccessor: v2410 #falseSuccessor: v2411  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B147" 
    successors "B163" 
    xhandlers
    flags 
    probability 4572479223348030203
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2410 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2428 
=== Usages ===
=== Predecessor ===
v2412 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2428  <|@  <|@
f <@*|@fixed>@ <|@
tid v2428 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2429 
=== Predecessor ===
v2410 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B147" 
    successors "B150" "B151" 
    xhandlers
    flags 
    probability 4572479223348030203
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2411 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2415 
=== Usages ===
=== Predecessor ===
v2412 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2415  <|@  <|@
f <@~|@floating>@ <|@
tid j2865 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v2862 
address: v3437 
=== Succesors ===
=== Usages ===
v3509 v3511 v3513 v3515 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v2862 address: v3437  <|@  <|@
f <@~|@floating>@ <|@
tid a931 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 23]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
op: Uncompress
stamp: a [Lorg/graalvm/compiler/graph/Node;
=== Inputs ===
value: a3383 
=== Succesors ===
=== Usages ===
v3438 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a3383  <|@  <|@
f <@~|@floating>@ <|@
tid v3438 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a931 
index: j1187 
=== Succesors ===
=== Usages ===
j2863 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a931 index: j1187  <|@  <|@
f <@~|@floating>@ <|@
tid j2863 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v2862 
address: v3438 
=== Succesors ===
=== Usages ===
v3510 v3512 v3514 v3516 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v2862 address: v3438  <|@  <|@
f <@*|@fixed>@ <|@
tid v2415 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v2847 
=== Succesors ===
trueSuccessor: v2413 
falseSuccessor: v2414 
=== Usages ===
=== Predecessor ===
v2411 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2847 #trueSuccessor: v2413 #falseSuccessor: v2414  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B149" 
    successors "B154" 
    xhandlers
    flags 
    probability 4570890224317833336
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2413 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2424 
=== Usages ===
=== Predecessor ===
v2415 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2424  <|@  <|@
f <@*|@fixed>@ <|@
tid v2424 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2425 
=== Predecessor ===
v2413 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B149" 
    successors "B152" 
    xhandlers
    flags 
    probability 4563472024093289211
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2414 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2416 
=== Usages ===
=== Predecessor ===
v2415 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2416  <|@  <|@
f <@*|@fixed>@ <|@
tid v2416 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2417 
=== Predecessor ===
v2414 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B151" "B173" 
    successors "B153" "B173" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 1
    probability 4572479223348030203
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2890 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2417 
values: j1818 j2897 
=== Succesors ===
=== Usages ===
v3516 j2897 v3515 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2417 values: j1818 j2897  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2417 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v2416 
=== Succesors ===
next: v3385 
=== Usages ===
v3385 v2420 v2421 j2890 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v2416 #next: v3385  <|@  <|@
f <@~|@floating>@ <|@
tid v3516 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j2863 
index: j2890 
=== Succesors ===
=== Usages ===
v3385 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2863 index: j2890  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3385 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: <n Lorg/graalvm/compiler/graph/Node;,n Lorg/graalvm/compiler/graph/Node;,n Lorg/graalvm/compiler/graph/Node;,n Lorg/graalvm/compiler/graph/Node;,n Lorg/graalvm/compiler/graph/Node;,n Lorg/graalvm/compiler/graph/Node;,n Lorg/graalvm/compiler/graph/Node;,n Lorg/graalvm/compiler/graph/Node;>
=== Inputs ===
stateBefore: - 
guard: v2417 
address: v3516 
=== Succesors ===
next: v3202 
=== Usages ===
v3202 
=== Predecessor ===
v2417 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2417 address: v3516 #next: v3202  <|@  <|@
f <@~|@floating>@ <|@
tid v3515 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j2865 
index: j2890 
=== Succesors ===
=== Usages ===
v3202 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2865 index: j2890  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3202 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: Object
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3515 
value: v3385 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2423 
=== Usages ===
=== Predecessor ===
v3385 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3515 value: v3385 stateAfter: - lastLocationAccess: - #next: v2423  <|@  <|@
f <@~|@floating>@ <|@
tid j2897 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2890 
y: j1770 
=== Succesors ===
=== Usages ===
j2882 j2890 v2898 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2890 y: j1770  <|@  <|@
f <@~|@floating>@ <|@
tid v2898 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2846 
y: j2897 
=== Succesors ===
=== Usages ===
v2423 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2846 y: j2897  <|@  <|@
f <@*|@fixed>@ <|@
tid v2423 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2898 
=== Succesors ===
trueSuccessor: v2420 
falseSuccessor: v2422 
=== Usages ===
=== Predecessor ===
v3202 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2898 #trueSuccessor: v2420 #falseSuccessor: v2422  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B153"
    from_bci -1
    to_bci -1
    predecessors "B152" 
    successors "B154" 
    xhandlers
    flags 
    probability 4563472024093289211
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2420 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v2417 
=== Succesors ===
next: v2426 
=== Usages ===
=== Predecessor ===
v2423 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v2417 #next: v2426  <|@  <|@
f <@*|@fixed>@ <|@
tid v2426 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2425 
=== Predecessor ===
v2420 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B154"
    from_bci -1
    to_bci -1
    predecessors "B150" "B153" 
    successors "B155" "B156" 
    xhandlers
    flags 
    probability 4572479223348030203
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2882 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2425 
values: j1818 j2897 
=== Succesors ===
=== Usages ===
v3514 j2889 j2874 v2900 v3513 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2425 values: j1818 j2897  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2425 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2424 v2426 
=== Succesors ===
next: v2444 
=== Usages ===
j2882 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2424 v2426 #next: v2444  <|@  <|@
f <@~|@floating>@ <|@
tid v2900 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2852 
y: j2882 
=== Succesors ===
=== Usages ===
v2444 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2852 y: j2882  <|@  <|@
f <@*|@fixed>@ <|@
tid v2444 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2900 
=== Succesors ===
trueSuccessor: v2443 
falseSuccessor: v2442 
=== Usages ===
=== Predecessor ===
v2425 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2900 #trueSuccessor: v2443 #falseSuccessor: v2442  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B155"
    from_bci -1
    to_bci -1
    predecessors "B154" 
    successors "B157" 
    xhandlers
    flags 
    probability 4563472024093289211
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2443 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2447 
=== Usages ===
=== Predecessor ===
v2444 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2447  <|@  <|@
f <@*|@fixed>@ <|@
tid v2447 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2436 
=== Predecessor ===
v2443 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B156"
    from_bci -1
    to_bci -1
    predecessors "B154" 
    successors "B157" 
    xhandlers
    flags 
    probability 4570890224317833336
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2442 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3386 
=== Usages ===
v3386 
=== Predecessor ===
v2444 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3386  <|@  <|@
f <@~|@floating>@ <|@
tid v3514 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j2863 
index: j2882 
=== Succesors ===
=== Usages ===
v3386 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2863 index: j2882  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3386 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: <n Lorg/graalvm/compiler/graph/Node;,n Lorg/graalvm/compiler/graph/Node;,n Lorg/graalvm/compiler/graph/Node;,n Lorg/graalvm/compiler/graph/Node;>
=== Inputs ===
stateBefore: - 
guard: v2442 
address: v3514 
=== Succesors ===
next: v3200 
=== Usages ===
v3200 
=== Predecessor ===
v2442 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2442 address: v3514 #next: v3200  <|@  <|@
f <@~|@floating>@ <|@
tid v3513 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j2865 
index: j2882 
=== Succesors ===
=== Usages ===
v3200 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2865 index: j2882  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3200 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: Object
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3513 
value: v3386 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2435 
=== Usages ===
=== Predecessor ===
v3386 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3513 value: v3386 stateAfter: - lastLocationAccess: - #next: v2435  <|@  <|@
f <@~|@floating>@ <|@
tid j2889 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2882 
y: j2813 
=== Succesors ===
=== Usages ===
j2874 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2882 y: j2813  <|@  <|@
f <@*|@fixed>@ <|@
tid v2435 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2436 
=== Predecessor ===
v3200 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B157"
    from_bci -1
    to_bci -1
    predecessors "B156" "B155" 
    successors "B158" "B159" 
    xhandlers
    flags 
    probability 4572479223348030203
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2874 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2436 
values: j2889 j2882 
=== Succesors ===
=== Usages ===
v3512 j2881 j2866 v2902 v3511 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2436 values: j2889 j2882  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2436 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2435 v2447 
=== Succesors ===
next: v2450 
=== Usages ===
j2874 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2435 v2447 #next: v2450  <|@  <|@
f <@~|@floating>@ <|@
tid v2902 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2856 
y: j2874 
=== Succesors ===
=== Usages ===
v2450 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2856 y: j2874  <|@  <|@
f <@*|@fixed>@ <|@
tid v2450 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2902 
=== Succesors ===
trueSuccessor: v2449 
falseSuccessor: v2448 
=== Usages ===
=== Predecessor ===
v2436 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2902 #trueSuccessor: v2449 #falseSuccessor: v2448  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B158"
    from_bci -1
    to_bci -1
    predecessors "B157" 
    successors "B160" 
    xhandlers
    flags 
    probability 4563472024093289211
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2449 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2453 
=== Usages ===
=== Predecessor ===
v2450 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2453  <|@  <|@
f <@*|@fixed>@ <|@
tid v2453 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2439 
=== Predecessor ===
v2449 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B159"
    from_bci -1
    to_bci -1
    predecessors "B157" 
    successors "B160" 
    xhandlers
    flags 
    probability 4570890224317833336
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2448 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3387 
=== Usages ===
v3387 
=== Predecessor ===
v2450 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3387  <|@  <|@
f <@~|@floating>@ <|@
tid v3512 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j2863 
index: j2874 
=== Succesors ===
=== Usages ===
v3387 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2863 index: j2874  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3387 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: <n Lorg/graalvm/compiler/graph/Node;,n Lorg/graalvm/compiler/graph/Node;>
=== Inputs ===
stateBefore: - 
guard: v2448 
address: v3512 
=== Succesors ===
next: v3198 
=== Usages ===
v3198 
=== Predecessor ===
v2448 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2448 address: v3512 #next: v3198  <|@  <|@
f <@~|@floating>@ <|@
tid v3511 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j2865 
index: j2874 
=== Succesors ===
=== Usages ===
v3198 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2865 index: j2874  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3198 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: Object
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3511 
value: v3387 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2438 
=== Usages ===
=== Predecessor ===
v3387 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3511 value: v3387 stateAfter: - lastLocationAccess: - #next: v2438  <|@  <|@
f <@~|@floating>@ <|@
tid j2881 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2874 
y: j2827 
=== Succesors ===
=== Usages ===
j2866 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2874 y: j2827  <|@  <|@
f <@*|@fixed>@ <|@
tid v2438 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2439 
=== Predecessor ===
v3198 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B160"
    from_bci -1
    to_bci -1
    predecessors "B159" "B158" 
    successors "B161" "B162" 
    xhandlers
    flags 
    probability 4572479223348030203
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2866 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2439 
values: j2881 j2874 
=== Succesors ===
=== Usages ===
v3510 v2904 v3509 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2439 values: j2881 j2874  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2439 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2438 v2453 
=== Succesors ===
next: v2456 
=== Usages ===
j2866 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2438 v2453 #next: v2456  <|@  <|@
f <@~|@floating>@ <|@
tid v2904 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1189 
y: j2866 
=== Succesors ===
=== Usages ===
v2456 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1189 y: j2866  <|@  <|@
f <@*|@fixed>@ <|@
tid v2456 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2904 
=== Succesors ===
trueSuccessor: v2455 
falseSuccessor: v2454 
=== Usages ===
=== Predecessor ===
v2439 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2904 #trueSuccessor: v2455 #falseSuccessor: v2454  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B161"
    from_bci -1
    to_bci -1
    predecessors "B160" 
    successors "B163" 
    xhandlers
    flags 
    probability 4563472024093289211
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2455 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2459 
=== Usages ===
=== Predecessor ===
v2456 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2459  <|@  <|@
f <@*|@fixed>@ <|@
tid v2459 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2429 
=== Predecessor ===
v2455 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B162"
    from_bci -1
    to_bci -1
    predecessors "B160" 
    successors "B163" 
    xhandlers
    flags 
    probability 4570890224317833336
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2454 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a3388 
=== Usages ===
a3388 
=== Predecessor ===
v2456 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a3388  <|@  <|@
f <@~|@floating>@ <|@
tid v3510 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j2863 
index: j2866 
=== Succesors ===
=== Usages ===
a3388 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2863 index: j2866  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3388 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: n Lorg/graalvm/compiler/graph/Node;
=== Inputs ===
stateBefore: - 
guard: v2454 
address: v3510 
=== Succesors ===
next: v3196 
=== Usages ===
v3196 
=== Predecessor ===
v2454 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2454 address: v3510 #next: v3196  <|@  <|@
f <@~|@floating>@ <|@
tid v3509 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j2865 
index: j2866 
=== Succesors ===
=== Usages ===
v3196 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2865 index: j2866  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3196 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: Object
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3509 
value: a3388 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2441 
=== Usages ===
=== Predecessor ===
a3388 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3509 value: a3388 stateAfter: - lastLocationAccess: - #next: v2441  <|@  <|@
f <@*|@fixed>@ <|@
tid v2441 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2429 
=== Predecessor ===
v3196 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B163"
    from_bci -1
    to_bci -1
    predecessors "B148" "B162" "B161" 
    successors "B164" "B165" 
    xhandlers
    flags 
    probability 4576982822975400699
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2429 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2428 v2441 v2459 
=== Succesors ===
next: v2001 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2428 v2441 v2459 #next: v2001  <|@  <|@
f <@*|@fixed>@ <|@
tid v2001 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1267 
=== Succesors ===
trueSuccessor: v1999 
falseSuccessor: v2000 
=== Usages ===
=== Predecessor ===
v2429 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1267 #trueSuccessor: v1999 #falseSuccessor: v2000  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B164"
    from_bci -1
    to_bci -1
    predecessors "B163" 
    successors "B168" 
    xhandlers
    flags 
    probability 4572479223348030203
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1999 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2025 
=== Usages ===
=== Predecessor ===
v2001 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2025  <|@  <|@
f <@*|@fixed>@ <|@
tid v2025 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2024 
=== Predecessor ===
v1999 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B165"
    from_bci -1
    to_bci -1
    predecessors "B163" 
    successors "B166" 
    xhandlers
    flags 
    probability 4572479223348030203
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2000 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: j2002 
=== Usages ===
=== Predecessor ===
v2001 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2002  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2002 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: v3437 
=== Succesors ===
next: j2004 
=== Usages ===
j2003 
=== Predecessor ===
v2000 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v3437 #next: j2004  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2004 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: v3437 
=== Succesors ===
next: v2012 
=== Usages ===
j2008 
=== Predecessor ===
j2002 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v3437 #next: v2012  <|@  <|@
f <@~|@floating>@ <|@
tid j2008 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2004 
y: j2007 
=== Succesors ===
=== Usages ===
j2009 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2004 y: j2007  <|@  <|@
f <@~|@floating>@ <|@
tid j2009 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j2008 
y: i1852 
=== Succesors ===
=== Usages ===
j2010 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j2008 y: i1852  <|@  <|@
f <@~|@floating>@ <|@
tid j2003 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j2002 
y: i1852 
=== Succesors ===
=== Usages ===
j2010 j2023 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j2002 y: i1852  <|@  <|@
f <@~|@floating>@ <|@
tid j2010 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i64 [-36028797018963967 - 36028797018963967]
=== Inputs ===
x: j2009 
y: j2003 
=== Succesors ===
=== Usages ===
j2011 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j2009 y: j2003  <|@  <|@
f <@~|@floating>@ <|@
tid j2011 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-36028797018963966 - 36028797018963968]
=== Inputs ===
x: j2010 
y: j1778 
=== Succesors ===
=== Usages ===
j2014 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2010 y: j1778  <|@  <|@
f <@*|@fixed>@ <|@
tid v2012 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2013 
=== Predecessor ===
j2004 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B166"
    from_bci -1
    to_bci -1
    predecessors "B165" "B172" 
    successors "B167" "B172" 
    xhandlers
    flags "llh" 
    loop_index 9
    loop_depth 1
    probability 4576982822975400699
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2014 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2013 
values: j2011 j2015 
=== Succesors ===
=== Usages ===
j2015 v2016 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2013 values: j2011 j2015  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2013 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 2.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v2012 
=== Succesors ===
next: v2019 
=== Usages ===
j2014 v2017 v2022 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v2012 #next: v2019  <|@  <|@
f <@~|@floating>@ <|@
tid v2016 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2014 
y: j1778 
=== Succesors ===
=== Usages ===
v2019 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2014 y: j1778  <|@  <|@
f <@*|@fixed>@ <|@
tid v2019 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v2016 
=== Succesors ===
trueSuccessor: v2017 
falseSuccessor: v2018 
=== Usages ===
=== Predecessor ===
v2013 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2016 #trueSuccessor: v2017 #falseSuccessor: v2018  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B167"
    from_bci -1
    to_bci -1
    predecessors "B166" 
    successors "B168" 
    xhandlers
    flags 
    probability 4572479223348030203
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2017 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v2013 
=== Succesors ===
next: v2026 
=== Usages ===
=== Predecessor ===
v2019 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v2013 #next: v2026  <|@  <|@
f <@*|@fixed>@ <|@
tid v2026 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2024 
=== Predecessor ===
v2017 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B168"
    from_bci -1
    to_bci -1
    predecessors "B164" "B167" 
    successors "B169" 
    xhandlers
    flags 
    probability 4576982822975400699
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2024 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2025 v2026 
=== Succesors ===
next: v724 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2025 v2026 #next: v724  <|@  <|@
f <@*|@fixed>@ <|@
tid v724 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v669 
=== Predecessor ===
v2024 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B169"
    from_bci -1
    to_bci -1
    predecessors "B168" "B170" 
    successors "B170" "B171" 
    xhandlers
    flags "llh" 
    loop_index 10
    loop_depth 1
    probability 4586897108778445428
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i670 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v669 
values: i13 i680 
=== Succesors ===
=== Usages ===
i680 v672 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v669 values: i13 i680  <|@  <|@
f <@~|@floating>@ <|@
tid i717 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v669 
values: i3372 i693 
=== Succesors ===
=== Usages ===
i693 i732 i718 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v669 values: i3372 i693  <|@  <|@
f <@~|@floating>@ <|@
tid i718 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v669 
values: i632 i717 
=== Succesors ===
=== Usages ===
i733 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v669 values: i632 i717  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v669 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.622443122521394
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:138) [bci: 15]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 2
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v724 
=== Succesors ===
next: v676 
=== Usages ===
i670 v674 v681 i717 i718 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v724 #next: v676  <|@  <|@
f <@~|@floating>@ <|@
tid v672 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:138) [bci: 18]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i670 
y: i3371 
=== Succesors ===
=== Usages ===
v676 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i670 y: i3371  <|@  <|@
f <@*|@fixed>@ <|@
tid v676 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:138) [bci: 18]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
trueSuccessorProbability: 0.7836641850436589
=== Inputs ===
condition: v672 
=== Succesors ===
trueSuccessor: v673 
falseSuccessor: v674 
=== Usages ===
=== Predecessor ===
v669 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v672 #trueSuccessor: v673 #falseSuccessor: v674  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B170"
    from_bci -1
    to_bci -1
    predecessors "B169" 
    successors "B169" 
    xhandlers
    flags "lle" 
    loop_index 10
    loop_depth 1
    probability 4585439808479858613
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v673 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:139) [bci: 21]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v681 
=== Usages ===
=== Predecessor ===
v676 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v681  <|@  <|@
f <@~|@floating>@ <|@
tid i693 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:360) [bci: 26]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i32
=== Inputs ===
x: i717 
y: i23 
=== Succesors ===
=== Usages ===
i717 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i717 y: i23  <|@  <|@
f <@~|@floating>@ <|@
tid i680 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:138) [bci: 45]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i32
=== Inputs ===
x: i670 
y: i23 
=== Succesors ===
=== Usages ===
i670 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i670 y: i23  <|@  <|@
f <@*|@fixed>@ <|@
tid v681 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:138) [bci: 15]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
loopBegin: v669 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v673 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v669  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B171"
    from_bci -1
    to_bci -1
    predecessors "B169" 
    successors "B190" 
    xhandlers
    flags 
    probability 4576982822975400699
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v674 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:143) [bci: 51]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v669 
=== Succesors ===
next: v727 
=== Usages ===
=== Predecessor ===
v676 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v669 #next: v727  <|@  <|@
f <@*|@fixed>@ <|@
tid v727 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v725 
=== Predecessor ===
v674 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B172"
    from_bci -1
    to_bci -1
    predecessors "B166" 
    successors "B166" 
    xhandlers
    flags "lle" 
    loop_index 9
    loop_depth 1
    probability 4572479223348030203
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2018 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2021 
=== Usages ===
=== Predecessor ===
v2019 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2021  <|@  <|@
f <@~|@floating>@ <|@
tid j2015 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2014 
y: j1188 
=== Succesors ===
=== Usages ===
j2014 j2020 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2014 y: j1188  <|@  <|@
f <@~|@floating>@ <|@
tid j2023 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [4682670080 - 36028801701634047] ⇈00ffffffffffffff
=== Inputs ===
x: j2003 
y: j1874 
=== Succesors ===
=== Usages ===
j2020 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2003 y: j1874  <|@  <|@
f <@~|@floating>@ <|@
tid j2020 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2015 
y: j2023 
=== Succesors ===
=== Usages ===
v2021 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2015 y: j2023  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2021 <|@
d <@d|@=== Debug Properties ===
kind: boolean
stamp: void
=== Inputs ===
address: j2020 
value: i13 
=== Succesors ===
next: v2022 
=== Usages ===
=== Predecessor ===
v2018 >@ <|@
instruction <@DirectStore|@org.graalvm.compiler.replacements.nodes.DirectStoreNode>@ address: j2020 value: i13 #next: v2022  <|@  <|@
f <@*|@fixed>@ <|@
tid v2022 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v2013 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2021 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v2013  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B173"
    from_bci -1
    to_bci -1
    predecessors "B152" 
    successors "B152" 
    xhandlers
    flags "lle" 
    loop_index 8
    loop_depth 1
    probability 4570890224317833336
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2422 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2421 
=== Usages ===
=== Predecessor ===
v2423 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2421  <|@  <|@
f <@*|@fixed>@ <|@
tid v2421 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v2417 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2422 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v2417  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B174"
    from_bci -1
    to_bci -1
    predecessors "B145" 
    successors "B237" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3306 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 44]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1740 
=== Usages ===
=== Predecessor ===
v3310 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1740  <|@  <|@
f <@~|@floating>@ <|@
tid i1741 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -242459
stableDimension: 0
stamp: i32 [-242459] ⇊00000000fffc4ce5 ⇈00000000fffc4ce5
stampKind: i32
value: int[-242459|0xfffffffffffc4ce5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1689 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1740 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1686 
=== Predecessor ===
v3306 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B175"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B237" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3275 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3550 
=== Usages ===
=== Predecessor ===
v3276 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3550  <|@  <|@
f <@*|@fixed>@ <|@
tid v3550 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1686 
=== Predecessor ===
v3275 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B176"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B237" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3274 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1738 
=== Usages ===
=== Predecessor ===
v3278 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1738  <|@  <|@
f <@*|@fixed>@ <|@
tid v1738 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1686 
=== Predecessor ===
v3274 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B177"
    from_bci -1
    to_bci -1
    predecessors "B135" 
    successors "B178" "B179" 
    xhandlers
    flags 
    probability 4544778362961599667
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v796 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3294 
=== Usages ===
=== Predecessor ===
v735 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3294  <|@  <|@
f <@*|@fixed>@ <|@
tid v3294 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 44]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1262 
=== Succesors ===
trueSuccessor: v3290 
falseSuccessor: v3293 
=== Usages ===
=== Predecessor ===
v796 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1262 #trueSuccessor: v3290 #falseSuccessor: v3293  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B178"
    from_bci -1
    to_bci -1
    predecessors "B177" 
    successors "B181" 
    xhandlers
    flags 
    probability 4540274763334229171
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3290 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 44]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3288 
=== Usages ===
=== Predecessor ===
v3294 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3288  <|@  <|@
f <@*|@fixed>@ <|@
tid v3288 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 44]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3287 
=== Predecessor ===
v3290 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B179"
    from_bci -1
    to_bci -1
    predecessors "B177" 
    successors "B180" "B193" 
    xhandlers
    flags 
    probability 4540274763334229171
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3293 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 44]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3318 
=== Usages ===
=== Predecessor ===
v3294 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3318  <|@  <|@
f <@*|@fixed>@ <|@
tid v3318 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 44]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v3357 
=== Succesors ===
trueSuccessor: v3317 
falseSuccessor: v3314 
=== Usages ===
=== Predecessor ===
v3293 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3357 #trueSuccessor: v3317 #falseSuccessor: v3314  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B180"
    from_bci -1
    to_bci -1
    predecessors "B179" 
    successors "B181" 
    xhandlers
    flags 
    probability 4540274763334229171
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3317 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 44]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3289 
=== Usages ===
=== Predecessor ===
v3318 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3289  <|@  <|@
f <@*|@fixed>@ <|@
tid v3289 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 44]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3287 
=== Predecessor ===
v3317 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B181"
    from_bci -1
    to_bci -1
    predecessors "B178" "B180" 
    successors "B182" 
    xhandlers
    flags 
    probability 4544778362961599667
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3287 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 44]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3288 v3289 
=== Succesors ===
next: v786 
=== Usages ===
v1237 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3288 v3289 #next: v786  <|@  <|@
f <@*|@fixed>@ <|@
tid v786 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v737 
=== Predecessor ===
v3287 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B182"
    from_bci -1
    to_bci -1
    predecessors "B181" "B185" 
    successors "B183" "B189" 
    xhandlers
    flags "llh" 
    loop_index 11
    loop_depth 1
    probability 4554586948177749660
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i738 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v737 
values: i13 i748 
=== Succesors ===
=== Usages ===
?739 v740 v3426 ?757 i748 ?757 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v737 values: i13 i748  <|@  <|@
f <@~|@floating>@ <|@
tid i779 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v737 
values: i3372 i761 
=== Succesors ===
=== Usages ===
i754 v961 ?781 i761 i732 ?1517 i780 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v737 values: i3372 i761  <|@  <|@
f <@~|@floating>@ <|@
tid i780 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v737 
values: i632 i779 
=== Succesors ===
=== Usages ===
?781 i733 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v737 values: i632 i779  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v737 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.622443122521394
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:138) [bci: 15]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 2
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v786 
=== Succesors ===
next: v744 
=== Usages ===
i738 v742 v749 i779 i780 v1370 v1365 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v786 #next: v744  <|@  <|@
f <@~|@floating>@ <|@
tid v740 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:138) [bci: 18]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i738 
y: i3371 
=== Succesors ===
=== Usages ===
v744 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i738 y: i3371  <|@  <|@
f <@*|@fixed>@ <|@
tid v744 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:138) [bci: 18]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
trueSuccessorProbability: 0.7836641850436589
=== Inputs ===
condition: v740 
=== Succesors ===
trueSuccessor: v741 
falseSuccessor: v742 
=== Usages ===
=== Predecessor ===
v737 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v740 #trueSuccessor: v741 #falseSuccessor: v742  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B183"
    from_bci -1
    to_bci -1
    predecessors "B182" 
    successors "B184" "B187" 
    xhandlers
    flags 
    loop_index 11
    loop_depth 1
    probability 4553299463534714735
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v741 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:139) [bci: 21]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: i3389 
=== Usages ===
v1237 
=== Predecessor ===
v744 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i3389  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3389 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList.offset
nodeSourcePosition: at java.util.SubList.access$000(AbstractList.java:613) [bci: 1]
at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 13]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:139) [bci: 22]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v3416 
=== Succesors ===
next: i3390 
=== Usages ===
i754 
=== Predecessor ===
v741 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3416 #next: i3390  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3390 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList.size
nodeSourcePosition: at java.util.SubList.access$200(AbstractList.java:613) [bci: 1]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 8]
at java.util.AbstractCollection.toArray(AbstractCollection.java:139) [bci: 22]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v3415 
=== Succesors ===
next: v1366 
=== Usages ===
v752 
=== Predecessor ===
i3389 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3415 #next: v1366  <|@  <|@
f <@~|@floating>@ <|@
tid i754 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 16]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:139) [bci: 22]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i32
=== Inputs ===
x: i779 
y: i3389 
=== Succesors ===
=== Usages ===
v752 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i779 y: i3389  <|@  <|@
f <@~|@floating>@ <|@
tid v752 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:139) [bci: 22]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i754 
y: i3390 
=== Succesors ===
=== Usages ===
v1366 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i754 y: i3390  <|@  <|@
f <@~|@floating>@ <|@
tid a3556 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 5]
at java.util.SubList.size(AbstractList.java:645) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 1]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
op: Uncompress
stamp: a Ljava/util/AbstractList;
=== Inputs ===
value: a3368 
=== Succesors ===
=== Usages ===
?781 ?781 v961 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a3368  <|@  <|@
tid ?781 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a652 
values: i779 i780 i3369 a3556 a3556 
=== Succesors ===
=== Usages ===
?739 ?1517 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a652 values: i779 i780 i3369 a3556 a3556  <|@  <|@
tid ?750 <|@
d <@d|@=== Debug Properties ===
bci: 1
code: ResolvedJavaMethodBytecode<ArrayList.addAll(Collection)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: ArrayList.java
sourceLine: 581
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - 
=== Succesors ===
=== Usages ===
?739 ?757 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1366 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:139) [bci: 27]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v752 
=== Succesors ===
trueSuccessor: v1362 
falseSuccessor: v1365 
=== Usages ===
=== Predecessor ===
i3390 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v752 #trueSuccessor: v1362 #falseSuccessor: v1365  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B184"
    from_bci -1
    to_bci -1
    predecessors "B183" 
    successors "B185" "B186" 
    xhandlers
    flags 
    loop_index 11
    loop_depth 1
    probability 4553299463534714735
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1362 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:139) [bci: 27]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: i3391 
=== Usages ===
=== Predecessor ===
v1366 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i3391  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3391 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 4]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v3425 
=== Succesors ===
next: v1371 
=== Usages ===
v764 
=== Predecessor ===
v1362 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3425 #next: v1371  <|@  <|@
f <@~|@floating>@ <|@
tid v764 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 11]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3369 
y: i3391 
=== Succesors ===
=== Usages ===
v1371 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i3369 y: i3391  <|@  <|@
f <@*|@fixed>@ <|@
tid v1371 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 11]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v764 
=== Succesors ===
trueSuccessor: v1367 
falseSuccessor: v1370 
=== Usages ===
=== Predecessor ===
i3391 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v764 #trueSuccessor: v1367 #falseSuccessor: v1370  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B185"
    from_bci -1
    to_bci -1
    predecessors "B184" 
    successors "B182" 
    xhandlers
    flags "lle" 
    loop_index 11
    loop_depth 1
    probability 4553299463534714735
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1367 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 11]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: a759 
=== Usages ===
=== Predecessor ===
v1371 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a759  <|@  <|@
tid v961 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
returnStamp: a Ljava/lang/Object;
signature: [Ljdk.vm.ci.meta.JavaType;@646cf9a8
stamp: void
targetMethod: HotSpotMethod<AbstractList.get(int)>
=== Inputs ===
arguments: a3556 i779 
=== Succesors ===
=== Usages ===
a759 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a3556 i779  <|@  <|@
tid ?755 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a399 
materializedValue: a399 
=== Succesors ===
=== Usages ===
?757 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a399 materializedValue: a399  <|@  <|@
tid ?757 <|@
d <@d|@=== Debug Properties ===
bci: 39
code: ResolvedJavaMethodBytecode<AbstractCollection.toArray()>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 141
stackSize: 2
=== Inputs ===
outerFrameState: ?750 
values: - a1650 a399 i738 a1650 i738 
virtualObjectMappings: ?755 
=== Succesors ===
=== Usages ===
?762 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?750 values: - a1650 a399 i738 a1650 i738 virtualObjectMappings: ?755  <|@  <|@
tid ?762 <|@
d <@d|@=== Debug Properties ===
bci: 11
code: ResolvedJavaMethodBytecode<SubList$1.next()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 707
stackSize: 0
=== Inputs ===
outerFrameState: ?757 
values: - 
=== Succesors ===
=== Usages ===
?1517 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?757 values: -  <|@  <|@
tid ?1517 <|@
d <@d|@=== Debug Properties ===
bci: 14
code: ResolvedJavaMethodBytecode<AbstractList$Itr.next()>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 358
stackSize: 0
=== Inputs ===
outerFrameState: ?762 
values: a652 i779 - 
virtualObjectMappings: ?791 ?781 
=== Succesors ===
=== Usages ===
a759 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?762 values: a652 i779 - virtualObjectMappings: ?791 ?781  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a759 <|@
d <@d|@=== Debug Properties ===
bci: 14
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
polymorphic: false
stamp: a Ljava/lang/Object;
targetMethod: Direct#AbstractList.get
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v961 
stateDuring: ?1517 
=== Succesors ===
next: v970 
=== Usages ===
a969 
=== Predecessor ===
v1367 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v961 stateDuring: ?1517 #next: v970  <|@  <|@
f <@~|@floating>@ <|@
tid v1237 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v3287 v741 
=== Succesors ===
=== Usages ===
v970 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v3287 v741  <|@  <|@
f <@~|@floating>@ <|@
tid v3426 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1650 
index: i738 
=== Succesors ===
=== Usages ===
v970 j2028 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1650 index: i738  <|@  <|@
f <@~|@floating>@ <|@
tid a969 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 44]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
op: Compress
stamp: n Ljava/lang/Object;
=== Inputs ===
value: a759 
=== Succesors ===
=== Usages ===
v970 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a759  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v970 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 44]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1237 
address: v3426 
value: a969 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j2028 
=== Usages ===
=== Predecessor ===
a759 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1237 address: v3426 value: a969 stateAfter: - lastLocationAccess: - #next: j2028  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2028 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 44]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v3426 
=== Succesors ===
next: v2032 
=== Usages ===
j2029 
=== Predecessor ===
v970 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v3426 #next: v2032  <|@  <|@
f <@~|@floating>@ <|@
tid j2029 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 44]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j2028 
y: i1852 
=== Succesors ===
=== Usages ===
v3464 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j2028 y: i1852  <|@  <|@
f <@~|@floating>@ <|@
tid v3464 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2029 
index: j1874 
=== Succesors ===
=== Usages ===
v2032 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2029 index: j1874  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2032 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 44]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3464 
value: i2033 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v749 
=== Usages ===
=== Predecessor ===
j2028 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3464 value: i2033 stateAfter: - lastLocationAccess: - #next: v749  <|@  <|@
f <@~|@floating>@ <|@
tid i761 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:360) [bci: 26]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i32
=== Inputs ===
x: i779 
y: i23 
=== Succesors ===
=== Usages ===
i779 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i779 y: i23  <|@  <|@
f <@~|@floating>@ <|@
tid i748 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:138) [bci: 45]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i32
=== Inputs ===
x: i738 
y: i23 
=== Succesors ===
=== Usages ===
i738 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i738 y: i23  <|@  <|@
f <@*|@fixed>@ <|@
tid v749 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:138) [bci: 15]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
loopBegin: v737 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2032 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v737  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B186"
    from_bci -1
    to_bci -1
    predecessors "B184" 
    successors "B188" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1370 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 11]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v737 
=== Succesors ===
next: v1758 
=== Usages ===
=== Predecessor ===
v1371 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v737 #next: v1758  <|@  <|@
f <@~|@floating>@ <|@
tid i1759 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -245779
stableDimension: 0
stamp: i32 [-245779] ⇊00000000fffc3fed ⇈00000000fffc3fed
stampKind: i32
value: int[-245779|0xfffffffffffc3fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1755 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1758 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1752 
=== Predecessor ===
v1370 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B187"
    from_bci -1
    to_bci -1
    predecessors "B183" 
    successors "B188" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1365 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:139) [bci: 27]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v737 
=== Succesors ===
next: v1753 
=== Usages ===
=== Predecessor ===
v1366 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v737 #next: v1753  <|@  <|@
f <@~|@floating>@ <|@
tid i1754 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -245011
stableDimension: 0
stamp: i32 [-245011] ⇊00000000fffc42ed ⇈00000000fffc42ed
stampKind: i32
value: int[-245011|0xfffffffffffc42ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1755 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1753 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1752 
=== Predecessor ===
v1365 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B188"
    from_bci -1
    to_bci -1
    predecessors "B187" "B186" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1755 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-245779 - -245011] ⇊00000000fffc02ed ⇈00000000fffc7fed
valueDescription: i32
=== Inputs ===
merge: v1752 
values: i1754 i1759 
=== Succesors ===
=== Usages ===
v1757 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1752 values: i1754 i1759  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1752 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1753 v1758 
=== Succesors ===
next: v1757 
=== Usages ===
i1755 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1753 v1758 #next: v1757  <|@  <|@
tid ?739 <|@
d <@d|@=== Debug Properties ===
bci: 15
code: ResolvedJavaMethodBytecode<AbstractCollection.toArray()>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 138
stackSize: 0
=== Inputs ===
outerFrameState: ?750 
values: - a1650 a399 i738 
virtualObjectMappings: ?791 ?781 
=== Succesors ===
=== Usages ===
v1757 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?750 values: - a1650 a399 i738 virtualObjectMappings: ?791 ?781  <|@  <|@
f <@*|@fixed>@ <|@
tid v1757 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?739 
actionAndReason: i1755 
speculation: a1548 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1752 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?739 actionAndReason: i1755 speculation: a1548  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B189"
    from_bci -1
    to_bci -1
    predecessors "B182" 
    successors "B190" 
    xhandlers
    flags 
    probability 4544778362961599667
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v742 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:143) [bci: 51]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v737 
=== Succesors ===
next: v797 
=== Usages ===
=== Predecessor ===
v744 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v737 #next: v797  <|@  <|@
f <@*|@fixed>@ <|@
tid v797 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v725 
=== Predecessor ===
v742 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B190"
    from_bci -1
    to_bci -1
    predecessors "B129" "B171" "B189" 
    successors "B191" "B192" 
    xhandlers
    flags 
    probability 4594445899282223281
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i732 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v725 
values: i654 i717 i779 
=== Succesors ===
=== Usages ===
?661 i345 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v725 values: i654 i717 i779  <|@  <|@
f <@~|@floating>@ <|@
tid i733 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v725 
values: i655 i718 i780 
=== Succesors ===
=== Usages ===
?661 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v725 values: i655 i718 i780  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v725 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v726 v727 v797 
=== Succesors ===
next: i3392 
=== Usages ===
i732 i733 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v726 v727 v797 #next: i3392  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3392 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList.offset
nodeSourcePosition: at java.util.SubList.access$000(AbstractList.java:613) [bci: 1]
at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 13]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:143) [bci: 52]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v3416 
=== Succesors ===
next: i3393 
=== Usages ===
i345 
=== Predecessor ===
v725 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3416 #next: i3393  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3393 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList.size
nodeSourcePosition: at java.util.SubList.access$200(AbstractList.java:613) [bci: 1]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 8]
at java.util.AbstractCollection.toArray(AbstractCollection.java:143) [bci: 52]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v3415 
=== Succesors ===
next: v1375 
=== Usages ===
v326 
=== Predecessor ===
i3392 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3415 #next: v1375  <|@  <|@
f <@~|@floating>@ <|@
tid i345 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 16]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:143) [bci: 52]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i32
=== Inputs ===
x: i732 
y: i3392 
=== Succesors ===
=== Usages ===
v326 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i732 y: i3392  <|@  <|@
f <@~|@floating>@ <|@
tid v326 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:143) [bci: 52]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i345 
y: i3393 
=== Succesors ===
=== Usages ===
v1375 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i345 y: i3393  <|@  <|@
f <@*|@fixed>@ <|@
tid v1375 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:143) [bci: 57]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v326 
=== Succesors ===
trueSuccessor: v1374 
falseSuccessor: v1372 
=== Usages ===
=== Predecessor ===
i3393 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v326 #trueSuccessor: v1374 #falseSuccessor: v1372  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B191"
    from_bci -1
    to_bci -1
    predecessors "B190" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1374 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:143) [bci: 57]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1373 
=== Usages ===
=== Predecessor ===
v1375 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1373  <|@  <|@
tid ?241 <|@
d <@d|@=== Debug Properties ===
bci: 1
code: ResolvedJavaMethodBytecode<ArrayList.addAll(Collection)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: ArrayList.java
sourceLine: 581
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - 
=== Succesors ===
=== Usages ===
?221 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - -  <|@  <|@
f <@~|@floating>@ <|@
tid a878 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 5]
at java.util.SubList.size(AbstractList.java:645) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 1]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
op: Uncompress
stamp: a Ljava/util/AbstractList;
=== Inputs ===
value: a3368 
=== Succesors ===
=== Usages ===
?661 ?661 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a3368  <|@  <|@
tid ?661 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a652 
values: i732 i733 i3369 a878 a878 
=== Succesors ===
=== Usages ===
?221 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a652 values: i732 i733 i3369 a878 a878  <|@  <|@
tid ?221 <|@
d <@d|@=== Debug Properties ===
bci: 51
code: ResolvedJavaMethodBytecode<AbstractCollection.toArray()>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:143) [bci: 51]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 143
stackSize: 0
=== Inputs ===
outerFrameState: ?241 
values: - a1650 a399 - 
virtualObjectMappings: ?791 ?661 
=== Succesors ===
=== Usages ===
v1373 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?241 values: - a1650 a399 - virtualObjectMappings: ?791 ?661  <|@  <|@
f <@*|@fixed>@ <|@
tid v1373 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 973
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:143) [bci: 57]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?221 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1374 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?221  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B192"
    from_bci -1
    to_bci -1
    predecessors "B190" 
    successors "B239" 
    xhandlers
    flags 
    probability 4594445899282223281
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1372 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:143) [bci: 57]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v842 
=== Usages ===
=== Predecessor ===
v1375 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v842  <|@  <|@
f <@*|@fixed>@ <|@
tid v842 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v805 
=== Predecessor ===
v1372 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B193"
    from_bci -1
    to_bci -1
    predecessors "B179" 
    successors "B237" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3314 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 44]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1736 
=== Usages ===
=== Predecessor ===
v3318 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1736  <|@  <|@
f <@~|@floating>@ <|@
tid i1737 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -246555
stableDimension: 0
stamp: i32 [-246555] ⇊00000000fffc3ce5 ⇈00000000fffc3ce5
stampKind: i32
value: int[-246555|0xfffffffffffc3ce5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1689 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1736 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1686 
=== Predecessor ===
v3314 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B194"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B237" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1327 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=size target_method_class=Lorg/graalvm/compiler/graph/NodeList; position=at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1719 
=== Usages ===
=== Predecessor ===
v1328 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1719  <|@  <|@
f <@~|@floating>@ <|@
tid i1720 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -251955
stableDimension: 0
stamp: i32 [-251955] ⇊00000000fffc27cd ⇈00000000fffc27cd
stampKind: i32
value: int[-251955|0xfffffffffffc27cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1689 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1719 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1686 
=== Predecessor ===
v1327 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B195"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B237" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1311 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=null target_method=listIterator target_method_class=Ljava/util/AbstractList; position=at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1711 
=== Usages ===
=== Predecessor ===
v1312 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1711  <|@  <|@
f <@~|@floating>@ <|@
tid i1712 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -229683
stableDimension: 0
stamp: i32 [-229683] ⇊00000000fffc7ecd ⇈00000000fffc7ecd
stampKind: i32
value: int[-229683|0xfffffffffffc7ecd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1689 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1711 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1686 
=== Predecessor ===
v1311 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B196"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B78" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4589942299654852783
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1955 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 58]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1958 
=== Usages ===
=== Predecessor ===
v1956 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1958  <|@  <|@
f <@~|@floating>@ <|@
tid j1952 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 50]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i64
=== Inputs ===
x: j1951 
y: j1188 
=== Succesors ===
=== Usages ===
j1951 j1957 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1951 y: j1188  <|@  <|@
f <@~|@floating>@ <|@
tid j1960 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 62]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i64 [4682670080 - 36028801701634047] ⇈00ffffffffffffff
=== Inputs ===
x: j1940 
y: j1874 
=== Succesors ===
=== Usages ===
j1957 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1940 y: j1874  <|@  <|@
f <@~|@floating>@ <|@
tid j1957 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 65]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i64
=== Inputs ===
x: j1952 
y: j1960 
=== Succesors ===
=== Usages ===
v1958 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1952 y: j1960  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1958 <|@
d <@d|@=== Debug Properties ===
kind: boolean
nodeSourcePosition: at org.graalvm.compiler.replacements.nodes.DirectStoreNode.storeBoolean(long, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 70]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
address: j1957 
value: i13 
=== Succesors ===
next: v1959 
=== Usages ===
=== Predecessor ===
v1955 >@ <|@
instruction <@DirectStore|@org.graalvm.compiler.replacements.nodes.DirectStoreNode>@ address: j1957 value: i13 #next: v1959  <|@  <|@
f <@*|@fixed>@ <|@
tid v1959 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
loopBegin: v1950 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1958 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v1950  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B197"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B64" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4588077639523326214
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2490 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2489 
=== Usages ===
=== Predecessor ===
v2491 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2489  <|@  <|@
f <@*|@fixed>@ <|@
tid v2489 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v2485 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2490 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v2485  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B198"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B237" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1299 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 11]
at java.util.SubList.size(AbstractList.java:645) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 1]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1705 
=== Usages ===
=== Predecessor ===
v1300 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1705  <|@  <|@
f <@~|@floating>@ <|@
tid i1706 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -226323
stableDimension: 0
stamp: i32 [-226323] ⇊00000000fffc8bed ⇈00000000fffc8bed
stampKind: i32
value: int[-226323|0xfffffffffffc8bed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1689 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1705 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1686 
=== Predecessor ===
v1299 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B199"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B200" "B238" 
    xhandlers
    flags 
    probability 4594332962369002089
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v154 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v155 
=== Usages ===
=== Predecessor ===
v205 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v155  <|@  <|@
f <@~|@floating>@ <|@
tid v2338 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
rawvalue: meta{HotSpotType<Ljava/util/Collections$CopiesList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/Collections$CopiesList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2339 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2339 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v3359 
y: v2338 
=== Succesors ===
=== Usages ===
v155 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v3359 y: v2338  <|@  <|@
f <@*|@fixed>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Collections$CopiesList; target_method=toArray target_method_class=Ljava/util/Collections$CopiesList; position=at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
trueSuccessorProbability: 0.9487693188322834
=== Inputs ===
condition: v2339 
=== Succesors ===
trueSuccessor: v151 
falseSuccessor: v204 
=== Usages ===
=== Predecessor ===
v154 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2339 #trueSuccessor: v151 #falseSuccessor: v204  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B200"
    from_bci -1
    to_bci -1
    predecessors "B199" 
    successors "B201" "B202" 
    xhandlers
    flags 
    probability 4594068358868130440
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v151 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Collections$CopiesList; target_method=toArray target_method_class=Ljava/util/Collections$CopiesList; position=at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: i3394 
=== Usages ===
=== Predecessor ===
v155 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i3394  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3394 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Collections$CopiesList.n
nodeSourcePosition: at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 1]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v3416 
=== Succesors ===
next: v3334 
=== Usages ===
v1275 a2058 v1272 v188 j1238 i808 v2077 i2096 i2036 v2043 
=== Predecessor ===
v151 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3416 #next: v3334  <|@  <|@
f <@~|@floating>@ <|@
tid j1238 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i3394 
=== Succesors ===
=== Usages ===
j1239 v1241 j2978 j2970 j2975 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i3394  <|@  <|@
f <@~|@floating>@ <|@
tid j1239 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j1238 
y: j1188 
=== Succesors ===
=== Usages ===
v1241 v2981 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1238 y: j1188  <|@  <|@
f <@~|@floating>@ <|@
tid v1275 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3394 
y: i23 
=== Succesors ===
=== Usages ===
v3334 v2534 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3394 y: i23  <|@  <|@
f <@*|@fixed>@ <|@
tid v3334 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3155) [bci: 20]
at java.util.Collections$CopiesList.toArray(Collections.java:5032) [bci: 25]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1275 
=== Succesors ===
trueSuccessor: v3330 
falseSuccessor: v3333 
=== Usages ===
=== Predecessor ===
i3394 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1275 #trueSuccessor: v3330 #falseSuccessor: v3333  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B201"
    from_bci -1
    to_bci -1
    predecessors "B200" 
    successors "B204" 
    xhandlers
    flags 
    probability 4589564759240759944
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3330 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3155) [bci: 20]
at java.util.Collections$CopiesList.toArray(Collections.java:5032) [bci: 25]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3328 
=== Usages ===
=== Predecessor ===
v3334 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3328  <|@  <|@
f <@*|@fixed>@ <|@
tid v3328 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3155) [bci: 20]
at java.util.Collections$CopiesList.toArray(Collections.java:5032) [bci: 25]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3327 
=== Predecessor ===
v3330 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B202"
    from_bci -1
    to_bci -1
    predecessors "B200" 
    successors "B203" "B236" 
    xhandlers
    flags 
    probability 4589564759240759944
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3333 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3155) [bci: 20]
at java.util.Collections$CopiesList.toArray(Collections.java:5032) [bci: 25]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3342 
=== Usages ===
=== Predecessor ===
v3334 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3342  <|@  <|@
f <@~|@floating>@ <|@
tid v1241 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1239 
y: j1238 
=== Succesors ===
=== Usages ===
v3342 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1239 y: j1238  <|@  <|@
f <@*|@fixed>@ <|@
tid v3342 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3155) [bci: 20]
at java.util.Collections$CopiesList.toArray(Collections.java:5032) [bci: 25]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1241 
=== Succesors ===
trueSuccessor: v3341 
falseSuccessor: v3338 
=== Usages ===
=== Predecessor ===
v3333 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1241 #trueSuccessor: v3341 #falseSuccessor: v3338  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B203"
    from_bci -1
    to_bci -1
    predecessors "B202" 
    successors "B204" 
    xhandlers
    flags 
    probability 4589564759240759944
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3341 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3155) [bci: 20]
at java.util.Collections$CopiesList.toArray(Collections.java:5032) [bci: 25]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3329 
=== Usages ===
=== Predecessor ===
v3342 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3329  <|@  <|@
f <@*|@fixed>@ <|@
tid v3329 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3155) [bci: 20]
at java.util.Collections$CopiesList.toArray(Collections.java:5032) [bci: 25]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3327 
=== Predecessor ===
v3341 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B204"
    from_bci -1
    to_bci -1
    predecessors "B201" "B203" 
    successors "B205" "B206" 
    xhandlers
    flags 
    probability 4594068358868130440
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3327 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3155) [bci: 20]
at java.util.Collections$CopiesList.toArray(Collections.java:5032) [bci: 25]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3328 v3329 
=== Succesors ===
next: a3395 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3328 v3329 #next: a3395  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3395 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Collections$CopiesList.element
nodeSourcePosition: at java.util.Collections$CopiesList.toArray(Collections.java:5031) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v3415 
=== Succesors ===
next: v3553 
=== Usages ===
v3211 v3553 v3213 
=== Predecessor ===
v3327 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3415 #next: v3553  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3553 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
object: a3395 
=== Succesors ===
next: v1387 
=== Usages ===
=== Predecessor ===
a3395 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: a3395 #next: v1387  <|@  <|@
f <@~|@floating>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.Arrays.rangeCheck(Arrays.java:112) [bci: 2]
at java.util.Arrays.fill(Arrays.java:3153) [bci: 4]
at java.util.Collections$CopiesList.toArray(Collections.java:5032) [bci: 25]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3394 
y: i13 
=== Succesors ===
=== Usages ===
v1387 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3394 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v1387 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.rangeCheck(Arrays.java:112) [bci: 2]
at java.util.Arrays.fill(Arrays.java:3153) [bci: 4]
at java.util.Collections$CopiesList.toArray(Collections.java:5032) [bci: 25]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v188 
=== Succesors ===
trueSuccessor: v1386 
falseSuccessor: v1384 
=== Usages ===
=== Predecessor ===
v3553 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v188 #trueSuccessor: v1386 #falseSuccessor: v1384  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B205"
    from_bci -1
    to_bci -1
    predecessors "B204" 
    successors "B237" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1386 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.rangeCheck(Arrays.java:112) [bci: 2]
at java.util.Arrays.fill(Arrays.java:3153) [bci: 4]
at java.util.Collections$CopiesList.toArray(Collections.java:5032) [bci: 25]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1703 
=== Usages ===
=== Predecessor ===
v1387 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1703  <|@  <|@
f <@~|@floating>@ <|@
tid i1704 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -254739
stableDimension: 0
stamp: i32 [-254739] ⇊00000000fffc1ced ⇈00000000fffc1ced
stampKind: i32
value: int[-254739|0xfffffffffffc1ced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1689 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1703 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1686 
=== Predecessor ===
v1386 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B206"
    from_bci -1
    to_bci -1
    predecessors "B204" 
    successors "B207" "B210" 
    xhandlers
    flags 
    probability 4594068358868130440
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1384 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.rangeCheck(Arrays.java:112) [bci: 2]
at java.util.Arrays.fill(Arrays.java:3153) [bci: 4]
at java.util.Collections$CopiesList.toArray(Collections.java:5032) [bci: 25]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2038 
=== Usages ===
=== Predecessor ===
v1387 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2038  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2038 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j2074 
=== Usages ===
v3465 v3466 
=== Predecessor ===
v1384 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j2074  <|@  <|@
f <@~|@floating>@ <|@
tid v3465 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j2038 
index: - 
=== Succesors ===
=== Usages ===
j2074 v2076 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2038 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2074 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3465 
=== Succesors ===
next: j2075 
=== Usages ===
j2042 v3467 v3468 a2057 v3473 v3469 v3470 v3471 v3472 
=== Predecessor ===
j2038 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3465 #next: j2075  <|@  <|@
f <@~|@floating>@ <|@
tid v3466 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j2038 
index: - 
=== Succesors ===
=== Usages ===
j2075 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2038 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2075 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3466 
=== Succesors ===
next: v2046 
=== Usages ===
v2047 
=== Predecessor ===
j2074 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3466 #next: v2046  <|@  <|@
f <@~|@floating>@ <|@
tid v2043 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3394 
y: i1888 
=== Succesors ===
=== Usages ===
v2046 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i3394 y: i1888  <|@  <|@
f <@*|@fixed>@ <|@
tid v2046 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v2043 
=== Succesors ===
trueSuccessor: v2045 
falseSuccessor: v2044 
=== Usages ===
=== Predecessor ===
j2075 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2043 #trueSuccessor: v2045 #falseSuccessor: v2044  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B207"
    from_bci -1
    to_bci -1
    predecessors "B206" 
    successors "B208" "B209" 
    xhandlers
    flags 
    probability 4593485030102835957
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2045 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2053 
=== Usages ===
=== Predecessor ===
v2046 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2053  <|@  <|@
f <@~|@floating>@ <|@
tid i2036 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i3394 
y: i912 
=== Succesors ===
=== Usages ===
i2065 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i3394 y: i912  <|@  <|@
f <@~|@floating>@ <|@
tid i2065 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i32 [-2147483645 - 2147483647] ⇊0000000000000003
=== Inputs ===
x: i2036 
y: i1814 
=== Succesors ===
=== Usages ===
i2037 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2036 y: i1814  <|@  <|@
f <@~|@floating>@ <|@
tid i2037 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i2065 
y: i1792 
=== Succesors ===
=== Usages ===
j2041 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i2065 y: i1792  <|@  <|@
f <@~|@floating>@ <|@
tid j2041 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i2037 
=== Succesors ===
=== Usages ===
j2042 v3469 v3470 v3471 v3472 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2037  <|@  <|@
f <@~|@floating>@ <|@
tid j2042 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i64
=== Inputs ===
x: j2041 
y: j2074 
=== Succesors ===
=== Usages ===
v2047 v2076 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2041 y: j2074  <|@  <|@
f <@~|@floating>@ <|@
tid v2047 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2075 
y: j2042 
=== Succesors ===
=== Usages ===
v2053 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j2075 y: j2042  <|@  <|@
f <@*|@fixed>@ <|@
tid v2053 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v2047 
=== Succesors ===
trueSuccessor: v2052 
falseSuccessor: v2051 
=== Usages ===
=== Predecessor ===
v2045 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2047 #trueSuccessor: v2052 #falseSuccessor: v2051  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B208"
    from_bci -1
    to_bci -1
    predecessors "B207" 
    successors "B211" 
    xhandlers
    flags 
    probability 4563288012940331416
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2052 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2050 
=== Usages ===
=== Predecessor ===
v2053 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2050  <|@  <|@
f <@*|@fixed>@ <|@
tid v2050 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2049 
=== Predecessor ===
v2052 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B209"
    from_bci -1
    to_bci -1
    predecessors "B207" 
    successors "B212" 
    xhandlers
    flags 
    probability 4593396824008439247
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2051 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2076 
=== Usages ===
=== Predecessor ===
v2053 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2076  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2076 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3465 
value: j2042 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2067 
=== Usages ===
=== Predecessor ===
v2051 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3465 value: j2042 stateAfter: - lastLocationAccess: - #next: v2067  <|@  <|@
f <@~|@floating>@ <|@
tid v3469 <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j2041 
index: j2074 
=== Succesors ===
=== Usages ===
v2067 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2041 index: j2074  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2067 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
address: v3469 
=== Succesors ===
next: v2069 
=== Usages ===
=== Predecessor ===
v2076 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3469 #next: v2069  <|@  <|@
f <@~|@floating>@ <|@
tid v3470 <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j2041 
index: j2074 
=== Succesors ===
=== Usages ===
v2069 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2041 index: j2074  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2069 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
address: v3470 
=== Succesors ===
next: v2071 
=== Usages ===
=== Predecessor ===
v2067 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3470 #next: v2071  <|@  <|@
f <@~|@floating>@ <|@
tid v3471 <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j2041 
index: j2074 
=== Succesors ===
=== Usages ===
v2071 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2041 index: j2074  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2071 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
address: v3471 
=== Succesors ===
next: v2073 
=== Usages ===
=== Predecessor ===
v2069 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3471 #next: v2073  <|@  <|@
f <@~|@floating>@ <|@
tid v3472 <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j2041 
index: j2074 
=== Succesors ===
=== Usages ===
v2073 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2041 index: j2074  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2073 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
address: v3472 
=== Succesors ===
next: v2077 
=== Usages ===
=== Predecessor ===
v2071 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3472 #next: v2077  <|@  <|@
f <@~|@floating>@ <|@
tid v3467 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j2074 
index: - 
=== Succesors ===
=== Usages ===
v2077 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2074 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2077 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3467 
value: i3394 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2078 
=== Usages ===
=== Predecessor ===
v2073 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3467 value: i3394 stateAfter: - lastLocationAccess: - #next: v2078  <|@  <|@
f <@~|@floating>@ <|@
tid v3468 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2074 
index: - 
=== Succesors ===
=== Usages ===
v2078 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2074 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2078 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3468 
value: j1778 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2081 
=== Usages ===
=== Predecessor ===
v2077 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3468 value: j1778 stateAfter: - lastLocationAccess: - #next: v2081  <|@  <|@
f <@~|@floating>@ <|@
tid v3473 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j2074 
index: - 
=== Succesors ===
=== Usages ===
v2081 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2074 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2081 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3473 
value: v2340 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2056 
=== Usages ===
=== Predecessor ===
v2078 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3473 value: v2340 stateAfter: - lastLocationAccess: - #next: v2056  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2056 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2057 
=== Usages ===
=== Predecessor ===
v2081 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a2057  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2057 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j2074 
=== Succesors ===
next: v2059 
=== Usages ===
a2062 
=== Predecessor ===
v2056 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j2074 #next: v2059  <|@  <|@
f <@*|@fixed>@ <|@
tid v2059 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2060 
=== Predecessor ===
a2057 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B210"
    from_bci -1
    to_bci -1
    predecessors "B206" 
    successors "B211" 
    xhandlers
    flags 
    probability 4578994163505205464
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2044 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2048 
=== Usages ===
=== Predecessor ===
v2046 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2048  <|@  <|@
f <@*|@fixed>@ <|@
tid v2048 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2049 
=== Predecessor ===
v2044 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B211"
    from_bci -1
    to_bci -1
    predecessors "B210" "B208" 
    successors "B212" 
    xhandlers
    flags 
    probability 4579699812260379147
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2049 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2048 v2050 
=== Succesors ===
next: a2058 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2048 v2050 #next: a2058  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2058 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v1880 i3394 i13 
=== Succesors ===
next: v2061 
=== Usages ===
a2062 
=== Predecessor ===
v2049 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v1880 i3394 i13 #next: v2061  <|@  <|@
f <@*|@fixed>@ <|@
tid v2061 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2060 
=== Predecessor ===
a2058 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B212"
    from_bci -1
    to_bci -1
    predecessors "B209" "B211" 
    successors "B213" "B214" 
    xhandlers
    flags 
    probability 4594068358868130440
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a2062 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v2060 
values: a2057 a2058 
=== Succesors ===
=== Usages ===
v3442 a1654 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2060 values: a2057 a2058  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2060 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2059 v2061 
=== Succesors ===
next: v2943 
=== Usages ===
a2062 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2059 v2061 #next: v2943  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2943 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v2534 
=== Usages ===
j2945 
=== Predecessor ===
v2060 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v2534  <|@  <|@
f <@~|@floating>@ <|@
tid v3442 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a2062 
index: - 
=== Succesors ===
=== Usages ===
j2945 j2095 j2093 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2062 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v2534 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1275 
=== Succesors ===
trueSuccessor: v2532 
falseSuccessor: v2533 
=== Usages ===
=== Predecessor ===
v2943 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1275 #trueSuccessor: v2532 #falseSuccessor: v2533  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B213"
    from_bci -1
    to_bci -1
    predecessors "B212" 
    successors "B228" 
    xhandlers
    flags 
    probability 4589564759240759944
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2532 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2550 
=== Usages ===
=== Predecessor ===
v2534 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2550  <|@  <|@
f <@*|@fixed>@ <|@
tid v2550 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2551 
=== Predecessor ===
v2532 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B214"
    from_bci -1
    to_bci -1
    predecessors "B212" 
    successors "B215" "B216" 
    xhandlers
    flags 
    probability 4589564759240759944
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2533 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2537 
=== Usages ===
=== Predecessor ===
v2534 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2537  <|@  <|@
f <@~|@floating>@ <|@
tid j2945 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v2943 
address: v3442 
=== Succesors ===
=== Usages ===
v3521 v3522 v3523 v3524 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v2943 address: v3442  <|@  <|@
f <@~|@floating>@ <|@
tid v3211 <|@
d <@d|@=== Debug Properties ===
length: 8
stamp: <n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;>
=== Inputs ===
value: a3395 
=== Succesors ===
=== Usages ===
v3218 v3216 v3214 
=== Predecessor ===
- >@ <|@
instruction <@a|@com.oracle.graal.enterprise.J.a>@ value: a3395  <|@  <|@
f <@~|@floating>@ <|@
tid j2970 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j1238 
y: j2845 
=== Succesors ===
=== Usages ===
v2971 v2973 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1238 y: j2845  <|@  <|@
f <@~|@floating>@ <|@
tid v2971 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2970 
y: j1818 
=== Succesors ===
=== Usages ===
v2537 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2970 y: j1818  <|@  <|@
f <@*|@fixed>@ <|@
tid v2537 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v2971 
=== Succesors ===
trueSuccessor: v2535 
falseSuccessor: v2536 
=== Usages ===
=== Predecessor ===
v2533 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2971 #trueSuccessor: v2535 #falseSuccessor: v2536  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B215"
    from_bci -1
    to_bci -1
    predecessors "B214" 
    successors "B219" 
    xhandlers
    flags 
    probability 4587511328902186956
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2535 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2546 
=== Usages ===
=== Predecessor ===
v2537 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2546  <|@  <|@
f <@*|@fixed>@ <|@
tid v2546 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2547 
=== Predecessor ===
v2535 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B216"
    from_bci -1
    to_bci -1
    predecessors "B214" 
    successors "B217" 
    xhandlers
    flags 
    probability 4580557559986018952
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2536 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2538 
=== Usages ===
=== Predecessor ===
v2537 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2538  <|@  <|@
f <@*|@fixed>@ <|@
tid v2538 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2539 
=== Predecessor ===
v2536 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B217"
    from_bci -1
    to_bci -1
    predecessors "B216" "B235" 
    successors "B218" "B235" 
    xhandlers
    flags "llh" 
    loop_index 12
    loop_depth 1
    probability 4589564759240759944
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2964 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2539 
values: j1818 j2969 
=== Succesors ===
=== Usages ===
v3524 j2969 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2539 values: j1818 j2969  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2539 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v2538 
=== Succesors ===
next: v3218 
=== Usages ===
j2964 v2542 v2543 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v2538 #next: v3218  <|@  <|@
f <@~|@floating>@ <|@
tid v3524 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j2945 
index: j2964 
=== Succesors ===
=== Usages ===
v3218 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2945 index: j2964  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3218 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3524 
value: v3211 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2545 
=== Usages ===
=== Predecessor ===
v2539 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3524 value: v3211 stateAfter: - lastLocationAccess: - #next: v2545  <|@  <|@
f <@~|@floating>@ <|@
tid j2969 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2964 
y: j1770 
=== Succesors ===
=== Usages ===
j2958 j2964 v2973 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2964 y: j1770  <|@  <|@
f <@~|@floating>@ <|@
tid v2973 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2970 
y: j2969 
=== Succesors ===
=== Usages ===
v2545 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2970 y: j2969  <|@  <|@
f <@*|@fixed>@ <|@
tid v2545 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2973 
=== Succesors ===
trueSuccessor: v2542 
falseSuccessor: v2544 
=== Usages ===
=== Predecessor ===
v3218 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2973 #trueSuccessor: v2542 #falseSuccessor: v2544  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B218"
    from_bci -1
    to_bci -1
    predecessors "B217" 
    successors "B219" 
    xhandlers
    flags 
    probability 4580557559986018952
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2542 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v2539 
=== Succesors ===
next: v2548 
=== Usages ===
=== Predecessor ===
v2545 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v2539 #next: v2548  <|@  <|@
f <@*|@fixed>@ <|@
tid v2548 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2547 
=== Predecessor ===
v2542 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B219"
    from_bci -1
    to_bci -1
    predecessors "B215" "B218" 
    successors "B220" "B221" 
    xhandlers
    flags 
    probability 4589564759240759944
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2958 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2547 
values: j1818 j2969 
=== Succesors ===
=== Usages ===
v3523 j2963 j2952 v2976 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2547 values: j1818 j2969  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2547 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2546 v2548 
=== Succesors ===
next: v2566 
=== Usages ===
j2958 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2546 v2548 #next: v2566  <|@  <|@
f <@~|@floating>@ <|@
tid j2975 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j1238 
y: j2851 
=== Succesors ===
=== Usages ===
v2976 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1238 y: j2851  <|@  <|@
f <@~|@floating>@ <|@
tid v2976 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2975 
y: j2958 
=== Succesors ===
=== Usages ===
v2566 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2975 y: j2958  <|@  <|@
f <@*|@fixed>@ <|@
tid v2566 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2976 
=== Succesors ===
trueSuccessor: v2565 
falseSuccessor: v2564 
=== Usages ===
=== Predecessor ===
v2547 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2976 #trueSuccessor: v2565 #falseSuccessor: v2564  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B220"
    from_bci -1
    to_bci -1
    predecessors "B219" 
    successors "B222" 
    xhandlers
    flags 
    probability 4580557559986018952
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2565 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2569 
=== Usages ===
=== Predecessor ===
v2566 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2569  <|@  <|@
f <@*|@fixed>@ <|@
tid v2569 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2558 
=== Predecessor ===
v2565 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B221"
    from_bci -1
    to_bci -1
    predecessors "B219" 
    successors "B222" 
    xhandlers
    flags 
    probability 4587511328902186956
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2564 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3217 
=== Usages ===
=== Predecessor ===
v2566 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3217  <|@  <|@
f <@~|@floating>@ <|@
tid v3523 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j2945 
index: j2958 
=== Succesors ===
=== Usages ===
v3217 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2945 index: j2958  <|@  <|@
f <@~|@floating>@ <|@
tid v3216 <|@
d <@d|@=== Debug Properties ===
length: 4
offset: 0
stamp: <n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;>
=== Inputs ===
value: v3211 
=== Succesors ===
=== Usages ===
v3217 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.J.c>@ value: v3211  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3217 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3523 
value: v3216 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2557 
=== Usages ===
=== Predecessor ===
v2564 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3523 value: v3216 stateAfter: - lastLocationAccess: - #next: v2557  <|@  <|@
f <@~|@floating>@ <|@
tid j2963 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2958 
y: j2813 
=== Succesors ===
=== Usages ===
j2952 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2958 y: j2813  <|@  <|@
f <@*|@fixed>@ <|@
tid v2557 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2558 
=== Predecessor ===
v3217 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B222"
    from_bci -1
    to_bci -1
    predecessors "B221" "B220" 
    successors "B223" "B224" 
    xhandlers
    flags 
    probability 4589564759240759944
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2952 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2558 
values: j2963 j2958 
=== Succesors ===
=== Usages ===
v3522 j2957 j2946 v2979 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2558 values: j2963 j2958  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2558 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2557 v2569 
=== Succesors ===
next: v2572 
=== Usages ===
j2952 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2557 v2569 #next: v2572  <|@  <|@
f <@~|@floating>@ <|@
tid j2978 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j1238 
y: j2855 
=== Succesors ===
=== Usages ===
v2979 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1238 y: j2855  <|@  <|@
f <@~|@floating>@ <|@
tid v2979 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2978 
y: j2952 
=== Succesors ===
=== Usages ===
v2572 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2978 y: j2952  <|@  <|@
f <@*|@fixed>@ <|@
tid v2572 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2979 
=== Succesors ===
trueSuccessor: v2571 
falseSuccessor: v2570 
=== Usages ===
=== Predecessor ===
v2558 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2979 #trueSuccessor: v2571 #falseSuccessor: v2570  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B223"
    from_bci -1
    to_bci -1
    predecessors "B222" 
    successors "B225" 
    xhandlers
    flags 
    probability 4580557559986018952
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2571 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2575 
=== Usages ===
=== Predecessor ===
v2572 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2575  <|@  <|@
f <@*|@fixed>@ <|@
tid v2575 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2561 
=== Predecessor ===
v2571 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B224"
    from_bci -1
    to_bci -1
    predecessors "B222" 
    successors "B225" 
    xhandlers
    flags 
    probability 4587511328902186956
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2570 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3215 
=== Usages ===
=== Predecessor ===
v2572 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3215  <|@  <|@
f <@~|@floating>@ <|@
tid v3522 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j2945 
index: j2952 
=== Succesors ===
=== Usages ===
v3215 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2945 index: j2952  <|@  <|@
f <@~|@floating>@ <|@
tid v3214 <|@
d <@d|@=== Debug Properties ===
length: 2
offset: 0
stamp: <n Ljava/lang/Object;,n Ljava/lang/Object;>
=== Inputs ===
value: v3211 
=== Succesors ===
=== Usages ===
v3215 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.J.c>@ value: v3211  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3215 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3522 
value: v3214 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2560 
=== Usages ===
=== Predecessor ===
v2570 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3522 value: v3214 stateAfter: - lastLocationAccess: - #next: v2560  <|@  <|@
f <@~|@floating>@ <|@
tid j2957 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2952 
y: j2827 
=== Succesors ===
=== Usages ===
j2946 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2952 y: j2827  <|@  <|@
f <@*|@fixed>@ <|@
tid v2560 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2561 
=== Predecessor ===
v3215 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B225"
    from_bci -1
    to_bci -1
    predecessors "B224" "B223" 
    successors "B226" "B227" 
    xhandlers
    flags 
    probability 4589564759240759944
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2946 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2561 
values: j2957 j2952 
=== Succesors ===
=== Usages ===
v3521 v2981 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2561 values: j2957 j2952  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2561 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2560 v2575 
=== Succesors ===
next: v2578 
=== Usages ===
j2946 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2560 v2575 #next: v2578  <|@  <|@
f <@~|@floating>@ <|@
tid v2981 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1239 
y: j2946 
=== Succesors ===
=== Usages ===
v2578 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1239 y: j2946  <|@  <|@
f <@*|@fixed>@ <|@
tid v2578 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2981 
=== Succesors ===
trueSuccessor: v2577 
falseSuccessor: v2576 
=== Usages ===
=== Predecessor ===
v2561 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2981 #trueSuccessor: v2577 #falseSuccessor: v2576  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B226"
    from_bci -1
    to_bci -1
    predecessors "B225" 
    successors "B228" 
    xhandlers
    flags 
    probability 4580557559986018952
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2577 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2581 
=== Usages ===
=== Predecessor ===
v2578 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2581  <|@  <|@
f <@*|@fixed>@ <|@
tid v2581 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2551 
=== Predecessor ===
v2577 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B227"
    from_bci -1
    to_bci -1
    predecessors "B225" 
    successors "B228" 
    xhandlers
    flags 
    probability 4587511328902186956
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2576 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3213 
=== Usages ===
=== Predecessor ===
v2578 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3213  <|@  <|@
f <@~|@floating>@ <|@
tid v3521 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j2945 
index: j2946 
=== Succesors ===
=== Usages ===
v3213 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2945 index: j2946  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3213 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3521 
value: a3395 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2563 
=== Usages ===
=== Predecessor ===
v2576 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3521 value: a3395 stateAfter: - lastLocationAccess: - #next: v2563  <|@  <|@
f <@*|@fixed>@ <|@
tid v2563 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2551 
=== Predecessor ===
v3213 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B228"
    from_bci -1
    to_bci -1
    predecessors "B213" "B227" "B226" 
    successors "B229" "B230" 
    xhandlers
    flags 
    probability 4594068358868130440
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2551 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2550 v2563 v2581 
=== Succesors ===
next: v2092 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2550 v2563 v2581 #next: v2092  <|@  <|@
f <@~|@floating>@ <|@
tid v1272 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3394 
y: i13 
=== Succesors ===
=== Usages ===
v2092 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i3394 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v2092 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:154) [bci: 1]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1272 
=== Succesors ===
trueSuccessor: v2090 
falseSuccessor: v2091 
=== Usages ===
=== Predecessor ===
v2551 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1272 #trueSuccessor: v2090 #falseSuccessor: v2091  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B229"
    from_bci -1
    to_bci -1
    predecessors "B228" 
    successors "B233" 
    xhandlers
    flags 
    probability 4589564759240759944
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2090 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:155) [bci: 4]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2116 
=== Usages ===
=== Predecessor ===
v2092 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2116  <|@  <|@
f <@*|@fixed>@ <|@
tid v2116 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2115 
=== Predecessor ===
v2090 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B230"
    from_bci -1
    to_bci -1
    predecessors "B228" 
    successors "B231" 
    xhandlers
    flags 
    probability 4589564759240759944
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2091 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:157) [bci: 5]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2093 
=== Usages ===
=== Predecessor ===
v2092 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2093  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2093 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToFirstArrayElement(WriteBarrierSnippets.java:376) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:159) [bci: 20]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v3442 
=== Succesors ===
next: j2095 
=== Usages ===
j2094 
=== Predecessor ===
v2091 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v3442 #next: j2095  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2095 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:385) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v3442 
=== Succesors ===
next: v2103 
=== Usages ===
j2099 
=== Predecessor ===
j2093 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v3442 #next: v2103  <|@  <|@
f <@~|@floating>@ <|@
tid i2096 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i32
=== Inputs ===
x: i3394 
y: i632 
=== Succesors ===
=== Usages ===
i2097 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i3394 y: i632  <|@  <|@
f <@~|@floating>@ <|@
tid i2097 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i2096 
y: i912 
=== Succesors ===
=== Usages ===
j2098 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i2096 y: i912  <|@  <|@
f <@~|@floating>@ <|@
tid j2098 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 26]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
resultBits: 64
stamp: i64 [-2147483648 - 2147483644] ⇈fffffffffffffffc
=== Inputs ===
value: i2097 
=== Succesors ===
=== Usages ===
j2099 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2097  <|@  <|@
f <@~|@floating>@ <|@
tid j2099 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 27]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i64
=== Inputs ===
x: j2095 
y: j2098 
=== Succesors ===
=== Usages ===
j2100 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2095 y: j2098  <|@  <|@
f <@~|@floating>@ <|@
tid j2100 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 34]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j2099 
y: i1852 
=== Succesors ===
=== Usages ===
j2101 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j2099 y: i1852  <|@  <|@
f <@~|@floating>@ <|@
tid j2094 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:159) [bci: 24]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j2093 
y: i1852 
=== Succesors ===
=== Usages ===
j2101 j2114 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j2093 y: i1852  <|@  <|@
f <@~|@floating>@ <|@
tid j2101 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:161) [bci: 41]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i64 [-36028797018963967 - 36028797018963967]
=== Inputs ===
x: j2100 
y: j2094 
=== Succesors ===
=== Usages ===
j2102 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j2100 y: j2094  <|@  <|@
f <@~|@floating>@ <|@
tid j2102 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:161) [bci: 43]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i64 [-36028797018963966 - 36028797018963968]
=== Inputs ===
x: j2101 
y: j1778 
=== Succesors ===
=== Usages ===
j2105 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2101 y: j1778  <|@  <|@
f <@*|@fixed>@ <|@
tid v2103 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2104 
=== Predecessor ===
j2095 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B231"
    from_bci -1
    to_bci -1
    predecessors "B230" "B234" 
    successors "B232" "B234" 
    xhandlers
    flags "llh" 
    loop_index 13
    loop_depth 1
    probability 4594068358868130440
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2105 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2104 
values: j2102 j2106 
=== Succesors ===
=== Usages ===
j2106 v2107 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2104 values: j2102 j2106  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2104 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 2.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v2103 
=== Succesors ===
next: v2110 
=== Usages ===
j2105 v2108 v2113 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v2103 #next: v2110  <|@  <|@
f <@~|@floating>@ <|@
tid v2107 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 55]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2105 
y: j1778 
=== Succesors ===
=== Usages ===
v2110 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2105 y: j1778  <|@  <|@
f <@*|@fixed>@ <|@
tid v2110 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 55]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v2107 
=== Succesors ===
trueSuccessor: v2108 
falseSuccessor: v2109 
=== Usages ===
=== Predecessor ===
v2104 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2107 #trueSuccessor: v2108 #falseSuccessor: v2109  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B232"
    from_bci -1
    to_bci -1
    predecessors "B231" 
    successors "B233" 
    xhandlers
    flags 
    probability 4589564759240759944
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2108 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:165) [bci: 76]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v2104 
=== Succesors ===
next: v2117 
=== Usages ===
=== Predecessor ===
v2110 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v2104 #next: v2117  <|@  <|@
f <@*|@fixed>@ <|@
tid v2117 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2115 
=== Predecessor ===
v2108 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B233"
    from_bci -1
    to_bci -1
    predecessors "B229" "B232" 
    successors "B239" 
    xhandlers
    flags 
    probability 4594068358868130440
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2115 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2116 v2117 
=== Succesors ===
next: a1654 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2116 v2117 #next: a1654  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1654 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a2062 
=== Succesors ===
next: v850 
=== Usages ===
a1174 
=== Predecessor ===
v2115 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a2062 #next: v850  <|@  <|@
f <@*|@fixed>@ <|@
tid v850 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v805 
=== Predecessor ===
a1654 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B234"
    from_bci -1
    to_bci -1
    predecessors "B231" 
    successors "B231" 
    xhandlers
    flags "lle" 
    loop_index 13
    loop_depth 1
    probability 4589564759240759944
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2109 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 58]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2112 
=== Usages ===
=== Predecessor ===
v2110 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2112  <|@  <|@
f <@~|@floating>@ <|@
tid j2106 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 50]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i64
=== Inputs ===
x: j2105 
y: j1188 
=== Succesors ===
=== Usages ===
j2105 j2111 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2105 y: j1188  <|@  <|@
f <@~|@floating>@ <|@
tid j2114 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 62]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i64 [4682670080 - 36028801701634047] ⇈00ffffffffffffff
=== Inputs ===
x: j2094 
y: j1874 
=== Succesors ===
=== Usages ===
j2111 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2094 y: j1874  <|@  <|@
f <@~|@floating>@ <|@
tid j2111 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 65]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i64
=== Inputs ===
x: j2106 
y: j2114 
=== Succesors ===
=== Usages ===
v2112 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2106 y: j2114  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2112 <|@
d <@d|@=== Debug Properties ===
kind: boolean
nodeSourcePosition: at org.graalvm.compiler.replacements.nodes.DirectStoreNode.storeBoolean(long, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 70]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
address: j2111 
value: i13 
=== Succesors ===
next: v2113 
=== Usages ===
=== Predecessor ===
v2109 >@ <|@
instruction <@DirectStore|@org.graalvm.compiler.replacements.nodes.DirectStoreNode>@ address: j2111 value: i13 #next: v2113  <|@  <|@
f <@*|@fixed>@ <|@
tid v2113 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
loopBegin: v2104 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2112 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v2104  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B235"
    from_bci -1
    to_bci -1
    predecessors "B217" 
    successors "B217" 
    xhandlers
    flags "lle" 
    loop_index 12
    loop_depth 1
    probability 4587511328902186956
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2544 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2543 
=== Usages ===
=== Predecessor ===
v2545 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2543  <|@  <|@
f <@*|@fixed>@ <|@
tid v2543 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v2539 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2544 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v2539  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B236"
    from_bci -1
    to_bci -1
    predecessors "B202" 
    successors "B237" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3338 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3155) [bci: 20]
at java.util.Collections$CopiesList.toArray(Collections.java:5032) [bci: 25]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1700 
=== Usages ===
=== Predecessor ===
v3342 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1700  <|@  <|@
f <@~|@floating>@ <|@
tid a1702 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@1399980118
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@1399980118]
=== Inputs ===
=== Succesors ===
=== Usages ===
a1690 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1701 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -255259
stableDimension: 0
stamp: i32 [-255259] ⇊00000000fffc1ae5 ⇈00000000fffc1ae5
stampKind: i32
value: int[-255259|0xfffffffffffc1ae5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1689 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1700 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1686 
=== Predecessor ===
v3338 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B237"
    from_bci -1
    to_bci -1
    predecessors "B50" "B236" "B205" "B198" "B52" "B195" "B83" "B91" "B88" "B194" "B2" "B95" "B137" "B134" "B132" "B193" "B176" "B174" "B133" "B175" 
    successors 
    xhandlers
    flags 
    probability 2374522903531094016
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1689 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-405345 - -219403] ⇊00000000fff80085 ⇈00000000fffdffff
valueDescription: i32
=== Inputs ===
merge: v1686 
values: i1699 i1701 i1704 i1706 i1708 i1712 i1714 i1716 i1718 i1720 i1722 i1724 i1727 i1732 i1735 i1737 i1739 i1741 i1732 i1739 
=== Succesors ===
=== Usages ===
v1691 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1686 values: i1699 i1701 i1704 i1706 i1708 i1712 i1714 i1716 i1718 i1720 i1722 i1724 i1727 i1732 i1735 i1737 i1739 i1741 i1732 i1739  <|@  <|@
f <@~|@floating>@ <|@
tid a1690 <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/k/d$a;
valueDescription: a -
=== Inputs ===
merge: v1686 
values: a1548 a1702 a1548 a1548 a1548 a1548 a1548 a1548 a1548 a1548 a1548 a1725 a1725 a1733 a1733 a1733 a1733 a1733 a1733 a1733 
=== Succesors ===
=== Usages ===
v1691 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1686 values: a1548 a1702 a1548 a1548 a1548 a1548 a1548 a1548 a1548 a1548 a1548 a1725 a1725 a1733 a1733 a1733 a1733 a1733 a1733 a1733  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1686 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1698 v1700 v1703 v1705 v1707 v1711 v1713 v1715 v1717 v1719 v1721 v1723 v1726 v1731 v1734 v1736 v1738 v1740 v3549 v3550 
=== Succesors ===
next: v1691 
=== Usages ===
i1689 a1690 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1698 v1700 v1703 v1705 v1707 v1711 v1713 v1715 v1717 v1719 v1721 v1723 v1726 v1731 v1734 v1736 v1738 v1740 v3549 v3550 #next: v1691  <|@  <|@
f <@*|@fixed>@ <|@
tid v1691 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i1689 
speculation: a1690 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1686 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i1689 speculation: a1690  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B238"
    from_bci -1
    to_bci -1
    predecessors "B199" 
    successors "B239" 
    xhandlers
    flags 
    probability 4575117334181575713
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v204 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: a5 
=== Usages ===
=== Predecessor ===
v155 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a5  <|@  <|@
tid v1005 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Interface
nodeSourcePosition: at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
returnStamp: a [Ljava/lang/Object;
signature: [Ljdk.vm.ci.meta.JavaType;@58bddc36
stamp: void
targetMethod: HotSpotMethod<Collection.toArray()>
=== Inputs ===
arguments: a2 
=== Succesors ===
=== Usages ===
a5 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2  <|@  <|@
tid ?1516 <|@
d <@d|@=== Debug Properties ===
bci: 1
code: ResolvedJavaMethodBytecode<ArrayList.addAll(Collection)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: ArrayList.java
sourceLine: 581
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - 
=== Succesors ===
=== Usages ===
a5 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a5 <|@
d <@d|@=== Debug Properties ===
bci: 1
nodeSourcePosition: at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
polymorphic: false
stamp: a [Ljava/lang/Object;
targetMethod: Direct#Collection.toArray
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1005 
stateDuring: ?1516 
=== Succesors ===
next: i3396 
=== Usages ===
a1174 v3428 
=== Predecessor ===
v204 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1005 stateDuring: ?1516 #next: i3396  <|@  <|@
tid ?6 <|@
d <@d|@=== Debug Properties ===
bci: 6
code: ResolvedJavaMethodBytecode<ArrayList.addAll(Collection)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
rethrowException: false
sourceFile: ArrayList.java
sourceLine: 581
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 - - - a1548 
=== Succesors ===
=== Usages ===
i3396 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - a1548  <|@  <|@
f <@~|@floating>@ <|@
tid v3428 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a5 
index: - 
=== Succesors ===
=== Usages ===
i3396 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a5 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3396 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.ArrayList.addAll(ArrayList.java:582) [bci: 8]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?6 
guard: - 
address: v3428 
=== Succesors ===
next: v804 
=== Usages ===
i808 
=== Predecessor ===
a5 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?6 guard: - address: v3428 #next: v804  <|@  <|@
f <@*|@fixed>@ <|@
tid v804 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v805 
=== Predecessor ===
i3396 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B239"
    from_bci -1
    to_bci -1
    predecessors "B238" "B44" "B192" "B233" 
    successors "B240" "B243" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i808 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
valueDescription: i32
=== Inputs ===
merge: v805 
values: i3396 i3361 i3371 i3394 
=== Succesors ===
=== Usages ===
i9 ?34 i2296 ?1519 i19 ?1518 v22 i854 j2348 i1099 v1131 i1050 i2138 j3347 v3353 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v805 values: i3396 i3361 i3371 i3394  <|@  <|@
f <@~|@floating>@ <|@
tid a1174 <|@
d <@d|@=== Debug Properties ===
stamp: a! [Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v805 
values: a5 a1646 a1650 a1654 
=== Succesors ===
=== Usages ===
?34 v3433 v2164 ?806 v2321 v3476 j2146 j2159 j2316 j2303 v3555 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v805 values: a5 a1646 a1650 a1654  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v805 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v804 v807 v842 v850 
=== Succesors ===
next: a3397 
=== Usages ===
i808 a1174 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v804 v807 v842 v850 #next: a3397  <|@  <|@
f <@~|@floating>@ <|@
tid v3430 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a3397 v1072 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3397 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList.elementData
nodeSourcePosition: at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 2]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v3430 
=== Succesors ===
next: v3551 
=== Usages ===
a1015 v3551 v1126 v3432 v3434 v3481 v3554 
=== Predecessor ===
v805 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3430 #next: v3551  <|@  <|@
tid ?806 <|@
d <@d|@=== Debug Properties ===
bci: 6
code: ResolvedJavaMethodBytecode<ArrayList.addAll(Collection)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
rethrowException: false
sourceFile: ArrayList.java
sourceLine: 581
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 - - - a1174 
=== Succesors ===
=== Usages ===
v3551 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - a1174  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3551 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?806 
object: a3397 
=== Succesors ===
next: i3398 
=== Usages ===
=== Predecessor ===
a3397 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?806 object: a3397 #next: i3398  <|@  <|@
f <@~|@floating>@ <|@
tid v3429 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i3398 i3405 v1067 i3414 v1116 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3398 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList.size
nodeSourcePosition: at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 12]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v3429 
=== Succesors ===
next: v39 
=== Usages ===
i9 j2309 i2295 v1100 v1051 v1081 i2137 j3350 
=== Predecessor ===
v3551 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3429 #next: v39  <|@  <|@
f <@~|@floating>@ <|@
tid i9 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 16]
stamp: i32
=== Inputs ===
x: i808 
y: i3398 
=== Succesors ===
=== Usages ===
i51 v42 i51 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i808 y: i3398  <|@  <|@
f <@~|@floating>@ <|@
tid a1125 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList.calculateCapacity(ArrayList.java:224) [bci: 4]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
rawvalue: Object[0]{}
stableDimension: 0
stamp: n!# [Ljava/lang/Object;
stampKind: n -
value: NarrowOop[Object[0]{}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1126 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1126 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.ArrayList.calculateCapacity(ArrayList.java:224) [bci: 4]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a3397 
y: a1125 
=== Succesors ===
=== Usages ===
v39 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a3397 y: a1125  <|@  <|@
f <@*|@fixed>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.calculateCapacity(ArrayList.java:224) [bci: 4]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: void
trueSuccessorProbability: 0.20639829530068676
=== Inputs ===
condition: v1126 
=== Succesors ===
trueSuccessor: v37 
falseSuccessor: v38 
=== Usages ===
=== Predecessor ===
i3398 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1126 #trueSuccessor: v37 #falseSuccessor: v38  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B240"
    from_bci -1
    to_bci -1
    predecessors "B239" 
    successors "B241" "B242" 
    xhandlers
    flags 
    probability 4596604302576984052
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.calculateCapacity(ArrayList.java:225) [bci: 7]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v45 
=== Usages ===
=== Predecessor ===
v39 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v45  <|@  <|@
f <@~|@floating>@ <|@
tid i41 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at java.util.ArrayList.calculateCapacity(ArrayList.java:225) [bci: 10]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
rawvalue: 11
stableDimension: 0
stamp: i32 [11] ⇊000000000000000b ⇈000000000000000b
stampKind: i32
value: int[11|0xb]
=== Inputs ===
=== Succesors ===
=== Usages ===
v42 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at java.util.ArrayList.calculateCapacity(ArrayList.java:225) [bci: 10]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i9 
y: i41 
=== Succesors ===
=== Usages ===
v45 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i9 y: i41  <|@  <|@
f <@*|@fixed>@ <|@
tid v45 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at java.util.ArrayList.calculateCapacity(ArrayList.java:225) [bci: 10]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: void
trueSuccessorProbability: 0.7356387781002678
=== Inputs ===
condition: v42 
=== Succesors ===
trueSuccessor: v43 
falseSuccessor: v44 
=== Usages ===
=== Predecessor ===
v37 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v42 #trueSuccessor: v43 #falseSuccessor: v44  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B241"
    from_bci -1
    to_bci -1
    predecessors "B240" 
    successors "B244" 
    xhandlers
    flags 
    probability 4594638437905347158
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 5]
at java.util.ArrayList.calculateCapacity(ArrayList.java:225) [bci: 10]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v52 
=== Usages ===
=== Predecessor ===
v45 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v52  <|@  <|@
f <@~|@floating>@ <|@
tid i40 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList.calculateCapacity(ArrayList.java:225) [bci: 7]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
rawvalue: 10
stableDimension: 0
stamp: i32 [10] ⇊000000000000000a ⇈000000000000000a
stampKind: i32
value: int[10|0xa]
=== Inputs ===
=== Succesors ===
=== Usages ===
i51 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v49 
=== Predecessor ===
v43 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B242"
    from_bci -1
    to_bci -1
    predecessors "B240" 
    successors "B244" 
    xhandlers
    flags 
    probability 4588024279722342007
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v44 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 9]
at java.util.ArrayList.calculateCapacity(ArrayList.java:225) [bci: 10]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v53 
=== Usages ===
=== Predecessor ===
v45 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v53  <|@  <|@
f <@*|@fixed>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v49 
=== Predecessor ===
v44 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B243"
    from_bci -1
    to_bci -1
    predecessors "B239" 
    successors "B244" 
    xhandlers
    flags 
    probability 4605323348228405251
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.calculateCapacity(ArrayList.java:227) [bci: 14]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v50 
=== Usages ===
=== Predecessor ===
v39 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v50  <|@  <|@
f <@*|@fixed>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v49 
=== Predecessor ===
v38 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B244"
    from_bci -1
    to_bci -1
    predecessors "B243" "B241" "B242" 
    successors "B245" "B259" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i51 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v49 
values: i9 i40 i9 
=== Succesors ===
=== Usages ===
i78 i1132 ?57 i60 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v49 values: i9 i40 i9  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v50 v52 v53 
=== Succesors ===
next: i3399 
=== Usages ===
i51 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v50 v52 v53 #next: i3399  <|@  <|@
f <@~|@floating>@ <|@
tid v3431 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i3399 v1018 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3399 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:235) [bci: 2]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v3431 
=== Succesors ===
next: v1018 
=== Usages ===
i55 
=== Predecessor ===
v49 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3431 #next: v1018  <|@  <|@
f <@~|@floating>@ <|@
tid i55 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:235) [bci: 6]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: i32
=== Inputs ===
x: i3399 
y: i23 
=== Succesors ===
=== Usages ===
v1018 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i3399 y: i23  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1018 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList.modCount
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:235) [bci: 7]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3431 
value: i55 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i3400 
=== Usages ===
=== Predecessor ===
i3399 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3431 value: i55 stateAfter: - lastLocationAccess: - #next: i3400  <|@  <|@
f <@~|@floating>@ <|@
tid v3432 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3397 
=== Succesors ===
=== Usages ===
i3400 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3397  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3400 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:238) [bci: 15]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v3432 
=== Succesors ===
next: i3401 
=== Usages ===
i60 i76 i77 i1617 i1050 v1540 
=== Predecessor ===
v1018 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3432 #next: i3401  <|@  <|@
f <@~|@floating>@ <|@
tid v3433 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1174 
index: - 
=== Succesors ===
=== Usages ===
i3401 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1174 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3401 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 60]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:146) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v3433 
=== Succesors ===
next: v64 
=== Usages ===
v1131 
=== Predecessor ===
i3400 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3433 #next: v64  <|@  <|@
f <@~|@floating>@ <|@
tid v1131 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:146) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3401 
y: i808 
=== Succesors ===
=== Usages ===
v1098 v1049 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i3401 y: i808  <|@  <|@
f <@~|@floating>@ <|@
tid i60 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:238) [bci: 16]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: i32
=== Inputs ===
x: i51 
y: i3400 
=== Succesors ===
=== Usages ===
v61 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i51 y: i3400  <|@  <|@
f <@~|@floating>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:238) [bci: 17]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i60 
y: i23 
=== Succesors ===
=== Usages ===
v64 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i60 y: i23  <|@  <|@
tid ?34 <|@
d <@d|@=== Debug Properties ===
bci: 17
code: ResolvedJavaMethodBytecode<ArrayList.addAll(Collection)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: ArrayList.java
sourceLine: 583
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - a1174 i808 
=== Succesors ===
=== Usages ===
?70 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - a1174 i808  <|@  <|@
tid ?70 <|@
d <@d|@=== Debug Properties ===
bci: 9
code: ResolvedJavaMethodBytecode<ArrayList.ensureCapacityInternal(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ArrayList.java
sourceLine: 231
stackSize: 0
=== Inputs ===
outerFrameState: ?34 
values: - - 
=== Succesors ===
=== Usages ===
?57 ?99 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?34 values: - -  <|@  <|@
tid ?57 <|@
d <@d|@=== Debug Properties ===
bci: 10
code: ResolvedJavaMethodBytecode<ArrayList.ensureExplicitCapacity(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:235) [bci: 7]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
rethrowException: false
sourceFile: ArrayList.java
sourceLine: 238
stackSize: 0
=== Inputs ===
outerFrameState: ?70 
values: a1 i51 
=== Succesors ===
=== Usages ===
a2207 v1747 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?70 values: a1 i51  <|@  <|@
f <@~|@floating>@ <|@
tid v1081 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 22]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:146) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3398 
y: i13 
=== Succesors ===
=== Usages ===
v1087 v1038 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3398 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:238) [bci: 17]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: void
trueSuccessorProbability: 0.7759914359571053
=== Inputs ===
condition: v61 
=== Succesors ===
trueSuccessor: v62 
falseSuccessor: v63 
=== Usages ===
=== Predecessor ===
i3401 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v61 #trueSuccessor: v62 #falseSuccessor: v63  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B245"
    from_bci -1
    to_bci -1
    predecessors "B244" 
    successors "B246" "B247" 
    xhandlers
    flags 
    probability 4605164729028914646
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:240) [bci: 25]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1038 
=== Usages ===
=== Predecessor ===
v64 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1038  <|@  <|@
f <@~|@floating>@ <|@
tid i1749 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -270433
stableDimension: 0
stamp: i32 [-270433] ⇊00000000fffbdf9f ⇈00000000fffbdf9f
stampKind: i32
value: int[-270433|0xfffffffffffbdf9f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1745 i1745 i1745 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1038 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 33]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:146) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1081 
=== Succesors ===
trueSuccessor: v1037 
falseSuccessor: v1033 
=== Usages ===
=== Predecessor ===
v62 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1081 #trueSuccessor: v1037 #falseSuccessor: v1033  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B246"
    from_bci -1
    to_bci -1
    predecessors "B245" 
    successors "B321" 
    xhandlers
    flags 
    probability 4575596594292739886
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1037 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:146) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1748 
=== Usages ===
=== Predecessor ===
v1038 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1748  <|@  <|@
f <@*|@fixed>@ <|@
tid v1748 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1742 
=== Predecessor ===
v1037 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B247"
    from_bci -1
    to_bci -1
    predecessors "B245" 
    successors "B248" "B249" 
    xhandlers
    flags 
    probability 4605094833934078264
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1033 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 36]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:146) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1049 
=== Usages ===
=== Predecessor ===
v1038 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1049  <|@  <|@
f <@*|@fixed>@ <|@
tid v1049 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 77]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:146) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1131 
=== Succesors ===
trueSuccessor: v1048 
falseSuccessor: v1046 
=== Usages ===
=== Predecessor ===
v1033 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1131 #trueSuccessor: v1048 #falseSuccessor: v1046  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B248"
    from_bci -1
    to_bci -1
    predecessors "B247" 
    successors "B321" 
    xhandlers
    flags 
    probability 4575507128571349317
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1048 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:146) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1761 
=== Usages ===
=== Predecessor ===
v1049 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1761  <|@  <|@
f <@*|@fixed>@ <|@
tid v1761 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:146) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1742 
=== Predecessor ===
v1048 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B249"
    from_bci -1
    to_bci -1
    predecessors "B247" 
    successors "B250" "B251" 
    xhandlers
    flags 
    probability 4605025637790190245
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1046 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 80]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:146) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1055 
=== Usages ===
=== Predecessor ===
v1049 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1055  <|@  <|@
f <@~|@floating>@ <|@
tid i1050 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:146) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: i32 [-2147483647 - 2147483647]
=== Inputs ===
x: i3400 
y: i808 
=== Succesors ===
=== Usages ===
v1051 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i3400 y: i808  <|@  <|@
f <@~|@floating>@ <|@
tid v1051 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:146) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1050 
y: i3398 
=== Succesors ===
=== Usages ===
v1055 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1050 y: i3398  <|@  <|@
f <@*|@fixed>@ <|@
tid v1055 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:146) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1051 
=== Succesors ===
trueSuccessor: v1054 
falseSuccessor: v1052 
=== Usages ===
=== Predecessor ===
v1046 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1051 #trueSuccessor: v1054 #falseSuccessor: v1052  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B250"
    from_bci -1
    to_bci -1
    predecessors "B249" 
    successors "B321" 
    xhandlers
    flags 
    probability 4575418557507172653
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1054 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:146) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1760 
=== Usages ===
=== Predecessor ===
v1055 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1760  <|@  <|@
f <@*|@fixed>@ <|@
tid v1760 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:146) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1742 
=== Predecessor ===
v1054 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B251"
    from_bci -1
    to_bci -1
    predecessors "B249" 
    successors "B252" "B253" 
    xhandlers
    flags 
    probability 4604957133607741107
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1052 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:146) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2122 
=== Usages ===
=== Predecessor ===
v1055 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2122  <|@  <|@
f <@~|@floating>@ <|@
tid v3353 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.ArrayList.addAll(ArrayList.java:586) [bci: 45]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i808 
y: i13 
=== Succesors ===
=== Usages ===
v2122 i3346 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i808 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v2122 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:205) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v3353 
=== Succesors ===
trueSuccessor: v2120 
falseSuccessor: v2121 
=== Usages ===
=== Predecessor ===
v1052 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3353 #trueSuccessor: v2120 #falseSuccessor: v2121  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B252"
    from_bci -1
    to_bci -1
    predecessors "B251" 
    successors "B258" 
    xhandlers
    flags 
    probability 4590089951913136680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2120 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:233) [bci: 217]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2169 
=== Usages ===
=== Predecessor ===
v2122 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2169  <|@  <|@
f <@*|@fixed>@ <|@
tid v2169 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2168 
=== Predecessor ===
v2120 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B253"
    from_bci -1
    to_bci -1
    predecessors "B251" 
    successors "B254" "B255" 
    xhandlers
    flags 
    probability 4604278942201494638
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2121 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:206) [bci: 19]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3402 
=== Usages ===
=== Predecessor ===
v2122 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3402  <|@  <|@
f <@~|@floating>@ <|@
tid v3476 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a1174 
index: - 
=== Succesors ===
=== Usages ===
v3402 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1174 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3402 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHub(HotSpotReplacementsUtil.java:737) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:208) [bci: 33]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v3476 
=== Succesors ===
next: v3403 
=== Usages ===
v2165 
=== Predecessor ===
v2121 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3476 #next: v3403  <|@  <|@
f <@~|@floating>@ <|@
tid v3554 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3397 
=== Succesors ===
=== Usages ===
v3403 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3397  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3403 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.ClassGetHubNode.readClass(Class) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.getComponentType(HotSpotClassSubstitutions.java:120) [bci: 1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 6]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v3554 
=== Succesors ===
next: v2127 
=== Usages ===
v2165 v3474 
=== Predecessor ===
v3402 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3554 #next: v2127  <|@  <|@
f <@~|@floating>@ <|@
tid v2165 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:210) [bci: 52]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v3402 
y: v3403 
=== Succesors ===
=== Usages ===
v2127 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: v3402 y: v3403  <|@  <|@
f <@~|@floating>@ <|@
tid j3350 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopyObjectKillsAny(ArrayCopyCallNode.java:199) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:214) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i3398 
=== Succesors ===
=== Usages ===
v3480 v3478 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i3398  <|@  <|@
f <@~|@floating>@ <|@
tid a1015 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 2]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a3397 
=== Succesors ===
=== Usages ===
j2161 v2164 j2151 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a3397  <|@  <|@
f <@~|@floating>@ <|@
tid j2348 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopyObjectKillsAny(ArrayCopyCallNode.java:199) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:214) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i808 
=== Succesors ===
=== Usages ===
v2157 i2163 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i808  <|@  <|@
f <@*|@fixed>@ <|@
tid v2127 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:210) [bci: 63]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
trueSuccessorProbability: 0.6
=== Inputs ===
condition: v2165 
=== Succesors ===
trueSuccessor: v2126 
falseSuccessor: v2125 
=== Usages ===
=== Predecessor ===
v3403 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2165 #trueSuccessor: v2126 #falseSuccessor: v2125  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B254"
    from_bci -1
    to_bci -1
    predecessors "B253" 
    successors "B258" 
    xhandlers
    flags 
    probability 4600996087105367786
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2126 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:212) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2146 
=== Usages ===
=== Predecessor ===
v2127 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2146  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2146 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopyObjectKillsAny(ArrayCopyCallNode.java:199) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:214) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: i64
=== Inputs ===
object: a1174 
=== Succesors ===
next: j2151 
=== Usages ===
v3477 
=== Predecessor ===
v2126 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a1174 #next: j2151  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2151 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopyObjectKillsAny(ArrayCopyCallNode.java:199) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:214) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: i64
=== Inputs ===
object: a1015 
=== Succesors ===
next: v2157 
=== Usages ===
v3478 
=== Predecessor ===
j2146 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a1015 #next: v2157  <|@  <|@
f <@~|@floating>@ <|@
tid v3477 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j2146 
index: - 
=== Succesors ===
=== Usages ===
v2157 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2146 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v3478 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: j2151 
index: j3350 
=== Succesors ===
=== Usages ===
v2157 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2151 index: j3350  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2157 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: ObjectArraycopyKillAny(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopyObjectKillsAny(ArrayCopyCallNode.java:199) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:214) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v3477 v3478 j2348 
=== Succesors ===
next: v2170 
=== Usages ===
=== Predecessor ===
j2151 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v3477 v3478 j2348 #next: v2170  <|@  <|@
f <@*|@fixed>@ <|@
tid v2170 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2168 
=== Predecessor ===
v2157 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B255"
    from_bci -1
    to_bci -1
    predecessors "B253" 
    successors "B256" "B257" 
    xhandlers
    flags 
    probability 4598554598042880498
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2125 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:216) [bci: 98]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3404 
=== Usages ===
=== Predecessor ===
v2127 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3404  <|@  <|@
f <@~|@floating>@ <|@
tid v3474 <|@
d <@d|@=== Debug Properties ===
displacement: 232
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v3403 
=== Succesors ===
=== Usages ===
v3404 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v3403  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3404 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ObjArrayKlass::_element_klass:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:216) [bci: 109]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
nullCheck: false
stamp: Klass*
=== Inputs ===
stateBefore: - 
guard: - 
address: v3474 
=== Succesors ===
next: i2158 
=== Usages ===
v3475 i2163 
=== Predecessor ===
v2125 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3474 #next: i2158  <|@  <|@
f <@~|@floating>@ <|@
tid v3475 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: v3404 
index: - 
=== Succesors ===
=== Usages ===
i2158 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v3404 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2158 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: Klass::_super_check_offset:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:217) [bci: 125]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v3475 
=== Succesors ===
next: j2159 
=== Usages ===
j2130 
=== Predecessor ===
v3404 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3475 #next: j2159  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2159 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.CheckcastArrayCopyCallNode.checkcastArraycopy(Object, int, Object, int, int, Word, Object, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:222) [bci: 167]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: i64
=== Inputs ===
object: a1174 
=== Succesors ===
next: j2161 
=== Usages ===
v3479 
=== Predecessor ===
i2158 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a1174 #next: j2161  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2161 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.CheckcastArrayCopyCallNode.checkcastArraycopy(Object, int, Object, int, int, Word, Object, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:222) [bci: 167]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: i64
=== Inputs ===
object: a1015 
=== Succesors ===
next: i2163 
=== Usages ===
v3480 
=== Predecessor ===
j2159 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a1015 #next: i2163  <|@  <|@
f <@~|@floating>@ <|@
tid v3479 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j2159 
index: - 
=== Succesors ===
=== Usages ===
i2163 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2159 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v3480 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: j2161 
index: j3350 
=== Succesors ===
=== Usages ===
i2163 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2161 index: j3350  <|@  <|@
f <@~|@floating>@ <|@
tid j2130 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:217) [bci: 128]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i2158 
=== Succesors ===
=== Usages ===
i2163 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2158  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2163 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: ObjectCheckcast(Word,Word,Word,Word,Word)int
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.CheckcastArrayCopyCallNode.checkcastArraycopy(Object, int, Object, int, int, Word, Object, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:222) [bci: 167]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: i32
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v3479 v3480 j2348 j2130 v3404 
=== Succesors ===
next: v2134 
=== Usages ===
v2131 i2135 
=== Predecessor ===
j2161 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v3479 v3480 j2348 j2130 v3404 #next: v2134  <|@  <|@
f <@~|@floating>@ <|@
tid v2131 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:223) [bci: 177]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2163 
y: i13 
=== Succesors ===
=== Usages ===
v2134 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2163 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v2134 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:223) [bci: 188]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
trueSuccessorProbability: 0.99
=== Inputs ===
condition: v2131 
=== Succesors ===
trueSuccessor: v2133 
falseSuccessor: v2132 
=== Usages ===
=== Predecessor ===
i2163 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2131 #trueSuccessor: v2133 #falseSuccessor: v2132  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B256"
    from_bci -1
    to_bci -1
    predecessors "B255" 
    successors "B258" 
    xhandlers
    flags 
    probability 4598505768261630752
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2133 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:233) [bci: 217]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2171 
=== Usages ===
=== Predecessor ===
v2134 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2171  <|@  <|@
f <@*|@fixed>@ <|@
tid v2171 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2168 
=== Predecessor ===
v2133 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B257"
    from_bci -1
    to_bci -1
    predecessors "B255" 
    successors "B258" 
    xhandlers
    flags 
    probability 4568396634526279913
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2132 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:228) [bci: 191]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2176 
=== Usages ===
=== Predecessor ===
v2134 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2176  <|@  <|@
f <@~|@floating>@ <|@
tid i2135 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NotNode$$Lambda$192/1797157237@4fdb7f79
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:228) [bci: 194]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: i32
=== Inputs ===
value: i2163 
=== Succesors ===
=== Usages ===
v2164 i2137 i2138 
=== Predecessor ===
- >@ <|@
instruction <@Not|@org.graalvm.compiler.nodes.calc.NotNode>@ value: i2163  <|@  <|@
f <@~|@floating>@ <|@
tid i2137 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:229) [bci: 208]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: i32
=== Inputs ===
x: i2135 
y: i3398 
=== Succesors ===
=== Usages ===
v2164 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2135 y: i3398  <|@  <|@
f <@~|@floating>@ <|@
tid i2138 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:229) [bci: 213]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: i32
=== Inputs ===
x: i808 
y: i2135 
=== Succesors ===
=== Usages ===
v2164 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i808 y: i2135  <|@  <|@
tid v2164 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:229) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@6ae90306
stamp: void
targetMethod: HotSpotMethod<System.arraycopy(Object, int, Object, int, int)>
=== Inputs ===
arguments: a1174 i2135 a1015 i2137 i2138 
=== Succesors ===
=== Usages ===
v2176 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1174 i2135 a1015 i2137 i2138  <|@  <|@
tid ?1518 <|@
d <@d|@=== Debug Properties ===
bci: 31
code: ResolvedJavaMethodBytecode<ArrayList.addAll(Collection)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: ArrayList.java
sourceLine: 584
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - i808 
=== Succesors ===
=== Usages ===
v2176 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - i808  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2176 <|@
d <@d|@=== Debug Properties ===
bci: 31
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
polymorphic: false
stamp: void
targetMethod: Direct#System.arraycopy
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v2164 
stateDuring: ?1518 
=== Succesors ===
next: v2172 
=== Usages ===
=== Predecessor ===
v2132 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v2164 stateDuring: ?1518 #next: v2172  <|@  <|@
f <@*|@fixed>@ <|@
tid v2172 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2168 
=== Predecessor ===
v2176 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B258"
    from_bci -1
    to_bci -1
    predecessors "B252" "B254" "B256" "B257" 
    successors 
    xhandlers
    flags 
    probability 4604957133607741107
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2168 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2169 v2170 v2171 v2172 
=== Succesors ===
next: i3405 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2169 v2170 v2171 v2172 #next: i3405  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3405 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList.size
nodeSourcePosition: at java.util.ArrayList.addAll(ArrayList.java:585) [bci: 36]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v3429 
=== Succesors ===
next: v1067 
=== Usages ===
i854 
=== Predecessor ===
v2168 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3429 #next: v1067  <|@  <|@
f <@~|@floating>@ <|@
tid i854 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.ArrayList.addAll(ArrayList.java:585) [bci: 40]
stamp: i32
=== Inputs ===
x: i808 
y: i3405 
=== Succesors ===
=== Usages ===
v1067 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i808 y: i3405  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1067 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ArrayList.size
nodeSourcePosition: at java.util.ArrayList.addAll(ArrayList.java:585) [bci: 41]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3429 
value: i854 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v856 
=== Usages ===
=== Predecessor ===
i3405 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3429 value: i854 stateAfter: - lastLocationAccess: - #next: v856  <|@  <|@
f <@~|@floating>@ <|@
tid i3346 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.addAll(ArrayList.java:586) [bci: 45]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v3353 
trueValue: i13 
falseValue: i23 
=== Succesors ===
=== Usages ===
v856 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v3353 trueValue: i13 falseValue: i23  <|@  <|@
f <@*|@fixed>@ <|@
tid v856 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.addAll(ArrayList.java:586) [bci: 53]
stamp: void
=== Inputs ===
result: i3346 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1067 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i3346 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B259"
    from_bci -1
    to_bci -1
    predecessors "B244" 
    successors "B260" "B320" 
    xhandlers
    flags 
    probability 4597238779374946467
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 20]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1399 
=== Usages ===
=== Predecessor ===
v64 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1399  <|@  <|@
f <@~|@floating>@ <|@
tid i76 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:259) [bci: 9]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: i32 [0 - 1073741823] ⇈000000003fffffff
=== Inputs ===
x: i3400 
y: i23 
=== Succesors ===
=== Usages ===
i77 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i3400 y: i23  <|@  <|@
f <@~|@floating>@ <|@
tid i77 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:259) [bci: 10]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: i32
=== Inputs ===
x: i76 
y: i3400 
=== Succesors ===
=== Usages ===
i78 i1132 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i76 y: i3400  <|@  <|@
f <@~|@floating>@ <|@
tid i78 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:260) [bci: 14]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: i32
=== Inputs ===
x: i77 
y: i51 
=== Succesors ===
=== Usages ===
v79 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i77 y: i51  <|@  <|@
f <@~|@floating>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:260) [bci: 15]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i78 
y: i13 
=== Succesors ===
=== Usages ===
i1132 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i78 y: i13  <|@  <|@
f <@~|@floating>@ <|@
tid i1132 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v79 
trueValue: i51 
falseValue: i77 
=== Succesors ===
=== Usages ===
i1099 j2460 i89 v1524 v1540 i1617 a2207 v2228 i2247 v2240 i2192 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v79 trueValue: i51 falseValue: i77  <|@  <|@
f <@~|@floating>@ <|@
tid i88 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:262) [bci: 23]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
rawvalue: -2147483639
stableDimension: 0
stamp: i32 [-2147483639] ⇊0000000080000009 ⇈0000000080000009
stampKind: i32
value: int[-2147483639|0xffffffff80000009]
=== Inputs ===
=== Succesors ===
=== Usages ===
i89 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i89 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:262) [bci: 23]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: i32
=== Inputs ===
x: i1132 
y: i88 
=== Succesors ===
=== Usages ===
v90 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1132 y: i88  <|@  <|@
f <@~|@floating>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:262) [bci: 24]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i89 
y: i23 
=== Succesors ===
=== Usages ===
v1399 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i89 y: i23  <|@  <|@
f <@*|@fixed>@ <|@
tid v1399 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:262) [bci: 24]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v90 
=== Succesors ===
trueSuccessor: v1396 
falseSuccessor: v1398 
=== Usages ===
=== Predecessor ===
v63 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v90 #trueSuccessor: v1396 #falseSuccessor: v1398  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B260"
    from_bci -1
    to_bci -1
    predecessors "B259" 
    successors "B261" "B262" 
    xhandlers
    flags 
    probability 4597238779374946467
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1396 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:262) [bci: 24]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1530 
=== Usages ===
=== Predecessor ===
v1399 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1530  <|@  <|@
f <@~|@floating>@ <|@
tid v1524 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 22]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:171) [bci: 3]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1132 
y: i13 
=== Succesors ===
=== Usages ===
v1530 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1132 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v1530 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 33]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:171) [bci: 3]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1524 
=== Succesors ===
trueSuccessor: v1529 
falseSuccessor: v1525 
=== Usages ===
=== Predecessor ===
v1396 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1524 #trueSuccessor: v1529 #falseSuccessor: v1525  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B261"
    from_bci -1
    to_bci -1
    predecessors "B260" 
    successors "B321" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1529 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:187) [bci: 55]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:171) [bci: 3]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1750 
=== Usages ===
=== Predecessor ===
v1530 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1750  <|@  <|@
f <@~|@floating>@ <|@
tid i1751 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -393313
stableDimension: 0
stamp: i32 [-393313] ⇊00000000fff9ff9f ⇈00000000fff9ff9f
stampKind: i32
value: int[-393313|0xfffffffffff9ff9f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1745 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1750 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1742 
=== Predecessor ===
v1529 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B262"
    from_bci -1
    to_bci -1
    predecessors "B260" 
    successors "B263" "B264" 
    xhandlers
    flags 
    probability 4597238779374946467
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1525 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 36]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:171) [bci: 3]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2194 
=== Usages ===
=== Predecessor ===
v1530 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2194  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2194 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j2225 
=== Usages ===
v3482 v3483 
=== Predecessor ===
v1525 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j2225  <|@  <|@
f <@~|@floating>@ <|@
tid v3482 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j2194 
index: - 
=== Succesors ===
=== Usages ===
j2225 v2227 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2194 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2225 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3482 
=== Succesors ===
next: j2226 
=== Usages ===
j2198 v3484 v3485 a2206 v3490 v3486 v3487 v3488 v3489 
=== Predecessor ===
j2194 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3482 #next: j2226  <|@  <|@
f <@~|@floating>@ <|@
tid v3483 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j2194 
index: - 
=== Succesors ===
=== Usages ===
j2226 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2194 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2226 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3483 
=== Succesors ===
next: v3406 
=== Usages ===
v2199 
=== Predecessor ===
j2225 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3483 #next: v3406  <|@  <|@
f <@~|@floating>@ <|@
tid v3481 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3397 
=== Succesors ===
=== Usages ===
v3406 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3397  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3406 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.ClassGetHubNode.readClass(Class) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.getComponentType(HotSpotClassSubstitutions.java:120) [bci: 1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 6]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v3481 
=== Succesors ===
next: v2202 
=== Usages ===
v2179 v2232 
=== Predecessor ===
j2226 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3481 #next: v2202  <|@  <|@
f <@~|@floating>@ <|@
tid i2192 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i1132 
y: i912 
=== Succesors ===
=== Usages ===
i2214 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i1132 y: i912  <|@  <|@
f <@~|@floating>@ <|@
tid i2214 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: i32 [-2147483645 - 2147483647] ⇊0000000000000003
=== Inputs ===
x: i2192 
y: i1814 
=== Succesors ===
=== Usages ===
i2193 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2192 y: i1814  <|@  <|@
f <@~|@floating>@ <|@
tid i2193 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i2214 
y: i1792 
=== Succesors ===
=== Usages ===
j2197 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i2214 y: i1792  <|@  <|@
f <@~|@floating>@ <|@
tid j2197 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i2193 
=== Succesors ===
=== Usages ===
j2198 v3486 v3487 v3488 v3489 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2193  <|@  <|@
f <@~|@floating>@ <|@
tid j2198 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: i64
=== Inputs ===
x: j2197 
y: j2225 
=== Succesors ===
=== Usages ===
v2199 v2227 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2197 y: j2225  <|@  <|@
f <@~|@floating>@ <|@
tid v2199 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2226 
y: j2198 
=== Succesors ===
=== Usages ===
v2202 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j2226 y: j2198  <|@  <|@
f <@*|@fixed>@ <|@
tid v2202 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v2199 
=== Succesors ===
trueSuccessor: v2200 
falseSuccessor: v2201 
=== Usages ===
=== Predecessor ===
v3406 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2199 #trueSuccessor: v2200 #falseSuccessor: v2201  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B263"
    from_bci -1
    to_bci -1
    predecessors "B262" 
    successors "B265" 
    xhandlers
    flags 
    probability 4567311708340335520
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2200 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2207 
=== Usages ===
=== Predecessor ===
v2202 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2207  <|@  <|@
f <@~|@floating>@ <|@
tid v2179 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.ClassGetHubNode.readClass(Class) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.getComponentType(HotSpotClassSubstitutions.java:120) [bci: 1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 6]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v3406 
=== Succesors ===
=== Usages ===
a2207 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v3406  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2207 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?57 
arguments: v2179 i1132 i13 
=== Succesors ===
next: v2210 
=== Usages ===
a2211 
=== Predecessor ===
v2200 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?57 arguments: v2179 i1132 i13 #next: v2210  <|@  <|@
f <@*|@fixed>@ <|@
tid v2210 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2209 
=== Predecessor ===
a2207 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B264"
    from_bci -1
    to_bci -1
    predecessors "B262" 
    successors "B265" 
    xhandlers
    flags 
    probability 4597158071784102356
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2201 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2227 
=== Usages ===
=== Predecessor ===
v2202 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2227  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2227 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3482 
value: j2198 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2216 
=== Usages ===
=== Predecessor ===
v2201 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3482 value: j2198 stateAfter: - lastLocationAccess: - #next: v2216  <|@  <|@
f <@~|@floating>@ <|@
tid v3486 <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j2197 
index: j2225 
=== Succesors ===
=== Usages ===
v2216 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2197 index: j2225  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2216 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: void
=== Inputs ===
address: v3486 
=== Succesors ===
next: v2218 
=== Usages ===
=== Predecessor ===
v2227 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3486 #next: v2218  <|@  <|@
f <@~|@floating>@ <|@
tid v3487 <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j2197 
index: j2225 
=== Succesors ===
=== Usages ===
v2218 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2197 index: j2225  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2218 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: void
=== Inputs ===
address: v3487 
=== Succesors ===
next: v2220 
=== Usages ===
=== Predecessor ===
v2216 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3487 #next: v2220  <|@  <|@
f <@~|@floating>@ <|@
tid v3488 <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j2197 
index: j2225 
=== Succesors ===
=== Usages ===
v2220 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2197 index: j2225  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2220 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: void
=== Inputs ===
address: v3488 
=== Succesors ===
next: v2222 
=== Usages ===
=== Predecessor ===
v2218 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3488 #next: v2222  <|@  <|@
f <@~|@floating>@ <|@
tid v3489 <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j2197 
index: j2225 
=== Succesors ===
=== Usages ===
v2222 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2197 index: j2225  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2222 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: void
=== Inputs ===
address: v3489 
=== Succesors ===
next: v2228 
=== Usages ===
=== Predecessor ===
v2220 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3489 #next: v2228  <|@  <|@
f <@~|@floating>@ <|@
tid v3484 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j2225 
index: - 
=== Succesors ===
=== Usages ===
v2228 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2225 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2228 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3484 
value: i1132 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2229 
=== Usages ===
=== Predecessor ===
v2222 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3484 value: i1132 stateAfter: - lastLocationAccess: - #next: v2229  <|@  <|@
f <@~|@floating>@ <|@
tid v3485 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2225 
index: - 
=== Succesors ===
=== Usages ===
v2229 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2225 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2229 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3485 
value: j1778 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2232 
=== Usages ===
=== Predecessor ===
v2228 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3485 value: j1778 stateAfter: - lastLocationAccess: - #next: v2232  <|@  <|@
f <@~|@floating>@ <|@
tid v3490 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j2225 
index: - 
=== Succesors ===
=== Usages ===
v2232 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2225 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2232 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3490 
value: v3406 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2205 
=== Usages ===
=== Predecessor ===
v2229 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3490 value: v3406 stateAfter: - lastLocationAccess: - #next: v2205  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2205 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2206 
=== Usages ===
=== Predecessor ===
v2232 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a2206  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2206 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j2225 
=== Succesors ===
next: v2208 
=== Usages ===
a2211 
=== Predecessor ===
v2205 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j2225 #next: v2208  <|@  <|@
f <@*|@fixed>@ <|@
tid v2208 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2209 
=== Predecessor ===
a2206 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B265"
    from_bci -1
    to_bci -1
    predecessors "B264" "B263" 
    successors "B266" "B267" 
    xhandlers
    flags 
    probability 4597238779374946466
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a2211 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v2209 
values: a2206 a2207 
=== Succesors ===
=== Usages ===
v3499 a1642 v3439 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2209 values: a2206 a2207  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2209 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2208 v2210 
=== Succesors ===
next: v2984 
=== Usages ===
a2211 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2208 v2210 #next: v2984  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2984 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v2588 
=== Usages ===
j2985 j2987 
=== Predecessor ===
v2209 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v2588  <|@  <|@
f <@~|@floating>@ <|@
tid v3439 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a2211 
index: - 
=== Succesors ===
=== Usages ===
j2987 j2246 j2244 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2211 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1540 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 4]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:174) [bci: 19]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3400 
y: i1132 
=== Succesors ===
=== Usages ===
i1617 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3400 y: i1132  <|@  <|@
f <@~|@floating>@ <|@
tid i1617 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v1540 
trueValue: i3400 
falseValue: i1132 
=== Succesors ===
=== Usages ===
j2461 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v1540 trueValue: i3400 falseValue: i1132  <|@  <|@
f <@~|@floating>@ <|@
tid j2461 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1617 
=== Succesors ===
=== Usages ===
j3031 v3499 j2465 v2585 v2802 j3020 j3025 j3028 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1617  <|@  <|@
f <@~|@floating>@ <|@
tid v2585 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2461 
y: j1778 
=== Succesors ===
=== Usages ===
v2588 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2461 y: j1778  <|@  <|@
f <@*|@fixed>@ <|@
tid v2588 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v2585 
=== Succesors ===
trueSuccessor: v2586 
falseSuccessor: v2587 
=== Usages ===
=== Predecessor ===
v2984 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2585 #trueSuccessor: v2586 #falseSuccessor: v2587  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B266"
    from_bci -1
    to_bci -1
    predecessors "B265" 
    successors "B281" 
    xhandlers
    flags 
    probability 4592735179747575970
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2586 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2604 
=== Usages ===
=== Predecessor ===
v2588 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2604  <|@  <|@
f <@*|@fixed>@ <|@
tid v2604 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2605 
=== Predecessor ===
v2586 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B267"
    from_bci -1
    to_bci -1
    predecessors "B265" 
    successors "B268" "B269" 
    xhandlers
    flags 
    probability 4592735179747575970
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2587 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2591 
=== Usages ===
=== Predecessor ===
v2588 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2591  <|@  <|@
f <@~|@floating>@ <|@
tid j2987 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v2984 
address: v3439 
=== Succesors ===
=== Usages ===
v3525 v3527 v3529 v3531 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v2984 address: v3439  <|@  <|@
f <@~|@floating>@ <|@
tid v3434 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3397 
=== Succesors ===
=== Usages ===
j2985 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3397  <|@  <|@
f <@~|@floating>@ <|@
tid j2985 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v2984 
address: v3434 
=== Succesors ===
=== Usages ===
v3526 v3528 v3530 v3532 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v2984 address: v3434  <|@  <|@
f <@~|@floating>@ <|@
tid j3020 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j2461 
y: j2845 
=== Succesors ===
=== Usages ===
v3021 v3023 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2461 y: j2845  <|@  <|@
f <@~|@floating>@ <|@
tid v3021 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3020 
y: j1818 
=== Succesors ===
=== Usages ===
v2591 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3020 y: j1818  <|@  <|@
f <@*|@fixed>@ <|@
tid v2591 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v3021 
=== Succesors ===
trueSuccessor: v2589 
falseSuccessor: v2590 
=== Usages ===
=== Predecessor ===
v2587 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3021 #trueSuccessor: v2589 #falseSuccessor: v2590  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B268"
    from_bci -1
    to_bci -1
    predecessors "B267" 
    successors "B272" 
    xhandlers
    flags 
    probability 4590717489976473210
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2589 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2600 
=== Usages ===
=== Predecessor ===
v2591 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2600  <|@  <|@
f <@*|@fixed>@ <|@
tid v2600 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2601 
=== Predecessor ===
v2589 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B269"
    from_bci -1
    to_bci -1
    predecessors "B267" 
    successors "B270" 
    xhandlers
    flags 
    probability 4583727980492834978
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2590 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2592 
=== Usages ===
=== Predecessor ===
v2591 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2592  <|@  <|@
f <@*|@fixed>@ <|@
tid v2592 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2593 
=== Predecessor ===
v2590 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B270"
    from_bci -1
    to_bci -1
    predecessors "B269" "B319" 
    successors "B271" "B319" 
    xhandlers
    flags "llh" 
    loop_index 14
    loop_depth 1
    probability 4592735179747575970
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3012 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2593 
values: j1818 j3019 
=== Succesors ===
=== Usages ===
v3532 j3019 v3531 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2593 values: j1818 j3019  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2593 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v2592 
=== Succesors ===
next: v3407 
=== Usages ===
v3407 v2596 v2597 j3012 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v2592 #next: v3407  <|@  <|@
f <@~|@floating>@ <|@
tid v3532 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j2985 
index: j3012 
=== Succesors ===
=== Usages ===
v3407 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2985 index: j3012  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3407 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: <n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;>
=== Inputs ===
stateBefore: - 
guard: v2593 
address: v3532 
=== Succesors ===
next: v3226 
=== Usages ===
v3226 
=== Predecessor ===
v2593 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2593 address: v3532 #next: v3226  <|@  <|@
f <@~|@floating>@ <|@
tid v3531 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j2987 
index: j3012 
=== Succesors ===
=== Usages ===
v3226 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2987 index: j3012  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3226 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3531 
value: v3407 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2599 
=== Usages ===
=== Predecessor ===
v3407 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3531 value: v3407 stateAfter: - lastLocationAccess: - #next: v2599  <|@  <|@
f <@~|@floating>@ <|@
tid j3019 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3012 
y: j1770 
=== Succesors ===
=== Usages ===
j3004 j3012 v3023 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3012 y: j1770  <|@  <|@
f <@~|@floating>@ <|@
tid v3023 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3020 
y: j3019 
=== Succesors ===
=== Usages ===
v2599 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3020 y: j3019  <|@  <|@
f <@*|@fixed>@ <|@
tid v2599 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3023 
=== Succesors ===
trueSuccessor: v2596 
falseSuccessor: v2598 
=== Usages ===
=== Predecessor ===
v3226 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3023 #trueSuccessor: v2596 #falseSuccessor: v2598  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B271"
    from_bci -1
    to_bci -1
    predecessors "B270" 
    successors "B272" 
    xhandlers
    flags 
    probability 4583727980492834978
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2596 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v2593 
=== Succesors ===
next: v2602 
=== Usages ===
=== Predecessor ===
v2599 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v2593 #next: v2602  <|@  <|@
f <@*|@fixed>@ <|@
tid v2602 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2601 
=== Predecessor ===
v2596 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B272"
    from_bci -1
    to_bci -1
    predecessors "B268" "B271" 
    successors "B273" "B274" 
    xhandlers
    flags 
    probability 4592735179747575970
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3004 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2601 
values: j1818 j3019 
=== Succesors ===
=== Usages ===
v3530 j3011 j2996 v3026 v3529 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2601 values: j1818 j3019  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2601 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2600 v2602 
=== Succesors ===
next: v2620 
=== Usages ===
j3004 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2600 v2602 #next: v2620  <|@  <|@
f <@~|@floating>@ <|@
tid j3025 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j2461 
y: j2851 
=== Succesors ===
=== Usages ===
v3026 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2461 y: j2851  <|@  <|@
f <@~|@floating>@ <|@
tid v3026 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3025 
y: j3004 
=== Succesors ===
=== Usages ===
v2620 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3025 y: j3004  <|@  <|@
f <@*|@fixed>@ <|@
tid v2620 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3026 
=== Succesors ===
trueSuccessor: v2619 
falseSuccessor: v2618 
=== Usages ===
=== Predecessor ===
v2601 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3026 #trueSuccessor: v2619 #falseSuccessor: v2618  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B273"
    from_bci -1
    to_bci -1
    predecessors "B272" 
    successors "B275" 
    xhandlers
    flags 
    probability 4583727980492834978
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2619 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2623 
=== Usages ===
=== Predecessor ===
v2620 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2623  <|@  <|@
f <@*|@fixed>@ <|@
tid v2623 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2612 
=== Predecessor ===
v2619 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B274"
    from_bci -1
    to_bci -1
    predecessors "B272" 
    successors "B275" 
    xhandlers
    flags 
    probability 4590717489976473210
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2618 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3408 
=== Usages ===
v3408 
=== Predecessor ===
v2620 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3408  <|@  <|@
f <@~|@floating>@ <|@
tid v3530 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j2985 
index: j3004 
=== Succesors ===
=== Usages ===
v3408 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2985 index: j3004  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3408 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: <n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;>
=== Inputs ===
stateBefore: - 
guard: v2618 
address: v3530 
=== Succesors ===
next: v3224 
=== Usages ===
v3224 
=== Predecessor ===
v2618 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2618 address: v3530 #next: v3224  <|@  <|@
f <@~|@floating>@ <|@
tid v3529 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j2987 
index: j3004 
=== Succesors ===
=== Usages ===
v3224 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2987 index: j3004  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3224 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3529 
value: v3408 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2611 
=== Usages ===
=== Predecessor ===
v3408 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3529 value: v3408 stateAfter: - lastLocationAccess: - #next: v2611  <|@  <|@
f <@~|@floating>@ <|@
tid j3011 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3004 
y: j2813 
=== Succesors ===
=== Usages ===
j2996 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3004 y: j2813  <|@  <|@
f <@*|@fixed>@ <|@
tid v2611 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2612 
=== Predecessor ===
v3224 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B275"
    from_bci -1
    to_bci -1
    predecessors "B274" "B273" 
    successors "B276" "B277" 
    xhandlers
    flags 
    probability 4592735179747575970
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2996 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2612 
values: j3011 j3004 
=== Succesors ===
=== Usages ===
v3528 j3003 j2988 v3029 v3527 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2612 values: j3011 j3004  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2612 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2611 v2623 
=== Succesors ===
next: v2626 
=== Usages ===
j2996 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2611 v2623 #next: v2626  <|@  <|@
f <@~|@floating>@ <|@
tid j3028 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j2461 
y: j2855 
=== Succesors ===
=== Usages ===
v3029 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2461 y: j2855  <|@  <|@
f <@~|@floating>@ <|@
tid v3029 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3028 
y: j2996 
=== Succesors ===
=== Usages ===
v2626 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3028 y: j2996  <|@  <|@
f <@*|@fixed>@ <|@
tid v2626 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3029 
=== Succesors ===
trueSuccessor: v2625 
falseSuccessor: v2624 
=== Usages ===
=== Predecessor ===
v2612 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3029 #trueSuccessor: v2625 #falseSuccessor: v2624  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B276"
    from_bci -1
    to_bci -1
    predecessors "B275" 
    successors "B278" 
    xhandlers
    flags 
    probability 4583727980492834978
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2625 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2629 
=== Usages ===
=== Predecessor ===
v2626 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2629  <|@  <|@
f <@*|@fixed>@ <|@
tid v2629 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2615 
=== Predecessor ===
v2625 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B277"
    from_bci -1
    to_bci -1
    predecessors "B275" 
    successors "B278" 
    xhandlers
    flags 
    probability 4590717489976473210
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2624 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3409 
=== Usages ===
v3409 
=== Predecessor ===
v2626 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3409  <|@  <|@
f <@~|@floating>@ <|@
tid v3528 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j2985 
index: j2996 
=== Succesors ===
=== Usages ===
v3409 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2985 index: j2996  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3409 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: <n Ljava/lang/Object;,n Ljava/lang/Object;>
=== Inputs ===
stateBefore: - 
guard: v2624 
address: v3528 
=== Succesors ===
next: v3222 
=== Usages ===
v3222 
=== Predecessor ===
v2624 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2624 address: v3528 #next: v3222  <|@  <|@
f <@~|@floating>@ <|@
tid v3527 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j2987 
index: j2996 
=== Succesors ===
=== Usages ===
v3222 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2987 index: j2996  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3222 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3527 
value: v3409 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2614 
=== Usages ===
=== Predecessor ===
v3409 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3527 value: v3409 stateAfter: - lastLocationAccess: - #next: v2614  <|@  <|@
f <@~|@floating>@ <|@
tid j3003 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2996 
y: j2827 
=== Succesors ===
=== Usages ===
j2988 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2996 y: j2827  <|@  <|@
f <@*|@fixed>@ <|@
tid v2614 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2615 
=== Predecessor ===
v3222 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B278"
    from_bci -1
    to_bci -1
    predecessors "B277" "B276" 
    successors "B279" "B280" 
    xhandlers
    flags 
    probability 4592735179747575970
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2988 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2615 
values: j3003 j2996 
=== Succesors ===
=== Usages ===
v3526 v3032 v3525 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2615 values: j3003 j2996  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2615 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2614 v2629 
=== Succesors ===
next: v2632 
=== Usages ===
j2988 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2614 v2629 #next: v2632  <|@  <|@
f <@~|@floating>@ <|@
tid j3031 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j2461 
y: j1188 
=== Succesors ===
=== Usages ===
v3032 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2461 y: j1188  <|@  <|@
f <@~|@floating>@ <|@
tid v3032 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3031 
y: j2988 
=== Succesors ===
=== Usages ===
v2632 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3031 y: j2988  <|@  <|@
f <@*|@fixed>@ <|@
tid v2632 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3032 
=== Succesors ===
trueSuccessor: v2631 
falseSuccessor: v2630 
=== Usages ===
=== Predecessor ===
v2615 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3032 #trueSuccessor: v2631 #falseSuccessor: v2630  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B279"
    from_bci -1
    to_bci -1
    predecessors "B278" 
    successors "B281" 
    xhandlers
    flags 
    probability 4583727980492834978
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2631 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2635 
=== Usages ===
=== Predecessor ===
v2632 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2635  <|@  <|@
f <@*|@fixed>@ <|@
tid v2635 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2605 
=== Predecessor ===
v2631 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B280"
    from_bci -1
    to_bci -1
    predecessors "B278" 
    successors "B281" 
    xhandlers
    flags 
    probability 4590717489976473210
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2630 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a3410 
=== Usages ===
a3410 
=== Predecessor ===
v2632 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a3410  <|@  <|@
f <@~|@floating>@ <|@
tid v3526 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j2985 
index: j2988 
=== Succesors ===
=== Usages ===
a3410 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2985 index: j2988  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3410 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v2630 
address: v3526 
=== Succesors ===
next: v3220 
=== Usages ===
v3220 
=== Predecessor ===
v2630 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2630 address: v3526 #next: v3220  <|@  <|@
f <@~|@floating>@ <|@
tid v3525 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j2987 
index: j2988 
=== Succesors ===
=== Usages ===
v3220 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2987 index: j2988  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3220 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3525 
value: a3410 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2617 
=== Usages ===
=== Predecessor ===
a3410 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3525 value: a3410 stateAfter: - lastLocationAccess: - #next: v2617  <|@  <|@
f <@*|@fixed>@ <|@
tid v2617 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2605 
=== Predecessor ===
v3220 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B281"
    from_bci -1
    to_bci -1
    predecessors "B266" "B280" "B279" 
    successors "B282" "B297" 
    xhandlers
    flags 
    probability 4597238779374946466
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2605 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2604 v2617 v2635 
=== Succesors ===
next: v3035 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2604 v2617 v2635 #next: v3035  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3035 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v2642 
=== Usages ===
j3037 
=== Predecessor ===
v2605 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v2642  <|@  <|@
f <@~|@floating>@ <|@
tid j2460 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1132 
=== Succesors ===
=== Usages ===
j2465 v2802 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1132  <|@  <|@
f <@~|@floating>@ <|@
tid v2802 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2461 
y: j2460 
=== Succesors ===
=== Usages ===
v2642 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2461 y: j2460  <|@  <|@
f <@*|@fixed>@ <|@
tid v2642 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v2802 
=== Succesors ===
trueSuccessor: v2641 
falseSuccessor: v2640 
=== Usages ===
=== Predecessor ===
v3035 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2802 #trueSuccessor: v2641 #falseSuccessor: v2640  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B282"
    from_bci -1
    to_bci -1
    predecessors "B281" 
    successors "B283" "B284" 
    xhandlers
    flags 
    probability 4592735179747575970
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2641 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2645 
=== Usages ===
=== Predecessor ===
v2642 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2645  <|@  <|@
f <@~|@floating>@ <|@
tid v3499 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a2211 
index: j2461 
=== Succesors ===
=== Usages ===
j3037 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2211 index: j2461  <|@  <|@
f <@~|@floating>@ <|@
tid j3037 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v3035 
address: v3499 
=== Succesors ===
=== Usages ===
v3533 v3534 v3535 v3536 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v3035 address: v3499  <|@  <|@
f <@~|@floating>@ <|@
tid j2465 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j2460 
y: j2461 
=== Succesors ===
=== Usages ===
j3073 j3062 j3067 j3070 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j2460 y: j2461  <|@  <|@
f <@~|@floating>@ <|@
tid j3062 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967303 - 4294967287]
=== Inputs ===
x: j2465 
y: j2845 
=== Succesors ===
=== Usages ===
v3063 v3065 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2465 y: j2845  <|@  <|@
f <@~|@floating>@ <|@
tid v3063 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3062 
y: j1818 
=== Succesors ===
=== Usages ===
v2645 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3062 y: j1818  <|@  <|@
f <@*|@fixed>@ <|@
tid v2645 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v3063 
=== Succesors ===
trueSuccessor: v2643 
falseSuccessor: v2644 
=== Usages ===
=== Predecessor ===
v2641 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3063 #trueSuccessor: v2643 #falseSuccessor: v2644  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B283"
    from_bci -1
    to_bci -1
    predecessors "B282" 
    successors "B287" 
    xhandlers
    flags 
    probability 4590717489976473210
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2643 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2654 
=== Usages ===
=== Predecessor ===
v2645 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2654  <|@  <|@
f <@*|@fixed>@ <|@
tid v2654 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2655 
=== Predecessor ===
v2643 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B284"
    from_bci -1
    to_bci -1
    predecessors "B282" 
    successors "B285" 
    xhandlers
    flags 
    probability 4583727980492834978
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2644 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2646 
=== Usages ===
=== Predecessor ===
v2645 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2646  <|@  <|@
f <@*|@fixed>@ <|@
tid v2646 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2647 
=== Predecessor ===
v2644 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B285"
    from_bci -1
    to_bci -1
    predecessors "B284" "B296" 
    successors "B286" "B296" 
    xhandlers
    flags "llh" 
    loop_index 15
    loop_depth 1
    probability 4592735179747575970
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3056 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2647 
values: j1818 j3061 
=== Succesors ===
=== Usages ===
v3536 j3061 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2647 values: j1818 j3061  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2647 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v2646 
=== Succesors ===
next: v3230 
=== Usages ===
j3056 v2650 v2651 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v2646 #next: v3230  <|@  <|@
f <@~|@floating>@ <|@
tid v3536 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j3037 
index: j3056 
=== Succesors ===
=== Usages ===
v3230 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3037 index: j3056  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3230 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3536 
value: v3243 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2653 
=== Usages ===
=== Predecessor ===
v2647 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3536 value: v3243 stateAfter: - lastLocationAccess: - #next: v2653  <|@  <|@
f <@~|@floating>@ <|@
tid j3061 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3056 
y: j1770 
=== Succesors ===
=== Usages ===
j3050 j3056 v3065 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3056 y: j1770  <|@  <|@
f <@~|@floating>@ <|@
tid v3065 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3062 
y: j3061 
=== Succesors ===
=== Usages ===
v2653 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3062 y: j3061  <|@  <|@
f <@*|@fixed>@ <|@
tid v2653 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3065 
=== Succesors ===
trueSuccessor: v2650 
falseSuccessor: v2652 
=== Usages ===
=== Predecessor ===
v3230 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3065 #trueSuccessor: v2650 #falseSuccessor: v2652  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B286"
    from_bci -1
    to_bci -1
    predecessors "B285" 
    successors "B287" 
    xhandlers
    flags 
    probability 4583727980492834978
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2650 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v2647 
=== Succesors ===
next: v2656 
=== Usages ===
=== Predecessor ===
v2653 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v2647 #next: v2656  <|@  <|@
f <@*|@fixed>@ <|@
tid v2656 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2655 
=== Predecessor ===
v2650 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B287"
    from_bci -1
    to_bci -1
    predecessors "B283" "B286" 
    successors "B288" "B289" 
    xhandlers
    flags 
    probability 4592735179747575970
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3050 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2655 
values: j1818 j3061 
=== Succesors ===
=== Usages ===
v3535 j3055 j3044 v3068 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2655 values: j1818 j3061  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2655 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2654 v2656 
=== Succesors ===
next: v2674 
=== Usages ===
j3050 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2654 v2656 #next: v2674  <|@  <|@
f <@~|@floating>@ <|@
tid j3067 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967299 - 4294967291]
=== Inputs ===
x: j2465 
y: j2851 
=== Succesors ===
=== Usages ===
v3068 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2465 y: j2851  <|@  <|@
f <@~|@floating>@ <|@
tid v3068 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3067 
y: j3050 
=== Succesors ===
=== Usages ===
v2674 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3067 y: j3050  <|@  <|@
f <@*|@fixed>@ <|@
tid v2674 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3068 
=== Succesors ===
trueSuccessor: v2673 
falseSuccessor: v2672 
=== Usages ===
=== Predecessor ===
v2655 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3068 #trueSuccessor: v2673 #falseSuccessor: v2672  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B288"
    from_bci -1
    to_bci -1
    predecessors "B287" 
    successors "B290" 
    xhandlers
    flags 
    probability 4583727980492834978
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2673 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2677 
=== Usages ===
=== Predecessor ===
v2674 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2677  <|@  <|@
f <@*|@fixed>@ <|@
tid v2677 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2666 
=== Predecessor ===
v2673 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B289"
    from_bci -1
    to_bci -1
    predecessors "B287" 
    successors "B290" 
    xhandlers
    flags 
    probability 4590717489976473210
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2672 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3229 
=== Usages ===
=== Predecessor ===
v2674 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3229  <|@  <|@
f <@~|@floating>@ <|@
tid v3535 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j3037 
index: j3050 
=== Succesors ===
=== Usages ===
v3229 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3037 index: j3050  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3229 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3535 
value: v3246 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2665 
=== Usages ===
=== Predecessor ===
v2672 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3535 value: v3246 stateAfter: - lastLocationAccess: - #next: v2665  <|@  <|@
f <@~|@floating>@ <|@
tid j3055 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3050 
y: j2813 
=== Succesors ===
=== Usages ===
j3044 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3050 y: j2813  <|@  <|@
f <@*|@fixed>@ <|@
tid v2665 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2666 
=== Predecessor ===
v3229 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B290"
    from_bci -1
    to_bci -1
    predecessors "B289" "B288" 
    successors "B291" "B292" 
    xhandlers
    flags 
    probability 4592735179747575970
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3044 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2666 
values: j3055 j3050 
=== Succesors ===
=== Usages ===
v3534 j3049 j3038 v3071 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2666 values: j3055 j3050  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2666 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2665 v2677 
=== Succesors ===
next: v2680 
=== Usages ===
j3044 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2665 v2677 #next: v2680  <|@  <|@
f <@~|@floating>@ <|@
tid j3070 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j2465 
y: j2855 
=== Succesors ===
=== Usages ===
v3071 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2465 y: j2855  <|@  <|@
f <@~|@floating>@ <|@
tid v3071 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3070 
y: j3044 
=== Succesors ===
=== Usages ===
v2680 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3070 y: j3044  <|@  <|@
f <@*|@fixed>@ <|@
tid v2680 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3071 
=== Succesors ===
trueSuccessor: v2679 
falseSuccessor: v2678 
=== Usages ===
=== Predecessor ===
v2666 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3071 #trueSuccessor: v2679 #falseSuccessor: v2678  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B291"
    from_bci -1
    to_bci -1
    predecessors "B290" 
    successors "B293" 
    xhandlers
    flags 
    probability 4583727980492834978
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2679 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2683 
=== Usages ===
=== Predecessor ===
v2680 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2683  <|@  <|@
f <@*|@fixed>@ <|@
tid v2683 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2669 
=== Predecessor ===
v2679 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B292"
    from_bci -1
    to_bci -1
    predecessors "B290" 
    successors "B293" 
    xhandlers
    flags 
    probability 4590717489976473210
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2678 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3228 
=== Usages ===
=== Predecessor ===
v2680 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3228  <|@  <|@
f <@~|@floating>@ <|@
tid v3534 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j3037 
index: j3044 
=== Succesors ===
=== Usages ===
v3228 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3037 index: j3044  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3228 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3534 
value: v3245 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2668 
=== Usages ===
=== Predecessor ===
v2678 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3534 value: v3245 stateAfter: - lastLocationAccess: - #next: v2668  <|@  <|@
f <@~|@floating>@ <|@
tid j3049 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3044 
y: j2827 
=== Succesors ===
=== Usages ===
j3038 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3044 y: j2827  <|@  <|@
f <@*|@fixed>@ <|@
tid v2668 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2669 
=== Predecessor ===
v3228 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B293"
    from_bci -1
    to_bci -1
    predecessors "B292" "B291" 
    successors "B294" "B295" 
    xhandlers
    flags 
    probability 4592735179747575970
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3038 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2669 
values: j3049 j3044 
=== Succesors ===
=== Usages ===
v3533 v3074 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2669 values: j3049 j3044  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2669 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2668 v2683 
=== Succesors ===
next: v2686 
=== Usages ===
j3038 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2668 v2683 #next: v2686  <|@  <|@
f <@~|@floating>@ <|@
tid j3073 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j2465 
y: j1188 
=== Succesors ===
=== Usages ===
v3074 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2465 y: j1188  <|@  <|@
f <@~|@floating>@ <|@
tid v3074 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3073 
y: j3038 
=== Succesors ===
=== Usages ===
v2686 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3073 y: j3038  <|@  <|@
f <@*|@fixed>@ <|@
tid v2686 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3074 
=== Succesors ===
trueSuccessor: v2685 
falseSuccessor: v2684 
=== Usages ===
=== Predecessor ===
v2669 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3074 #trueSuccessor: v2685 #falseSuccessor: v2684  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B294"
    from_bci -1
    to_bci -1
    predecessors "B293" 
    successors "B298" 
    xhandlers
    flags 
    probability 4583727980492834978
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2685 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2689 
=== Usages ===
=== Predecessor ===
v2686 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2689  <|@  <|@
f <@*|@fixed>@ <|@
tid v2689 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2659 
=== Predecessor ===
v2685 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B295"
    from_bci -1
    to_bci -1
    predecessors "B293" 
    successors "B298" 
    xhandlers
    flags 
    probability 4590717489976473210
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2684 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3227 
=== Usages ===
=== Predecessor ===
v2686 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3227  <|@  <|@
f <@~|@floating>@ <|@
tid v3533 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j3037 
index: j3038 
=== Succesors ===
=== Usages ===
v3227 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3037 index: j3038  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3227 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3533 
value: a3244 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2671 
=== Usages ===
=== Predecessor ===
v2684 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3533 value: a3244 stateAfter: - lastLocationAccess: - #next: v2671  <|@  <|@
f <@*|@fixed>@ <|@
tid v2671 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2659 
=== Predecessor ===
v3227 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B296"
    from_bci -1
    to_bci -1
    predecessors "B285" 
    successors "B285" 
    xhandlers
    flags "lle" 
    loop_index 15
    loop_depth 1
    probability 4590717489976473210
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2652 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2651 
=== Usages ===
=== Predecessor ===
v2653 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2651  <|@  <|@
f <@*|@fixed>@ <|@
tid v2651 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v2647 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2652 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v2647  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B297"
    from_bci -1
    to_bci -1
    predecessors "B281" 
    successors "B298" 
    xhandlers
    flags 
    probability 4592735179747575970
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2640 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2658 
=== Usages ===
=== Predecessor ===
v2642 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2658  <|@  <|@
f <@*|@fixed>@ <|@
tid v2658 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2659 
=== Predecessor ===
v2640 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B298"
    from_bci -1
    to_bci -1
    predecessors "B297" "B295" "B294" 
    successors "B299" "B300" 
    xhandlers
    flags 
    probability 4597238779374946466
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2659 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2658 v2671 v2689 
=== Succesors ===
next: v2243 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2658 v2671 v2689 #next: v2243  <|@  <|@
f <@~|@floating>@ <|@
tid v2240 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:154) [bci: 1]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1132 
y: i13 
=== Succesors ===
=== Usages ===
v2243 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1132 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v2243 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:154) [bci: 1]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v2240 
=== Succesors ===
trueSuccessor: v2241 
falseSuccessor: v2242 
=== Usages ===
=== Predecessor ===
v2659 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2240 #trueSuccessor: v2241 #falseSuccessor: v2242  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B299"
    from_bci -1
    to_bci -1
    predecessors "B298" 
    successors "B303" 
    xhandlers
    flags 
    probability 4592735179747575970
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2241 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:155) [bci: 4]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2267 
=== Usages ===
=== Predecessor ===
v2243 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2267  <|@  <|@
f <@*|@fixed>@ <|@
tid v2267 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2266 
=== Predecessor ===
v2241 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B300"
    from_bci -1
    to_bci -1
    predecessors "B298" 
    successors "B301" 
    xhandlers
    flags 
    probability 4592735179747575970
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2242 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:157) [bci: 5]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2244 
=== Usages ===
=== Predecessor ===
v2243 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2244  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2244 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToFirstArrayElement(WriteBarrierSnippets.java:376) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:159) [bci: 20]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v3439 
=== Succesors ===
next: j2246 
=== Usages ===
j2245 
=== Predecessor ===
v2242 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v3439 #next: j2246  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2246 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:385) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v3439 
=== Succesors ===
next: v2254 
=== Usages ===
j2250 
=== Predecessor ===
j2244 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v3439 #next: v2254  <|@  <|@
f <@~|@floating>@ <|@
tid i2247 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: i32
=== Inputs ===
x: i1132 
y: i632 
=== Succesors ===
=== Usages ===
i2248 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1132 y: i632  <|@  <|@
f <@~|@floating>@ <|@
tid i2248 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i2247 
y: i912 
=== Succesors ===
=== Usages ===
j2249 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i2247 y: i912  <|@  <|@
f <@~|@floating>@ <|@
tid j2249 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 26]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
resultBits: 64
stamp: i64 [-2147483648 - 2147483644] ⇈fffffffffffffffc
=== Inputs ===
value: i2248 
=== Succesors ===
=== Usages ===
j2250 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2248  <|@  <|@
f <@~|@floating>@ <|@
tid j2250 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 27]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: i64
=== Inputs ===
x: j2246 
y: j2249 
=== Succesors ===
=== Usages ===
j2251 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2246 y: j2249  <|@  <|@
f <@~|@floating>@ <|@
tid j2251 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 34]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j2250 
y: i1852 
=== Succesors ===
=== Usages ===
j2252 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j2250 y: i1852  <|@  <|@
f <@~|@floating>@ <|@
tid j2245 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:159) [bci: 24]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j2244 
y: i1852 
=== Succesors ===
=== Usages ===
j2252 j2265 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j2244 y: i1852  <|@  <|@
f <@~|@floating>@ <|@
tid j2252 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:161) [bci: 41]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: i64 [-36028797018963967 - 36028797018963967]
=== Inputs ===
x: j2251 
y: j2245 
=== Succesors ===
=== Usages ===
j2253 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j2251 y: j2245  <|@  <|@
f <@~|@floating>@ <|@
tid j2253 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:161) [bci: 43]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: i64 [-36028797018963966 - 36028797018963968]
=== Inputs ===
x: j2252 
y: j1778 
=== Succesors ===
=== Usages ===
j2256 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2252 y: j1778  <|@  <|@
f <@*|@fixed>@ <|@
tid v2254 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2255 
=== Predecessor ===
j2246 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B301"
    from_bci -1
    to_bci -1
    predecessors "B300" "B318" 
    successors "B302" "B318" 
    xhandlers
    flags "llh" 
    loop_index 16
    loop_depth 1
    probability 4597238779374946466
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2256 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2255 
values: j2253 j2257 
=== Succesors ===
=== Usages ===
j2257 v2258 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2255 values: j2253 j2257  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2255 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 2.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v2254 
=== Succesors ===
next: v2261 
=== Usages ===
j2256 v2259 v2264 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v2254 #next: v2261  <|@  <|@
f <@~|@floating>@ <|@
tid v2258 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 55]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2256 
y: j1778 
=== Succesors ===
=== Usages ===
v2261 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2256 y: j1778  <|@  <|@
f <@*|@fixed>@ <|@
tid v2261 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 55]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v2258 
=== Succesors ===
trueSuccessor: v2259 
falseSuccessor: v2260 
=== Usages ===
=== Predecessor ===
v2255 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2258 #trueSuccessor: v2259 #falseSuccessor: v2260  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B302"
    from_bci -1
    to_bci -1
    predecessors "B301" 
    successors "B303" 
    xhandlers
    flags 
    probability 4592735179747575970
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2259 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:165) [bci: 76]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v2255 
=== Succesors ===
next: v2268 
=== Usages ===
=== Predecessor ===
v2261 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v2255 #next: v2268  <|@  <|@
f <@*|@fixed>@ <|@
tid v2268 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2266 
=== Predecessor ===
v2259 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B303"
    from_bci -1
    to_bci -1
    predecessors "B299" "B302" 
    successors "B304" "B305" 
    xhandlers
    flags 
    probability 4597238779374946466
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2266 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2267 v2268 
=== Succesors ===
next: a1642 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2267 v2268 #next: a1642  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1642 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a2211 
=== Succesors ===
next: v1072 
=== Usages ===
v2321 a1071 v3494 j2308 j2318 
=== Predecessor ===
v2266 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a2211 #next: v1072  <|@  <|@
f <@~|@floating>@ <|@
tid a1071 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:265) [bci: 41]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
op: Compress
stamp: n! -
=== Inputs ===
value: a1642 
=== Succesors ===
=== Usages ===
v1072 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1642  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1072 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: ArrayList.elementData
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:265) [bci: 41]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3430 
value: a1071 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j2270 
=== Usages ===
=== Predecessor ===
a1642 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3430 value: a1071 stateAfter: - lastLocationAccess: - #next: j2270  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2270 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 41]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v2274 
=== Usages ===
j2271 
=== Predecessor ===
v1072 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v2274  <|@  <|@
f <@~|@floating>@ <|@
tid j2271 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 41]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j2270 
y: i1852 
=== Succesors ===
=== Usages ===
v3491 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j2270 y: i1852  <|@  <|@
f <@~|@floating>@ <|@
tid v3491 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2271 
index: j1874 
=== Succesors ===
=== Usages ===
v2274 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2271 index: j1874  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2274 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 41]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3491 
value: i2033 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1087 
=== Usages ===
=== Predecessor ===
j2270 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3491 value: i2033 stateAfter: - lastLocationAccess: - #next: v1087  <|@  <|@
f <@*|@fixed>@ <|@
tid v1087 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 33]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:146) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1081 
=== Succesors ===
trueSuccessor: v1086 
falseSuccessor: v1082 
=== Usages ===
=== Predecessor ===
v2274 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1081 #trueSuccessor: v1086 #falseSuccessor: v1082  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B304"
    from_bci -1
    to_bci -1
    predecessors "B303" 
    successors "B309" 
    xhandlers
    flags 
    probability 4567311708340335519
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1086 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:146) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1085 
=== Usages ===
=== Predecessor ===
v1087 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1085  <|@  <|@
f <@*|@fixed>@ <|@
tid v1085 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:146) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1084 
=== Predecessor ===
v1086 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B305"
    from_bci -1
    to_bci -1
    predecessors "B303" 
    successors "B306" "B307" 
    xhandlers
    flags 
    probability 4597158071784102356
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1082 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 36]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:146) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1098 
=== Usages ===
=== Predecessor ===
v1087 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1098  <|@  <|@
f <@*|@fixed>@ <|@
tid v1098 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 77]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:146) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1131 
=== Succesors ===
trueSuccessor: v1097 
falseSuccessor: v1095 
=== Usages ===
=== Predecessor ===
v1082 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1131 #trueSuccessor: v1097 #falseSuccessor: v1095  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B306"
    from_bci -1
    to_bci -1
    predecessors "B305" 
    successors "B309" 
    xhandlers
    flags 
    probability 4567260055482195289
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1097 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:146) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1096 
=== Usages ===
=== Predecessor ===
v1098 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1096  <|@  <|@
f <@*|@fixed>@ <|@
tid v1096 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:146) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1084 
=== Predecessor ===
v1097 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B307"
    from_bci -1
    to_bci -1
    predecessors "B305" 
    successors "B308" "B310" 
    xhandlers
    flags 
    probability 4597078171269166687
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1095 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 80]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:146) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1104 
=== Usages ===
=== Predecessor ===
v1098 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1104  <|@  <|@
f <@~|@floating>@ <|@
tid i1099 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:146) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: i32
=== Inputs ===
x: i1132 
y: i808 
=== Succesors ===
=== Usages ===
v1100 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i1132 y: i808  <|@  <|@
f <@~|@floating>@ <|@
tid v1100 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:146) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1099 
y: i3398 
=== Succesors ===
=== Usages ===
v1104 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1099 y: i3398  <|@  <|@
f <@*|@fixed>@ <|@
tid v1104 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:146) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1100 
=== Succesors ===
trueSuccessor: v1103 
falseSuccessor: v1101 
=== Usages ===
=== Predecessor ===
v1095 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1100 #trueSuccessor: v1103 #falseSuccessor: v1101  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B308"
    from_bci -1
    to_bci -1
    predecessors "B307" 
    successors "B309" 
    xhandlers
    flags 
    probability 4567208919152636461
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1103 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:146) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1102 
=== Usages ===
=== Predecessor ===
v1104 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1102  <|@  <|@
f <@*|@fixed>@ <|@
tid v1102 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:146) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1084 
=== Predecessor ===
v1103 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B309"
    from_bci -1
    to_bci -1
    predecessors "B304" "B306" "B308" 
    successors 
    xhandlers
    flags 
    probability 4574320729851797906
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1084 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:146) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1085 v1096 v1102 
=== Succesors ===
next: v1105 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1085 v1096 v1102 #next: v1105  <|@  <|@
tid ?99 <|@
d <@d|@=== Debug Properties ===
bci: 22
code: ResolvedJavaMethodBytecode<ArrayList.ensureExplicitCapacity(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ArrayList.java
sourceLine: 239
stackSize: 0
=== Inputs ===
outerFrameState: ?70 
values: - - 
=== Succesors ===
=== Usages ===
?97 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?70 values: - -  <|@  <|@
tid ?97 <|@
d <@d|@=== Debug Properties ===
bci: 44
code: ResolvedJavaMethodBytecode<ArrayList.grow(int)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:265) [bci: 41]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
rethrowException: false
sourceFile: ArrayList.java
sourceLine: 266
stackSize: 0
=== Inputs ===
outerFrameState: ?99 
values: - - - - 
=== Succesors ===
=== Usages ===
v1105 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?99 values: - - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1105 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 0
nodeSourcePosition: at org.graalvm.compiler.nodes.DeoptimizeNode.deopt(DeoptimizationAction, DeoptimizationReason) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:263) [bci: 119]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:146) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
reason: RuntimeConstraint
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?97 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1084 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?97  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B310"
    from_bci -1
    to_bci -1
    predecessors "B307" 
    successors "B311" "B312" 
    xhandlers
    flags 
    probability 4596999069759380374
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1101 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:146) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2280 
=== Usages ===
=== Predecessor ===
v1104 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2280  <|@  <|@
f <@~|@floating>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.ArrayList.addAll(ArrayList.java:586) [bci: 45]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i808 
y: i13 
=== Succesors ===
=== Usages ===
i24 v2280 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i808 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v2280 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:205) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v22 
=== Succesors ===
trueSuccessor: v2278 
falseSuccessor: v2279 
=== Usages ===
=== Predecessor ===
v1101 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v22 #trueSuccessor: v2278 #falseSuccessor: v2279  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B311"
    from_bci -1
    to_bci -1
    predecessors "B310" 
    successors "B317" 
    xhandlers
    flags 
    probability 4581922060983499895
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2278 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:233) [bci: 217]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2326 
=== Usages ===
=== Predecessor ===
v2280 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2326  <|@  <|@
f <@*|@fixed>@ <|@
tid v2326 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2325 
=== Predecessor ===
v2278 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B312"
    from_bci -1
    to_bci -1
    predecessors "B310" 
    successors "B313" "B314" 
    xhandlers
    flags 
    probability 4596215964812495879
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2279 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:206) [bci: 19]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3411 
=== Usages ===
=== Predecessor ===
v2280 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3411  <|@  <|@
f <@~|@floating>@ <|@
tid v3555 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a1174 
index: - 
=== Succesors ===
=== Usages ===
v3411 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1174 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3411 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHub(HotSpotReplacementsUtil.java:737) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:208) [bci: 33]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v3555 
=== Succesors ===
next: v3412 
=== Usages ===
v2322 
=== Predecessor ===
v2279 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3555 #next: v3412  <|@  <|@
f <@~|@floating>@ <|@
tid v3494 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a1642 
index: - 
=== Succesors ===
=== Usages ===
v3412 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1642 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3412 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHub(HotSpotReplacementsUtil.java:737) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:209) [bci: 40]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v3494 
=== Succesors ===
next: v2285 
=== Usages ===
v3492 v2322 
=== Predecessor ===
v3411 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3494 #next: v2285  <|@  <|@
f <@~|@floating>@ <|@
tid v2322 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:210) [bci: 52]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v3411 
y: v3412 
=== Succesors ===
=== Usages ===
v2285 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: v3411 y: v3412  <|@  <|@
f <@~|@floating>@ <|@
tid j2309 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopyObjectKillsAny(ArrayCopyCallNode.java:199) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:214) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i3398 
=== Succesors ===
=== Usages ===
v3498 v3496 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i3398  <|@  <|@
f <@~|@floating>@ <|@
tid j3347 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopyObjectKillsAny(ArrayCopyCallNode.java:199) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:214) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i808 
=== Succesors ===
=== Usages ===
v2314 i2320 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i808  <|@  <|@
f <@*|@fixed>@ <|@
tid v2285 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:210) [bci: 63]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
trueSuccessorProbability: 0.6
=== Inputs ===
condition: v2322 
=== Succesors ===
trueSuccessor: v2284 
falseSuccessor: v2283 
=== Usages ===
=== Predecessor ===
v3412 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2322 #trueSuccessor: v2284 #falseSuccessor: v2283  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B313"
    from_bci -1
    to_bci -1
    predecessors "B312" 
    successors "B317" 
    xhandlers
    flags 
    probability 4593121954089517474
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2284 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:212) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2303 
=== Usages ===
=== Predecessor ===
v2285 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2303  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2303 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopyObjectKillsAny(ArrayCopyCallNode.java:199) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:214) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: i64
=== Inputs ===
object: a1174 
=== Succesors ===
next: j2308 
=== Usages ===
v3495 
=== Predecessor ===
v2284 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a1174 #next: j2308  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2308 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopyObjectKillsAny(ArrayCopyCallNode.java:199) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:214) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: i64
=== Inputs ===
object: a1642 
=== Succesors ===
next: v2314 
=== Usages ===
v3496 
=== Predecessor ===
j2303 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a1642 #next: v2314  <|@  <|@
f <@~|@floating>@ <|@
tid v3495 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j2303 
index: - 
=== Succesors ===
=== Usages ===
v2314 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2303 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v3496 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: j2308 
index: j2309 
=== Succesors ===
=== Usages ===
v2314 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2308 index: j2309  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2314 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: ObjectArraycopyKillAny(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopyObjectKillsAny(ArrayCopyCallNode.java:199) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:214) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v3495 v3496 j3347 
=== Succesors ===
next: v2327 
=== Usages ===
=== Predecessor ===
j2308 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v3495 v3496 j3347 #next: v2327  <|@  <|@
f <@*|@fixed>@ <|@
tid v2327 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2325 
=== Predecessor ===
v2314 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B314"
    from_bci -1
    to_bci -1
    predecessors "B312" 
    successors "B315" "B316" 
    xhandlers
    flags 
    probability 4590302776280733292
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2283 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:216) [bci: 98]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3413 
=== Usages ===
=== Predecessor ===
v2285 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3413  <|@  <|@
f <@~|@floating>@ <|@
tid v3492 <|@
d <@d|@=== Debug Properties ===
displacement: 232
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v3412 
=== Succesors ===
=== Usages ===
v3413 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v3412  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3413 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ObjArrayKlass::_element_klass:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:216) [bci: 109]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
nullCheck: false
stamp: Klass*
=== Inputs ===
stateBefore: - 
guard: - 
address: v3492 
=== Succesors ===
next: i2315 
=== Usages ===
v3493 i2320 
=== Predecessor ===
v2283 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3492 #next: i2315  <|@  <|@
f <@~|@floating>@ <|@
tid v3493 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: v3413 
index: - 
=== Succesors ===
=== Usages ===
i2315 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v3413 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2315 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: Klass::_super_check_offset:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:217) [bci: 125]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v3493 
=== Succesors ===
next: j2316 
=== Usages ===
j2288 
=== Predecessor ===
v3413 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3493 #next: j2316  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2316 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.CheckcastArrayCopyCallNode.checkcastArraycopy(Object, int, Object, int, int, Word, Object, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:222) [bci: 167]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: i64
=== Inputs ===
object: a1174 
=== Succesors ===
next: j2318 
=== Usages ===
v3497 
=== Predecessor ===
i2315 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a1174 #next: j2318  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2318 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.CheckcastArrayCopyCallNode.checkcastArraycopy(Object, int, Object, int, int, Word, Object, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:222) [bci: 167]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: i64
=== Inputs ===
object: a1642 
=== Succesors ===
next: i2320 
=== Usages ===
v3498 
=== Predecessor ===
j2316 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a1642 #next: i2320  <|@  <|@
f <@~|@floating>@ <|@
tid v3497 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j2316 
index: - 
=== Succesors ===
=== Usages ===
i2320 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2316 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v3498 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: j2318 
index: j2309 
=== Succesors ===
=== Usages ===
i2320 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2318 index: j2309  <|@  <|@
f <@~|@floating>@ <|@
tid j2288 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:217) [bci: 128]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i2315 
=== Succesors ===
=== Usages ===
i2320 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2315  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2320 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: ObjectCheckcast(Word,Word,Word,Word,Word)int
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.CheckcastArrayCopyCallNode.checkcastArraycopy(Object, int, Object, int, int, Word, Object, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:222) [bci: 167]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: i32
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v3497 v3498 j3347 j2288 v3413 
=== Succesors ===
next: v2292 
=== Usages ===
v2289 i2293 
=== Predecessor ===
j2318 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v3497 v3498 j3347 j2288 v3413 #next: v2292  <|@  <|@
f <@~|@floating>@ <|@
tid v2289 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:223) [bci: 177]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2320 
y: i13 
=== Succesors ===
=== Usages ===
v2292 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2320 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v2292 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:223) [bci: 188]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
trueSuccessorProbability: 0.99
=== Inputs ===
condition: v2289 
=== Succesors ===
trueSuccessor: v2291 
falseSuccessor: v2290 
=== Usages ===
=== Predecessor ===
i2320 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2289 #trueSuccessor: v2291 #falseSuccessor: v2290  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B315"
    from_bci -1
    to_bci -1
    predecessors "B314" 
    successors "B317" 
    xhandlers
    flags 
    probability 4590246392724557608
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2291 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:233) [bci: 217]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2328 
=== Usages ===
=== Predecessor ===
v2292 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2328  <|@  <|@
f <@*|@fixed>@ <|@
tid v2328 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2325 
=== Predecessor ===
v2291 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B316"
    from_bci -1
    to_bci -1
    predecessors "B314" 
    successors "B317" 
    xhandlers
    flags 
    probability 4560356318462058968
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2290 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:228) [bci: 191]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2333 
=== Usages ===
=== Predecessor ===
v2292 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2333  <|@  <|@
f <@~|@floating>@ <|@
tid i2293 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NotNode$$Lambda$192/1797157237@4fdb7f79
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:228) [bci: 194]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: i32
=== Inputs ===
value: i2320 
=== Succesors ===
=== Usages ===
v2321 i2295 i2296 
=== Predecessor ===
- >@ <|@
instruction <@Not|@org.graalvm.compiler.nodes.calc.NotNode>@ value: i2320  <|@  <|@
f <@~|@floating>@ <|@
tid i2295 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:229) [bci: 208]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: i32
=== Inputs ===
x: i2293 
y: i3398 
=== Succesors ===
=== Usages ===
v2321 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2293 y: i3398  <|@  <|@
f <@~|@floating>@ <|@
tid i2296 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:229) [bci: 213]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: i32
=== Inputs ===
x: i808 
y: i2293 
=== Succesors ===
=== Usages ===
v2321 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i808 y: i2293  <|@  <|@
tid v2321 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:229) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@6ae90306
stamp: void
targetMethod: HotSpotMethod<System.arraycopy(Object, int, Object, int, int)>
=== Inputs ===
arguments: a1174 i2293 a1642 i2295 i2296 
=== Succesors ===
=== Usages ===
v2333 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1174 i2293 a1642 i2295 i2296  <|@  <|@
tid ?1519 <|@
d <@d|@=== Debug Properties ===
bci: 31
code: ResolvedJavaMethodBytecode<ArrayList.addAll(Collection)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: ArrayList.java
sourceLine: 584
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - i808 
=== Succesors ===
=== Usages ===
v2333 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - i808  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2333 <|@
d <@d|@=== Debug Properties ===
bci: 31
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
polymorphic: false
stamp: void
targetMethod: Direct#System.arraycopy
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v2321 
stateDuring: ?1519 
=== Succesors ===
next: v2329 
=== Usages ===
=== Predecessor ===
v2290 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v2321 stateDuring: ?1519 #next: v2329  <|@  <|@
f <@*|@fixed>@ <|@
tid v2329 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2325 
=== Predecessor ===
v2333 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B317"
    from_bci -1
    to_bci -1
    predecessors "B311" "B313" "B315" "B316" 
    successors 
    xhandlers
    flags 
    probability 4596999069759380374
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2325 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2326 v2327 v2328 v2329 
=== Succesors ===
next: i3414 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2326 v2327 v2328 v2329 #next: i3414  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3414 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList.size
nodeSourcePosition: at java.util.ArrayList.addAll(ArrayList.java:585) [bci: 36]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v3429 
=== Succesors ===
next: v1116 
=== Usages ===
i19 
=== Predecessor ===
v2325 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3429 #next: v1116  <|@  <|@
f <@~|@floating>@ <|@
tid i19 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.ArrayList.addAll(ArrayList.java:585) [bci: 40]
stamp: i32
=== Inputs ===
x: i808 
y: i3414 
=== Succesors ===
=== Usages ===
v1116 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i808 y: i3414  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1116 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ArrayList.size
nodeSourcePosition: at java.util.ArrayList.addAll(ArrayList.java:585) [bci: 41]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3429 
value: i19 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v25 
=== Usages ===
=== Predecessor ===
i3414 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3429 value: i19 stateAfter: - lastLocationAccess: - #next: v25  <|@  <|@
f <@~|@floating>@ <|@
tid i24 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.addAll(ArrayList.java:586) [bci: 45]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v22 
trueValue: i13 
falseValue: i23 
=== Succesors ===
=== Usages ===
v25 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v22 trueValue: i13 falseValue: i23  <|@  <|@
f <@*|@fixed>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.addAll(ArrayList.java:586) [bci: 53]
stamp: void
=== Inputs ===
result: i24 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1116 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i24 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B318"
    from_bci -1
    to_bci -1
    predecessors "B301" 
    successors "B301" 
    xhandlers
    flags "lle" 
    loop_index 16
    loop_depth 1
    probability 4592735179747575970
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2260 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 58]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2263 
=== Usages ===
=== Predecessor ===
v2261 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2263  <|@  <|@
f <@~|@floating>@ <|@
tid j2257 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 50]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: i64
=== Inputs ===
x: j2256 
y: j1188 
=== Succesors ===
=== Usages ===
j2256 j2262 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2256 y: j1188  <|@  <|@
f <@~|@floating>@ <|@
tid j2265 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 62]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: i64 [4682670080 - 36028801701634047] ⇈00ffffffffffffff
=== Inputs ===
x: j2245 
y: j1874 
=== Succesors ===
=== Usages ===
j2262 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2245 y: j1874  <|@  <|@
f <@~|@floating>@ <|@
tid j2262 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 65]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: i64
=== Inputs ===
x: j2257 
y: j2265 
=== Succesors ===
=== Usages ===
v2263 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2257 y: j2265  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2263 <|@
d <@d|@=== Debug Properties ===
kind: boolean
nodeSourcePosition: at org.graalvm.compiler.replacements.nodes.DirectStoreNode.storeBoolean(long, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 70]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: void
=== Inputs ===
address: j2262 
value: i13 
=== Succesors ===
next: v2264 
=== Usages ===
=== Predecessor ===
v2260 >@ <|@
instruction <@DirectStore|@org.graalvm.compiler.replacements.nodes.DirectStoreNode>@ address: j2262 value: i13 #next: v2264  <|@  <|@
f <@*|@fixed>@ <|@
tid v2264 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: void
=== Inputs ===
loopBegin: v2255 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2263 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v2255  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B319"
    from_bci -1
    to_bci -1
    predecessors "B270" 
    successors "B270" 
    xhandlers
    flags "lle" 
    loop_index 14
    loop_depth 1
    probability 4590717489976473210
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2598 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2597 
=== Usages ===
=== Predecessor ===
v2599 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2597  <|@  <|@
f <@*|@fixed>@ <|@
tid v2597 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v2593 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2598 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v2593  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B320"
    from_bci -1
    to_bci -1
    predecessors "B259" 
    successors "B321" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1398 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:262) [bci: 24]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1743 
=== Usages ===
=== Predecessor ===
v1399 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1743  <|@  <|@
f <@~|@floating>@ <|@
tid i1744 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -273427
stableDimension: 0
stamp: i32 [-273427] ⇊00000000fffbd3ed ⇈00000000fffbd3ed
stampKind: i32
value: int[-273427|0xfffffffffffbd3ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1745 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1743 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1742 
=== Predecessor ===
v1398 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B321"
    from_bci -1
    to_bci -1
    predecessors "B320" "B246" "B261" "B250" "B248" 
    successors 
    xhandlers
    flags 
    probability 4582300274885977192
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1745 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-393313 - -270433] ⇊00000000fff9d38d ⇈00000000fffbffff
valueDescription: i32
=== Inputs ===
merge: v1742 
values: i1744 i1749 i1751 i1749 i1749 
=== Succesors ===
=== Usages ===
v1747 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1742 values: i1744 i1749 i1751 i1749 i1749  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1742 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1743 v1748 v1750 v1760 v1761 
=== Succesors ===
next: v1747 
=== Usages ===
i1745 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1743 v1748 v1750 v1760 v1761 #next: v1747  <|@  <|@
f <@*|@fixed>@ <|@
tid v1747 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?57 
actionAndReason: i1745 
speculation: a1548 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1742 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?57 actionAndReason: i1745 speculation: a1548  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B47" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v3359 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v3359  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/ArrayList;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 ?6 v3429 v3431 ?34 ?806 ?57 ?1519 ?750 ?241 ?1518 v3430 ?1516 j2270 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a -
uncheckedStamp: a Ljava/util/Collection;
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v3418 ?791 v1005 v3443 v3415 v3419 v3416 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<ArrayList.addAll(Collection)>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: ArrayList.java
sourceLine: 581
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - - 
=== Succesors ===
=== Usages ===
v1691 a2058 a1904 a1807 v3359 v3552 i3369 v3553 i3375 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - -  <|@  <|@
f <@~|@floating>@ <|@
tid v3443 <|@
result [v1|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v3359 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3359 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v3443 
=== Succesors ===
next: v125 
=== Usages ===
v2339 v2335 v2337 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v3443 #next: v125  <|@  <|@
f <@~|@floating>@ <|@
tid v2334 <|@
result meta{HotSpotType<Ljava/util/ArrayList;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
rawvalue: meta{HotSpotType<Ljava/util/ArrayList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/ArrayList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2335 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2335 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v3359 
y: v2334 
=== Succesors ===
=== Usages ===
v125 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v3359 y: v2334  <|@  <|@
f <@~|@floating>@ <|@
tid a1548 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:178) [bci: 41]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1747 ?6 a1690 a1690 a1690 a1690 a1690 a1690 a1690 a1690 a1690 a1690 v1757 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2033 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 44]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2032 v2274 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i23 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList.addAll(ArrayList.java:586) [bci: 45]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i24 i55 v61 i76 v90 v1275 i233 i475 i680 i693 i748 i761 v832 v1262 i3346 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1874 <|@
result v3|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:158) [bci: 12]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1875 j1960 j1993 j2023 v3464 j2114 j2265 v3491 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i632 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.AbstractList$Itr.<init>(AbstractList.java:341) [bci: 15]
at java.util.AbstractList$Itr.<init>(AbstractList.java:330) [bci: 2]
at java.util.AbstractList$ListItr.<init>(AbstractList.java:391) [bci: 8]
at java.util.AbstractList.listIterator(AbstractList.java:327) [bci: 11]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i655 i718 i780 i1856 i2247 i2096 i2005 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1852 <|@
result int[9|0x9] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:157) [bci: 8]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1854 j1860 j1940 j1946 j1973 j1979 j2003 j2009 j2029 j2094 j2100 j2245 j2251 j2271 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a3244 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: n - NULL
stampKind: n -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v3205 v3227 v3239 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v3245 <|@
result v4|V64_DWORD[..] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL>
stampKind: <n -,n ->
value: SIMD<null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v3207 v3228 v3240 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v3246 <|@
result v5|V128_DWORD[....] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null,null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL,n - NULL,n - NULL>
stampKind: <n -,n -,n -,n ->
value: SIMD<null,null,null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v3209 v3229 v3241 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v3243 <|@
result v6|V256_DWORD[........] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null,null,null,null,null,null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL>
stampKind: <n -,n -,n -,n -,n -,n -,n -,n ->
value: SIMD<null,null,null,null,null,null,null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v3242 v3230 v3210 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1188 <|@
result long[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1189 j1239 j1866 j1952 j1985 j2015 j2106 j2257 j3031 j3073 j3124 j3166 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2827 <|@
result long[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2828 j2881 j2921 j2957 j3003 j3049 j3096 j3142 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2855 <|@
result long[-2|0xfffffffffffffffe] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2856 j2978 j3028 j3070 j3121 j3163 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2813 <|@
result long[4|0x4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2836 j2889 j2927 j2963 j3011 j3055 j3104 j3148 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2851 <|@
result long[-4|0xfffffffffffffffc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2852 j2975 j3025 j3067 j3118 j3160 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1770 <|@
result long[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2933 j2897 j3154 j3112 j3061 j3019 j2969 j2844 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2845 <|@
result long[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2846 j2970 j3020 j3062 j3113 j3155 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1818 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v3063 j3056 j3050 j3105 v3156 j2829 j2837 v2847 j3149 j2882 j2890 j3143 j2922 j2928 j3097 j2958 j2964 v2971 v3114 j3004 j3012 v3021 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1778 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1837 j1862 v1867 v1924 j1948 v1953 j1981 v1986 j2011 v2016 v2078 j2102 v2107 v2229 j2253 v2258 v2585 v2693 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i912 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2097 i2248 i1791 i1857 i1881 i2036 i2192 i2006 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1814 <|@
result int[23|0x17] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1815 i1911 i2065 i2214 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1792 <|@
result int[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1793 i1882 i2037 i2193 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i13 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 21]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
a2207 v22 i24 v79 v1571 v1524 v1267 v188 i216 v300 v573 v1272 i670 i738 v2131 v1081 v2112 a1807 v1848 v1872 a1904 v2289 v1958 v2263 v1991 v2240 v2021 a2058 i3346 v3353 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v3416 <|@
result [v1|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i3361 i3372 i3389 i3392 i3394 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v3415 <|@
result [v1|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a3360 i3371 i3390 i3393 a3395 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v125 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList; target_method=toArray target_method_class=Ljava/util/ArrayList; position=at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
trueSuccessorProbability: 0.7101534901468434
=== Inputs ===
condition: v2335 
=== Succesors ===
trueSuccessor: v118 
falseSuccessor: v124 
=== Usages ===
=== Predecessor ===
v3359 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2335 #trueSuccessor: v118 #falseSuccessor: v124  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@25350e89 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.addAll(ArrayList.java:581) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v2|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction v4|V64_DWORD[..] = L oc: SIMD<null,null> <|@ <|@
      nr   -1  <|@ instruction v5|V128_DWORD[....] = L oc: SIMD<null,null,null,null> <|@ <|@
      nr   -1  <|@ instruction v6|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null> <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7101534901468434 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4604571713532478778
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList; target_method=toArray target_method_class=Ljava/util/ArrayList; position=at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: a3360 
=== Usages ===
=== Predecessor ===
v125 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a3360  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3360 <|@
result v7|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList.elementData
nodeSourcePosition: at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 1]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v3415 
=== Succesors ===
next: v3552 
=== Usages ===
v3444 v3552 v3417 v3435 
=== Predecessor ===
v118 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3415 #next: v3552  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3552 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
object: a3360 
=== Succesors ===
next: i3361 
=== Usages ===
=== Predecessor ===
a3360 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: a3360 #next: i3361  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3361 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList.size
nodeSourcePosition: at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 5]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v3416 
=== Succesors ===
next: v1577 
=== Usages ===
j2467 i808 v1571 v1587 i1618 a1807 v1836 i1856 v1848 i1791 
=== Predecessor ===
v3552 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3416 #next: v1577  <|@  <|@
f <@~|@floating>@ <|@
tid v1571 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 22]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:171) [bci: 3]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3361 
y: i13 
=== Succesors ===
=== Usages ===
v1577 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3361 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v1577 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 33]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:171) [bci: 3]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1571 
=== Succesors ===
trueSuccessor: v1576 
falseSuccessor: v1572 
=== Usages ===
=== Predecessor ===
i3361 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1571 #trueSuccessor: v1576 #falseSuccessor: v1572  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[.] = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.addAll(ArrayList.java:581) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v7|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOV [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v8|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B237" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1576 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:187) [bci: 55]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:171) [bci: 3]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1721 
=== Usages ===
=== Predecessor ===
v1577 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1721  <|@  <|@
f <@~|@floating>@ <|@
tid i1722 <|@
result int[-405345|0xfffffffffff9d09f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -405345
stableDimension: 0
stamp: i32 [-405345] ⇊00000000fff9d09f ⇈00000000fff9d09f
stampKind: i32
value: int[-405345|0xfffffffffff9d09f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1689 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1721 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1686 
=== Predecessor ===
v1576 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-405345|0xfffffffffff9d09f], Object[null]] destination: B2 -> B237 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4604571713532478778
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1572 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 36]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:171) [bci: 3]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1794 
=== Usages ===
=== Predecessor ===
v1577 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1794  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1794 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1833 
=== Usages ===
v3445 v3446 
=== Predecessor ===
v1572 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1833  <|@  <|@
f <@~|@floating>@ <|@
tid v3445 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1794 
index: - 
=== Succesors ===
=== Usages ===
j1833 v1835 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1794 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1833 <|@
result v9|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3445 
=== Succesors ===
next: j1834 
=== Usages ===
j1798 v3447 v3448 a1806 v3453 v3449 v3450 v3451 v3452 
=== Predecessor ===
j1794 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3445 #next: j1834  <|@  <|@
f <@~|@floating>@ <|@
tid v3446 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1794 
index: - 
=== Succesors ===
=== Usages ===
j1834 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1794 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1834 <|@
result v10|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3446 
=== Succesors ===
next: v3362 
=== Usages ===
v1799 
=== Predecessor ===
j1833 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3446 #next: v3362  <|@  <|@
f <@~|@floating>@ <|@
tid v3444 <|@
result [v7|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3360 
=== Succesors ===
=== Usages ===
v3362 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3360  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3362 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.ClassGetHubNode.readClass(Class) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.getComponentType(HotSpotClassSubstitutions.java:120) [bci: 1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 6]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v3444 
=== Succesors ===
next: v1802 
=== Usages ===
v1776 v1840 
=== Predecessor ===
j1834 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3444 #next: v1802  <|@  <|@
f <@~|@floating>@ <|@
tid i1791 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i3361 
y: i912 
=== Succesors ===
=== Usages ===
i1815 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i3361 y: i912  <|@  <|@
f <@~|@floating>@ <|@
tid i1815 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i32 [-2147483645 - 2147483647] ⇊0000000000000003
=== Inputs ===
x: i1791 
y: i1814 
=== Succesors ===
=== Usages ===
i1793 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1791 y: i1814  <|@  <|@
f <@~|@floating>@ <|@
tid i1793 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i1815 
y: i1792 
=== Succesors ===
=== Usages ===
j1797 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i1815 y: i1792  <|@  <|@
f <@~|@floating>@ <|@
tid j1797 <|@
result v15|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i1793 
=== Succesors ===
=== Usages ===
j1798 v3449 v3450 v3451 v3452 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1793  <|@  <|@
f <@~|@floating>@ <|@
tid j1798 <|@
result v16|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i64
=== Inputs ===
x: j1797 
y: j1833 
=== Succesors ===
=== Usages ===
v1799 v1835 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1797 y: j1833  <|@  <|@
f <@~|@floating>@ <|@
tid v1799 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1834 
y: j1798 
=== Succesors ===
=== Usages ===
v1802 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1834 y: j1798  <|@  <|@
f <@*|@fixed>@ <|@
tid v1802 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1799 
=== Succesors ===
trueSuccessor: v1800 
falseSuccessor: v1801 
=== Usages ===
=== Predecessor ===
v3362 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1799 #trueSuccessor: v1800 #falseSuccessor: v1801  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV [v7|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = SHL v8|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = LEA [v12|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = AND v13|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOVSXD v14|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = ADD (x: v15|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v16|QWORD, y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4574837534457301975
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1800 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1807 
=== Usages ===
=== Predecessor ===
v1802 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1807  <|@  <|@
f <@~|@floating>@ <|@
tid v1776 <|@
result v17|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.ClassGetHubNode.readClass(Class) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.getComponentType(HotSpotClassSubstitutions.java:120) [bci: 1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 6]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v3362 
=== Succesors ===
=== Usages ===
a1807 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v3362  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1807 <|@
result v18|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v1776 i3361 i13 
=== Succesors ===
next: v1810 
=== Usages ===
a1811 
=== Predecessor ===
v1800 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v1776 i3361 i13 #next: v1810  <|@  <|@
f <@*|@fixed>@ <|@
tid v1810 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1809 
=== Predecessor ===
a1807 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = UNCOMPRESSPOINTER (input: v11|DWORD, ~baseRegister: -) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@eef3a58 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v17|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.addAll(ArrayList.java:581) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v18|QWORD[.]] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4604507748592606754
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1801 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1835 
=== Usages ===
=== Predecessor ===
v1802 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1835  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1835 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3445 
value: j1798 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1820 
=== Usages ===
=== Predecessor ===
v1801 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3445 value: j1798 stateAfter: - lastLocationAccess: - #next: v1820  <|@  <|@
f <@~|@floating>@ <|@
tid v3449 <|@
result [v15|QWORD + v9|QWORD * 1 + 192] <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j1797 
index: j1833 
=== Succesors ===
=== Usages ===
v1820 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1797 index: j1833  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1820 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
address: v3449 
=== Succesors ===
next: v1823 
=== Usages ===
=== Predecessor ===
v1835 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3449 #next: v1823  <|@  <|@
f <@~|@floating>@ <|@
tid v3450 <|@
result [v15|QWORD + v9|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j1797 
index: j1833 
=== Succesors ===
=== Usages ===
v1823 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1797 index: j1833  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1823 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
address: v3450 
=== Succesors ===
next: v1826 
=== Usages ===
=== Predecessor ===
v1820 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3450 #next: v1826  <|@  <|@
f <@~|@floating>@ <|@
tid v3451 <|@
result [v15|QWORD + v9|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j1797 
index: j1833 
=== Succesors ===
=== Usages ===
v1826 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1797 index: j1833  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1826 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
address: v3451 
=== Succesors ===
next: v1829 
=== Usages ===
=== Predecessor ===
v1823 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3451 #next: v1829  <|@  <|@
f <@~|@floating>@ <|@
tid v3452 <|@
result [v15|QWORD + v9|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j1797 
index: j1833 
=== Succesors ===
=== Usages ===
v1829 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1797 index: j1833  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1829 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
address: v3452 
=== Succesors ===
next: v1836 
=== Usages ===
=== Predecessor ===
v1826 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3452 #next: v1836  <|@  <|@
f <@~|@floating>@ <|@
tid v3447 <|@
result [v9|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1833 
index: - 
=== Succesors ===
=== Usages ===
v1836 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1833 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1836 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3447 
value: i3361 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1837 
=== Usages ===
=== Predecessor ===
v1829 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3447 value: i3361 stateAfter: - lastLocationAccess: - #next: v1837  <|@  <|@
f <@~|@floating>@ <|@
tid v3448 <|@
result [v9|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1833 
index: - 
=== Succesors ===
=== Usages ===
v1837 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1833 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1837 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3448 
value: j1778 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1840 
=== Usages ===
=== Predecessor ===
v1836 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3448 value: j1778 stateAfter: - lastLocationAccess: - #next: v1840  <|@  <|@
f <@~|@floating>@ <|@
tid v3453 <|@
result [v9|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1833 
index: - 
=== Succesors ===
=== Usages ===
v1840 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1833 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1840 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3453 
value: v3362 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1805 
=== Usages ===
=== Predecessor ===
v1837 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3453 value: v3362 stateAfter: - lastLocationAccess: - #next: v1805  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1805 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1806 
=== Usages ===
=== Predecessor ===
v1840 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a1806  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1806 <|@
result v19|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j1833 
=== Succesors ===
next: v1808 
=== Usages ===
a1811 
=== Predecessor ===
v1805 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1833 #next: v1808  <|@  <|@
f <@*|@fixed>@ <|@
tid v1808 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1809 
=== Predecessor ===
a1806 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v16|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v15|QWORD + v9|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v15|QWORD + v9|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v15|QWORD + v9|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v15|QWORD + v9|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v9|QWORD + 12], y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v9|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v9|QWORD + 8], y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = MOVE v9|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v19|QWORD[.]] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4604571713532478778
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a1811 <|@
result v20|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v1809 
values: a1806 a1807 
=== Succesors ===
=== Usages ===
v3500 a1646 v3440 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1809 values: a1806 a1807  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1809 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1808 v1810 
=== Succesors ===
next: v3077 
=== Usages ===
a1811 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1808 v1810 #next: v3077  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3077 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: i3363 
=== Usages ===
j3078 j3080 
=== Predecessor ===
v1809 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: i3363  <|@  <|@
f <@~|@floating>@ <|@
tid v3417 <|@
result [v7|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3360 
=== Succesors ===
=== Usages ===
i3363 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3360  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3363 <|@
result v21|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 2]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v3417 
=== Succesors ===
next: v2696 
=== Usages ===
i1618 v1587 
=== Predecessor ===
v3077 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3417 #next: v2696  <|@  <|@
f <@~|@floating>@ <|@
tid v1587 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 4]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:174) [bci: 19]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3363 
y: i3361 
=== Succesors ===
=== Usages ===
i1618 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3363 y: i3361  <|@  <|@
f <@~|@floating>@ <|@
tid i1618 <|@
result v22|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v1587 
trueValue: i3363 
falseValue: i3361 
=== Succesors ===
=== Usages ===
j2468 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v1587 trueValue: i3363 falseValue: i3361  <|@  <|@
f <@~|@floating>@ <|@
tid j2468 <|@
result v23|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1618 
=== Succesors ===
=== Usages ===
j3124 v3500 j2472 v2693 v2804 j3113 j3118 j3121 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1618  <|@  <|@
f <@~|@floating>@ <|@
tid v2693 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2468 
y: j1778 
=== Succesors ===
=== Usages ===
v2696 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2468 y: j1778  <|@  <|@
f <@~|@floating>@ <|@
tid v3440 <|@
result [v20|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1811 
index: - 
=== Succesors ===
=== Usages ===
j3080 j1855 j1853 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1811 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v2696 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v2693 
=== Succesors ===
trueSuccessor: v2694 
falseSuccessor: v2695 
=== Usages ===
=== Predecessor ===
i3363 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2693 #trueSuccessor: v2694 #falseSuccessor: v2695  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v20|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOV [v7|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v8|DWORD, y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = CMOVE (falseValue: v8|DWORD, ~trueValue: v21|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = MOVSXD v22|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v23|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B22" 
    xhandlers
    flags 
    probability 4600068113905108282
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2694 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2712 
=== Usages ===
=== Predecessor ===
v2696 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2712  <|@  <|@
f <@*|@fixed>@ <|@
tid v2712 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2713 
=== Predecessor ===
v2694 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B7 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4600068113905108282
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2695 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2699 
=== Usages ===
=== Predecessor ===
v2696 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2699  <|@  <|@
f <@~|@floating>@ <|@
tid j3113 <|@
result v24|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j2468 
y: j2845 
=== Succesors ===
=== Usages ===
v3114 v3116 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2468 y: j2845  <|@  <|@
f <@~|@floating>@ <|@
tid v3114 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3113 
y: j1818 
=== Succesors ===
=== Usages ===
v2699 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3113 y: j1818  <|@  <|@
f <@~|@floating>@ <|@
tid j3080 <|@
result v25|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v3077 
address: v3440 
=== Succesors ===
=== Usages ===
v3537 v3539 v3541 v3543 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v3077 address: v3440  <|@  <|@
f <@~|@floating>@ <|@
tid v3435 <|@
result [v7|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3360 
=== Succesors ===
=== Usages ===
j3078 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3360  <|@  <|@
f <@~|@floating>@ <|@
tid j3078 <|@
result v26|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v3077 
address: v3435 
=== Succesors ===
=== Usages ===
v3538 v3540 v3542 v3544 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v3077 address: v3435  <|@  <|@
f <@*|@fixed>@ <|@
tid v2699 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v3114 
=== Succesors ===
trueSuccessor: v2697 
falseSuccessor: v2698 
=== Usages ===
=== Predecessor ===
v2695 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3114 #trueSuccessor: v2697 #falseSuccessor: v2698  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = LEA [v23|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[.] = LEA [v20|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[*] = LEA [v7|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v24|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    probability 4598468990408307692
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2697 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2708 
=== Usages ===
=== Predecessor ===
v2699 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2708  <|@  <|@
f <@*|@fixed>@ <|@
tid v2708 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2709 
=== Predecessor ===
v2697 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B9 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4591060914650367290
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2698 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2700 
=== Usages ===
=== Predecessor ===
v2699 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2700  <|@  <|@
f <@*|@fixed>@ <|@
tid v2700 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2701 
=== Predecessor ===
v2698 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B46" 
    successors "B12" "B46" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4600068113905108282
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3105 <|@
result v27|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2701 
values: j1818 j3112 
=== Succesors ===
=== Usages ===
v3544 j3112 v3543 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2701 values: j1818 j3112  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2701 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v2700 
=== Succesors ===
next: v3364 
=== Usages ===
v3364 v2704 v2705 j3105 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v2700 #next: v3364  <|@  <|@
f <@~|@floating>@ <|@
tid v3544 <|@
result [v26|QWORD[*] + v27|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j3078 
index: j3105 
=== Succesors ===
=== Usages ===
v3364 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3078 index: j3105  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3364 <|@
result v28|V256_DWORD[........] <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: <n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;>
=== Inputs ===
stateBefore: - 
guard: v2701 
address: v3544 
=== Succesors ===
next: v3238 
=== Usages ===
v3238 
=== Predecessor ===
v2701 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2701 address: v3544 #next: v3238  <|@  <|@
f <@~|@floating>@ <|@
tid v3543 <|@
result [v25|QWORD[.] + v27|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j3080 
index: j3105 
=== Succesors ===
=== Usages ===
v3238 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3080 index: j3105  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3238 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3543 
value: v3364 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2707 
=== Usages ===
=== Predecessor ===
v3364 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3543 value: v3364 stateAfter: - lastLocationAccess: - #next: v2707  <|@  <|@
f <@~|@floating>@ <|@
tid j3112 <|@
result v29|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3105 
y: j1770 
=== Succesors ===
=== Usages ===
j3097 j3105 v3116 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3105 y: j1770  <|@  <|@
f <@~|@floating>@ <|@
tid v3116 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3113 
y: j3112 
=== Succesors ===
=== Usages ===
v2707 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3113 y: j3112  <|@  <|@
f <@*|@fixed>@ <|@
tid v2707 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3116 
=== Succesors ===
trueSuccessor: v2704 
falseSuccessor: v2706 
=== Usages ===
=== Predecessor ===
v3238 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3116 #trueSuccessor: v2704 #falseSuccessor: v2706  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v27|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v28|V256_DWORD[........] = H [v26|QWORD[*] + v27|QWORD * 4] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v25|QWORD[.] + v27|QWORD * 4], input: v28|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = LEA [v27|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v29|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B11 -> B12 falseDestination: B11 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4591060914650367290
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2704 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v2701 
=== Succesors ===
next: v2710 
=== Usages ===
=== Predecessor ===
v2707 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v2701 #next: v2710  <|@  <|@
f <@*|@fixed>@ <|@
tid v2710 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2709 
=== Predecessor ===
v2704 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v29|QWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4600068113905108282
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3097 <|@
result v30|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2709 
values: j1818 j3112 
=== Succesors ===
=== Usages ===
v3542 j3104 j3089 v3119 v3541 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2709 values: j1818 j3112  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2709 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2708 v2710 
=== Succesors ===
next: v2728 
=== Usages ===
j3097 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2708 v2710 #next: v2728  <|@  <|@
f <@~|@floating>@ <|@
tid j3118 <|@
result v31|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j2468 
y: j2851 
=== Succesors ===
=== Usages ===
v3119 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2468 y: j2851  <|@  <|@
f <@~|@floating>@ <|@
tid v3119 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3118 
y: j3097 
=== Succesors ===
=== Usages ===
v2728 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3118 y: j3097  <|@  <|@
f <@*|@fixed>@ <|@
tid v2728 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3119 
=== Succesors ===
trueSuccessor: v2727 
falseSuccessor: v2726 
=== Usages ===
=== Predecessor ===
v2709 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3119 #trueSuccessor: v2727 #falseSuccessor: v2726  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v30|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = LEA [v23|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v30|QWORD, y: v31|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4591060914650367290
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2727 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2731 
=== Usages ===
=== Predecessor ===
v2728 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2731  <|@  <|@
f <@*|@fixed>@ <|@
tid v2731 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2720 
=== Predecessor ===
v2727 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v30|QWORD] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4598468990408307692
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2726 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3365 
=== Usages ===
v3365 
=== Predecessor ===
v2728 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3365  <|@  <|@
f <@~|@floating>@ <|@
tid v3542 <|@
result [v26|QWORD[*] + v30|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j3078 
index: j3097 
=== Succesors ===
=== Usages ===
v3365 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3078 index: j3097  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3365 <|@
result v32|V128_DWORD[....] <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: <n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;>
=== Inputs ===
stateBefore: - 
guard: v2726 
address: v3542 
=== Succesors ===
next: v3236 
=== Usages ===
v3236 
=== Predecessor ===
v2726 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2726 address: v3542 #next: v3236  <|@  <|@
f <@~|@floating>@ <|@
tid v3541 <|@
result [v25|QWORD[.] + v30|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j3080 
index: j3097 
=== Succesors ===
=== Usages ===
v3236 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3080 index: j3097  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3236 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3541 
value: v3365 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2719 
=== Usages ===
=== Predecessor ===
v3365 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3541 value: v3365 stateAfter: - lastLocationAccess: - #next: v2719  <|@  <|@
f <@~|@floating>@ <|@
tid j3104 <|@
result v33|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3097 
y: j2813 
=== Succesors ===
=== Usages ===
j3089 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3097 y: j2813  <|@  <|@
f <@*|@fixed>@ <|@
tid v2719 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2720 
=== Predecessor ===
v3236 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v32|V128_DWORD[....] = H [v26|QWORD[*] + v30|QWORD * 4] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v25|QWORD[.] + v30|QWORD * 4], input: v32|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = LEA [v30|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v33|QWORD] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4600068113905108282
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3089 <|@
result v34|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2720 
values: j3104 j3097 
=== Succesors ===
=== Usages ===
v3540 j3096 j3081 v3122 v3539 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2720 values: j3104 j3097  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2720 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2719 v2731 
=== Succesors ===
next: v2734 
=== Usages ===
j3089 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2719 v2731 #next: v2734  <|@  <|@
f <@~|@floating>@ <|@
tid j3121 <|@
result v35|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j2468 
y: j2855 
=== Succesors ===
=== Usages ===
v3122 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2468 y: j2855  <|@  <|@
f <@~|@floating>@ <|@
tid v3122 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3121 
y: j3089 
=== Succesors ===
=== Usages ===
v2734 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3121 y: j3089  <|@  <|@
f <@*|@fixed>@ <|@
tid v2734 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3122 
=== Succesors ===
trueSuccessor: v2733 
falseSuccessor: v2732 
=== Usages ===
=== Predecessor ===
v2720 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3122 #trueSuccessor: v2733 #falseSuccessor: v2732  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v34|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = LEA [v23|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v34|QWORD, y: v35|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4591060914650367290
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2733 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2737 
=== Usages ===
=== Predecessor ===
v2734 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2737  <|@  <|@
f <@*|@fixed>@ <|@
tid v2737 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2723 
=== Predecessor ===
v2733 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v34|QWORD] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4598468990408307692
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2732 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3366 
=== Usages ===
v3366 
=== Predecessor ===
v2734 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3366  <|@  <|@
f <@~|@floating>@ <|@
tid v3540 <|@
result [v26|QWORD[*] + v34|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j3078 
index: j3089 
=== Succesors ===
=== Usages ===
v3366 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3078 index: j3089  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3366 <|@
result v36|V64_DWORD[..] <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: <n Ljava/lang/Object;,n Ljava/lang/Object;>
=== Inputs ===
stateBefore: - 
guard: v2732 
address: v3540 
=== Succesors ===
next: v3234 
=== Usages ===
v3234 
=== Predecessor ===
v2732 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2732 address: v3540 #next: v3234  <|@  <|@
f <@~|@floating>@ <|@
tid v3539 <|@
result [v25|QWORD[.] + v34|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j3080 
index: j3089 
=== Succesors ===
=== Usages ===
v3234 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3080 index: j3089  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3234 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3539 
value: v3366 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2722 
=== Usages ===
=== Predecessor ===
v3366 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3539 value: v3366 stateAfter: - lastLocationAccess: - #next: v2722  <|@  <|@
f <@~|@floating>@ <|@
tid j3096 <|@
result v37|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3089 
y: j2827 
=== Succesors ===
=== Usages ===
j3081 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3089 y: j2827  <|@  <|@
f <@*|@fixed>@ <|@
tid v2722 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2723 
=== Predecessor ===
v3234 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v36|V64_DWORD[..] = H [v26|QWORD[*] + v34|QWORD * 4] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v25|QWORD[.] + v34|QWORD * 4], input: v36|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = LEA [v34|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v37|QWORD] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4600068113905108282
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3081 <|@
result v38|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2723 
values: j3096 j3089 
=== Succesors ===
=== Usages ===
v3538 v3125 v3537 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2723 values: j3096 j3089  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2723 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2722 v2737 
=== Succesors ===
next: v2740 
=== Usages ===
j3081 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2722 v2737 #next: v2740  <|@  <|@
f <@~|@floating>@ <|@
tid j3124 <|@
result v39|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j2468 
y: j1188 
=== Succesors ===
=== Usages ===
v3125 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2468 y: j1188  <|@  <|@
f <@~|@floating>@ <|@
tid v3125 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3124 
y: j3081 
=== Succesors ===
=== Usages ===
v2740 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3124 y: j3081  <|@  <|@
f <@*|@fixed>@ <|@
tid v2740 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3125 
=== Succesors ===
trueSuccessor: v2739 
falseSuccessor: v2738 
=== Usages ===
=== Predecessor ===
v2723 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3125 #trueSuccessor: v2739 #falseSuccessor: v2738  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v38|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = DEC v23|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v38|QWORD, y: v39|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4591060914650367290
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2739 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2743 
=== Usages ===
=== Predecessor ===
v2740 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2743  <|@  <|@
f <@*|@fixed>@ <|@
tid v2743 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2713 
=== Predecessor ===
v2739 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4598468990408307692
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2738 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a3367 
=== Usages ===
a3367 
=== Predecessor ===
v2740 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a3367  <|@  <|@
f <@~|@floating>@ <|@
tid v3538 <|@
result [v26|QWORD[*] + v38|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j3078 
index: j3081 
=== Succesors ===
=== Usages ===
a3367 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3078 index: j3081  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3367 <|@
result v40|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v2738 
address: v3538 
=== Succesors ===
next: v3232 
=== Usages ===
v3232 
=== Predecessor ===
v2738 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2738 address: v3538 #next: v3232  <|@  <|@
f <@~|@floating>@ <|@
tid v3537 <|@
result [v25|QWORD[.] + v38|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j3080 
index: j3081 
=== Succesors ===
=== Usages ===
v3232 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3080 index: j3081  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3232 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3537 
value: a3367 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2725 
=== Usages ===
=== Predecessor ===
a3367 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3537 value: a3367 stateAfter: - lastLocationAccess: - #next: v2725  <|@  <|@
f <@*|@fixed>@ <|@
tid v2725 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2713 
=== Predecessor ===
v3232 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v40|DWORD[.] = MOV [v26|QWORD[*] + v38|QWORD * 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v25|QWORD[.] + v38|QWORD * 4], y: v40|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B7" "B21" "B20" 
    successors "B23" "B38" 
    xhandlers
    flags 
    probability 4604571713532478778
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2713 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2712 v2725 v2743 
=== Succesors ===
next: v3128 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2712 v2725 v2743 #next: v3128  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3128 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v2750 
=== Usages ===
j3130 
=== Predecessor ===
v2713 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v2750  <|@  <|@
f <@~|@floating>@ <|@
tid j2467 <|@
result v41|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i3361 
=== Succesors ===
=== Usages ===
j2472 v2804 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i3361  <|@  <|@
f <@~|@floating>@ <|@
tid v2804 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2468 
y: j2467 
=== Succesors ===
=== Usages ===
v2750 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2468 y: j2467  <|@  <|@
f <@*|@fixed>@ <|@
tid v2750 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v2804 
=== Succesors ===
trueSuccessor: v2749 
falseSuccessor: v2748 
=== Usages ===
=== Predecessor ===
v3128 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2804 #trueSuccessor: v2749 #falseSuccessor: v2748  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = MOVSXD v8|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v41|QWORD, y: v23|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4600068113905108282
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2749 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2753 
=== Usages ===
=== Predecessor ===
v2750 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2753  <|@  <|@
f <@~|@floating>@ <|@
tid v3500 <|@
result [v20|QWORD[.] + v23|QWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1811 
index: j2468 
=== Succesors ===
=== Usages ===
j3130 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1811 index: j2468  <|@  <|@
f <@~|@floating>@ <|@
tid j3130 <|@
result v42|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v3128 
address: v3500 
=== Succesors ===
=== Usages ===
v3545 v3546 v3547 v3548 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v3128 address: v3500  <|@  <|@
f <@~|@floating>@ <|@
tid j2472 <|@
result v43|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j2467 
y: j2468 
=== Succesors ===
=== Usages ===
j3166 j3155 j3160 j3163 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j2467 y: j2468  <|@  <|@
f <@~|@floating>@ <|@
tid j3155 <|@
result v44|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967303 - 4294967287]
=== Inputs ===
x: j2472 
y: j2845 
=== Succesors ===
=== Usages ===
v3156 v3158 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2472 y: j2845  <|@  <|@
f <@~|@floating>@ <|@
tid v3156 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3155 
y: j1818 
=== Succesors ===
=== Usages ===
v2753 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3155 y: j1818  <|@  <|@
f <@*|@fixed>@ <|@
tid v2753 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v3156 
=== Succesors ===
trueSuccessor: v2751 
falseSuccessor: v2752 
=== Usages ===
=== Predecessor ===
v2749 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3156 #trueSuccessor: v2751 #falseSuccessor: v2752  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[.] = LEA [v20|QWORD[.] + v23|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = SUB (x: v41|QWORD, ~y: v23|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = LEA [v43|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v44|QWORD, y: v44|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 4598468990408307692
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2751 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2762 
=== Usages ===
=== Predecessor ===
v2753 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2762  <|@  <|@
f <@*|@fixed>@ <|@
tid v2762 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2763 
=== Predecessor ===
v2751 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B24 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4591060914650367290
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2752 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2754 
=== Usages ===
=== Predecessor ===
v2753 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2754  <|@  <|@
f <@*|@fixed>@ <|@
tid v2754 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2755 
=== Predecessor ===
v2752 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B37" 
    successors "B27" "B37" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4600068113905108282
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3149 <|@
result v45|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2755 
values: j1818 j3154 
=== Succesors ===
=== Usages ===
v3548 j3154 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2755 values: j1818 j3154  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2755 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v2754 
=== Succesors ===
next: v3242 
=== Usages ===
j3149 v2758 v2759 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v2754 #next: v3242  <|@  <|@
f <@~|@floating>@ <|@
tid v3548 <|@
result [v42|QWORD[.] + v45|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j3130 
index: j3149 
=== Succesors ===
=== Usages ===
v3242 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3130 index: j3149  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3242 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3548 
value: v3243 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2761 
=== Usages ===
=== Predecessor ===
v2755 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3548 value: v3243 stateAfter: - lastLocationAccess: - #next: v2761  <|@  <|@
f <@~|@floating>@ <|@
tid j3154 <|@
result v46|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3149 
y: j1770 
=== Succesors ===
=== Usages ===
j3143 j3149 v3158 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3149 y: j1770  <|@  <|@
f <@~|@floating>@ <|@
tid v3158 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3155 
y: j3154 
=== Succesors ===
=== Usages ===
v2761 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3155 y: j3154  <|@  <|@
f <@*|@fixed>@ <|@
tid v2761 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3158 
=== Succesors ===
trueSuccessor: v2758 
falseSuccessor: v2760 
=== Usages ===
=== Predecessor ===
v3242 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3158 #trueSuccessor: v2758 #falseSuccessor: v2760  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v45|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v42|QWORD[.] + v45|QWORD * 4], input: v6|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = LEA [v45|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v46|QWORD, y: v44|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    probability 4591060914650367290
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2758 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v2755 
=== Succesors ===
next: v2764 
=== Usages ===
=== Predecessor ===
v2761 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v2755 #next: v2764  <|@  <|@
f <@*|@fixed>@ <|@
tid v2764 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2763 
=== Predecessor ===
v2758 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v46|QWORD] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B24" "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4600068113905108282
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3143 <|@
result v47|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2763 
values: j1818 j3154 
=== Succesors ===
=== Usages ===
v3547 j3148 j3137 v3161 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2763 values: j1818 j3154  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2763 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2762 v2764 
=== Succesors ===
next: v2782 
=== Usages ===
j3143 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2762 v2764 #next: v2782  <|@  <|@
f <@~|@floating>@ <|@
tid j3160 <|@
result v48|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967299 - 4294967291]
=== Inputs ===
x: j2472 
y: j2851 
=== Succesors ===
=== Usages ===
v3161 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2472 y: j2851  <|@  <|@
f <@~|@floating>@ <|@
tid v3161 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3160 
y: j3143 
=== Succesors ===
=== Usages ===
v2782 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3160 y: j3143  <|@  <|@
f <@*|@fixed>@ <|@
tid v2782 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3161 
=== Succesors ===
trueSuccessor: v2781 
falseSuccessor: v2780 
=== Usages ===
=== Predecessor ===
v2763 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3161 #trueSuccessor: v2781 #falseSuccessor: v2780  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v47|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = LEA [v43|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v47|QWORD, y: v48|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4591060914650367290
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2781 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2785 
=== Usages ===
=== Predecessor ===
v2782 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2785  <|@  <|@
f <@*|@fixed>@ <|@
tid v2785 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2774 
=== Predecessor ===
v2781 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v47|QWORD] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4598468990408307692
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2780 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3241 
=== Usages ===
=== Predecessor ===
v2782 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3241  <|@  <|@
f <@~|@floating>@ <|@
tid v3547 <|@
result [v42|QWORD[.] + v47|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j3130 
index: j3143 
=== Succesors ===
=== Usages ===
v3241 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3130 index: j3143  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3241 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3547 
value: v3246 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2773 
=== Usages ===
=== Predecessor ===
v2780 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3547 value: v3246 stateAfter: - lastLocationAccess: - #next: v2773  <|@  <|@
f <@~|@floating>@ <|@
tid j3148 <|@
result v49|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3143 
y: j2813 
=== Succesors ===
=== Usages ===
j3137 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3143 y: j2813  <|@  <|@
f <@*|@fixed>@ <|@
tid v2773 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2774 
=== Predecessor ===
v3241 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v42|QWORD[.] + v47|QWORD * 4], input: v5|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = LEA [v47|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|QWORD] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4600068113905108282
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3137 <|@
result v50|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2774 
values: j3148 j3143 
=== Succesors ===
=== Usages ===
v3546 j3142 j3131 v3164 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2774 values: j3148 j3143  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2774 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2773 v2785 
=== Succesors ===
next: v2788 
=== Usages ===
j3137 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2773 v2785 #next: v2788  <|@  <|@
f <@~|@floating>@ <|@
tid j3163 <|@
result v51|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j2472 
y: j2855 
=== Succesors ===
=== Usages ===
v3164 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2472 y: j2855  <|@  <|@
f <@~|@floating>@ <|@
tid v3164 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3163 
y: j3137 
=== Succesors ===
=== Usages ===
v2788 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3163 y: j3137  <|@  <|@
f <@*|@fixed>@ <|@
tid v2788 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3164 
=== Succesors ===
trueSuccessor: v2787 
falseSuccessor: v2786 
=== Usages ===
=== Predecessor ===
v2774 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3164 #trueSuccessor: v2787 #falseSuccessor: v2786  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v50|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = LEA [v43|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v50|QWORD, y: v51|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4591060914650367290
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2787 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2791 
=== Usages ===
=== Predecessor ===
v2788 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2791  <|@  <|@
f <@*|@fixed>@ <|@
tid v2791 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2777 
=== Predecessor ===
v2787 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v50|QWORD] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4598468990408307692
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2786 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3240 
=== Usages ===
=== Predecessor ===
v2788 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3240  <|@  <|@
f <@~|@floating>@ <|@
tid v3546 <|@
result [v42|QWORD[.] + v50|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j3130 
index: j3137 
=== Succesors ===
=== Usages ===
v3240 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3130 index: j3137  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3240 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3546 
value: v3245 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2776 
=== Usages ===
=== Predecessor ===
v2786 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3546 value: v3245 stateAfter: - lastLocationAccess: - #next: v2776  <|@  <|@
f <@~|@floating>@ <|@
tid j3142 <|@
result v52|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3137 
y: j2827 
=== Succesors ===
=== Usages ===
j3131 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3137 y: j2827  <|@  <|@
f <@*|@fixed>@ <|@
tid v2776 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2777 
=== Predecessor ===
v3240 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v42|QWORD[.] + v50|QWORD * 4], input: v4|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = LEA [v50|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v52|QWORD] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4600068113905108282
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3131 <|@
result v53|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2777 
values: j3142 j3137 
=== Succesors ===
=== Usages ===
v3545 v3167 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2777 values: j3142 j3137  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2777 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2776 v2791 
=== Succesors ===
next: v2794 
=== Usages ===
j3131 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2776 v2791 #next: v2794  <|@  <|@
f <@~|@floating>@ <|@
tid j3166 <|@
result v54|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j2472 
y: j1188 
=== Succesors ===
=== Usages ===
v3167 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2472 y: j1188  <|@  <|@
f <@~|@floating>@ <|@
tid v3167 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3166 
y: j3131 
=== Succesors ===
=== Usages ===
v2794 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3166 y: j3131  <|@  <|@
f <@*|@fixed>@ <|@
tid v2794 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3167 
=== Succesors ===
trueSuccessor: v2793 
falseSuccessor: v2792 
=== Usages ===
=== Predecessor ===
v2777 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3167 #trueSuccessor: v2793 #falseSuccessor: v2792  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v53|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = DEC v43|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v53|QWORD, y: v54|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B39" 
    xhandlers
    flags 
    probability 4591060914650367290
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2793 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2797 
=== Usages ===
=== Predecessor ===
v2794 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2797  <|@  <|@
f <@*|@fixed>@ <|@
tid v2797 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2767 
=== Predecessor ===
v2793 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B35 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B39" 
    xhandlers
    flags 
    probability 4598468990408307692
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2792 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3239 
=== Usages ===
=== Predecessor ===
v2794 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3239  <|@  <|@
f <@~|@floating>@ <|@
tid v3545 <|@
result [v42|QWORD[.] + v53|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j3130 
index: j3131 
=== Succesors ===
=== Usages ===
v3239 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3130 index: j3131  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3239 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3545 
value: a3244 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2779 
=== Usages ===
=== Predecessor ===
v2792 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3545 value: a3244 stateAfter: - lastLocationAccess: - #next: v2779  <|@  <|@
f <@*|@fixed>@ <|@
tid v2779 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2767 
=== Predecessor ===
v3239 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v42|QWORD[.] + v53|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B36 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4598468990408307692
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2760 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2759 
=== Usages ===
=== Predecessor ===
v2761 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2759  <|@  <|@
f <@*|@fixed>@ <|@
tid v2759 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v2755 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2760 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v2755  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v46|QWORD] destination: B37 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B39" 
    xhandlers
    flags 
    probability 4600068113905108282
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2748 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2766 
=== Usages ===
=== Predecessor ===
v2750 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2766  <|@  <|@
f <@*|@fixed>@ <|@
tid v2766 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2767 
=== Predecessor ===
v2748 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B36" "B35" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4604571713532478778
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2767 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2766 v2779 v2797 
=== Succesors ===
next: v1851 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2766 v2779 v2797 #next: v1851  <|@  <|@
f <@~|@floating>@ <|@
tid v1848 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:154) [bci: 1]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3361 
y: i13 
=== Succesors ===
=== Usages ===
v1851 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i3361 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v1851 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:154) [bci: 1]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1848 
=== Succesors ===
trueSuccessor: v1849 
falseSuccessor: v1850 
=== Usages ===
=== Predecessor ===
v2767 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1848 #trueSuccessor: v1849 #falseSuccessor: v1850  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v8|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    probability 4600068113905108282
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1849 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:155) [bci: 4]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1877 
=== Usages ===
=== Predecessor ===
v1851 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1877  <|@  <|@
f <@*|@fixed>@ <|@
tid v1877 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1876 
=== Predecessor ===
v1849 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B40 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4600068113905108282
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1850 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:157) [bci: 5]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1853 
=== Usages ===
=== Predecessor ===
v1851 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1853  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1853 <|@
result [v20|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToFirstArrayElement(WriteBarrierSnippets.java:376) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:159) [bci: 20]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v3440 
=== Succesors ===
next: j1855 
=== Usages ===
j1854 
=== Predecessor ===
v1850 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v3440 #next: j1855  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1855 <|@
result [v20|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:385) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v3440 
=== Succesors ===
next: v1863 
=== Usages ===
j1859 
=== Predecessor ===
j1853 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v3440 #next: v1863  <|@  <|@
f <@~|@floating>@ <|@
tid i1856 <|@
result v55|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i32
=== Inputs ===
x: i3361 
y: i632 
=== Succesors ===
=== Usages ===
i1857 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i3361 y: i632  <|@  <|@
f <@~|@floating>@ <|@
tid i1857 <|@
result v56|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i1856 
y: i912 
=== Succesors ===
=== Usages ===
j1858 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i1856 y: i912  <|@  <|@
f <@~|@floating>@ <|@
tid j1858 <|@
result v57|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 26]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
resultBits: 64
stamp: i64 [-2147483648 - 2147483644] ⇈fffffffffffffffc
=== Inputs ===
value: i1857 
=== Succesors ===
=== Usages ===
j1859 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1857  <|@  <|@
f <@~|@floating>@ <|@
tid j1859 <|@
result v59|QWORD[.] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 27]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i64
=== Inputs ===
x: j1855 
y: j1858 
=== Succesors ===
=== Usages ===
j1860 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1855 y: j1858  <|@  <|@
f <@~|@floating>@ <|@
tid j1860 <|@
result v60|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 34]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1859 
y: i1852 
=== Succesors ===
=== Usages ===
j1861 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1859 y: i1852  <|@  <|@
f <@~|@floating>@ <|@
tid j1854 <|@
result v61|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:159) [bci: 24]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1853 
y: i1852 
=== Succesors ===
=== Usages ===
j1861 j1875 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1853 y: i1852  <|@  <|@
f <@~|@floating>@ <|@
tid j1861 <|@
result v63|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:161) [bci: 41]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i64 [-36028797018963967 - 36028797018963967]
=== Inputs ===
x: j1860 
y: j1854 
=== Succesors ===
=== Usages ===
j1862 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j1860 y: j1854  <|@  <|@
f <@~|@floating>@ <|@
tid j1862 <|@
result v64|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:161) [bci: 43]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i64 [-36028797018963966 - 36028797018963968]
=== Inputs ===
x: j1861 
y: j1778 
=== Succesors ===
=== Usages ===
j1865 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1861 y: j1778  <|@  <|@
f <@*|@fixed>@ <|@
tid v1863 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1864 
=== Predecessor ===
j1855 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = DEC v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = SHL v55|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = MOVSXD v56|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = LEA [v20|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[.] = ADD (x: v58|QWORD[.], y: v57|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[*] = SHR v59|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[.] = LEA [v20|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[*] = SHR v62|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v63|QWORD[*] = SUB (x: v60|QWORD[*], ~y: v61|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v64|QWORD[*] = INC v63|QWORD[*] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v64|QWORD[*]] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B45" 
    successors "B43" "B45" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4604571713532478778
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1865 <|@
result v65|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1864 
values: j1862 j1866 
=== Succesors ===
=== Usages ===
j1866 v1867 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1864 values: j1862 j1866  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1864 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 2.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v1863 
=== Succesors ===
next: v1870 
=== Usages ===
j1865 v1868 v1873 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v1863 #next: v1870  <|@  <|@
f <@~|@floating>@ <|@
tid v1867 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 55]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1865 
y: j1778 
=== Succesors ===
=== Usages ===
v1870 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1865 y: j1778  <|@  <|@
f <@*|@fixed>@ <|@
tid v1870 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 55]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1867 
=== Succesors ===
trueSuccessor: v1868 
falseSuccessor: v1869 
=== Usages ===
=== Predecessor ===
v1864 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1867 #trueSuccessor: v1868 #falseSuccessor: v1869  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v65|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v65|QWORD[*] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B42 -> B43 falseDestination: B42 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" 
    xhandlers
    flags 
    probability 4600068113905108282
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1868 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:165) [bci: 76]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v1864 
=== Succesors ===
next: v1878 
=== Usages ===
=== Predecessor ===
v1870 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v1864 #next: v1878  <|@  <|@
f <@*|@fixed>@ <|@
tid v1878 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1876 
=== Predecessor ===
v1868 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B40" "B43" 
    successors "B239" 
    xhandlers
    flags 
    probability 4604571713532478778
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1876 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1877 v1878 
=== Succesors ===
next: a1646 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1877 v1878 #next: a1646  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1646 <|@
result v20|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a1811 
=== Succesors ===
next: v807 
=== Usages ===
a1174 
=== Predecessor ===
v1876 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1811 #next: v807  <|@  <|@
f <@*|@fixed>@ <|@
tid v807 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v805 
=== Predecessor ===
a1646 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v8|DWORD, v20|QWORD[.]] destination: B44 -> B239 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B42" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4600068113905108282
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1869 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 58]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1872 
=== Usages ===
=== Predecessor ===
v1870 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1872  <|@  <|@
f <@~|@floating>@ <|@
tid j1866 <|@
result v66|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 50]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i64
=== Inputs ===
x: j1865 
y: j1188 
=== Succesors ===
=== Usages ===
j1865 j1871 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1865 y: j1188  <|@  <|@
f <@~|@floating>@ <|@
tid j1875 <|@
result v67|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 62]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i64 [4682670080 - 36028801701634047] ⇈00ffffffffffffff
=== Inputs ===
x: j1854 
y: j1874 
=== Succesors ===
=== Usages ===
j1871 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1854 y: j1874  <|@  <|@
f <@~|@floating>@ <|@
tid j1871 <|@
result v68|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 65]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i64
=== Inputs ===
x: j1866 
y: j1875 
=== Succesors ===
=== Usages ===
v1872 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1866 y: j1875  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1872 <|@
d <@d|@=== Debug Properties ===
kind: boolean
nodeSourcePosition: at org.graalvm.compiler.replacements.nodes.DirectStoreNode.storeBoolean(long, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 70]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
address: j1871 
value: i13 
=== Succesors ===
next: v1873 
=== Usages ===
=== Predecessor ===
v1869 >@ <|@
instruction <@DirectStore|@org.graalvm.compiler.replacements.nodes.DirectStoreNode>@ address: j1871 value: i13 #next: v1873  <|@  <|@
f <@*|@fixed>@ <|@
tid v1873 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
loopBegin: v1864 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1872 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v1864  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[*] = DEC v65|QWORD[*] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[*] = ADD (x: v61|QWORD[*], y: v3|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[*] = ADD (x: v67|QWORD[*], y: v66|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v68|QWORD[*]], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v66|QWORD[*]] destination: B45 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4598468990408307692
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2706 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2705 
=== Usages ===
=== Predecessor ===
v2707 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2705  <|@  <|@
f <@*|@fixed>@ <|@
tid v2705 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v2701 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2706 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v2701  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v29|QWORD] destination: B46 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B48" "B199" 
    xhandlers
    flags 
    probability 4598893030452983180
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v205 
=== Usages ===
=== Predecessor ===
v125 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v205  <|@  <|@
f <@~|@floating>@ <|@
tid v2336 <|@
result meta{HotSpotType<Ljava/util/RandomAccessSubList;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
rawvalue: meta{HotSpotType<Ljava/util/RandomAccessSubList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/RandomAccessSubList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2337 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2337 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v3359 
y: v2336 
=== Succesors ===
=== Usages ===
v205 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v3359 y: v2336  <|@  <|@
f <@~|@floating>@ <|@
tid v1880 <|@
result v69|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
rawvalue: meta{HotSpotType<[Ljava/lang/Object;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[Ljava/lang/Object;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a1904 a2058 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2340 <|@
result meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
rawvalue: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1927 v2081 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1888 <|@
result int[16777215|0xffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 48]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1889 v2043 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v205 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/RandomAccessSubList; target_method=toArray target_method_class=Ljava/util/AbstractCollection; position=at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
trueSuccessorProbability: 0.5054073948247549
=== Inputs ===
condition: v2337 
=== Succesors ===
trueSuccessor: v201 
falseSuccessor: v154 
=== Usages ===
=== Predecessor ===
v124 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2337 #trueSuccessor: v201 #falseSuccessor: v154  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/RandomAccessSubList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5054073948247549 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B199 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B198" 
    xhandlers
    flags 
    probability 4594445899282223279
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v201 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/RandomAccessSubList; target_method=toArray target_method_class=Ljava/util/AbstractCollection; position=at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: a3368 
=== Usages ===
=== Predecessor ===
v205 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a3368  <|@  <|@
f <@~|@floating>@ <|@
tid v3419 <|@
result [v1|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a3368 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3368 <|@
result v70|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList.l
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 5]
at java.util.SubList.size(AbstractList.java:645) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 1]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
nullCheck: false
stamp: n Ljava/util/AbstractList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v3419 
=== Succesors ===
next: i3369 
=== Usages ===
a878 v3463 v3421 v3423 v3425 a3556 
=== Predecessor ===
v201 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3419 #next: i3369  <|@  <|@
f <@~|@floating>@ <|@
tid v3425 <|@
result [v70|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3368 
=== Succesors ===
=== Usages ===
i3391 i3369 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3368  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3369 <|@
result v71|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 8]
at java.util.SubList.size(AbstractList.java:645) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 1]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v3425 
=== Succesors ===
next: i3370 
=== Usages ===
v290 ?661 ?781 v764 
=== Predecessor ===
a3368 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v3425 #next: i3370  <|@  <|@
f <@~|@floating>@ <|@
tid v3418 <|@
result [v1|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i3370 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3370 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 1]
at java.util.SubList.size(AbstractList.java:645) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 1]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v3418 
=== Succesors ===
next: v1300 
=== Usages ===
v290 
=== Predecessor ===
i3369 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3418 #next: v1300  <|@  <|@
f <@~|@floating>@ <|@
tid v290 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 11]
at java.util.SubList.size(AbstractList.java:645) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 1]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3369 
y: i3370 
=== Succesors ===
=== Usages ===
v1300 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i3369 y: i3370  <|@  <|@
f <@*|@fixed>@ <|@
tid v1300 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 11]
at java.util.SubList.size(AbstractList.java:645) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 1]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v290 
=== Succesors ===
trueSuccessor: v1297 
falseSuccessor: v1299 
=== Usages ===
=== Predecessor ===
i3370 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v290 #trueSuccessor: v1297 #falseSuccessor: v1299  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v70|DWORD[.] = MOV [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.addAll(ArrayList.java:581) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v71|DWORD = MOV [v70|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v71|DWORD, y: [v1|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B198 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4594445899282223279
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1297 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 11]
at java.util.SubList.size(AbstractList.java:645) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 1]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: i3371 
=== Usages ===
=== Predecessor ===
v1300 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i3371  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3371 <|@
result v72|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList.size
nodeSourcePosition: at java.util.SubList.size(AbstractList.java:646) [bci: 5]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 1]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v3415 
=== Succesors ===
next: v1304 
=== Usages ===
v218 a1904 v300 v672 v740 i808 v1267 v1262 j1185 v1889 i1881 v1923 i2005 
=== Predecessor ===
v1297 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3415 #next: v1304  <|@  <|@
f <@~|@floating>@ <|@
tid v300 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.SubList.rangeCheckForAdd(AbstractList.java:759) [bci: 9]
at java.util.SubList.listIterator(AbstractList.java:696) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3371 
y: i13 
=== Succesors ===
=== Usages ===
v1304 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3371 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v1304 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.SubList.rangeCheckForAdd(AbstractList.java:759) [bci: 9]
at java.util.SubList.listIterator(AbstractList.java:696) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v300 
=== Succesors ===
trueSuccessor: v1303 
falseSuccessor: v1301 
=== Usages ===
=== Predecessor ===
i3371 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v300 #trueSuccessor: v1303 #falseSuccessor: v1301  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v72|DWORD, y: v72|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B49 -> B50 falseDestination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B237" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1303 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.SubList.rangeCheckForAdd(AbstractList.java:759) [bci: 9]
at java.util.SubList.listIterator(AbstractList.java:696) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1698 
=== Usages ===
=== Predecessor ===
v1304 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1698  <|@  <|@
f <@~|@floating>@ <|@
tid i1699 <|@
result int[-227859|0xfffffffffffc85ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -227859
stableDimension: 0
stamp: i32 [-227859] ⇊00000000fffc85ed ⇈00000000fffc85ed
stampKind: i32
value: int[-227859|0xfffffffffffc85ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1689 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1698 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1686 
=== Predecessor ===
v1303 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-227859|0xfffffffffffc85ed], Object[null]] destination: B50 -> B237 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4594445899282223279
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1301 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.SubList.rangeCheckForAdd(AbstractList.java:759) [bci: 9]
at java.util.SubList.listIterator(AbstractList.java:696) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: i3372 
=== Usages ===
=== Predecessor ===
v1304 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i3372  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3372 <|@
result v73|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList.offset
nodeSourcePosition: at java.util.SubList.access$000(AbstractList.java:613) [bci: 1]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 30]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v3416 
=== Succesors ===
next: v1308 
=== Usages ===
i654 v578 j1187 v573 v819 v832 i717 i779 v1222 v1201 
=== Predecessor ===
v1301 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3416 #next: v1308  <|@  <|@
f <@~|@floating>@ <|@
tid v573 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3372 
y: i13 
=== Succesors ===
=== Usages ===
v1308 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3372 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v1308 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v573 
=== Succesors ===
trueSuccessor: v1307 
falseSuccessor: v1305 
=== Usages ===
=== Predecessor ===
i3372 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v573 #trueSuccessor: v1307 #falseSuccessor: v1305  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOV [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v73|DWORD, y: v73|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B51 -> B52 falseDestination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B237" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1307 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1707 
=== Usages ===
=== Predecessor ===
v1308 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1707  <|@  <|@
f <@~|@floating>@ <|@
tid i1708 <|@
result int[-229907|0xfffffffffffc7ded] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -229907
stableDimension: 0
stamp: i32 [-229907] ⇊00000000fffc7ded ⇈00000000fffc7ded
stampKind: i32
value: int[-229907|0xfffffffffffc7ded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1689 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1707 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1686 
=== Predecessor ===
v1307 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-229907|0xfffffffffffc7ded], Object[null]] destination: B52 -> B237 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B57" 
    xhandlers
    flags 
    probability 4594445899282223279
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1305 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1883 
=== Usages ===
=== Predecessor ===
v1308 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1883  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1883 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1920 
=== Usages ===
v3454 v3455 
=== Predecessor ===
v1305 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1920  <|@  <|@
f <@~|@floating>@ <|@
tid v3454 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1883 
index: - 
=== Succesors ===
=== Usages ===
j1920 v1922 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1883 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1920 <|@
result v74|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3454 
=== Succesors ===
next: j1921 
=== Usages ===
j1887 v3456 v3457 a1903 v3462 v3458 v3459 v3460 v3461 
=== Predecessor ===
j1883 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3454 #next: j1921  <|@  <|@
f <@~|@floating>@ <|@
tid v3455 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1883 
index: - 
=== Succesors ===
=== Usages ===
j1921 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1883 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1921 <|@
result v75|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3455 
=== Succesors ===
next: v1892 
=== Usages ===
v1893 
=== Predecessor ===
j1920 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3455 #next: v1892  <|@  <|@
f <@~|@floating>@ <|@
tid v1889 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3371 
y: i1888 
=== Succesors ===
=== Usages ===
v1892 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i3371 y: i1888  <|@  <|@
f <@*|@fixed>@ <|@
tid v1892 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v1889 
=== Succesors ===
trueSuccessor: v1891 
falseSuccessor: v1890 
=== Usages ===
=== Predecessor ===
j1921 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1889 #trueSuccessor: v1891 #falseSuccessor: v1890  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v75|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v72|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4593918111383054494
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1891 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1899 
=== Usages ===
=== Predecessor ===
v1892 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1899  <|@  <|@
f <@~|@floating>@ <|@
tid i1881 <|@
result v76|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i3371 
y: i912 
=== Succesors ===
=== Usages ===
i1911 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i3371 y: i912  <|@  <|@
f <@~|@floating>@ <|@
tid i1911 <|@
result v77|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i32 [-2147483645 - 2147483647] ⇊0000000000000003
=== Inputs ===
x: i1881 
y: i1814 
=== Succesors ===
=== Usages ===
i1882 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1881 y: i1814  <|@  <|@
f <@~|@floating>@ <|@
tid i1882 <|@
result v78|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i1911 
y: i1792 
=== Succesors ===
=== Usages ===
j1886 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i1911 y: i1792  <|@  <|@
f <@~|@floating>@ <|@
tid j1886 <|@
result v79|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i1882 
=== Succesors ===
=== Usages ===
j1887 v3458 v3459 v3460 v3461 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1882  <|@  <|@
f <@~|@floating>@ <|@
tid j1887 <|@
result v80|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i64
=== Inputs ===
x: j1886 
y: j1920 
=== Succesors ===
=== Usages ===
v1893 v1922 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1886 y: j1920  <|@  <|@
f <@~|@floating>@ <|@
tid v1893 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1921 
y: j1887 
=== Succesors ===
=== Usages ===
v1899 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1921 y: j1887  <|@  <|@
f <@*|@fixed>@ <|@
tid v1899 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1893 
=== Succesors ===
trueSuccessor: v1898 
falseSuccessor: v1897 
=== Usages ===
=== Predecessor ===
v1891 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1893 #trueSuccessor: v1898 #falseSuccessor: v1897  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = SHL v72|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v77|DWORD = LEA [v76|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = AND v77|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v79|QWORD = MOVSXD v78|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v80|QWORD = ADD (x: v79|QWORD, y: v74|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v80|QWORD, y: v75|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B54 -> B55 falseDestination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B58" 
    xhandlers
    flags 
    probability 4563722939497366367
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1898 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1896 
=== Usages ===
=== Predecessor ===
v1899 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1896  <|@  <|@
f <@*|@fixed>@ <|@
tid v1896 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1895 
=== Predecessor ===
v1898 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B55 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B59" 
    xhandlers
    flags 
    probability 4593870610472129303
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1897 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1922 
=== Usages ===
=== Predecessor ===
v1899 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1922  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1922 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3454 
value: j1887 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1913 
=== Usages ===
=== Predecessor ===
v1897 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3454 value: j1887 stateAfter: - lastLocationAccess: - #next: v1913  <|@  <|@
f <@~|@floating>@ <|@
tid v3458 <|@
result [v79|QWORD + v74|QWORD * 1 + 192] <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j1886 
index: j1920 
=== Succesors ===
=== Usages ===
v1913 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1886 index: j1920  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1913 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
address: v3458 
=== Succesors ===
next: v1915 
=== Usages ===
=== Predecessor ===
v1922 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3458 #next: v1915  <|@  <|@
f <@~|@floating>@ <|@
tid v3459 <|@
result [v79|QWORD + v74|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j1886 
index: j1920 
=== Succesors ===
=== Usages ===
v1915 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1886 index: j1920  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1915 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
address: v3459 
=== Succesors ===
next: v1917 
=== Usages ===
=== Predecessor ===
v1913 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3459 #next: v1917  <|@  <|@
f <@~|@floating>@ <|@
tid v3460 <|@
result [v79|QWORD + v74|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j1886 
index: j1920 
=== Succesors ===
=== Usages ===
v1917 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1886 index: j1920  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1917 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
address: v3460 
=== Succesors ===
next: v1919 
=== Usages ===
=== Predecessor ===
v1915 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3460 #next: v1919  <|@  <|@
f <@~|@floating>@ <|@
tid v3461 <|@
result [v79|QWORD + v74|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j1886 
index: j1920 
=== Succesors ===
=== Usages ===
v1919 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1886 index: j1920  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1919 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
address: v3461 
=== Succesors ===
next: v1923 
=== Usages ===
=== Predecessor ===
v1917 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3461 #next: v1923  <|@  <|@
f <@~|@floating>@ <|@
tid v3456 <|@
result [v74|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1920 
index: - 
=== Succesors ===
=== Usages ===
v1923 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1920 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1923 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3456 
value: i3371 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1924 
=== Usages ===
=== Predecessor ===
v1919 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3456 value: i3371 stateAfter: - lastLocationAccess: - #next: v1924  <|@  <|@
f <@~|@floating>@ <|@
tid v3457 <|@
result [v74|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1920 
index: - 
=== Succesors ===
=== Usages ===
v1924 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1920 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1924 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3457 
value: j1778 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1927 
=== Usages ===
=== Predecessor ===
v1923 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3457 value: j1778 stateAfter: - lastLocationAccess: - #next: v1927  <|@  <|@
f <@~|@floating>@ <|@
tid v3462 <|@
result [v74|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1920 
index: - 
=== Succesors ===
=== Usages ===
v1927 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1920 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1927 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3462 
value: v2340 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1902 
=== Usages ===
=== Predecessor ===
v1924 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3462 value: v2340 stateAfter: - lastLocationAccess: - #next: v1902  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1902 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1903 
=== Usages ===
=== Predecessor ===
v1927 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a1903  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1903 <|@
result v81|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j1920 
=== Succesors ===
next: v1905 
=== Usages ===
a1908 
=== Predecessor ===
v1902 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1920 #next: v1905  <|@  <|@
f <@*|@fixed>@ <|@
tid v1905 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1906 
=== Predecessor ===
a1903 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v80|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v79|QWORD + v74|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v79|QWORD + v74|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v79|QWORD + v74|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v79|QWORD + v74|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v74|QWORD + 12], y: v72|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v74|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v74|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = MOVE v74|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v81|QWORD[.]] destination: B56 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B58" 
    xhandlers
    flags 
    probability 4579598228167754006
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1890 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1894 
=== Usages ===
=== Predecessor ===
v1892 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1894  <|@  <|@
f <@*|@fixed>@ <|@
tid v1894 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1895 
=== Predecessor ===
v1890 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B55" 
    successors "B59" 
    xhandlers
    flags 
    probability 4580259531889175745
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1895 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1894 v1896 
=== Succesors ===
next: a1904 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1894 v1896 #next: a1904  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1904 <|@
result v82|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v1880 i3371 i13 
=== Succesors ===
next: v1907 
=== Usages ===
a1908 
=== Predecessor ===
v1895 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v1880 i3371 i13 #next: v1907  <|@  <|@
f <@*|@fixed>@ <|@
tid v1907 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1906 
=== Predecessor ===
a1904 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v69|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v72|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.addAll(ArrayList.java:581) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v82|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v82|QWORD[.]] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4594445899282223279
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a1908 <|@
result v83|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v1906 
values: a1903 a1904 
=== Succesors ===
=== Usages ===
v3441 a1650 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1906 values: a1903 a1904  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1906 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1905 v1907 
=== Succesors ===
next: v2907 
=== Usages ===
a1908 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1905 v1907 #next: v2907  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2907 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v2480 
=== Usages ===
j2909 
=== Predecessor ===
v1906 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v2480  <|@  <|@
f <@~|@floating>@ <|@
tid v3441 <|@
result [v83|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1908 
index: - 
=== Succesors ===
=== Usages ===
j2909 j1941 j1939 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1908 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1185 <|@
result v84|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i3371 
=== Succesors ===
=== Usages ===
j1189 v1207 j2856 j2846 j2852 v3357 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i3371  <|@  <|@
f <@~|@floating>@ <|@
tid j1189 <|@
result v85|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j1185 
y: j1188 
=== Succesors ===
=== Usages ===
j1190 v1207 v2859 v2904 v2940 v3357 j3358 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1185 y: j1188  <|@  <|@
f <@~|@floating>@ <|@
tid j2856 <|@
result v86|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j1185 
y: j2855 
=== Succesors ===
=== Usages ===
v2857 v2902 v2938 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1185 y: j2855  <|@  <|@
f <@~|@floating>@ <|@
tid j2852 <|@
result v87|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j1185 
y: j2851 
=== Succesors ===
=== Usages ===
v2853 v2900 v2936 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1185 y: j2851  <|@  <|@
f <@~|@floating>@ <|@
tid j2846 <|@
result v88|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j1185 
y: j2845 
=== Succesors ===
=== Usages ===
v2847 v2849 v2898 v2934 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1185 y: j2845  <|@  <|@
f <@~|@floating>@ <|@
tid v2847 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2846 
y: j1818 
=== Succesors ===
=== Usages ===
v2483 v2360 v2415 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2846 y: j1818  <|@  <|@
f <@~|@floating>@ <|@
tid v1262 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3371 
y: i23 
=== Succesors ===
=== Usages ===
v3270 v3302 v3254 v2357 v2412 v2480 v3286 v3294 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3371 y: i23  <|@  <|@
f <@*|@fixed>@ <|@
tid v2480 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1262 
=== Succesors ===
trueSuccessor: v2478 
falseSuccessor: v2479 
=== Usages ===
=== Predecessor ===
v2907 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1262 #trueSuccessor: v2478 #falseSuccessor: v2479  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v83|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v84|QWORD = MOVSXD v72|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v85|QWORD = DEC v84|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v86|QWORD = LEA [v84|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v87|QWORD = LEA [v84|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v88|QWORD = LEA [v84|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v72|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B59 -> B60 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B75" 
    xhandlers
    flags 
    probability 4589942299654852783
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2478 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2496 
=== Usages ===
=== Predecessor ===
v2480 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2496  <|@  <|@
f <@*|@fixed>@ <|@
tid v2496 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2497 
=== Predecessor ===
v2478 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B60 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4589942299654852783
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2479 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2483 
=== Usages ===
=== Predecessor ===
v2480 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2483  <|@  <|@
f <@~|@floating>@ <|@
tid j2909 <|@
result v89|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v2907 
address: v3441 
=== Succesors ===
=== Usages ===
v3517 v3518 v3519 v3520 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v2907 address: v3441  <|@  <|@
f <@*|@fixed>@ <|@
tid v2483 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v2847 
=== Succesors ===
trueSuccessor: v2481 
falseSuccessor: v2482 
=== Usages ===
=== Predecessor ===
v2479 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2847 #trueSuccessor: v2481 #falseSuccessor: v2482  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v89|QWORD[.] = LEA [v83|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v88|QWORD, y: v88|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B66" 
    xhandlers
    flags 
    probability 4588077639523326214
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2481 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2492 
=== Usages ===
=== Predecessor ===
v2483 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2492  <|@  <|@
f <@*|@fixed>@ <|@
tid v2492 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2493 
=== Predecessor ===
v2481 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B62 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" 
    xhandlers
    flags 
    probability 4580935100400111791
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2482 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2484 
=== Usages ===
=== Predecessor ===
v2483 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2484  <|@  <|@
f <@*|@fixed>@ <|@
tid v2484 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2485 
=== Predecessor ===
v2482 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" "B197" 
    successors "B65" "B197" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4589942299654852783
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2928 <|@
result v90|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2485 
values: j1818 j2933 
=== Succesors ===
=== Usages ===
v3520 j2933 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2485 values: j1818 j2933  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2485 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v2484 
=== Succesors ===
next: v3210 
=== Usages ===
j2928 v2488 v2489 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v2484 #next: v3210  <|@  <|@
f <@~|@floating>@ <|@
tid v3520 <|@
result [v89|QWORD[.] + v90|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j2909 
index: j2928 
=== Succesors ===
=== Usages ===
v3210 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2909 index: j2928  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3210 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3520 
value: v3243 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2491 
=== Usages ===
=== Predecessor ===
v2485 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3520 value: v3243 stateAfter: - lastLocationAccess: - #next: v2491  <|@  <|@
f <@~|@floating>@ <|@
tid j2933 <|@
result v91|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2928 
y: j1770 
=== Succesors ===
=== Usages ===
j2922 j2928 v2934 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2928 y: j1770  <|@  <|@
f <@~|@floating>@ <|@
tid v2934 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2846 
y: j2933 
=== Succesors ===
=== Usages ===
v2491 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2846 y: j2933  <|@  <|@
f <@*|@fixed>@ <|@
tid v2491 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2934 
=== Succesors ===
trueSuccessor: v2488 
falseSuccessor: v2490 
=== Usages ===
=== Predecessor ===
v3210 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2934 #trueSuccessor: v2488 #falseSuccessor: v2490  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v90|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v89|QWORD[.] + v90|QWORD * 4], input: v6|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v91|QWORD = LEA [v90|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v91|QWORD, y: v88|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B64 -> B65 falseDestination: B64 -> B197 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B66" 
    xhandlers
    flags 
    probability 4580935100400111791
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2488 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v2485 
=== Succesors ===
next: v2494 
=== Usages ===
=== Predecessor ===
v2491 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v2485 #next: v2494  <|@  <|@
f <@*|@fixed>@ <|@
tid v2494 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2493 
=== Predecessor ===
v2488 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v91|QWORD] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B62" "B65" 
    successors "B67" "B68" 
    xhandlers
    flags 
    probability 4589942299654852783
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2922 <|@
result v92|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2493 
values: j1818 j2933 
=== Succesors ===
=== Usages ===
v3519 j2927 j2916 v2936 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2493 values: j1818 j2933  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2493 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2492 v2494 
=== Succesors ===
next: v2512 
=== Usages ===
j2922 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2492 v2494 #next: v2512  <|@  <|@
f <@~|@floating>@ <|@
tid v2936 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2852 
y: j2922 
=== Succesors ===
=== Usages ===
v2512 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2852 y: j2922  <|@  <|@
f <@*|@fixed>@ <|@
tid v2512 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2936 
=== Succesors ===
trueSuccessor: v2511 
falseSuccessor: v2510 
=== Usages ===
=== Predecessor ===
v2493 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2936 #trueSuccessor: v2511 #falseSuccessor: v2510  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v92|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v92|QWORD, y: v87|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B66 -> B67 falseDestination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    probability 4580935100400111791
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2511 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2515 
=== Usages ===
=== Predecessor ===
v2512 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2515  <|@  <|@
f <@*|@fixed>@ <|@
tid v2515 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2504 
=== Predecessor ===
v2511 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v92|QWORD] destination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    probability 4588077639523326214
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2510 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3209 
=== Usages ===
=== Predecessor ===
v2512 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3209  <|@  <|@
f <@~|@floating>@ <|@
tid v3519 <|@
result [v89|QWORD[.] + v92|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j2909 
index: j2922 
=== Succesors ===
=== Usages ===
v3209 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2909 index: j2922  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3209 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3519 
value: v3246 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2503 
=== Usages ===
=== Predecessor ===
v2510 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3519 value: v3246 stateAfter: - lastLocationAccess: - #next: v2503  <|@  <|@
f <@~|@floating>@ <|@
tid j2927 <|@
result v93|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2922 
y: j2813 
=== Succesors ===
=== Usages ===
j2916 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2922 y: j2813  <|@  <|@
f <@*|@fixed>@ <|@
tid v2503 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2504 
=== Predecessor ===
v3209 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v89|QWORD[.] + v92|QWORD * 4], input: v5|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v93|QWORD = LEA [v92|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v93|QWORD] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    probability 4589942299654852783
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2916 <|@
result v94|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2504 
values: j2927 j2922 
=== Succesors ===
=== Usages ===
v3518 j2921 j2910 v2938 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2504 values: j2927 j2922  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2504 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2503 v2515 
=== Succesors ===
next: v2518 
=== Usages ===
j2916 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2503 v2515 #next: v2518  <|@  <|@
f <@~|@floating>@ <|@
tid v2938 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2856 
y: j2916 
=== Succesors ===
=== Usages ===
v2518 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2856 y: j2916  <|@  <|@
f <@*|@fixed>@ <|@
tid v2518 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2938 
=== Succesors ===
trueSuccessor: v2517 
falseSuccessor: v2516 
=== Usages ===
=== Predecessor ===
v2504 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2938 #trueSuccessor: v2517 #falseSuccessor: v2516  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v94|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v94|QWORD, y: v86|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B69 -> B70 falseDestination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4580935100400111791
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2517 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2521 
=== Usages ===
=== Predecessor ===
v2518 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2521  <|@  <|@
f <@*|@fixed>@ <|@
tid v2521 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2507 
=== Predecessor ===
v2517 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v94|QWORD] destination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4588077639523326214
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2516 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3207 
=== Usages ===
=== Predecessor ===
v2518 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3207  <|@  <|@
f <@~|@floating>@ <|@
tid v3518 <|@
result [v89|QWORD[.] + v94|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j2909 
index: j2916 
=== Succesors ===
=== Usages ===
v3207 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2909 index: j2916  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3207 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3518 
value: v3245 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2506 
=== Usages ===
=== Predecessor ===
v2516 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3518 value: v3245 stateAfter: - lastLocationAccess: - #next: v2506  <|@  <|@
f <@~|@floating>@ <|@
tid j2921 <|@
result v95|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2916 
y: j2827 
=== Succesors ===
=== Usages ===
j2910 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2916 y: j2827  <|@  <|@
f <@*|@fixed>@ <|@
tid v2506 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2507 
=== Predecessor ===
v3207 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v89|QWORD[.] + v94|QWORD * 4], input: v4|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = LEA [v94|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v95|QWORD] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    probability 4589942299654852783
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2910 <|@
result v96|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2507 
values: j2921 j2916 
=== Succesors ===
=== Usages ===
v3517 v2940 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2507 values: j2921 j2916  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2507 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2506 v2521 
=== Succesors ===
next: v2524 
=== Usages ===
j2910 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2506 v2521 #next: v2524  <|@  <|@
f <@~|@floating>@ <|@
tid v2940 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1189 
y: j2910 
=== Succesors ===
=== Usages ===
v2524 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1189 y: j2910  <|@  <|@
f <@*|@fixed>@ <|@
tid v2524 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2940 
=== Succesors ===
trueSuccessor: v2523 
falseSuccessor: v2522 
=== Usages ===
=== Predecessor ===
v2507 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2940 #trueSuccessor: v2523 #falseSuccessor: v2522  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v96|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v96|QWORD, y: v85|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B72 -> B73 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" 
    xhandlers
    flags 
    probability 4580935100400111791
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2523 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2527 
=== Usages ===
=== Predecessor ===
v2524 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2527  <|@  <|@
f <@*|@fixed>@ <|@
tid v2527 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2497 
=== Predecessor ===
v2523 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B73 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" 
    xhandlers
    flags 
    probability 4588077639523326214
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2522 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3205 
=== Usages ===
=== Predecessor ===
v2524 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3205  <|@  <|@
f <@~|@floating>@ <|@
tid v3517 <|@
result [v89|QWORD[.] + v96|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j2909 
index: j2910 
=== Succesors ===
=== Usages ===
v3205 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2909 index: j2910  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3205 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3517 
value: a3244 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2509 
=== Usages ===
=== Predecessor ===
v2522 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3517 value: a3244 stateAfter: - lastLocationAccess: - #next: v2509  <|@  <|@
f <@*|@fixed>@ <|@
tid v2509 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2497 
=== Predecessor ===
v3205 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v89|QWORD[.] + v96|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B74 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B60" "B74" "B73" 
    successors "B76" "B77" 
    xhandlers
    flags 
    probability 4594445899282223279
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2497 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2496 v2509 v2527 
=== Succesors ===
next: v1938 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2496 v2509 v2527 #next: v1938  <|@  <|@
f <@~|@floating>@ <|@
tid i2005 <|@
result v97|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i32
=== Inputs ===
x: i3371 
y: i632 
=== Succesors ===
=== Usages ===
i2006 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i3371 y: i632  <|@  <|@
f <@~|@floating>@ <|@
tid i2006 <|@
result v98|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i2005 
y: i912 
=== Succesors ===
=== Usages ===
j2007 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i2005 y: i912  <|@  <|@
f <@~|@floating>@ <|@
tid j2007 <|@
result v99|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483644] ⇈fffffffffffffffc
=== Inputs ===
value: i2006 
=== Succesors ===
=== Usages ===
j2008 j1978 j1945 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2006  <|@  <|@
f <@~|@floating>@ <|@
tid v1267 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3371 
y: i13 
=== Succesors ===
=== Usages ===
v2001 v1938 v1971 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i3371 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v1938 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:154) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1267 
=== Succesors ===
trueSuccessor: v1936 
falseSuccessor: v1937 
=== Usages ===
=== Predecessor ===
v2497 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1267 #trueSuccessor: v1936 #falseSuccessor: v1937  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v97|DWORD = DEC v72|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v98|DWORD = SHL v97|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v99|QWORD = MOVSXD v98|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v72|DWORD, y: v72|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B75 -> B76 falseDestination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B80" 
    xhandlers
    flags 
    probability 4589942299654852783
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1936 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:155) [bci: 4]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1962 
=== Usages ===
=== Predecessor ===
v1938 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1962  <|@  <|@
f <@*|@fixed>@ <|@
tid v1962 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1961 
=== Predecessor ===
v1936 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B76 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B78" 
    xhandlers
    flags 
    probability 4589942299654852783
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1937 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:157) [bci: 5]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1939 
=== Usages ===
=== Predecessor ===
v1938 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1939  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1939 <|@
result [v83|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToFirstArrayElement(WriteBarrierSnippets.java:376) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:159) [bci: 20]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v3441 
=== Succesors ===
next: j1941 
=== Usages ===
j1940 
=== Predecessor ===
v1937 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v3441 #next: j1941  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1941 <|@
result [v83|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:385) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v3441 
=== Succesors ===
next: v1949 
=== Usages ===
j1945 
=== Predecessor ===
j1939 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v3441 #next: v1949  <|@  <|@
f <@~|@floating>@ <|@
tid j1945 <|@
result v101|QWORD[.] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 27]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i64
=== Inputs ===
x: j1941 
y: j2007 
=== Succesors ===
=== Usages ===
j1946 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1941 y: j2007  <|@  <|@
f <@~|@floating>@ <|@
tid j1946 <|@
result v102|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 34]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1945 
y: i1852 
=== Succesors ===
=== Usages ===
j1947 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1945 y: i1852  <|@  <|@
f <@~|@floating>@ <|@
tid j1940 <|@
result v103|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:159) [bci: 24]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1939 
y: i1852 
=== Succesors ===
=== Usages ===
j1947 j1960 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1939 y: i1852  <|@  <|@
f <@~|@floating>@ <|@
tid j1947 <|@
result v105|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:161) [bci: 41]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i64 [-36028797018963967 - 36028797018963967]
=== Inputs ===
x: j1946 
y: j1940 
=== Succesors ===
=== Usages ===
j1948 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j1946 y: j1940  <|@  <|@
f <@~|@floating>@ <|@
tid j1948 <|@
result v106|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:161) [bci: 43]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i64 [-36028797018963966 - 36028797018963968]
=== Inputs ===
x: j1947 
y: j1778 
=== Succesors ===
=== Usages ===
j1951 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1947 y: j1778  <|@  <|@
f <@*|@fixed>@ <|@
tid v1949 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1950 
=== Predecessor ===
j1941 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v100|QWORD[.] = LEA [v83|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v101|QWORD[.] = ADD (x: v100|QWORD[.], y: v99|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v102|QWORD[*] = SHR v101|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v104|QWORD[.] = LEA [v83|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v103|QWORD[*] = SHR v104|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v105|QWORD[*] = SUB (x: v102|QWORD[*], ~y: v103|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v106|QWORD[*] = INC v105|QWORD[*] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v106|QWORD[*]] destination: B77 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" "B196" 
    successors "B79" "B196" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4594445899282223279
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1951 <|@
result v107|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1950 
values: j1948 j1952 
=== Succesors ===
=== Usages ===
j1952 v1953 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1950 values: j1948 j1952  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1950 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 2.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v1949 
=== Succesors ===
next: v1956 
=== Usages ===
j1951 v1954 v1959 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v1949 #next: v1956  <|@  <|@
f <@~|@floating>@ <|@
tid v1953 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 55]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1951 
y: j1778 
=== Succesors ===
=== Usages ===
v1956 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1951 y: j1778  <|@  <|@
f <@*|@fixed>@ <|@
tid v1956 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 55]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1953 
=== Succesors ===
trueSuccessor: v1954 
falseSuccessor: v1955 
=== Usages ===
=== Predecessor ===
v1950 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1953 #trueSuccessor: v1954 #falseSuccessor: v1955  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v107|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v107|QWORD[*] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B78 -> B79 falseDestination: B78 -> B196 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B80" 
    xhandlers
    flags 
    probability 4589942299654852783
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1954 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:165) [bci: 76]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v1950 
=== Succesors ===
next: v1963 
=== Usages ===
=== Predecessor ===
v1956 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v1950 #next: v1963  <|@  <|@
f <@*|@fixed>@ <|@
tid v1963 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1961 
=== Predecessor ===
v1954 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B79 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B76" "B79" 
    successors "B81" "B195" 
    xhandlers
    flags 
    probability 4594445899282223279
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1961 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1962 v1963 
=== Succesors ===
next: a1650 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1962 v1963 #next: a1650  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1650 <|@
result v83|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a1908 
=== Succesors ===
next: v3373 
=== Usages ===
?739 v3426 ?221 a1174 ?757 ?757 v3437 
=== Predecessor ===
v1961 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1908 #next: v3373  <|@  <|@
f <@~|@floating>@ <|@
tid v3463 <|@
result [v70|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3368 
=== Succesors ===
=== Usages ===
v3373 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3368  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3373 <|@
result v108|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v3463 
=== Succesors ===
next: v896 
=== Usages ===
v3420 v2342 v2344 v2346 v3354 
=== Predecessor ===
a1650 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3463 #next: v896  <|@  <|@
f <@~|@floating>@ <|@
tid v3420 <|@
result [v108|DWORD * 8 + 696] <|@
d <@d|@=== Debug Properties ===
displacement: 696
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v3373 
=== Succesors ===
=== Usages ===
v896 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v3373  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v896 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
nullCheck: false
stamp: Method*!
=== Inputs ===
stateBefore: - 
guard: - 
address: v3420 
=== Succesors ===
next: v1312 
=== Usages ===
v542 
=== Predecessor ===
v3373 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3420 #next: v1312  <|@  <|@
f <@~|@floating>@ <|@
tid v540 <|@
result v109|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
rawvalue: meta{HotSpotMethod<AbstractList.listIterator(int)>}
stableDimension: 0
stamp: Method*!
stampKind: Method*
value: meta{HotSpotMethod<AbstractList.listIterator(int)>}
=== Inputs ===
=== Succesors ===
=== Usages ===
v542 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v542 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v896 
y: v540 
=== Succesors ===
=== Usages ===
v1312 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v896 y: v540  <|@  <|@
f <@*|@fixed>@ <|@
tid v1312 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=null target_method=listIterator target_method_class=Ljava/util/AbstractList; position=at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v542 
=== Succesors ===
trueSuccessor: v1309 
falseSuccessor: v1311 
=== Usages ===
=== Predecessor ===
v896 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v542 #trueSuccessor: v1309 #falseSuccessor: v1311  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v108|DWORD = MOV [v70|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v109|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<AbstractList.listIterator(int)>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v109|QWORD, y: [v108|DWORD * 8 + 696]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B195 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B82" "B85" 
    xhandlers
    flags 
    probability 4594445899282223279
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1309 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=null target_method=listIterator target_method_class=Ljava/util/AbstractList; position=at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v607 
=== Usages ===
=== Predecessor ===
v1312 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v607  <|@  <|@
f <@~|@floating>@ <|@
tid v2343 <|@
result meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
rawvalue: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2344 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2344 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v3373 
y: v2343 
=== Succesors ===
=== Usages ===
v667 v607 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v3373 y: v2343  <|@  <|@
f <@~|@floating>@ <|@
tid v3421 <|@
result [v70|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3368 
=== Succesors ===
=== Usages ===
a3377 a3374 i3376 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3368  <|@  <|@
f <@~|@floating>@ <|@
tid v2341 <|@
result meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
rawvalue: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2342 v3354 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v607 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Arrays$ArrayList; target_method=size target_method_class=Ljava/util/Arrays$ArrayList; position=at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
trueSuccessorProbability: 0.5468793050355748
=== Inputs ===
condition: v2344 
=== Succesors ===
trueSuccessor: v603 
falseSuccessor: v606 
=== Usages ===
=== Predecessor ===
v1309 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2344 #trueSuccessor: v603 #falseSuccessor: v606  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v108|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5468793050355748 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B83" "B84" 
    xhandlers
    flags 
    probability 4590437146253237157
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v603 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Arrays$ArrayList; target_method=size target_method_class=Ljava/util/Arrays$ArrayList; position=at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: a3374 
=== Usages ===
=== Predecessor ===
v607 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a3374  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3374 <|@
result v110|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Arrays$ArrayList.a
nodeSourcePosition: at java.util.Arrays$ArrayList.size(Arrays.java:3818) [bci: 1]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v3421 
=== Succesors ===
next: i3375 
=== Usages ===
v3427 
=== Predecessor ===
v603 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3421 #next: i3375  <|@  <|@
f <@~|@floating>@ <|@
tid v3427 <|@
result [v110|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3374 
=== Succesors ===
=== Usages ===
i3375 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3374  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3375 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.Arrays$ArrayList.size(Arrays.java:3818) [bci: 4]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v3427 
=== Succesors ===
next: v1320 
=== Usages ===
v819 
=== Predecessor ===
a3374 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v3427 #next: v1320  <|@  <|@
f <@~|@floating>@ <|@
tid v819 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3375 
y: i3372 
=== Succesors ===
=== Usages ===
v1320 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3375 y: i3372  <|@  <|@
f <@*|@fixed>@ <|@
tid v1320 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v819 
=== Succesors ===
trueSuccessor: v1319 
falseSuccessor: v1317 
=== Usages ===
=== Predecessor ===
i3375 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v819 #trueSuccessor: v1319 #falseSuccessor: v1317  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v110|DWORD[.] = MOV [v70|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.addAll(ArrayList.java:581) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction CMP (x: v73|DWORD, y: [v110|DWORD[.] * 8 + 12]) size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B82 -> B83 falseDestination: B82 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B237" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1319 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1713 
=== Usages ===
=== Predecessor ===
v1320 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1713  <|@  <|@
f <@~|@floating>@ <|@
tid i1714 <|@
result int[-251411|0xfffffffffffc29ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -251411
stableDimension: 0
stamp: i32 [-251411] ⇊00000000fffc29ed ⇈00000000fffc29ed
stampKind: i32
value: int[-251411|0xfffffffffffc29ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1689 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1713 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1686 
=== Predecessor ===
v1319 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-251411|0xfffffffffffc29ed], Object[null]] destination: B83 -> B237 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B93" 
    xhandlers
    flags 
    probability 4590437146253237157
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1317 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v815 
=== Usages ===
=== Predecessor ===
v1320 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v815  <|@  <|@
f <@*|@fixed>@ <|@
tid v815 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v813 
=== Predecessor ===
v1317 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B84 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B86" "B89" 
    xhandlers
    flags 
    probability 4589447453056468409
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v606 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v616 
=== Usages ===
=== Predecessor ===
v607 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v616  <|@  <|@
f <@~|@floating>@ <|@
tid v2345 <|@
result meta{HotSpotType<Ljava/util/Collections$EmptyList;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
rawvalue: meta{HotSpotType<Ljava/util/Collections$EmptyList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/Collections$EmptyList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2346 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2346 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v3373 
y: v2345 
=== Succesors ===
=== Usages ===
v616 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v3373 y: v2345  <|@  <|@
f <@*|@fixed>@ <|@
tid v616 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Collections$EmptyList; target_method=size target_method_class=Ljava/util/Collections$EmptyList; position=at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
trueSuccessorProbability: 0.5024679876958296
=== Inputs ===
condition: v2346 
=== Succesors ===
trueSuccessor: v612 
falseSuccessor: v615 
=== Usages ===
=== Predecessor ===
v606 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2346 #trueSuccessor: v612 #falseSuccessor: v615  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v108|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Collections$EmptyList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5024679876958296 condition: = trueDestination: B85 -> B86 falseDestination: B85 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B87" "B88" 
    xhandlers
    flags 
    probability 4584967462359288767
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v612 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Collections$EmptyList; target_method=size target_method_class=Ljava/util/Collections$EmptyList; position=at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1324 
=== Usages ===
=== Predecessor ===
v616 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1324  <|@  <|@
f <@~|@floating>@ <|@
tid v832 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3372 
y: i23 
=== Succesors ===
=== Usages ===
v1324 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3372 y: i23  <|@  <|@
f <@*|@fixed>@ <|@
tid v1324 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v832 
=== Succesors ===
trueSuccessor: v1321 
falseSuccessor: v1323 
=== Usages ===
=== Predecessor ===
v612 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v832 #trueSuccessor: v1321 #falseSuccessor: v1323  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v73|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B86 -> B87 falseDestination: B86 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B93" 
    xhandlers
    flags 
    probability 4584967462359288767
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1321 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v831 
=== Usages ===
=== Predecessor ===
v1324 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v831  <|@  <|@
f <@*|@fixed>@ <|@
tid v831 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v813 
=== Predecessor ===
v1321 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B87 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B237" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1323 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1717 
=== Usages ===
=== Predecessor ===
v1324 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1717  <|@  <|@
f <@~|@floating>@ <|@
tid i1718 <|@
result int[-251667|0xfffffffffffc28ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -251667
stableDimension: 0
stamp: i32 [-251667] ⇊00000000fffc28ed ⇈00000000fffc28ed
stampKind: i32
value: int[-251667|0xfffffffffffc28ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1689 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1717 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1686 
=== Predecessor ===
v1323 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-251667|0xfffffffffffc28ed], Object[null]] destination: B88 -> B237 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B90" "B194" 
    xhandlers
    flags 
    probability 4584920244498907059
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v615 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1328 
=== Usages ===
=== Predecessor ===
v616 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1328  <|@  <|@
f <@~|@floating>@ <|@
tid v3354 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v3373 
y: v2341 
=== Succesors ===
=== Usages ===
v1328 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v3373 y: v2341  <|@  <|@
f <@*|@fixed>@ <|@
tid v1328 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=size target_method_class=Lorg/graalvm/compiler/graph/NodeList; position=at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v3354 
=== Succesors ===
trueSuccessor: v1325 
falseSuccessor: v1327 
=== Usages ===
=== Predecessor ===
v615 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3354 #trueSuccessor: v1325 #falseSuccessor: v1327  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v108|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B89 -> B90 falseDestination: B89 -> B194 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B91" "B92" 
    xhandlers
    flags 
    probability 4584920244498907059
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1325 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=size target_method_class=Lorg/graalvm/compiler/graph/NodeList; position=at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: i3376 
=== Usages ===
=== Predecessor ===
v1328 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i3376  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3376 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: NodeList.size
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.size(NodeList.java:119) [bci: 1]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v3421 
=== Succesors ===
next: v1332 
=== Usages ===
v578 
=== Predecessor ===
v1325 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3421 #next: v1332  <|@  <|@
f <@~|@floating>@ <|@
tid v578 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3376 
y: i3372 
=== Succesors ===
=== Usages ===
v1332 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3376 y: i3372  <|@  <|@
f <@*|@fixed>@ <|@
tid v1332 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v578 
=== Succesors ===
trueSuccessor: v1331 
falseSuccessor: v1329 
=== Usages ===
=== Predecessor ===
i3376 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v578 #trueSuccessor: v1331 #falseSuccessor: v1329  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v73|DWORD, y: [v70|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B90 -> B91 falseDestination: B90 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B237" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1331 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1715 
=== Usages ===
=== Predecessor ===
v1332 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1715  <|@  <|@
f <@~|@floating>@ <|@
tid i1716 <|@
result int[-252691|0xfffffffffffc24ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -252691
stableDimension: 0
stamp: i32 [-252691] ⇊00000000fffc24ed ⇈00000000fffc24ed
stampKind: i32
value: int[-252691|0xfffffffffffc24ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1689 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1715 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1686 
=== Predecessor ===
v1331 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-252691|0xfffffffffffc24ed], Object[null]] destination: B91 -> B237 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B93" 
    xhandlers
    flags 
    probability 4584920244498907059
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1329 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v812 
=== Usages ===
=== Predecessor ===
v1332 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v812  <|@  <|@
f <@*|@fixed>@ <|@
tid v812 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v813 
=== Predecessor ===
v1329 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B92 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" "B84" "B87" 
    successors "B94" "B135" 
    xhandlers
    flags 
    probability 4594445899282223279
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v813 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v812 v815 v831 
=== Succesors ===
next: v667 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v812 v815 v831 #next: v667  <|@  <|@
f <@~|@floating>@ <|@
tid v3437 <|@
result [v83|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1650 
index: - 
=== Succesors ===
=== Usages ===
j2865 j2810 j1974 j2004 j1972 j2002 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1650 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1187 <|@
result v111|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i3372 
=== Succesors ===
=== Usages ===
j1190 v3436 v3438 j3358 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i3372  <|@  <|@
f <@~|@floating>@ <|@
tid a1725 <|@
result v112|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@1399295821
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@1399295821]
=== Inputs ===
=== Succesors ===
=== Usages ===
a1690 a1690 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a1733 <|@
result v113|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@1800298093
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@1800298093]
=== Inputs ===
=== Succesors ===
=== Usages ===
a1690 a1690 a1690 a1690 a1690 a1690 a1690 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid a399 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@396e90a6
hasIdentity: true
objectId: -1
stamp: a!# Ljava/util/SubList$1;
type: HotSpotType<Ljava/util/SubList$1;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?755 ?791 ?739 ?755 ?757 ?221 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid a652 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@204a1cd0
hasIdentity: true
objectId: -1
stamp: a!# Ljava/util/AbstractList$ListItr;
type: HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?661 ?1517 ?791 ?781 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?791 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a399 
values: - a652 a2 
=== Succesors ===
=== Usages ===
?739 ?221 ?1517 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a399 values: - a652 a2  <|@  <|@
f <@*|@fixed>@ <|@
tid v667 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Arrays$ArrayList; target_method=get target_method_class=Ljava/util/Arrays$ArrayList; position=at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
trueSuccessorProbability: 0.9304948647614187
=== Inputs ===
condition: v2344 
=== Succesors ===
trueSuccessor: v668 
falseSuccessor: v734 
=== Usages ===
=== Predecessor ===
v813 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2344 #trueSuccessor: v668 #falseSuccessor: v734  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v111|QWORD = MOVSXD v73|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v112|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1399295821] <|@ <|@
      nr   -1  <|@ instruction v113|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1800298093] <|@ <|@
      nr   -1  <|@ instruction CMP v108|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9304948647614187 condition: = trueDestination: B93 -> B94 falseDestination: B93 -> B135 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B95" "B96" 
    xhandlers
    flags 
    probability 4594079059589133148
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v668 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:138) [bci: 15]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: a3377 
=== Usages ===
=== Predecessor ===
v667 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a3377  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3377 <|@
result v114|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Arrays$ArrayList.a
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 1]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v3421 
=== Succesors ===
next: v1336 
=== Usages ===
a902 v903 v3422 
=== Predecessor ===
v668 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3421 #next: v1336  <|@  <|@
f <@~|@floating>@ <|@
tid v903 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
value: a3377 
=== Succesors ===
=== Usages ===
v1336 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a3377  <|@  <|@
f <@*|@fixed>@ <|@
tid v1336 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v903 
=== Succesors ===
trueSuccessor: v1335 
falseSuccessor: v1333 
=== Usages ===
=== Predecessor ===
a3377 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v903 #trueSuccessor: v1335 #falseSuccessor: v1333  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v114|DWORD[.] = MOV [v70|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v114|DWORD[.], y: v114|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B94 -> B95 falseDestination: B94 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B237" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1335 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1723 
=== Usages ===
=== Predecessor ===
v1336 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1723  <|@  <|@
f <@~|@floating>@ <|@
tid i1724 <|@
result int[-231435|0xfffffffffffc77f5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -231435
stableDimension: 0
stamp: i32 [-231435] ⇊00000000fffc77f5 ⇈00000000fffc77f5
stampKind: i32
value: int[-231435|0xfffffffffffc77f5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1689 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1723 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1686 
=== Predecessor ===
v1335 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-231435|0xfffffffffffc77f5], v112|QWORD[.]] destination: B95 -> B237 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" "B98" 
    xhandlers
    flags 
    probability 4594079059589133148
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1333 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3254 
=== Usages ===
=== Predecessor ===
v1336 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3254  <|@  <|@
f <@*|@fixed>@ <|@
tid v3254 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1262 
=== Succesors ===
trueSuccessor: v3250 
falseSuccessor: v3253 
=== Usages ===
=== Predecessor ===
v1333 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1262 #trueSuccessor: v3250 #falseSuccessor: v3253  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v72|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B96 -> B97 falseDestination: B96 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B101" 
    xhandlers
    flags 
    probability 4589575459961762652
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3250 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3248 
=== Usages ===
=== Predecessor ===
v3254 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3248  <|@  <|@
f <@*|@fixed>@ <|@
tid v3248 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3247 
=== Predecessor ===
v3250 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B97 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B99" "B134" 
    xhandlers
    flags 
    probability 4589575459961762652
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3253 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: i3378 
=== Usages ===
=== Predecessor ===
v3254 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i3378  <|@  <|@
f <@~|@floating>@ <|@
tid v3422 <|@
result [v114|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3377 
=== Succesors ===
=== Usages ===
i3378 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3377  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3378 <|@
result v115|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v3422 
=== Succesors ===
next: v3262 
=== Usages ===
v1201 j1198 
=== Predecessor ===
v3253 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3422 #next: v3262  <|@  <|@
f <@~|@floating>@ <|@
tid j1190 <|@
result v116|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j1187 
y: j1189 
=== Succesors ===
=== Usages ===
v1200 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1187 y: j1189  <|@  <|@
f <@~|@floating>@ <|@
tid j1198 <|@
result v117|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i3378 
=== Succesors ===
=== Usages ===
v1200 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i3378  <|@  <|@
f <@~|@floating>@ <|@
tid v1200 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1190 
y: j1198 
=== Succesors ===
=== Usages ===
v3262 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1190 y: j1198  <|@  <|@
f <@~|@floating>@ <|@
tid i1732 <|@
result int[-232731|0xfffffffffffc72e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -232731
stableDimension: 0
stamp: i32 [-232731] ⇊00000000fffc72e5 ⇈00000000fffc72e5
stampKind: i32
value: int[-232731|0xfffffffffffc72e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1689 i1689 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v3262 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1200 
=== Succesors ===
trueSuccessor: v3261 
falseSuccessor: v3258 
=== Usages ===
=== Predecessor ===
i3378 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1200 #trueSuccessor: v3261 #falseSuccessor: v3258  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v115|DWORD = MOV [v114|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v116|QWORD = ADD (x: v111|QWORD, y: v85|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v117|QWORD = MOV v115|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v117|QWORD, y: v116|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B98 -> B99 falseDestination: B98 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B100" "B133" 
    xhandlers
    flags 
    probability 4589575459961762652
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3261 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3260 
=== Usages ===
=== Predecessor ===
v3262 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3260  <|@  <|@
f <@~|@floating>@ <|@
tid v1201 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3372 
y: i3378 
=== Succesors ===
=== Usages ===
v3260 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i3372 y: i3378  <|@  <|@
f <@*|@fixed>@ <|@
tid v3260 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1201 
=== Succesors ===
trueSuccessor: v3251 
falseSuccessor: v3259 
=== Usages ===
=== Predecessor ===
v3261 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1201 #trueSuccessor: v3251 #falseSuccessor: v3259  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v115|DWORD, y: v73|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B99 -> B100 falseDestination: B99 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B101" 
    xhandlers
    flags 
    probability 4589575459961762652
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3251 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3249 
=== Usages ===
=== Predecessor ===
v3260 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3249  <|@  <|@
f <@*|@fixed>@ <|@
tid v3249 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3247 
=== Predecessor ===
v3251 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B100 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B97" "B100" 
    successors "B102" "B103" 
    xhandlers
    flags 
    probability 4594079059589133148
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3247 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3248 v3249 
=== Succesors ===
next: v3286 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3248 v3249 #next: v3286  <|@  <|@
f <@*|@fixed>@ <|@
tid v3286 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 44]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1262 
=== Succesors ===
trueSuccessor: v3282 
falseSuccessor: v3285 
=== Usages ===
=== Predecessor ===
v3247 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1262 #trueSuccessor: v3282 #falseSuccessor: v3285  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v72|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B101 -> B102 falseDestination: B101 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B105" 
    xhandlers
    flags 
    probability 4589575459961762652
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3282 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 44]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3280 
=== Usages ===
=== Predecessor ===
v3286 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3280  <|@  <|@
f <@*|@fixed>@ <|@
tid v3280 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 44]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3279 
=== Predecessor ===
v3282 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B102 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" "B132" 
    xhandlers
    flags 
    probability 4589575459961762652
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3285 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 44]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3326 
=== Usages ===
=== Predecessor ===
v3286 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3326  <|@  <|@
f <@~|@floating>@ <|@
tid v1207 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1189 
y: j1185 
=== Succesors ===
=== Usages ===
v3326 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1189 y: j1185  <|@  <|@
f <@*|@fixed>@ <|@
tid v3326 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 44]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1207 
=== Succesors ===
trueSuccessor: v3325 
falseSuccessor: v3322 
=== Usages ===
=== Predecessor ===
v3285 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1207 #trueSuccessor: v3325 #falseSuccessor: v3322  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v84|QWORD, y: v85|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B103 -> B104 falseDestination: B103 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B105" 
    xhandlers
    flags 
    probability 4589575459961762652
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3325 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 44]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3281 
=== Usages ===
=== Predecessor ===
v3326 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3281  <|@  <|@
f <@*|@fixed>@ <|@
tid v3281 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 44]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3279 
=== Predecessor ===
v3325 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B104 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B102" "B104" 
    successors "B106" "B107" 
    xhandlers
    flags 
    probability 4594079059589133148
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3279 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 44]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3280 v3281 
=== Succesors ===
next: v2807 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3280 v3281 #next: v2807  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2807 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v2357 
=== Usages ===
j2808 j2810 
=== Predecessor ===
v3279 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v2357  <|@  <|@
f <@*|@fixed>@ <|@
tid v2357 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1262 
=== Succesors ===
trueSuccessor: v2355 
falseSuccessor: v2356 
=== Usages ===
=== Predecessor ===
v2807 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1262 #trueSuccessor: v2355 #falseSuccessor: v2356  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v72|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B105 -> B106 falseDestination: B105 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B121" 
    xhandlers
    flags 
    probability 4589575459961762652
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2355 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2374 
=== Usages ===
=== Predecessor ===
v2357 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2374  <|@  <|@
f <@*|@fixed>@ <|@
tid v2374 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2375 
=== Predecessor ===
v2355 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B106 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" "B109" 
    xhandlers
    flags 
    probability 4589575459961762652
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2356 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2360 
=== Usages ===
=== Predecessor ===
v2357 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2360  <|@  <|@
f <@~|@floating>@ <|@
tid j2810 <|@
result v118|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v2807 
address: v3437 
=== Succesors ===
=== Usages ===
v3501 v3503 v3505 v3507 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v2807 address: v3437  <|@  <|@
f <@~|@floating>@ <|@
tid a902 <|@
result v119|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 1]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a3377 
=== Succesors ===
=== Usages ===
v3436 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a3377  <|@  <|@
f <@~|@floating>@ <|@
tid v3436 <|@
result [v119|QWORD[.] + v111|QWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a902 
index: j1187 
=== Succesors ===
=== Usages ===
j2808 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a902 index: j1187  <|@  <|@
f <@~|@floating>@ <|@
tid j2808 <|@
result v120|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v2807 
address: v3436 
=== Succesors ===
=== Usages ===
v3502 v3504 v3506 v3508 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v2807 address: v3436  <|@  <|@
f <@*|@fixed>@ <|@
tid v2360 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v2847 
=== Succesors ===
trueSuccessor: v2358 
falseSuccessor: v2359 
=== Usages ===
=== Predecessor ===
v2356 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2847 #trueSuccessor: v2358 #falseSuccessor: v2359  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v118|QWORD[.] = LEA [v83|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v119|QWORD[.] = UNCOMPRESSPOINTER (input: v114|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@eef3a58 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v120|QWORD[.] = LEA [v119|QWORD[.] + v111|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v88|QWORD, y: v88|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B107 -> B108 falseDestination: B107 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B112" 
    xhandlers
    flags 
    probability 4587527379983691018
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2358 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2370 
=== Usages ===
=== Predecessor ===
v2360 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2370  <|@  <|@
f <@*|@fixed>@ <|@
tid v2370 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2371 
=== Predecessor ===
v2358 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B108 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B110" 
    xhandlers
    flags 
    probability 4580568260707021660
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2359 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2361 
=== Usages ===
=== Predecessor ===
v2360 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2361  <|@  <|@
f <@*|@fixed>@ <|@
tid v2361 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2362 
=== Predecessor ===
v2359 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B109 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" "B131" 
    successors "B111" "B131" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4589575459961762652
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2837 <|@
result v121|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2362 
values: j1818 j2844 
=== Succesors ===
=== Usages ===
v3508 j2844 v3507 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2362 values: j1818 j2844  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2362 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v2361 
=== Succesors ===
next: v3379 
=== Usages ===
v3379 v2366 v2367 j2837 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v2361 #next: v3379  <|@  <|@
f <@~|@floating>@ <|@
tid v3508 <|@
result [v120|QWORD[.] + v121|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j2808 
index: j2837 
=== Succesors ===
=== Usages ===
v3379 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2808 index: j2837  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3379 <|@
result v122|V256_DWORD[........] <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: <n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;>
=== Inputs ===
stateBefore: - 
guard: v2362 
address: v3508 
=== Succesors ===
next: v3194 
=== Usages ===
v3194 
=== Predecessor ===
v2362 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2362 address: v3508 #next: v3194  <|@  <|@
f <@~|@floating>@ <|@
tid v3507 <|@
result [v118|QWORD[.] + v121|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j2810 
index: j2837 
=== Succesors ===
=== Usages ===
v3194 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2810 index: j2837  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3194 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: Object
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3507 
value: v3379 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2369 
=== Usages ===
=== Predecessor ===
v3379 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3507 value: v3379 stateAfter: - lastLocationAccess: - #next: v2369  <|@  <|@
f <@~|@floating>@ <|@
tid j2844 <|@
result v123|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2837 
y: j1770 
=== Succesors ===
=== Usages ===
j2829 j2837 v2849 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2837 y: j1770  <|@  <|@
f <@~|@floating>@ <|@
tid v2849 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2846 
y: j2844 
=== Succesors ===
=== Usages ===
v2369 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2846 y: j2844  <|@  <|@
f <@*|@fixed>@ <|@
tid v2369 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2849 
=== Succesors ===
trueSuccessor: v2366 
falseSuccessor: v2368 
=== Usages ===
=== Predecessor ===
v3194 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2849 #trueSuccessor: v2366 #falseSuccessor: v2368  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v121|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v122|V256_DWORD[........] = H [v120|QWORD[.] + v121|QWORD * 4] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v118|QWORD[.] + v121|QWORD * 4], input: v122|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v123|QWORD = LEA [v121|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v123|QWORD, y: v88|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B110 -> B111 falseDestination: B110 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B112" 
    xhandlers
    flags 
    probability 4580568260707021660
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2366 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v2362 
=== Succesors ===
next: v2372 
=== Usages ===
=== Predecessor ===
v2369 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v2362 #next: v2372  <|@  <|@
f <@*|@fixed>@ <|@
tid v2372 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2371 
=== Predecessor ===
v2366 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v123|QWORD] destination: B111 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B108" "B111" 
    successors "B113" "B114" 
    xhandlers
    flags 
    probability 4589575459961762652
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2829 <|@
result v124|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2371 
values: j1818 j2844 
=== Succesors ===
=== Usages ===
v3506 j2836 j2820 v2853 v3505 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2371 values: j1818 j2844  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2371 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2370 v2372 
=== Succesors ===
next: v2390 
=== Usages ===
j2829 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2370 v2372 #next: v2390  <|@  <|@
f <@~|@floating>@ <|@
tid v2853 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2852 
y: j2829 
=== Succesors ===
=== Usages ===
v2390 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2852 y: j2829  <|@  <|@
f <@*|@fixed>@ <|@
tid v2390 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2853 
=== Succesors ===
trueSuccessor: v2389 
falseSuccessor: v2388 
=== Usages ===
=== Predecessor ===
v2371 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2853 #trueSuccessor: v2389 #falseSuccessor: v2388  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v124|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v124|QWORD, y: v87|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B112 -> B113 falseDestination: B112 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B115" 
    xhandlers
    flags 
    probability 4580568260707021660
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2389 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2393 
=== Usages ===
=== Predecessor ===
v2390 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2393  <|@  <|@
f <@*|@fixed>@ <|@
tid v2393 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2382 
=== Predecessor ===
v2389 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v124|QWORD] destination: B113 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B115" 
    xhandlers
    flags 
    probability 4587527379983691018
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2388 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3380 
=== Usages ===
v3380 
=== Predecessor ===
v2390 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3380  <|@  <|@
f <@~|@floating>@ <|@
tid v3506 <|@
result [v120|QWORD[.] + v124|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j2808 
index: j2829 
=== Succesors ===
=== Usages ===
v3380 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2808 index: j2829  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3380 <|@
result v125|V128_DWORD[....] <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: <n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;>
=== Inputs ===
stateBefore: - 
guard: v2388 
address: v3506 
=== Succesors ===
next: v3192 
=== Usages ===
v3192 
=== Predecessor ===
v2388 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2388 address: v3506 #next: v3192  <|@  <|@
f <@~|@floating>@ <|@
tid v3505 <|@
result [v118|QWORD[.] + v124|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j2810 
index: j2829 
=== Succesors ===
=== Usages ===
v3192 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2810 index: j2829  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3192 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: Object
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3505 
value: v3380 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2381 
=== Usages ===
=== Predecessor ===
v3380 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3505 value: v3380 stateAfter: - lastLocationAccess: - #next: v2381  <|@  <|@
f <@~|@floating>@ <|@
tid j2836 <|@
result v126|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2829 
y: j2813 
=== Succesors ===
=== Usages ===
j2820 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2829 y: j2813  <|@  <|@
f <@*|@fixed>@ <|@
tid v2381 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2382 
=== Predecessor ===
v3192 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v125|V128_DWORD[....] = H [v120|QWORD[.] + v124|QWORD * 4] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v118|QWORD[.] + v124|QWORD * 4], input: v125|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v126|QWORD = LEA [v124|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v126|QWORD] destination: B114 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" "B113" 
    successors "B116" "B117" 
    xhandlers
    flags 
    probability 4589575459961762652
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2820 <|@
result v127|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2382 
values: j2836 j2829 
=== Succesors ===
=== Usages ===
v3504 j2828 j2811 v2857 v3503 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2382 values: j2836 j2829  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2382 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2381 v2393 
=== Succesors ===
next: v2396 
=== Usages ===
j2820 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2381 v2393 #next: v2396  <|@  <|@
f <@~|@floating>@ <|@
tid v2857 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2856 
y: j2820 
=== Succesors ===
=== Usages ===
v2396 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2856 y: j2820  <|@  <|@
f <@*|@fixed>@ <|@
tid v2396 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2857 
=== Succesors ===
trueSuccessor: v2395 
falseSuccessor: v2394 
=== Usages ===
=== Predecessor ===
v2382 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2857 #trueSuccessor: v2395 #falseSuccessor: v2394  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v127|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v127|QWORD, y: v86|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B115 -> B116 falseDestination: B115 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    probability 4580568260707021660
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2395 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2399 
=== Usages ===
=== Predecessor ===
v2396 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2399  <|@  <|@
f <@*|@fixed>@ <|@
tid v2399 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2385 
=== Predecessor ===
v2395 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v127|QWORD] destination: B116 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    probability 4587527379983691018
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2394 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3381 
=== Usages ===
v3381 
=== Predecessor ===
v2396 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3381  <|@  <|@
f <@~|@floating>@ <|@
tid v3504 <|@
result [v120|QWORD[.] + v127|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j2808 
index: j2820 
=== Succesors ===
=== Usages ===
v3381 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2808 index: j2820  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3381 <|@
result v128|V64_DWORD[..] <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: <n Ljava/lang/Object;,n Ljava/lang/Object;>
=== Inputs ===
stateBefore: - 
guard: v2394 
address: v3504 
=== Succesors ===
next: v3190 
=== Usages ===
v3190 
=== Predecessor ===
v2394 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2394 address: v3504 #next: v3190  <|@  <|@
f <@~|@floating>@ <|@
tid v3503 <|@
result [v118|QWORD[.] + v127|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j2810 
index: j2820 
=== Succesors ===
=== Usages ===
v3190 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2810 index: j2820  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3190 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: Object
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3503 
value: v3381 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2384 
=== Usages ===
=== Predecessor ===
v3381 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3503 value: v3381 stateAfter: - lastLocationAccess: - #next: v2384  <|@  <|@
f <@~|@floating>@ <|@
tid j2828 <|@
result v129|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2820 
y: j2827 
=== Succesors ===
=== Usages ===
j2811 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2820 y: j2827  <|@  <|@
f <@*|@fixed>@ <|@
tid v2384 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2385 
=== Predecessor ===
v3190 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v128|V64_DWORD[..] = H [v120|QWORD[.] + v127|QWORD * 4] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v118|QWORD[.] + v127|QWORD * 4], input: v128|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v129|QWORD = LEA [v127|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v129|QWORD] destination: B117 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B117" "B116" 
    successors "B119" "B120" 
    xhandlers
    flags 
    probability 4589575459961762652
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2811 <|@
result v130|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2385 
values: j2828 j2820 
=== Succesors ===
=== Usages ===
v3502 v2859 v3501 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2385 values: j2828 j2820  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2385 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2384 v2399 
=== Succesors ===
next: v2402 
=== Usages ===
j2811 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2384 v2399 #next: v2402  <|@  <|@
f <@~|@floating>@ <|@
tid v2859 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1189 
y: j2811 
=== Succesors ===
=== Usages ===
v2402 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1189 y: j2811  <|@  <|@
f <@*|@fixed>@ <|@
tid v2402 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2859 
=== Succesors ===
trueSuccessor: v2401 
falseSuccessor: v2400 
=== Usages ===
=== Predecessor ===
v2385 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2859 #trueSuccessor: v2401 #falseSuccessor: v2400  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v130|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v130|QWORD, y: v85|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B118 -> B119 falseDestination: B118 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B121" 
    xhandlers
    flags 
    probability 4580568260707021660
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2401 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2405 
=== Usages ===
=== Predecessor ===
v2402 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2405  <|@  <|@
f <@*|@fixed>@ <|@
tid v2405 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2375 
=== Predecessor ===
v2401 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B119 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B121" 
    xhandlers
    flags 
    probability 4587527379983691018
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2400 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a3382 
=== Usages ===
a3382 
=== Predecessor ===
v2402 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a3382  <|@  <|@
f <@~|@floating>@ <|@
tid v3502 <|@
result [v120|QWORD[.] + v130|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j2808 
index: j2811 
=== Succesors ===
=== Usages ===
a3382 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2808 index: j2811  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3382 <|@
result v131|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v2400 
address: v3502 
=== Succesors ===
next: v3188 
=== Usages ===
v3188 
=== Predecessor ===
v2400 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2400 address: v3502 #next: v3188  <|@  <|@
f <@~|@floating>@ <|@
tid v3501 <|@
result [v118|QWORD[.] + v130|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j2810 
index: j2811 
=== Succesors ===
=== Usages ===
v3188 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2810 index: j2811  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3188 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: Object
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3501 
value: a3382 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2387 
=== Usages ===
=== Predecessor ===
a3382 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3501 value: a3382 stateAfter: - lastLocationAccess: - #next: v2387  <|@  <|@
f <@*|@fixed>@ <|@
tid v2387 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2375 
=== Predecessor ===
v3188 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v131|DWORD[.] = MOV [v120|QWORD[.] + v130|QWORD * 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v118|QWORD[.] + v130|QWORD * 4], y: v131|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B120 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B106" "B120" "B119" 
    successors "B122" "B123" 
    xhandlers
    flags 
    probability 4594079059589133148
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2375 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2374 v2387 v2405 
=== Succesors ===
next: v1971 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2374 v2387 v2405 #next: v1971  <|@  <|@
f <@*|@fixed>@ <|@
tid v1971 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1267 
=== Succesors ===
trueSuccessor: v1969 
falseSuccessor: v1970 
=== Usages ===
=== Predecessor ===
v2375 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1267 #trueSuccessor: v1969 #falseSuccessor: v1970  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v72|DWORD, y: v72|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B121 -> B122 falseDestination: B121 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" 
    successors "B126" 
    xhandlers
    flags 
    probability 4589575459961762652
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1969 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1995 
=== Usages ===
=== Predecessor ===
v1971 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1995  <|@  <|@
f <@*|@fixed>@ <|@
tid v1995 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1994 
=== Predecessor ===
v1969 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B122 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B121" 
    successors "B124" 
    xhandlers
    flags 
    probability 4589575459961762652
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1970 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: j1972 
=== Usages ===
=== Predecessor ===
v1971 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1972  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1972 <|@
result [v83|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: v3437 
=== Succesors ===
next: j1974 
=== Usages ===
j1973 
=== Predecessor ===
v1970 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v3437 #next: j1974  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1974 <|@
result [v83|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: v3437 
=== Succesors ===
next: v1982 
=== Usages ===
j1978 
=== Predecessor ===
j1972 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v3437 #next: v1982  <|@  <|@
f <@~|@floating>@ <|@
tid j1978 <|@
result v133|QWORD[.] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1974 
y: j2007 
=== Succesors ===
=== Usages ===
j1979 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1974 y: j2007  <|@  <|@
f <@~|@floating>@ <|@
tid j1979 <|@
result v134|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1978 
y: i1852 
=== Succesors ===
=== Usages ===
j1980 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1978 y: i1852  <|@  <|@
f <@~|@floating>@ <|@
tid j1973 <|@
result v135|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1972 
y: i1852 
=== Succesors ===
=== Usages ===
j1980 j1993 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1972 y: i1852  <|@  <|@
f <@~|@floating>@ <|@
tid j1980 <|@
result v137|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i64 [-36028797018963967 - 36028797018963967]
=== Inputs ===
x: j1979 
y: j1973 
=== Succesors ===
=== Usages ===
j1981 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j1979 y: j1973  <|@  <|@
f <@~|@floating>@ <|@
tid j1981 <|@
result v138|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-36028797018963966 - 36028797018963968]
=== Inputs ===
x: j1980 
y: j1778 
=== Succesors ===
=== Usages ===
j1984 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1980 y: j1778  <|@  <|@
f <@*|@fixed>@ <|@
tid v1982 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1983 
=== Predecessor ===
j1974 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v132|QWORD[.] = LEA [v83|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v133|QWORD[.] = ADD (x: v132|QWORD[.], y: v99|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v134|QWORD[*] = SHR v133|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v136|QWORD[.] = LEA [v83|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[*] = SHR v136|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v137|QWORD[*] = SUB (x: v134|QWORD[*], ~y: v135|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v138|QWORD[*] = INC v137|QWORD[*] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v138|QWORD[*]] destination: B123 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B123" "B130" 
    successors "B125" "B130" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 1
    probability 4594079059589133148
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1984 <|@
result v139|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1983 
values: j1981 j1985 
=== Succesors ===
=== Usages ===
j1985 v1986 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1983 values: j1981 j1985  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1983 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 2.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v1982 
=== Succesors ===
next: v1989 
=== Usages ===
j1984 v1987 v1992 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v1982 #next: v1989  <|@  <|@
f <@~|@floating>@ <|@
tid v1986 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1984 
y: j1778 
=== Succesors ===
=== Usages ===
v1989 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1984 y: j1778  <|@  <|@
f <@*|@fixed>@ <|@
tid v1989 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1986 
=== Succesors ===
trueSuccessor: v1987 
falseSuccessor: v1988 
=== Usages ===
=== Predecessor ===
v1983 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1986 #trueSuccessor: v1987 #falseSuccessor: v1988  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v139|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v139|QWORD[*] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B124 -> B125 falseDestination: B124 -> B130 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors "B126" 
    xhandlers
    flags 
    probability 4589575459961762652
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1987 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v1983 
=== Succesors ===
next: v1996 
=== Usages ===
=== Predecessor ===
v1989 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v1983 #next: v1996  <|@  <|@
f <@*|@fixed>@ <|@
tid v1996 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1994 
=== Predecessor ===
v1987 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B125 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B122" "B125" 
    successors "B127" 
    xhandlers
    flags 
    probability 4594079059589133148
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1994 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1995 v1996 
=== Succesors ===
next: v214 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1995 v1996 #next: v214  <|@  <|@
f <@*|@fixed>@ <|@
tid v214 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:138) [bci: 15]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v215 
=== Predecessor ===
v1994 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0], v73|DWORD, int[-1|0xffffffffffffffff]] destination: B126 -> B127 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B126" "B128" 
    successors "B128" "B129" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 1
    probability 4603850469502835252
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i216 <|@
result v140|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v215 
values: i13 i233 
=== Succesors ===
=== Usages ===
i233 v218 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v215 values: i13 i233  <|@  <|@
f <@~|@floating>@ <|@
tid i654 <|@
result v141|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v215 
values: i3372 i475 
=== Succesors ===
=== Usages ===
i732 i655 i475 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v215 values: i3372 i475  <|@  <|@
f <@~|@floating>@ <|@
tid i655 <|@
result v142|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v215 
values: i632 i654 
=== Succesors ===
=== Usages ===
i733 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v215 values: i632 i654  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v215 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.622443122521394
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:138) [bci: 15]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 1
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v214 
=== Succesors ===
next: v222 
=== Usages ===
i216 v220 v234 i654 i655 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v214 #next: v222  <|@  <|@
f <@~|@floating>@ <|@
tid v218 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:138) [bci: 18]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i216 
y: i3371 
=== Succesors ===
=== Usages ===
v222 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i216 y: i3371  <|@  <|@
f <@*|@fixed>@ <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:138) [bci: 18]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
trueSuccessorProbability: 0.7836641850436589
=== Inputs ===
condition: v218 
=== Succesors ===
trueSuccessor: v219 
falseSuccessor: v220 
=== Usages ===
=== Predecessor ===
v215 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v218 #trueSuccessor: v219 #falseSuccessor: v220  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v140|DWORD, v141|DWORD, v142|DWORD] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v72|DWORD, y: v140|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7836641850436589 condition: > trueDestination: B127 -> B128 falseDestination: B127 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B127" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 1
    probability 4602566600183724730
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v219 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:139) [bci: 21]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v234 
=== Usages ===
=== Predecessor ===
v222 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v234  <|@  <|@
f <@~|@floating>@ <|@
tid i475 <|@
result v143|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:360) [bci: 26]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i32
=== Inputs ===
x: i654 
y: i23 
=== Succesors ===
=== Usages ===
i654 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i654 y: i23  <|@  <|@
f <@~|@floating>@ <|@
tid i233 <|@
result v144|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:138) [bci: 45]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i32
=== Inputs ===
x: i216 
y: i23 
=== Succesors ===
=== Usages ===
i216 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i216 y: i23  <|@  <|@
f <@*|@fixed>@ <|@
tid v234 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:138) [bci: 15]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
loopBegin: v215 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v219 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v215  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v143|DWORD = INC v141|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v144|DWORD = INC v140|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v144|DWORD, v143|DWORD, v141|DWORD] destination: B128 -> B127 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B190" 
    xhandlers
    flags 
    probability 4594079059589133149
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v220 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:143) [bci: 51]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v215 
=== Succesors ===
next: v726 
=== Usages ===
=== Predecessor ===
v222 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v215 #next: v726  <|@  <|@
f <@*|@fixed>@ <|@
tid v726 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v725 
=== Predecessor ===
v220 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v141|DWORD, v142|DWORD] destination: B129 -> B190 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors "B124" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 1
    probability 4589575459961762652
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1988 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1991 
=== Usages ===
=== Predecessor ===
v1989 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1991  <|@  <|@
f <@~|@floating>@ <|@
tid j1985 <|@
result v145|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1984 
y: j1188 
=== Succesors ===
=== Usages ===
j1984 j1990 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1984 y: j1188  <|@  <|@
f <@~|@floating>@ <|@
tid j1993 <|@
result v146|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [4682670080 - 36028801701634047] ⇈00ffffffffffffff
=== Inputs ===
x: j1973 
y: j1874 
=== Succesors ===
=== Usages ===
j1990 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1973 y: j1874  <|@  <|@
f <@~|@floating>@ <|@
tid j1990 <|@
result v147|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1985 
y: j1993 
=== Succesors ===
=== Usages ===
v1991 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1985 y: j1993  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1991 <|@
d <@d|@=== Debug Properties ===
kind: boolean
stamp: void
=== Inputs ===
address: j1990 
value: i13 
=== Succesors ===
next: v1992 
=== Usages ===
=== Predecessor ===
v1988 >@ <|@
instruction <@DirectStore|@org.graalvm.compiler.replacements.nodes.DirectStoreNode>@ address: j1990 value: i13 #next: v1992  <|@  <|@
f <@*|@fixed>@ <|@
tid v1992 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v1983 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1991 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v1983  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v145|QWORD[*] = DEC v139|QWORD[*] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v146|QWORD[*] = ADD (x: v135|QWORD[*], y: v3|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v147|QWORD[*] = ADD (x: v146|QWORD[*], y: v145|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v147|QWORD[*]], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v145|QWORD[*]] destination: B130 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B110" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4587527379983691018
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2368 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2367 
=== Usages ===
=== Predecessor ===
v2369 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2367  <|@  <|@
f <@*|@fixed>@ <|@
tid v2367 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v2362 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2368 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v2362  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v123|QWORD] destination: B131 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B237" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3322 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 44]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1734 
=== Usages ===
=== Predecessor ===
v3326 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1734  <|@  <|@
f <@~|@floating>@ <|@
tid i1735 <|@
result int[-235291|0xfffffffffffc68e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -235291
stableDimension: 0
stamp: i32 [-235291] ⇊00000000fffc68e5 ⇈00000000fffc68e5
stampKind: i32
value: int[-235291|0xfffffffffffc68e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1689 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1734 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1686 
=== Predecessor ===
v3322 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-235291|0xfffffffffffc68e5], v113|QWORD[.]] destination: B132 -> B237 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B237" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3259 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3549 
=== Usages ===
=== Predecessor ===
v3260 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3549  <|@  <|@
f <@*|@fixed>@ <|@
tid v3549 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1686 
=== Predecessor ===
v3259 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-232731|0xfffffffffffc72e5], v113|QWORD[.]] destination: B133 -> B237 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B237" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3258 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1731 
=== Usages ===
=== Predecessor ===
v3262 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1731  <|@  <|@
f <@*|@fixed>@ <|@
tid v1731 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1686 
=== Predecessor ===
v3258 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-232731|0xfffffffffffc72e5], v113|QWORD[.]] destination: B134 -> B237 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B136" "B177" 
    xhandlers
    flags 
    probability 4577023056870495540
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v734 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v735 
=== Usages ===
=== Predecessor ===
v667 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v735  <|@  <|@
f <@~|@floating>@ <|@
tid v2342 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v3373 
y: v2341 
=== Succesors ===
=== Usages ===
v735 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v3373 y: v2341  <|@  <|@
f <@~|@floating>@ <|@
tid v3357 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1189 
y: j1185 
=== Succesors ===
=== Usages ===
v3310 v3318 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1189 y: j1185  <|@  <|@
f <@*|@fixed>@ <|@
tid v735 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=get target_method_class=Lorg/graalvm/compiler/graph/NodeList; position=at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
trueSuccessorProbability: 0.9931451844203518
=== Inputs ===
condition: v2342 
=== Succesors ===
trueSuccessor: v736 
falseSuccessor: v796 
=== Usages ===
=== Predecessor ===
v734 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2342 #trueSuccessor: v736 #falseSuccessor: v796  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v108|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9931451844203518 condition: = trueDestination: B135 -> B136 falseDestination: B135 -> B177 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B135" 
    successors "B137" "B138" 
    xhandlers
    flags 
    probability 4576982822975400699
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v736 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a3383 
=== Usages ===
=== Predecessor ===
v735 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a3383  <|@  <|@
f <@~|@floating>@ <|@
tid v3423 <|@
result [v70|DWORD[.] * 8 + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3368 
=== Succesors ===
=== Usages ===
a3383 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3368  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3383 <|@
result v148|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: NodeList.nodes
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 23]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
nullCheck: false
stamp: n [Lorg/graalvm/compiler/graph/Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v3423 
=== Succesors ===
next: v1349 
=== Usages ===
a931 v932 v3424 
=== Predecessor ===
v736 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3423 #next: v1349  <|@  <|@
f <@~|@floating>@ <|@
tid v932 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
value: a3383 
=== Succesors ===
=== Usages ===
v1349 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a3383  <|@  <|@
f <@*|@fixed>@ <|@
tid v1349 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v932 
=== Succesors ===
trueSuccessor: v1348 
falseSuccessor: v1346 
=== Usages ===
=== Predecessor ===
a3383 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v932 #trueSuccessor: v1348 #falseSuccessor: v1346  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v148|DWORD[.] = MOV [v70|DWORD[.] * 8 + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v148|DWORD[.], y: v148|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B136 -> B137 falseDestination: B136 -> B138 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B237" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1348 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1726 
=== Usages ===
=== Predecessor ===
v1349 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1726  <|@  <|@
f <@~|@floating>@ <|@
tid i1727 <|@
result int[-238859|0xfffffffffffc5af5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -238859
stableDimension: 0
stamp: i32 [-238859] ⇊00000000fffc5af5 ⇈00000000fffc5af5
stampKind: i32
value: int[-238859|0xfffffffffffc5af5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1689 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1726 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1686 
=== Predecessor ===
v1348 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-238859|0xfffffffffffc5af5], v112|QWORD[.]] destination: B137 -> B237 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" "B140" 
    xhandlers
    flags 
    probability 4576982822975400699
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1346 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3270 
=== Usages ===
=== Predecessor ===
v1349 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3270  <|@  <|@
f <@*|@fixed>@ <|@
tid v3270 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1262 
=== Succesors ===
trueSuccessor: v3266 
falseSuccessor: v3269 
=== Usages ===
=== Predecessor ===
v1346 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1262 #trueSuccessor: v3266 #falseSuccessor: v3269  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v72|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B138 -> B139 falseDestination: B138 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B138" 
    successors "B143" 
    xhandlers
    flags 
    probability 4572479223348030203
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3266 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3264 
=== Usages ===
=== Predecessor ===
v3270 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3264  <|@  <|@
f <@*|@fixed>@ <|@
tid v3264 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3263 
=== Predecessor ===
v3266 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B139 -> B143 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B138" 
    successors "B141" "B176" 
    xhandlers
    flags 
    probability 4572479223348030203
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3269 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: i3384 
=== Usages ===
=== Predecessor ===
v3270 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i3384  <|@  <|@
f <@~|@floating>@ <|@
tid v3424 <|@
result [v148|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3383 
=== Succesors ===
=== Usages ===
i3384 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3383  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3384 <|@
result v149|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v3424 
=== Succesors ===
next: v3278 
=== Usages ===
v1222 j1219 
=== Predecessor ===
v3269 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3424 #next: v3278  <|@  <|@
f <@~|@floating>@ <|@
tid j3358 <|@
result v150|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j1187 
y: j1189 
=== Succesors ===
=== Usages ===
v1221 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1187 y: j1189  <|@  <|@
f <@~|@floating>@ <|@
tid j1219 <|@
result v151|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i3384 
=== Succesors ===
=== Usages ===
v1221 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i3384  <|@  <|@
f <@~|@floating>@ <|@
tid v1221 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3358 
y: j1219 
=== Succesors ===
=== Usages ===
v3278 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j3358 y: j1219  <|@  <|@
f <@~|@floating>@ <|@
tid i1739 <|@
result int[-240155|0xfffffffffffc55e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -240155
stableDimension: 0
stamp: i32 [-240155] ⇊00000000fffc55e5 ⇈00000000fffc55e5
stampKind: i32
value: int[-240155|0xfffffffffffc55e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1689 i1689 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v3278 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1221 
=== Succesors ===
trueSuccessor: v3277 
falseSuccessor: v3274 
=== Usages ===
=== Predecessor ===
i3384 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1221 #trueSuccessor: v3277 #falseSuccessor: v3274  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v149|DWORD = MOV [v148|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v150|QWORD = ADD (x: v111|QWORD, y: v85|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v151|QWORD = MOV v149|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v151|QWORD, y: v150|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B140 -> B141 falseDestination: B140 -> B176 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B142" "B175" 
    xhandlers
    flags 
    probability 4572479223348030203
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3277 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3276 
=== Usages ===
=== Predecessor ===
v3278 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3276  <|@  <|@
f <@~|@floating>@ <|@
tid v1222 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3372 
y: i3384 
=== Succesors ===
=== Usages ===
v3276 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i3372 y: i3384  <|@  <|@
f <@*|@fixed>@ <|@
tid v3276 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1222 
=== Succesors ===
trueSuccessor: v3267 
falseSuccessor: v3275 
=== Usages ===
=== Predecessor ===
v3277 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1222 #trueSuccessor: v3267 #falseSuccessor: v3275  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v149|DWORD, y: v73|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B141 -> B142 falseDestination: B141 -> B175 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B143" 
    xhandlers
    flags 
    probability 4572479223348030203
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3267 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3265 
=== Usages ===
=== Predecessor ===
v3276 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3265  <|@  <|@
f <@*|@fixed>@ <|@
tid v3265 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3263 
=== Predecessor ===
v3267 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B142 -> B143 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B139" "B142" 
    successors "B144" "B145" 
    xhandlers
    flags 
    probability 4576982822975400699
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3263 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3264 v3265 
=== Succesors ===
next: v3302 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3264 v3265 #next: v3302  <|@  <|@
f <@*|@fixed>@ <|@
tid v3302 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 44]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1262 
=== Succesors ===
trueSuccessor: v3298 
falseSuccessor: v3301 
=== Usages ===
=== Predecessor ===
v3263 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1262 #trueSuccessor: v3298 #falseSuccessor: v3301  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v72|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B143 -> B144 falseDestination: B143 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B143" 
    successors "B147" 
    xhandlers
    flags 
    probability 4572479223348030203
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3298 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 44]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3296 
=== Usages ===
=== Predecessor ===
v3302 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3296  <|@  <|@
f <@*|@fixed>@ <|@
tid v3296 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 44]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3295 
=== Predecessor ===
v3298 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B144 -> B147 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B143" 
    successors "B146" "B174" 
    xhandlers
    flags 
    probability 4572479223348030203
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3301 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 44]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3310 
=== Usages ===
=== Predecessor ===
v3302 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3310  <|@  <|@
f <@*|@fixed>@ <|@
tid v3310 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 44]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v3357 
=== Succesors ===
trueSuccessor: v3309 
falseSuccessor: v3306 
=== Usages ===
=== Predecessor ===
v3301 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3357 #trueSuccessor: v3309 #falseSuccessor: v3306  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v84|QWORD, y: v85|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B145 -> B146 falseDestination: B145 -> B174 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B145" 
    successors "B147" 
    xhandlers
    flags 
    probability 4572479223348030203
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3309 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 44]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3297 
=== Usages ===
=== Predecessor ===
v3310 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3297  <|@  <|@
f <@*|@fixed>@ <|@
tid v3297 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 44]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3295 
=== Predecessor ===
v3309 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B146 -> B147 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B144" "B146" 
    successors "B148" "B149" 
    xhandlers
    flags 
    probability 4576982822975400699
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3295 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 44]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3296 v3297 
=== Succesors ===
next: v2862 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3296 v3297 #next: v2862  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2862 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v2412 
=== Usages ===
j2863 j2865 
=== Predecessor ===
v3295 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v2412  <|@  <|@
f <@*|@fixed>@ <|@
tid v2412 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1262 
=== Succesors ===
trueSuccessor: v2410 
falseSuccessor: v2411 
=== Usages ===
=== Predecessor ===
v2862 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1262 #trueSuccessor: v2410 #falseSuccessor: v2411  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v72|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B147 -> B148 falseDestination: B147 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B147" 
    successors "B163" 
    xhandlers
    flags 
    probability 4572479223348030203
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2410 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2428 
=== Usages ===
=== Predecessor ===
v2412 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2428  <|@  <|@
f <@*|@fixed>@ <|@
tid v2428 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2429 
=== Predecessor ===
v2410 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B148 -> B163 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B147" 
    successors "B150" "B151" 
    xhandlers
    flags 
    probability 4572479223348030203
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2411 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2415 
=== Usages ===
=== Predecessor ===
v2412 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2415  <|@  <|@
f <@~|@floating>@ <|@
tid j2865 <|@
result v152|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v2862 
address: v3437 
=== Succesors ===
=== Usages ===
v3509 v3511 v3513 v3515 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v2862 address: v3437  <|@  <|@
f <@~|@floating>@ <|@
tid a931 <|@
result v153|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 23]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
op: Uncompress
stamp: a [Lorg/graalvm/compiler/graph/Node;
=== Inputs ===
value: a3383 
=== Succesors ===
=== Usages ===
v3438 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a3383  <|@  <|@
f <@~|@floating>@ <|@
tid v3438 <|@
result [v153|QWORD[.] + v111|QWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a931 
index: j1187 
=== Succesors ===
=== Usages ===
j2863 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a931 index: j1187  <|@  <|@
f <@~|@floating>@ <|@
tid j2863 <|@
result v154|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v2862 
address: v3438 
=== Succesors ===
=== Usages ===
v3510 v3512 v3514 v3516 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v2862 address: v3438  <|@  <|@
f <@*|@fixed>@ <|@
tid v2415 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v2847 
=== Succesors ===
trueSuccessor: v2413 
falseSuccessor: v2414 
=== Usages ===
=== Predecessor ===
v2411 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2847 #trueSuccessor: v2413 #falseSuccessor: v2414  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v152|QWORD[.] = LEA [v83|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v153|QWORD[.] = UNCOMPRESSPOINTER (input: v148|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@eef3a58 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v154|QWORD[.] = LEA [v153|QWORD[.] + v111|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v88|QWORD, y: v88|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B149 -> B150 falseDestination: B149 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B149" 
    successors "B154" 
    xhandlers
    flags 
    probability 4570890224317833336
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2413 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2424 
=== Usages ===
=== Predecessor ===
v2415 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2424  <|@  <|@
f <@*|@fixed>@ <|@
tid v2424 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2425 
=== Predecessor ===
v2413 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B150 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B149" 
    successors "B152" 
    xhandlers
    flags 
    probability 4563472024093289211
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2414 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2416 
=== Usages ===
=== Predecessor ===
v2415 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2416  <|@  <|@
f <@*|@fixed>@ <|@
tid v2416 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2417 
=== Predecessor ===
v2414 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B151 -> B152 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B151" "B173" 
    successors "B153" "B173" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 1
    probability 4572479223348030203
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2890 <|@
result v155|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2417 
values: j1818 j2897 
=== Succesors ===
=== Usages ===
v3516 j2897 v3515 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2417 values: j1818 j2897  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2417 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v2416 
=== Succesors ===
next: v3385 
=== Usages ===
v3385 v2420 v2421 j2890 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v2416 #next: v3385  <|@  <|@
f <@~|@floating>@ <|@
tid v3516 <|@
result [v154|QWORD[.] + v155|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j2863 
index: j2890 
=== Succesors ===
=== Usages ===
v3385 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2863 index: j2890  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3385 <|@
result v156|V256_DWORD[........] <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: <n Lorg/graalvm/compiler/graph/Node;,n Lorg/graalvm/compiler/graph/Node;,n Lorg/graalvm/compiler/graph/Node;,n Lorg/graalvm/compiler/graph/Node;,n Lorg/graalvm/compiler/graph/Node;,n Lorg/graalvm/compiler/graph/Node;,n Lorg/graalvm/compiler/graph/Node;,n Lorg/graalvm/compiler/graph/Node;>
=== Inputs ===
stateBefore: - 
guard: v2417 
address: v3516 
=== Succesors ===
next: v3202 
=== Usages ===
v3202 
=== Predecessor ===
v2417 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2417 address: v3516 #next: v3202  <|@  <|@
f <@~|@floating>@ <|@
tid v3515 <|@
result [v152|QWORD[.] + v155|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j2865 
index: j2890 
=== Succesors ===
=== Usages ===
v3202 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2865 index: j2890  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3202 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: Object
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3515 
value: v3385 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2423 
=== Usages ===
=== Predecessor ===
v3385 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3515 value: v3385 stateAfter: - lastLocationAccess: - #next: v2423  <|@  <|@
f <@~|@floating>@ <|@
tid j2897 <|@
result v157|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2890 
y: j1770 
=== Succesors ===
=== Usages ===
j2882 j2890 v2898 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2890 y: j1770  <|@  <|@
f <@~|@floating>@ <|@
tid v2898 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2846 
y: j2897 
=== Succesors ===
=== Usages ===
v2423 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2846 y: j2897  <|@  <|@
f <@*|@fixed>@ <|@
tid v2423 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2898 
=== Succesors ===
trueSuccessor: v2420 
falseSuccessor: v2422 
=== Usages ===
=== Predecessor ===
v3202 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2898 #trueSuccessor: v2420 #falseSuccessor: v2422  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v155|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v156|V256_DWORD[........] = H [v154|QWORD[.] + v155|QWORD * 4] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v152|QWORD[.] + v155|QWORD * 4], input: v156|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v157|QWORD = LEA [v155|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v157|QWORD, y: v88|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B152 -> B153 falseDestination: B152 -> B173 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B153"
    from_bci -1
    to_bci -1
    predecessors "B152" 
    successors "B154" 
    xhandlers
    flags 
    probability 4563472024093289211
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2420 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v2417 
=== Succesors ===
next: v2426 
=== Usages ===
=== Predecessor ===
v2423 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v2417 #next: v2426  <|@  <|@
f <@*|@fixed>@ <|@
tid v2426 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2425 
=== Predecessor ===
v2420 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v157|QWORD] destination: B153 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B154"
    from_bci -1
    to_bci -1
    predecessors "B150" "B153" 
    successors "B155" "B156" 
    xhandlers
    flags 
    probability 4572479223348030203
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2882 <|@
result v158|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2425 
values: j1818 j2897 
=== Succesors ===
=== Usages ===
v3514 j2889 j2874 v2900 v3513 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2425 values: j1818 j2897  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2425 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2424 v2426 
=== Succesors ===
next: v2444 
=== Usages ===
j2882 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2424 v2426 #next: v2444  <|@  <|@
f <@~|@floating>@ <|@
tid v2900 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2852 
y: j2882 
=== Succesors ===
=== Usages ===
v2444 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2852 y: j2882  <|@  <|@
f <@*|@fixed>@ <|@
tid v2444 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2900 
=== Succesors ===
trueSuccessor: v2443 
falseSuccessor: v2442 
=== Usages ===
=== Predecessor ===
v2425 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2900 #trueSuccessor: v2443 #falseSuccessor: v2442  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v158|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v158|QWORD, y: v87|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B154 -> B155 falseDestination: B154 -> B156 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B155"
    from_bci -1
    to_bci -1
    predecessors "B154" 
    successors "B157" 
    xhandlers
    flags 
    probability 4563472024093289211
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2443 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2447 
=== Usages ===
=== Predecessor ===
v2444 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2447  <|@  <|@
f <@*|@fixed>@ <|@
tid v2447 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2436 
=== Predecessor ===
v2443 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v158|QWORD] destination: B155 -> B157 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B156"
    from_bci -1
    to_bci -1
    predecessors "B154" 
    successors "B157" 
    xhandlers
    flags 
    probability 4570890224317833336
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2442 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3386 
=== Usages ===
v3386 
=== Predecessor ===
v2444 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3386  <|@  <|@
f <@~|@floating>@ <|@
tid v3514 <|@
result [v154|QWORD[.] + v158|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j2863 
index: j2882 
=== Succesors ===
=== Usages ===
v3386 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2863 index: j2882  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3386 <|@
result v159|V128_DWORD[....] <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: <n Lorg/graalvm/compiler/graph/Node;,n Lorg/graalvm/compiler/graph/Node;,n Lorg/graalvm/compiler/graph/Node;,n Lorg/graalvm/compiler/graph/Node;>
=== Inputs ===
stateBefore: - 
guard: v2442 
address: v3514 
=== Succesors ===
next: v3200 
=== Usages ===
v3200 
=== Predecessor ===
v2442 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2442 address: v3514 #next: v3200  <|@  <|@
f <@~|@floating>@ <|@
tid v3513 <|@
result [v152|QWORD[.] + v158|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j2865 
index: j2882 
=== Succesors ===
=== Usages ===
v3200 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2865 index: j2882  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3200 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: Object
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3513 
value: v3386 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2435 
=== Usages ===
=== Predecessor ===
v3386 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3513 value: v3386 stateAfter: - lastLocationAccess: - #next: v2435  <|@  <|@
f <@~|@floating>@ <|@
tid j2889 <|@
result v160|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2882 
y: j2813 
=== Succesors ===
=== Usages ===
j2874 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2882 y: j2813  <|@  <|@
f <@*|@fixed>@ <|@
tid v2435 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2436 
=== Predecessor ===
v3200 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v159|V128_DWORD[....] = H [v154|QWORD[.] + v158|QWORD * 4] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v152|QWORD[.] + v158|QWORD * 4], input: v159|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v160|QWORD = LEA [v158|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v160|QWORD] destination: B156 -> B157 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B157"
    from_bci -1
    to_bci -1
    predecessors "B156" "B155" 
    successors "B158" "B159" 
    xhandlers
    flags 
    probability 4572479223348030203
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2874 <|@
result v161|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2436 
values: j2889 j2882 
=== Succesors ===
=== Usages ===
v3512 j2881 j2866 v2902 v3511 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2436 values: j2889 j2882  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2436 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2435 v2447 
=== Succesors ===
next: v2450 
=== Usages ===
j2874 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2435 v2447 #next: v2450  <|@  <|@
f <@~|@floating>@ <|@
tid v2902 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2856 
y: j2874 
=== Succesors ===
=== Usages ===
v2450 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2856 y: j2874  <|@  <|@
f <@*|@fixed>@ <|@
tid v2450 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2902 
=== Succesors ===
trueSuccessor: v2449 
falseSuccessor: v2448 
=== Usages ===
=== Predecessor ===
v2436 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2902 #trueSuccessor: v2449 #falseSuccessor: v2448  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v161|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v161|QWORD, y: v86|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B157 -> B158 falseDestination: B157 -> B159 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B158"
    from_bci -1
    to_bci -1
    predecessors "B157" 
    successors "B160" 
    xhandlers
    flags 
    probability 4563472024093289211
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2449 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2453 
=== Usages ===
=== Predecessor ===
v2450 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2453  <|@  <|@
f <@*|@fixed>@ <|@
tid v2453 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2439 
=== Predecessor ===
v2449 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v161|QWORD] destination: B158 -> B160 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B159"
    from_bci -1
    to_bci -1
    predecessors "B157" 
    successors "B160" 
    xhandlers
    flags 
    probability 4570890224317833336
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2448 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3387 
=== Usages ===
v3387 
=== Predecessor ===
v2450 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3387  <|@  <|@
f <@~|@floating>@ <|@
tid v3512 <|@
result [v154|QWORD[.] + v161|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j2863 
index: j2874 
=== Succesors ===
=== Usages ===
v3387 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2863 index: j2874  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3387 <|@
result v162|V64_DWORD[..] <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: <n Lorg/graalvm/compiler/graph/Node;,n Lorg/graalvm/compiler/graph/Node;>
=== Inputs ===
stateBefore: - 
guard: v2448 
address: v3512 
=== Succesors ===
next: v3198 
=== Usages ===
v3198 
=== Predecessor ===
v2448 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2448 address: v3512 #next: v3198  <|@  <|@
f <@~|@floating>@ <|@
tid v3511 <|@
result [v152|QWORD[.] + v161|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j2865 
index: j2874 
=== Succesors ===
=== Usages ===
v3198 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2865 index: j2874  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3198 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: Object
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3511 
value: v3387 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2438 
=== Usages ===
=== Predecessor ===
v3387 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3511 value: v3387 stateAfter: - lastLocationAccess: - #next: v2438  <|@  <|@
f <@~|@floating>@ <|@
tid j2881 <|@
result v163|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2874 
y: j2827 
=== Succesors ===
=== Usages ===
j2866 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2874 y: j2827  <|@  <|@
f <@*|@fixed>@ <|@
tid v2438 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2439 
=== Predecessor ===
v3198 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v162|V64_DWORD[..] = H [v154|QWORD[.] + v161|QWORD * 4] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v152|QWORD[.] + v161|QWORD * 4], input: v162|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v163|QWORD = LEA [v161|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v163|QWORD] destination: B159 -> B160 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B160"
    from_bci -1
    to_bci -1
    predecessors "B159" "B158" 
    successors "B161" "B162" 
    xhandlers
    flags 
    probability 4572479223348030203
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2866 <|@
result v164|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2439 
values: j2881 j2874 
=== Succesors ===
=== Usages ===
v3510 v2904 v3509 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2439 values: j2881 j2874  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2439 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2438 v2453 
=== Succesors ===
next: v2456 
=== Usages ===
j2866 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2438 v2453 #next: v2456  <|@  <|@
f <@~|@floating>@ <|@
tid v2904 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1189 
y: j2866 
=== Succesors ===
=== Usages ===
v2456 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1189 y: j2866  <|@  <|@
f <@*|@fixed>@ <|@
tid v2456 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2904 
=== Succesors ===
trueSuccessor: v2455 
falseSuccessor: v2454 
=== Usages ===
=== Predecessor ===
v2439 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2904 #trueSuccessor: v2455 #falseSuccessor: v2454  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v164|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v164|QWORD, y: v85|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B160 -> B161 falseDestination: B160 -> B162 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B161"
    from_bci -1
    to_bci -1
    predecessors "B160" 
    successors "B163" 
    xhandlers
    flags 
    probability 4563472024093289211
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2455 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2459 
=== Usages ===
=== Predecessor ===
v2456 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2459  <|@  <|@
f <@*|@fixed>@ <|@
tid v2459 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2429 
=== Predecessor ===
v2455 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B161 -> B163 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B162"
    from_bci -1
    to_bci -1
    predecessors "B160" 
    successors "B163" 
    xhandlers
    flags 
    probability 4570890224317833336
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2454 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a3388 
=== Usages ===
a3388 
=== Predecessor ===
v2456 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a3388  <|@  <|@
f <@~|@floating>@ <|@
tid v3510 <|@
result [v154|QWORD[.] + v164|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j2863 
index: j2866 
=== Succesors ===
=== Usages ===
a3388 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2863 index: j2866  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3388 <|@
result v165|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: n Lorg/graalvm/compiler/graph/Node;
=== Inputs ===
stateBefore: - 
guard: v2454 
address: v3510 
=== Succesors ===
next: v3196 
=== Usages ===
v3196 
=== Predecessor ===
v2454 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2454 address: v3510 #next: v3196  <|@  <|@
f <@~|@floating>@ <|@
tid v3509 <|@
result [v152|QWORD[.] + v164|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j2865 
index: j2866 
=== Succesors ===
=== Usages ===
v3196 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2865 index: j2866  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3196 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: Object
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3509 
value: a3388 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2441 
=== Usages ===
=== Predecessor ===
a3388 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3509 value: a3388 stateAfter: - lastLocationAccess: - #next: v2441  <|@  <|@
f <@*|@fixed>@ <|@
tid v2441 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2429 
=== Predecessor ===
v3196 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v165|DWORD[.] = MOV [v154|QWORD[.] + v164|QWORD * 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v152|QWORD[.] + v164|QWORD * 4], y: v165|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B162 -> B163 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B163"
    from_bci -1
    to_bci -1
    predecessors "B148" "B162" "B161" 
    successors "B164" "B165" 
    xhandlers
    flags 
    probability 4576982822975400699
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2429 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2428 v2441 v2459 
=== Succesors ===
next: v2001 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2428 v2441 v2459 #next: v2001  <|@  <|@
f <@*|@fixed>@ <|@
tid v2001 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1267 
=== Succesors ===
trueSuccessor: v1999 
falseSuccessor: v2000 
=== Usages ===
=== Predecessor ===
v2429 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1267 #trueSuccessor: v1999 #falseSuccessor: v2000  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v72|DWORD, y: v72|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B163 -> B164 falseDestination: B163 -> B165 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B164"
    from_bci -1
    to_bci -1
    predecessors "B163" 
    successors "B168" 
    xhandlers
    flags 
    probability 4572479223348030203
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1999 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2025 
=== Usages ===
=== Predecessor ===
v2001 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2025  <|@  <|@
f <@*|@fixed>@ <|@
tid v2025 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2024 
=== Predecessor ===
v1999 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B164 -> B168 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B165"
    from_bci -1
    to_bci -1
    predecessors "B163" 
    successors "B166" 
    xhandlers
    flags 
    probability 4572479223348030203
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2000 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: j2002 
=== Usages ===
=== Predecessor ===
v2001 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2002  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2002 <|@
result [v83|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: v3437 
=== Succesors ===
next: j2004 
=== Usages ===
j2003 
=== Predecessor ===
v2000 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v3437 #next: j2004  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2004 <|@
result [v83|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: v3437 
=== Succesors ===
next: v2012 
=== Usages ===
j2008 
=== Predecessor ===
j2002 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v3437 #next: v2012  <|@  <|@
f <@~|@floating>@ <|@
tid j2008 <|@
result v167|QWORD[.] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2004 
y: j2007 
=== Succesors ===
=== Usages ===
j2009 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2004 y: j2007  <|@  <|@
f <@~|@floating>@ <|@
tid j2009 <|@
result v168|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j2008 
y: i1852 
=== Succesors ===
=== Usages ===
j2010 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j2008 y: i1852  <|@  <|@
f <@~|@floating>@ <|@
tid j2003 <|@
result v169|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j2002 
y: i1852 
=== Succesors ===
=== Usages ===
j2010 j2023 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j2002 y: i1852  <|@  <|@
f <@~|@floating>@ <|@
tid j2010 <|@
result v171|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i64 [-36028797018963967 - 36028797018963967]
=== Inputs ===
x: j2009 
y: j2003 
=== Succesors ===
=== Usages ===
j2011 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j2009 y: j2003  <|@  <|@
f <@~|@floating>@ <|@
tid j2011 <|@
result v172|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-36028797018963966 - 36028797018963968]
=== Inputs ===
x: j2010 
y: j1778 
=== Succesors ===
=== Usages ===
j2014 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2010 y: j1778  <|@  <|@
f <@*|@fixed>@ <|@
tid v2012 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2013 
=== Predecessor ===
j2004 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v166|QWORD[.] = LEA [v83|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v167|QWORD[.] = ADD (x: v166|QWORD[.], y: v99|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v168|QWORD[*] = SHR v167|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v170|QWORD[.] = LEA [v83|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v169|QWORD[*] = SHR v170|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v171|QWORD[*] = SUB (x: v168|QWORD[*], ~y: v169|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v172|QWORD[*] = INC v171|QWORD[*] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v172|QWORD[*]] destination: B165 -> B166 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B166"
    from_bci -1
    to_bci -1
    predecessors "B165" "B172" 
    successors "B167" "B172" 
    xhandlers
    flags "llh" 
    loop_index 9
    loop_depth 1
    probability 4576982822975400699
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2014 <|@
result v173|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2013 
values: j2011 j2015 
=== Succesors ===
=== Usages ===
j2015 v2016 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2013 values: j2011 j2015  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2013 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 2.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v2012 
=== Succesors ===
next: v2019 
=== Usages ===
j2014 v2017 v2022 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v2012 #next: v2019  <|@  <|@
f <@~|@floating>@ <|@
tid v2016 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2014 
y: j1778 
=== Succesors ===
=== Usages ===
v2019 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2014 y: j1778  <|@  <|@
f <@*|@fixed>@ <|@
tid v2019 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v2016 
=== Succesors ===
trueSuccessor: v2017 
falseSuccessor: v2018 
=== Usages ===
=== Predecessor ===
v2013 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2016 #trueSuccessor: v2017 #falseSuccessor: v2018  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v173|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v173|QWORD[*] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B166 -> B167 falseDestination: B166 -> B172 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B167"
    from_bci -1
    to_bci -1
    predecessors "B166" 
    successors "B168" 
    xhandlers
    flags 
    probability 4572479223348030203
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2017 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v2013 
=== Succesors ===
next: v2026 
=== Usages ===
=== Predecessor ===
v2019 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v2013 #next: v2026  <|@  <|@
f <@*|@fixed>@ <|@
tid v2026 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2024 
=== Predecessor ===
v2017 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B167 -> B168 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B168"
    from_bci -1
    to_bci -1
    predecessors "B164" "B167" 
    successors "B169" 
    xhandlers
    flags 
    probability 4576982822975400699
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2024 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2025 v2026 
=== Succesors ===
next: v724 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2025 v2026 #next: v724  <|@  <|@
f <@*|@fixed>@ <|@
tid v724 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v669 
=== Predecessor ===
v2024 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0], v73|DWORD, int[-1|0xffffffffffffffff]] destination: B168 -> B169 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B169"
    from_bci -1
    to_bci -1
    predecessors "B168" "B170" 
    successors "B170" "B171" 
    xhandlers
    flags "llh" 
    loop_index 10
    loop_depth 1
    probability 4586897108778445428
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i670 <|@
result v174|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v669 
values: i13 i680 
=== Succesors ===
=== Usages ===
i680 v672 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v669 values: i13 i680  <|@  <|@
f <@~|@floating>@ <|@
tid i717 <|@
result v175|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v669 
values: i3372 i693 
=== Succesors ===
=== Usages ===
i693 i732 i718 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v669 values: i3372 i693  <|@  <|@
f <@~|@floating>@ <|@
tid i718 <|@
result v176|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v669 
values: i632 i717 
=== Succesors ===
=== Usages ===
i733 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v669 values: i632 i717  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v669 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.622443122521394
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:138) [bci: 15]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 2
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v724 
=== Succesors ===
next: v676 
=== Usages ===
i670 v674 v681 i717 i718 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v724 #next: v676  <|@  <|@
f <@~|@floating>@ <|@
tid v672 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:138) [bci: 18]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i670 
y: i3371 
=== Succesors ===
=== Usages ===
v676 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i670 y: i3371  <|@  <|@
f <@*|@fixed>@ <|@
tid v676 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:138) [bci: 18]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
trueSuccessorProbability: 0.7836641850436589
=== Inputs ===
condition: v672 
=== Succesors ===
trueSuccessor: v673 
falseSuccessor: v674 
=== Usages ===
=== Predecessor ===
v669 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v672 #trueSuccessor: v673 #falseSuccessor: v674  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v174|DWORD, v175|DWORD, v176|DWORD] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v72|DWORD, y: v174|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7836641850436589 condition: > trueDestination: B169 -> B170 falseDestination: B169 -> B171 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B170"
    from_bci -1
    to_bci -1
    predecessors "B169" 
    successors "B169" 
    xhandlers
    flags "lle" 
    loop_index 10
    loop_depth 1
    probability 4585439808479858613
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v673 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:139) [bci: 21]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v681 
=== Usages ===
=== Predecessor ===
v676 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v681  <|@  <|@
f <@~|@floating>@ <|@
tid i693 <|@
result v177|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:360) [bci: 26]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i32
=== Inputs ===
x: i717 
y: i23 
=== Succesors ===
=== Usages ===
i717 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i717 y: i23  <|@  <|@
f <@~|@floating>@ <|@
tid i680 <|@
result v178|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:138) [bci: 45]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i32
=== Inputs ===
x: i670 
y: i23 
=== Succesors ===
=== Usages ===
i670 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i670 y: i23  <|@  <|@
f <@*|@fixed>@ <|@
tid v681 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:138) [bci: 15]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
loopBegin: v669 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v673 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v669  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v177|DWORD = INC v175|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v178|DWORD = INC v174|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v178|DWORD, v177|DWORD, v175|DWORD] destination: B170 -> B169 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B171"
    from_bci -1
    to_bci -1
    predecessors "B169" 
    successors "B190" 
    xhandlers
    flags 
    probability 4576982822975400699
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v674 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:143) [bci: 51]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v669 
=== Succesors ===
next: v727 
=== Usages ===
=== Predecessor ===
v676 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v669 #next: v727  <|@  <|@
f <@*|@fixed>@ <|@
tid v727 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v725 
=== Predecessor ===
v674 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v175|DWORD, v176|DWORD] destination: B171 -> B190 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B172"
    from_bci -1
    to_bci -1
    predecessors "B166" 
    successors "B166" 
    xhandlers
    flags "lle" 
    loop_index 9
    loop_depth 1
    probability 4572479223348030203
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2018 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2021 
=== Usages ===
=== Predecessor ===
v2019 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2021  <|@  <|@
f <@~|@floating>@ <|@
tid j2015 <|@
result v179|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2014 
y: j1188 
=== Succesors ===
=== Usages ===
j2014 j2020 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2014 y: j1188  <|@  <|@
f <@~|@floating>@ <|@
tid j2023 <|@
result v180|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [4682670080 - 36028801701634047] ⇈00ffffffffffffff
=== Inputs ===
x: j2003 
y: j1874 
=== Succesors ===
=== Usages ===
j2020 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2003 y: j1874  <|@  <|@
f <@~|@floating>@ <|@
tid j2020 <|@
result v181|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2015 
y: j2023 
=== Succesors ===
=== Usages ===
v2021 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2015 y: j2023  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2021 <|@
d <@d|@=== Debug Properties ===
kind: boolean
stamp: void
=== Inputs ===
address: j2020 
value: i13 
=== Succesors ===
next: v2022 
=== Usages ===
=== Predecessor ===
v2018 >@ <|@
instruction <@DirectStore|@org.graalvm.compiler.replacements.nodes.DirectStoreNode>@ address: j2020 value: i13 #next: v2022  <|@  <|@
f <@*|@fixed>@ <|@
tid v2022 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v2013 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2021 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v2013  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v179|QWORD[*] = DEC v173|QWORD[*] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v180|QWORD[*] = ADD (x: v169|QWORD[*], y: v3|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v181|QWORD[*] = ADD (x: v180|QWORD[*], y: v179|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v181|QWORD[*]], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v179|QWORD[*]] destination: B172 -> B166 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B173"
    from_bci -1
    to_bci -1
    predecessors "B152" 
    successors "B152" 
    xhandlers
    flags "lle" 
    loop_index 8
    loop_depth 1
    probability 4570890224317833336
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2422 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2421 
=== Usages ===
=== Predecessor ===
v2423 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2421  <|@  <|@
f <@*|@fixed>@ <|@
tid v2421 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v2417 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2422 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v2417  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v157|QWORD] destination: B173 -> B152 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B174"
    from_bci -1
    to_bci -1
    predecessors "B145" 
    successors "B237" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3306 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 44]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1740 
=== Usages ===
=== Predecessor ===
v3310 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1740  <|@  <|@
f <@~|@floating>@ <|@
tid i1741 <|@
result int[-242459|0xfffffffffffc4ce5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -242459
stableDimension: 0
stamp: i32 [-242459] ⇊00000000fffc4ce5 ⇈00000000fffc4ce5
stampKind: i32
value: int[-242459|0xfffffffffffc4ce5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1689 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1740 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1686 
=== Predecessor ===
v3306 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-242459|0xfffffffffffc4ce5], v113|QWORD[.]] destination: B174 -> B237 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B175"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B237" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3275 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3550 
=== Usages ===
=== Predecessor ===
v3276 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3550  <|@  <|@
f <@*|@fixed>@ <|@
tid v3550 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1686 
=== Predecessor ===
v3275 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-240155|0xfffffffffffc55e5], v113|QWORD[.]] destination: B175 -> B237 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B176"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B237" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3274 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1738 
=== Usages ===
=== Predecessor ===
v3278 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1738  <|@  <|@
f <@*|@fixed>@ <|@
tid v1738 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1686 
=== Predecessor ===
v3274 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-240155|0xfffffffffffc55e5], v113|QWORD[.]] destination: B176 -> B237 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B177"
    from_bci -1
    to_bci -1
    predecessors "B135" 
    successors "B178" "B179" 
    xhandlers
    flags 
    probability 4544778362961599667
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v796 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3294 
=== Usages ===
=== Predecessor ===
v735 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3294  <|@  <|@
f <@*|@fixed>@ <|@
tid v3294 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 44]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1262 
=== Succesors ===
trueSuccessor: v3290 
falseSuccessor: v3293 
=== Usages ===
=== Predecessor ===
v796 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1262 #trueSuccessor: v3290 #falseSuccessor: v3293  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v72|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B177 -> B178 falseDestination: B177 -> B179 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B178"
    from_bci -1
    to_bci -1
    predecessors "B177" 
    successors "B181" 
    xhandlers
    flags 
    probability 4540274763334229171
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3290 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 44]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3288 
=== Usages ===
=== Predecessor ===
v3294 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3288  <|@  <|@
f <@*|@fixed>@ <|@
tid v3288 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 44]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3287 
=== Predecessor ===
v3290 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B178 -> B181 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B179"
    from_bci -1
    to_bci -1
    predecessors "B177" 
    successors "B180" "B193" 
    xhandlers
    flags 
    probability 4540274763334229171
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3293 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 44]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3318 
=== Usages ===
=== Predecessor ===
v3294 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3318  <|@  <|@
f <@*|@fixed>@ <|@
tid v3318 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 44]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v3357 
=== Succesors ===
trueSuccessor: v3317 
falseSuccessor: v3314 
=== Usages ===
=== Predecessor ===
v3293 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3357 #trueSuccessor: v3317 #falseSuccessor: v3314  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v84|QWORD, y: v85|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B179 -> B180 falseDestination: B179 -> B193 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B180"
    from_bci -1
    to_bci -1
    predecessors "B179" 
    successors "B181" 
    xhandlers
    flags 
    probability 4540274763334229171
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3317 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 44]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3289 
=== Usages ===
=== Predecessor ===
v3318 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3289  <|@  <|@
f <@*|@fixed>@ <|@
tid v3289 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 44]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3287 
=== Predecessor ===
v3317 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B180 -> B181 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B181"
    from_bci -1
    to_bci -1
    predecessors "B178" "B180" 
    successors "B182" 
    xhandlers
    flags 
    probability 4544778362961599667
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3287 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 44]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3288 v3289 
=== Succesors ===
next: v786 
=== Usages ===
v1237 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3288 v3289 #next: v786  <|@  <|@
f <@*|@fixed>@ <|@
tid v786 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v737 
=== Predecessor ===
v3287 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0], v73|DWORD, int[-1|0xffffffffffffffff]] destination: B181 -> B182 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B182"
    from_bci -1
    to_bci -1
    predecessors "B181" "B185" 
    successors "B183" "B189" 
    xhandlers
    flags "llh" 
    loop_index 11
    loop_depth 1
    probability 4554586948177749660
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i738 <|@
result v182|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v737 
values: i13 i748 
=== Succesors ===
=== Usages ===
?739 v740 v3426 ?757 i748 ?757 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v737 values: i13 i748  <|@  <|@
f <@~|@floating>@ <|@
tid i779 <|@
result v183|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v737 
values: i3372 i761 
=== Succesors ===
=== Usages ===
i754 v961 ?781 i761 i732 ?1517 i780 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v737 values: i3372 i761  <|@  <|@
f <@~|@floating>@ <|@
tid i780 <|@
result v184|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v737 
values: i632 i779 
=== Succesors ===
=== Usages ===
?781 i733 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v737 values: i632 i779  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v737 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.622443122521394
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:138) [bci: 15]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 2
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v786 
=== Succesors ===
next: v744 
=== Usages ===
i738 v742 v749 i779 i780 v1370 v1365 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v786 #next: v744  <|@  <|@
f <@~|@floating>@ <|@
tid v740 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:138) [bci: 18]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i738 
y: i3371 
=== Succesors ===
=== Usages ===
v744 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i738 y: i3371  <|@  <|@
f <@*|@fixed>@ <|@
tid v744 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:138) [bci: 18]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
trueSuccessorProbability: 0.7836641850436589
=== Inputs ===
condition: v740 
=== Succesors ===
trueSuccessor: v741 
falseSuccessor: v742 
=== Usages ===
=== Predecessor ===
v737 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v740 #trueSuccessor: v741 #falseSuccessor: v742  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v182|DWORD, v183|DWORD, v184|DWORD] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v72|DWORD, y: v182|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7836641850436589 condition: > trueDestination: B182 -> B183 falseDestination: B182 -> B189 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B183"
    from_bci -1
    to_bci -1
    predecessors "B182" 
    successors "B184" "B187" 
    xhandlers
    flags 
    loop_index 11
    loop_depth 1
    probability 4553299463534714735
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v741 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:139) [bci: 21]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: i3389 
=== Usages ===
v1237 
=== Predecessor ===
v744 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i3389  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3389 <|@
result v185|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList.offset
nodeSourcePosition: at java.util.SubList.access$000(AbstractList.java:613) [bci: 1]
at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 13]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:139) [bci: 22]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v3416 
=== Succesors ===
next: i3390 
=== Usages ===
i754 
=== Predecessor ===
v741 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3416 #next: i3390  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3390 <|@
result v186|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList.size
nodeSourcePosition: at java.util.SubList.access$200(AbstractList.java:613) [bci: 1]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 8]
at java.util.AbstractCollection.toArray(AbstractCollection.java:139) [bci: 22]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v3415 
=== Succesors ===
next: v1366 
=== Usages ===
v752 
=== Predecessor ===
i3389 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3415 #next: v1366  <|@  <|@
f <@~|@floating>@ <|@
tid i754 <|@
result v187|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 16]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:139) [bci: 22]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i32
=== Inputs ===
x: i779 
y: i3389 
=== Succesors ===
=== Usages ===
v752 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i779 y: i3389  <|@  <|@
f <@~|@floating>@ <|@
tid v752 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:139) [bci: 22]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i754 
y: i3390 
=== Succesors ===
=== Usages ===
v1366 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i754 y: i3390  <|@  <|@
f <@~|@floating>@ <|@
tid a3556 <|@
result v188|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 5]
at java.util.SubList.size(AbstractList.java:645) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 1]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
op: Uncompress
stamp: a Ljava/util/AbstractList;
=== Inputs ===
value: a3368 
=== Succesors ===
=== Usages ===
?781 ?781 v961 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a3368  <|@  <|@
tid ?781 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a652 
values: i779 i780 i3369 a3556 a3556 
=== Succesors ===
=== Usages ===
?739 ?1517 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a652 values: i779 i780 i3369 a3556 a3556  <|@  <|@
tid ?750 <|@
d <@d|@=== Debug Properties ===
bci: 1
code: ResolvedJavaMethodBytecode<ArrayList.addAll(Collection)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: ArrayList.java
sourceLine: 581
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - 
=== Succesors ===
=== Usages ===
?739 ?757 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1366 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:139) [bci: 27]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v752 
=== Succesors ===
trueSuccessor: v1362 
falseSuccessor: v1365 
=== Usages ===
=== Predecessor ===
i3390 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v752 #trueSuccessor: v1362 #falseSuccessor: v1365  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v185|DWORD = MOV [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v186|DWORD = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v187|DWORD = SUB (x: v183|DWORD, ~y: v185|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v188|QWORD[.] = UNCOMPRESSPOINTER (input: v70|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@eef3a58 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v186|DWORD, y: v187|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B183 -> B184 falseDestination: B183 -> B187 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B184"
    from_bci -1
    to_bci -1
    predecessors "B183" 
    successors "B185" "B186" 
    xhandlers
    flags 
    loop_index 11
    loop_depth 1
    probability 4553299463534714735
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1362 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:139) [bci: 27]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: i3391 
=== Usages ===
=== Predecessor ===
v1366 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i3391  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3391 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 4]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v3425 
=== Succesors ===
next: v1371 
=== Usages ===
v764 
=== Predecessor ===
v1362 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3425 #next: v1371  <|@  <|@
f <@~|@floating>@ <|@
tid v764 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 11]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3369 
y: i3391 
=== Succesors ===
=== Usages ===
v1371 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i3369 y: i3391  <|@  <|@
f <@*|@fixed>@ <|@
tid v1371 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 11]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v764 
=== Succesors ===
trueSuccessor: v1367 
falseSuccessor: v1370 
=== Usages ===
=== Predecessor ===
i3391 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v764 #trueSuccessor: v1367 #falseSuccessor: v1370  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v71|DWORD, y: [v70|DWORD[.] * 8 + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B184 -> B185 falseDestination: B184 -> B186 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B185"
    from_bci -1
    to_bci -1
    predecessors "B184" 
    successors "B182" 
    xhandlers
    flags "lle" 
    loop_index 11
    loop_depth 1
    probability 4553299463534714735
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1367 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 11]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: a759 
=== Usages ===
=== Predecessor ===
v1371 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a759  <|@  <|@
tid v961 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
returnStamp: a Ljava/lang/Object;
signature: [Ljdk.vm.ci.meta.JavaType;@646cf9a8
stamp: void
targetMethod: HotSpotMethod<AbstractList.get(int)>
=== Inputs ===
arguments: a3556 i779 
=== Succesors ===
=== Usages ===
a759 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a3556 i779  <|@  <|@
tid ?755 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a399 
materializedValue: a399 
=== Succesors ===
=== Usages ===
?757 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a399 materializedValue: a399  <|@  <|@
tid ?757 <|@
d <@d|@=== Debug Properties ===
bci: 39
code: ResolvedJavaMethodBytecode<AbstractCollection.toArray()>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 141
stackSize: 2
=== Inputs ===
outerFrameState: ?750 
values: - a1650 a399 i738 a1650 i738 
virtualObjectMappings: ?755 
=== Succesors ===
=== Usages ===
?762 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?750 values: - a1650 a399 i738 a1650 i738 virtualObjectMappings: ?755  <|@  <|@
tid ?762 <|@
d <@d|@=== Debug Properties ===
bci: 11
code: ResolvedJavaMethodBytecode<SubList$1.next()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 707
stackSize: 0
=== Inputs ===
outerFrameState: ?757 
values: - 
=== Succesors ===
=== Usages ===
?1517 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?757 values: -  <|@  <|@
tid ?1517 <|@
d <@d|@=== Debug Properties ===
bci: 14
code: ResolvedJavaMethodBytecode<AbstractList$Itr.next()>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 358
stackSize: 0
=== Inputs ===
outerFrameState: ?762 
values: a652 i779 - 
virtualObjectMappings: ?791 ?781 
=== Succesors ===
=== Usages ===
a759 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?762 values: a652 i779 - virtualObjectMappings: ?791 ?781  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a759 <|@
result v189|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 14
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
polymorphic: false
stamp: a Ljava/lang/Object;
targetMethod: Direct#AbstractList.get
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v961 
stateDuring: ?1517 
=== Succesors ===
next: v970 
=== Usages ===
a969 
=== Predecessor ===
v1367 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v961 stateDuring: ?1517 #next: v970  <|@  <|@
f <@~|@floating>@ <|@
tid v1237 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v3287 v741 
=== Succesors ===
=== Usages ===
v970 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v3287 v741  <|@  <|@
f <@~|@floating>@ <|@
tid v3426 <|@
result [v83|QWORD[.] + v182|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1650 
index: i738 
=== Succesors ===
=== Usages ===
v970 j2028 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1650 index: i738  <|@  <|@
f <@~|@floating>@ <|@
tid a969 <|@
result v190|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 44]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
op: Compress
stamp: n Ljava/lang/Object;
=== Inputs ===
value: a759 
=== Succesors ===
=== Usages ===
v970 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a759  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v970 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 44]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1237 
address: v3426 
value: a969 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j2028 
=== Usages ===
=== Predecessor ===
a759 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1237 address: v3426 value: a969 stateAfter: - lastLocationAccess: - #next: j2028  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2028 <|@
result [v83|QWORD[.] + v182|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 44]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v3426 
=== Succesors ===
next: v2032 
=== Usages ===
j2029 
=== Predecessor ===
v970 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v3426 #next: v2032  <|@  <|@
f <@~|@floating>@ <|@
tid j2029 <|@
result v191|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 44]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j2028 
y: i1852 
=== Succesors ===
=== Usages ===
v3464 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j2028 y: i1852  <|@  <|@
f <@~|@floating>@ <|@
tid v3464 <|@
result [v191|QWORD[*] + v3|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2029 
index: j1874 
=== Succesors ===
=== Usages ===
v2032 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2029 index: j1874  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2032 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 44]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3464 
value: i2033 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v749 
=== Usages ===
=== Predecessor ===
j2028 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3464 value: i2033 stateAfter: - lastLocationAccess: - #next: v749  <|@  <|@
f <@~|@floating>@ <|@
tid i761 <|@
result v193|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:360) [bci: 26]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i32
=== Inputs ===
x: i779 
y: i23 
=== Succesors ===
=== Usages ===
i779 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i779 y: i23  <|@  <|@
f <@~|@floating>@ <|@
tid i748 <|@
result v194|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:138) [bci: 45]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i32
=== Inputs ===
x: i738 
y: i23 
=== Succesors ===
=== Usages ===
i738 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i738 y: i23  <|@  <|@
f <@*|@fixed>@ <|@
tid v749 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:138) [bci: 15]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
loopBegin: v737 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2032 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v737  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v188|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v183|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
locals: vobject:AbstractList$ListItr:0{cursor=v183|DWORD,lastRet=v184|DWORD,expectedModCount=v71|DWORD,this$0=v188|QWORD[.],this$0=v188|QWORD[.]} v183|DWORD - 
java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
locals: - 
java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
stack: v83|QWORD[.] v182|DWORD 
locals: - v83|QWORD[.] vobject:SubList$1:1{val$index=int[0|0x0],i=vobject:AbstractList$ListItr:0{cursor=v183|DWORD,lastRet=v184|DWORD,expectedModCount=v71|DWORD,this$0=v188|QWORD[.],this$0=v188|QWORD[.]},this$0=v1|QWORD[.]} v182|DWORD 
java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
locals: v0|QWORD[.] - - - 
vobject:AbstractList$ListItr:0{cursor=v183|DWORD,lastRet=v184|DWORD,expectedModCount=v71|DWORD,this$0=v188|QWORD[.],this$0=v188|QWORD[.]} Ljava/util/AbstractList$ListItr; v183|DWORD v184|DWORD v71|DWORD v188|QWORD[.] v188|QWORD[.] 
vobject:SubList$1:1{val$index=int[0|0x0],i=vobject:AbstractList$ListItr:0{cursor=v183|DWORD,lastRet=v184|DWORD,expectedModCount=v71|DWORD,this$0=v188|QWORD[.],this$0=v188|QWORD[.]},this$0=v1|QWORD[.]} Ljava/util/SubList$1; int[0|0x0] vobject:AbstractList$ListItr:0{cursor=v183|DWORD,lastRet=v184|DWORD,expectedModCount=v71|DWORD,this$0=v188|QWORD[.],this$0=v188|QWORD[.]} v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractList.get(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:14, 11, 39, 1] <|@ <|@
      nr   -1  <|@ instruction v189|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v190|DWORD[.] = COMPRESSPOINTER (input: v189|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@eef3a58 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v83|QWORD[.] + v182|DWORD * 4 + 16], y: v190|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v192|QWORD[.] = LEA [v83|QWORD[.] + v182|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v191|QWORD[*] = SHR v192|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v191|QWORD[*] + v3|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v193|DWORD = INC v183|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v194|DWORD = INC v182|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v194|DWORD, v193|DWORD, v183|DWORD] destination: B185 -> B182 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B186"
    from_bci -1
    to_bci -1
    predecessors "B184" 
    successors "B188" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1370 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 11]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v737 
=== Succesors ===
next: v1758 
=== Usages ===
=== Predecessor ===
v1371 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v737 #next: v1758  <|@  <|@
f <@~|@floating>@ <|@
tid i1759 <|@
result int[-245779|0xfffffffffffc3fed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -245779
stableDimension: 0
stamp: i32 [-245779] ⇊00000000fffc3fed ⇈00000000fffc3fed
stampKind: i32
value: int[-245779|0xfffffffffffc3fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1755 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1758 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1752 
=== Predecessor ===
v1370 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-245779|0xfffffffffffc3fed]] destination: B186 -> B188 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B187"
    from_bci -1
    to_bci -1
    predecessors "B183" 
    successors "B188" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1365 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:139) [bci: 27]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v737 
=== Succesors ===
next: v1753 
=== Usages ===
=== Predecessor ===
v1366 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v737 #next: v1753  <|@  <|@
f <@~|@floating>@ <|@
tid i1754 <|@
result int[-245011|0xfffffffffffc42ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -245011
stableDimension: 0
stamp: i32 [-245011] ⇊00000000fffc42ed ⇈00000000fffc42ed
stampKind: i32
value: int[-245011|0xfffffffffffc42ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1755 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1753 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1752 
=== Predecessor ===
v1365 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-245011|0xfffffffffffc42ed]] destination: B187 -> B188 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B188"
    from_bci -1
    to_bci -1
    predecessors "B187" "B186" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1755 <|@
result v195|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-245779 - -245011] ⇊00000000fffc02ed ⇈00000000fffc7fed
valueDescription: i32
=== Inputs ===
merge: v1752 
values: i1754 i1759 
=== Succesors ===
=== Usages ===
v1757 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1752 values: i1754 i1759  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1752 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1753 v1758 
=== Succesors ===
next: v1757 
=== Usages ===
i1755 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1753 v1758 #next: v1757  <|@  <|@
tid ?739 <|@
d <@d|@=== Debug Properties ===
bci: 15
code: ResolvedJavaMethodBytecode<AbstractCollection.toArray()>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 138
stackSize: 0
=== Inputs ===
outerFrameState: ?750 
values: - a1650 a399 i738 
virtualObjectMappings: ?791 ?781 
=== Succesors ===
=== Usages ===
v1757 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?750 values: - a1650 a399 i738 virtualObjectMappings: ?791 ?781  <|@  <|@
f <@*|@fixed>@ <|@
tid v1757 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?739 
actionAndReason: i1755 
speculation: a1548 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1752 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?739 actionAndReason: i1755 speculation: a1548  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v195|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v195|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:138) [bci: 15]
locals: - v83|QWORD[.] vobject:SubList$1:0{val$index=int[0|0x0],i=vobject:AbstractList$ListItr:1{cursor=v183|DWORD,lastRet=v184|DWORD,expectedModCount=v71|DWORD,this$0=v188|QWORD[.],this$0=v188|QWORD[.]},this$0=v1|QWORD[.]} v182|DWORD 
java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
locals: v0|QWORD[.] - - - 
vobject:SubList$1:0{val$index=int[0|0x0],i=vobject:AbstractList$ListItr:1{cursor=v183|DWORD,lastRet=v184|DWORD,expectedModCount=v71|DWORD,this$0=v188|QWORD[.],this$0=v188|QWORD[.]},this$0=v1|QWORD[.]} Ljava/util/SubList$1; int[0|0x0] vobject:AbstractList$ListItr:1{cursor=v183|DWORD,lastRet=v184|DWORD,expectedModCount=v71|DWORD,this$0=v188|QWORD[.],this$0=v188|QWORD[.]} v1|QWORD[.] 
vobject:AbstractList$ListItr:1{cursor=v183|DWORD,lastRet=v184|DWORD,expectedModCount=v71|DWORD,this$0=v188|QWORD[.],this$0=v188|QWORD[.]} Ljava/util/AbstractList$ListItr; v183|DWORD v184|DWORD v71|DWORD v188|QWORD[.] v188|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:15, 1] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B189"
    from_bci -1
    to_bci -1
    predecessors "B182" 
    successors "B190" 
    xhandlers
    flags 
    probability 4544778362961599667
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v742 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:143) [bci: 51]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v737 
=== Succesors ===
next: v797 
=== Usages ===
=== Predecessor ===
v744 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v737 #next: v797  <|@  <|@
f <@*|@fixed>@ <|@
tid v797 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v725 
=== Predecessor ===
v742 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v183|DWORD, v184|DWORD] destination: B189 -> B190 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B190"
    from_bci -1
    to_bci -1
    predecessors "B129" "B171" "B189" 
    successors "B191" "B192" 
    xhandlers
    flags 
    probability 4594445899282223281
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i732 <|@
result v196|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v725 
values: i654 i717 i779 
=== Succesors ===
=== Usages ===
?661 i345 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v725 values: i654 i717 i779  <|@  <|@
f <@~|@floating>@ <|@
tid i733 <|@
result v197|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v725 
values: i655 i718 i780 
=== Succesors ===
=== Usages ===
?661 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v725 values: i655 i718 i780  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v725 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v726 v727 v797 
=== Succesors ===
next: i3392 
=== Usages ===
i732 i733 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v726 v727 v797 #next: i3392  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3392 <|@
result v198|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList.offset
nodeSourcePosition: at java.util.SubList.access$000(AbstractList.java:613) [bci: 1]
at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 13]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:143) [bci: 52]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v3416 
=== Succesors ===
next: i3393 
=== Usages ===
i345 
=== Predecessor ===
v725 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3416 #next: i3393  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3393 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList.size
nodeSourcePosition: at java.util.SubList.access$200(AbstractList.java:613) [bci: 1]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 8]
at java.util.AbstractCollection.toArray(AbstractCollection.java:143) [bci: 52]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v3415 
=== Succesors ===
next: v1375 
=== Usages ===
v326 
=== Predecessor ===
i3392 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3415 #next: v1375  <|@  <|@
f <@~|@floating>@ <|@
tid i345 <|@
result v199|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 16]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:143) [bci: 52]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i32
=== Inputs ===
x: i732 
y: i3392 
=== Succesors ===
=== Usages ===
v326 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i732 y: i3392  <|@  <|@
f <@~|@floating>@ <|@
tid v326 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:143) [bci: 52]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i345 
y: i3393 
=== Succesors ===
=== Usages ===
v1375 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i345 y: i3393  <|@  <|@
f <@*|@fixed>@ <|@
tid v1375 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:143) [bci: 57]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v326 
=== Succesors ===
trueSuccessor: v1374 
falseSuccessor: v1372 
=== Usages ===
=== Predecessor ===
i3393 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v326 #trueSuccessor: v1374 #falseSuccessor: v1372  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v196|DWORD, v197|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v198|DWORD = MOV [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v199|DWORD = SUB (x: v196|DWORD, ~y: v198|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v199|DWORD, y: [v1|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B190 -> B191 falseDestination: B190 -> B192 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B191"
    from_bci -1
    to_bci -1
    predecessors "B190" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1374 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:143) [bci: 57]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1373 
=== Usages ===
=== Predecessor ===
v1375 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1373  <|@  <|@
tid ?241 <|@
d <@d|@=== Debug Properties ===
bci: 1
code: ResolvedJavaMethodBytecode<ArrayList.addAll(Collection)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: ArrayList.java
sourceLine: 581
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - 
=== Succesors ===
=== Usages ===
?221 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - -  <|@  <|@
f <@~|@floating>@ <|@
tid a878 <|@
result v200|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 5]
at java.util.SubList.size(AbstractList.java:645) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 1]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
op: Uncompress
stamp: a Ljava/util/AbstractList;
=== Inputs ===
value: a3368 
=== Succesors ===
=== Usages ===
?661 ?661 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a3368  <|@  <|@
tid ?661 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a652 
values: i732 i733 i3369 a878 a878 
=== Succesors ===
=== Usages ===
?221 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a652 values: i732 i733 i3369 a878 a878  <|@  <|@
tid ?221 <|@
d <@d|@=== Debug Properties ===
bci: 51
code: ResolvedJavaMethodBytecode<AbstractCollection.toArray()>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:143) [bci: 51]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 143
stackSize: 0
=== Inputs ===
outerFrameState: ?241 
values: - a1650 a399 - 
virtualObjectMappings: ?791 ?661 
=== Succesors ===
=== Usages ===
v1373 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?241 values: - a1650 a399 - virtualObjectMappings: ?791 ?661  <|@  <|@
f <@*|@fixed>@ <|@
tid v1373 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 973
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:143) [bci: 57]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?221 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1374 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?221  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v200|QWORD[.] = UNCOMPRESSPOINTER (input: v70|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@eef3a58 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -249107 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:143) [bci: 51]
locals: - v83|QWORD[.] vobject:SubList$1:0{val$index=int[0|0x0],i=vobject:AbstractList$ListItr:1{cursor=v196|DWORD,lastRet=v197|DWORD,expectedModCount=v71|DWORD,this$0=v200|QWORD[.],this$0=v200|QWORD[.]},this$0=v1|QWORD[.]} - 
java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
locals: v0|QWORD[.] - - - 
vobject:SubList$1:0{val$index=int[0|0x0],i=vobject:AbstractList$ListItr:1{cursor=v196|DWORD,lastRet=v197|DWORD,expectedModCount=v71|DWORD,this$0=v200|QWORD[.],this$0=v200|QWORD[.]},this$0=v1|QWORD[.]} Ljava/util/SubList$1; int[0|0x0] vobject:AbstractList$ListItr:1{cursor=v196|DWORD,lastRet=v197|DWORD,expectedModCount=v71|DWORD,this$0=v200|QWORD[.],this$0=v200|QWORD[.]} v1|QWORD[.] 
vobject:AbstractList$ListItr:1{cursor=v196|DWORD,lastRet=v197|DWORD,expectedModCount=v71|DWORD,this$0=v200|QWORD[.],this$0=v200|QWORD[.]} Ljava/util/AbstractList$ListItr; v196|DWORD v197|DWORD v71|DWORD v200|QWORD[.] v200|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:51, 1] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B192"
    from_bci -1
    to_bci -1
    predecessors "B190" 
    successors "B239" 
    xhandlers
    flags 
    probability 4594445899282223281
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1372 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:143) [bci: 57]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v842 
=== Usages ===
=== Predecessor ===
v1375 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v842  <|@  <|@
f <@*|@fixed>@ <|@
tid v842 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v805 
=== Predecessor ===
v1372 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v72|DWORD, v83|QWORD[.]] destination: B192 -> B239 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B193"
    from_bci -1
    to_bci -1
    predecessors "B179" 
    successors "B237" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3314 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 44]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1736 
=== Usages ===
=== Predecessor ===
v3318 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1736  <|@  <|@
f <@~|@floating>@ <|@
tid i1737 <|@
result int[-246555|0xfffffffffffc3ce5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -246555
stableDimension: 0
stamp: i32 [-246555] ⇊00000000fffc3ce5 ⇈00000000fffc3ce5
stampKind: i32
value: int[-246555|0xfffffffffffc3ce5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1689 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1736 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1686 
=== Predecessor ===
v3314 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-246555|0xfffffffffffc3ce5], v113|QWORD[.]] destination: B193 -> B237 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B194"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B237" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1327 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=size target_method_class=Lorg/graalvm/compiler/graph/NodeList; position=at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1719 
=== Usages ===
=== Predecessor ===
v1328 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1719  <|@  <|@
f <@~|@floating>@ <|@
tid i1720 <|@
result int[-251955|0xfffffffffffc27cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -251955
stableDimension: 0
stamp: i32 [-251955] ⇊00000000fffc27cd ⇈00000000fffc27cd
stampKind: i32
value: int[-251955|0xfffffffffffc27cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1689 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1719 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1686 
=== Predecessor ===
v1327 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-251955|0xfffffffffffc27cd], Object[null]] destination: B194 -> B237 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B195"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B237" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1311 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=null target_method=listIterator target_method_class=Ljava/util/AbstractList; position=at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1711 
=== Usages ===
=== Predecessor ===
v1312 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1711  <|@  <|@
f <@~|@floating>@ <|@
tid i1712 <|@
result int[-229683|0xfffffffffffc7ecd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -229683
stableDimension: 0
stamp: i32 [-229683] ⇊00000000fffc7ecd ⇈00000000fffc7ecd
stampKind: i32
value: int[-229683|0xfffffffffffc7ecd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1689 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1711 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1686 
=== Predecessor ===
v1311 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-229683|0xfffffffffffc7ecd], Object[null]] destination: B195 -> B237 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B196"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B78" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4589942299654852783
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1955 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 58]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1958 
=== Usages ===
=== Predecessor ===
v1956 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1958  <|@  <|@
f <@~|@floating>@ <|@
tid j1952 <|@
result v201|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 50]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i64
=== Inputs ===
x: j1951 
y: j1188 
=== Succesors ===
=== Usages ===
j1951 j1957 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1951 y: j1188  <|@  <|@
f <@~|@floating>@ <|@
tid j1960 <|@
result v202|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 62]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i64 [4682670080 - 36028801701634047] ⇈00ffffffffffffff
=== Inputs ===
x: j1940 
y: j1874 
=== Succesors ===
=== Usages ===
j1957 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1940 y: j1874  <|@  <|@
f <@~|@floating>@ <|@
tid j1957 <|@
result v203|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 65]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i64
=== Inputs ===
x: j1952 
y: j1960 
=== Succesors ===
=== Usages ===
v1958 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1952 y: j1960  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1958 <|@
d <@d|@=== Debug Properties ===
kind: boolean
nodeSourcePosition: at org.graalvm.compiler.replacements.nodes.DirectStoreNode.storeBoolean(long, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 70]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
address: j1957 
value: i13 
=== Succesors ===
next: v1959 
=== Usages ===
=== Predecessor ===
v1955 >@ <|@
instruction <@DirectStore|@org.graalvm.compiler.replacements.nodes.DirectStoreNode>@ address: j1957 value: i13 #next: v1959  <|@  <|@
f <@*|@fixed>@ <|@
tid v1959 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
loopBegin: v1950 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1958 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v1950  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v201|QWORD[*] = DEC v107|QWORD[*] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v202|QWORD[*] = ADD (x: v103|QWORD[*], y: v3|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v203|QWORD[*] = ADD (x: v202|QWORD[*], y: v201|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v203|QWORD[*]], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v201|QWORD[*]] destination: B196 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B197"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B64" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4588077639523326214
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2490 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2489 
=== Usages ===
=== Predecessor ===
v2491 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2489  <|@  <|@
f <@*|@fixed>@ <|@
tid v2489 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v2485 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2490 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v2485  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v91|QWORD] destination: B197 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B198"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B237" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1299 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 11]
at java.util.SubList.size(AbstractList.java:645) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 1]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1705 
=== Usages ===
=== Predecessor ===
v1300 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1705  <|@  <|@
f <@~|@floating>@ <|@
tid i1706 <|@
result int[-226323|0xfffffffffffc8bed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -226323
stableDimension: 0
stamp: i32 [-226323] ⇊00000000fffc8bed ⇈00000000fffc8bed
stampKind: i32
value: int[-226323|0xfffffffffffc8bed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1689 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1705 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1686 
=== Predecessor ===
v1299 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-226323|0xfffffffffffc8bed], Object[null]] destination: B198 -> B237 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B199"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B200" "B238" 
    xhandlers
    flags 
    probability 4594332962369002089
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v154 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v155 
=== Usages ===
=== Predecessor ===
v205 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v155  <|@  <|@
f <@~|@floating>@ <|@
tid v2338 <|@
result meta{HotSpotType<Ljava/util/Collections$CopiesList;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
rawvalue: meta{HotSpotType<Ljava/util/Collections$CopiesList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/Collections$CopiesList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2339 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2339 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v3359 
y: v2338 
=== Succesors ===
=== Usages ===
v155 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v3359 y: v2338  <|@  <|@
f <@*|@fixed>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Collections$CopiesList; target_method=toArray target_method_class=Ljava/util/Collections$CopiesList; position=at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
trueSuccessorProbability: 0.9487693188322834
=== Inputs ===
condition: v2339 
=== Succesors ===
trueSuccessor: v151 
falseSuccessor: v204 
=== Usages ===
=== Predecessor ===
v154 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2339 #trueSuccessor: v151 #falseSuccessor: v204  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Collections$CopiesList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9487693188322834 condition: = trueDestination: B199 -> B200 falseDestination: B199 -> B238 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B200"
    from_bci -1
    to_bci -1
    predecessors "B199" 
    successors "B201" "B202" 
    xhandlers
    flags 
    probability 4594068358868130440
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v151 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Collections$CopiesList; target_method=toArray target_method_class=Ljava/util/Collections$CopiesList; position=at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: i3394 
=== Usages ===
=== Predecessor ===
v155 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i3394  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3394 <|@
result v204|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Collections$CopiesList.n
nodeSourcePosition: at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 1]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v3416 
=== Succesors ===
next: v3334 
=== Usages ===
v1275 a2058 v1272 v188 j1238 i808 v2077 i2096 i2036 v2043 
=== Predecessor ===
v151 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3416 #next: v3334  <|@  <|@
f <@~|@floating>@ <|@
tid j1238 <|@
result v205|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i3394 
=== Succesors ===
=== Usages ===
j1239 v1241 j2978 j2970 j2975 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i3394  <|@  <|@
f <@~|@floating>@ <|@
tid j1239 <|@
result v206|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j1238 
y: j1188 
=== Succesors ===
=== Usages ===
v1241 v2981 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1238 y: j1188  <|@  <|@
f <@~|@floating>@ <|@
tid v1275 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3394 
y: i23 
=== Succesors ===
=== Usages ===
v3334 v2534 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3394 y: i23  <|@  <|@
f <@*|@fixed>@ <|@
tid v3334 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3155) [bci: 20]
at java.util.Collections$CopiesList.toArray(Collections.java:5032) [bci: 25]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1275 
=== Succesors ===
trueSuccessor: v3330 
falseSuccessor: v3333 
=== Usages ===
=== Predecessor ===
i3394 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1275 #trueSuccessor: v3330 #falseSuccessor: v3333  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v204|DWORD = MOV [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v205|QWORD = MOVSXD v204|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v206|QWORD = DEC v205|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v204|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B200 -> B201 falseDestination: B200 -> B202 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B201"
    from_bci -1
    to_bci -1
    predecessors "B200" 
    successors "B204" 
    xhandlers
    flags 
    probability 4589564759240759944
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3330 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3155) [bci: 20]
at java.util.Collections$CopiesList.toArray(Collections.java:5032) [bci: 25]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3328 
=== Usages ===
=== Predecessor ===
v3334 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3328  <|@  <|@
f <@*|@fixed>@ <|@
tid v3328 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3155) [bci: 20]
at java.util.Collections$CopiesList.toArray(Collections.java:5032) [bci: 25]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3327 
=== Predecessor ===
v3330 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B201 -> B204 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B202"
    from_bci -1
    to_bci -1
    predecessors "B200" 
    successors "B203" "B236" 
    xhandlers
    flags 
    probability 4589564759240759944
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3333 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3155) [bci: 20]
at java.util.Collections$CopiesList.toArray(Collections.java:5032) [bci: 25]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3342 
=== Usages ===
=== Predecessor ===
v3334 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3342  <|@  <|@
f <@~|@floating>@ <|@
tid v1241 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1239 
y: j1238 
=== Succesors ===
=== Usages ===
v3342 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1239 y: j1238  <|@  <|@
f <@*|@fixed>@ <|@
tid v3342 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3155) [bci: 20]
at java.util.Collections$CopiesList.toArray(Collections.java:5032) [bci: 25]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1241 
=== Succesors ===
trueSuccessor: v3341 
falseSuccessor: v3338 
=== Usages ===
=== Predecessor ===
v3333 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1241 #trueSuccessor: v3341 #falseSuccessor: v3338  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v205|QWORD, y: v206|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B202 -> B203 falseDestination: B202 -> B236 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B203"
    from_bci -1
    to_bci -1
    predecessors "B202" 
    successors "B204" 
    xhandlers
    flags 
    probability 4589564759240759944
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3341 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3155) [bci: 20]
at java.util.Collections$CopiesList.toArray(Collections.java:5032) [bci: 25]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3329 
=== Usages ===
=== Predecessor ===
v3342 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3329  <|@  <|@
f <@*|@fixed>@ <|@
tid v3329 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3155) [bci: 20]
at java.util.Collections$CopiesList.toArray(Collections.java:5032) [bci: 25]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3327 
=== Predecessor ===
v3341 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B203 -> B204 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B204"
    from_bci -1
    to_bci -1
    predecessors "B201" "B203" 
    successors "B205" "B206" 
    xhandlers
    flags 
    probability 4594068358868130440
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3327 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3155) [bci: 20]
at java.util.Collections$CopiesList.toArray(Collections.java:5032) [bci: 25]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3328 v3329 
=== Succesors ===
next: a3395 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3328 v3329 #next: a3395  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3395 <|@
result v207|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Collections$CopiesList.element
nodeSourcePosition: at java.util.Collections$CopiesList.toArray(Collections.java:5031) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v3415 
=== Succesors ===
next: v3553 
=== Usages ===
v3211 v3553 v3213 
=== Predecessor ===
v3327 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3415 #next: v3553  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3553 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
object: a3395 
=== Succesors ===
next: v1387 
=== Usages ===
=== Predecessor ===
a3395 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: a3395 #next: v1387  <|@  <|@
f <@~|@floating>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.Arrays.rangeCheck(Arrays.java:112) [bci: 2]
at java.util.Arrays.fill(Arrays.java:3153) [bci: 4]
at java.util.Collections$CopiesList.toArray(Collections.java:5032) [bci: 25]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3394 
y: i13 
=== Succesors ===
=== Usages ===
v1387 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3394 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v1387 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.rangeCheck(Arrays.java:112) [bci: 2]
at java.util.Arrays.fill(Arrays.java:3153) [bci: 4]
at java.util.Collections$CopiesList.toArray(Collections.java:5032) [bci: 25]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v188 
=== Succesors ===
trueSuccessor: v1386 
falseSuccessor: v1384 
=== Usages ===
=== Predecessor ===
v3553 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v188 #trueSuccessor: v1386 #falseSuccessor: v1384  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v207|DWORD[.] = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.addAll(ArrayList.java:581) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v207|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v204|DWORD, y: v204|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B204 -> B205 falseDestination: B204 -> B206 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B205"
    from_bci -1
    to_bci -1
    predecessors "B204" 
    successors "B237" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1386 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.rangeCheck(Arrays.java:112) [bci: 2]
at java.util.Arrays.fill(Arrays.java:3153) [bci: 4]
at java.util.Collections$CopiesList.toArray(Collections.java:5032) [bci: 25]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1703 
=== Usages ===
=== Predecessor ===
v1387 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1703  <|@  <|@
f <@~|@floating>@ <|@
tid i1704 <|@
result int[-254739|0xfffffffffffc1ced] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -254739
stableDimension: 0
stamp: i32 [-254739] ⇊00000000fffc1ced ⇈00000000fffc1ced
stampKind: i32
value: int[-254739|0xfffffffffffc1ced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1689 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1703 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1686 
=== Predecessor ===
v1386 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-254739|0xfffffffffffc1ced], Object[null]] destination: B205 -> B237 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B206"
    from_bci -1
    to_bci -1
    predecessors "B204" 
    successors "B207" "B210" 
    xhandlers
    flags 
    probability 4594068358868130440
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1384 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.rangeCheck(Arrays.java:112) [bci: 2]
at java.util.Arrays.fill(Arrays.java:3153) [bci: 4]
at java.util.Collections$CopiesList.toArray(Collections.java:5032) [bci: 25]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2038 
=== Usages ===
=== Predecessor ===
v1387 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2038  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2038 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j2074 
=== Usages ===
v3465 v3466 
=== Predecessor ===
v1384 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j2074  <|@  <|@
f <@~|@floating>@ <|@
tid v3465 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j2038 
index: - 
=== Succesors ===
=== Usages ===
j2074 v2076 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2038 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2074 <|@
result v208|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3465 
=== Succesors ===
next: j2075 
=== Usages ===
j2042 v3467 v3468 a2057 v3473 v3469 v3470 v3471 v3472 
=== Predecessor ===
j2038 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3465 #next: j2075  <|@  <|@
f <@~|@floating>@ <|@
tid v3466 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j2038 
index: - 
=== Succesors ===
=== Usages ===
j2075 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2038 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2075 <|@
result v209|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3466 
=== Succesors ===
next: v2046 
=== Usages ===
v2047 
=== Predecessor ===
j2074 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3466 #next: v2046  <|@  <|@
f <@~|@floating>@ <|@
tid v2043 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3394 
y: i1888 
=== Succesors ===
=== Usages ===
v2046 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i3394 y: i1888  <|@  <|@
f <@*|@fixed>@ <|@
tid v2046 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v2043 
=== Succesors ===
trueSuccessor: v2045 
falseSuccessor: v2044 
=== Usages ===
=== Predecessor ===
j2075 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2043 #trueSuccessor: v2045 #falseSuccessor: v2044  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v208|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v209|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v204|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B206 -> B207 falseDestination: B206 -> B210 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B207"
    from_bci -1
    to_bci -1
    predecessors "B206" 
    successors "B208" "B209" 
    xhandlers
    flags 
    probability 4593485030102835957
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2045 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2053 
=== Usages ===
=== Predecessor ===
v2046 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2053  <|@  <|@
f <@~|@floating>@ <|@
tid i2036 <|@
result v210|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i3394 
y: i912 
=== Succesors ===
=== Usages ===
i2065 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i3394 y: i912  <|@  <|@
f <@~|@floating>@ <|@
tid i2065 <|@
result v211|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i32 [-2147483645 - 2147483647] ⇊0000000000000003
=== Inputs ===
x: i2036 
y: i1814 
=== Succesors ===
=== Usages ===
i2037 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2036 y: i1814  <|@  <|@
f <@~|@floating>@ <|@
tid i2037 <|@
result v212|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i2065 
y: i1792 
=== Succesors ===
=== Usages ===
j2041 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i2065 y: i1792  <|@  <|@
f <@~|@floating>@ <|@
tid j2041 <|@
result v213|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i2037 
=== Succesors ===
=== Usages ===
j2042 v3469 v3470 v3471 v3472 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2037  <|@  <|@
f <@~|@floating>@ <|@
tid j2042 <|@
result v214|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i64
=== Inputs ===
x: j2041 
y: j2074 
=== Succesors ===
=== Usages ===
v2047 v2076 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2041 y: j2074  <|@  <|@
f <@~|@floating>@ <|@
tid v2047 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2075 
y: j2042 
=== Succesors ===
=== Usages ===
v2053 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j2075 y: j2042  <|@  <|@
f <@*|@fixed>@ <|@
tid v2053 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v2047 
=== Succesors ===
trueSuccessor: v2052 
falseSuccessor: v2051 
=== Usages ===
=== Predecessor ===
v2045 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2047 #trueSuccessor: v2052 #falseSuccessor: v2051  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v210|DWORD = SHL v204|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v211|DWORD = LEA [v210|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v212|DWORD = AND v211|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v213|QWORD = MOVSXD v212|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v214|QWORD = ADD (x: v213|QWORD, y: v208|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v214|QWORD, y: v209|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B207 -> B208 falseDestination: B207 -> B209 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B208"
    from_bci -1
    to_bci -1
    predecessors "B207" 
    successors "B211" 
    xhandlers
    flags 
    probability 4563288012940331416
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2052 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2050 
=== Usages ===
=== Predecessor ===
v2053 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2050  <|@  <|@
f <@*|@fixed>@ <|@
tid v2050 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2049 
=== Predecessor ===
v2052 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B208 -> B211 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B209"
    from_bci -1
    to_bci -1
    predecessors "B207" 
    successors "B212" 
    xhandlers
    flags 
    probability 4593396824008439247
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2051 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2076 
=== Usages ===
=== Predecessor ===
v2053 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2076  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2076 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3465 
value: j2042 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2067 
=== Usages ===
=== Predecessor ===
v2051 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3465 value: j2042 stateAfter: - lastLocationAccess: - #next: v2067  <|@  <|@
f <@~|@floating>@ <|@
tid v3469 <|@
result [v213|QWORD + v208|QWORD * 1 + 192] <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j2041 
index: j2074 
=== Succesors ===
=== Usages ===
v2067 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2041 index: j2074  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2067 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
address: v3469 
=== Succesors ===
next: v2069 
=== Usages ===
=== Predecessor ===
v2076 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3469 #next: v2069  <|@  <|@
f <@~|@floating>@ <|@
tid v3470 <|@
result [v213|QWORD + v208|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j2041 
index: j2074 
=== Succesors ===
=== Usages ===
v2069 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2041 index: j2074  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2069 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
address: v3470 
=== Succesors ===
next: v2071 
=== Usages ===
=== Predecessor ===
v2067 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3470 #next: v2071  <|@  <|@
f <@~|@floating>@ <|@
tid v3471 <|@
result [v213|QWORD + v208|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j2041 
index: j2074 
=== Succesors ===
=== Usages ===
v2071 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2041 index: j2074  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2071 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
address: v3471 
=== Succesors ===
next: v2073 
=== Usages ===
=== Predecessor ===
v2069 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3471 #next: v2073  <|@  <|@
f <@~|@floating>@ <|@
tid v3472 <|@
result [v213|QWORD + v208|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j2041 
index: j2074 
=== Succesors ===
=== Usages ===
v2073 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2041 index: j2074  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2073 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
address: v3472 
=== Succesors ===
next: v2077 
=== Usages ===
=== Predecessor ===
v2071 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3472 #next: v2077  <|@  <|@
f <@~|@floating>@ <|@
tid v3467 <|@
result [v208|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j2074 
index: - 
=== Succesors ===
=== Usages ===
v2077 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2074 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2077 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3467 
value: i3394 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2078 
=== Usages ===
=== Predecessor ===
v2073 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3467 value: i3394 stateAfter: - lastLocationAccess: - #next: v2078  <|@  <|@
f <@~|@floating>@ <|@
tid v3468 <|@
result [v208|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2074 
index: - 
=== Succesors ===
=== Usages ===
v2078 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2074 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2078 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3468 
value: j1778 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2081 
=== Usages ===
=== Predecessor ===
v2077 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3468 value: j1778 stateAfter: - lastLocationAccess: - #next: v2081  <|@  <|@
f <@~|@floating>@ <|@
tid v3473 <|@
result [v208|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j2074 
index: - 
=== Succesors ===
=== Usages ===
v2081 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2074 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2081 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3473 
value: v2340 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2056 
=== Usages ===
=== Predecessor ===
v2078 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3473 value: v2340 stateAfter: - lastLocationAccess: - #next: v2056  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2056 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2057 
=== Usages ===
=== Predecessor ===
v2081 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a2057  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2057 <|@
result v215|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j2074 
=== Succesors ===
next: v2059 
=== Usages ===
a2062 
=== Predecessor ===
v2056 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j2074 #next: v2059  <|@  <|@
f <@*|@fixed>@ <|@
tid v2059 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2060 
=== Predecessor ===
a2057 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v214|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v213|QWORD + v208|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v213|QWORD + v208|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v213|QWORD + v208|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v213|QWORD + v208|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v208|QWORD + 12], y: v204|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v208|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v208|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v215|QWORD[.] = MOVE v208|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v215|QWORD[.]] destination: B209 -> B212 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B210"
    from_bci -1
    to_bci -1
    predecessors "B206" 
    successors "B211" 
    xhandlers
    flags 
    probability 4578994163505205464
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2044 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2048 
=== Usages ===
=== Predecessor ===
v2046 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2048  <|@  <|@
f <@*|@fixed>@ <|@
tid v2048 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2049 
=== Predecessor ===
v2044 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B210 -> B211 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B211"
    from_bci -1
    to_bci -1
    predecessors "B210" "B208" 
    successors "B212" 
    xhandlers
    flags 
    probability 4579699812260379147
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2049 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2048 v2050 
=== Succesors ===
next: a2058 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2048 v2050 #next: a2058  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2058 <|@
result v216|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v1880 i3394 i13 
=== Succesors ===
next: v2061 
=== Usages ===
a2062 
=== Predecessor ===
v2049 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v1880 i3394 i13 #next: v2061  <|@  <|@
f <@*|@fixed>@ <|@
tid v2061 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2060 
=== Predecessor ===
a2058 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v69|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v204|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.addAll(ArrayList.java:581) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v216|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v216|QWORD[.]] destination: B211 -> B212 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B212"
    from_bci -1
    to_bci -1
    predecessors "B209" "B211" 
    successors "B213" "B214" 
    xhandlers
    flags 
    probability 4594068358868130440
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a2062 <|@
result v217|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v2060 
values: a2057 a2058 
=== Succesors ===
=== Usages ===
v3442 a1654 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2060 values: a2057 a2058  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2060 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2059 v2061 
=== Succesors ===
next: v2943 
=== Usages ===
a2062 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2059 v2061 #next: v2943  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2943 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v2534 
=== Usages ===
j2945 
=== Predecessor ===
v2060 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v2534  <|@  <|@
f <@~|@floating>@ <|@
tid v3442 <|@
result [v217|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a2062 
index: - 
=== Succesors ===
=== Usages ===
j2945 j2095 j2093 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2062 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v2534 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1275 
=== Succesors ===
trueSuccessor: v2532 
falseSuccessor: v2533 
=== Usages ===
=== Predecessor ===
v2943 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1275 #trueSuccessor: v2532 #falseSuccessor: v2533  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v217|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v204|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B212 -> B213 falseDestination: B212 -> B214 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B213"
    from_bci -1
    to_bci -1
    predecessors "B212" 
    successors "B228" 
    xhandlers
    flags 
    probability 4589564759240759944
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2532 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2550 
=== Usages ===
=== Predecessor ===
v2534 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2550  <|@  <|@
f <@*|@fixed>@ <|@
tid v2550 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2551 
=== Predecessor ===
v2532 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B213 -> B228 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B214"
    from_bci -1
    to_bci -1
    predecessors "B212" 
    successors "B215" "B216" 
    xhandlers
    flags 
    probability 4589564759240759944
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2533 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2537 
=== Usages ===
=== Predecessor ===
v2534 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2537  <|@  <|@
f <@~|@floating>@ <|@
tid j2945 <|@
result v218|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v2943 
address: v3442 
=== Succesors ===
=== Usages ===
v3521 v3522 v3523 v3524 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v2943 address: v3442  <|@  <|@
f <@~|@floating>@ <|@
tid v3211 <|@
result v219|V256_DWORD[........] <|@
d <@d|@=== Debug Properties ===
length: 8
stamp: <n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;>
=== Inputs ===
value: a3395 
=== Succesors ===
=== Usages ===
v3218 v3216 v3214 
=== Predecessor ===
- >@ <|@
instruction <@a|@com.oracle.graal.enterprise.J.a>@ value: a3395  <|@  <|@
f <@~|@floating>@ <|@
tid j2970 <|@
result v221|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j1238 
y: j2845 
=== Succesors ===
=== Usages ===
v2971 v2973 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1238 y: j2845  <|@  <|@
f <@~|@floating>@ <|@
tid v2971 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2970 
y: j1818 
=== Succesors ===
=== Usages ===
v2537 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2970 y: j1818  <|@  <|@
f <@*|@fixed>@ <|@
tid v2537 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v2971 
=== Succesors ===
trueSuccessor: v2535 
falseSuccessor: v2536 
=== Usages ===
=== Predecessor ===
v2533 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2971 #trueSuccessor: v2535 #falseSuccessor: v2536  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v218|QWORD[.] = LEA [v217|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v220|V128_DWORD[.   ] = H v207|DWORD[.] <|@ <|@
      nr   -1  <|@ instruction v219|V256_DWORD[........] = VPBROADCASTD v220|V128_DWORD[.   ] nZ: YMM <|@ <|@
      nr   -1  <|@ instruction v221|QWORD = LEA [v205|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v221|QWORD, y: v221|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B214 -> B215 falseDestination: B214 -> B216 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B215"
    from_bci -1
    to_bci -1
    predecessors "B214" 
    successors "B219" 
    xhandlers
    flags 
    probability 4587511328902186956
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2535 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2546 
=== Usages ===
=== Predecessor ===
v2537 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2546  <|@  <|@
f <@*|@fixed>@ <|@
tid v2546 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2547 
=== Predecessor ===
v2535 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B215 -> B219 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B216"
    from_bci -1
    to_bci -1
    predecessors "B214" 
    successors "B217" 
    xhandlers
    flags 
    probability 4580557559986018952
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2536 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2538 
=== Usages ===
=== Predecessor ===
v2537 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2538  <|@  <|@
f <@*|@fixed>@ <|@
tid v2538 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2539 
=== Predecessor ===
v2536 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B216 -> B217 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B217"
    from_bci -1
    to_bci -1
    predecessors "B216" "B235" 
    successors "B218" "B235" 
    xhandlers
    flags "llh" 
    loop_index 12
    loop_depth 1
    probability 4589564759240759944
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2964 <|@
result v222|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2539 
values: j1818 j2969 
=== Succesors ===
=== Usages ===
v3524 j2969 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2539 values: j1818 j2969  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2539 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v2538 
=== Succesors ===
next: v3218 
=== Usages ===
j2964 v2542 v2543 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v2538 #next: v3218  <|@  <|@
f <@~|@floating>@ <|@
tid v3524 <|@
result [v218|QWORD[.] + v222|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j2945 
index: j2964 
=== Succesors ===
=== Usages ===
v3218 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2945 index: j2964  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3218 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3524 
value: v3211 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2545 
=== Usages ===
=== Predecessor ===
v2539 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3524 value: v3211 stateAfter: - lastLocationAccess: - #next: v2545  <|@  <|@
f <@~|@floating>@ <|@
tid j2969 <|@
result v223|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2964 
y: j1770 
=== Succesors ===
=== Usages ===
j2958 j2964 v2973 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2964 y: j1770  <|@  <|@
f <@~|@floating>@ <|@
tid v2973 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2970 
y: j2969 
=== Succesors ===
=== Usages ===
v2545 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2970 y: j2969  <|@  <|@
f <@*|@fixed>@ <|@
tid v2545 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2973 
=== Succesors ===
trueSuccessor: v2542 
falseSuccessor: v2544 
=== Usages ===
=== Predecessor ===
v3218 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2973 #trueSuccessor: v2542 #falseSuccessor: v2544  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v222|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v218|QWORD[.] + v222|QWORD * 4], input: v219|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v223|QWORD = LEA [v222|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v223|QWORD, y: v221|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B217 -> B218 falseDestination: B217 -> B235 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B218"
    from_bci -1
    to_bci -1
    predecessors "B217" 
    successors "B219" 
    xhandlers
    flags 
    probability 4580557559986018952
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2542 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v2539 
=== Succesors ===
next: v2548 
=== Usages ===
=== Predecessor ===
v2545 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v2539 #next: v2548  <|@  <|@
f <@*|@fixed>@ <|@
tid v2548 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2547 
=== Predecessor ===
v2542 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v223|QWORD] destination: B218 -> B219 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B219"
    from_bci -1
    to_bci -1
    predecessors "B215" "B218" 
    successors "B220" "B221" 
    xhandlers
    flags 
    probability 4589564759240759944
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2958 <|@
result v224|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2547 
values: j1818 j2969 
=== Succesors ===
=== Usages ===
v3523 j2963 j2952 v2976 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2547 values: j1818 j2969  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2547 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2546 v2548 
=== Succesors ===
next: v2566 
=== Usages ===
j2958 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2546 v2548 #next: v2566  <|@  <|@
f <@~|@floating>@ <|@
tid j2975 <|@
result v225|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j1238 
y: j2851 
=== Succesors ===
=== Usages ===
v2976 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1238 y: j2851  <|@  <|@
f <@~|@floating>@ <|@
tid v2976 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2975 
y: j2958 
=== Succesors ===
=== Usages ===
v2566 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2975 y: j2958  <|@  <|@
f <@*|@fixed>@ <|@
tid v2566 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2976 
=== Succesors ===
trueSuccessor: v2565 
falseSuccessor: v2564 
=== Usages ===
=== Predecessor ===
v2547 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2976 #trueSuccessor: v2565 #falseSuccessor: v2564  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v224|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v225|QWORD = LEA [v205|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v224|QWORD, y: v225|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B219 -> B220 falseDestination: B219 -> B221 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B220"
    from_bci -1
    to_bci -1
    predecessors "B219" 
    successors "B222" 
    xhandlers
    flags 
    probability 4580557559986018952
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2565 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2569 
=== Usages ===
=== Predecessor ===
v2566 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2569  <|@  <|@
f <@*|@fixed>@ <|@
tid v2569 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2558 
=== Predecessor ===
v2565 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v224|QWORD] destination: B220 -> B222 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B221"
    from_bci -1
    to_bci -1
    predecessors "B219" 
    successors "B222" 
    xhandlers
    flags 
    probability 4587511328902186956
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2564 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3217 
=== Usages ===
=== Predecessor ===
v2566 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3217  <|@  <|@
f <@~|@floating>@ <|@
tid v3523 <|@
result [v218|QWORD[.] + v224|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j2945 
index: j2958 
=== Succesors ===
=== Usages ===
v3217 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2945 index: j2958  <|@  <|@
f <@~|@floating>@ <|@
tid v3216 <|@
result v226|V128_DWORD[....] <|@
d <@d|@=== Debug Properties ===
length: 4
offset: 0
stamp: <n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;>
=== Inputs ===
value: v3211 
=== Succesors ===
=== Usages ===
v3217 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.J.c>@ value: v3211  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3217 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3523 
value: v3216 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2557 
=== Usages ===
=== Predecessor ===
v2564 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3523 value: v3216 stateAfter: - lastLocationAccess: - #next: v2557  <|@  <|@
f <@~|@floating>@ <|@
tid j2963 <|@
result v227|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2958 
y: j2813 
=== Succesors ===
=== Usages ===
j2952 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2958 y: j2813  <|@  <|@
f <@*|@fixed>@ <|@
tid v2557 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2558 
=== Predecessor ===
v3217 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v226|V128_DWORD[....] = VMOVE v219|V256_DWORD[........] <|@ <|@
      nr   -1  <|@ instruction J (address: [v218|QWORD[.] + v224|QWORD * 4], input: v226|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v227|QWORD = LEA [v224|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v227|QWORD] destination: B221 -> B222 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B222"
    from_bci -1
    to_bci -1
    predecessors "B221" "B220" 
    successors "B223" "B224" 
    xhandlers
    flags 
    probability 4589564759240759944
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2952 <|@
result v228|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2558 
values: j2963 j2958 
=== Succesors ===
=== Usages ===
v3522 j2957 j2946 v2979 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2558 values: j2963 j2958  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2558 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2557 v2569 
=== Succesors ===
next: v2572 
=== Usages ===
j2952 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2557 v2569 #next: v2572  <|@  <|@
f <@~|@floating>@ <|@
tid j2978 <|@
result v229|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j1238 
y: j2855 
=== Succesors ===
=== Usages ===
v2979 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1238 y: j2855  <|@  <|@
f <@~|@floating>@ <|@
tid v2979 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2978 
y: j2952 
=== Succesors ===
=== Usages ===
v2572 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2978 y: j2952  <|@  <|@
f <@*|@fixed>@ <|@
tid v2572 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2979 
=== Succesors ===
trueSuccessor: v2571 
falseSuccessor: v2570 
=== Usages ===
=== Predecessor ===
v2558 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2979 #trueSuccessor: v2571 #falseSuccessor: v2570  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v228|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v229|QWORD = LEA [v205|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v228|QWORD, y: v229|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B222 -> B223 falseDestination: B222 -> B224 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B223"
    from_bci -1
    to_bci -1
    predecessors "B222" 
    successors "B225" 
    xhandlers
    flags 
    probability 4580557559986018952
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2571 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2575 
=== Usages ===
=== Predecessor ===
v2572 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2575  <|@  <|@
f <@*|@fixed>@ <|@
tid v2575 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2561 
=== Predecessor ===
v2571 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v228|QWORD] destination: B223 -> B225 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B224"
    from_bci -1
    to_bci -1
    predecessors "B222" 
    successors "B225" 
    xhandlers
    flags 
    probability 4587511328902186956
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2570 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3215 
=== Usages ===
=== Predecessor ===
v2572 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3215  <|@  <|@
f <@~|@floating>@ <|@
tid v3522 <|@
result [v218|QWORD[.] + v228|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j2945 
index: j2952 
=== Succesors ===
=== Usages ===
v3215 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2945 index: j2952  <|@  <|@
f <@~|@floating>@ <|@
tid v3214 <|@
result v230|V64_DWORD[..] <|@
d <@d|@=== Debug Properties ===
length: 2
offset: 0
stamp: <n Ljava/lang/Object;,n Ljava/lang/Object;>
=== Inputs ===
value: v3211 
=== Succesors ===
=== Usages ===
v3215 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.J.c>@ value: v3211  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3215 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3522 
value: v3214 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2560 
=== Usages ===
=== Predecessor ===
v2570 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3522 value: v3214 stateAfter: - lastLocationAccess: - #next: v2560  <|@  <|@
f <@~|@floating>@ <|@
tid j2957 <|@
result v231|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2952 
y: j2827 
=== Succesors ===
=== Usages ===
j2946 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2952 y: j2827  <|@  <|@
f <@*|@fixed>@ <|@
tid v2560 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2561 
=== Predecessor ===
v3215 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v230|V64_DWORD[..] = VMOVE v219|V256_DWORD[........] <|@ <|@
      nr   -1  <|@ instruction J (address: [v218|QWORD[.] + v228|QWORD * 4], input: v230|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v231|QWORD = LEA [v228|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v231|QWORD] destination: B224 -> B225 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B225"
    from_bci -1
    to_bci -1
    predecessors "B224" "B223" 
    successors "B226" "B227" 
    xhandlers
    flags 
    probability 4589564759240759944
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2946 <|@
result v232|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2561 
values: j2957 j2952 
=== Succesors ===
=== Usages ===
v3521 v2981 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2561 values: j2957 j2952  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2561 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2560 v2575 
=== Succesors ===
next: v2578 
=== Usages ===
j2946 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2560 v2575 #next: v2578  <|@  <|@
f <@~|@floating>@ <|@
tid v2981 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1239 
y: j2946 
=== Succesors ===
=== Usages ===
v2578 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1239 y: j2946  <|@  <|@
f <@*|@fixed>@ <|@
tid v2578 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2981 
=== Succesors ===
trueSuccessor: v2577 
falseSuccessor: v2576 
=== Usages ===
=== Predecessor ===
v2561 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2981 #trueSuccessor: v2577 #falseSuccessor: v2576  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v232|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v232|QWORD, y: v206|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B225 -> B226 falseDestination: B225 -> B227 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B226"
    from_bci -1
    to_bci -1
    predecessors "B225" 
    successors "B228" 
    xhandlers
    flags 
    probability 4580557559986018952
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2577 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2581 
=== Usages ===
=== Predecessor ===
v2578 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2581  <|@  <|@
f <@*|@fixed>@ <|@
tid v2581 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2551 
=== Predecessor ===
v2577 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B226 -> B228 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B227"
    from_bci -1
    to_bci -1
    predecessors "B225" 
    successors "B228" 
    xhandlers
    flags 
    probability 4587511328902186956
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2576 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3213 
=== Usages ===
=== Predecessor ===
v2578 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3213  <|@  <|@
f <@~|@floating>@ <|@
tid v3521 <|@
result [v218|QWORD[.] + v232|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j2945 
index: j2946 
=== Succesors ===
=== Usages ===
v3213 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2945 index: j2946  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3213 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3521 
value: a3395 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2563 
=== Usages ===
=== Predecessor ===
v2576 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3521 value: a3395 stateAfter: - lastLocationAccess: - #next: v2563  <|@  <|@
f <@*|@fixed>@ <|@
tid v2563 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2551 
=== Predecessor ===
v3213 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v218|QWORD[.] + v232|QWORD * 4], y: v207|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B227 -> B228 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B228"
    from_bci -1
    to_bci -1
    predecessors "B213" "B227" "B226" 
    successors "B229" "B230" 
    xhandlers
    flags 
    probability 4594068358868130440
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2551 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2550 v2563 v2581 
=== Succesors ===
next: v2092 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2550 v2563 v2581 #next: v2092  <|@  <|@
f <@~|@floating>@ <|@
tid v1272 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3394 
y: i13 
=== Succesors ===
=== Usages ===
v2092 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i3394 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v2092 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:154) [bci: 1]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1272 
=== Succesors ===
trueSuccessor: v2090 
falseSuccessor: v2091 
=== Usages ===
=== Predecessor ===
v2551 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1272 #trueSuccessor: v2090 #falseSuccessor: v2091  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v204|DWORD, y: v204|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B228 -> B229 falseDestination: B228 -> B230 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B229"
    from_bci -1
    to_bci -1
    predecessors "B228" 
    successors "B233" 
    xhandlers
    flags 
    probability 4589564759240759944
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2090 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:155) [bci: 4]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2116 
=== Usages ===
=== Predecessor ===
v2092 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2116  <|@  <|@
f <@*|@fixed>@ <|@
tid v2116 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2115 
=== Predecessor ===
v2090 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B229 -> B233 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B230"
    from_bci -1
    to_bci -1
    predecessors "B228" 
    successors "B231" 
    xhandlers
    flags 
    probability 4589564759240759944
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2091 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:157) [bci: 5]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2093 
=== Usages ===
=== Predecessor ===
v2092 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2093  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2093 <|@
result [v217|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToFirstArrayElement(WriteBarrierSnippets.java:376) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:159) [bci: 20]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v3442 
=== Succesors ===
next: j2095 
=== Usages ===
j2094 
=== Predecessor ===
v2091 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v3442 #next: j2095  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2095 <|@
result [v217|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:385) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v3442 
=== Succesors ===
next: v2103 
=== Usages ===
j2099 
=== Predecessor ===
j2093 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v3442 #next: v2103  <|@  <|@
f <@~|@floating>@ <|@
tid i2096 <|@
result v233|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i32
=== Inputs ===
x: i3394 
y: i632 
=== Succesors ===
=== Usages ===
i2097 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i3394 y: i632  <|@  <|@
f <@~|@floating>@ <|@
tid i2097 <|@
result v234|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i2096 
y: i912 
=== Succesors ===
=== Usages ===
j2098 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i2096 y: i912  <|@  <|@
f <@~|@floating>@ <|@
tid j2098 <|@
result v235|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 26]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
resultBits: 64
stamp: i64 [-2147483648 - 2147483644] ⇈fffffffffffffffc
=== Inputs ===
value: i2097 
=== Succesors ===
=== Usages ===
j2099 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2097  <|@  <|@
f <@~|@floating>@ <|@
tid j2099 <|@
result v237|QWORD[.] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 27]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i64
=== Inputs ===
x: j2095 
y: j2098 
=== Succesors ===
=== Usages ===
j2100 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2095 y: j2098  <|@  <|@
f <@~|@floating>@ <|@
tid j2100 <|@
result v238|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 34]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j2099 
y: i1852 
=== Succesors ===
=== Usages ===
j2101 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j2099 y: i1852  <|@  <|@
f <@~|@floating>@ <|@
tid j2094 <|@
result v239|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:159) [bci: 24]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j2093 
y: i1852 
=== Succesors ===
=== Usages ===
j2101 j2114 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j2093 y: i1852  <|@  <|@
f <@~|@floating>@ <|@
tid j2101 <|@
result v241|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:161) [bci: 41]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i64 [-36028797018963967 - 36028797018963967]
=== Inputs ===
x: j2100 
y: j2094 
=== Succesors ===
=== Usages ===
j2102 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j2100 y: j2094  <|@  <|@
f <@~|@floating>@ <|@
tid j2102 <|@
result v242|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:161) [bci: 43]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i64 [-36028797018963966 - 36028797018963968]
=== Inputs ===
x: j2101 
y: j1778 
=== Succesors ===
=== Usages ===
j2105 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2101 y: j1778  <|@  <|@
f <@*|@fixed>@ <|@
tid v2103 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2104 
=== Predecessor ===
j2095 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v233|DWORD = DEC v204|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v234|DWORD = SHL v233|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v235|QWORD = MOVSXD v234|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v236|QWORD[.] = LEA [v217|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v237|QWORD[.] = ADD (x: v236|QWORD[.], y: v235|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v238|QWORD[*] = SHR v237|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v240|QWORD[.] = LEA [v217|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v239|QWORD[*] = SHR v240|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v241|QWORD[*] = SUB (x: v238|QWORD[*], ~y: v239|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v242|QWORD[*] = INC v241|QWORD[*] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v242|QWORD[*]] destination: B230 -> B231 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B231"
    from_bci -1
    to_bci -1
    predecessors "B230" "B234" 
    successors "B232" "B234" 
    xhandlers
    flags "llh" 
    loop_index 13
    loop_depth 1
    probability 4594068358868130440
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2105 <|@
result v243|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2104 
values: j2102 j2106 
=== Succesors ===
=== Usages ===
j2106 v2107 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2104 values: j2102 j2106  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2104 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 2.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v2103 
=== Succesors ===
next: v2110 
=== Usages ===
j2105 v2108 v2113 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v2103 #next: v2110  <|@  <|@
f <@~|@floating>@ <|@
tid v2107 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 55]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2105 
y: j1778 
=== Succesors ===
=== Usages ===
v2110 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2105 y: j1778  <|@  <|@
f <@*|@fixed>@ <|@
tid v2110 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 55]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v2107 
=== Succesors ===
trueSuccessor: v2108 
falseSuccessor: v2109 
=== Usages ===
=== Predecessor ===
v2104 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2107 #trueSuccessor: v2108 #falseSuccessor: v2109  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v243|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v243|QWORD[*] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B231 -> B232 falseDestination: B231 -> B234 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B232"
    from_bci -1
    to_bci -1
    predecessors "B231" 
    successors "B233" 
    xhandlers
    flags 
    probability 4589564759240759944
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2108 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:165) [bci: 76]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v2104 
=== Succesors ===
next: v2117 
=== Usages ===
=== Predecessor ===
v2110 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v2104 #next: v2117  <|@  <|@
f <@*|@fixed>@ <|@
tid v2117 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2115 
=== Predecessor ===
v2108 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B232 -> B233 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B233"
    from_bci -1
    to_bci -1
    predecessors "B229" "B232" 
    successors "B239" 
    xhandlers
    flags 
    probability 4594068358868130440
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2115 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2116 v2117 
=== Succesors ===
next: a1654 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2116 v2117 #next: a1654  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1654 <|@
result v217|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a2062 
=== Succesors ===
next: v850 
=== Usages ===
a1174 
=== Predecessor ===
v2115 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a2062 #next: v850  <|@  <|@
f <@*|@fixed>@ <|@
tid v850 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v805 
=== Predecessor ===
a1654 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v204|DWORD, v217|QWORD[.]] destination: B233 -> B239 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B234"
    from_bci -1
    to_bci -1
    predecessors "B231" 
    successors "B231" 
    xhandlers
    flags "lle" 
    loop_index 13
    loop_depth 1
    probability 4589564759240759944
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2109 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 58]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2112 
=== Usages ===
=== Predecessor ===
v2110 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2112  <|@  <|@
f <@~|@floating>@ <|@
tid j2106 <|@
result v244|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 50]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i64
=== Inputs ===
x: j2105 
y: j1188 
=== Succesors ===
=== Usages ===
j2105 j2111 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2105 y: j1188  <|@  <|@
f <@~|@floating>@ <|@
tid j2114 <|@
result v245|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 62]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i64 [4682670080 - 36028801701634047] ⇈00ffffffffffffff
=== Inputs ===
x: j2094 
y: j1874 
=== Succesors ===
=== Usages ===
j2111 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2094 y: j1874  <|@  <|@
f <@~|@floating>@ <|@
tid j2111 <|@
result v246|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 65]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: i64
=== Inputs ===
x: j2106 
y: j2114 
=== Succesors ===
=== Usages ===
v2112 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2106 y: j2114  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2112 <|@
d <@d|@=== Debug Properties ===
kind: boolean
nodeSourcePosition: at org.graalvm.compiler.replacements.nodes.DirectStoreNode.storeBoolean(long, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 70]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
address: j2111 
value: i13 
=== Succesors ===
next: v2113 
=== Usages ===
=== Predecessor ===
v2109 >@ <|@
instruction <@DirectStore|@org.graalvm.compiler.replacements.nodes.DirectStoreNode>@ address: j2111 value: i13 #next: v2113  <|@  <|@
f <@*|@fixed>@ <|@
tid v2113 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at java.util.Collections$CopiesList.toArray(Collections.java:5030) [bci: 4]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
loopBegin: v2104 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2112 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v2104  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v244|QWORD[*] = DEC v243|QWORD[*] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v245|QWORD[*] = ADD (x: v239|QWORD[*], y: v3|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v246|QWORD[*] = ADD (x: v245|QWORD[*], y: v244|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v246|QWORD[*]], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v244|QWORD[*]] destination: B234 -> B231 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B235"
    from_bci -1
    to_bci -1
    predecessors "B217" 
    successors "B217" 
    xhandlers
    flags "lle" 
    loop_index 12
    loop_depth 1
    probability 4587511328902186956
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2544 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2543 
=== Usages ===
=== Predecessor ===
v2545 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2543  <|@  <|@
f <@*|@fixed>@ <|@
tid v2543 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v2539 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2544 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v2539  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v223|QWORD] destination: B235 -> B217 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B236"
    from_bci -1
    to_bci -1
    predecessors "B202" 
    successors "B237" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3338 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3155) [bci: 20]
at java.util.Collections$CopiesList.toArray(Collections.java:5032) [bci: 25]
at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1700 
=== Usages ===
=== Predecessor ===
v3342 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1700  <|@  <|@
f <@~|@floating>@ <|@
tid a1702 <|@
result v247|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@1399980118
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@1399980118]
=== Inputs ===
=== Succesors ===
=== Usages ===
a1690 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1701 <|@
result int[-255259|0xfffffffffffc1ae5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -255259
stableDimension: 0
stamp: i32 [-255259] ⇊00000000fffc1ae5 ⇈00000000fffc1ae5
stampKind: i32
value: int[-255259|0xfffffffffffc1ae5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1689 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1700 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1686 
=== Predecessor ===
v3338 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v247|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1399980118] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-255259|0xfffffffffffc1ae5], v247|QWORD[.]] destination: B236 -> B237 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B237"
    from_bci -1
    to_bci -1
    predecessors "B50" "B236" "B205" "B198" "B52" "B195" "B83" "B91" "B88" "B194" "B2" "B95" "B137" "B134" "B132" "B193" "B176" "B174" "B133" "B175" 
    successors 
    xhandlers
    flags 
    probability 2374522903531094016
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1689 <|@
result v248|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-405345 - -219403] ⇊00000000fff80085 ⇈00000000fffdffff
valueDescription: i32
=== Inputs ===
merge: v1686 
values: i1699 i1701 i1704 i1706 i1708 i1712 i1714 i1716 i1718 i1720 i1722 i1724 i1727 i1732 i1735 i1737 i1739 i1741 i1732 i1739 
=== Succesors ===
=== Usages ===
v1691 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1686 values: i1699 i1701 i1704 i1706 i1708 i1712 i1714 i1716 i1718 i1720 i1722 i1724 i1727 i1732 i1735 i1737 i1739 i1741 i1732 i1739  <|@  <|@
f <@~|@floating>@ <|@
tid a1690 <|@
result v249|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/k/d$a;
valueDescription: a -
=== Inputs ===
merge: v1686 
values: a1548 a1702 a1548 a1548 a1548 a1548 a1548 a1548 a1548 a1548 a1548 a1725 a1725 a1733 a1733 a1733 a1733 a1733 a1733 a1733 
=== Succesors ===
=== Usages ===
v1691 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1686 values: a1548 a1702 a1548 a1548 a1548 a1548 a1548 a1548 a1548 a1548 a1548 a1725 a1725 a1733 a1733 a1733 a1733 a1733 a1733 a1733  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1686 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1698 v1700 v1703 v1705 v1707 v1711 v1713 v1715 v1717 v1719 v1721 v1723 v1726 v1731 v1734 v1736 v1738 v1740 v3549 v3550 
=== Succesors ===
next: v1691 
=== Usages ===
i1689 a1690 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1698 v1700 v1703 v1705 v1707 v1711 v1713 v1715 v1717 v1719 v1721 v1723 v1726 v1731 v1734 v1736 v1738 v1740 v3549 v3550 #next: v1691  <|@  <|@
f <@*|@fixed>@ <|@
tid v1691 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i1689 
speculation: a1690 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1686 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i1689 speculation: a1690  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v248|DWORD, v249|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v248|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v249|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.addAll(ArrayList.java:581) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B238"
    from_bci -1
    to_bci -1
    predecessors "B199" 
    successors "B239" 
    xhandlers
    flags 
    probability 4575117334181575713
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v204 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: a5 
=== Usages ===
=== Predecessor ===
v155 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a5  <|@  <|@
tid v1005 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Interface
nodeSourcePosition: at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
returnStamp: a [Ljava/lang/Object;
signature: [Ljdk.vm.ci.meta.JavaType;@58bddc36
stamp: void
targetMethod: HotSpotMethod<Collection.toArray()>
=== Inputs ===
arguments: a2 
=== Succesors ===
=== Usages ===
a5 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2  <|@  <|@
tid ?1516 <|@
d <@d|@=== Debug Properties ===
bci: 1
code: ResolvedJavaMethodBytecode<ArrayList.addAll(Collection)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: ArrayList.java
sourceLine: 581
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - 
=== Succesors ===
=== Usages ===
a5 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a5 <|@
result v250|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 1
nodeSourcePosition: at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
polymorphic: false
stamp: a [Ljava/lang/Object;
targetMethod: Direct#Collection.toArray
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1005 
stateDuring: ?1516 
=== Succesors ===
next: i3396 
=== Usages ===
a1174 v3428 
=== Predecessor ===
v204 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1005 stateDuring: ?1516 #next: i3396  <|@  <|@
tid ?6 <|@
d <@d|@=== Debug Properties ===
bci: 6
code: ResolvedJavaMethodBytecode<ArrayList.addAll(Collection)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
rethrowException: false
sourceFile: ArrayList.java
sourceLine: 581
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 - - - a1548 
=== Succesors ===
=== Usages ===
i3396 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - a1548  <|@  <|@
f <@~|@floating>@ <|@
tid v3428 <|@
result [v250|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a5 
index: - 
=== Succesors ===
=== Usages ===
i3396 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a5 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3396 <|@
result v251|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.ArrayList.addAll(ArrayList.java:582) [bci: 8]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?6 
guard: - 
address: v3428 
=== Succesors ===
next: v804 
=== Usages ===
i808 
=== Predecessor ===
a5 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?6 guard: - address: v3428 #next: v804  <|@  <|@
f <@*|@fixed>@ <|@
tid v804 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v805 
=== Predecessor ===
i3396 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Collection.toArray()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1] <|@ <|@
      nr   -1  <|@ instruction v250|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.addAll(ArrayList.java:581) [bci: 6]
stack: Object[null] 
locals: v0|QWORD[.] - - - 
>@ <|@ instruction v251|DWORD = MOV [v250|QWORD[.] + 12] size: DWORD state [bci:6] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v251|DWORD, v250|QWORD[.]] destination: B238 -> B239 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B239"
    from_bci -1
    to_bci -1
    predecessors "B238" "B44" "B192" "B233" 
    successors "B240" "B243" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i808 <|@
result v252|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
valueDescription: i32
=== Inputs ===
merge: v805 
values: i3396 i3361 i3371 i3394 
=== Succesors ===
=== Usages ===
i9 ?34 i2296 ?1519 i19 ?1518 v22 i854 j2348 i1099 v1131 i1050 i2138 j3347 v3353 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v805 values: i3396 i3361 i3371 i3394  <|@  <|@
f <@~|@floating>@ <|@
tid a1174 <|@
result v253|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a! [Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v805 
values: a5 a1646 a1650 a1654 
=== Succesors ===
=== Usages ===
?34 v3433 v2164 ?806 v2321 v3476 j2146 j2159 j2316 j2303 v3555 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v805 values: a5 a1646 a1650 a1654  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v805 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v804 v807 v842 v850 
=== Succesors ===
next: a3397 
=== Usages ===
i808 a1174 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v804 v807 v842 v850 #next: a3397  <|@  <|@
f <@~|@floating>@ <|@
tid v3430 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a3397 v1072 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3397 <|@
result v254|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList.elementData
nodeSourcePosition: at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 2]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v3430 
=== Succesors ===
next: v3551 
=== Usages ===
a1015 v3551 v1126 v3432 v3434 v3481 v3554 
=== Predecessor ===
v805 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3430 #next: v3551  <|@  <|@
tid ?806 <|@
d <@d|@=== Debug Properties ===
bci: 6
code: ResolvedJavaMethodBytecode<ArrayList.addAll(Collection)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
rethrowException: false
sourceFile: ArrayList.java
sourceLine: 581
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 - - - a1174 
=== Succesors ===
=== Usages ===
v3551 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - a1174  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3551 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?806 
object: a3397 
=== Succesors ===
next: i3398 
=== Usages ===
=== Predecessor ===
a3397 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?806 object: a3397 #next: i3398  <|@  <|@
f <@~|@floating>@ <|@
tid v3429 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i3398 i3405 v1067 i3414 v1116 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3398 <|@
result v255|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList.size
nodeSourcePosition: at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 12]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v3429 
=== Succesors ===
next: v39 
=== Usages ===
i9 j2309 i2295 v1100 v1051 v1081 i2137 j3350 
=== Predecessor ===
v3551 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3429 #next: v39  <|@  <|@
f <@~|@floating>@ <|@
tid i9 <|@
result v256|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 16]
stamp: i32
=== Inputs ===
x: i808 
y: i3398 
=== Succesors ===
=== Usages ===
i51 v42 i51 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i808 y: i3398  <|@  <|@
f <@~|@floating>@ <|@
tid a1125 <|@
result NarrowOop[Object[0]{}] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList.calculateCapacity(ArrayList.java:224) [bci: 4]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
rawvalue: Object[0]{}
stableDimension: 0
stamp: n!# [Ljava/lang/Object;
stampKind: n -
value: NarrowOop[Object[0]{}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1126 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1126 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.ArrayList.calculateCapacity(ArrayList.java:224) [bci: 4]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a3397 
y: a1125 
=== Succesors ===
=== Usages ===
v39 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a3397 y: a1125  <|@  <|@
f <@*|@fixed>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.calculateCapacity(ArrayList.java:224) [bci: 4]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: void
trueSuccessorProbability: 0.20639829530068676
=== Inputs ===
condition: v1126 
=== Succesors ===
trueSuccessor: v37 
falseSuccessor: v38 
=== Usages ===
=== Predecessor ===
i3398 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1126 #trueSuccessor: v37 #falseSuccessor: v38  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v252|DWORD, v253|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v254|DWORD[.] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.addAll(ArrayList.java:581) [bci: 6]
stack: v253|QWORD[.] 
locals: v0|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v254|DWORD[.] * 8] state [bci:6] <|@ <|@
      nr   -1  <|@ instruction v255|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v256|DWORD = ADD (x: v252|DWORD, y: v255|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v254|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Object[0]{}] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.20639829530068676 condition: = trueDestination: B239 -> B240 falseDestination: B239 -> B243 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B240"
    from_bci -1
    to_bci -1
    predecessors "B239" 
    successors "B241" "B242" 
    xhandlers
    flags 
    probability 4596604302576984052
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.calculateCapacity(ArrayList.java:225) [bci: 7]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v45 
=== Usages ===
=== Predecessor ===
v39 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v45  <|@  <|@
f <@~|@floating>@ <|@
tid i41 <|@
result int[11|0xb] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at java.util.ArrayList.calculateCapacity(ArrayList.java:225) [bci: 10]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
rawvalue: 11
stableDimension: 0
stamp: i32 [11] ⇊000000000000000b ⇈000000000000000b
stampKind: i32
value: int[11|0xb]
=== Inputs ===
=== Succesors ===
=== Usages ===
v42 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at java.util.ArrayList.calculateCapacity(ArrayList.java:225) [bci: 10]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i9 
y: i41 
=== Succesors ===
=== Usages ===
v45 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i9 y: i41  <|@  <|@
f <@*|@fixed>@ <|@
tid v45 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at java.util.ArrayList.calculateCapacity(ArrayList.java:225) [bci: 10]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: void
trueSuccessorProbability: 0.7356387781002678
=== Inputs ===
condition: v42 
=== Succesors ===
trueSuccessor: v43 
falseSuccessor: v44 
=== Usages ===
=== Predecessor ===
v37 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v42 #trueSuccessor: v43 #falseSuccessor: v44  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v256|DWORD y: 11 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7356387781002678 condition: < trueDestination: B240 -> B241 falseDestination: B240 -> B242 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B241"
    from_bci -1
    to_bci -1
    predecessors "B240" 
    successors "B244" 
    xhandlers
    flags 
    probability 4594638437905347158
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 5]
at java.util.ArrayList.calculateCapacity(ArrayList.java:225) [bci: 10]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v52 
=== Usages ===
=== Predecessor ===
v45 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v52  <|@  <|@
f <@~|@floating>@ <|@
tid i40 <|@
result int[10|0xa] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList.calculateCapacity(ArrayList.java:225) [bci: 7]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
rawvalue: 10
stableDimension: 0
stamp: i32 [10] ⇊000000000000000a ⇈000000000000000a
stampKind: i32
value: int[10|0xa]
=== Inputs ===
=== Succesors ===
=== Usages ===
i51 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v49 
=== Predecessor ===
v43 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[10|0xa]] destination: B241 -> B244 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B242"
    from_bci -1
    to_bci -1
    predecessors "B240" 
    successors "B244" 
    xhandlers
    flags 
    probability 4588024279722342007
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v44 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 9]
at java.util.ArrayList.calculateCapacity(ArrayList.java:225) [bci: 10]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v53 
=== Usages ===
=== Predecessor ===
v45 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v53  <|@  <|@
f <@*|@fixed>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v49 
=== Predecessor ===
v44 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v256|DWORD] destination: B242 -> B244 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B243"
    from_bci -1
    to_bci -1
    predecessors "B239" 
    successors "B244" 
    xhandlers
    flags 
    probability 4605323348228405251
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.calculateCapacity(ArrayList.java:227) [bci: 14]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v50 
=== Usages ===
=== Predecessor ===
v39 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v50  <|@  <|@
f <@*|@fixed>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v49 
=== Predecessor ===
v38 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v256|DWORD] destination: B243 -> B244 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B244"
    from_bci -1
    to_bci -1
    predecessors "B243" "B241" "B242" 
    successors "B245" "B259" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i51 <|@
result v257|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v49 
values: i9 i40 i9 
=== Succesors ===
=== Usages ===
i78 i1132 ?57 i60 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v49 values: i9 i40 i9  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v50 v52 v53 
=== Succesors ===
next: i3399 
=== Usages ===
i51 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v50 v52 v53 #next: i3399  <|@  <|@
f <@~|@floating>@ <|@
tid v3431 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i3399 v1018 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3399 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:235) [bci: 2]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v3431 
=== Succesors ===
next: v1018 
=== Usages ===
i55 
=== Predecessor ===
v49 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3431 #next: v1018  <|@  <|@
f <@~|@floating>@ <|@
tid i55 <|@
result v259|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:235) [bci: 6]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: i32
=== Inputs ===
x: i3399 
y: i23 
=== Succesors ===
=== Usages ===
v1018 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i3399 y: i23  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1018 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList.modCount
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:235) [bci: 7]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3431 
value: i55 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i3400 
=== Usages ===
=== Predecessor ===
i3399 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3431 value: i55 stateAfter: - lastLocationAccess: - #next: i3400  <|@  <|@
f <@~|@floating>@ <|@
tid v3432 <|@
result [v254|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3397 
=== Succesors ===
=== Usages ===
i3400 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3397  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3400 <|@
result v260|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:238) [bci: 15]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v3432 
=== Succesors ===
next: i3401 
=== Usages ===
i60 i76 i77 i1617 i1050 v1540 
=== Predecessor ===
v1018 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3432 #next: i3401  <|@  <|@
f <@~|@floating>@ <|@
tid v3433 <|@
result [v253|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1174 
index: - 
=== Succesors ===
=== Usages ===
i3401 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1174 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3401 <|@
result v261|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 60]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:146) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v3433 
=== Succesors ===
next: v64 
=== Usages ===
v1131 
=== Predecessor ===
i3400 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3433 #next: v64  <|@  <|@
f <@~|@floating>@ <|@
tid v1131 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:146) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3401 
y: i808 
=== Succesors ===
=== Usages ===
v1098 v1049 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i3401 y: i808  <|@  <|@
f <@~|@floating>@ <|@
tid i60 <|@
result v262|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:238) [bci: 16]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: i32
=== Inputs ===
x: i51 
y: i3400 
=== Succesors ===
=== Usages ===
v61 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i51 y: i3400  <|@  <|@
f <@~|@floating>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:238) [bci: 17]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i60 
y: i23 
=== Succesors ===
=== Usages ===
v64 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i60 y: i23  <|@  <|@
tid ?34 <|@
d <@d|@=== Debug Properties ===
bci: 17
code: ResolvedJavaMethodBytecode<ArrayList.addAll(Collection)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: ArrayList.java
sourceLine: 583
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - a1174 i808 
=== Succesors ===
=== Usages ===
?70 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - a1174 i808  <|@  <|@
tid ?70 <|@
d <@d|@=== Debug Properties ===
bci: 9
code: ResolvedJavaMethodBytecode<ArrayList.ensureCapacityInternal(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ArrayList.java
sourceLine: 231
stackSize: 0
=== Inputs ===
outerFrameState: ?34 
values: - - 
=== Succesors ===
=== Usages ===
?57 ?99 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?34 values: - -  <|@  <|@
tid ?57 <|@
d <@d|@=== Debug Properties ===
bci: 10
code: ResolvedJavaMethodBytecode<ArrayList.ensureExplicitCapacity(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:235) [bci: 7]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
rethrowException: false
sourceFile: ArrayList.java
sourceLine: 238
stackSize: 0
=== Inputs ===
outerFrameState: ?70 
values: a1 i51 
=== Succesors ===
=== Usages ===
a2207 v1747 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?70 values: a1 i51  <|@  <|@
f <@~|@floating>@ <|@
tid v1081 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 22]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:146) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3398 
y: i13 
=== Succesors ===
=== Usages ===
v1087 v1038 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3398 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:238) [bci: 17]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: void
trueSuccessorProbability: 0.7759914359571053
=== Inputs ===
condition: v61 
=== Succesors ===
trueSuccessor: v62 
falseSuccessor: v63 
=== Usages ===
=== Predecessor ===
i3401 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v61 #trueSuccessor: v62 #falseSuccessor: v63  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v257|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v258|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v259|DWORD = ADD (x: v258|DWORD, ~y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v259|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v260|DWORD = MOV [v254|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v261|DWORD = MOV [v253|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v262|DWORD = SUB (x: v257|DWORD, ~y: v260|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v262|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7759914359571053 condition: < trueDestination: B244 -> B245 falseDestination: B244 -> B259 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B245"
    from_bci -1
    to_bci -1
    predecessors "B244" 
    successors "B246" "B247" 
    xhandlers
    flags 
    probability 4605164729028914646
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:240) [bci: 25]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1038 
=== Usages ===
=== Predecessor ===
v64 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1038  <|@  <|@
f <@~|@floating>@ <|@
tid i1749 <|@
result int[-270433|0xfffffffffffbdf9f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -270433
stableDimension: 0
stamp: i32 [-270433] ⇊00000000fffbdf9f ⇈00000000fffbdf9f
stampKind: i32
value: int[-270433|0xfffffffffffbdf9f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1745 i1745 i1745 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1038 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 33]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:146) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1081 
=== Succesors ===
trueSuccessor: v1037 
falseSuccessor: v1033 
=== Usages ===
=== Predecessor ===
v62 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1081 #trueSuccessor: v1037 #falseSuccessor: v1033  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v255|DWORD, y: v255|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B245 -> B246 falseDestination: B245 -> B247 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B246"
    from_bci -1
    to_bci -1
    predecessors "B245" 
    successors "B321" 
    xhandlers
    flags 
    probability 4575596594292739886
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1037 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:146) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1748 
=== Usages ===
=== Predecessor ===
v1038 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1748  <|@  <|@
f <@*|@fixed>@ <|@
tid v1748 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1742 
=== Predecessor ===
v1037 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-270433|0xfffffffffffbdf9f]] destination: B246 -> B321 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B247"
    from_bci -1
    to_bci -1
    predecessors "B245" 
    successors "B248" "B249" 
    xhandlers
    flags 
    probability 4605094833934078264
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1033 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 36]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:146) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1049 
=== Usages ===
=== Predecessor ===
v1038 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1049  <|@  <|@
f <@*|@fixed>@ <|@
tid v1049 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 77]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:146) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1131 
=== Succesors ===
trueSuccessor: v1048 
falseSuccessor: v1046 
=== Usages ===
=== Predecessor ===
v1033 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1131 #trueSuccessor: v1048 #falseSuccessor: v1046  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v252|DWORD, y: v261|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B247 -> B248 falseDestination: B247 -> B249 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B248"
    from_bci -1
    to_bci -1
    predecessors "B247" 
    successors "B321" 
    xhandlers
    flags 
    probability 4575507128571349317
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1048 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:146) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1761 
=== Usages ===
=== Predecessor ===
v1049 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1761  <|@  <|@
f <@*|@fixed>@ <|@
tid v1761 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:146) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1742 
=== Predecessor ===
v1048 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-270433|0xfffffffffffbdf9f]] destination: B248 -> B321 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B249"
    from_bci -1
    to_bci -1
    predecessors "B247" 
    successors "B250" "B251" 
    xhandlers
    flags 
    probability 4605025637790190245
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1046 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 80]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:146) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1055 
=== Usages ===
=== Predecessor ===
v1049 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1055  <|@  <|@
f <@~|@floating>@ <|@
tid i1050 <|@
result v263|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:146) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: i32 [-2147483647 - 2147483647]
=== Inputs ===
x: i3400 
y: i808 
=== Succesors ===
=== Usages ===
v1051 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i3400 y: i808  <|@  <|@
f <@~|@floating>@ <|@
tid v1051 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:146) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1050 
y: i3398 
=== Succesors ===
=== Usages ===
v1055 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1050 y: i3398  <|@  <|@
f <@*|@fixed>@ <|@
tid v1055 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:146) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1051 
=== Succesors ===
trueSuccessor: v1054 
falseSuccessor: v1052 
=== Usages ===
=== Predecessor ===
v1046 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1051 #trueSuccessor: v1054 #falseSuccessor: v1052  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v263|DWORD = SUB (x: v260|DWORD, ~y: v252|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v255|DWORD, y: v263|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B249 -> B250 falseDestination: B249 -> B251 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B250"
    from_bci -1
    to_bci -1
    predecessors "B249" 
    successors "B321" 
    xhandlers
    flags 
    probability 4575418557507172653
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1054 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:146) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1760 
=== Usages ===
=== Predecessor ===
v1055 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1760  <|@  <|@
f <@*|@fixed>@ <|@
tid v1760 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:146) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1742 
=== Predecessor ===
v1054 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-270433|0xfffffffffffbdf9f]] destination: B250 -> B321 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B251"
    from_bci -1
    to_bci -1
    predecessors "B249" 
    successors "B252" "B253" 
    xhandlers
    flags 
    probability 4604957133607741107
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1052 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:146) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2122 
=== Usages ===
=== Predecessor ===
v1055 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2122  <|@  <|@
f <@~|@floating>@ <|@
tid v3353 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.ArrayList.addAll(ArrayList.java:586) [bci: 45]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i808 
y: i13 
=== Succesors ===
=== Usages ===
v2122 i3346 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i808 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v2122 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:205) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v3353 
=== Succesors ===
trueSuccessor: v2120 
falseSuccessor: v2121 
=== Usages ===
=== Predecessor ===
v1052 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3353 #trueSuccessor: v2120 #falseSuccessor: v2121  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v252|DWORD, y: v252|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B251 -> B252 falseDestination: B251 -> B253 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B252"
    from_bci -1
    to_bci -1
    predecessors "B251" 
    successors "B258" 
    xhandlers
    flags 
    probability 4590089951913136680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2120 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:233) [bci: 217]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2169 
=== Usages ===
=== Predecessor ===
v2122 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2169  <|@  <|@
f <@*|@fixed>@ <|@
tid v2169 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2168 
=== Predecessor ===
v2120 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B252 -> B258 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B253"
    from_bci -1
    to_bci -1
    predecessors "B251" 
    successors "B254" "B255" 
    xhandlers
    flags 
    probability 4604278942201494638
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2121 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:206) [bci: 19]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3402 
=== Usages ===
=== Predecessor ===
v2122 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3402  <|@  <|@
f <@~|@floating>@ <|@
tid v3476 <|@
result [v253|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a1174 
index: - 
=== Succesors ===
=== Usages ===
v3402 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1174 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3402 <|@
result v264|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHub(HotSpotReplacementsUtil.java:737) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:208) [bci: 33]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v3476 
=== Succesors ===
next: v3403 
=== Usages ===
v2165 
=== Predecessor ===
v2121 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3476 #next: v3403  <|@  <|@
f <@~|@floating>@ <|@
tid v3554 <|@
result [v254|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3397 
=== Succesors ===
=== Usages ===
v3403 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3397  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3403 <|@
result v265|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.ClassGetHubNode.readClass(Class) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.getComponentType(HotSpotClassSubstitutions.java:120) [bci: 1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 6]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v3554 
=== Succesors ===
next: v2127 
=== Usages ===
v2165 v3474 
=== Predecessor ===
v3402 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3554 #next: v2127  <|@  <|@
f <@~|@floating>@ <|@
tid v2165 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:210) [bci: 52]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v3402 
y: v3403 
=== Succesors ===
=== Usages ===
v2127 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: v3402 y: v3403  <|@  <|@
f <@~|@floating>@ <|@
tid j3350 <|@
result v266|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopyObjectKillsAny(ArrayCopyCallNode.java:199) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:214) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i3398 
=== Succesors ===
=== Usages ===
v3480 v3478 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i3398  <|@  <|@
f <@~|@floating>@ <|@
tid a1015 <|@
result v267|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 2]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a3397 
=== Succesors ===
=== Usages ===
j2161 v2164 j2151 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a3397  <|@  <|@
f <@~|@floating>@ <|@
tid j2348 <|@
result v268|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopyObjectKillsAny(ArrayCopyCallNode.java:199) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:214) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i808 
=== Succesors ===
=== Usages ===
v2157 i2163 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i808  <|@  <|@
f <@*|@fixed>@ <|@
tid v2127 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:210) [bci: 63]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
trueSuccessorProbability: 0.6
=== Inputs ===
condition: v2165 
=== Succesors ===
trueSuccessor: v2126 
falseSuccessor: v2125 
=== Usages ===
=== Predecessor ===
v3403 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2165 #trueSuccessor: v2126 #falseSuccessor: v2125  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v264|DWORD = MOV [v253|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v265|DWORD = MOV [v254|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v266|QWORD = MOVSXD v255|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v267|QWORD[.] = UNCOMPRESSPOINTER (input: v254|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@eef3a58 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v268|QWORD = MOV v252|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v265|DWORD, y: v264|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6 condition: = trueDestination: B253 -> B254 falseDestination: B253 -> B255 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B254"
    from_bci -1
    to_bci -1
    predecessors "B253" 
    successors "B258" 
    xhandlers
    flags 
    probability 4600996087105367786
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2126 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:212) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2146 
=== Usages ===
=== Predecessor ===
v2127 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2146  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2146 <|@
result v269|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopyObjectKillsAny(ArrayCopyCallNode.java:199) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:214) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: i64
=== Inputs ===
object: a1174 
=== Succesors ===
next: j2151 
=== Usages ===
v3477 
=== Predecessor ===
v2126 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a1174 #next: j2151  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2151 <|@
result v270|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopyObjectKillsAny(ArrayCopyCallNode.java:199) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:214) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: i64
=== Inputs ===
object: a1015 
=== Succesors ===
next: v2157 
=== Usages ===
v3478 
=== Predecessor ===
j2146 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a1015 #next: v2157  <|@  <|@
f <@~|@floating>@ <|@
tid v3477 <|@
result [v269|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j2146 
index: - 
=== Succesors ===
=== Usages ===
v2157 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2146 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v3478 <|@
result [v270|QWORD[*] + v266|QWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: j2151 
index: j3350 
=== Succesors ===
=== Usages ===
v2157 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2151 index: j3350  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2157 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: ObjectArraycopyKillAny(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopyObjectKillsAny(ArrayCopyCallNode.java:199) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:214) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v3477 v3478 j2348 
=== Succesors ===
next: v2170 
=== Usages ===
=== Predecessor ===
j2151 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v3477 v3478 j2348 #next: v2170  <|@  <|@
f <@*|@fixed>@ <|@
tid v2170 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2168 
=== Predecessor ===
v2157 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v269|QWORD[*] = MOVE v253|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v270|QWORD[*] = MOVE v267|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v269|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v270|QWORD[*] + v266|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v268|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: ObjectArraycopyKillAny(Word,Word,Word)void@0x106813120:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B254 -> B258 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B255"
    from_bci -1
    to_bci -1
    predecessors "B253" 
    successors "B256" "B257" 
    xhandlers
    flags 
    probability 4598554598042880498
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2125 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:216) [bci: 98]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3404 
=== Usages ===
=== Predecessor ===
v2127 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3404  <|@  <|@
f <@~|@floating>@ <|@
tid v3474 <|@
result [v265|DWORD * 8 + 232] <|@
d <@d|@=== Debug Properties ===
displacement: 232
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v3403 
=== Succesors ===
=== Usages ===
v3404 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v3403  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3404 <|@
result v271|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ObjArrayKlass::_element_klass:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:216) [bci: 109]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
nullCheck: false
stamp: Klass*
=== Inputs ===
stateBefore: - 
guard: - 
address: v3474 
=== Succesors ===
next: i2158 
=== Usages ===
v3475 i2163 
=== Predecessor ===
v2125 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3474 #next: i2158  <|@  <|@
f <@~|@floating>@ <|@
tid v3475 <|@
result [v271|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: v3404 
index: - 
=== Succesors ===
=== Usages ===
i2158 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v3404 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2158 <|@
result v272|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: Klass::_super_check_offset:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:217) [bci: 125]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v3475 
=== Succesors ===
next: j2159 
=== Usages ===
j2130 
=== Predecessor ===
v3404 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3475 #next: j2159  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2159 <|@
result v273|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.CheckcastArrayCopyCallNode.checkcastArraycopy(Object, int, Object, int, int, Word, Object, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:222) [bci: 167]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: i64
=== Inputs ===
object: a1174 
=== Succesors ===
next: j2161 
=== Usages ===
v3479 
=== Predecessor ===
i2158 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a1174 #next: j2161  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2161 <|@
result v274|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.CheckcastArrayCopyCallNode.checkcastArraycopy(Object, int, Object, int, int, Word, Object, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:222) [bci: 167]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: i64
=== Inputs ===
object: a1015 
=== Succesors ===
next: i2163 
=== Usages ===
v3480 
=== Predecessor ===
j2159 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a1015 #next: i2163  <|@  <|@
f <@~|@floating>@ <|@
tid v3479 <|@
result [v273|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j2159 
index: - 
=== Succesors ===
=== Usages ===
i2163 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2159 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v3480 <|@
result [v274|QWORD[*] + v266|QWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: j2161 
index: j3350 
=== Succesors ===
=== Usages ===
i2163 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2161 index: j3350  <|@  <|@
f <@~|@floating>@ <|@
tid j2130 <|@
result v275|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:217) [bci: 128]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i2158 
=== Succesors ===
=== Usages ===
i2163 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2158  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2163 <|@
result v276|DWORD <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: ObjectCheckcast(Word,Word,Word,Word,Word)int
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.CheckcastArrayCopyCallNode.checkcastArraycopy(Object, int, Object, int, int, Word, Object, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:222) [bci: 167]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: i32
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v3479 v3480 j2348 j2130 v3404 
=== Succesors ===
next: v2134 
=== Usages ===
v2131 i2135 
=== Predecessor ===
j2161 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v3479 v3480 j2348 j2130 v3404 #next: v2134  <|@  <|@
f <@~|@floating>@ <|@
tid v2131 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:223) [bci: 177]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2163 
y: i13 
=== Succesors ===
=== Usages ===
v2134 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2163 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v2134 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:223) [bci: 188]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
trueSuccessorProbability: 0.99
=== Inputs ===
condition: v2131 
=== Succesors ===
trueSuccessor: v2133 
falseSuccessor: v2132 
=== Usages ===
=== Predecessor ===
i2163 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2131 #trueSuccessor: v2133 #falseSuccessor: v2132  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v271|QWORD = MOV [v265|DWORD * 8 + 232] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v272|DWORD = MOV [v271|QWORD + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v273|QWORD[*] = MOVE v253|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v274|QWORD[*] = MOVE v267|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v275|QWORD = MOVSXD v272|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v273|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v274|QWORD[*] + v266|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v268|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE v275|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE v271|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: ObjectCheckcast(Word,Word,Word,Word,Word)int@0x1068133a0:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v276|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v276|DWORD, y: v276|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B255 -> B256 falseDestination: B255 -> B257 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B256"
    from_bci -1
    to_bci -1
    predecessors "B255" 
    successors "B258" 
    xhandlers
    flags 
    probability 4598505768261630752
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2133 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:233) [bci: 217]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2171 
=== Usages ===
=== Predecessor ===
v2134 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2171  <|@  <|@
f <@*|@fixed>@ <|@
tid v2171 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2168 
=== Predecessor ===
v2133 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B256 -> B258 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B257"
    from_bci -1
    to_bci -1
    predecessors "B255" 
    successors "B258" 
    xhandlers
    flags 
    probability 4568396634526279913
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2132 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:228) [bci: 191]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2176 
=== Usages ===
=== Predecessor ===
v2134 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2176  <|@  <|@
f <@~|@floating>@ <|@
tid i2135 <|@
result v277|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NotNode$$Lambda$192/1797157237@4fdb7f79
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:228) [bci: 194]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: i32
=== Inputs ===
value: i2163 
=== Succesors ===
=== Usages ===
v2164 i2137 i2138 
=== Predecessor ===
- >@ <|@
instruction <@Not|@org.graalvm.compiler.nodes.calc.NotNode>@ value: i2163  <|@  <|@
f <@~|@floating>@ <|@
tid i2137 <|@
result v278|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:229) [bci: 208]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: i32
=== Inputs ===
x: i2135 
y: i3398 
=== Succesors ===
=== Usages ===
v2164 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2135 y: i3398  <|@  <|@
f <@~|@floating>@ <|@
tid i2138 <|@
result v279|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:229) [bci: 213]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: i32
=== Inputs ===
x: i808 
y: i2135 
=== Succesors ===
=== Usages ===
v2164 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i808 y: i2135  <|@  <|@
tid v2164 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:229) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@6ae90306
stamp: void
targetMethod: HotSpotMethod<System.arraycopy(Object, int, Object, int, int)>
=== Inputs ===
arguments: a1174 i2135 a1015 i2137 i2138 
=== Succesors ===
=== Usages ===
v2176 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1174 i2135 a1015 i2137 i2138  <|@  <|@
tid ?1518 <|@
d <@d|@=== Debug Properties ===
bci: 31
code: ResolvedJavaMethodBytecode<ArrayList.addAll(Collection)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: ArrayList.java
sourceLine: 584
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - i808 
=== Succesors ===
=== Usages ===
v2176 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - i808  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2176 <|@
d <@d|@=== Debug Properties ===
bci: 31
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
polymorphic: false
stamp: void
targetMethod: Direct#System.arraycopy
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v2164 
stateDuring: ?1518 
=== Succesors ===
next: v2172 
=== Usages ===
=== Predecessor ===
v2132 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v2164 stateDuring: ?1518 #next: v2172  <|@  <|@
f <@*|@fixed>@ <|@
tid v2172 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2168 
=== Predecessor ===
v2176 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v277|DWORD = NOT v276|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v278|DWORD = ADD (x: v277|DWORD, y: v255|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v279|DWORD = SUB (x: v252|DWORD, ~y: v277|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v253|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v277|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v267|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE v278|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE v279|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
locals: v0|QWORD[.] - - v252|DWORD 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD] [] callTarget: HotSpotMethod<System.arraycopy(Object, int, Object, int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:31] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B257 -> B258 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B258"
    from_bci -1
    to_bci -1
    predecessors "B252" "B254" "B256" "B257" 
    successors 
    xhandlers
    flags 
    probability 4604957133607741107
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2168 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2169 v2170 v2171 v2172 
=== Succesors ===
next: i3405 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2169 v2170 v2171 v2172 #next: i3405  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3405 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList.size
nodeSourcePosition: at java.util.ArrayList.addAll(ArrayList.java:585) [bci: 36]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v3429 
=== Succesors ===
next: v1067 
=== Usages ===
i854 
=== Predecessor ===
v2168 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3429 #next: v1067  <|@  <|@
f <@~|@floating>@ <|@
tid i854 <|@
result v280|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.ArrayList.addAll(ArrayList.java:585) [bci: 40]
stamp: i32
=== Inputs ===
x: i808 
y: i3405 
=== Succesors ===
=== Usages ===
v1067 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i808 y: i3405  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1067 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ArrayList.size
nodeSourcePosition: at java.util.ArrayList.addAll(ArrayList.java:585) [bci: 41]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3429 
value: i854 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v856 
=== Usages ===
=== Predecessor ===
i3405 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3429 value: i854 stateAfter: - lastLocationAccess: - #next: v856  <|@  <|@
f <@~|@floating>@ <|@
tid i3346 <|@
result v281|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.addAll(ArrayList.java:586) [bci: 45]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v3353 
trueValue: i13 
falseValue: i23 
=== Succesors ===
=== Usages ===
v856 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v3353 trueValue: i13 falseValue: i23  <|@  <|@
f <@*|@fixed>@ <|@
tid v856 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.addAll(ArrayList.java:586) [bci: 53]
stamp: void
=== Inputs ===
result: i3346 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1067 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i3346 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v280|DWORD = ADD (x: v252|DWORD, ~y: [v0|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v280|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v252|DWORD, y: v252|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v281|DWORD = SETCC condition: != <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v281|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B259"
    from_bci -1
    to_bci -1
    predecessors "B244" 
    successors "B260" "B320" 
    xhandlers
    flags 
    probability 4597238779374946467
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 20]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1399 
=== Usages ===
=== Predecessor ===
v64 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1399  <|@  <|@
f <@~|@floating>@ <|@
tid i76 <|@
result v282|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:259) [bci: 9]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: i32 [0 - 1073741823] ⇈000000003fffffff
=== Inputs ===
x: i3400 
y: i23 
=== Succesors ===
=== Usages ===
i77 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i3400 y: i23  <|@  <|@
f <@~|@floating>@ <|@
tid i77 <|@
result v283|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:259) [bci: 10]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: i32
=== Inputs ===
x: i76 
y: i3400 
=== Succesors ===
=== Usages ===
i78 i1132 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i76 y: i3400  <|@  <|@
f <@~|@floating>@ <|@
tid i78 <|@
result v284|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:260) [bci: 14]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: i32
=== Inputs ===
x: i77 
y: i51 
=== Succesors ===
=== Usages ===
v79 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i77 y: i51  <|@  <|@
f <@~|@floating>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:260) [bci: 15]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i78 
y: i13 
=== Succesors ===
=== Usages ===
i1132 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i78 y: i13  <|@  <|@
f <@~|@floating>@ <|@
tid i1132 <|@
result v285|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v79 
trueValue: i51 
falseValue: i77 
=== Succesors ===
=== Usages ===
i1099 j2460 i89 v1524 v1540 i1617 a2207 v2228 i2247 v2240 i2192 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v79 trueValue: i51 falseValue: i77  <|@  <|@
f <@~|@floating>@ <|@
tid i88 <|@
result int[-2147483639|0xffffffff80000009] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:262) [bci: 23]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
rawvalue: -2147483639
stableDimension: 0
stamp: i32 [-2147483639] ⇊0000000080000009 ⇈0000000080000009
stampKind: i32
value: int[-2147483639|0xffffffff80000009]
=== Inputs ===
=== Succesors ===
=== Usages ===
i89 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i89 <|@
result v286|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:262) [bci: 23]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: i32
=== Inputs ===
x: i1132 
y: i88 
=== Succesors ===
=== Usages ===
v90 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1132 y: i88  <|@  <|@
f <@~|@floating>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:262) [bci: 24]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i89 
y: i23 
=== Succesors ===
=== Usages ===
v1399 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i89 y: i23  <|@  <|@
f <@*|@fixed>@ <|@
tid v1399 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:262) [bci: 24]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v90 
=== Succesors ===
trueSuccessor: v1396 
falseSuccessor: v1398 
=== Usages ===
=== Predecessor ===
v63 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v90 #trueSuccessor: v1396 #falseSuccessor: v1398  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v282|DWORD = SHR v260|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v283|DWORD = ADD (x: v282|DWORD, y: v260|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v284|DWORD = SUB (x: v283|DWORD, ~y: v257|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v284|DWORD, y: v284|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v285|DWORD = CMOVE (falseValue: v283|DWORD, ~trueValue: v257|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction v286|DWORD = LEA [v285|DWORD - 2147483639] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v286|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B259 -> B260 falseDestination: B259 -> B320 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B260"
    from_bci -1
    to_bci -1
    predecessors "B259" 
    successors "B261" "B262" 
    xhandlers
    flags 
    probability 4597238779374946467
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1396 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:262) [bci: 24]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1530 
=== Usages ===
=== Predecessor ===
v1399 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1530  <|@  <|@
f <@~|@floating>@ <|@
tid v1524 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 22]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:171) [bci: 3]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1132 
y: i13 
=== Succesors ===
=== Usages ===
v1530 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1132 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v1530 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 33]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:171) [bci: 3]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1524 
=== Succesors ===
trueSuccessor: v1529 
falseSuccessor: v1525 
=== Usages ===
=== Predecessor ===
v1396 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1524 #trueSuccessor: v1529 #falseSuccessor: v1525  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v285|DWORD, y: v285|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B260 -> B261 falseDestination: B260 -> B262 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B261"
    from_bci -1
    to_bci -1
    predecessors "B260" 
    successors "B321" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1529 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:187) [bci: 55]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:171) [bci: 3]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1750 
=== Usages ===
=== Predecessor ===
v1530 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1750  <|@  <|@
f <@~|@floating>@ <|@
tid i1751 <|@
result int[-393313|0xfffffffffff9ff9f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -393313
stableDimension: 0
stamp: i32 [-393313] ⇊00000000fff9ff9f ⇈00000000fff9ff9f
stampKind: i32
value: int[-393313|0xfffffffffff9ff9f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1745 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1750 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1742 
=== Predecessor ===
v1529 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-393313|0xfffffffffff9ff9f]] destination: B261 -> B321 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B262"
    from_bci -1
    to_bci -1
    predecessors "B260" 
    successors "B263" "B264" 
    xhandlers
    flags 
    probability 4597238779374946467
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1525 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 36]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:171) [bci: 3]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2194 
=== Usages ===
=== Predecessor ===
v1530 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2194  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2194 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j2225 
=== Usages ===
v3482 v3483 
=== Predecessor ===
v1525 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j2225  <|@  <|@
f <@~|@floating>@ <|@
tid v3482 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j2194 
index: - 
=== Succesors ===
=== Usages ===
j2225 v2227 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2194 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2225 <|@
result v287|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3482 
=== Succesors ===
next: j2226 
=== Usages ===
j2198 v3484 v3485 a2206 v3490 v3486 v3487 v3488 v3489 
=== Predecessor ===
j2194 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3482 #next: j2226  <|@  <|@
f <@~|@floating>@ <|@
tid v3483 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j2194 
index: - 
=== Succesors ===
=== Usages ===
j2226 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2194 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2226 <|@
result v288|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3483 
=== Succesors ===
next: v3406 
=== Usages ===
v2199 
=== Predecessor ===
j2225 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3483 #next: v3406  <|@  <|@
f <@~|@floating>@ <|@
tid v3481 <|@
result [v254|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3397 
=== Succesors ===
=== Usages ===
v3406 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3397  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3406 <|@
result v289|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.ClassGetHubNode.readClass(Class) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.getComponentType(HotSpotClassSubstitutions.java:120) [bci: 1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 6]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v3481 
=== Succesors ===
next: v2202 
=== Usages ===
v2179 v2232 
=== Predecessor ===
j2226 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3481 #next: v2202  <|@  <|@
f <@~|@floating>@ <|@
tid i2192 <|@
result v290|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i1132 
y: i912 
=== Succesors ===
=== Usages ===
i2214 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i1132 y: i912  <|@  <|@
f <@~|@floating>@ <|@
tid i2214 <|@
result v291|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: i32 [-2147483645 - 2147483647] ⇊0000000000000003
=== Inputs ===
x: i2192 
y: i1814 
=== Succesors ===
=== Usages ===
i2193 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2192 y: i1814  <|@  <|@
f <@~|@floating>@ <|@
tid i2193 <|@
result v292|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i2214 
y: i1792 
=== Succesors ===
=== Usages ===
j2197 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i2214 y: i1792  <|@  <|@
f <@~|@floating>@ <|@
tid j2197 <|@
result v293|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i2193 
=== Succesors ===
=== Usages ===
j2198 v3486 v3487 v3488 v3489 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2193  <|@  <|@
f <@~|@floating>@ <|@
tid j2198 <|@
result v294|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: i64
=== Inputs ===
x: j2197 
y: j2225 
=== Succesors ===
=== Usages ===
v2199 v2227 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2197 y: j2225  <|@  <|@
f <@~|@floating>@ <|@
tid v2199 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2226 
y: j2198 
=== Succesors ===
=== Usages ===
v2202 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j2226 y: j2198  <|@  <|@
f <@*|@fixed>@ <|@
tid v2202 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v2199 
=== Succesors ===
trueSuccessor: v2200 
falseSuccessor: v2201 
=== Usages ===
=== Predecessor ===
v3406 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2199 #trueSuccessor: v2200 #falseSuccessor: v2201  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v287|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v288|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v289|DWORD = MOV [v254|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v290|DWORD = SHL v285|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v291|DWORD = LEA [v290|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v292|DWORD = AND v291|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v293|QWORD = MOVSXD v292|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v294|QWORD = ADD (x: v293|QWORD, y: v287|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v294|QWORD, y: v288|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B262 -> B263 falseDestination: B262 -> B264 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B263"
    from_bci -1
    to_bci -1
    predecessors "B262" 
    successors "B265" 
    xhandlers
    flags 
    probability 4567311708340335520
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2200 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2207 
=== Usages ===
=== Predecessor ===
v2202 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2207  <|@  <|@
f <@~|@floating>@ <|@
tid v2179 <|@
result v295|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.ClassGetHubNode.readClass(Class) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.getComponentType(HotSpotClassSubstitutions.java:120) [bci: 1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 6]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v3406 
=== Succesors ===
=== Usages ===
a2207 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v3406  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2207 <|@
result v296|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?57 
arguments: v2179 i1132 i13 
=== Succesors ===
next: v2210 
=== Usages ===
a2211 
=== Predecessor ===
v2200 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?57 arguments: v2179 i1132 i13 #next: v2210  <|@  <|@
f <@*|@fixed>@ <|@
tid v2210 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2209 
=== Predecessor ===
a2207 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v295|QWORD = UNCOMPRESSPOINTER (input: v289|DWORD, ~baseRegister: -) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@eef3a58 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v295|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v285|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:238) [bci: 10]
locals: v0|QWORD[.] v257|DWORD 
java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
locals: - - 
java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
locals: v0|QWORD[.] - v253|QWORD[.] v252|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:10, 9, 17] <|@ <|@
      nr   -1  <|@ instruction v296|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v296|QWORD[.]] destination: B263 -> B265 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B264"
    from_bci -1
    to_bci -1
    predecessors "B262" 
    successors "B265" 
    xhandlers
    flags 
    probability 4597158071784102356
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2201 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2227 
=== Usages ===
=== Predecessor ===
v2202 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2227  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2227 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3482 
value: j2198 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2216 
=== Usages ===
=== Predecessor ===
v2201 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3482 value: j2198 stateAfter: - lastLocationAccess: - #next: v2216  <|@  <|@
f <@~|@floating>@ <|@
tid v3486 <|@
result [v293|QWORD + v287|QWORD * 1 + 192] <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j2197 
index: j2225 
=== Succesors ===
=== Usages ===
v2216 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2197 index: j2225  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2216 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: void
=== Inputs ===
address: v3486 
=== Succesors ===
next: v2218 
=== Usages ===
=== Predecessor ===
v2227 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3486 #next: v2218  <|@  <|@
f <@~|@floating>@ <|@
tid v3487 <|@
result [v293|QWORD + v287|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j2197 
index: j2225 
=== Succesors ===
=== Usages ===
v2218 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2197 index: j2225  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2218 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: void
=== Inputs ===
address: v3487 
=== Succesors ===
next: v2220 
=== Usages ===
=== Predecessor ===
v2216 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3487 #next: v2220  <|@  <|@
f <@~|@floating>@ <|@
tid v3488 <|@
result [v293|QWORD + v287|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j2197 
index: j2225 
=== Succesors ===
=== Usages ===
v2220 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2197 index: j2225  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2220 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: void
=== Inputs ===
address: v3488 
=== Succesors ===
next: v2222 
=== Usages ===
=== Predecessor ===
v2218 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3488 #next: v2222  <|@  <|@
f <@~|@floating>@ <|@
tid v3489 <|@
result [v293|QWORD + v287|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j2197 
index: j2225 
=== Succesors ===
=== Usages ===
v2222 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2197 index: j2225  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2222 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: void
=== Inputs ===
address: v3489 
=== Succesors ===
next: v2228 
=== Usages ===
=== Predecessor ===
v2220 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3489 #next: v2228  <|@  <|@
f <@~|@floating>@ <|@
tid v3484 <|@
result [v287|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j2225 
index: - 
=== Succesors ===
=== Usages ===
v2228 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2225 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2228 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3484 
value: i1132 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2229 
=== Usages ===
=== Predecessor ===
v2222 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3484 value: i1132 stateAfter: - lastLocationAccess: - #next: v2229  <|@  <|@
f <@~|@floating>@ <|@
tid v3485 <|@
result [v287|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2225 
index: - 
=== Succesors ===
=== Usages ===
v2229 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2225 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2229 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3485 
value: j1778 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2232 
=== Usages ===
=== Predecessor ===
v2228 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3485 value: j1778 stateAfter: - lastLocationAccess: - #next: v2232  <|@  <|@
f <@~|@floating>@ <|@
tid v3490 <|@
result [v287|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j2225 
index: - 
=== Succesors ===
=== Usages ===
v2232 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2225 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2232 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3490 
value: v3406 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2205 
=== Usages ===
=== Predecessor ===
v2229 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3490 value: v3406 stateAfter: - lastLocationAccess: - #next: v2205  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2205 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2206 
=== Usages ===
=== Predecessor ===
v2232 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a2206  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2206 <|@
result v297|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j2225 
=== Succesors ===
next: v2208 
=== Usages ===
a2211 
=== Predecessor ===
v2205 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j2225 #next: v2208  <|@  <|@
f <@*|@fixed>@ <|@
tid v2208 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2209 
=== Predecessor ===
a2206 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v294|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v293|QWORD + v287|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v293|QWORD + v287|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v293|QWORD + v287|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v293|QWORD + v287|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v287|QWORD + 12], y: v285|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v287|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v287|QWORD + 8], y: v289|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v297|QWORD[.] = MOVE v287|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v297|QWORD[.]] destination: B264 -> B265 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B265"
    from_bci -1
    to_bci -1
    predecessors "B264" "B263" 
    successors "B266" "B267" 
    xhandlers
    flags 
    probability 4597238779374946466
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a2211 <|@
result v298|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v2209 
values: a2206 a2207 
=== Succesors ===
=== Usages ===
v3499 a1642 v3439 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2209 values: a2206 a2207  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2209 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2208 v2210 
=== Succesors ===
next: v2984 
=== Usages ===
a2211 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2208 v2210 #next: v2984  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2984 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v2588 
=== Usages ===
j2985 j2987 
=== Predecessor ===
v2209 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v2588  <|@  <|@
f <@~|@floating>@ <|@
tid v3439 <|@
result [v298|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a2211 
index: - 
=== Succesors ===
=== Usages ===
j2987 j2246 j2244 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2211 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1540 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 4]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:174) [bci: 19]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3400 
y: i1132 
=== Succesors ===
=== Usages ===
i1617 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3400 y: i1132  <|@  <|@
f <@~|@floating>@ <|@
tid i1617 <|@
result v299|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v1540 
trueValue: i3400 
falseValue: i1132 
=== Succesors ===
=== Usages ===
j2461 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v1540 trueValue: i3400 falseValue: i1132  <|@  <|@
f <@~|@floating>@ <|@
tid j2461 <|@
result v300|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1617 
=== Succesors ===
=== Usages ===
j3031 v3499 j2465 v2585 v2802 j3020 j3025 j3028 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1617  <|@  <|@
f <@~|@floating>@ <|@
tid v2585 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2461 
y: j1778 
=== Succesors ===
=== Usages ===
v2588 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2461 y: j1778  <|@  <|@
f <@*|@fixed>@ <|@
tid v2588 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v2585 
=== Succesors ===
trueSuccessor: v2586 
falseSuccessor: v2587 
=== Usages ===
=== Predecessor ===
v2984 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2585 #trueSuccessor: v2586 #falseSuccessor: v2587  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v298|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v285|DWORD, y: v260|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v299|DWORD = CMOVE (falseValue: v285|DWORD, ~trueValue: v260|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v300|QWORD = MOVSXD v299|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v300|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B265 -> B266 falseDestination: B265 -> B267 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B266"
    from_bci -1
    to_bci -1
    predecessors "B265" 
    successors "B281" 
    xhandlers
    flags 
    probability 4592735179747575970
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2586 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2604 
=== Usages ===
=== Predecessor ===
v2588 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2604  <|@  <|@
f <@*|@fixed>@ <|@
tid v2604 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2605 
=== Predecessor ===
v2586 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B266 -> B281 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B267"
    from_bci -1
    to_bci -1
    predecessors "B265" 
    successors "B268" "B269" 
    xhandlers
    flags 
    probability 4592735179747575970
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2587 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2591 
=== Usages ===
=== Predecessor ===
v2588 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2591  <|@  <|@
f <@~|@floating>@ <|@
tid j2987 <|@
result v301|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v2984 
address: v3439 
=== Succesors ===
=== Usages ===
v3525 v3527 v3529 v3531 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v2984 address: v3439  <|@  <|@
f <@~|@floating>@ <|@
tid v3434 <|@
result [v254|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3397 
=== Succesors ===
=== Usages ===
j2985 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3397  <|@  <|@
f <@~|@floating>@ <|@
tid j2985 <|@
result v302|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v2984 
address: v3434 
=== Succesors ===
=== Usages ===
v3526 v3528 v3530 v3532 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v2984 address: v3434  <|@  <|@
f <@~|@floating>@ <|@
tid j3020 <|@
result v303|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j2461 
y: j2845 
=== Succesors ===
=== Usages ===
v3021 v3023 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2461 y: j2845  <|@  <|@
f <@~|@floating>@ <|@
tid v3021 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3020 
y: j1818 
=== Succesors ===
=== Usages ===
v2591 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3020 y: j1818  <|@  <|@
f <@*|@fixed>@ <|@
tid v2591 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v3021 
=== Succesors ===
trueSuccessor: v2589 
falseSuccessor: v2590 
=== Usages ===
=== Predecessor ===
v2587 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3021 #trueSuccessor: v2589 #falseSuccessor: v2590  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v301|QWORD[.] = LEA [v298|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v302|QWORD[*] = LEA [v254|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v303|QWORD = LEA [v300|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v303|QWORD, y: v303|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B267 -> B268 falseDestination: B267 -> B269 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B268"
    from_bci -1
    to_bci -1
    predecessors "B267" 
    successors "B272" 
    xhandlers
    flags 
    probability 4590717489976473210
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2589 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2600 
=== Usages ===
=== Predecessor ===
v2591 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2600  <|@  <|@
f <@*|@fixed>@ <|@
tid v2600 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2601 
=== Predecessor ===
v2589 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B268 -> B272 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B269"
    from_bci -1
    to_bci -1
    predecessors "B267" 
    successors "B270" 
    xhandlers
    flags 
    probability 4583727980492834978
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2590 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2592 
=== Usages ===
=== Predecessor ===
v2591 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2592  <|@  <|@
f <@*|@fixed>@ <|@
tid v2592 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2593 
=== Predecessor ===
v2590 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B269 -> B270 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B270"
    from_bci -1
    to_bci -1
    predecessors "B269" "B319" 
    successors "B271" "B319" 
    xhandlers
    flags "llh" 
    loop_index 14
    loop_depth 1
    probability 4592735179747575970
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3012 <|@
result v304|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2593 
values: j1818 j3019 
=== Succesors ===
=== Usages ===
v3532 j3019 v3531 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2593 values: j1818 j3019  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2593 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v2592 
=== Succesors ===
next: v3407 
=== Usages ===
v3407 v2596 v2597 j3012 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v2592 #next: v3407  <|@  <|@
f <@~|@floating>@ <|@
tid v3532 <|@
result [v302|QWORD[*] + v304|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j2985 
index: j3012 
=== Succesors ===
=== Usages ===
v3407 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2985 index: j3012  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3407 <|@
result v305|V256_DWORD[........] <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: <n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;>
=== Inputs ===
stateBefore: - 
guard: v2593 
address: v3532 
=== Succesors ===
next: v3226 
=== Usages ===
v3226 
=== Predecessor ===
v2593 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2593 address: v3532 #next: v3226  <|@  <|@
f <@~|@floating>@ <|@
tid v3531 <|@
result [v301|QWORD[.] + v304|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j2987 
index: j3012 
=== Succesors ===
=== Usages ===
v3226 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2987 index: j3012  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3226 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3531 
value: v3407 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2599 
=== Usages ===
=== Predecessor ===
v3407 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3531 value: v3407 stateAfter: - lastLocationAccess: - #next: v2599  <|@  <|@
f <@~|@floating>@ <|@
tid j3019 <|@
result v306|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3012 
y: j1770 
=== Succesors ===
=== Usages ===
j3004 j3012 v3023 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3012 y: j1770  <|@  <|@
f <@~|@floating>@ <|@
tid v3023 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3020 
y: j3019 
=== Succesors ===
=== Usages ===
v2599 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3020 y: j3019  <|@  <|@
f <@*|@fixed>@ <|@
tid v2599 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3023 
=== Succesors ===
trueSuccessor: v2596 
falseSuccessor: v2598 
=== Usages ===
=== Predecessor ===
v3226 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3023 #trueSuccessor: v2596 #falseSuccessor: v2598  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v304|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v305|V256_DWORD[........] = H [v302|QWORD[*] + v304|QWORD * 4] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v301|QWORD[.] + v304|QWORD * 4], input: v305|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v306|QWORD = LEA [v304|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v306|QWORD, y: v303|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B270 -> B271 falseDestination: B270 -> B319 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B271"
    from_bci -1
    to_bci -1
    predecessors "B270" 
    successors "B272" 
    xhandlers
    flags 
    probability 4583727980492834978
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2596 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v2593 
=== Succesors ===
next: v2602 
=== Usages ===
=== Predecessor ===
v2599 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v2593 #next: v2602  <|@  <|@
f <@*|@fixed>@ <|@
tid v2602 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2601 
=== Predecessor ===
v2596 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v306|QWORD] destination: B271 -> B272 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B272"
    from_bci -1
    to_bci -1
    predecessors "B268" "B271" 
    successors "B273" "B274" 
    xhandlers
    flags 
    probability 4592735179747575970
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3004 <|@
result v307|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2601 
values: j1818 j3019 
=== Succesors ===
=== Usages ===
v3530 j3011 j2996 v3026 v3529 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2601 values: j1818 j3019  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2601 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2600 v2602 
=== Succesors ===
next: v2620 
=== Usages ===
j3004 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2600 v2602 #next: v2620  <|@  <|@
f <@~|@floating>@ <|@
tid j3025 <|@
result v308|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j2461 
y: j2851 
=== Succesors ===
=== Usages ===
v3026 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2461 y: j2851  <|@  <|@
f <@~|@floating>@ <|@
tid v3026 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3025 
y: j3004 
=== Succesors ===
=== Usages ===
v2620 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3025 y: j3004  <|@  <|@
f <@*|@fixed>@ <|@
tid v2620 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3026 
=== Succesors ===
trueSuccessor: v2619 
falseSuccessor: v2618 
=== Usages ===
=== Predecessor ===
v2601 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3026 #trueSuccessor: v2619 #falseSuccessor: v2618  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v307|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v308|QWORD = LEA [v300|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v307|QWORD, y: v308|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B272 -> B273 falseDestination: B272 -> B274 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B273"
    from_bci -1
    to_bci -1
    predecessors "B272" 
    successors "B275" 
    xhandlers
    flags 
    probability 4583727980492834978
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2619 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2623 
=== Usages ===
=== Predecessor ===
v2620 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2623  <|@  <|@
f <@*|@fixed>@ <|@
tid v2623 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2612 
=== Predecessor ===
v2619 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v307|QWORD] destination: B273 -> B275 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B274"
    from_bci -1
    to_bci -1
    predecessors "B272" 
    successors "B275" 
    xhandlers
    flags 
    probability 4590717489976473210
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2618 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3408 
=== Usages ===
v3408 
=== Predecessor ===
v2620 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3408  <|@  <|@
f <@~|@floating>@ <|@
tid v3530 <|@
result [v302|QWORD[*] + v307|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j2985 
index: j3004 
=== Succesors ===
=== Usages ===
v3408 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2985 index: j3004  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3408 <|@
result v309|V128_DWORD[....] <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: <n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;>
=== Inputs ===
stateBefore: - 
guard: v2618 
address: v3530 
=== Succesors ===
next: v3224 
=== Usages ===
v3224 
=== Predecessor ===
v2618 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2618 address: v3530 #next: v3224  <|@  <|@
f <@~|@floating>@ <|@
tid v3529 <|@
result [v301|QWORD[.] + v307|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j2987 
index: j3004 
=== Succesors ===
=== Usages ===
v3224 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2987 index: j3004  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3224 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3529 
value: v3408 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2611 
=== Usages ===
=== Predecessor ===
v3408 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3529 value: v3408 stateAfter: - lastLocationAccess: - #next: v2611  <|@  <|@
f <@~|@floating>@ <|@
tid j3011 <|@
result v310|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3004 
y: j2813 
=== Succesors ===
=== Usages ===
j2996 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3004 y: j2813  <|@  <|@
f <@*|@fixed>@ <|@
tid v2611 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2612 
=== Predecessor ===
v3224 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v309|V128_DWORD[....] = H [v302|QWORD[*] + v307|QWORD * 4] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v301|QWORD[.] + v307|QWORD * 4], input: v309|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v310|QWORD = LEA [v307|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v310|QWORD] destination: B274 -> B275 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B275"
    from_bci -1
    to_bci -1
    predecessors "B274" "B273" 
    successors "B276" "B277" 
    xhandlers
    flags 
    probability 4592735179747575970
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2996 <|@
result v311|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2612 
values: j3011 j3004 
=== Succesors ===
=== Usages ===
v3528 j3003 j2988 v3029 v3527 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2612 values: j3011 j3004  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2612 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2611 v2623 
=== Succesors ===
next: v2626 
=== Usages ===
j2996 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2611 v2623 #next: v2626  <|@  <|@
f <@~|@floating>@ <|@
tid j3028 <|@
result v312|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j2461 
y: j2855 
=== Succesors ===
=== Usages ===
v3029 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2461 y: j2855  <|@  <|@
f <@~|@floating>@ <|@
tid v3029 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3028 
y: j2996 
=== Succesors ===
=== Usages ===
v2626 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3028 y: j2996  <|@  <|@
f <@*|@fixed>@ <|@
tid v2626 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3029 
=== Succesors ===
trueSuccessor: v2625 
falseSuccessor: v2624 
=== Usages ===
=== Predecessor ===
v2612 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3029 #trueSuccessor: v2625 #falseSuccessor: v2624  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v311|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v312|QWORD = LEA [v300|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v311|QWORD, y: v312|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B275 -> B276 falseDestination: B275 -> B277 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B276"
    from_bci -1
    to_bci -1
    predecessors "B275" 
    successors "B278" 
    xhandlers
    flags 
    probability 4583727980492834978
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2625 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2629 
=== Usages ===
=== Predecessor ===
v2626 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2629  <|@  <|@
f <@*|@fixed>@ <|@
tid v2629 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2615 
=== Predecessor ===
v2625 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v311|QWORD] destination: B276 -> B278 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B277"
    from_bci -1
    to_bci -1
    predecessors "B275" 
    successors "B278" 
    xhandlers
    flags 
    probability 4590717489976473210
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2624 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3409 
=== Usages ===
v3409 
=== Predecessor ===
v2626 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3409  <|@  <|@
f <@~|@floating>@ <|@
tid v3528 <|@
result [v302|QWORD[*] + v311|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j2985 
index: j2996 
=== Succesors ===
=== Usages ===
v3409 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2985 index: j2996  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3409 <|@
result v313|V64_DWORD[..] <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: <n Ljava/lang/Object;,n Ljava/lang/Object;>
=== Inputs ===
stateBefore: - 
guard: v2624 
address: v3528 
=== Succesors ===
next: v3222 
=== Usages ===
v3222 
=== Predecessor ===
v2624 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2624 address: v3528 #next: v3222  <|@  <|@
f <@~|@floating>@ <|@
tid v3527 <|@
result [v301|QWORD[.] + v311|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j2987 
index: j2996 
=== Succesors ===
=== Usages ===
v3222 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2987 index: j2996  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3222 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3527 
value: v3409 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2614 
=== Usages ===
=== Predecessor ===
v3409 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3527 value: v3409 stateAfter: - lastLocationAccess: - #next: v2614  <|@  <|@
f <@~|@floating>@ <|@
tid j3003 <|@
result v314|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2996 
y: j2827 
=== Succesors ===
=== Usages ===
j2988 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2996 y: j2827  <|@  <|@
f <@*|@fixed>@ <|@
tid v2614 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2615 
=== Predecessor ===
v3222 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v313|V64_DWORD[..] = H [v302|QWORD[*] + v311|QWORD * 4] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v301|QWORD[.] + v311|QWORD * 4], input: v313|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v314|QWORD = LEA [v311|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v314|QWORD] destination: B277 -> B278 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B278"
    from_bci -1
    to_bci -1
    predecessors "B277" "B276" 
    successors "B279" "B280" 
    xhandlers
    flags 
    probability 4592735179747575970
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2988 <|@
result v315|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2615 
values: j3003 j2996 
=== Succesors ===
=== Usages ===
v3526 v3032 v3525 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2615 values: j3003 j2996  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2615 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2614 v2629 
=== Succesors ===
next: v2632 
=== Usages ===
j2988 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2614 v2629 #next: v2632  <|@  <|@
f <@~|@floating>@ <|@
tid j3031 <|@
result v316|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j2461 
y: j1188 
=== Succesors ===
=== Usages ===
v3032 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2461 y: j1188  <|@  <|@
f <@~|@floating>@ <|@
tid v3032 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3031 
y: j2988 
=== Succesors ===
=== Usages ===
v2632 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3031 y: j2988  <|@  <|@
f <@*|@fixed>@ <|@
tid v2632 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3032 
=== Succesors ===
trueSuccessor: v2631 
falseSuccessor: v2630 
=== Usages ===
=== Predecessor ===
v2615 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3032 #trueSuccessor: v2631 #falseSuccessor: v2630  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v315|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v316|QWORD = DEC v300|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v315|QWORD, y: v316|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B278 -> B279 falseDestination: B278 -> B280 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B279"
    from_bci -1
    to_bci -1
    predecessors "B278" 
    successors "B281" 
    xhandlers
    flags 
    probability 4583727980492834978
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2631 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2635 
=== Usages ===
=== Predecessor ===
v2632 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2635  <|@  <|@
f <@*|@fixed>@ <|@
tid v2635 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2605 
=== Predecessor ===
v2631 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B279 -> B281 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B280"
    from_bci -1
    to_bci -1
    predecessors "B278" 
    successors "B281" 
    xhandlers
    flags 
    probability 4590717489976473210
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2630 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a3410 
=== Usages ===
a3410 
=== Predecessor ===
v2632 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a3410  <|@  <|@
f <@~|@floating>@ <|@
tid v3526 <|@
result [v302|QWORD[*] + v315|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j2985 
index: j2988 
=== Succesors ===
=== Usages ===
a3410 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2985 index: j2988  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3410 <|@
result v317|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v2630 
address: v3526 
=== Succesors ===
next: v3220 
=== Usages ===
v3220 
=== Predecessor ===
v2630 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2630 address: v3526 #next: v3220  <|@  <|@
f <@~|@floating>@ <|@
tid v3525 <|@
result [v301|QWORD[.] + v315|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j2987 
index: j2988 
=== Succesors ===
=== Usages ===
v3220 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2987 index: j2988  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3220 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3525 
value: a3410 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2617 
=== Usages ===
=== Predecessor ===
a3410 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3525 value: a3410 stateAfter: - lastLocationAccess: - #next: v2617  <|@  <|@
f <@*|@fixed>@ <|@
tid v2617 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2605 
=== Predecessor ===
v3220 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v317|DWORD[.] = MOV [v302|QWORD[*] + v315|QWORD * 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v301|QWORD[.] + v315|QWORD * 4], y: v317|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B280 -> B281 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B281"
    from_bci -1
    to_bci -1
    predecessors "B266" "B280" "B279" 
    successors "B282" "B297" 
    xhandlers
    flags 
    probability 4597238779374946466
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2605 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2604 v2617 v2635 
=== Succesors ===
next: v3035 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2604 v2617 v2635 #next: v3035  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3035 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v2642 
=== Usages ===
j3037 
=== Predecessor ===
v2605 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v2642  <|@  <|@
f <@~|@floating>@ <|@
tid j2460 <|@
result v318|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1132 
=== Succesors ===
=== Usages ===
j2465 v2802 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1132  <|@  <|@
f <@~|@floating>@ <|@
tid v2802 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2461 
y: j2460 
=== Succesors ===
=== Usages ===
v2642 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2461 y: j2460  <|@  <|@
f <@*|@fixed>@ <|@
tid v2642 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v2802 
=== Succesors ===
trueSuccessor: v2641 
falseSuccessor: v2640 
=== Usages ===
=== Predecessor ===
v3035 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2802 #trueSuccessor: v2641 #falseSuccessor: v2640  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v318|QWORD = MOVSXD v285|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v318|QWORD, y: v300|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B281 -> B282 falseDestination: B281 -> B297 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B282"
    from_bci -1
    to_bci -1
    predecessors "B281" 
    successors "B283" "B284" 
    xhandlers
    flags 
    probability 4592735179747575970
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2641 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2645 
=== Usages ===
=== Predecessor ===
v2642 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2645  <|@  <|@
f <@~|@floating>@ <|@
tid v3499 <|@
result [v298|QWORD[.] + v300|QWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a2211 
index: j2461 
=== Succesors ===
=== Usages ===
j3037 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2211 index: j2461  <|@  <|@
f <@~|@floating>@ <|@
tid j3037 <|@
result v319|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v3035 
address: v3499 
=== Succesors ===
=== Usages ===
v3533 v3534 v3535 v3536 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v3035 address: v3499  <|@  <|@
f <@~|@floating>@ <|@
tid j2465 <|@
result v320|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j2460 
y: j2461 
=== Succesors ===
=== Usages ===
j3073 j3062 j3067 j3070 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j2460 y: j2461  <|@  <|@
f <@~|@floating>@ <|@
tid j3062 <|@
result v321|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967303 - 4294967287]
=== Inputs ===
x: j2465 
y: j2845 
=== Succesors ===
=== Usages ===
v3063 v3065 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2465 y: j2845  <|@  <|@
f <@~|@floating>@ <|@
tid v3063 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3062 
y: j1818 
=== Succesors ===
=== Usages ===
v2645 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3062 y: j1818  <|@  <|@
f <@*|@fixed>@ <|@
tid v2645 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v3063 
=== Succesors ===
trueSuccessor: v2643 
falseSuccessor: v2644 
=== Usages ===
=== Predecessor ===
v2641 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3063 #trueSuccessor: v2643 #falseSuccessor: v2644  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v319|QWORD[.] = LEA [v298|QWORD[.] + v300|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v320|QWORD = SUB (x: v318|QWORD, ~y: v300|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v321|QWORD = LEA [v320|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v321|QWORD, y: v321|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B282 -> B283 falseDestination: B282 -> B284 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B283"
    from_bci -1
    to_bci -1
    predecessors "B282" 
    successors "B287" 
    xhandlers
    flags 
    probability 4590717489976473210
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2643 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2654 
=== Usages ===
=== Predecessor ===
v2645 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2654  <|@  <|@
f <@*|@fixed>@ <|@
tid v2654 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2655 
=== Predecessor ===
v2643 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B283 -> B287 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B284"
    from_bci -1
    to_bci -1
    predecessors "B282" 
    successors "B285" 
    xhandlers
    flags 
    probability 4583727980492834978
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2644 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2646 
=== Usages ===
=== Predecessor ===
v2645 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2646  <|@  <|@
f <@*|@fixed>@ <|@
tid v2646 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2647 
=== Predecessor ===
v2644 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B284 -> B285 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B285"
    from_bci -1
    to_bci -1
    predecessors "B284" "B296" 
    successors "B286" "B296" 
    xhandlers
    flags "llh" 
    loop_index 15
    loop_depth 1
    probability 4592735179747575970
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3056 <|@
result v322|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2647 
values: j1818 j3061 
=== Succesors ===
=== Usages ===
v3536 j3061 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2647 values: j1818 j3061  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2647 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v2646 
=== Succesors ===
next: v3230 
=== Usages ===
j3056 v2650 v2651 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v2646 #next: v3230  <|@  <|@
f <@~|@floating>@ <|@
tid v3536 <|@
result [v319|QWORD[.] + v322|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j3037 
index: j3056 
=== Succesors ===
=== Usages ===
v3230 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3037 index: j3056  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3230 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3536 
value: v3243 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2653 
=== Usages ===
=== Predecessor ===
v2647 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3536 value: v3243 stateAfter: - lastLocationAccess: - #next: v2653  <|@  <|@
f <@~|@floating>@ <|@
tid j3061 <|@
result v323|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3056 
y: j1770 
=== Succesors ===
=== Usages ===
j3050 j3056 v3065 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3056 y: j1770  <|@  <|@
f <@~|@floating>@ <|@
tid v3065 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3062 
y: j3061 
=== Succesors ===
=== Usages ===
v2653 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3062 y: j3061  <|@  <|@
f <@*|@fixed>@ <|@
tid v2653 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3065 
=== Succesors ===
trueSuccessor: v2650 
falseSuccessor: v2652 
=== Usages ===
=== Predecessor ===
v3230 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3065 #trueSuccessor: v2650 #falseSuccessor: v2652  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v322|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v319|QWORD[.] + v322|QWORD * 4], input: v6|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v323|QWORD = LEA [v322|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v323|QWORD, y: v321|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B285 -> B286 falseDestination: B285 -> B296 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B286"
    from_bci -1
    to_bci -1
    predecessors "B285" 
    successors "B287" 
    xhandlers
    flags 
    probability 4583727980492834978
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2650 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v2647 
=== Succesors ===
next: v2656 
=== Usages ===
=== Predecessor ===
v2653 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v2647 #next: v2656  <|@  <|@
f <@*|@fixed>@ <|@
tid v2656 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2655 
=== Predecessor ===
v2650 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v323|QWORD] destination: B286 -> B287 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B287"
    from_bci -1
    to_bci -1
    predecessors "B283" "B286" 
    successors "B288" "B289" 
    xhandlers
    flags 
    probability 4592735179747575970
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3050 <|@
result v324|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2655 
values: j1818 j3061 
=== Succesors ===
=== Usages ===
v3535 j3055 j3044 v3068 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2655 values: j1818 j3061  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2655 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2654 v2656 
=== Succesors ===
next: v2674 
=== Usages ===
j3050 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2654 v2656 #next: v2674  <|@  <|@
f <@~|@floating>@ <|@
tid j3067 <|@
result v325|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967299 - 4294967291]
=== Inputs ===
x: j2465 
y: j2851 
=== Succesors ===
=== Usages ===
v3068 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2465 y: j2851  <|@  <|@
f <@~|@floating>@ <|@
tid v3068 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3067 
y: j3050 
=== Succesors ===
=== Usages ===
v2674 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3067 y: j3050  <|@  <|@
f <@*|@fixed>@ <|@
tid v2674 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3068 
=== Succesors ===
trueSuccessor: v2673 
falseSuccessor: v2672 
=== Usages ===
=== Predecessor ===
v2655 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3068 #trueSuccessor: v2673 #falseSuccessor: v2672  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v324|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v325|QWORD = LEA [v320|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v324|QWORD, y: v325|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B287 -> B288 falseDestination: B287 -> B289 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B288"
    from_bci -1
    to_bci -1
    predecessors "B287" 
    successors "B290" 
    xhandlers
    flags 
    probability 4583727980492834978
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2673 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2677 
=== Usages ===
=== Predecessor ===
v2674 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2677  <|@  <|@
f <@*|@fixed>@ <|@
tid v2677 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2666 
=== Predecessor ===
v2673 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v324|QWORD] destination: B288 -> B290 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B289"
    from_bci -1
    to_bci -1
    predecessors "B287" 
    successors "B290" 
    xhandlers
    flags 
    probability 4590717489976473210
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2672 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3229 
=== Usages ===
=== Predecessor ===
v2674 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3229  <|@  <|@
f <@~|@floating>@ <|@
tid v3535 <|@
result [v319|QWORD[.] + v324|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j3037 
index: j3050 
=== Succesors ===
=== Usages ===
v3229 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3037 index: j3050  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3229 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3535 
value: v3246 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2665 
=== Usages ===
=== Predecessor ===
v2672 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3535 value: v3246 stateAfter: - lastLocationAccess: - #next: v2665  <|@  <|@
f <@~|@floating>@ <|@
tid j3055 <|@
result v326|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3050 
y: j2813 
=== Succesors ===
=== Usages ===
j3044 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3050 y: j2813  <|@  <|@
f <@*|@fixed>@ <|@
tid v2665 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2666 
=== Predecessor ===
v3229 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v319|QWORD[.] + v324|QWORD * 4], input: v5|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v326|QWORD = LEA [v324|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v326|QWORD] destination: B289 -> B290 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B290"
    from_bci -1
    to_bci -1
    predecessors "B289" "B288" 
    successors "B291" "B292" 
    xhandlers
    flags 
    probability 4592735179747575970
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3044 <|@
result v327|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2666 
values: j3055 j3050 
=== Succesors ===
=== Usages ===
v3534 j3049 j3038 v3071 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2666 values: j3055 j3050  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2666 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2665 v2677 
=== Succesors ===
next: v2680 
=== Usages ===
j3044 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2665 v2677 #next: v2680  <|@  <|@
f <@~|@floating>@ <|@
tid j3070 <|@
result v328|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j2465 
y: j2855 
=== Succesors ===
=== Usages ===
v3071 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2465 y: j2855  <|@  <|@
f <@~|@floating>@ <|@
tid v3071 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3070 
y: j3044 
=== Succesors ===
=== Usages ===
v2680 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3070 y: j3044  <|@  <|@
f <@*|@fixed>@ <|@
tid v2680 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3071 
=== Succesors ===
trueSuccessor: v2679 
falseSuccessor: v2678 
=== Usages ===
=== Predecessor ===
v2666 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3071 #trueSuccessor: v2679 #falseSuccessor: v2678  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v327|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v328|QWORD = LEA [v320|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v327|QWORD, y: v328|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B290 -> B291 falseDestination: B290 -> B292 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B291"
    from_bci -1
    to_bci -1
    predecessors "B290" 
    successors "B293" 
    xhandlers
    flags 
    probability 4583727980492834978
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2679 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2683 
=== Usages ===
=== Predecessor ===
v2680 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2683  <|@  <|@
f <@*|@fixed>@ <|@
tid v2683 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2669 
=== Predecessor ===
v2679 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v327|QWORD] destination: B291 -> B293 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B292"
    from_bci -1
    to_bci -1
    predecessors "B290" 
    successors "B293" 
    xhandlers
    flags 
    probability 4590717489976473210
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2678 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3228 
=== Usages ===
=== Predecessor ===
v2680 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3228  <|@  <|@
f <@~|@floating>@ <|@
tid v3534 <|@
result [v319|QWORD[.] + v327|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j3037 
index: j3044 
=== Succesors ===
=== Usages ===
v3228 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3037 index: j3044  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3228 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3534 
value: v3245 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2668 
=== Usages ===
=== Predecessor ===
v2678 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3534 value: v3245 stateAfter: - lastLocationAccess: - #next: v2668  <|@  <|@
f <@~|@floating>@ <|@
tid j3049 <|@
result v329|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3044 
y: j2827 
=== Succesors ===
=== Usages ===
j3038 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3044 y: j2827  <|@  <|@
f <@*|@fixed>@ <|@
tid v2668 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2669 
=== Predecessor ===
v3228 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v319|QWORD[.] + v327|QWORD * 4], input: v4|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v329|QWORD = LEA [v327|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v329|QWORD] destination: B292 -> B293 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B293"
    from_bci -1
    to_bci -1
    predecessors "B292" "B291" 
    successors "B294" "B295" 
    xhandlers
    flags 
    probability 4592735179747575970
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3038 <|@
result v330|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2669 
values: j3049 j3044 
=== Succesors ===
=== Usages ===
v3533 v3074 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2669 values: j3049 j3044  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2669 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2668 v2683 
=== Succesors ===
next: v2686 
=== Usages ===
j3038 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2668 v2683 #next: v2686  <|@  <|@
f <@~|@floating>@ <|@
tid j3073 <|@
result v331|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j2465 
y: j1188 
=== Succesors ===
=== Usages ===
v3074 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2465 y: j1188  <|@  <|@
f <@~|@floating>@ <|@
tid v3074 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3073 
y: j3038 
=== Succesors ===
=== Usages ===
v2686 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3073 y: j3038  <|@  <|@
f <@*|@fixed>@ <|@
tid v2686 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3074 
=== Succesors ===
trueSuccessor: v2685 
falseSuccessor: v2684 
=== Usages ===
=== Predecessor ===
v2669 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3074 #trueSuccessor: v2685 #falseSuccessor: v2684  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v330|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v331|QWORD = DEC v320|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v330|QWORD, y: v331|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B293 -> B294 falseDestination: B293 -> B295 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B294"
    from_bci -1
    to_bci -1
    predecessors "B293" 
    successors "B298" 
    xhandlers
    flags 
    probability 4583727980492834978
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2685 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2689 
=== Usages ===
=== Predecessor ===
v2686 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2689  <|@  <|@
f <@*|@fixed>@ <|@
tid v2689 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2659 
=== Predecessor ===
v2685 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B294 -> B298 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B295"
    from_bci -1
    to_bci -1
    predecessors "B293" 
    successors "B298" 
    xhandlers
    flags 
    probability 4590717489976473210
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2684 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3227 
=== Usages ===
=== Predecessor ===
v2686 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3227  <|@  <|@
f <@~|@floating>@ <|@
tid v3533 <|@
result [v319|QWORD[.] + v330|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j3037 
index: j3038 
=== Succesors ===
=== Usages ===
v3227 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3037 index: j3038  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3227 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3533 
value: a3244 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2671 
=== Usages ===
=== Predecessor ===
v2684 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3533 value: a3244 stateAfter: - lastLocationAccess: - #next: v2671  <|@  <|@
f <@*|@fixed>@ <|@
tid v2671 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2659 
=== Predecessor ===
v3227 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v319|QWORD[.] + v330|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B295 -> B298 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B296"
    from_bci -1
    to_bci -1
    predecessors "B285" 
    successors "B285" 
    xhandlers
    flags "lle" 
    loop_index 15
    loop_depth 1
    probability 4590717489976473210
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2652 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2651 
=== Usages ===
=== Predecessor ===
v2653 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2651  <|@  <|@
f <@*|@fixed>@ <|@
tid v2651 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v2647 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2652 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v2647  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v323|QWORD] destination: B296 -> B285 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B297"
    from_bci -1
    to_bci -1
    predecessors "B281" 
    successors "B298" 
    xhandlers
    flags 
    probability 4592735179747575970
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2640 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2658 
=== Usages ===
=== Predecessor ===
v2642 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2658  <|@  <|@
f <@*|@fixed>@ <|@
tid v2658 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2659 
=== Predecessor ===
v2640 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B297 -> B298 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B298"
    from_bci -1
    to_bci -1
    predecessors "B297" "B295" "B294" 
    successors "B299" "B300" 
    xhandlers
    flags 
    probability 4597238779374946466
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2659 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2658 v2671 v2689 
=== Succesors ===
next: v2243 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2658 v2671 v2689 #next: v2243  <|@  <|@
f <@~|@floating>@ <|@
tid v2240 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:154) [bci: 1]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1132 
y: i13 
=== Succesors ===
=== Usages ===
v2243 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1132 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v2243 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:154) [bci: 1]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v2240 
=== Succesors ===
trueSuccessor: v2241 
falseSuccessor: v2242 
=== Usages ===
=== Predecessor ===
v2659 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2240 #trueSuccessor: v2241 #falseSuccessor: v2242  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v285|DWORD, y: v285|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B298 -> B299 falseDestination: B298 -> B300 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B299"
    from_bci -1
    to_bci -1
    predecessors "B298" 
    successors "B303" 
    xhandlers
    flags 
    probability 4592735179747575970
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2241 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:155) [bci: 4]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2267 
=== Usages ===
=== Predecessor ===
v2243 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2267  <|@  <|@
f <@*|@fixed>@ <|@
tid v2267 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2266 
=== Predecessor ===
v2241 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B299 -> B303 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B300"
    from_bci -1
    to_bci -1
    predecessors "B298" 
    successors "B301" 
    xhandlers
    flags 
    probability 4592735179747575970
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2242 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:157) [bci: 5]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2244 
=== Usages ===
=== Predecessor ===
v2243 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2244  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2244 <|@
result [v298|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToFirstArrayElement(WriteBarrierSnippets.java:376) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:159) [bci: 20]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v3439 
=== Succesors ===
next: j2246 
=== Usages ===
j2245 
=== Predecessor ===
v2242 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v3439 #next: j2246  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2246 <|@
result [v298|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:385) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v3439 
=== Succesors ===
next: v2254 
=== Usages ===
j2250 
=== Predecessor ===
j2244 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v3439 #next: v2254  <|@  <|@
f <@~|@floating>@ <|@
tid i2247 <|@
result v332|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: i32
=== Inputs ===
x: i1132 
y: i632 
=== Succesors ===
=== Usages ===
i2248 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1132 y: i632  <|@  <|@
f <@~|@floating>@ <|@
tid i2248 <|@
result v333|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i2247 
y: i912 
=== Succesors ===
=== Usages ===
j2249 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i2247 y: i912  <|@  <|@
f <@~|@floating>@ <|@
tid j2249 <|@
result v334|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 26]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
resultBits: 64
stamp: i64 [-2147483648 - 2147483644] ⇈fffffffffffffffc
=== Inputs ===
value: i2248 
=== Succesors ===
=== Usages ===
j2250 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2248  <|@  <|@
f <@~|@floating>@ <|@
tid j2250 <|@
result v336|QWORD[.] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 27]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: i64
=== Inputs ===
x: j2246 
y: j2249 
=== Succesors ===
=== Usages ===
j2251 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2246 y: j2249  <|@  <|@
f <@~|@floating>@ <|@
tid j2251 <|@
result v337|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 34]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j2250 
y: i1852 
=== Succesors ===
=== Usages ===
j2252 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j2250 y: i1852  <|@  <|@
f <@~|@floating>@ <|@
tid j2245 <|@
result v338|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:159) [bci: 24]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j2244 
y: i1852 
=== Succesors ===
=== Usages ===
j2252 j2265 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j2244 y: i1852  <|@  <|@
f <@~|@floating>@ <|@
tid j2252 <|@
result v340|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:161) [bci: 41]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: i64 [-36028797018963967 - 36028797018963967]
=== Inputs ===
x: j2251 
y: j2245 
=== Succesors ===
=== Usages ===
j2253 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j2251 y: j2245  <|@  <|@
f <@~|@floating>@ <|@
tid j2253 <|@
result v341|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:161) [bci: 43]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: i64 [-36028797018963966 - 36028797018963968]
=== Inputs ===
x: j2252 
y: j1778 
=== Succesors ===
=== Usages ===
j2256 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2252 y: j1778  <|@  <|@
f <@*|@fixed>@ <|@
tid v2254 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2255 
=== Predecessor ===
j2246 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v332|DWORD = DEC v285|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v333|DWORD = SHL v332|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v334|QWORD = MOVSXD v333|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v335|QWORD[.] = LEA [v298|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v336|QWORD[.] = ADD (x: v335|QWORD[.], y: v334|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v337|QWORD[*] = SHR v336|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v339|QWORD[.] = LEA [v298|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v338|QWORD[*] = SHR v339|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v340|QWORD[*] = SUB (x: v337|QWORD[*], ~y: v338|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v341|QWORD[*] = INC v340|QWORD[*] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v341|QWORD[*]] destination: B300 -> B301 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B301"
    from_bci -1
    to_bci -1
    predecessors "B300" "B318" 
    successors "B302" "B318" 
    xhandlers
    flags "llh" 
    loop_index 16
    loop_depth 1
    probability 4597238779374946466
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2256 <|@
result v342|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2255 
values: j2253 j2257 
=== Succesors ===
=== Usages ===
j2257 v2258 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2255 values: j2253 j2257  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2255 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 2.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v2254 
=== Succesors ===
next: v2261 
=== Usages ===
j2256 v2259 v2264 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v2254 #next: v2261  <|@  <|@
f <@~|@floating>@ <|@
tid v2258 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 55]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2256 
y: j1778 
=== Succesors ===
=== Usages ===
v2261 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2256 y: j1778  <|@  <|@
f <@*|@fixed>@ <|@
tid v2261 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 55]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v2258 
=== Succesors ===
trueSuccessor: v2259 
falseSuccessor: v2260 
=== Usages ===
=== Predecessor ===
v2255 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2258 #trueSuccessor: v2259 #falseSuccessor: v2260  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v342|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v342|QWORD[*] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B301 -> B302 falseDestination: B301 -> B318 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B302"
    from_bci -1
    to_bci -1
    predecessors "B301" 
    successors "B303" 
    xhandlers
    flags 
    probability 4592735179747575970
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2259 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:165) [bci: 76]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v2255 
=== Succesors ===
next: v2268 
=== Usages ===
=== Predecessor ===
v2261 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v2255 #next: v2268  <|@  <|@
f <@*|@fixed>@ <|@
tid v2268 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2266 
=== Predecessor ===
v2259 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B302 -> B303 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B303"
    from_bci -1
    to_bci -1
    predecessors "B299" "B302" 
    successors "B304" "B305" 
    xhandlers
    flags 
    probability 4597238779374946466
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2266 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2267 v2268 
=== Succesors ===
next: a1642 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2267 v2268 #next: a1642  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1642 <|@
result v298|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a2211 
=== Succesors ===
next: v1072 
=== Usages ===
v2321 a1071 v3494 j2308 j2318 
=== Predecessor ===
v2266 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a2211 #next: v1072  <|@  <|@
f <@~|@floating>@ <|@
tid a1071 <|@
result v343|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:265) [bci: 41]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
op: Compress
stamp: n! -
=== Inputs ===
value: a1642 
=== Succesors ===
=== Usages ===
v1072 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1642  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1072 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: ArrayList.elementData
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:265) [bci: 41]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3430 
value: a1071 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j2270 
=== Usages ===
=== Predecessor ===
a1642 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3430 value: a1071 stateAfter: - lastLocationAccess: - #next: j2270  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2270 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 41]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v2274 
=== Usages ===
j2271 
=== Predecessor ===
v1072 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v2274  <|@  <|@
f <@~|@floating>@ <|@
tid j2271 <|@
result v344|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 41]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j2270 
y: i1852 
=== Succesors ===
=== Usages ===
v3491 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j2270 y: i1852  <|@  <|@
f <@~|@floating>@ <|@
tid v3491 <|@
result [v344|QWORD[*] + v3|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2271 
index: j1874 
=== Succesors ===
=== Usages ===
v2274 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2271 index: j1874  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2274 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 41]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3491 
value: i2033 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1087 
=== Usages ===
=== Predecessor ===
j2270 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3491 value: i2033 stateAfter: - lastLocationAccess: - #next: v1087  <|@  <|@
f <@*|@fixed>@ <|@
tid v1087 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 33]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:146) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1081 
=== Succesors ===
trueSuccessor: v1086 
falseSuccessor: v1082 
=== Usages ===
=== Predecessor ===
v2274 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1081 #trueSuccessor: v1086 #falseSuccessor: v1082  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v343|DWORD[.] = COMPRESSPOINTER (input: v298|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@eef3a58 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v343|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v344|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v344|QWORD[*] + v3|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction TEST (x: v255|DWORD, y: v255|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B303 -> B304 falseDestination: B303 -> B305 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B304"
    from_bci -1
    to_bci -1
    predecessors "B303" 
    successors "B309" 
    xhandlers
    flags 
    probability 4567311708340335519
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1086 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:146) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1085 
=== Usages ===
=== Predecessor ===
v1087 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1085  <|@  <|@
f <@*|@fixed>@ <|@
tid v1085 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:146) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1084 
=== Predecessor ===
v1086 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B304 -> B309 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B305"
    from_bci -1
    to_bci -1
    predecessors "B303" 
    successors "B306" "B307" 
    xhandlers
    flags 
    probability 4597158071784102356
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1082 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 36]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:146) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1098 
=== Usages ===
=== Predecessor ===
v1087 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1098  <|@  <|@
f <@*|@fixed>@ <|@
tid v1098 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 77]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:146) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1131 
=== Succesors ===
trueSuccessor: v1097 
falseSuccessor: v1095 
=== Usages ===
=== Predecessor ===
v1082 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1131 #trueSuccessor: v1097 #falseSuccessor: v1095  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v252|DWORD, y: v261|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B305 -> B306 falseDestination: B305 -> B307 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B306"
    from_bci -1
    to_bci -1
    predecessors "B305" 
    successors "B309" 
    xhandlers
    flags 
    probability 4567260055482195289
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1097 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:146) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1096 
=== Usages ===
=== Predecessor ===
v1098 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1096  <|@  <|@
f <@*|@fixed>@ <|@
tid v1096 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:146) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1084 
=== Predecessor ===
v1097 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B306 -> B309 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B307"
    from_bci -1
    to_bci -1
    predecessors "B305" 
    successors "B308" "B310" 
    xhandlers
    flags 
    probability 4597078171269166687
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1095 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 80]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:146) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1104 
=== Usages ===
=== Predecessor ===
v1098 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1104  <|@  <|@
f <@~|@floating>@ <|@
tid i1099 <|@
result v345|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:146) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: i32
=== Inputs ===
x: i1132 
y: i808 
=== Succesors ===
=== Usages ===
v1100 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i1132 y: i808  <|@  <|@
f <@~|@floating>@ <|@
tid v1100 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:146) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1099 
y: i3398 
=== Succesors ===
=== Usages ===
v1104 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1099 y: i3398  <|@  <|@
f <@*|@fixed>@ <|@
tid v1104 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:146) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1100 
=== Succesors ===
trueSuccessor: v1103 
falseSuccessor: v1101 
=== Usages ===
=== Predecessor ===
v1095 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1100 #trueSuccessor: v1103 #falseSuccessor: v1101  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v345|DWORD = SUB (x: v285|DWORD, ~y: v252|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v255|DWORD, y: v345|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B307 -> B308 falseDestination: B307 -> B310 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B308"
    from_bci -1
    to_bci -1
    predecessors "B307" 
    successors "B309" 
    xhandlers
    flags 
    probability 4567208919152636461
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1103 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:146) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1102 
=== Usages ===
=== Predecessor ===
v1104 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1102  <|@  <|@
f <@*|@fixed>@ <|@
tid v1102 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:146) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1084 
=== Predecessor ===
v1103 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B308 -> B309 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B309"
    from_bci -1
    to_bci -1
    predecessors "B304" "B306" "B308" 
    successors 
    xhandlers
    flags 
    probability 4574320729851797906
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1084 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:146) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1085 v1096 v1102 
=== Succesors ===
next: v1105 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1085 v1096 v1102 #next: v1105  <|@  <|@
tid ?99 <|@
d <@d|@=== Debug Properties ===
bci: 22
code: ResolvedJavaMethodBytecode<ArrayList.ensureExplicitCapacity(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ArrayList.java
sourceLine: 239
stackSize: 0
=== Inputs ===
outerFrameState: ?70 
values: - - 
=== Succesors ===
=== Usages ===
?97 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?70 values: - -  <|@  <|@
tid ?97 <|@
d <@d|@=== Debug Properties ===
bci: 44
code: ResolvedJavaMethodBytecode<ArrayList.grow(int)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:265) [bci: 41]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
rethrowException: false
sourceFile: ArrayList.java
sourceLine: 266
stackSize: 0
=== Inputs ===
outerFrameState: ?99 
values: - - - - 
=== Succesors ===
=== Usages ===
v1105 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?99 values: - - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1105 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 0
nodeSourcePosition: at org.graalvm.compiler.nodes.DeoptimizeNode.deopt(DeoptimizationAction, DeoptimizationReason) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:263) [bci: 119]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:146) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
reason: RuntimeConstraint
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?97 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1084 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?97  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -282977 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.grow(ArrayList.java:266) [bci: 44]
locals: - - - - 
java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
locals: - - 
java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
locals: - - 
java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
locals: v0|QWORD[.] - v253|QWORD[.] v252|DWORD 
>@ <|@ instruction DEOPT info [bci:44, 22, 9, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B310"
    from_bci -1
    to_bci -1
    predecessors "B307" 
    successors "B311" "B312" 
    xhandlers
    flags 
    probability 4596999069759380374
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1101 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:146) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2280 
=== Usages ===
=== Predecessor ===
v1104 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2280  <|@  <|@
f <@~|@floating>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.ArrayList.addAll(ArrayList.java:586) [bci: 45]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i808 
y: i13 
=== Succesors ===
=== Usages ===
i24 v2280 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i808 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v2280 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:205) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v22 
=== Succesors ===
trueSuccessor: v2278 
falseSuccessor: v2279 
=== Usages ===
=== Predecessor ===
v1101 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v22 #trueSuccessor: v2278 #falseSuccessor: v2279  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v252|DWORD, y: v252|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B310 -> B311 falseDestination: B310 -> B312 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B311"
    from_bci -1
    to_bci -1
    predecessors "B310" 
    successors "B317" 
    xhandlers
    flags 
    probability 4581922060983499895
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2278 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:233) [bci: 217]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2326 
=== Usages ===
=== Predecessor ===
v2280 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2326  <|@  <|@
f <@*|@fixed>@ <|@
tid v2326 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2325 
=== Predecessor ===
v2278 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B311 -> B317 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B312"
    from_bci -1
    to_bci -1
    predecessors "B310" 
    successors "B313" "B314" 
    xhandlers
    flags 
    probability 4596215964812495879
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2279 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:206) [bci: 19]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3411 
=== Usages ===
=== Predecessor ===
v2280 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3411  <|@  <|@
f <@~|@floating>@ <|@
tid v3555 <|@
result [v253|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a1174 
index: - 
=== Succesors ===
=== Usages ===
v3411 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1174 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3411 <|@
result v346|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHub(HotSpotReplacementsUtil.java:737) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:208) [bci: 33]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v3555 
=== Succesors ===
next: v3412 
=== Usages ===
v2322 
=== Predecessor ===
v2279 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3555 #next: v3412  <|@  <|@
f <@~|@floating>@ <|@
tid v3494 <|@
result [v298|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a1642 
index: - 
=== Succesors ===
=== Usages ===
v3412 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1642 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3412 <|@
result v347|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHub(HotSpotReplacementsUtil.java:737) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:209) [bci: 40]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v3494 
=== Succesors ===
next: v2285 
=== Usages ===
v3492 v2322 
=== Predecessor ===
v3411 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3494 #next: v2285  <|@  <|@
f <@~|@floating>@ <|@
tid v2322 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:210) [bci: 52]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v3411 
y: v3412 
=== Succesors ===
=== Usages ===
v2285 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: v3411 y: v3412  <|@  <|@
f <@~|@floating>@ <|@
tid j2309 <|@
result v348|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopyObjectKillsAny(ArrayCopyCallNode.java:199) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:214) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i3398 
=== Succesors ===
=== Usages ===
v3498 v3496 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i3398  <|@  <|@
f <@~|@floating>@ <|@
tid j3347 <|@
result v349|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopyObjectKillsAny(ArrayCopyCallNode.java:199) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:214) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i808 
=== Succesors ===
=== Usages ===
v2314 i2320 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i808  <|@  <|@
f <@*|@fixed>@ <|@
tid v2285 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:210) [bci: 63]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
trueSuccessorProbability: 0.6
=== Inputs ===
condition: v2322 
=== Succesors ===
trueSuccessor: v2284 
falseSuccessor: v2283 
=== Usages ===
=== Predecessor ===
v3412 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2322 #trueSuccessor: v2284 #falseSuccessor: v2283  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v346|DWORD = MOV [v253|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v347|DWORD = MOV [v298|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v348|QWORD = MOVSXD v255|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v349|QWORD = MOV v252|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v347|DWORD, y: v346|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6 condition: = trueDestination: B312 -> B313 falseDestination: B312 -> B314 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B313"
    from_bci -1
    to_bci -1
    predecessors "B312" 
    successors "B317" 
    xhandlers
    flags 
    probability 4593121954089517474
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2284 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:212) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2303 
=== Usages ===
=== Predecessor ===
v2285 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2303  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2303 <|@
result v350|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopyObjectKillsAny(ArrayCopyCallNode.java:199) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:214) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: i64
=== Inputs ===
object: a1174 
=== Succesors ===
next: j2308 
=== Usages ===
v3495 
=== Predecessor ===
v2284 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a1174 #next: j2308  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2308 <|@
result v351|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopyObjectKillsAny(ArrayCopyCallNode.java:199) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:214) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: i64
=== Inputs ===
object: a1642 
=== Succesors ===
next: v2314 
=== Usages ===
v3496 
=== Predecessor ===
j2303 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a1642 #next: v2314  <|@  <|@
f <@~|@floating>@ <|@
tid v3495 <|@
result [v350|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j2303 
index: - 
=== Succesors ===
=== Usages ===
v2314 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2303 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v3496 <|@
result [v351|QWORD[*] + v348|QWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: j2308 
index: j2309 
=== Succesors ===
=== Usages ===
v2314 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2308 index: j2309  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2314 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: ObjectArraycopyKillAny(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopyObjectKillsAny(ArrayCopyCallNode.java:199) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:214) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v3495 v3496 j3347 
=== Succesors ===
next: v2327 
=== Usages ===
=== Predecessor ===
j2308 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v3495 v3496 j3347 #next: v2327  <|@  <|@
f <@*|@fixed>@ <|@
tid v2327 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2325 
=== Predecessor ===
v2314 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v350|QWORD[*] = MOVE v253|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v351|QWORD[*] = MOVE v298|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v350|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v351|QWORD[*] + v348|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v349|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: ObjectArraycopyKillAny(Word,Word,Word)void@0x106813120:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B313 -> B317 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B314"
    from_bci -1
    to_bci -1
    predecessors "B312" 
    successors "B315" "B316" 
    xhandlers
    flags 
    probability 4590302776280733292
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2283 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:216) [bci: 98]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3413 
=== Usages ===
=== Predecessor ===
v2285 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3413  <|@  <|@
f <@~|@floating>@ <|@
tid v3492 <|@
result [v347|DWORD * 8 + 232] <|@
d <@d|@=== Debug Properties ===
displacement: 232
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v3412 
=== Succesors ===
=== Usages ===
v3413 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v3412  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3413 <|@
result v352|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ObjArrayKlass::_element_klass:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:216) [bci: 109]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
nullCheck: false
stamp: Klass*
=== Inputs ===
stateBefore: - 
guard: - 
address: v3492 
=== Succesors ===
next: i2315 
=== Usages ===
v3493 i2320 
=== Predecessor ===
v2283 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3492 #next: i2315  <|@  <|@
f <@~|@floating>@ <|@
tid v3493 <|@
result [v352|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: v3413 
index: - 
=== Succesors ===
=== Usages ===
i2315 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v3413 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2315 <|@
result v353|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: Klass::_super_check_offset:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:217) [bci: 125]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v3493 
=== Succesors ===
next: j2316 
=== Usages ===
j2288 
=== Predecessor ===
v3413 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3493 #next: j2316  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2316 <|@
result v354|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.CheckcastArrayCopyCallNode.checkcastArraycopy(Object, int, Object, int, int, Word, Object, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:222) [bci: 167]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: i64
=== Inputs ===
object: a1174 
=== Succesors ===
next: j2318 
=== Usages ===
v3497 
=== Predecessor ===
i2315 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a1174 #next: j2318  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2318 <|@
result v355|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.CheckcastArrayCopyCallNode.checkcastArraycopy(Object, int, Object, int, int, Word, Object, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:222) [bci: 167]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: i64
=== Inputs ===
object: a1642 
=== Succesors ===
next: i2320 
=== Usages ===
v3498 
=== Predecessor ===
j2316 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a1642 #next: i2320  <|@  <|@
f <@~|@floating>@ <|@
tid v3497 <|@
result [v354|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j2316 
index: - 
=== Succesors ===
=== Usages ===
i2320 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2316 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v3498 <|@
result [v355|QWORD[*] + v348|QWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: j2318 
index: j2309 
=== Succesors ===
=== Usages ===
i2320 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2318 index: j2309  <|@  <|@
f <@~|@floating>@ <|@
tid j2288 <|@
result v356|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:217) [bci: 128]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i2315 
=== Succesors ===
=== Usages ===
i2320 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2315  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2320 <|@
result v357|DWORD <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: ObjectCheckcast(Word,Word,Word,Word,Word)int
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.CheckcastArrayCopyCallNode.checkcastArraycopy(Object, int, Object, int, int, Word, Object, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:222) [bci: 167]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: i32
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v3497 v3498 j3347 j2288 v3413 
=== Succesors ===
next: v2292 
=== Usages ===
v2289 i2293 
=== Predecessor ===
j2318 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v3497 v3498 j3347 j2288 v3413 #next: v2292  <|@  <|@
f <@~|@floating>@ <|@
tid v2289 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:223) [bci: 177]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2320 
y: i13 
=== Succesors ===
=== Usages ===
v2292 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2320 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v2292 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:223) [bci: 188]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
trueSuccessorProbability: 0.99
=== Inputs ===
condition: v2289 
=== Succesors ===
trueSuccessor: v2291 
falseSuccessor: v2290 
=== Usages ===
=== Predecessor ===
i2320 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2289 #trueSuccessor: v2291 #falseSuccessor: v2290  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v352|QWORD = MOV [v347|DWORD * 8 + 232] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v353|DWORD = MOV [v352|QWORD + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v354|QWORD[*] = MOVE v253|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v355|QWORD[*] = MOVE v298|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v356|QWORD = MOVSXD v353|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v354|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v355|QWORD[*] + v348|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v349|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE v356|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE v352|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: ObjectCheckcast(Word,Word,Word,Word,Word)int@0x1068133a0:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v357|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v357|DWORD, y: v357|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B314 -> B315 falseDestination: B314 -> B316 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B315"
    from_bci -1
    to_bci -1
    predecessors "B314" 
    successors "B317" 
    xhandlers
    flags 
    probability 4590246392724557608
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2291 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:233) [bci: 217]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2328 
=== Usages ===
=== Predecessor ===
v2292 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2328  <|@  <|@
f <@*|@fixed>@ <|@
tid v2328 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2325 
=== Predecessor ===
v2291 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B315 -> B317 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B316"
    from_bci -1
    to_bci -1
    predecessors "B314" 
    successors "B317" 
    xhandlers
    flags 
    probability 4560356318462058968
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2290 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:228) [bci: 191]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2333 
=== Usages ===
=== Predecessor ===
v2292 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2333  <|@  <|@
f <@~|@floating>@ <|@
tid i2293 <|@
result v358|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NotNode$$Lambda$192/1797157237@4fdb7f79
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:228) [bci: 194]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: i32
=== Inputs ===
value: i2320 
=== Succesors ===
=== Usages ===
v2321 i2295 i2296 
=== Predecessor ===
- >@ <|@
instruction <@Not|@org.graalvm.compiler.nodes.calc.NotNode>@ value: i2320  <|@  <|@
f <@~|@floating>@ <|@
tid i2295 <|@
result v359|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:229) [bci: 208]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: i32
=== Inputs ===
x: i2293 
y: i3398 
=== Succesors ===
=== Usages ===
v2321 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2293 y: i3398  <|@  <|@
f <@~|@floating>@ <|@
tid i2296 <|@
result v360|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:229) [bci: 213]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: i32
=== Inputs ===
x: i808 
y: i2293 
=== Succesors ===
=== Usages ===
v2321 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i808 y: i2293  <|@  <|@
tid v2321 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopyWithSlowPathWork(ArrayCopySnippets.java:229) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@6ae90306
stamp: void
targetMethod: HotSpotMethod<System.arraycopy(Object, int, Object, int, int)>
=== Inputs ===
arguments: a1174 i2293 a1642 i2295 i2296 
=== Succesors ===
=== Usages ===
v2333 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1174 i2293 a1642 i2295 i2296  <|@  <|@
tid ?1519 <|@
d <@d|@=== Debug Properties ===
bci: 31
code: ResolvedJavaMethodBytecode<ArrayList.addAll(Collection)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: ArrayList.java
sourceLine: 584
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - i808 
=== Succesors ===
=== Usages ===
v2333 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - i808  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2333 <|@
d <@d|@=== Debug Properties ===
bci: 31
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
polymorphic: false
stamp: void
targetMethod: Direct#System.arraycopy
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v2321 
stateDuring: ?1519 
=== Succesors ===
next: v2329 
=== Usages ===
=== Predecessor ===
v2290 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v2321 stateDuring: ?1519 #next: v2329  <|@  <|@
f <@*|@fixed>@ <|@
tid v2329 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2325 
=== Predecessor ===
v2333 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v358|DWORD = NOT v357|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v359|DWORD = ADD (x: v358|DWORD, y: v255|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v360|DWORD = SUB (x: v252|DWORD, ~y: v358|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v253|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v358|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v298|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE v359|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE v360|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
locals: v0|QWORD[.] - - v252|DWORD 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD] [] callTarget: HotSpotMethod<System.arraycopy(Object, int, Object, int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:31] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B316 -> B317 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B317"
    from_bci -1
    to_bci -1
    predecessors "B311" "B313" "B315" "B316" 
    successors 
    xhandlers
    flags 
    probability 4596999069759380374
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2325 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyWithSlowPathNode.arraycopy(Object, int, Object, int, int, SnippetTemplate$SnippetInfo, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyCheckcastSnippet(ArrayCopySnippets.java:149) [bci: 53]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2326 v2327 v2328 v2329 
=== Succesors ===
next: i3414 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2326 v2327 v2328 v2329 #next: i3414  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3414 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList.size
nodeSourcePosition: at java.util.ArrayList.addAll(ArrayList.java:585) [bci: 36]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v3429 
=== Succesors ===
next: v1116 
=== Usages ===
i19 
=== Predecessor ===
v2325 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3429 #next: v1116  <|@  <|@
f <@~|@floating>@ <|@
tid i19 <|@
result v361|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.ArrayList.addAll(ArrayList.java:585) [bci: 40]
stamp: i32
=== Inputs ===
x: i808 
y: i3414 
=== Succesors ===
=== Usages ===
v1116 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i808 y: i3414  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1116 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ArrayList.size
nodeSourcePosition: at java.util.ArrayList.addAll(ArrayList.java:585) [bci: 41]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3429 
value: i19 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v25 
=== Usages ===
=== Predecessor ===
i3414 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3429 value: i19 stateAfter: - lastLocationAccess: - #next: v25  <|@  <|@
f <@~|@floating>@ <|@
tid i24 <|@
result v362|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.addAll(ArrayList.java:586) [bci: 45]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v22 
trueValue: i13 
falseValue: i23 
=== Succesors ===
=== Usages ===
v25 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v22 trueValue: i13 falseValue: i23  <|@  <|@
f <@*|@fixed>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.addAll(ArrayList.java:586) [bci: 53]
stamp: void
=== Inputs ===
result: i24 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1116 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i24 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v361|DWORD = ADD (x: v252|DWORD, ~y: [v0|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v361|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v252|DWORD, y: v252|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v362|DWORD = SETCC condition: != <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v362|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B318"
    from_bci -1
    to_bci -1
    predecessors "B301" 
    successors "B301" 
    xhandlers
    flags "lle" 
    loop_index 16
    loop_depth 1
    probability 4592735179747575970
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2260 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 58]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2263 
=== Usages ===
=== Predecessor ===
v2261 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2263  <|@  <|@
f <@~|@floating>@ <|@
tid j2257 <|@
result v363|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 50]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: i64
=== Inputs ===
x: j2256 
y: j1188 
=== Succesors ===
=== Usages ===
j2256 j2262 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2256 y: j1188  <|@  <|@
f <@~|@floating>@ <|@
tid j2265 <|@
result v364|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 62]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: i64 [4682670080 - 36028801701634047] ⇈00ffffffffffffff
=== Inputs ===
x: j2245 
y: j1874 
=== Succesors ===
=== Usages ===
j2262 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2245 y: j1874  <|@  <|@
f <@~|@floating>@ <|@
tid j2262 <|@
result v365|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 65]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: i64
=== Inputs ===
x: j2257 
y: j2265 
=== Succesors ===
=== Usages ===
v2263 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2257 y: j2265  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2263 <|@
d <@d|@=== Debug Properties ===
kind: boolean
nodeSourcePosition: at org.graalvm.compiler.replacements.nodes.DirectStoreNode.storeBoolean(long, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 70]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: void
=== Inputs ===
address: j2262 
value: i13 
=== Succesors ===
next: v2264 
=== Usages ===
=== Predecessor ===
v2260 >@ <|@
instruction <@DirectStore|@org.graalvm.compiler.replacements.nodes.DirectStoreNode>@ address: j2262 value: i13 #next: v2264  <|@  <|@
f <@*|@fixed>@ <|@
tid v2264 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: void
=== Inputs ===
loopBegin: v2255 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2263 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v2255  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v363|QWORD[*] = DEC v342|QWORD[*] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v364|QWORD[*] = ADD (x: v338|QWORD[*], y: v3|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v365|QWORD[*] = ADD (x: v364|QWORD[*], y: v363|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v365|QWORD[*]], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v363|QWORD[*]] destination: B318 -> B301 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B319"
    from_bci -1
    to_bci -1
    predecessors "B270" 
    successors "B270" 
    xhandlers
    flags "lle" 
    loop_index 14
    loop_depth 1
    probability 4590717489976473210
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2598 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2597 
=== Usages ===
=== Predecessor ===
v2599 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2597  <|@  <|@
f <@*|@fixed>@ <|@
tid v2597 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v2593 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2598 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v2593  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v306|QWORD] destination: B319 -> B270 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B320"
    from_bci -1
    to_bci -1
    predecessors "B259" 
    successors "B321" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1398 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:262) [bci: 24]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1743 
=== Usages ===
=== Predecessor ===
v1399 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1743  <|@  <|@
f <@~|@floating>@ <|@
tid i1744 <|@
result int[-273427|0xfffffffffffbd3ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -273427
stableDimension: 0
stamp: i32 [-273427] ⇊00000000fffbd3ed ⇈00000000fffbd3ed
stampKind: i32
value: int[-273427|0xfffffffffffbd3ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1745 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1743 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1742 
=== Predecessor ===
v1398 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-273427|0xfffffffffffbd3ed]] destination: B320 -> B321 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B321"
    from_bci -1
    to_bci -1
    predecessors "B320" "B246" "B261" "B250" "B248" 
    successors 
    xhandlers
    flags 
    probability 4582300274885977192
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1745 <|@
result v366|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-393313 - -270433] ⇊00000000fff9d38d ⇈00000000fffbffff
valueDescription: i32
=== Inputs ===
merge: v1742 
values: i1744 i1749 i1751 i1749 i1749 
=== Succesors ===
=== Usages ===
v1747 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1742 values: i1744 i1749 i1751 i1749 i1749  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1742 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1743 v1748 v1750 v1760 v1761 
=== Succesors ===
next: v1747 
=== Usages ===
i1745 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1743 v1748 v1750 v1760 v1761 #next: v1747  <|@  <|@
f <@*|@fixed>@ <|@
tid v1747 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?57 
actionAndReason: i1745 
speculation: a1548 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1742 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?57 actionAndReason: i1745 speculation: a1548  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v366|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v366|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:238) [bci: 10]
locals: v0|QWORD[.] v257|DWORD 
java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
locals: - - 
java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
locals: v0|QWORD[.] - v253|QWORD[.] v252|DWORD 
>@ <|@ instruction DEOPT info [bci:10, 9, 17] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B47" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@25350e89 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.addAll(ArrayList.java:581) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v2|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7101534901468434 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4604571713532478778
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[.] = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.addAll(ArrayList.java:581) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v7|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOV [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v8|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4604571713532478778
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV [v7|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = SHL v8|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = LEA [v12|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = AND v13|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOVSXD v14|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = ADD (x: v15|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v16|QWORD, y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4604507748592606754
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v16|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v15|QWORD + v9|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v15|QWORD + v9|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v15|QWORD + v9|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v15|QWORD + v9|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v9|QWORD + 12], y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v9|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v9|QWORD + 8], y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = MOVE v9|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v19|QWORD[.]] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4604571713532478778
    begin_IR
      LIR
      nr   -1  <|@ instruction [v20|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOV [v7|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v8|DWORD, y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = CMOVE (falseValue: v8|DWORD, ~trueValue: v21|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = MOVSXD v22|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v23|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4600068113905108282
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = LEA [v23|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[.] = LEA [v20|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[*] = LEA [v7|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v24|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    probability 4598468990408307692
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B9 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4600068113905108282
    begin_IR
      LIR
      nr   -1  <|@ instruction [v30|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = LEA [v23|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v30|QWORD, y: v31|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4598468990408307692
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v32|V128_DWORD[....] = H [v26|QWORD[*] + v30|QWORD * 4] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v25|QWORD[.] + v30|QWORD * 4], input: v32|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = LEA [v30|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v33|QWORD] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4600068113905108282
    begin_IR
      LIR
      nr   -1  <|@ instruction [v34|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = LEA [v23|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v34|QWORD, y: v35|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4598468990408307692
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v36|V64_DWORD[..] = H [v26|QWORD[*] + v34|QWORD * 4] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v25|QWORD[.] + v34|QWORD * 4], input: v36|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = LEA [v34|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v37|QWORD] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4600068113905108282
    begin_IR
      LIR
      nr   -1  <|@ instruction [v38|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = DEC v23|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v38|QWORD, y: v39|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4598468990408307692
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v40|DWORD[.] = MOV [v26|QWORD[*] + v38|QWORD * 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v25|QWORD[.] + v38|QWORD * 4], y: v40|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B7" "B21" "B20" 
    successors "B23" "B38" 
    xhandlers
    flags 
    probability 4604571713532478778
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = MOVSXD v8|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v41|QWORD, y: v23|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B39" 
    xhandlers
    flags 
    probability 4600068113905108282
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B36" "B35" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4604571713532478778
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v8|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4600068113905108282
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = DEC v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = SHL v55|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = MOVSXD v56|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = LEA [v20|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[.] = ADD (x: v58|QWORD[.], y: v57|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[*] = SHR v59|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[.] = LEA [v20|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[*] = SHR v62|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v63|QWORD[*] = SUB (x: v60|QWORD[*], ~y: v61|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v64|QWORD[*] = INC v63|QWORD[*] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v64|QWORD[*]] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B42" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4600068113905108282
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[*] = DEC v65|QWORD[*] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[*] = ADD (x: v61|QWORD[*], y: v3|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[*] = ADD (x: v67|QWORD[*], y: v66|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v68|QWORD[*]], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v66|QWORD[*]] destination: B45 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B45" 
    successors "B43" "B45" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4604571713532478778
    begin_IR
      LIR
      nr   -1  <|@ instruction [v65|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v65|QWORD[*] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B42 -> B43 falseDestination: B42 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B22" 
    xhandlers
    flags 
    probability 4600068113905108282
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B7 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4600068113905108282
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[.] = LEA [v20|QWORD[.] + v23|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = SUB (x: v41|QWORD, ~y: v23|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = LEA [v43|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v44|QWORD, y: v44|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 4598468990408307692
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B24 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B24" "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4600068113905108282
    begin_IR
      LIR
      nr   -1  <|@ instruction [v47|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = LEA [v43|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v47|QWORD, y: v48|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4598468990408307692
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v372|V128_DWORD[....] = L oc: SIMD<null,null,null,null> <|@ <|@
      nr   -1  <|@ instruction J (address: [v42|QWORD[.] + v47|QWORD * 4], input: v372|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = LEA [v47|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|QWORD] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4600068113905108282
    begin_IR
      LIR
      nr   -1  <|@ instruction [v50|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = LEA [v43|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v50|QWORD, y: v51|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4598468990408307692
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v369|V64_DWORD[..] = L oc: SIMD<null,null> <|@ <|@
      nr   -1  <|@ instruction J (address: [v42|QWORD[.] + v50|QWORD * 4], input: v369|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = LEA [v50|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v52|QWORD] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4600068113905108282
    begin_IR
      LIR
      nr   -1  <|@ instruction [v53|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = DEC v43|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v53|QWORD, y: v54|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B39" 
    xhandlers
    flags 
    probability 4598468990408307692
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v42|QWORD[.] + v53|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B36 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    probability 4600068113905108282
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B40 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B40" "B43" 
    successors "B239" 
    xhandlers
    flags 
    probability 4604571713532478778
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v8|DWORD, v20|QWORD[.]] destination: B44 -> B239 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B239"
    from_bci -1
    to_bci -1
    predecessors "B238" "B44" "B192" "B233" 
    successors "B240" "B243" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v252|DWORD, v253|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v254|DWORD[.] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.addAll(ArrayList.java:581) [bci: 6]
stack: v253|QWORD[.] 
locals: v0|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v254|DWORD[.] * 8] state [bci:6] <|@ <|@
      nr   -1  <|@ instruction v255|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v256|DWORD = ADD (x: v252|DWORD, y: v255|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v254|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Object[0]{}] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.20639829530068676 condition: = trueDestination: B239 -> B240 falseDestination: B239 -> B243 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B243"
    from_bci -1
    to_bci -1
    predecessors "B239" 
    successors "B244" 
    xhandlers
    flags 
    probability 4605323348228405251
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v256|DWORD] destination: B243 -> B244 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B244"
    from_bci -1
    to_bci -1
    predecessors "B243" "B241" "B242" 
    successors "B245" "B259" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   -1  <|@ instruction [v257|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v258|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v259|DWORD = ADD (x: v258|DWORD, ~y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v259|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v260|DWORD = MOV [v254|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v261|DWORD = MOV [v253|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v262|DWORD = SUB (x: v257|DWORD, ~y: v260|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v262|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7759914359571053 condition: < trueDestination: B244 -> B245 falseDestination: B244 -> B259 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B245"
    from_bci -1
    to_bci -1
    predecessors "B244" 
    successors "B246" "B247" 
    xhandlers
    flags 
    probability 4605164729028914646
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v255|DWORD, y: v255|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B245 -> B246 falseDestination: B245 -> B247 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B247"
    from_bci -1
    to_bci -1
    predecessors "B245" 
    successors "B248" "B249" 
    xhandlers
    flags 
    probability 4605094833934078264
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v252|DWORD, y: v261|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B247 -> B248 falseDestination: B247 -> B249 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B249"
    from_bci -1
    to_bci -1
    predecessors "B247" 
    successors "B250" "B251" 
    xhandlers
    flags 
    probability 4605025637790190245
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v263|DWORD = SUB (x: v260|DWORD, ~y: v252|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v255|DWORD, y: v263|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B249 -> B250 falseDestination: B249 -> B251 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B251"
    from_bci -1
    to_bci -1
    predecessors "B249" 
    successors "B252" "B253" 
    xhandlers
    flags 
    probability 4604957133607741107
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v252|DWORD, y: v252|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B251 -> B252 falseDestination: B251 -> B253 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B253"
    from_bci -1
    to_bci -1
    predecessors "B251" 
    successors "B254" "B255" 
    xhandlers
    flags 
    probability 4604278942201494638
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v264|DWORD = MOV [v253|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v265|DWORD = MOV [v254|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v266|QWORD = MOVSXD v255|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v267|QWORD[.] = UNCOMPRESSPOINTER (input: v254|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@eef3a58 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v268|QWORD = MOV v252|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v265|DWORD, y: v264|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6 condition: = trueDestination: B253 -> B254 falseDestination: B253 -> B255 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B254"
    from_bci -1
    to_bci -1
    predecessors "B253" 
    successors "B258" 
    xhandlers
    flags 
    probability 4600996087105367786
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v269|QWORD[*] = MOVE v253|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v270|QWORD[*] = MOVE v267|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v269|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v270|QWORD[*] + v266|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v268|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: ObjectArraycopyKillAny(Word,Word,Word)void@0x106813120:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B254 -> B258 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B258"
    from_bci -1
    to_bci -1
    predecessors "B252" "B254" "B256" "B257" 
    successors 
    xhandlers
    flags 
    probability 4604957133607741107
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v280|DWORD = ADD (x: v252|DWORD, ~y: [v0|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v280|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v252|DWORD, y: v252|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v281|DWORD = SETCC condition: != <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v281|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" 
    xhandlers
    flags 
    probability 4600068113905108282
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B48" "B199" 
    xhandlers
    flags 
    probability 4598893030452983180
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/RandomAccessSubList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5054073948247549 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B199 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B198" 
    xhandlers
    flags 
    probability 4594445899282223279
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v70|DWORD[.] = MOV [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.addAll(ArrayList.java:581) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v71|DWORD = MOV [v70|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v71|DWORD, y: [v1|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B198 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4594445899282223279
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v72|DWORD, y: v72|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B49 -> B50 falseDestination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4594445899282223279
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOV [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v73|DWORD, y: v73|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B51 -> B52 falseDestination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B57" 
    xhandlers
    flags 
    probability 4594445899282223279
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v75|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v72|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4593918111383054494
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = SHL v72|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v77|DWORD = LEA [v76|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = AND v77|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v79|QWORD = MOVSXD v78|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v80|QWORD = ADD (x: v79|QWORD, y: v74|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v80|QWORD, y: v75|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B54 -> B55 falseDestination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B59" 
    xhandlers
    flags 
    probability 4593870610472129303
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v80|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v79|QWORD + v74|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v79|QWORD + v74|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v79|QWORD + v74|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v79|QWORD + v74|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v74|QWORD + 12], y: v72|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v74|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v74|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = MOVE v74|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v81|QWORD[.]] destination: B56 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4594445899282223279
    begin_IR
      LIR
      nr   -1  <|@ instruction [v83|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v84|QWORD = MOVSXD v72|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v85|QWORD = DEC v84|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v86|QWORD = LEA [v84|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v87|QWORD = LEA [v84|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v88|QWORD = LEA [v84|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v72|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B59 -> B60 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4589942299654852783
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v89|QWORD[.] = LEA [v83|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v88|QWORD, y: v88|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B66" 
    xhandlers
    flags 
    probability 4588077639523326214
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B62 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B62" "B65" 
    successors "B67" "B68" 
    xhandlers
    flags 
    probability 4589942299654852783
    begin_IR
      LIR
      nr   -1  <|@ instruction [v92|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v92|QWORD, y: v87|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B66 -> B67 falseDestination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    probability 4588077639523326214
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v371|V128_DWORD[....] = L oc: SIMD<null,null,null,null> <|@ <|@
      nr   -1  <|@ instruction J (address: [v89|QWORD[.] + v92|QWORD * 4], input: v371|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v93|QWORD = LEA [v92|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v93|QWORD] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    probability 4589942299654852783
    begin_IR
      LIR
      nr   -1  <|@ instruction [v94|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v94|QWORD, y: v86|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B69 -> B70 falseDestination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4588077639523326214
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v368|V64_DWORD[..] = L oc: SIMD<null,null> <|@ <|@
      nr   -1  <|@ instruction J (address: [v89|QWORD[.] + v94|QWORD * 4], input: v368|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = LEA [v94|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v95|QWORD] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    probability 4589942299654852783
    begin_IR
      LIR
      nr   -1  <|@ instruction [v96|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v96|QWORD, y: v85|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B72 -> B73 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" 
    xhandlers
    flags 
    probability 4588077639523326214
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v89|QWORD[.] + v96|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B74 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B60" "B74" "B73" 
    successors "B76" "B77" 
    xhandlers
    flags 
    probability 4594445899282223279
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v97|DWORD = DEC v72|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v98|DWORD = SHL v97|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v99|QWORD = MOVSXD v98|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v72|DWORD, y: v72|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B75 -> B76 falseDestination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B78" 
    xhandlers
    flags 
    probability 4589942299654852783
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v100|QWORD[.] = LEA [v83|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v101|QWORD[.] = ADD (x: v100|QWORD[.], y: v99|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v102|QWORD[*] = SHR v101|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v104|QWORD[.] = LEA [v83|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v103|QWORD[*] = SHR v104|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v105|QWORD[*] = SUB (x: v102|QWORD[*], ~y: v103|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v106|QWORD[*] = INC v105|QWORD[*] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v106|QWORD[*]] destination: B77 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B196"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B78" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4589942299654852783
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v201|QWORD[*] = DEC v107|QWORD[*] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v202|QWORD[*] = ADD (x: v103|QWORD[*], y: v3|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v203|QWORD[*] = ADD (x: v202|QWORD[*], y: v201|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v203|QWORD[*]], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v201|QWORD[*]] destination: B196 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" "B196" 
    successors "B79" "B196" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4594445899282223279
    begin_IR
      LIR
      nr   -1  <|@ instruction [v107|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v107|QWORD[*] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B78 -> B79 falseDestination: B78 -> B196 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B255"
    from_bci -1
    to_bci -1
    predecessors "B253" 
    successors "B256" "B257" 
    xhandlers
    flags 
    probability 4598554598042880498
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v271|QWORD = MOV [v265|DWORD * 8 + 232] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v272|DWORD = MOV [v271|QWORD + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v273|QWORD[*] = MOVE v253|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v274|QWORD[*] = MOVE v267|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v275|QWORD = MOVSXD v272|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v273|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v274|QWORD[*] + v266|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v268|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE v275|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE v271|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: ObjectCheckcast(Word,Word,Word,Word,Word)int@0x1068133a0:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v276|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v276|DWORD, y: v276|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B255 -> B256 falseDestination: B255 -> B257 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B256"
    from_bci -1
    to_bci -1
    predecessors "B255" 
    successors "B258" 
    xhandlers
    flags 
    probability 4598505768261630752
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B256 -> B258 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B259"
    from_bci -1
    to_bci -1
    predecessors "B244" 
    successors "B260" "B320" 
    xhandlers
    flags 
    probability 4597238779374946467
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v282|DWORD = SHR v260|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v283|DWORD = ADD (x: v282|DWORD, y: v260|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v284|DWORD = SUB (x: v283|DWORD, ~y: v257|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v284|DWORD, y: v284|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v285|DWORD = CMOVE (falseValue: v283|DWORD, ~trueValue: v257|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction v286|DWORD = LEA [v285|DWORD - 2147483639] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v286|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B259 -> B260 falseDestination: B259 -> B320 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B260"
    from_bci -1
    to_bci -1
    predecessors "B259" 
    successors "B261" "B262" 
    xhandlers
    flags 
    probability 4597238779374946467
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v285|DWORD, y: v285|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B260 -> B261 falseDestination: B260 -> B262 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B262"
    from_bci -1
    to_bci -1
    predecessors "B260" 
    successors "B263" "B264" 
    xhandlers
    flags 
    probability 4597238779374946467
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v287|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v288|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v289|DWORD = MOV [v254|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v290|DWORD = SHL v285|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v291|DWORD = LEA [v290|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v292|DWORD = AND v291|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v293|QWORD = MOVSXD v292|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v294|QWORD = ADD (x: v293|QWORD, y: v287|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v294|QWORD, y: v288|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B262 -> B263 falseDestination: B262 -> B264 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B264"
    from_bci -1
    to_bci -1
    predecessors "B262" 
    successors "B265" 
    xhandlers
    flags 
    probability 4597158071784102356
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v294|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v293|QWORD + v287|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v293|QWORD + v287|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v293|QWORD + v287|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v293|QWORD + v287|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v287|QWORD + 12], y: v285|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v287|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v287|QWORD + 8], y: v289|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v297|QWORD[.] = MOVE v287|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v297|QWORD[.]] destination: B264 -> B265 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B265"
    from_bci -1
    to_bci -1
    predecessors "B264" "B263" 
    successors "B266" "B267" 
    xhandlers
    flags 
    probability 4597238779374946466
    begin_IR
      LIR
      nr   -1  <|@ instruction [v298|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v285|DWORD, y: v260|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v299|DWORD = CMOVE (falseValue: v285|DWORD, ~trueValue: v260|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v300|QWORD = MOVSXD v299|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v300|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B265 -> B266 falseDestination: B265 -> B267 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B267"
    from_bci -1
    to_bci -1
    predecessors "B265" 
    successors "B268" "B269" 
    xhandlers
    flags 
    probability 4592735179747575970
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v301|QWORD[.] = LEA [v298|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v302|QWORD[*] = LEA [v254|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v303|QWORD = LEA [v300|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v303|QWORD, y: v303|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B267 -> B268 falseDestination: B267 -> B269 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B268"
    from_bci -1
    to_bci -1
    predecessors "B267" 
    successors "B272" 
    xhandlers
    flags 
    probability 4590717489976473210
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B268 -> B272 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B272"
    from_bci -1
    to_bci -1
    predecessors "B268" "B271" 
    successors "B273" "B274" 
    xhandlers
    flags 
    probability 4592735179747575970
    begin_IR
      LIR
      nr   -1  <|@ instruction [v307|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v308|QWORD = LEA [v300|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v307|QWORD, y: v308|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B272 -> B273 falseDestination: B272 -> B274 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B274"
    from_bci -1
    to_bci -1
    predecessors "B272" 
    successors "B275" 
    xhandlers
    flags 
    probability 4590717489976473210
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v309|V128_DWORD[....] = H [v302|QWORD[*] + v307|QWORD * 4] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v301|QWORD[.] + v307|QWORD * 4], input: v309|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v310|QWORD = LEA [v307|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v310|QWORD] destination: B274 -> B275 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B275"
    from_bci -1
    to_bci -1
    predecessors "B274" "B273" 
    successors "B276" "B277" 
    xhandlers
    flags 
    probability 4592735179747575970
    begin_IR
      LIR
      nr   -1  <|@ instruction [v311|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v312|QWORD = LEA [v300|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v311|QWORD, y: v312|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B275 -> B276 falseDestination: B275 -> B277 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B277"
    from_bci -1
    to_bci -1
    predecessors "B275" 
    successors "B278" 
    xhandlers
    flags 
    probability 4590717489976473210
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v313|V64_DWORD[..] = H [v302|QWORD[*] + v311|QWORD * 4] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v301|QWORD[.] + v311|QWORD * 4], input: v313|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v314|QWORD = LEA [v311|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v314|QWORD] destination: B277 -> B278 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B278"
    from_bci -1
    to_bci -1
    predecessors "B277" "B276" 
    successors "B279" "B280" 
    xhandlers
    flags 
    probability 4592735179747575970
    begin_IR
      LIR
      nr   -1  <|@ instruction [v315|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v316|QWORD = DEC v300|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v315|QWORD, y: v316|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B278 -> B279 falseDestination: B278 -> B280 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B280"
    from_bci -1
    to_bci -1
    predecessors "B278" 
    successors "B281" 
    xhandlers
    flags 
    probability 4590717489976473210
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v317|DWORD[.] = MOV [v302|QWORD[*] + v315|QWORD * 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v301|QWORD[.] + v315|QWORD * 4], y: v317|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B280 -> B281 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B281"
    from_bci -1
    to_bci -1
    predecessors "B266" "B280" "B279" 
    successors "B282" "B297" 
    xhandlers
    flags 
    probability 4597238779374946466
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v318|QWORD = MOVSXD v285|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v318|QWORD, y: v300|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B281 -> B282 falseDestination: B281 -> B297 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B297"
    from_bci -1
    to_bci -1
    predecessors "B281" 
    successors "B298" 
    xhandlers
    flags 
    probability 4592735179747575970
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B297 -> B298 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B298"
    from_bci -1
    to_bci -1
    predecessors "B297" "B295" "B294" 
    successors "B299" "B300" 
    xhandlers
    flags 
    probability 4597238779374946466
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v285|DWORD, y: v285|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B298 -> B299 falseDestination: B298 -> B300 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B300"
    from_bci -1
    to_bci -1
    predecessors "B298" 
    successors "B301" 
    xhandlers
    flags 
    probability 4592735179747575970
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v332|DWORD = DEC v285|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v333|DWORD = SHL v332|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v334|QWORD = MOVSXD v333|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v335|QWORD[.] = LEA [v298|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v336|QWORD[.] = ADD (x: v335|QWORD[.], y: v334|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v337|QWORD[*] = SHR v336|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v339|QWORD[.] = LEA [v298|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v338|QWORD[*] = SHR v339|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v340|QWORD[*] = SUB (x: v337|QWORD[*], ~y: v338|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v341|QWORD[*] = INC v340|QWORD[*] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v341|QWORD[*]] destination: B300 -> B301 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B318"
    from_bci -1
    to_bci -1
    predecessors "B301" 
    successors "B301" 
    xhandlers
    flags "lle" 
    loop_index 16
    loop_depth 1
    probability 4592735179747575970
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v363|QWORD[*] = DEC v342|QWORD[*] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v364|QWORD[*] = ADD (x: v338|QWORD[*], y: v3|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v365|QWORD[*] = ADD (x: v364|QWORD[*], y: v363|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v365|QWORD[*]], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v363|QWORD[*]] destination: B318 -> B301 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B301"
    from_bci -1
    to_bci -1
    predecessors "B300" "B318" 
    successors "B302" "B318" 
    xhandlers
    flags "llh" 
    loop_index 16
    loop_depth 1
    probability 4597238779374946466
    begin_IR
      LIR
      nr   -1  <|@ instruction [v342|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v342|QWORD[*] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B301 -> B302 falseDestination: B301 -> B318 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B240"
    from_bci -1
    to_bci -1
    predecessors "B239" 
    successors "B241" "B242" 
    xhandlers
    flags 
    probability 4596604302576984052
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v256|DWORD y: 11 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7356387781002678 condition: < trueDestination: B240 -> B241 falseDestination: B240 -> B242 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B241"
    from_bci -1
    to_bci -1
    predecessors "B240" 
    successors "B244" 
    xhandlers
    flags 
    probability 4594638437905347158
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[10|0xa]] destination: B241 -> B244 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B199"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B200" "B238" 
    xhandlers
    flags 
    probability 4594332962369002089
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Collections$CopiesList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9487693188322834 condition: = trueDestination: B199 -> B200 falseDestination: B199 -> B238 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B200"
    from_bci -1
    to_bci -1
    predecessors "B199" 
    successors "B201" "B202" 
    xhandlers
    flags 
    probability 4594068358868130440
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v204|DWORD = MOV [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v205|QWORD = MOVSXD v204|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v206|QWORD = DEC v205|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v204|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B200 -> B201 falseDestination: B200 -> B202 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B202"
    from_bci -1
    to_bci -1
    predecessors "B200" 
    successors "B203" "B236" 
    xhandlers
    flags 
    probability 4589564759240759944
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v205|QWORD, y: v206|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B202 -> B203 falseDestination: B202 -> B236 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B203"
    from_bci -1
    to_bci -1
    predecessors "B202" 
    successors "B204" 
    xhandlers
    flags 
    probability 4589564759240759944
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B203 -> B204 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B204"
    from_bci -1
    to_bci -1
    predecessors "B201" "B203" 
    successors "B205" "B206" 
    xhandlers
    flags 
    probability 4594068358868130440
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v207|DWORD[.] = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.addAll(ArrayList.java:581) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v207|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v204|DWORD, y: v204|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B204 -> B205 falseDestination: B204 -> B206 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B206"
    from_bci -1
    to_bci -1
    predecessors "B204" 
    successors "B207" "B210" 
    xhandlers
    flags 
    probability 4594068358868130440
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v208|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v209|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v204|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B206 -> B207 falseDestination: B206 -> B210 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B207"
    from_bci -1
    to_bci -1
    predecessors "B206" 
    successors "B208" "B209" 
    xhandlers
    flags 
    probability 4593485030102835957
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v210|DWORD = SHL v204|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v211|DWORD = LEA [v210|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v212|DWORD = AND v211|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v213|QWORD = MOVSXD v212|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v214|QWORD = ADD (x: v213|QWORD, y: v208|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v214|QWORD, y: v209|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B207 -> B208 falseDestination: B207 -> B209 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B209"
    from_bci -1
    to_bci -1
    predecessors "B207" 
    successors "B212" 
    xhandlers
    flags 
    probability 4593396824008439247
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v214|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v213|QWORD + v208|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v213|QWORD + v208|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v213|QWORD + v208|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v213|QWORD + v208|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v208|QWORD + 12], y: v204|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v208|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v208|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v215|QWORD[.] = MOVE v208|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v215|QWORD[.]] destination: B209 -> B212 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B212"
    from_bci -1
    to_bci -1
    predecessors "B209" "B211" 
    successors "B213" "B214" 
    xhandlers
    flags 
    probability 4594068358868130440
    begin_IR
      LIR
      nr   -1  <|@ instruction [v217|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v204|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B212 -> B213 falseDestination: B212 -> B214 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B214"
    from_bci -1
    to_bci -1
    predecessors "B212" 
    successors "B215" "B216" 
    xhandlers
    flags 
    probability 4589564759240759944
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v218|QWORD[.] = LEA [v217|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v220|V128_DWORD[.   ] = H v207|DWORD[.] <|@ <|@
      nr   -1  <|@ instruction v219|V256_DWORD[........] = VPBROADCASTD v220|V128_DWORD[.   ] nZ: YMM <|@ <|@
      nr   -1  <|@ instruction v221|QWORD = LEA [v205|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v221|QWORD, y: v221|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B214 -> B215 falseDestination: B214 -> B216 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B215"
    from_bci -1
    to_bci -1
    predecessors "B214" 
    successors "B219" 
    xhandlers
    flags 
    probability 4587511328902186956
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B215 -> B219 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B219"
    from_bci -1
    to_bci -1
    predecessors "B215" "B218" 
    successors "B220" "B221" 
    xhandlers
    flags 
    probability 4589564759240759944
    begin_IR
      LIR
      nr   -1  <|@ instruction [v224|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v225|QWORD = LEA [v205|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v224|QWORD, y: v225|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B219 -> B220 falseDestination: B219 -> B221 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B221"
    from_bci -1
    to_bci -1
    predecessors "B219" 
    successors "B222" 
    xhandlers
    flags 
    probability 4587511328902186956
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v226|V128_DWORD[....] = VMOVE v219|V256_DWORD[........] <|@ <|@
      nr   -1  <|@ instruction J (address: [v218|QWORD[.] + v224|QWORD * 4], input: v226|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v227|QWORD = LEA [v224|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v227|QWORD] destination: B221 -> B222 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B222"
    from_bci -1
    to_bci -1
    predecessors "B221" "B220" 
    successors "B223" "B224" 
    xhandlers
    flags 
    probability 4589564759240759944
    begin_IR
      LIR
      nr   -1  <|@ instruction [v228|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v229|QWORD = LEA [v205|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v228|QWORD, y: v229|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B222 -> B223 falseDestination: B222 -> B224 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B224"
    from_bci -1
    to_bci -1
    predecessors "B222" 
    successors "B225" 
    xhandlers
    flags 
    probability 4587511328902186956
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v230|V64_DWORD[..] = VMOVE v219|V256_DWORD[........] <|@ <|@
      nr   -1  <|@ instruction J (address: [v218|QWORD[.] + v228|QWORD * 4], input: v230|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v231|QWORD = LEA [v228|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v231|QWORD] destination: B224 -> B225 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B225"
    from_bci -1
    to_bci -1
    predecessors "B224" "B223" 
    successors "B226" "B227" 
    xhandlers
    flags 
    probability 4589564759240759944
    begin_IR
      LIR
      nr   -1  <|@ instruction [v232|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v232|QWORD, y: v206|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B225 -> B226 falseDestination: B225 -> B227 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B227"
    from_bci -1
    to_bci -1
    predecessors "B225" 
    successors "B228" 
    xhandlers
    flags 
    probability 4587511328902186956
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v218|QWORD[.] + v232|QWORD * 4], y: v207|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B227 -> B228 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B228"
    from_bci -1
    to_bci -1
    predecessors "B213" "B227" "B226" 
    successors "B229" "B230" 
    xhandlers
    flags 
    probability 4594068358868130440
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v204|DWORD, y: v204|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B228 -> B229 falseDestination: B228 -> B230 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B230"
    from_bci -1
    to_bci -1
    predecessors "B228" 
    successors "B231" 
    xhandlers
    flags 
    probability 4589564759240759944
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v233|DWORD = DEC v204|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v234|DWORD = SHL v233|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v235|QWORD = MOVSXD v234|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v236|QWORD[.] = LEA [v217|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v237|QWORD[.] = ADD (x: v236|QWORD[.], y: v235|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v238|QWORD[*] = SHR v237|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v240|QWORD[.] = LEA [v217|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v239|QWORD[*] = SHR v240|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v241|QWORD[*] = SUB (x: v238|QWORD[*], ~y: v239|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v242|QWORD[*] = INC v241|QWORD[*] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v242|QWORD[*]] destination: B230 -> B231 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B234"
    from_bci -1
    to_bci -1
    predecessors "B231" 
    successors "B231" 
    xhandlers
    flags "lle" 
    loop_index 13
    loop_depth 1
    probability 4589564759240759944
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v244|QWORD[*] = DEC v243|QWORD[*] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v245|QWORD[*] = ADD (x: v239|QWORD[*], y: v3|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v246|QWORD[*] = ADD (x: v245|QWORD[*], y: v244|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v246|QWORD[*]], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v244|QWORD[*]] destination: B234 -> B231 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B231"
    from_bci -1
    to_bci -1
    predecessors "B230" "B234" 
    successors "B232" "B234" 
    xhandlers
    flags "llh" 
    loop_index 13
    loop_depth 1
    probability 4594068358868130440
    begin_IR
      LIR
      nr   -1  <|@ instruction [v243|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v243|QWORD[*] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B231 -> B232 falseDestination: B231 -> B234 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B302"
    from_bci -1
    to_bci -1
    predecessors "B301" 
    successors "B303" 
    xhandlers
    flags 
    probability 4592735179747575970
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B302 -> B303 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B303"
    from_bci -1
    to_bci -1
    predecessors "B299" "B302" 
    successors "B304" "B305" 
    xhandlers
    flags 
    probability 4597238779374946466
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v343|DWORD[.] = COMPRESSPOINTER (input: v298|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@eef3a58 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v343|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v344|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v344|QWORD[*] + v3|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction TEST (x: v255|DWORD, y: v255|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B303 -> B304 falseDestination: B303 -> B305 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B305"
    from_bci -1
    to_bci -1
    predecessors "B303" 
    successors "B306" "B307" 
    xhandlers
    flags 
    probability 4597158071784102356
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v252|DWORD, y: v261|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B305 -> B306 falseDestination: B305 -> B307 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B307"
    from_bci -1
    to_bci -1
    predecessors "B305" 
    successors "B308" "B310" 
    xhandlers
    flags 
    probability 4597078171269166687
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v345|DWORD = SUB (x: v285|DWORD, ~y: v252|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v255|DWORD, y: v345|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B307 -> B308 falseDestination: B307 -> B310 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B310"
    from_bci -1
    to_bci -1
    predecessors "B307" 
    successors "B311" "B312" 
    xhandlers
    flags 
    probability 4596999069759380374
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v252|DWORD, y: v252|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B310 -> B311 falseDestination: B310 -> B312 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B312"
    from_bci -1
    to_bci -1
    predecessors "B310" 
    successors "B313" "B314" 
    xhandlers
    flags 
    probability 4596215964812495879
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v346|DWORD = MOV [v253|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v347|DWORD = MOV [v298|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v348|QWORD = MOVSXD v255|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v349|QWORD = MOV v252|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v347|DWORD, y: v346|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6 condition: = trueDestination: B312 -> B313 falseDestination: B312 -> B314 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B313"
    from_bci -1
    to_bci -1
    predecessors "B312" 
    successors "B317" 
    xhandlers
    flags 
    probability 4593121954089517474
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v350|QWORD[*] = MOVE v253|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v351|QWORD[*] = MOVE v298|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v350|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v351|QWORD[*] + v348|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v349|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: ObjectArraycopyKillAny(Word,Word,Word)void@0x106813120:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B313 -> B317 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B317"
    from_bci -1
    to_bci -1
    predecessors "B311" "B313" "B315" "B316" 
    successors 
    xhandlers
    flags 
    probability 4596999069759380374
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v361|DWORD = ADD (x: v252|DWORD, ~y: [v0|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v361|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v252|DWORD, y: v252|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v362|DWORD = SETCC condition: != <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v362|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B266"
    from_bci -1
    to_bci -1
    predecessors "B265" 
    successors "B281" 
    xhandlers
    flags 
    probability 4592735179747575970
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B266 -> B281 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B282"
    from_bci -1
    to_bci -1
    predecessors "B281" 
    successors "B283" "B284" 
    xhandlers
    flags 
    probability 4592735179747575970
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v319|QWORD[.] = LEA [v298|QWORD[.] + v300|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v320|QWORD = SUB (x: v318|QWORD, ~y: v300|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v321|QWORD = LEA [v320|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v321|QWORD, y: v321|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B282 -> B283 falseDestination: B282 -> B284 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B283"
    from_bci -1
    to_bci -1
    predecessors "B282" 
    successors "B287" 
    xhandlers
    flags 
    probability 4590717489976473210
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B283 -> B287 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B287"
    from_bci -1
    to_bci -1
    predecessors "B283" "B286" 
    successors "B288" "B289" 
    xhandlers
    flags 
    probability 4592735179747575970
    begin_IR
      LIR
      nr   -1  <|@ instruction [v324|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v325|QWORD = LEA [v320|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v324|QWORD, y: v325|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B287 -> B288 falseDestination: B287 -> B289 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B289"
    from_bci -1
    to_bci -1
    predecessors "B287" 
    successors "B290" 
    xhandlers
    flags 
    probability 4590717489976473210
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v370|V128_DWORD[....] = L oc: SIMD<null,null,null,null> <|@ <|@
      nr   -1  <|@ instruction J (address: [v319|QWORD[.] + v324|QWORD * 4], input: v370|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v326|QWORD = LEA [v324|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v326|QWORD] destination: B289 -> B290 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B290"
    from_bci -1
    to_bci -1
    predecessors "B289" "B288" 
    successors "B291" "B292" 
    xhandlers
    flags 
    probability 4592735179747575970
    begin_IR
      LIR
      nr   -1  <|@ instruction [v327|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v328|QWORD = LEA [v320|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v327|QWORD, y: v328|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B290 -> B291 falseDestination: B290 -> B292 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B292"
    from_bci -1
    to_bci -1
    predecessors "B290" 
    successors "B293" 
    xhandlers
    flags 
    probability 4590717489976473210
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v367|V64_DWORD[..] = L oc: SIMD<null,null> <|@ <|@
      nr   -1  <|@ instruction J (address: [v319|QWORD[.] + v327|QWORD * 4], input: v367|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v329|QWORD = LEA [v327|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v329|QWORD] destination: B292 -> B293 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B293"
    from_bci -1
    to_bci -1
    predecessors "B292" "B291" 
    successors "B294" "B295" 
    xhandlers
    flags 
    probability 4592735179747575970
    begin_IR
      LIR
      nr   -1  <|@ instruction [v330|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v331|QWORD = DEC v320|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v330|QWORD, y: v331|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B293 -> B294 falseDestination: B293 -> B295 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B295"
    from_bci -1
    to_bci -1
    predecessors "B293" 
    successors "B298" 
    xhandlers
    flags 
    probability 4590717489976473210
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v319|QWORD[.] + v330|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B295 -> B298 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B299"
    from_bci -1
    to_bci -1
    predecessors "B298" 
    successors "B303" 
    xhandlers
    flags 
    probability 4592735179747575970
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B299 -> B303 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4591060914650367290
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v34|QWORD] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4591060914650367290
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v30|QWORD] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4591060914650367290
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v50|QWORD] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4591060914650367290
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v47|QWORD] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4591060914650367290
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v375|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4598468990408307692
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v46|QWORD] destination: B37 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B37" 
    successors "B27" "B37" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4600068113905108282
    begin_IR
      LIR
      nr   -1  <|@ instruction [v45|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v42|QWORD[.] + v45|QWORD * 4], input: v375|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = LEA [v45|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v46|QWORD, y: v44|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4591060914650367290
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    probability 4591060914650367290
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v46|QWORD] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B39" 
    xhandlers
    flags 
    probability 4591060914650367290
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B35 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4591060914650367290
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4598468990408307692
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v29|QWORD] destination: B46 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B46" 
    successors "B12" "B46" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4600068113905108282
    begin_IR
      LIR
      nr   -1  <|@ instruction [v27|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v28|V256_DWORD[........] = H [v26|QWORD[*] + v27|QWORD * 4] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v25|QWORD[.] + v27|QWORD * 4], input: v28|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = LEA [v27|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v29|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B11 -> B12 falseDestination: B11 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4591060914650367290
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v29|QWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B314"
    from_bci -1
    to_bci -1
    predecessors "B312" 
    successors "B315" "B316" 
    xhandlers
    flags 
    probability 4590302776280733292
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v352|QWORD = MOV [v347|DWORD * 8 + 232] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v353|DWORD = MOV [v352|QWORD + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v354|QWORD[*] = MOVE v253|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v355|QWORD[*] = MOVE v298|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v356|QWORD = MOVSXD v353|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v354|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v355|QWORD[*] + v348|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v349|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE v356|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE v352|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: ObjectCheckcast(Word,Word,Word,Word,Word)int@0x1068133a0:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v357|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v357|DWORD, y: v357|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B314 -> B315 falseDestination: B314 -> B316 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B315"
    from_bci -1
    to_bci -1
    predecessors "B314" 
    successors "B317" 
    xhandlers
    flags 
    probability 4590246392724557608
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B315 -> B317 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B252"
    from_bci -1
    to_bci -1
    predecessors "B251" 
    successors "B258" 
    xhandlers
    flags 
    probability 4590089951913136680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B252 -> B258 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B80" 
    xhandlers
    flags 
    probability 4589942299654852783
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B76 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B76" "B79" 
    successors "B81" "B195" 
    xhandlers
    flags 
    probability 4594445899282223279
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v108|DWORD = MOV [v70|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v109|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<AbstractList.listIterator(int)>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v109|QWORD, y: [v108|DWORD * 8 + 696]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B195 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B82" "B85" 
    xhandlers
    flags 
    probability 4594445899282223279
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v108|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5468793050355748 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B83" "B84" 
    xhandlers
    flags 
    probability 4590437146253237157
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v110|DWORD[.] = MOV [v70|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.addAll(ArrayList.java:581) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction CMP (x: v73|DWORD, y: [v110|DWORD[.] * 8 + 12]) size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B82 -> B83 falseDestination: B82 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B93" 
    xhandlers
    flags 
    probability 4590437146253237157
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B84 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" "B84" "B87" 
    successors "B94" "B135" 
    xhandlers
    flags 
    probability 4594445899282223279
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v111|QWORD = MOVSXD v73|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v108|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9304948647614187 condition: = trueDestination: B93 -> B94 falseDestination: B93 -> B135 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B95" "B96" 
    xhandlers
    flags 
    probability 4594079059589133148
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v114|DWORD[.] = MOV [v70|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v114|DWORD[.], y: v114|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B94 -> B95 falseDestination: B94 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" "B98" 
    xhandlers
    flags 
    probability 4594079059589133148
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v72|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B96 -> B97 falseDestination: B96 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B99" "B134" 
    xhandlers
    flags 
    probability 4589575459961762652
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v115|DWORD = MOV [v114|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v116|QWORD = ADD (x: v111|QWORD, y: v85|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v117|QWORD = MOV v115|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v117|QWORD, y: v116|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B98 -> B99 falseDestination: B98 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B100" "B133" 
    xhandlers
    flags 
    probability 4589575459961762652
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v115|DWORD, y: v73|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B99 -> B100 falseDestination: B99 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B101" 
    xhandlers
    flags 
    probability 4589575459961762652
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B100 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B97" "B100" 
    successors "B102" "B103" 
    xhandlers
    flags 
    probability 4594079059589133148
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v72|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B101 -> B102 falseDestination: B101 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" "B132" 
    xhandlers
    flags 
    probability 4589575459961762652
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v84|QWORD, y: v85|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B103 -> B104 falseDestination: B103 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B105" 
    xhandlers
    flags 
    probability 4589575459961762652
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B104 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B102" "B104" 
    successors "B106" "B107" 
    xhandlers
    flags 
    probability 4594079059589133148
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v72|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B105 -> B106 falseDestination: B105 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" "B109" 
    xhandlers
    flags 
    probability 4589575459961762652
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v118|QWORD[.] = LEA [v83|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v119|QWORD[.] = UNCOMPRESSPOINTER (input: v114|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@eef3a58 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v120|QWORD[.] = LEA [v119|QWORD[.] + v111|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v88|QWORD, y: v88|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B107 -> B108 falseDestination: B107 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B112" 
    xhandlers
    flags 
    probability 4587527379983691018
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B108 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B108" "B111" 
    successors "B113" "B114" 
    xhandlers
    flags 
    probability 4589575459961762652
    begin_IR
      LIR
      nr   -1  <|@ instruction [v124|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v124|QWORD, y: v87|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B112 -> B113 falseDestination: B112 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B115" 
    xhandlers
    flags 
    probability 4587527379983691018
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v125|V128_DWORD[....] = H [v120|QWORD[.] + v124|QWORD * 4] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v118|QWORD[.] + v124|QWORD * 4], input: v125|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v126|QWORD = LEA [v124|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v126|QWORD] destination: B114 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" "B113" 
    successors "B116" "B117" 
    xhandlers
    flags 
    probability 4589575459961762652
    begin_IR
      LIR
      nr   -1  <|@ instruction [v127|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v127|QWORD, y: v86|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B115 -> B116 falseDestination: B115 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    probability 4587527379983691018
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v128|V64_DWORD[..] = H [v120|QWORD[.] + v127|QWORD * 4] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v118|QWORD[.] + v127|QWORD * 4], input: v128|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v129|QWORD = LEA [v127|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v129|QWORD] destination: B117 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B117" "B116" 
    successors "B119" "B120" 
    xhandlers
    flags 
    probability 4589575459961762652
    begin_IR
      LIR
      nr   -1  <|@ instruction [v130|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v130|QWORD, y: v85|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B118 -> B119 falseDestination: B118 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B121" 
    xhandlers
    flags 
    probability 4587527379983691018
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v131|DWORD[.] = MOV [v120|QWORD[.] + v130|QWORD * 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v118|QWORD[.] + v130|QWORD * 4], y: v131|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B120 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B106" "B120" "B119" 
    successors "B122" "B123" 
    xhandlers
    flags 
    probability 4594079059589133148
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v72|DWORD, y: v72|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B121 -> B122 falseDestination: B121 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B121" 
    successors "B124" 
    xhandlers
    flags 
    probability 4589575459961762652
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v132|QWORD[.] = LEA [v83|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v133|QWORD[.] = ADD (x: v132|QWORD[.], y: v99|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v134|QWORD[*] = SHR v133|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v136|QWORD[.] = LEA [v83|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[*] = SHR v136|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v137|QWORD[*] = SUB (x: v134|QWORD[*], ~y: v135|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v138|QWORD[*] = INC v137|QWORD[*] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v138|QWORD[*]] destination: B123 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors "B124" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 1
    probability 4589575459961762652
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v145|QWORD[*] = DEC v139|QWORD[*] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v146|QWORD[*] = ADD (x: v135|QWORD[*], y: v3|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v147|QWORD[*] = ADD (x: v146|QWORD[*], y: v145|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v147|QWORD[*]], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v145|QWORD[*]] destination: B130 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B123" "B130" 
    successors "B125" "B130" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 1
    probability 4594079059589133148
    begin_IR
      LIR
      nr   -1  <|@ instruction [v139|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v139|QWORD[*] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B124 -> B125 falseDestination: B124 -> B130 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B80" 
    xhandlers
    flags 
    probability 4589942299654852783
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B79 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B75" 
    xhandlers
    flags 
    probability 4589942299654852783
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B60 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B105" 
    xhandlers
    flags 
    probability 4589575459961762652
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B102 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" 
    successors "B126" 
    xhandlers
    flags 
    probability 4589575459961762652
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B122 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B122" "B125" 
    successors "B127" 
    xhandlers
    flags 
    probability 4594079059589133148
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0], v73|DWORD, int[-1|0xffffffffffffffff]] destination: B126 -> B127 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B127" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 1
    probability 4602566600183724730
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v143|DWORD = INC v141|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v144|DWORD = INC v140|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v144|DWORD, v143|DWORD, v141|DWORD] destination: B128 -> B127 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B126" "B128" 
    successors "B128" "B129" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 1
    probability 4603850469502835252
    begin_IR
      LIR
      nr   -1  <|@ instruction [v140|DWORD, v141|DWORD, v142|DWORD] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v72|DWORD, y: v140|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7836641850436589 condition: > trueDestination: B127 -> B128 falseDestination: B127 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B190" 
    xhandlers
    flags 
    probability 4594079059589133149
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v141|DWORD, v142|DWORD] destination: B129 -> B190 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B190"
    from_bci -1
    to_bci -1
    predecessors "B129" "B171" "B189" 
    successors "B191" "B192" 
    xhandlers
    flags 
    probability 4594445899282223281
    begin_IR
      LIR
      nr   -1  <|@ instruction [v196|DWORD, v197|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v198|DWORD = MOV [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v199|DWORD = SUB (x: v196|DWORD, ~y: v198|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v199|DWORD, y: [v1|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B190 -> B191 falseDestination: B190 -> B192 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B192"
    from_bci -1
    to_bci -1
    predecessors "B190" 
    successors "B239" 
    xhandlers
    flags 
    probability 4594445899282223281
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v72|DWORD, v83|QWORD[.]] destination: B192 -> B239 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B121" 
    xhandlers
    flags 
    probability 4589575459961762652
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B106 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B101" 
    xhandlers
    flags 
    probability 4589575459961762652
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B97 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors "B126" 
    xhandlers
    flags 
    probability 4589575459961762652
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B125 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B232"
    from_bci -1
    to_bci -1
    predecessors "B231" 
    successors "B233" 
    xhandlers
    flags 
    probability 4589564759240759944
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B232 -> B233 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B233"
    from_bci -1
    to_bci -1
    predecessors "B229" "B232" 
    successors "B239" 
    xhandlers
    flags 
    probability 4594068358868130440
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v204|DWORD, v217|QWORD[.]] destination: B233 -> B239 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B229"
    from_bci -1
    to_bci -1
    predecessors "B228" 
    successors "B233" 
    xhandlers
    flags 
    probability 4589564759240759944
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B229 -> B233 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B201"
    from_bci -1
    to_bci -1
    predecessors "B200" 
    successors "B204" 
    xhandlers
    flags 
    probability 4589564759240759944
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B201 -> B204 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B213"
    from_bci -1
    to_bci -1
    predecessors "B212" 
    successors "B228" 
    xhandlers
    flags 
    probability 4589564759240759944
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B213 -> B228 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B86" "B89" 
    xhandlers
    flags 
    probability 4589447453056468409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v108|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Collections$EmptyList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5024679876958296 condition: = trueDestination: B85 -> B86 falseDestination: B85 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B87" "B88" 
    xhandlers
    flags 
    probability 4584967462359288767
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v73|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B86 -> B87 falseDestination: B86 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B93" 
    xhandlers
    flags 
    probability 4584967462359288767
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B87 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B242"
    from_bci -1
    to_bci -1
    predecessors "B240" 
    successors "B244" 
    xhandlers
    flags 
    probability 4588024279722342007
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v256|DWORD] destination: B242 -> B244 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B90" "B194" 
    xhandlers
    flags 
    probability 4584920244498907059
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v108|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B89 -> B90 falseDestination: B89 -> B194 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B91" "B92" 
    xhandlers
    flags 
    probability 4584920244498907059
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v73|DWORD, y: [v70|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B90 -> B91 falseDestination: B90 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B93" 
    xhandlers
    flags 
    probability 4584920244498907059
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B92 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B288"
    from_bci -1
    to_bci -1
    predecessors "B287" 
    successors "B290" 
    xhandlers
    flags 
    probability 4583727980492834978
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v324|QWORD] destination: B288 -> B290 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B291"
    from_bci -1
    to_bci -1
    predecessors "B290" 
    successors "B293" 
    xhandlers
    flags 
    probability 4583727980492834978
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v327|QWORD] destination: B291 -> B293 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B294"
    from_bci -1
    to_bci -1
    predecessors "B293" 
    successors "B298" 
    xhandlers
    flags 
    probability 4583727980492834978
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B294 -> B298 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B284"
    from_bci -1
    to_bci -1
    predecessors "B282" 
    successors "B285" 
    xhandlers
    flags 
    probability 4583727980492834978
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v373|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B284 -> B285 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B296"
    from_bci -1
    to_bci -1
    predecessors "B285" 
    successors "B285" 
    xhandlers
    flags "lle" 
    loop_index 15
    loop_depth 1
    probability 4590717489976473210
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v323|QWORD] destination: B296 -> B285 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B285"
    from_bci -1
    to_bci -1
    predecessors "B284" "B296" 
    successors "B286" "B296" 
    xhandlers
    flags "llh" 
    loop_index 15
    loop_depth 1
    probability 4592735179747575970
    begin_IR
      LIR
      nr   -1  <|@ instruction [v322|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v319|QWORD[.] + v322|QWORD * 4], input: v373|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v323|QWORD = LEA [v322|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v323|QWORD, y: v321|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B285 -> B286 falseDestination: B285 -> B296 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B276"
    from_bci -1
    to_bci -1
    predecessors "B275" 
    successors "B278" 
    xhandlers
    flags 
    probability 4583727980492834978
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v311|QWORD] destination: B276 -> B278 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B286"
    from_bci -1
    to_bci -1
    predecessors "B285" 
    successors "B287" 
    xhandlers
    flags 
    probability 4583727980492834978
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v323|QWORD] destination: B286 -> B287 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B279"
    from_bci -1
    to_bci -1
    predecessors "B278" 
    successors "B281" 
    xhandlers
    flags 
    probability 4583727980492834978
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B279 -> B281 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B273"
    from_bci -1
    to_bci -1
    predecessors "B272" 
    successors "B275" 
    xhandlers
    flags 
    probability 4583727980492834978
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v307|QWORD] destination: B273 -> B275 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B269"
    from_bci -1
    to_bci -1
    predecessors "B267" 
    successors "B270" 
    xhandlers
    flags 
    probability 4583727980492834978
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B269 -> B270 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B319"
    from_bci -1
    to_bci -1
    predecessors "B270" 
    successors "B270" 
    xhandlers
    flags "lle" 
    loop_index 14
    loop_depth 1
    probability 4590717489976473210
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v306|QWORD] destination: B319 -> B270 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B270"
    from_bci -1
    to_bci -1
    predecessors "B269" "B319" 
    successors "B271" "B319" 
    xhandlers
    flags "llh" 
    loop_index 14
    loop_depth 1
    probability 4592735179747575970
    begin_IR
      LIR
      nr   -1  <|@ instruction [v304|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v305|V256_DWORD[........] = H [v302|QWORD[*] + v304|QWORD * 4] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v301|QWORD[.] + v304|QWORD * 4], input: v305|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v306|QWORD = LEA [v304|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v306|QWORD, y: v303|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B270 -> B271 falseDestination: B270 -> B319 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B271"
    from_bci -1
    to_bci -1
    predecessors "B270" 
    successors "B272" 
    xhandlers
    flags 
    probability 4583727980492834978
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v306|QWORD] destination: B271 -> B272 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B311"
    from_bci -1
    to_bci -1
    predecessors "B310" 
    successors "B317" 
    xhandlers
    flags 
    probability 4581922060983499895
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B311 -> B317 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" 
    xhandlers
    flags 
    probability 4580935100400111791
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v374|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B197"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B64" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4588077639523326214
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v91|QWORD] destination: B197 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" "B197" 
    successors "B65" "B197" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4589942299654852783
    begin_IR
      LIR
      nr   -1  <|@ instruction [v90|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v89|QWORD[.] + v90|QWORD * 4], input: v374|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v91|QWORD = LEA [v90|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v91|QWORD, y: v88|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B64 -> B65 falseDestination: B64 -> B197 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4580935100400111791
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v94|QWORD] destination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    probability 4580935100400111791
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v92|QWORD] destination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B66" 
    xhandlers
    flags 
    probability 4580935100400111791
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v91|QWORD] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" 
    xhandlers
    flags 
    probability 4580935100400111791
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B73 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B115" 
    xhandlers
    flags 
    probability 4580568260707021660
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v124|QWORD] destination: B113 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B110" 
    xhandlers
    flags 
    probability 4580568260707021660
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B109 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B110" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4587527379983691018
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v123|QWORD] destination: B131 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" "B131" 
    successors "B111" "B131" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4589575459961762652
    begin_IR
      LIR
      nr   -1  <|@ instruction [v121|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v122|V256_DWORD[........] = H [v120|QWORD[.] + v121|QWORD * 4] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v118|QWORD[.] + v121|QWORD * 4], input: v122|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v123|QWORD = LEA [v121|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v123|QWORD, y: v88|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B110 -> B111 falseDestination: B110 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    probability 4580568260707021660
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v127|QWORD] destination: B116 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B121" 
    xhandlers
    flags 
    probability 4580568260707021660
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B119 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B112" 
    xhandlers
    flags 
    probability 4580568260707021660
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v123|QWORD] destination: B111 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B226"
    from_bci -1
    to_bci -1
    predecessors "B225" 
    successors "B228" 
    xhandlers
    flags 
    probability 4580557559986018952
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B226 -> B228 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B220"
    from_bci -1
    to_bci -1
    predecessors "B219" 
    successors "B222" 
    xhandlers
    flags 
    probability 4580557559986018952
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v224|QWORD] destination: B220 -> B222 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B216"
    from_bci -1
    to_bci -1
    predecessors "B214" 
    successors "B217" 
    xhandlers
    flags 
    probability 4580557559986018952
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B216 -> B217 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B235"
    from_bci -1
    to_bci -1
    predecessors "B217" 
    successors "B217" 
    xhandlers
    flags "lle" 
    loop_index 12
    loop_depth 1
    probability 4587511328902186956
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v223|QWORD] destination: B235 -> B217 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B217"
    from_bci -1
    to_bci -1
    predecessors "B216" "B235" 
    successors "B218" "B235" 
    xhandlers
    flags "llh" 
    loop_index 12
    loop_depth 1
    probability 4589564759240759944
    begin_IR
      LIR
      nr   -1  <|@ instruction [v222|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v218|QWORD[.] + v222|QWORD * 4], input: v219|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v223|QWORD = LEA [v222|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v223|QWORD, y: v221|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B217 -> B218 falseDestination: B217 -> B235 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B223"
    from_bci -1
    to_bci -1
    predecessors "B222" 
    successors "B225" 
    xhandlers
    flags 
    probability 4580557559986018952
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v228|QWORD] destination: B223 -> B225 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B218"
    from_bci -1
    to_bci -1
    predecessors "B217" 
    successors "B219" 
    xhandlers
    flags 
    probability 4580557559986018952
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v223|QWORD] destination: B218 -> B219 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B58" 
    xhandlers
    flags 
    probability 4579598228167754006
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B55" 
    successors "B59" 
    xhandlers
    flags 
    probability 4580259531889175745
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v377|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v377|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v72|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.addAll(ArrayList.java:581) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v82|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v82|QWORD[.]] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B210"
    from_bci -1
    to_bci -1
    predecessors "B206" 
    successors "B211" 
    xhandlers
    flags 
    probability 4578994163505205464
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B210 -> B211 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B211"
    from_bci -1
    to_bci -1
    predecessors "B210" "B208" 
    successors "B212" 
    xhandlers
    flags 
    probability 4579699812260379147
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v376|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v376|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v204|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.addAll(ArrayList.java:581) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v216|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v216|QWORD[.]] destination: B211 -> B212 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B136" "B177" 
    xhandlers
    flags 
    probability 4577023056870495540
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v108|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9931451844203518 condition: = trueDestination: B135 -> B136 falseDestination: B135 -> B177 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B135" 
    successors "B137" "B138" 
    xhandlers
    flags 
    probability 4576982822975400699
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v148|DWORD[.] = MOV [v70|DWORD[.] * 8 + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v148|DWORD[.], y: v148|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B136 -> B137 falseDestination: B136 -> B138 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" "B140" 
    xhandlers
    flags 
    probability 4576982822975400699
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v72|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B138 -> B139 falseDestination: B138 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B138" 
    successors "B141" "B176" 
    xhandlers
    flags 
    probability 4572479223348030203
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v149|DWORD = MOV [v148|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v150|QWORD = ADD (x: v111|QWORD, y: v85|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v151|QWORD = MOV v149|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v151|QWORD, y: v150|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B140 -> B141 falseDestination: B140 -> B176 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B142" "B175" 
    xhandlers
    flags 
    probability 4572479223348030203
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v149|DWORD, y: v73|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B141 -> B142 falseDestination: B141 -> B175 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B143" 
    xhandlers
    flags 
    probability 4572479223348030203
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B142 -> B143 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B139" "B142" 
    successors "B144" "B145" 
    xhandlers
    flags 
    probability 4576982822975400699
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v72|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B143 -> B144 falseDestination: B143 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B143" 
    successors "B146" "B174" 
    xhandlers
    flags 
    probability 4572479223348030203
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v84|QWORD, y: v85|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B145 -> B146 falseDestination: B145 -> B174 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B145" 
    successors "B147" 
    xhandlers
    flags 
    probability 4572479223348030203
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B146 -> B147 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B144" "B146" 
    successors "B148" "B149" 
    xhandlers
    flags 
    probability 4576982822975400699
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v72|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B147 -> B148 falseDestination: B147 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B147" 
    successors "B150" "B151" 
    xhandlers
    flags 
    probability 4572479223348030203
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v152|QWORD[.] = LEA [v83|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v153|QWORD[.] = UNCOMPRESSPOINTER (input: v148|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@eef3a58 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v154|QWORD[.] = LEA [v153|QWORD[.] + v111|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v88|QWORD, y: v88|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B149 -> B150 falseDestination: B149 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B149" 
    successors "B154" 
    xhandlers
    flags 
    probability 4570890224317833336
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B150 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B154"
    from_bci -1
    to_bci -1
    predecessors "B150" "B153" 
    successors "B155" "B156" 
    xhandlers
    flags 
    probability 4572479223348030203
    begin_IR
      LIR
      nr   -1  <|@ instruction [v158|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v158|QWORD, y: v87|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B154 -> B155 falseDestination: B154 -> B156 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B156"
    from_bci -1
    to_bci -1
    predecessors "B154" 
    successors "B157" 
    xhandlers
    flags 
    probability 4570890224317833336
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v159|V128_DWORD[....] = H [v154|QWORD[.] + v158|QWORD * 4] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v152|QWORD[.] + v158|QWORD * 4], input: v159|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v160|QWORD = LEA [v158|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v160|QWORD] destination: B156 -> B157 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B157"
    from_bci -1
    to_bci -1
    predecessors "B156" "B155" 
    successors "B158" "B159" 
    xhandlers
    flags 
    probability 4572479223348030203
    begin_IR
      LIR
      nr   -1  <|@ instruction [v161|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v161|QWORD, y: v86|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B157 -> B158 falseDestination: B157 -> B159 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B159"
    from_bci -1
    to_bci -1
    predecessors "B157" 
    successors "B160" 
    xhandlers
    flags 
    probability 4570890224317833336
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v162|V64_DWORD[..] = H [v154|QWORD[.] + v161|QWORD * 4] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v152|QWORD[.] + v161|QWORD * 4], input: v162|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v163|QWORD = LEA [v161|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v163|QWORD] destination: B159 -> B160 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B160"
    from_bci -1
    to_bci -1
    predecessors "B159" "B158" 
    successors "B161" "B162" 
    xhandlers
    flags 
    probability 4572479223348030203
    begin_IR
      LIR
      nr   -1  <|@ instruction [v164|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v164|QWORD, y: v85|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B160 -> B161 falseDestination: B160 -> B162 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B162"
    from_bci -1
    to_bci -1
    predecessors "B160" 
    successors "B163" 
    xhandlers
    flags 
    probability 4570890224317833336
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v165|DWORD[.] = MOV [v154|QWORD[.] + v164|QWORD * 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v152|QWORD[.] + v164|QWORD * 4], y: v165|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B162 -> B163 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B163"
    from_bci -1
    to_bci -1
    predecessors "B148" "B162" "B161" 
    successors "B164" "B165" 
    xhandlers
    flags 
    probability 4576982822975400699
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v72|DWORD, y: v72|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B163 -> B164 falseDestination: B163 -> B165 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B165"
    from_bci -1
    to_bci -1
    predecessors "B163" 
    successors "B166" 
    xhandlers
    flags 
    probability 4572479223348030203
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v166|QWORD[.] = LEA [v83|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v167|QWORD[.] = ADD (x: v166|QWORD[.], y: v99|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v168|QWORD[*] = SHR v167|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v170|QWORD[.] = LEA [v83|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v169|QWORD[*] = SHR v170|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v171|QWORD[*] = SUB (x: v168|QWORD[*], ~y: v169|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v172|QWORD[*] = INC v171|QWORD[*] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v172|QWORD[*]] destination: B165 -> B166 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B172"
    from_bci -1
    to_bci -1
    predecessors "B166" 
    successors "B166" 
    xhandlers
    flags "lle" 
    loop_index 9
    loop_depth 1
    probability 4572479223348030203
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v179|QWORD[*] = DEC v173|QWORD[*] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v180|QWORD[*] = ADD (x: v169|QWORD[*], y: v3|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v181|QWORD[*] = ADD (x: v180|QWORD[*], y: v179|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v181|QWORD[*]], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v179|QWORD[*]] destination: B172 -> B166 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B166"
    from_bci -1
    to_bci -1
    predecessors "B165" "B172" 
    successors "B167" "B172" 
    xhandlers
    flags "llh" 
    loop_index 9
    loop_depth 1
    probability 4576982822975400699
    begin_IR
      LIR
      nr   -1  <|@ instruction [v173|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v173|QWORD[*] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B166 -> B167 falseDestination: B166 -> B172 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B246"
    from_bci -1
    to_bci -1
    predecessors "B245" 
    successors "B321" 
    xhandlers
    flags 
    probability 4575596594292739886
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-270433|0xfffffffffffbdf9f]] destination: B246 -> B321 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B321"
    from_bci -1
    to_bci -1
    predecessors "B320" "B246" "B261" "B250" "B248" 
    successors 
    xhandlers
    flags 
    probability 4582300274885977192
    begin_IR
      LIR
      nr   -1  <|@ instruction [v366|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v366|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:238) [bci: 10]
locals: v0|QWORD[.] v257|DWORD 
java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
locals: - - 
java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
locals: v0|QWORD[.] - v253|QWORD[.] v252|DWORD 
>@ <|@ instruction DEOPT info [bci:10, 9, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B248"
    from_bci -1
    to_bci -1
    predecessors "B247" 
    successors "B321" 
    xhandlers
    flags 
    probability 4575507128571349317
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-270433|0xfffffffffffbdf9f]] destination: B248 -> B321 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B250"
    from_bci -1
    to_bci -1
    predecessors "B249" 
    successors "B321" 
    xhandlers
    flags 
    probability 4575418557507172653
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-270433|0xfffffffffffbdf9f]] destination: B250 -> B321 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B238"
    from_bci -1
    to_bci -1
    predecessors "B199" 
    successors "B239" 
    xhandlers
    flags 
    probability 4575117334181575713
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Collection.toArray()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1] <|@ <|@
      nr   -1  <|@ instruction v250|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.addAll(ArrayList.java:581) [bci: 6]
stack: Object[null] 
locals: v0|QWORD[.] - - - 
>@ <|@ instruction v251|DWORD = MOV [v250|QWORD[.] + 12] size: DWORD state [bci:6] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v251|DWORD, v250|QWORD[.]] destination: B238 -> B239 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4574837534457301975
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = UNCOMPRESSPOINTER (input: v11|DWORD, ~baseRegister: -) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@eef3a58 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v17|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.addAll(ArrayList.java:581) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v18|QWORD[.]] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B164"
    from_bci -1
    to_bci -1
    predecessors "B163" 
    successors "B168" 
    xhandlers
    flags 
    probability 4572479223348030203
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B164 -> B168 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B168"
    from_bci -1
    to_bci -1
    predecessors "B164" "B167" 
    successors "B169" 
    xhandlers
    flags 
    probability 4576982822975400699
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0], v73|DWORD, int[-1|0xffffffffffffffff]] destination: B168 -> B169 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B170"
    from_bci -1
    to_bci -1
    predecessors "B169" 
    successors "B169" 
    xhandlers
    flags "lle" 
    loop_index 10
    loop_depth 1
    probability 4585439808479858613
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v177|DWORD = INC v175|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v178|DWORD = INC v174|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v178|DWORD, v177|DWORD, v175|DWORD] destination: B170 -> B169 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B169"
    from_bci -1
    to_bci -1
    predecessors "B168" "B170" 
    successors "B170" "B171" 
    xhandlers
    flags "llh" 
    loop_index 10
    loop_depth 1
    probability 4586897108778445428
    begin_IR
      LIR
      nr   -1  <|@ instruction [v174|DWORD, v175|DWORD, v176|DWORD] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v72|DWORD, y: v174|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7836641850436589 condition: > trueDestination: B169 -> B170 falseDestination: B169 -> B171 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B171"
    from_bci -1
    to_bci -1
    predecessors "B169" 
    successors "B190" 
    xhandlers
    flags 
    probability 4576982822975400699
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v175|DWORD, v176|DWORD] destination: B171 -> B190 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B167"
    from_bci -1
    to_bci -1
    predecessors "B166" 
    successors "B168" 
    xhandlers
    flags 
    probability 4572479223348030203
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B167 -> B168 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B143" 
    successors "B147" 
    xhandlers
    flags 
    probability 4572479223348030203
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B144 -> B147 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B147" 
    successors "B163" 
    xhandlers
    flags 
    probability 4572479223348030203
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B148 -> B163 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B138" 
    successors "B143" 
    xhandlers
    flags 
    probability 4572479223348030203
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B139 -> B143 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B257"
    from_bci -1
    to_bci -1
    predecessors "B255" 
    successors "B258" 
    xhandlers
    flags 
    probability 4568396634526279913
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v277|DWORD = NOT v276|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v278|DWORD = ADD (x: v277|DWORD, y: v255|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v279|DWORD = SUB (x: v252|DWORD, ~y: v277|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v253|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v277|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v267|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE v278|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE v279|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
locals: v0|QWORD[.] - - v252|DWORD 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD] [] callTarget: HotSpotMethod<System.arraycopy(Object, int, Object, int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:31] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B257 -> B258 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B263"
    from_bci -1
    to_bci -1
    predecessors "B262" 
    successors "B265" 
    xhandlers
    flags 
    probability 4567311708340335520
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v295|QWORD = UNCOMPRESSPOINTER (input: v289|DWORD, ~baseRegister: -) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@eef3a58 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v295|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v285|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:238) [bci: 10]
locals: v0|QWORD[.] v257|DWORD 
java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
locals: - - 
java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
locals: v0|QWORD[.] - v253|QWORD[.] v252|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:10, 9, 17] <|@ <|@
      nr   -1  <|@ instruction v296|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v296|QWORD[.]] destination: B263 -> B265 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B304"
    from_bci -1
    to_bci -1
    predecessors "B303" 
    successors "B309" 
    xhandlers
    flags 
    probability 4567311708340335519
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B304 -> B309 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B309"
    from_bci -1
    to_bci -1
    predecessors "B304" "B306" "B308" 
    successors 
    xhandlers
    flags 
    probability 4574320729851797906
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -282977 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.grow(ArrayList.java:266) [bci: 44]
locals: - - - - 
java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
locals: - - 
java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
locals: - - 
java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
locals: v0|QWORD[.] - v253|QWORD[.] v252|DWORD 
>@ <|@ instruction DEOPT info [bci:44, 22, 9, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B306"
    from_bci -1
    to_bci -1
    predecessors "B305" 
    successors "B309" 
    xhandlers
    flags 
    probability 4567260055482195289
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B306 -> B309 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B308"
    from_bci -1
    to_bci -1
    predecessors "B307" 
    successors "B309" 
    xhandlers
    flags 
    probability 4567208919152636461
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B308 -> B309 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B58" 
    xhandlers
    flags 
    probability 4563722939497366367
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B55 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B161"
    from_bci -1
    to_bci -1
    predecessors "B160" 
    successors "B163" 
    xhandlers
    flags 
    probability 4563472024093289211
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B161 -> B163 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B158"
    from_bci -1
    to_bci -1
    predecessors "B157" 
    successors "B160" 
    xhandlers
    flags 
    probability 4563472024093289211
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v161|QWORD] destination: B158 -> B160 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B155"
    from_bci -1
    to_bci -1
    predecessors "B154" 
    successors "B157" 
    xhandlers
    flags 
    probability 4563472024093289211
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v158|QWORD] destination: B155 -> B157 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B149" 
    successors "B152" 
    xhandlers
    flags 
    probability 4563472024093289211
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B151 -> B152 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B173"
    from_bci -1
    to_bci -1
    predecessors "B152" 
    successors "B152" 
    xhandlers
    flags "lle" 
    loop_index 8
    loop_depth 1
    probability 4570890224317833336
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v157|QWORD] destination: B173 -> B152 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B151" "B173" 
    successors "B153" "B173" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 1
    probability 4572479223348030203
    begin_IR
      LIR
      nr   -1  <|@ instruction [v155|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v156|V256_DWORD[........] = H [v154|QWORD[.] + v155|QWORD * 4] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v152|QWORD[.] + v155|QWORD * 4], input: v156|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v157|QWORD = LEA [v155|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v157|QWORD, y: v88|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B152 -> B153 falseDestination: B152 -> B173 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B153"
    from_bci -1
    to_bci -1
    predecessors "B152" 
    successors "B154" 
    xhandlers
    flags 
    probability 4563472024093289211
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v157|QWORD] destination: B153 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B208"
    from_bci -1
    to_bci -1
    predecessors "B207" 
    successors "B211" 
    xhandlers
    flags 
    probability 4563288012940331416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B208 -> B211 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B316"
    from_bci -1
    to_bci -1
    predecessors "B314" 
    successors "B317" 
    xhandlers
    flags 
    probability 4560356318462058968
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v358|DWORD = NOT v357|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v359|DWORD = ADD (x: v358|DWORD, y: v255|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v360|DWORD = SUB (x: v252|DWORD, ~y: v358|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v253|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v358|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v298|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE v359|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE v360|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
locals: v0|QWORD[.] - - v252|DWORD 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD] [] callTarget: HotSpotMethod<System.arraycopy(Object, int, Object, int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:31] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B316 -> B317 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B177"
    from_bci -1
    to_bci -1
    predecessors "B135" 
    successors "B178" "B179" 
    xhandlers
    flags 
    probability 4544778362961599667
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v72|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B177 -> B178 falseDestination: B177 -> B179 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B179"
    from_bci -1
    to_bci -1
    predecessors "B177" 
    successors "B180" "B193" 
    xhandlers
    flags 
    probability 4540274763334229171
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v84|QWORD, y: v85|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B179 -> B180 falseDestination: B179 -> B193 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B180"
    from_bci -1
    to_bci -1
    predecessors "B179" 
    successors "B181" 
    xhandlers
    flags 
    probability 4540274763334229171
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B180 -> B181 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B181"
    from_bci -1
    to_bci -1
    predecessors "B178" "B180" 
    successors "B182" 
    xhandlers
    flags 
    probability 4544778362961599667
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0], v73|DWORD, int[-1|0xffffffffffffffff]] destination: B181 -> B182 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B183"
    from_bci -1
    to_bci -1
    predecessors "B182" 
    successors "B184" "B187" 
    xhandlers
    flags 
    loop_index 11
    loop_depth 1
    probability 4553299463534714735
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v185|DWORD = MOV [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v186|DWORD = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v187|DWORD = SUB (x: v183|DWORD, ~y: v185|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v188|QWORD[.] = UNCOMPRESSPOINTER (input: v70|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@eef3a58 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v186|DWORD, y: v187|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B183 -> B184 falseDestination: B183 -> B187 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B184"
    from_bci -1
    to_bci -1
    predecessors "B183" 
    successors "B185" "B186" 
    xhandlers
    flags 
    loop_index 11
    loop_depth 1
    probability 4553299463534714735
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v71|DWORD, y: [v70|DWORD[.] * 8 + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B184 -> B185 falseDestination: B184 -> B186 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B185"
    from_bci -1
    to_bci -1
    predecessors "B184" 
    successors "B182" 
    xhandlers
    flags "lle" 
    loop_index 11
    loop_depth 1
    probability 4553299463534714735
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v188|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v183|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
locals: vobject:AbstractList$ListItr:0{cursor=v183|DWORD,lastRet=v184|DWORD,expectedModCount=v71|DWORD,this$0=v188|QWORD[.],this$0=v188|QWORD[.]} v183|DWORD - 
java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
locals: - 
java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
stack: v83|QWORD[.] v182|DWORD 
locals: - v83|QWORD[.] vobject:SubList$1:1{val$index=int[0|0x0],i=vobject:AbstractList$ListItr:0{cursor=v183|DWORD,lastRet=v184|DWORD,expectedModCount=v71|DWORD,this$0=v188|QWORD[.],this$0=v188|QWORD[.]},this$0=v1|QWORD[.]} v182|DWORD 
java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
locals: v0|QWORD[.] - - - 
vobject:AbstractList$ListItr:0{cursor=v183|DWORD,lastRet=v184|DWORD,expectedModCount=v71|DWORD,this$0=v188|QWORD[.],this$0=v188|QWORD[.]} Ljava/util/AbstractList$ListItr; v183|DWORD v184|DWORD v71|DWORD v188|QWORD[.] v188|QWORD[.] 
vobject:SubList$1:1{val$index=int[0|0x0],i=vobject:AbstractList$ListItr:0{cursor=v183|DWORD,lastRet=v184|DWORD,expectedModCount=v71|DWORD,this$0=v188|QWORD[.],this$0=v188|QWORD[.]},this$0=v1|QWORD[.]} Ljava/util/SubList$1; int[0|0x0] vobject:AbstractList$ListItr:0{cursor=v183|DWORD,lastRet=v184|DWORD,expectedModCount=v71|DWORD,this$0=v188|QWORD[.],this$0=v188|QWORD[.]} v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractList.get(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:14, 11, 39, 1] <|@ <|@
      nr   -1  <|@ instruction v189|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v190|DWORD[.] = COMPRESSPOINTER (input: v189|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@eef3a58 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v83|QWORD[.] + v182|DWORD * 4 + 16], y: v190|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v192|QWORD[.] = LEA [v83|QWORD[.] + v182|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v191|QWORD[*] = SHR v192|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v191|QWORD[*] + v3|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v193|DWORD = INC v183|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v194|DWORD = INC v182|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v194|DWORD, v193|DWORD, v183|DWORD] destination: B185 -> B182 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B182"
    from_bci -1
    to_bci -1
    predecessors "B181" "B185" 
    successors "B183" "B189" 
    xhandlers
    flags "llh" 
    loop_index 11
    loop_depth 1
    probability 4554586948177749660
    begin_IR
      LIR
      nr   -1  <|@ instruction [v182|DWORD, v183|DWORD, v184|DWORD] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v72|DWORD, y: v182|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7836641850436589 condition: > trueDestination: B182 -> B183 falseDestination: B182 -> B189 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B189"
    from_bci -1
    to_bci -1
    predecessors "B182" 
    successors "B190" 
    xhandlers
    flags 
    probability 4544778362961599667
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v183|DWORD, v184|DWORD] destination: B189 -> B190 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B178"
    from_bci -1
    to_bci -1
    predecessors "B177" 
    successors "B181" 
    xhandlers
    flags 
    probability 4540274763334229171
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B178 -> B181 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B198"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B237" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-226323|0xfffffffffffc8bed], Object[null]] destination: B198 -> B237 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B237"
    from_bci -1
    to_bci -1
    predecessors "B50" "B236" "B205" "B198" "B52" "B195" "B83" "B91" "B88" "B194" "B2" "B95" "B137" "B134" "B132" "B193" "B176" "B174" "B133" "B175" 
    successors 
    xhandlers
    flags 
    probability 2374522903531094016
    begin_IR
      LIR
      nr   -1  <|@ instruction [v248|DWORD, v249|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v248|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v249|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.addAll(ArrayList.java:581) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B236"
    from_bci -1
    to_bci -1
    predecessors "B202" 
    successors "B237" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v247|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1399980118] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-255259|0xfffffffffffc1ae5], v247|QWORD[.]] destination: B236 -> B237 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B186"
    from_bci -1
    to_bci -1
    predecessors "B184" 
    successors "B188" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-245779|0xfffffffffffc3fed]] destination: B186 -> B188 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B188"
    from_bci -1
    to_bci -1
    predecessors "B187" "B186" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v195|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v195|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:138) [bci: 15]
locals: - v83|QWORD[.] vobject:SubList$1:0{val$index=int[0|0x0],i=vobject:AbstractList$ListItr:1{cursor=v183|DWORD,lastRet=v184|DWORD,expectedModCount=v71|DWORD,this$0=v188|QWORD[.],this$0=v188|QWORD[.]},this$0=v1|QWORD[.]} v182|DWORD 
java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
locals: v0|QWORD[.] - - - 
vobject:SubList$1:0{val$index=int[0|0x0],i=vobject:AbstractList$ListItr:1{cursor=v183|DWORD,lastRet=v184|DWORD,expectedModCount=v71|DWORD,this$0=v188|QWORD[.],this$0=v188|QWORD[.]},this$0=v1|QWORD[.]} Ljava/util/SubList$1; int[0|0x0] vobject:AbstractList$ListItr:1{cursor=v183|DWORD,lastRet=v184|DWORD,expectedModCount=v71|DWORD,this$0=v188|QWORD[.],this$0=v188|QWORD[.]} v1|QWORD[.] 
vobject:AbstractList$ListItr:1{cursor=v183|DWORD,lastRet=v184|DWORD,expectedModCount=v71|DWORD,this$0=v188|QWORD[.],this$0=v188|QWORD[.]} Ljava/util/AbstractList$ListItr; v183|DWORD v184|DWORD v71|DWORD v188|QWORD[.] v188|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:15, 1] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B187"
    from_bci -1
    to_bci -1
    predecessors "B183" 
    successors "B188" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-245011|0xfffffffffffc42ed]] destination: B187 -> B188 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B320"
    from_bci -1
    to_bci -1
    predecessors "B259" 
    successors "B321" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-273427|0xfffffffffffbd3ed]] destination: B320 -> B321 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B193"
    from_bci -1
    to_bci -1
    predecessors "B179" 
    successors "B237" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v380|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1800298093] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-246555|0xfffffffffffc3ce5], v380|QWORD[.]] destination: B193 -> B237 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B237" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v385|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1800298093] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-232731|0xfffffffffffc72e5], v385|QWORD[.]] destination: B134 -> B237 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B237" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-251411|0xfffffffffffc29ed], Object[null]] destination: B83 -> B237 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B191"
    from_bci -1
    to_bci -1
    predecessors "B190" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v200|QWORD[.] = UNCOMPRESSPOINTER (input: v70|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@eef3a58 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -249107 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:143) [bci: 51]
locals: - v83|QWORD[.] vobject:SubList$1:0{val$index=int[0|0x0],i=vobject:AbstractList$ListItr:1{cursor=v196|DWORD,lastRet=v197|DWORD,expectedModCount=v71|DWORD,this$0=v200|QWORD[.],this$0=v200|QWORD[.]},this$0=v1|QWORD[.]} - 
java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
locals: v0|QWORD[.] - - - 
vobject:SubList$1:0{val$index=int[0|0x0],i=vobject:AbstractList$ListItr:1{cursor=v196|DWORD,lastRet=v197|DWORD,expectedModCount=v71|DWORD,this$0=v200|QWORD[.],this$0=v200|QWORD[.]},this$0=v1|QWORD[.]} Ljava/util/SubList$1; int[0|0x0] vobject:AbstractList$ListItr:1{cursor=v196|DWORD,lastRet=v197|DWORD,expectedModCount=v71|DWORD,this$0=v200|QWORD[.],this$0=v200|QWORD[.]} v1|QWORD[.] 
vobject:AbstractList$ListItr:1{cursor=v196|DWORD,lastRet=v197|DWORD,expectedModCount=v71|DWORD,this$0=v200|QWORD[.],this$0=v200|QWORD[.]} Ljava/util/AbstractList$ListItr; v196|DWORD v197|DWORD v71|DWORD v200|QWORD[.] v200|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:51, 1] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B237" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-252691|0xfffffffffffc24ed], Object[null]] destination: B91 -> B237 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B237" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v384|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1800298093] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-235291|0xfffffffffffc68e5], v384|QWORD[.]] destination: B132 -> B237 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B175"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B237" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v383|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1800298093] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-240155|0xfffffffffffc55e5], v383|QWORD[.]] destination: B175 -> B237 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B261"
    from_bci -1
    to_bci -1
    predecessors "B260" 
    successors "B321" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-393313|0xfffffffffff9ff9f]] destination: B261 -> B321 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B237" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-251667|0xfffffffffffc28ed], Object[null]] destination: B88 -> B237 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B174"
    from_bci -1
    to_bci -1
    predecessors "B145" 
    successors "B237" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v381|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1800298093] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-242459|0xfffffffffffc4ce5], v381|QWORD[.]] destination: B174 -> B237 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B194"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B237" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-251955|0xfffffffffffc27cd], Object[null]] destination: B194 -> B237 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B205"
    from_bci -1
    to_bci -1
    predecessors "B204" 
    successors "B237" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-254739|0xfffffffffffc1ced], Object[null]] destination: B205 -> B237 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B237" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v386|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1800298093] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-232731|0xfffffffffffc72e5], v386|QWORD[.]] destination: B133 -> B237 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B195"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B237" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-229683|0xfffffffffffc7ecd], Object[null]] destination: B195 -> B237 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B237" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v378|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1399295821] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-238859|0xfffffffffffc5af5], v378|QWORD[.]] destination: B137 -> B237 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B237" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-229907|0xfffffffffffc7ded], Object[null]] destination: B52 -> B237 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B176"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B237" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v382|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1800298093] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-240155|0xfffffffffffc55e5], v382|QWORD[.]] destination: B176 -> B237 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B237" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-405345|0xfffffffffff9d09f], Object[null]] destination: B2 -> B237 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B237" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v379|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1399295821] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-231435|0xfffffffffffc77f5], v379|QWORD[.]] destination: B95 -> B237 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B237" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-227859|0xfffffffffffc85ed], Object[null]] destination: B50 -> B237 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokeinterface#10, 1      // java.util.Collection.toArray:()java.lang.Object[]
     6: astore_2      
     7: aload_2       
     8: arraylength   
     9: istore_3      
    10: aload_0       
    11: aload_0       
    12: getfield      #0          // size:int
    15: iload_3       
    16: iadd          
    17: invokespecial #28         // ensureCapacityInternal:(int)void
    20: aload_2       
    21: iconst_0      
    22: aload_0       
    23: getfield      #2          // elementData:java.lang.Object[]
    26: aload_0       
    27: getfield      #0          // size:int
    30: iload_3       
    31: invokestatic  #25         // java.lang.System.arraycopy:(java.lang.Object, int, java.lang.Object, int, int)void
    34: aload_0       
    35: dup           
    36: getfield      #0          // size:int
    39: iload_3       
    40: iadd          
    41: putfield      #0          // size:int
    44: iload_3       
    45: ifeq          52
    48: iconst_1      
    49: goto          53
    52: iconst_0      
    53: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B47" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@25350e89 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:40|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:48|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:80, stack:88]
live-base-pointers: []
java.util.ArrayList.addAll(ArrayList.java:581) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction rcx|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction r13|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   14  <|@ instruction stack:56|QWORD = MOVE r13|QWORD moveKind: QWORD <|@ <|@
      nr   16  <|@ instruction CMP rcx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList;, resolved>;compressed} <|@ <|@
      nr   18  <|@ instruction BRANCH trueDestinationProbability: 0.7101534901468434 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4604571713532478778
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction r14|DWORD[.] = MOV [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   24  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r14:0, stack:80, stack:88]
live-base-pointers: []
java.util.ArrayList.addAll(ArrayList.java:581) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r14|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   26  <|@ instruction r10|DWORD = MOV [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   28  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   30  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4604571713532478778
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   42  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   44  <|@ instruction r11|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   46  <|@ instruction r8|DWORD = MOV [r14|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   48  <|@ instruction r9|DWORD = SHL r10|DWORD y: 2 size: DWORD <|@ <|@
      nr   50  <|@ instruction r9|DWORD = LEA [r9|DWORD + 23] size: DWORD <|@ <|@
      nr   52  <|@ instruction r9|DWORD = AND r9|DWORD y: -8 size: DWORD <|@ <|@
      nr   54  <|@ instruction r9|QWORD = MOVSXD r9|DWORD size: QWORD <|@ <|@
      nr   56  <|@ instruction rbx|QWORD = ADD (x: r9|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr   58  <|@ instruction CMP (x: rbx|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr   60  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4604507748592606754
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   88  <|@ instruction MOV (x: [r15|QWORD + 96], y: rbx|QWORD) size: QWORD <|@ <|@
      nr   90  <|@ instruction AMD64PREFETCH ~[r9|QWORD + rcx|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   92  <|@ instruction AMD64PREFETCH ~[r9|QWORD + rcx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   94  <|@ instruction AMD64PREFETCH ~[r9|QWORD + rcx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   96  <|@ instruction AMD64PREFETCH ~[r9|QWORD + rcx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   98  <|@ instruction MOV (x: [rcx|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  100  <|@ instruction MOV [rcx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  102  <|@ instruction MOV (x: [rcx|QWORD + 8], y: r8|DWORD) size: DWORD <|@ <|@
      nr  104  <|@ instruction rcx|QWORD[.] = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  106  <|@ instruction rdx|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  108  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4604571713532478778
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  112  <|@ instruction rcx|DWORD = MOV [r14|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  114  <|@ instruction CMP (x: r10|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  116  <|@ instruction r11|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: rcx|DWORD) condition: > <|@ <|@
      nr  118  <|@ instruction rcx|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  120  <|@ instruction CMP rcx|QWORD y: 1 size: QWORD <|@ <|@
      nr  122  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4600068113905108282
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  130  <|@ instruction r11|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr  132  <|@ instruction r8|QWORD[.] = LEA [rdx|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  134  <|@ instruction r9|QWORD[*] = LEA [r14|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr  136  <|@ instruction TEST (x: r11|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  138  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    probability 4598468990408307692
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  142  <|@ instruction rbx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  144  <|@ instruction JUMP ~[] destination: B9 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4600068113905108282
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  170  <|@ instruction r11|QWORD = LEA [rcx|QWORD - 4] size: QWORD <|@ <|@
      nr  172  <|@ instruction CMP (x: rbx|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  174  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4598468990408307692
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  182  <|@ instruction xmm0|V128_DWORD[....] = H [r9|QWORD[*] + rbx|QWORD * 4] nZ: XMM oh: VMOVDQU <|@ <|@
      nr  184  <|@ instruction J (address: [r8|QWORD[.] + rbx|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  186  <|@ instruction r11|QWORD = LEA [rbx|QWORD + 4] size: QWORD <|@ <|@
      nr  188  <|@ instruction rbx|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  190  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4600068113905108282
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  194  <|@ instruction r11|QWORD = LEA [rcx|QWORD - 2] size: QWORD <|@ <|@
      nr  196  <|@ instruction CMP (x: rbx|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  198  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4598468990408307692
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  206  <|@ instruction xmm0|V64_DWORD[..] = H [r9|QWORD[*] + rbx|QWORD * 4] nZ: XMM oh: VMOVQ <|@ <|@
      nr  208  <|@ instruction J (address: [r8|QWORD[.] + rbx|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr  210  <|@ instruction r11|QWORD = LEA [rbx|QWORD + 2] size: QWORD <|@ <|@
      nr  212  <|@ instruction rbx|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4600068113905108282
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  218  <|@ instruction r11|QWORD = DEC rcx|QWORD size: QWORD <|@ <|@
      nr  220  <|@ instruction CMP (x: rbx|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  222  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4598468990408307692
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  230  <|@ instruction r11|DWORD[.] = MOV [r9|QWORD[*] + rbx|QWORD * 4] size: DWORD <|@ <|@
      nr  232  <|@ instruction MOV (x: [r8|QWORD[.] + rbx|QWORD * 4], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr  234  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B7" "B21" "B20" 
    successors "B23" "B38" 
    xhandlers
    flags 
    probability 4604571713532478778
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  238  <|@ instruction r11|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  240  <|@ instruction CMP (x: r11|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  242  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B39" 
    xhandlers
    flags 
    probability 4600068113905108282
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  356  <|@ instruction JUMP ~[] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B36" "B35" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4604571713532478778
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  360  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  362  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4600068113905108282
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  370  <|@ instruction rcx|DWORD = DEC r10|DWORD size: DWORD <|@ <|@
      nr  372  <|@ instruction rcx|DWORD = SHL rcx|DWORD y: 2 size: DWORD <|@ <|@
      nr  374  <|@ instruction rcx|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr  376  <|@ instruction r11|QWORD[.] = LEA [rdx|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  378  <|@ instruction r11|QWORD[.] = ADD (x: r11|QWORD[.], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  380  <|@ instruction r11|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  382  <|@ instruction rcx|QWORD[.] = LEA [rdx|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  384  <|@ instruction rcx|QWORD[*] = SHR rcx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  386  <|@ instruction r11|QWORD[*] = SUB (x: r11|QWORD[*], ~y: rcx|QWORD[*]) size: QWORD <|@ <|@
      nr  388  <|@ instruction r11|QWORD[*] = INC r11|QWORD[*] size: QWORD <|@ <|@
      nr  390  <|@ instruction JUMP ~[] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B42" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4600068113905108282
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  412  <|@ instruction r11|QWORD[*] = DEC r11|QWORD[*] size: QWORD <|@ <|@
      nr  414  <|@ instruction r8|QWORD[*] = ADD (x: rcx|QWORD[*], y: r13|QWORD) size: QWORD <|@ <|@
      nr  416  <|@ instruction r8|QWORD[*] = ADD (x: r8|QWORD[*], y: r11|QWORD[*]) size: QWORD <|@ <|@
      nr  418  <|@ instruction MOVB (x: [r8|QWORD[*]], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  420  <|@ instruction JUMP ~[] destination: B45 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B45" 
    successors "B43" "B45" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4604571713532478778
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  394  <|@ instruction CMP r11|QWORD[*] y: 1 size: QWORD <|@ <|@
      nr  396  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B42 -> B43 falseDestination: B42 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B22" 
    xhandlers
    flags 
    probability 4600068113905108282
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  126  <|@ instruction JUMP ~[] destination: B7 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4600068113905108282
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  246  <|@ instruction r8|QWORD[.] = LEA [rdx|QWORD[.] + rcx|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr  248  <|@ instruction r11|QWORD = SUB (x: r11|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  250  <|@ instruction rcx|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  252  <|@ instruction TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  254  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 4598468990408307692
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  258  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  260  <|@ instruction JUMP ~[] destination: B24 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B24" "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4600068113905108282
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  286  <|@ instruction rcx|QWORD = LEA [r11|QWORD - 4] size: QWORD <|@ <|@
      nr  288  <|@ instruction CMP (x: r9|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  290  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4598468990408307692
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  298  <|@ instruction xmm0|V128_DWORD[....] = L oc: SIMD<null,null,null,null> <|@ <|@
      nr  300  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  302  <|@ instruction rcx|QWORD = LEA [r9|QWORD + 4] size: QWORD <|@ <|@
      nr  304  <|@ instruction r9|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  306  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4600068113905108282
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  310  <|@ instruction rcx|QWORD = LEA [r11|QWORD - 2] size: QWORD <|@ <|@
      nr  312  <|@ instruction CMP (x: r9|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  314  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4598468990408307692
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  322  <|@ instruction xmm0|V64_DWORD[..] = L oc: SIMD<null,null> <|@ <|@
      nr  324  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr  326  <|@ instruction rcx|QWORD = LEA [r9|QWORD + 2] size: QWORD <|@ <|@
      nr  328  <|@ instruction r9|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4600068113905108282
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  334  <|@ instruction r11|QWORD = DEC r11|QWORD size: QWORD <|@ <|@
      nr  336  <|@ instruction CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  338  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B39" 
    xhandlers
    flags 
    probability 4598468990408307692
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  346  <|@ instruction MOV (x: [r8|QWORD[.] + r9|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  348  <|@ instruction JUMP ~[] destination: B36 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    probability 4600068113905108282
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  366  <|@ instruction JUMP ~[] destination: B40 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B40" "B43" 
    successors "B239" 
    xhandlers
    flags 
    probability 4604571713532478778
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  404  <|@ instruction rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction r14|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  408  <|@ instruction JUMP ~[] destination: B44 -> B239 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B239"
    from_bci -1
    to_bci -1
    predecessors "B238" "B44" "B192" "B233" 
    successors "B240" "B243" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 2122  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 2124  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 2126  <|@ st <@st|@reference-map: [rax:0, rsi:0, r10:0, stack:88]
live-base-pointers: []
java.util.ArrayList.addAll(ArrayList.java:581) [bci: 6]
stack: rax|QWORD[.] 
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:6] <|@ <|@
      nr 2128  <|@ instruction r11|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 2130  <|@ instruction rdi|DWORD = ADD (x: r14|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr 2132  <|@ instruction CMP r10|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Object[0]{}] <|@ <|@
      nr 2134  <|@ instruction BRANCH trueDestinationProbability: 0.20639829530068676 condition: = trueDestination: B239 -> B240 falseDestination: B239 -> B243 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B243"
    from_bci -1
    to_bci -1
    predecessors "B239" 
    successors "B244" 
    xhandlers
    flags 
    probability 4605323348228405251
    begin_IR
      LIR
      nr 2152  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2154  <|@ instruction JUMP ~[] destination: B243 -> B244 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B244"
    from_bci -1
    to_bci -1
    predecessors "B243" "B241" "B242" 
    successors "B245" "B259" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr 2156  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2158  <|@ instruction stack:64|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr 2160  <|@ instruction stack:48|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2162  <|@ instruction stack:68|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 2164  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 2166  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, ~y: [rsi|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr 2168  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: rdx|DWORD) size: DWORD <|@ <|@
      nr 2170  <|@ instruction r8|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr 2172  <|@ instruction r9|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 2174  <|@ instruction rdx|DWORD = SUB (x: rdi|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr 2176  <|@ instruction CMP rdx|DWORD y: 1 size: DWORD <|@ <|@
      nr 2178  <|@ instruction BRANCH trueDestinationProbability: 0.7759914359571053 condition: < trueDestination: B244 -> B245 falseDestination: B244 -> B259 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B245"
    from_bci -1
    to_bci -1
    predecessors "B244" 
    successors "B246" "B247" 
    xhandlers
    flags 
    probability 4605164729028914646
    begin_IR
      LIR
      nr 2180  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2182  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr 2184  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B245 -> B246 falseDestination: B245 -> B247 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B247"
    from_bci -1
    to_bci -1
    predecessors "B245" 
    successors "B248" "B249" 
    xhandlers
    flags 
    probability 4605094833934078264
    begin_IR
      LIR
      nr 2192  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2194  <|@ instruction CMP (x: r14|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 2196  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B247 -> B248 falseDestination: B247 -> B249 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B249"
    from_bci -1
    to_bci -1
    predecessors "B247" 
    successors "B250" "B251" 
    xhandlers
    flags 
    probability 4605025637790190245
    begin_IR
      LIR
      nr 2204  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2206  <|@ instruction r8|DWORD = SUB (x: r8|DWORD, ~y: r14|DWORD) size: DWORD <|@ <|@
      nr 2208  <|@ instruction CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr 2210  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B249 -> B250 falseDestination: B249 -> B251 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B251"
    from_bci -1
    to_bci -1
    predecessors "B249" 
    successors "B252" "B253" 
    xhandlers
    flags 
    probability 4604957133607741107
    begin_IR
      LIR
      nr 2218  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2220  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr 2222  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B251 -> B252 falseDestination: B251 -> B253 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B253"
    from_bci -1
    to_bci -1
    predecessors "B251" 
    successors "B254" "B255" 
    xhandlers
    flags 
    probability 4604278942201494638
    begin_IR
      LIR
      nr 2228  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2230  <|@ instruction rdi|DWORD = MOV [rax|QWORD[.] + 8] size: DWORD <|@ <|@
      nr 2232  <|@ instruction r8|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr 2234  <|@ instruction r9|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr 2236  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@eef3a58 encoding: base: 0 shift: 3 <|@ <|@
      nr 2238  <|@ instruction rcx|QWORD = MOV r14|DWORD size: DWORD <|@ <|@
      nr 2240  <|@ instruction CMP (x: r8|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr 2242  <|@ instruction BRANCH trueDestinationProbability: 0.6 condition: = trueDestination: B253 -> B254 falseDestination: B253 -> B255 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B254"
    from_bci -1
    to_bci -1
    predecessors "B253" 
    successors "B258" 
    xhandlers
    flags 
    probability 4600996087105367786
    begin_IR
      LIR
      nr 2244  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2246  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2248  <|@ instruction r10|QWORD[*] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2250  <|@ instruction rdi|QWORD = LEA [rax|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 2252  <|@ instruction rsi|QWORD = LEA [r10|QWORD[*] + r9|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr 2254  <|@ instruction rdx|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr 2256  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: ObjectArraycopyKillAny(Word,Word,Word)void@0x106813120:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 2258  <|@ instruction r14|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr 2260  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2262  <|@ instruction JUMP ~[] destination: B254 -> B258 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B258"
    from_bci -1
    to_bci -1
    predecessors "B252" "B254" "B256" "B257" 
    successors 
    xhandlers
    flags 
    probability 4604957133607741107
    begin_IR
      LIR
      nr 2326  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2328  <|@ instruction rax|DWORD = ADD (x: r14|DWORD, ~y: [rsi|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr 2330  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr 2332  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr 2334  <|@ instruction rax|DWORD = SETCC condition: != <|@ <|@
      nr 2336  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" 
    xhandlers
    flags 
    probability 4600068113905108282
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  400  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B48" "B199" 
    xhandlers
    flags 
    probability 4598893030452983180
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  428  <|@ instruction CMP rcx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/RandomAccessSubList;, resolved>;compressed} <|@ <|@
      nr  430  <|@ instruction BRANCH trueDestinationProbability: 0.5054073948247549 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B199 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B198" 
    xhandlers
    flags 
    probability 4594445899282223279
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  434  <|@ instruction r14|DWORD[.] = MOV [rdx|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  436  <|@ instruction stack:60|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD <|@ <|@
      nr  438  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:68, stack:80, stack:88]
live-base-pointers: []
java.util.ArrayList.addAll(ArrayList.java:581) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction r10|DWORD = MOV [r14|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  440  <|@ instruction stack:64|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  442  <|@ instruction CMP (x: r10|DWORD, y: [rdx|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  444  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B198 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4594445899282223279
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  448  <|@ instruction r11|DWORD = MOV [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  450  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  452  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B49 -> B50 falseDestination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4594445899282223279
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  464  <|@ instruction r8|DWORD = MOV [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  466  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  468  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B51 -> B52 falseDestination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B57" 
    xhandlers
    flags 
    probability 4594445899282223279
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  480  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  482  <|@ instruction r9|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  484  <|@ instruction CMP r11|DWORD y: 16777215 size: DWORD <|@ <|@
      nr  486  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4593918111383054494
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  490  <|@ instruction rbx|DWORD = SHL r11|DWORD y: 2 size: DWORD <|@ <|@
      nr  492  <|@ instruction rbx|DWORD = LEA [rbx|DWORD + 23] size: DWORD <|@ <|@
      nr  494  <|@ instruction rbx|DWORD = AND rbx|DWORD y: -8 size: DWORD <|@ <|@
      nr  496  <|@ instruction rbx|QWORD = MOVSXD rbx|DWORD size: QWORD <|@ <|@
      nr  498  <|@ instruction rdi|QWORD = ADD (x: rbx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  500  <|@ instruction CMP (x: rdi|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  502  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B54 -> B55 falseDestination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B59" 
    xhandlers
    flags 
    probability 4593870610472129303
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  512  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  514  <|@ instruction AMD64PREFETCH ~[rbx|QWORD + rcx|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  516  <|@ instruction AMD64PREFETCH ~[rbx|QWORD + rcx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  518  <|@ instruction AMD64PREFETCH ~[rbx|QWORD + rcx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  520  <|@ instruction AMD64PREFETCH ~[rbx|QWORD + rcx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  522  <|@ instruction MOV (x: [rcx|QWORD + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr  524  <|@ instruction MOV [rcx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  526  <|@ instruction MOV [rcx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr  528  <|@ instruction rcx|QWORD[.] = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  530  <|@ instruction rax|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  532  <|@ instruction stack:68|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  534  <|@ instruction r14|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  536  <|@ instruction JUMP ~[] destination: B56 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4594445899282223279
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  562  <|@ instruction r10|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr  564  <|@ instruction r11|QWORD = DEC r10|QWORD size: QWORD <|@ <|@
      nr  566  <|@ instruction r8|QWORD = LEA [r10|QWORD - 2] size: QWORD <|@ <|@
      nr  568  <|@ instruction r9|QWORD = LEA [r10|QWORD - 4] size: QWORD <|@ <|@
      nr  570  <|@ instruction rcx|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  572  <|@ instruction CMP r14|DWORD y: 1 size: DWORD <|@ <|@
      nr  574  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B59 -> B60 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4589942299654852783
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  582  <|@ instruction rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  584  <|@ instruction TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  586  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B66" 
    xhandlers
    flags 
    probability 4588077639523326214
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  590  <|@ instruction rdx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  592  <|@ instruction JUMP ~[] destination: B62 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B62" "B65" 
    successors "B67" "B68" 
    xhandlers
    flags 
    probability 4589942299654852783
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  618  <|@ instruction CMP (x: rdx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  620  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B66 -> B67 falseDestination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    probability 4588077639523326214
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  628  <|@ instruction xmm0|V128_DWORD[....] = L oc: SIMD<null,null,null,null> <|@ <|@
      nr  630  <|@ instruction J (address: [rsi|QWORD[.] + rdx|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  632  <|@ instruction rdx|QWORD = LEA [rdx|QWORD + 4] size: QWORD <|@ <|@
      nr  634  <|@ instruction JUMP ~[] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    probability 4589942299654852783
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  638  <|@ instruction CMP (x: rdx|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  640  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B69 -> B70 falseDestination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4588077639523326214
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  648  <|@ instruction xmm0|V64_DWORD[..] = L oc: SIMD<null,null> <|@ <|@
      nr  650  <|@ instruction J (address: [rsi|QWORD[.] + rdx|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr  652  <|@ instruction rdx|QWORD = LEA [rdx|QWORD + 2] size: QWORD <|@ <|@
      nr  654  <|@ instruction JUMP ~[] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    probability 4589942299654852783
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  658  <|@ instruction CMP (x: rdx|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  660  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B72 -> B73 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" 
    xhandlers
    flags 
    probability 4588077639523326214
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  668  <|@ instruction MOV (x: [rsi|QWORD[.] + rdx|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  670  <|@ instruction JUMP ~[] destination: B74 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B60" "B74" "B73" 
    successors "B76" "B77" 
    xhandlers
    flags 
    probability 4594445899282223279
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  674  <|@ instruction rsi|DWORD = DEC r14|DWORD size: DWORD <|@ <|@
      nr  676  <|@ instruction rsi|DWORD = SHL rsi|DWORD y: 2 size: DWORD <|@ <|@
      nr  678  <|@ instruction rbx|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr  680  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  682  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B75 -> B76 falseDestination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B78" 
    xhandlers
    flags 
    probability 4589942299654852783
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  692  <|@ instruction rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  694  <|@ instruction rsi|QWORD[.] = ADD (x: rsi|QWORD[.], y: rbx|QWORD) size: QWORD <|@ <|@
      nr  696  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  698  <|@ instruction rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  700  <|@ instruction rdx|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  702  <|@ instruction rsi|QWORD[*] = SUB (x: rsi|QWORD[*], ~y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr  704  <|@ instruction rsi|QWORD[*] = INC rsi|QWORD[*] size: QWORD <|@ <|@
      nr  706  <|@ instruction JUMP ~[] destination: B77 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B196"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B78" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4589942299654852783
    begin_IR
      LIR
      nr 1740  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 1742  <|@ instruction rsi|QWORD[*] = DEC rsi|QWORD[*] size: QWORD <|@ <|@
      nr 1744  <|@ instruction rdi|QWORD[*] = ADD (x: rdx|QWORD[*], y: r13|QWORD) size: QWORD <|@ <|@
      nr 1746  <|@ instruction rdi|QWORD[*] = ADD (x: rdi|QWORD[*], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr 1748  <|@ instruction MOVB (x: [rdi|QWORD[*]], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 1750  <|@ instruction JUMP ~[] destination: B196 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" "B196" 
    successors "B79" "B196" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4594445899282223279
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  710  <|@ instruction CMP rsi|QWORD[*] y: 1 size: QWORD <|@ <|@
      nr  712  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B78 -> B79 falseDestination: B78 -> B196 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B255"
    from_bci -1
    to_bci -1
    predecessors "B253" 
    successors "B256" "B257" 
    xhandlers
    flags 
    probability 4598554598042880498
    begin_IR
      LIR
      nr 2264  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2266  <|@ instruction r8|QWORD = MOV [r8|DWORD * 8 + 232] size: QWORD <|@ <|@
      nr 2268  <|@ instruction rdi|DWORD = MOV [r8|QWORD + 12] size: DWORD <|@ <|@
      nr 2270  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2272  <|@ instruction rdx|QWORD[*] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2274  <|@ instruction rbx|QWORD = MOVSXD rdi|DWORD size: QWORD <|@ <|@
      nr 2276  <|@ instruction rdi|QWORD = LEA [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 2278  <|@ instruction rsi|QWORD = LEA [rdx|QWORD[*] + r9|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr 2280  <|@ instruction rdx|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr 2282  <|@ instruction rcx|QWORD = MOVE rbx|QWORD moveKind: QWORD <|@ <|@
      nr 2284  <|@ instruction stack:96|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2286  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: ObjectCheckcast(Word,Word,Word,Word,Word)int@0x1068133a0:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 2288  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 2290  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B255 -> B256 falseDestination: B255 -> B257 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B256"
    from_bci -1
    to_bci -1
    predecessors "B255" 
    successors "B258" 
    xhandlers
    flags 
    probability 4598505768261630752
    begin_IR
      LIR
      nr 2292  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2294  <|@ instruction r14|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr 2296  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2298  <|@ instruction JUMP ~[] destination: B256 -> B258 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B259"
    from_bci -1
    to_bci -1
    predecessors "B244" 
    successors "B260" "B320" 
    xhandlers
    flags 
    probability 4597238779374946467
    begin_IR
      LIR
      nr 2338  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2340  <|@ instruction rax|DWORD = SHR r8|DWORD size: DWORD <|@ <|@
      nr 2342  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr 2344  <|@ instruction rsi|DWORD = SUB (x: rax|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr 2346  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr 2348  <|@ instruction r14|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: rdi|DWORD) condition: < <|@ <|@
      nr 2350  <|@ instruction rax|DWORD = LEA [r14|DWORD - 2147483639] size: DWORD <|@ <|@
      nr 2352  <|@ instruction CMP rax|DWORD y: 1 size: DWORD <|@ <|@
      nr 2354  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B259 -> B260 falseDestination: B259 -> B320 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B260"
    from_bci -1
    to_bci -1
    predecessors "B259" 
    successors "B261" "B262" 
    xhandlers
    flags 
    probability 4597238779374946467
    begin_IR
      LIR
      nr 2356  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2358  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr 2360  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B260 -> B261 falseDestination: B260 -> B262 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B262"
    from_bci -1
    to_bci -1
    predecessors "B260" 
    successors "B263" "B264" 
    xhandlers
    flags 
    probability 4597238779374946467
    begin_IR
      LIR
      nr 2370  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2372  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr 2374  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr 2376  <|@ instruction r11|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr 2378  <|@ instruction rdx|DWORD = SHL r14|DWORD y: 2 size: DWORD <|@ <|@
      nr 2380  <|@ instruction rdx|DWORD = LEA [rdx|DWORD + 23] size: DWORD <|@ <|@
      nr 2382  <|@ instruction rdx|DWORD = AND rdx|DWORD y: -8 size: DWORD <|@ <|@
      nr 2384  <|@ instruction rdx|QWORD = MOVSXD rdx|DWORD size: QWORD <|@ <|@
      nr 2386  <|@ instruction rcx|QWORD = ADD (x: rdx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr 2388  <|@ instruction CMP (x: rcx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 2390  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B262 -> B263 falseDestination: B262 -> B264 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B264"
    from_bci -1
    to_bci -1
    predecessors "B262" 
    successors "B265" 
    xhandlers
    flags 
    probability 4597158071784102356
    begin_IR
      LIR
      nr 2424  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2426  <|@ instruction MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD <|@ <|@
      nr 2428  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr 2430  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr 2432  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr 2434  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr 2436  <|@ instruction MOV (x: [rax|QWORD + 12], y: r14|DWORD) size: DWORD <|@ <|@
      nr 2438  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr 2440  <|@ instruction MOV (x: [rax|QWORD + 8], y: r11|DWORD) size: DWORD <|@ <|@
      nr 2442  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr 2444  <|@ instruction r11|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2446  <|@ instruction JUMP ~[] destination: B264 -> B265 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B265"
    from_bci -1
    to_bci -1
    predecessors "B264" "B263" 
    successors "B266" "B267" 
    xhandlers
    flags 
    probability 4597238779374946466
    begin_IR
      LIR
      nr 2448  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2450  <|@ instruction CMP (x: r14|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr 2452  <|@ instruction rax|DWORD = CMOVE (falseValue: r14|DWORD, ~trueValue: r8|DWORD) condition: > <|@ <|@
      nr 2454  <|@ instruction rdi|QWORD = MOVSXD rax|DWORD size: QWORD <|@ <|@
      nr 2456  <|@ instruction CMP rdi|QWORD y: 1 size: QWORD <|@ <|@
      nr 2458  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B265 -> B266 falseDestination: B265 -> B267 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B267"
    from_bci -1
    to_bci -1
    predecessors "B265" 
    successors "B268" "B269" 
    xhandlers
    flags 
    probability 4592735179747575970
    begin_IR
      LIR
      nr 2468  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2470  <|@ instruction rsi|QWORD[.] = LEA [r11|QWORD[.] + 16] size: QWORD <|@ <|@
      nr 2472  <|@ instruction rdx|QWORD[*] = LEA [r10|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr 2474  <|@ instruction r10|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr 2476  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 2478  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B267 -> B268 falseDestination: B267 -> B269 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B268"
    from_bci -1
    to_bci -1
    predecessors "B267" 
    successors "B272" 
    xhandlers
    flags 
    probability 4590717489976473210
    begin_IR
      LIR
      nr 2480  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2482  <|@ instruction rbx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 2484  <|@ instruction rcx|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr 2486  <|@ instruction r8|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2488  <|@ instruction JUMP ~[] destination: B268 -> B272 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B272"
    from_bci -1
    to_bci -1
    predecessors "B268" "B271" 
    successors "B273" "B274" 
    xhandlers
    flags 
    probability 4592735179747575970
    begin_IR
      LIR
      nr 2516  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2518  <|@ instruction r10|QWORD = LEA [rdi|QWORD - 4] size: QWORD <|@ <|@
      nr 2520  <|@ instruction CMP (x: rbx|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 2522  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B272 -> B273 falseDestination: B272 -> B274 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B274"
    from_bci -1
    to_bci -1
    predecessors "B272" 
    successors "B275" 
    xhandlers
    flags 
    probability 4590717489976473210
    begin_IR
      LIR
      nr 2528  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2530  <|@ instruction xmm0|V128_DWORD[....] = H [rdx|QWORD[*] + rbx|QWORD * 4] nZ: XMM oh: VMOVDQU <|@ <|@
      nr 2532  <|@ instruction J (address: [rsi|QWORD[.] + rbx|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr 2534  <|@ instruction r10|QWORD = LEA [rbx|QWORD + 4] size: QWORD <|@ <|@
      nr 2536  <|@ instruction rbx|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 2538  <|@ instruction JUMP ~[] destination: B274 -> B275 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B275"
    from_bci -1
    to_bci -1
    predecessors "B274" "B273" 
    successors "B276" "B277" 
    xhandlers
    flags 
    probability 4592735179747575970
    begin_IR
      LIR
      nr 2540  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2542  <|@ instruction r10|QWORD = LEA [rdi|QWORD - 2] size: QWORD <|@ <|@
      nr 2544  <|@ instruction CMP (x: rbx|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 2546  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B275 -> B276 falseDestination: B275 -> B277 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B277"
    from_bci -1
    to_bci -1
    predecessors "B275" 
    successors "B278" 
    xhandlers
    flags 
    probability 4590717489976473210
    begin_IR
      LIR
      nr 2552  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2554  <|@ instruction xmm0|V64_DWORD[..] = H [rdx|QWORD[*] + rbx|QWORD * 4] nZ: XMM oh: VMOVQ <|@ <|@
      nr 2556  <|@ instruction J (address: [rsi|QWORD[.] + rbx|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr 2558  <|@ instruction r10|QWORD = LEA [rbx|QWORD + 2] size: QWORD <|@ <|@
      nr 2560  <|@ instruction rbx|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 2562  <|@ instruction JUMP ~[] destination: B277 -> B278 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B278"
    from_bci -1
    to_bci -1
    predecessors "B277" "B276" 
    successors "B279" "B280" 
    xhandlers
    flags 
    probability 4592735179747575970
    begin_IR
      LIR
      nr 2564  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2566  <|@ instruction r10|QWORD = DEC rdi|QWORD size: QWORD <|@ <|@
      nr 2568  <|@ instruction CMP (x: rbx|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 2570  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B278 -> B279 falseDestination: B278 -> B280 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B280"
    from_bci -1
    to_bci -1
    predecessors "B278" 
    successors "B281" 
    xhandlers
    flags 
    probability 4590717489976473210
    begin_IR
      LIR
      nr 2576  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2578  <|@ instruction rdx|DWORD[.] = MOV [rdx|QWORD[*] + rbx|QWORD * 4] size: DWORD <|@ <|@
      nr 2580  <|@ instruction MOV (x: [rsi|QWORD[.] + rbx|QWORD * 4], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr 2582  <|@ instruction JUMP ~[] destination: B280 -> B281 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B281"
    from_bci -1
    to_bci -1
    predecessors "B266" "B280" "B279" 
    successors "B282" "B297" 
    xhandlers
    flags 
    probability 4597238779374946466
    begin_IR
      LIR
      nr 2584  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2586  <|@ instruction rsi|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr 2588  <|@ instruction CMP (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr 2590  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B281 -> B282 falseDestination: B281 -> B297 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B297"
    from_bci -1
    to_bci -1
    predecessors "B281" 
    successors "B298" 
    xhandlers
    flags 
    probability 4592735179747575970
    begin_IR
      LIR
      nr 2702  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2704  <|@ instruction JUMP ~[] destination: B297 -> B298 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B298"
    from_bci -1
    to_bci -1
    predecessors "B297" "B295" "B294" 
    successors "B299" "B300" 
    xhandlers
    flags 
    probability 4597238779374946466
    begin_IR
      LIR
      nr 2706  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2708  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr 2710  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B298 -> B299 falseDestination: B298 -> B300 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B300"
    from_bci -1
    to_bci -1
    predecessors "B298" 
    successors "B301" 
    xhandlers
    flags 
    probability 4592735179747575970
    begin_IR
      LIR
      nr 2718  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2720  <|@ instruction rdi|DWORD = DEC r14|DWORD size: DWORD <|@ <|@
      nr 2722  <|@ instruction rdi|DWORD = SHL rdi|DWORD y: 2 size: DWORD <|@ <|@
      nr 2724  <|@ instruction rdi|QWORD = MOVSXD rdi|DWORD size: QWORD <|@ <|@
      nr 2726  <|@ instruction rsi|QWORD[.] = LEA [r11|QWORD[.] + 16] size: QWORD <|@ <|@
      nr 2728  <|@ instruction rsi|QWORD[.] = ADD (x: rsi|QWORD[.], y: rdi|QWORD) size: QWORD <|@ <|@
      nr 2730  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 2732  <|@ instruction rdi|QWORD[.] = LEA [r11|QWORD[.] + 16] size: QWORD <|@ <|@
      nr 2734  <|@ instruction rdi|QWORD[*] = SHR rdi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 2736  <|@ instruction rsi|QWORD[*] = SUB (x: rsi|QWORD[*], ~y: rdi|QWORD[*]) size: QWORD <|@ <|@
      nr 2738  <|@ instruction rsi|QWORD[*] = INC rsi|QWORD[*] size: QWORD <|@ <|@
      nr 2740  <|@ instruction JUMP ~[] destination: B300 -> B301 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B318"
    from_bci -1
    to_bci -1
    predecessors "B301" 
    successors "B301" 
    xhandlers
    flags "lle" 
    loop_index 16
    loop_depth 1
    probability 4592735179747575970
    begin_IR
      LIR
      nr 2922  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 2924  <|@ instruction rsi|QWORD[*] = DEC rsi|QWORD[*] size: QWORD <|@ <|@
      nr 2926  <|@ instruction rdx|QWORD[*] = ADD (x: rdi|QWORD[*], y: r13|QWORD) size: QWORD <|@ <|@
      nr 2928  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD[*], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr 2930  <|@ instruction MOVB (x: [rdx|QWORD[*]], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 2932  <|@ instruction JUMP ~[] destination: B318 -> B301 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B301"
    from_bci -1
    to_bci -1
    predecessors "B300" "B318" 
    successors "B302" "B318" 
    xhandlers
    flags "llh" 
    loop_index 16
    loop_depth 1
    probability 4597238779374946466
    begin_IR
      LIR
      nr 2742  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2744  <|@ instruction CMP rsi|QWORD[*] y: 1 size: QWORD <|@ <|@
      nr 2746  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B301 -> B302 falseDestination: B301 -> B318 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B240"
    from_bci -1
    to_bci -1
    predecessors "B239" 
    successors "B241" "B242" 
    xhandlers
    flags 
    probability 4596604302576984052
    begin_IR
      LIR
      nr 2136  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2138  <|@ instruction CMP rdi|DWORD y: 11 size: DWORD <|@ <|@
      nr 2140  <|@ instruction BRANCH trueDestinationProbability: 0.7356387781002678 condition: < trueDestination: B240 -> B241 falseDestination: B240 -> B242 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B241"
    from_bci -1
    to_bci -1
    predecessors "B240" 
    successors "B244" 
    xhandlers
    flags 
    probability 4594638437905347158
    begin_IR
      LIR
      nr 2142  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2144  <|@ instruction rdi|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr 2146  <|@ instruction JUMP ~[] destination: B241 -> B244 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B199"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B200" "B238" 
    xhandlers
    flags 
    probability 4594332962369002089
    begin_IR
      LIR
      nr 1764  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1766  <|@ instruction CMP rcx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Collections$CopiesList;, resolved>;compressed} <|@ <|@
      nr 1768  <|@ instruction BRANCH trueDestinationProbability: 0.9487693188322834 condition: = trueDestination: B199 -> B200 falseDestination: B199 -> B238 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B200"
    from_bci -1
    to_bci -1
    predecessors "B199" 
    successors "B201" "B202" 
    xhandlers
    flags 
    probability 4594068358868130440
    begin_IR
      LIR
      nr 1770  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1772  <|@ instruction r14|DWORD = MOV [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1774  <|@ instruction r10|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr 1776  <|@ instruction r11|QWORD = DEC r10|QWORD size: QWORD <|@ <|@
      nr 1778  <|@ instruction CMP r14|DWORD y: 1 size: DWORD <|@ <|@
      nr 1780  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B200 -> B201 falseDestination: B200 -> B202 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B202"
    from_bci -1
    to_bci -1
    predecessors "B200" 
    successors "B203" "B236" 
    xhandlers
    flags 
    probability 4589564759240759944
    begin_IR
      LIR
      nr 1786  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1788  <|@ instruction CMP (x: r10|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr 1790  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B202 -> B203 falseDestination: B202 -> B236 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B203"
    from_bci -1
    to_bci -1
    predecessors "B202" 
    successors "B204" 
    xhandlers
    flags 
    probability 4589564759240759944
    begin_IR
      LIR
      nr 1792  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1794  <|@ instruction JUMP ~[] destination: B203 -> B204 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B204"
    from_bci -1
    to_bci -1
    predecessors "B201" "B203" 
    successors "B205" "B206" 
    xhandlers
    flags 
    probability 4594068358868130440
    begin_IR
      LIR
      nr 1796  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1798  <|@ instruction r8|DWORD[.] = MOV [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1800  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, stack:80, stack:88]
live-base-pointers: []
java.util.ArrayList.addAll(ArrayList.java:581) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r8|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr 1802  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr 1804  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B204 -> B205 falseDestination: B204 -> B206 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B206"
    from_bci -1
    to_bci -1
    predecessors "B204" 
    successors "B207" "B210" 
    xhandlers
    flags 
    probability 4594068358868130440
    begin_IR
      LIR
      nr 1814  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1816  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr 1818  <|@ instruction r9|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr 1820  <|@ instruction CMP r14|DWORD y: 16777215 size: DWORD <|@ <|@
      nr 1822  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B206 -> B207 falseDestination: B206 -> B210 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B207"
    from_bci -1
    to_bci -1
    predecessors "B206" 
    successors "B208" "B209" 
    xhandlers
    flags 
    probability 4593485030102835957
    begin_IR
      LIR
      nr 1824  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1826  <|@ instruction rbx|DWORD = SHL r14|DWORD y: 2 size: DWORD <|@ <|@
      nr 1828  <|@ instruction rbx|DWORD = LEA [rbx|DWORD + 23] size: DWORD <|@ <|@
      nr 1830  <|@ instruction rbx|DWORD = AND rbx|DWORD y: -8 size: DWORD <|@ <|@
      nr 1832  <|@ instruction rbx|QWORD = MOVSXD rbx|DWORD size: QWORD <|@ <|@
      nr 1834  <|@ instruction rdi|QWORD = ADD (x: rbx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr 1836  <|@ instruction CMP (x: rdi|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr 1838  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B207 -> B208 falseDestination: B207 -> B209 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B209"
    from_bci -1
    to_bci -1
    predecessors "B207" 
    successors "B212" 
    xhandlers
    flags 
    probability 4593396824008439247
    begin_IR
      LIR
      nr 1848  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1850  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdi|QWORD) size: QWORD <|@ <|@
      nr 1852  <|@ instruction AMD64PREFETCH ~[rbx|QWORD + rcx|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr 1854  <|@ instruction AMD64PREFETCH ~[rbx|QWORD + rcx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr 1856  <|@ instruction AMD64PREFETCH ~[rbx|QWORD + rcx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr 1858  <|@ instruction AMD64PREFETCH ~[rbx|QWORD + rcx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr 1860  <|@ instruction MOV (x: [rcx|QWORD + 12], y: r14|DWORD) size: DWORD <|@ <|@
      nr 1862  <|@ instruction MOV [rcx|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1864  <|@ instruction MOV [rcx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr 1866  <|@ instruction rcx|QWORD[.] = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr 1868  <|@ instruction rax|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1870  <|@ instruction stack:96|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr 1872  <|@ instruction stack:80|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 1874  <|@ instruction r13|DWORD[.] = MOVE r8|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1876  <|@ instruction JUMP ~[] destination: B209 -> B212 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B212"
    from_bci -1
    to_bci -1
    predecessors "B209" "B211" 
    successors "B213" "B214" 
    xhandlers
    flags 
    probability 4594068358868130440
    begin_IR
      LIR
      nr 1900  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1902  <|@ instruction CMP r14|DWORD y: 1 size: DWORD <|@ <|@
      nr 1904  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B212 -> B213 falseDestination: B212 -> B214 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B214"
    from_bci -1
    to_bci -1
    predecessors "B212" 
    successors "B215" "B216" 
    xhandlers
    flags 
    probability 4589564759240759944
    begin_IR
      LIR
      nr 1910  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1912  <|@ instruction r10|QWORD = MOVE stack:80|QWORD moveKind: QWORD <|@ <|@
      nr 1914  <|@ instruction rdi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr 1916  <|@ instruction xmm0|V128_DWORD[.   ] = H r13|DWORD[.] <|@ <|@
      nr 1918  <|@ instruction xmm0|V256_DWORD[........] = VPBROADCASTD xmm0|V128_DWORD[.   ] nZ: YMM <|@ <|@
      nr 1920  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr 1922  <|@ instruction TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1924  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B214 -> B215 falseDestination: B214 -> B216 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B215"
    from_bci -1
    to_bci -1
    predecessors "B214" 
    successors "B219" 
    xhandlers
    flags 
    probability 4587511328902186956
    begin_IR
      LIR
      nr 1926  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1928  <|@ instruction rdx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1930  <|@ instruction JUMP ~[] destination: B215 -> B219 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B219"
    from_bci -1
    to_bci -1
    predecessors "B215" "B218" 
    successors "B220" "B221" 
    xhandlers
    flags 
    probability 4589564759240759944
    begin_IR
      LIR
      nr 1952  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1954  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 4] size: QWORD <|@ <|@
      nr 1956  <|@ instruction CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1958  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B219 -> B220 falseDestination: B219 -> B221 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B221"
    from_bci -1
    to_bci -1
    predecessors "B219" 
    successors "B222" 
    xhandlers
    flags 
    probability 4587511328902186956
    begin_IR
      LIR
      nr 1964  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1966  <|@ instruction xmm1|V128_DWORD[....] = VMOVE xmm0|V256_DWORD[........] <|@ <|@
      nr 1968  <|@ instruction J (address: [rdi|QWORD[.] + rdx|QWORD * 4], input: xmm1|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr 1970  <|@ instruction rsi|QWORD = LEA [rdx|QWORD + 4] size: QWORD <|@ <|@
      nr 1972  <|@ instruction rdx|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 1974  <|@ instruction JUMP ~[] destination: B221 -> B222 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B222"
    from_bci -1
    to_bci -1
    predecessors "B221" "B220" 
    successors "B223" "B224" 
    xhandlers
    flags 
    probability 4589564759240759944
    begin_IR
      LIR
      nr 1976  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1978  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 2] size: QWORD <|@ <|@
      nr 1980  <|@ instruction CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1982  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B222 -> B223 falseDestination: B222 -> B224 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B224"
    from_bci -1
    to_bci -1
    predecessors "B222" 
    successors "B225" 
    xhandlers
    flags 
    probability 4587511328902186956
    begin_IR
      LIR
      nr 1988  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1990  <|@ instruction xmm0|V64_DWORD[..] = VMOVE xmm0|V256_DWORD[........] <|@ <|@
      nr 1992  <|@ instruction J (address: [rdi|QWORD[.] + rdx|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr 1994  <|@ instruction rsi|QWORD = LEA [rdx|QWORD + 2] size: QWORD <|@ <|@
      nr 1996  <|@ instruction rdx|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 1998  <|@ instruction JUMP ~[] destination: B224 -> B225 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B225"
    from_bci -1
    to_bci -1
    predecessors "B224" "B223" 
    successors "B226" "B227" 
    xhandlers
    flags 
    probability 4589564759240759944
    begin_IR
      LIR
      nr 2000  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2002  <|@ instruction CMP (x: rdx|QWORD, y: stack:96|QWORD) size: QWORD <|@ <|@
      nr 2004  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B225 -> B226 falseDestination: B225 -> B227 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B227"
    from_bci -1
    to_bci -1
    predecessors "B225" 
    successors "B228" 
    xhandlers
    flags 
    probability 4587511328902186956
    begin_IR
      LIR
      nr 2010  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2012  <|@ instruction MOV (x: [rdi|QWORD[.] + rdx|QWORD * 4], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr 2014  <|@ instruction JUMP ~[] destination: B227 -> B228 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B228"
    from_bci -1
    to_bci -1
    predecessors "B213" "B227" "B226" 
    successors "B229" "B230" 
    xhandlers
    flags 
    probability 4594068358868130440
    begin_IR
      LIR
      nr 2016  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2018  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr 2020  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B228 -> B229 falseDestination: B228 -> B230 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B230"
    from_bci -1
    to_bci -1
    predecessors "B228" 
    successors "B231" 
    xhandlers
    flags 
    probability 4589564759240759944
    begin_IR
      LIR
      nr 2028  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2030  <|@ instruction rdi|DWORD = DEC r14|DWORD size: DWORD <|@ <|@
      nr 2032  <|@ instruction rdi|DWORD = SHL rdi|DWORD y: 2 size: DWORD <|@ <|@
      nr 2034  <|@ instruction rdi|QWORD = MOVSXD rdi|DWORD size: QWORD <|@ <|@
      nr 2036  <|@ instruction rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr 2038  <|@ instruction rsi|QWORD[.] = ADD (x: rsi|QWORD[.], y: rdi|QWORD) size: QWORD <|@ <|@
      nr 2040  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 2042  <|@ instruction rdi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr 2044  <|@ instruction rdi|QWORD[*] = SHR rdi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 2046  <|@ instruction rsi|QWORD[*] = SUB (x: rsi|QWORD[*], ~y: rdi|QWORD[*]) size: QWORD <|@ <|@
      nr 2048  <|@ instruction rsi|QWORD[*] = INC rsi|QWORD[*] size: QWORD <|@ <|@
      nr 2050  <|@ instruction r13|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr 2052  <|@ instruction JUMP ~[] destination: B230 -> B231 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B234"
    from_bci -1
    to_bci -1
    predecessors "B231" 
    successors "B231" 
    xhandlers
    flags "lle" 
    loop_index 13
    loop_depth 1
    probability 4589564759240759944
    begin_IR
      LIR
      nr 2070  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 2072  <|@ instruction rsi|QWORD[*] = DEC rsi|QWORD[*] size: QWORD <|@ <|@
      nr 2074  <|@ instruction rdx|QWORD[*] = ADD (x: rdi|QWORD[*], y: r13|QWORD) size: QWORD <|@ <|@
      nr 2076  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD[*], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr 2078  <|@ instruction MOVB (x: [rdx|QWORD[*]], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 2080  <|@ instruction JUMP ~[] destination: B234 -> B231 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B231"
    from_bci -1
    to_bci -1
    predecessors "B230" "B234" 
    successors "B232" "B234" 
    xhandlers
    flags "llh" 
    loop_index 13
    loop_depth 1
    probability 4594068358868130440
    begin_IR
      LIR
      nr 2054  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2056  <|@ instruction CMP rsi|QWORD[*] y: 1 size: QWORD <|@ <|@
      nr 2058  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B231 -> B232 falseDestination: B231 -> B234 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B302"
    from_bci -1
    to_bci -1
    predecessors "B301" 
    successors "B303" 
    xhandlers
    flags 
    probability 4592735179747575970
    begin_IR
      LIR
      nr 2748  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2750  <|@ instruction r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr 2752  <|@ instruction JUMP ~[] destination: B302 -> B303 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B303"
    from_bci -1
    to_bci -1
    predecessors "B299" "B302" 
    successors "B304" "B305" 
    xhandlers
    flags 
    probability 4597238779374946466
    begin_IR
      LIR
      nr 2754  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2756  <|@ instruction rdi|DWORD[.] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@eef3a58 encoding: base: 0 shift: 3 <|@ <|@
      nr 2758  <|@ instruction MOV (x: [r8|QWORD[.] + 20], y: rdi|DWORD[.]) size: DWORD <|@ <|@
      nr 2760  <|@ instruction rsi|QWORD[*] = SHR r8|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 2762  <|@ instruction MOVB (x: [rsi|QWORD[*] + r13|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 2764  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 2766  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B303 -> B304 falseDestination: B303 -> B305 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B305"
    from_bci -1
    to_bci -1
    predecessors "B303" 
    successors "B306" "B307" 
    xhandlers
    flags 
    probability 4597158071784102356
    begin_IR
      LIR
      nr 2772  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2774  <|@ instruction CMP (x: rcx|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 2776  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B305 -> B306 falseDestination: B305 -> B307 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B307"
    from_bci -1
    to_bci -1
    predecessors "B305" 
    successors "B308" "B310" 
    xhandlers
    flags 
    probability 4597078171269166687
    begin_IR
      LIR
      nr 2782  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2784  <|@ instruction r14|DWORD = SUB (x: r14|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 2786  <|@ instruction CMP (x: r10|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr 2788  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B307 -> B308 falseDestination: B307 -> B310 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B310"
    from_bci -1
    to_bci -1
    predecessors "B307" 
    successors "B311" "B312" 
    xhandlers
    flags 
    probability 4596999069759380374
    begin_IR
      LIR
      nr 2802  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2804  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr 2806  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B310 -> B311 falseDestination: B310 -> B312 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B312"
    from_bci -1
    to_bci -1
    predecessors "B310" 
    successors "B313" "B314" 
    xhandlers
    flags 
    probability 4596215964812495879
    begin_IR
      LIR
      nr 2816  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2818  <|@ instruction rax|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2820  <|@ instruction rdi|DWORD = MOV [rax|QWORD[.] + 8] size: DWORD <|@ <|@
      nr 2822  <|@ instruction r9|DWORD = MOV [r11|QWORD[.] + 8] size: DWORD <|@ <|@
      nr 2824  <|@ instruction rbx|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr 2826  <|@ instruction rdx|QWORD = MOV rcx|DWORD size: DWORD <|@ <|@
      nr 2828  <|@ instruction CMP (x: r9|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr 2830  <|@ instruction BRANCH trueDestinationProbability: 0.6 condition: = trueDestination: B312 -> B313 falseDestination: B312 -> B314 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B313"
    from_bci -1
    to_bci -1
    predecessors "B312" 
    successors "B317" 
    xhandlers
    flags 
    probability 4593121954089517474
    begin_IR
      LIR
      nr 2832  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2834  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2836  <|@ instruction r11|QWORD[*] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2838  <|@ instruction rdi|QWORD = LEA [rax|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 2840  <|@ instruction rsi|QWORD = LEA [r11|QWORD[*] + rbx|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr 2842  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: ObjectArraycopyKillAny(Word,Word,Word)void@0x106813120:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 2844  <|@ instruction r14|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr 2846  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2848  <|@ instruction JUMP ~[] destination: B313 -> B317 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B317"
    from_bci -1
    to_bci -1
    predecessors "B311" "B313" "B315" "B316" 
    successors 
    xhandlers
    flags 
    probability 4596999069759380374
    begin_IR
      LIR
      nr 2910  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2912  <|@ instruction rax|DWORD = ADD (x: r14|DWORD, ~y: [rsi|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr 2914  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr 2916  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr 2918  <|@ instruction rax|DWORD = SETCC condition: != <|@ <|@
      nr 2920  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B266"
    from_bci -1
    to_bci -1
    predecessors "B265" 
    successors "B281" 
    xhandlers
    flags 
    probability 4592735179747575970
    begin_IR
      LIR
      nr 2460  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2462  <|@ instruction rcx|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr 2464  <|@ instruction r8|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2466  <|@ instruction JUMP ~[] destination: B266 -> B281 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B282"
    from_bci -1
    to_bci -1
    predecessors "B281" 
    successors "B283" "B284" 
    xhandlers
    flags 
    probability 4592735179747575970
    begin_IR
      LIR
      nr 2592  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2594  <|@ instruction rdx|QWORD[.] = LEA [r11|QWORD[.] + rdi|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr 2596  <|@ instruction rsi|QWORD = SUB (x: rsi|QWORD, ~y: rdi|QWORD) size: QWORD <|@ <|@
      nr 2598  <|@ instruction rdi|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr 2600  <|@ instruction TEST (x: rdi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr 2602  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B282 -> B283 falseDestination: B282 -> B284 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B283"
    from_bci -1
    to_bci -1
    predecessors "B282" 
    successors "B287" 
    xhandlers
    flags 
    probability 4590717489976473210
    begin_IR
      LIR
      nr 2604  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2606  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 2608  <|@ instruction JUMP ~[] destination: B283 -> B287 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B287"
    from_bci -1
    to_bci -1
    predecessors "B283" "B286" 
    successors "B288" "B289" 
    xhandlers
    flags 
    probability 4592735179747575970
    begin_IR
      LIR
      nr 2632  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2634  <|@ instruction rdi|QWORD = LEA [rsi|QWORD - 4] size: QWORD <|@ <|@
      nr 2636  <|@ instruction CMP (x: r10|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr 2638  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B287 -> B288 falseDestination: B287 -> B289 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B289"
    from_bci -1
    to_bci -1
    predecessors "B287" 
    successors "B290" 
    xhandlers
    flags 
    probability 4590717489976473210
    begin_IR
      LIR
      nr 2644  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2646  <|@ instruction xmm0|V128_DWORD[....] = L oc: SIMD<null,null,null,null> <|@ <|@
      nr 2648  <|@ instruction J (address: [rdx|QWORD[.] + r10|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr 2650  <|@ instruction rdi|QWORD = LEA [r10|QWORD + 4] size: QWORD <|@ <|@
      nr 2652  <|@ instruction r10|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr 2654  <|@ instruction JUMP ~[] destination: B289 -> B290 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B290"
    from_bci -1
    to_bci -1
    predecessors "B289" "B288" 
    successors "B291" "B292" 
    xhandlers
    flags 
    probability 4592735179747575970
    begin_IR
      LIR
      nr 2656  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2658  <|@ instruction rdi|QWORD = LEA [rsi|QWORD - 2] size: QWORD <|@ <|@
      nr 2660  <|@ instruction CMP (x: r10|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr 2662  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B290 -> B291 falseDestination: B290 -> B292 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B292"
    from_bci -1
    to_bci -1
    predecessors "B290" 
    successors "B293" 
    xhandlers
    flags 
    probability 4590717489976473210
    begin_IR
      LIR
      nr 2668  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2670  <|@ instruction xmm0|V64_DWORD[..] = L oc: SIMD<null,null> <|@ <|@
      nr 2672  <|@ instruction J (address: [rdx|QWORD[.] + r10|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr 2674  <|@ instruction rdi|QWORD = LEA [r10|QWORD + 2] size: QWORD <|@ <|@
      nr 2676  <|@ instruction r10|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr 2678  <|@ instruction JUMP ~[] destination: B292 -> B293 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B293"
    from_bci -1
    to_bci -1
    predecessors "B292" "B291" 
    successors "B294" "B295" 
    xhandlers
    flags 
    probability 4592735179747575970
    begin_IR
      LIR
      nr 2680  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2682  <|@ instruction rsi|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr 2684  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 2686  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B293 -> B294 falseDestination: B293 -> B295 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B295"
    from_bci -1
    to_bci -1
    predecessors "B293" 
    successors "B298" 
    xhandlers
    flags 
    probability 4590717489976473210
    begin_IR
      LIR
      nr 2692  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2694  <|@ instruction MOV (x: [rdx|QWORD[.] + r10|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr 2696  <|@ instruction JUMP ~[] destination: B295 -> B298 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B299"
    from_bci -1
    to_bci -1
    predecessors "B298" 
    successors "B303" 
    xhandlers
    flags 
    probability 4592735179747575970
    begin_IR
      LIR
      nr 2712  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2714  <|@ instruction r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr 2716  <|@ instruction JUMP ~[] destination: B299 -> B303 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4591060914650367290
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  202  <|@ instruction JUMP ~[] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4591060914650367290
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  178  <|@ instruction JUMP ~[] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4591060914650367290
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  318  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4591060914650367290
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  294  <|@ instruction JUMP ~[] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4591060914650367290
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  264  <|@ instruction xmm0|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null> <|@ <|@
      nr  266  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  268  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4598468990408307692
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  352  <|@ instruction JUMP ~[] destination: B37 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B37" 
    successors "B27" "B37" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4600068113905108282
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  272  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  274  <|@ instruction r9|QWORD = LEA [r9|QWORD + 8] size: QWORD <|@ <|@
      nr  276  <|@ instruction CMP (x: r9|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  278  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4591060914650367290
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  226  <|@ instruction JUMP ~[] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    probability 4591060914650367290
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  282  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B39" 
    xhandlers
    flags 
    probability 4591060914650367290
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  342  <|@ instruction JUMP ~[] destination: B35 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4591060914650367290
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  148  <|@ instruction rbx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  150  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4598468990408307692
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  424  <|@ instruction JUMP ~[] destination: B46 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B46" 
    successors "B12" "B46" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4600068113905108282
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  154  <|@ instruction xmm0|V256_DWORD[........] = H [r9|QWORD[*] + rbx|QWORD * 4] nZ: YMM oh: VMOVDQU <|@ <|@
      nr  156  <|@ instruction J (address: [r8|QWORD[.] + rbx|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  158  <|@ instruction rbx|QWORD = LEA [rbx|QWORD + 8] size: QWORD <|@ <|@
      nr  160  <|@ instruction CMP (x: rbx|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  162  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B11 -> B12 falseDestination: B11 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4591060914650367290
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B314"
    from_bci -1
    to_bci -1
    predecessors "B312" 
    successors "B315" "B316" 
    xhandlers
    flags 
    probability 4590302776280733292
    begin_IR
      LIR
      nr 2850  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2852  <|@ instruction r8|QWORD = MOV [r9|DWORD * 8 + 232] size: QWORD <|@ <|@
      nr 2854  <|@ instruction rdi|DWORD = MOV [r8|QWORD + 12] size: DWORD <|@ <|@
      nr 2856  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2858  <|@ instruction rcx|QWORD[*] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2860  <|@ instruction r9|QWORD = MOVSXD rdi|DWORD size: QWORD <|@ <|@
      nr 2862  <|@ instruction rdi|QWORD = LEA [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 2864  <|@ instruction rsi|QWORD = LEA [rcx|QWORD[*] + rbx|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr 2866  <|@ instruction rcx|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr 2868  <|@ instruction stack:56|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2870  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: ObjectCheckcast(Word,Word,Word,Word,Word)int@0x1068133a0:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 2872  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 2874  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B314 -> B315 falseDestination: B314 -> B316 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B315"
    from_bci -1
    to_bci -1
    predecessors "B314" 
    successors "B317" 
    xhandlers
    flags 
    probability 4590246392724557608
    begin_IR
      LIR
      nr 2876  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2878  <|@ instruction r14|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr 2880  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2882  <|@ instruction JUMP ~[] destination: B315 -> B317 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B252"
    from_bci -1
    to_bci -1
    predecessors "B251" 
    successors "B258" 
    xhandlers
    flags 
    probability 4590089951913136680
    begin_IR
      LIR
      nr 2224  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2226  <|@ instruction JUMP ~[] destination: B252 -> B258 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B80" 
    xhandlers
    flags 
    probability 4589942299654852783
    begin_IR
      LIR
      nr  684  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  686  <|@ instruction rdi|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD <|@ <|@
      nr  688  <|@ instruction JUMP ~[] destination: B76 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B76" "B79" 
    successors "B81" "B195" 
    xhandlers
    flags 
    probability 4594445899282223279
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  722  <|@ instruction rdx|DWORD = MOV [rdi|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  724  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<AbstractList.listIterator(int)>} <|@ <|@
      nr  726  <|@ instruction CMP (x: rsi|QWORD, y: [rdx|DWORD * 8 + 696]) size: QWORD <|@ <|@
      nr  728  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B195 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B82" "B85" 
    xhandlers
    flags 
    probability 4594445899282223279
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  732  <|@ instruction CMP rdx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@ <|@
      nr  734  <|@ instruction BRANCH trueDestinationProbability: 0.5468793050355748 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B83" "B84" 
    xhandlers
    flags 
    probability 4590437146253237157
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  738  <|@ instruction rsi|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  740  <|@ instruction rbp|DWORD[.] = MOV [rdi|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  742  <|@ st <@st|@reference-map: [rax:0, rdi:0, stack:68, stack:80, stack:88]
live-base-pointers: []
java.util.ArrayList.addAll(ArrayList.java:581) [bci: 0]
locals: stack:40|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction CMP (x: rsi|DWORD, y: [rbp|DWORD[.] * 8 + 12]) size: DWORD state [bci:0] <|@ <|@
      nr  744  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B82 -> B83 falseDestination: B82 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B93" 
    xhandlers
    flags 
    probability 4590437146253237157
    begin_IR
      LIR
      nr  758  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  760  <|@ instruction JUMP ~[] destination: B84 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" "B84" "B87" 
    successors "B94" "B135" 
    xhandlers
    flags 
    probability 4594445899282223279
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  822  <|@ instruction rbp|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr  824  <|@ instruction CMP rdx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@ <|@
      nr  826  <|@ instruction BRANCH trueDestinationProbability: 0.9304948647614187 condition: = trueDestination: B93 -> B94 falseDestination: B93 -> B135 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B95" "B96" 
    xhandlers
    flags 
    probability 4594079059589133148
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  830  <|@ instruction rdx|DWORD[.] = MOV [rdi|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  832  <|@ instruction TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr  834  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B94 -> B95 falseDestination: B94 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" "B98" 
    xhandlers
    flags 
    probability 4594079059589133148
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  852  <|@ instruction CMP r14|DWORD y: 1 size: DWORD <|@ <|@
      nr  854  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B96 -> B97 falseDestination: B96 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B99" "B134" 
    xhandlers
    flags 
    probability 4589575459961762652
    begin_IR
      LIR
      nr  862  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  864  <|@ instruction stack:80|QWORD = MOVE rbx|QWORD moveKind: QWORD <|@ <|@
      nr  866  <|@ instruction rdi|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  868  <|@ instruction r13|QWORD = ADD (x: rbp|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  870  <|@ instruction rbx|QWORD = MOV rdi|DWORD size: DWORD <|@ <|@
      nr  872  <|@ instruction CMP (x: rbx|QWORD, y: r13|QWORD) size: QWORD <|@ <|@
      nr  874  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B98 -> B99 falseDestination: B98 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B100" "B133" 
    xhandlers
    flags 
    probability 4589575459961762652
    begin_IR
      LIR
      nr  876  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  878  <|@ instruction CMP (x: rdi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  880  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B99 -> B100 falseDestination: B99 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B101" 
    xhandlers
    flags 
    probability 4589575459961762652
    begin_IR
      LIR
      nr  882  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  884  <|@ instruction JUMP ~[] destination: B100 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B97" "B100" 
    successors "B102" "B103" 
    xhandlers
    flags 
    probability 4594079059589133148
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  888  <|@ instruction CMP r14|DWORD y: 1 size: DWORD <|@ <|@
      nr  890  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B101 -> B102 falseDestination: B101 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" "B132" 
    xhandlers
    flags 
    probability 4589575459961762652
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  898  <|@ instruction CMP (x: r10|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  900  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B103 -> B104 falseDestination: B103 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B105" 
    xhandlers
    flags 
    probability 4589575459961762652
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  904  <|@ instruction JUMP ~[] destination: B104 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B102" "B104" 
    successors "B106" "B107" 
    xhandlers
    flags 
    probability 4594079059589133148
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  908  <|@ instruction CMP r14|DWORD y: 1 size: DWORD <|@ <|@
      nr  910  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B105 -> B106 falseDestination: B105 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" "B109" 
    xhandlers
    flags 
    probability 4589575459961762652
    begin_IR
      LIR
      nr  916  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  918  <|@ instruction r10|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  920  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@eef3a58 encoding: base: 0 shift: 3 <|@ <|@
      nr  922  <|@ instruction rdx|QWORD[.] = LEA [rdx|QWORD[.] + rbp|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr  924  <|@ instruction TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  926  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B107 -> B108 falseDestination: B107 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B112" 
    xhandlers
    flags 
    probability 4587527379983691018
    begin_IR
      LIR
      nr  928  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  930  <|@ instruction rbx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  932  <|@ instruction JUMP ~[] destination: B108 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B108" "B111" 
    successors "B113" "B114" 
    xhandlers
    flags 
    probability 4589575459961762652
    begin_IR
      LIR
      nr  956  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  958  <|@ instruction CMP (x: rbx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  960  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B112 -> B113 falseDestination: B112 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B115" 
    xhandlers
    flags 
    probability 4587527379983691018
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  968  <|@ instruction xmm0|V128_DWORD[....] = H [rdx|QWORD[.] + rbx|QWORD * 4] nZ: XMM oh: VMOVDQU <|@ <|@
      nr  970  <|@ instruction J (address: [r10|QWORD[.] + rbx|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  972  <|@ instruction rcx|QWORD = LEA [rbx|QWORD + 4] size: QWORD <|@ <|@
      nr  974  <|@ instruction rbx|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  976  <|@ instruction JUMP ~[] destination: B114 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" "B113" 
    successors "B116" "B117" 
    xhandlers
    flags 
    probability 4589575459961762652
    begin_IR
      LIR
      nr  978  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  980  <|@ instruction CMP (x: rbx|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  982  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B115 -> B116 falseDestination: B115 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    probability 4587527379983691018
    begin_IR
      LIR
      nr  988  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  990  <|@ instruction xmm0|V64_DWORD[..] = H [rdx|QWORD[.] + rbx|QWORD * 4] nZ: XMM oh: VMOVQ <|@ <|@
      nr  992  <|@ instruction J (address: [r10|QWORD[.] + rbx|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr  994  <|@ instruction rcx|QWORD = LEA [rbx|QWORD + 2] size: QWORD <|@ <|@
      nr  996  <|@ instruction rbx|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  998  <|@ instruction JUMP ~[] destination: B117 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B117" "B116" 
    successors "B119" "B120" 
    xhandlers
    flags 
    probability 4589575459961762652
    begin_IR
      LIR
      nr 1000  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1002  <|@ instruction CMP (x: rbx|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr 1004  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B118 -> B119 falseDestination: B118 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B121" 
    xhandlers
    flags 
    probability 4587527379983691018
    begin_IR
      LIR
      nr 1010  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1012  <|@ instruction rdx|DWORD[.] = MOV [rdx|QWORD[.] + rbx|QWORD * 4] size: DWORD <|@ <|@
      nr 1014  <|@ instruction MOV (x: [r10|QWORD[.] + rbx|QWORD * 4], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr 1016  <|@ instruction JUMP ~[] destination: B120 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B106" "B120" "B119" 
    successors "B122" "B123" 
    xhandlers
    flags 
    probability 4594079059589133148
    begin_IR
      LIR
      nr 1018  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1020  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr 1022  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B121 -> B122 falseDestination: B121 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B121" 
    successors "B124" 
    xhandlers
    flags 
    probability 4589575459961762652
    begin_IR
      LIR
      nr 1030  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1032  <|@ instruction rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr 1034  <|@ instruction rdx|QWORD[.] = ADD (x: rdx|QWORD[.], y: stack:80|QWORD) size: QWORD <|@ <|@
      nr 1036  <|@ instruction rdx|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1038  <|@ instruction rcx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr 1040  <|@ instruction rcx|QWORD[*] = SHR rcx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1042  <|@ instruction rdx|QWORD[*] = SUB (x: rdx|QWORD[*], ~y: rcx|QWORD[*]) size: QWORD <|@ <|@
      nr 1044  <|@ instruction rdx|QWORD[*] = INC rdx|QWORD[*] size: QWORD <|@ <|@
      nr 1046  <|@ instruction r13|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr 1048  <|@ instruction JUMP ~[] destination: B123 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors "B124" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 1
    probability 4589575459961762652
    begin_IR
      LIR
      nr 1100  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 1102  <|@ instruction rdx|QWORD[*] = DEC rdx|QWORD[*] size: QWORD <|@ <|@
      nr 1104  <|@ instruction r10|QWORD[*] = ADD (x: rcx|QWORD[*], y: r13|QWORD) size: QWORD <|@ <|@
      nr 1106  <|@ instruction r10|QWORD[*] = ADD (x: r10|QWORD[*], y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr 1108  <|@ instruction MOVB (x: [r10|QWORD[*]], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 1110  <|@ instruction JUMP ~[] destination: B130 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B123" "B130" 
    successors "B125" "B130" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 1
    probability 4594079059589133148
    begin_IR
      LIR
      nr 1050  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1052  <|@ instruction CMP rdx|QWORD[*] y: 1 size: QWORD <|@ <|@
      nr 1054  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B124 -> B125 falseDestination: B124 -> B130 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B80" 
    xhandlers
    flags 
    probability 4589942299654852783
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  716  <|@ instruction rdi|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD <|@ <|@
      nr  718  <|@ instruction JUMP ~[] destination: B79 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B75" 
    xhandlers
    flags 
    probability 4589942299654852783
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  578  <|@ instruction JUMP ~[] destination: B60 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B105" 
    xhandlers
    flags 
    probability 4589575459961762652
    begin_IR
      LIR
      nr  892  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  894  <|@ instruction JUMP ~[] destination: B102 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" 
    successors "B126" 
    xhandlers
    flags 
    probability 4589575459961762652
    begin_IR
      LIR
      nr 1024  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1026  <|@ instruction r13|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr 1028  <|@ instruction JUMP ~[] destination: B122 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B122" "B125" 
    successors "B127" 
    xhandlers
    flags 
    probability 4594079059589133148
    begin_IR
      LIR
      nr 1060  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1062  <|@ instruction rcx|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr 1064  <|@ instruction rdx|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr 1066  <|@ instruction rsi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1068  <|@ instruction JUMP ~[] destination: B126 -> B127 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B127" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 1
    probability 4602566600183724730
    begin_IR
      LIR
      nr 1076  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 1078  <|@ instruction rcx|DWORD = INC rdx|DWORD size: DWORD <|@ <|@
      nr 1080  <|@ instruction rsi|DWORD = INC rsi|DWORD size: DWORD <|@ <|@
      nr 1082  <|@ instruction stack:84|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1084  <|@ instruction rcx|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1086  <|@ instruction rdx|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr 1088  <|@ instruction JUMP ~[] destination: B128 -> B127 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B126" "B128" 
    successors "B128" "B129" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 1
    probability 4603850469502835252
    begin_IR
      LIR
      nr 1070  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr 1072  <|@ instruction CMP (x: r14|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1074  <|@ instruction BRANCH trueDestinationProbability: 0.7836641850436589 condition: > trueDestination: B127 -> B128 falseDestination: B127 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B190" 
    xhandlers
    flags 
    probability 4594079059589133149
    begin_IR
      LIR
      nr 1090  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1092  <|@ instruction r11|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1094  <|@ instruction r10|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1096  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1098  <|@ instruction JUMP ~[] destination: B129 -> B190 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B190"
    from_bci -1
    to_bci -1
    predecessors "B129" "B171" "B189" 
    successors "B191" "B192" 
    xhandlers
    flags 
    probability 4594445899282223281
    begin_IR
      LIR
      nr 1670  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 1672  <|@ instruction rsi|DWORD = MOV [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1674  <|@ instruction rcx|DWORD = SUB (x: r10|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1676  <|@ instruction CMP (x: rcx|DWORD, y: [rdx|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr 1678  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B190 -> B191 falseDestination: B190 -> B192 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B192"
    from_bci -1
    to_bci -1
    predecessors "B190" 
    successors "B239" 
    xhandlers
    flags 
    probability 4594445899282223281
    begin_IR
      LIR
      nr 1696  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1698  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1700  <|@ instruction JUMP ~[] destination: B192 -> B239 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B121" 
    xhandlers
    flags 
    probability 4589575459961762652
    begin_IR
      LIR
      nr  912  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  914  <|@ instruction JUMP ~[] destination: B106 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B101" 
    xhandlers
    flags 
    probability 4589575459961762652
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  858  <|@ instruction stack:80|QWORD = MOVE rbx|QWORD moveKind: QWORD <|@ <|@
      nr  860  <|@ instruction JUMP ~[] destination: B97 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors "B126" 
    xhandlers
    flags 
    probability 4589575459961762652
    begin_IR
      LIR
      nr 1056  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1058  <|@ instruction JUMP ~[] destination: B125 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B232"
    from_bci -1
    to_bci -1
    predecessors "B231" 
    successors "B233" 
    xhandlers
    flags 
    probability 4589564759240759944
    begin_IR
      LIR
      nr 2060  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2062  <|@ instruction JUMP ~[] destination: B232 -> B233 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B233"
    from_bci -1
    to_bci -1
    predecessors "B229" "B232" 
    successors "B239" 
    xhandlers
    flags 
    probability 4594068358868130440
    begin_IR
      LIR
      nr 2064  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2066  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2068  <|@ instruction JUMP ~[] destination: B233 -> B239 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B229"
    from_bci -1
    to_bci -1
    predecessors "B228" 
    successors "B233" 
    xhandlers
    flags 
    probability 4589564759240759944
    begin_IR
      LIR
      nr 2022  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2024  <|@ instruction r13|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr 2026  <|@ instruction JUMP ~[] destination: B229 -> B233 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B201"
    from_bci -1
    to_bci -1
    predecessors "B200" 
    successors "B204" 
    xhandlers
    flags 
    probability 4589564759240759944
    begin_IR
      LIR
      nr 1782  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1784  <|@ instruction JUMP ~[] destination: B201 -> B204 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B213"
    from_bci -1
    to_bci -1
    predecessors "B212" 
    successors "B228" 
    xhandlers
    flags 
    probability 4589564759240759944
    begin_IR
      LIR
      nr 1906  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1908  <|@ instruction JUMP ~[] destination: B213 -> B228 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B86" "B89" 
    xhandlers
    flags 
    probability 4589447453056468409
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  764  <|@ instruction rsi|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  766  <|@ instruction CMP rdx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Collections$EmptyList;, resolved>;compressed} <|@ <|@
      nr  768  <|@ instruction BRANCH trueDestinationProbability: 0.5024679876958296 condition: = trueDestination: B85 -> B86 falseDestination: B85 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B87" "B88" 
    xhandlers
    flags 
    probability 4584967462359288767
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  772  <|@ instruction CMP rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr  774  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B86 -> B87 falseDestination: B86 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B93" 
    xhandlers
    flags 
    probability 4584967462359288767
    begin_IR
      LIR
      nr  776  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  778  <|@ instruction JUMP ~[] destination: B87 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B242"
    from_bci -1
    to_bci -1
    predecessors "B240" 
    successors "B244" 
    xhandlers
    flags 
    probability 4588024279722342007
    begin_IR
      LIR
      nr 2148  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2150  <|@ instruction JUMP ~[] destination: B242 -> B244 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B90" "B194" 
    xhandlers
    flags 
    probability 4584920244498907059
    begin_IR
      LIR
      nr  792  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  794  <|@ instruction CMP rdx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed} <|@ <|@
      nr  796  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B89 -> B90 falseDestination: B89 -> B194 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B91" "B92" 
    xhandlers
    flags 
    probability 4584920244498907059
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  800  <|@ instruction CMP (x: rsi|DWORD, y: [rdi|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr  802  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B90 -> B91 falseDestination: B90 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B93" 
    xhandlers
    flags 
    probability 4584920244498907059
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  818  <|@ instruction JUMP ~[] destination: B92 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B288"
    from_bci -1
    to_bci -1
    predecessors "B287" 
    successors "B290" 
    xhandlers
    flags 
    probability 4583727980492834978
    begin_IR
      LIR
      nr 2640  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2642  <|@ instruction JUMP ~[] destination: B288 -> B290 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B291"
    from_bci -1
    to_bci -1
    predecessors "B290" 
    successors "B293" 
    xhandlers
    flags 
    probability 4583727980492834978
    begin_IR
      LIR
      nr 2664  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2666  <|@ instruction JUMP ~[] destination: B291 -> B293 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B294"
    from_bci -1
    to_bci -1
    predecessors "B293" 
    successors "B298" 
    xhandlers
    flags 
    probability 4583727980492834978
    begin_IR
      LIR
      nr 2688  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2690  <|@ instruction JUMP ~[] destination: B294 -> B298 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B284"
    from_bci -1
    to_bci -1
    predecessors "B282" 
    successors "B285" 
    xhandlers
    flags 
    probability 4583727980492834978
    begin_IR
      LIR
      nr 2610  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2612  <|@ instruction xmm0|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null> <|@ <|@
      nr 2614  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 2616  <|@ instruction JUMP ~[] destination: B284 -> B285 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B296"
    from_bci -1
    to_bci -1
    predecessors "B285" 
    successors "B285" 
    xhandlers
    flags "lle" 
    loop_index 15
    loop_depth 1
    probability 4590717489976473210
    begin_IR
      LIR
      nr 2698  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 2700  <|@ instruction JUMP ~[] destination: B296 -> B285 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B285"
    from_bci -1
    to_bci -1
    predecessors "B284" "B296" 
    successors "B286" "B296" 
    xhandlers
    flags "llh" 
    loop_index 15
    loop_depth 1
    probability 4592735179747575970
    begin_IR
      LIR
      nr 2618  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2620  <|@ instruction J (address: [rdx|QWORD[.] + r10|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr 2622  <|@ instruction r10|QWORD = LEA [r10|QWORD + 8] size: QWORD <|@ <|@
      nr 2624  <|@ instruction CMP (x: r10|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr 2626  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B285 -> B286 falseDestination: B285 -> B296 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B276"
    from_bci -1
    to_bci -1
    predecessors "B275" 
    successors "B278" 
    xhandlers
    flags 
    probability 4583727980492834978
    begin_IR
      LIR
      nr 2548  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2550  <|@ instruction JUMP ~[] destination: B276 -> B278 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B286"
    from_bci -1
    to_bci -1
    predecessors "B285" 
    successors "B287" 
    xhandlers
    flags 
    probability 4583727980492834978
    begin_IR
      LIR
      nr 2628  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2630  <|@ instruction JUMP ~[] destination: B286 -> B287 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B279"
    from_bci -1
    to_bci -1
    predecessors "B278" 
    successors "B281" 
    xhandlers
    flags 
    probability 4583727980492834978
    begin_IR
      LIR
      nr 2572  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2574  <|@ instruction JUMP ~[] destination: B279 -> B281 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B273"
    from_bci -1
    to_bci -1
    predecessors "B272" 
    successors "B275" 
    xhandlers
    flags 
    probability 4583727980492834978
    begin_IR
      LIR
      nr 2524  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2526  <|@ instruction JUMP ~[] destination: B273 -> B275 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B269"
    from_bci -1
    to_bci -1
    predecessors "B267" 
    successors "B270" 
    xhandlers
    flags 
    probability 4583727980492834978
    begin_IR
      LIR
      nr 2490  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2492  <|@ instruction rbx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 2494  <|@ instruction rcx|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr 2496  <|@ instruction r8|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2498  <|@ instruction JUMP ~[] destination: B269 -> B270 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B319"
    from_bci -1
    to_bci -1
    predecessors "B270" 
    successors "B270" 
    xhandlers
    flags "lle" 
    loop_index 14
    loop_depth 1
    probability 4590717489976473210
    begin_IR
      LIR
      nr 2934  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 2936  <|@ instruction JUMP ~[] destination: B319 -> B270 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B270"
    from_bci -1
    to_bci -1
    predecessors "B269" "B319" 
    successors "B271" "B319" 
    xhandlers
    flags "llh" 
    loop_index 14
    loop_depth 1
    probability 4592735179747575970
    begin_IR
      LIR
      nr 2500  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2502  <|@ instruction xmm0|V256_DWORD[........] = H [rdx|QWORD[*] + rbx|QWORD * 4] nZ: YMM oh: VMOVDQU <|@ <|@
      nr 2504  <|@ instruction J (address: [rsi|QWORD[.] + rbx|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr 2506  <|@ instruction rbx|QWORD = LEA [rbx|QWORD + 8] size: QWORD <|@ <|@
      nr 2508  <|@ instruction CMP (x: rbx|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 2510  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B270 -> B271 falseDestination: B270 -> B319 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B271"
    from_bci -1
    to_bci -1
    predecessors "B270" 
    successors "B272" 
    xhandlers
    flags 
    probability 4583727980492834978
    begin_IR
      LIR
      nr 2512  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2514  <|@ instruction JUMP ~[] destination: B271 -> B272 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B311"
    from_bci -1
    to_bci -1
    predecessors "B310" 
    successors "B317" 
    xhandlers
    flags 
    probability 4581922060983499895
    begin_IR
      LIR
      nr 2808  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2810  <|@ instruction r14|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 2812  <|@ instruction rsi|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2814  <|@ instruction JUMP ~[] destination: B311 -> B317 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" 
    xhandlers
    flags 
    probability 4580935100400111791
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  596  <|@ instruction xmm0|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null> <|@ <|@
      nr  598  <|@ instruction rdx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  600  <|@ instruction JUMP ~[] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B197"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B64" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4588077639523326214
    begin_IR
      LIR
      nr 1752  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 1754  <|@ instruction JUMP ~[] destination: B197 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" "B197" 
    successors "B65" "B197" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4589942299654852783
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  604  <|@ instruction J (address: [rsi|QWORD[.] + rdx|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  606  <|@ instruction rdx|QWORD = LEA [rdx|QWORD + 8] size: QWORD <|@ <|@
      nr  608  <|@ instruction CMP (x: rdx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  610  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B64 -> B65 falseDestination: B64 -> B197 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4580935100400111791
    begin_IR
      LIR
      nr  642  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  644  <|@ instruction JUMP ~[] destination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    probability 4580935100400111791
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  624  <|@ instruction JUMP ~[] destination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B66" 
    xhandlers
    flags 
    probability 4580935100400111791
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  614  <|@ instruction JUMP ~[] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" 
    xhandlers
    flags 
    probability 4580935100400111791
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  664  <|@ instruction JUMP ~[] destination: B73 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B115" 
    xhandlers
    flags 
    probability 4580568260707021660
    begin_IR
      LIR
      nr  962  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  964  <|@ instruction JUMP ~[] destination: B113 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B110" 
    xhandlers
    flags 
    probability 4580568260707021660
    begin_IR
      LIR
      nr  934  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  936  <|@ instruction rbx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  938  <|@ instruction JUMP ~[] destination: B109 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B110" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4587527379983691018
    begin_IR
      LIR
      nr 1112  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 1114  <|@ instruction JUMP ~[] destination: B131 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" "B131" 
    successors "B111" "B131" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4589575459961762652
    begin_IR
      LIR
      nr  940  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  942  <|@ instruction xmm0|V256_DWORD[........] = H [rdx|QWORD[.] + rbx|QWORD * 4] nZ: YMM oh: VMOVDQU <|@ <|@
      nr  944  <|@ instruction J (address: [r10|QWORD[.] + rbx|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  946  <|@ instruction rbx|QWORD = LEA [rbx|QWORD + 8] size: QWORD <|@ <|@
      nr  948  <|@ instruction CMP (x: rbx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  950  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B110 -> B111 falseDestination: B110 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    probability 4580568260707021660
    begin_IR
      LIR
      nr  984  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  986  <|@ instruction JUMP ~[] destination: B116 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B121" 
    xhandlers
    flags 
    probability 4580568260707021660
    begin_IR
      LIR
      nr 1006  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1008  <|@ instruction JUMP ~[] destination: B119 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B112" 
    xhandlers
    flags 
    probability 4580568260707021660
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  954  <|@ instruction JUMP ~[] destination: B111 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B226"
    from_bci -1
    to_bci -1
    predecessors "B225" 
    successors "B228" 
    xhandlers
    flags 
    probability 4580557559986018952
    begin_IR
      LIR
      nr 2006  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2008  <|@ instruction JUMP ~[] destination: B226 -> B228 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B220"
    from_bci -1
    to_bci -1
    predecessors "B219" 
    successors "B222" 
    xhandlers
    flags 
    probability 4580557559986018952
    begin_IR
      LIR
      nr 1960  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1962  <|@ instruction JUMP ~[] destination: B220 -> B222 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B216"
    from_bci -1
    to_bci -1
    predecessors "B214" 
    successors "B217" 
    xhandlers
    flags 
    probability 4580557559986018952
    begin_IR
      LIR
      nr 1932  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1934  <|@ instruction rdx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1936  <|@ instruction JUMP ~[] destination: B216 -> B217 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B235"
    from_bci -1
    to_bci -1
    predecessors "B217" 
    successors "B217" 
    xhandlers
    flags "lle" 
    loop_index 12
    loop_depth 1
    probability 4587511328902186956
    begin_IR
      LIR
      nr 2082  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 2084  <|@ instruction JUMP ~[] destination: B235 -> B217 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B217"
    from_bci -1
    to_bci -1
    predecessors "B216" "B235" 
    successors "B218" "B235" 
    xhandlers
    flags "llh" 
    loop_index 12
    loop_depth 1
    probability 4589564759240759944
    begin_IR
      LIR
      nr 1938  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1940  <|@ instruction J (address: [rdi|QWORD[.] + rdx|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr 1942  <|@ instruction rdx|QWORD = LEA [rdx|QWORD + 8] size: QWORD <|@ <|@
      nr 1944  <|@ instruction CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1946  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B217 -> B218 falseDestination: B217 -> B235 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B223"
    from_bci -1
    to_bci -1
    predecessors "B222" 
    successors "B225" 
    xhandlers
    flags 
    probability 4580557559986018952
    begin_IR
      LIR
      nr 1984  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1986  <|@ instruction JUMP ~[] destination: B223 -> B225 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B218"
    from_bci -1
    to_bci -1
    predecessors "B217" 
    successors "B219" 
    xhandlers
    flags 
    probability 4580557559986018952
    begin_IR
      LIR
      nr 1948  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1950  <|@ instruction JUMP ~[] destination: B218 -> B219 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B58" 
    xhandlers
    flags 
    probability 4579598228167754006
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  540  <|@ instruction stack:68|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  542  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B55" 
    successors "B59" 
    xhandlers
    flags 
    probability 4580259531889175745
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  546  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr  548  <|@ instruction rsi|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  550  <|@ instruction rdx|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  552  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  554  <|@ instruction r14|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  556  <|@ st <@st|@reference-map: [stack:68, stack:80, stack:88]
live-base-pointers: []
java.util.ArrayList.addAll(ArrayList.java:581) [bci: 0]
locals: stack:40|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  558  <|@ instruction JUMP ~[] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B210"
    from_bci -1
    to_bci -1
    predecessors "B206" 
    successors "B211" 
    xhandlers
    flags 
    probability 4578994163505205464
    begin_IR
      LIR
      nr 1878  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1880  <|@ instruction stack:96|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr 1882  <|@ instruction stack:80|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 1884  <|@ instruction JUMP ~[] destination: B210 -> B211 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B211"
    from_bci -1
    to_bci -1
    predecessors "B210" "B208" 
    successors "B212" 
    xhandlers
    flags 
    probability 4579699812260379147
    begin_IR
      LIR
      nr 1886  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1888  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr 1890  <|@ instruction rdx|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr 1892  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1894  <|@ instruction r13|DWORD[.] = MOVE r8|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1896  <|@ st <@st|@reference-map: [r13:0, stack:80, stack:88]
live-base-pointers: []
java.util.ArrayList.addAll(ArrayList.java:581) [bci: 0]
locals: stack:40|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr 1898  <|@ instruction JUMP ~[] destination: B211 -> B212 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B136" "B177" 
    xhandlers
    flags 
    probability 4577023056870495540
    begin_IR
      LIR
      nr 1158  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1160  <|@ instruction stack:80|QWORD = MOVE rbx|QWORD moveKind: QWORD <|@ <|@
      nr 1162  <|@ instruction CMP rdx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed} <|@ <|@
      nr 1164  <|@ instruction BRANCH trueDestinationProbability: 0.9931451844203518 condition: = trueDestination: B135 -> B136 falseDestination: B135 -> B177 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B135" 
    successors "B137" "B138" 
    xhandlers
    flags 
    probability 4576982822975400699
    begin_IR
      LIR
      nr 1166  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1168  <|@ instruction rdi|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1170  <|@ instruction rdx|DWORD[.] = MOV [rdi|DWORD[.] * 8 + 28] size: DWORD <|@ <|@
      nr 1172  <|@ instruction TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr 1174  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B136 -> B137 falseDestination: B136 -> B138 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" "B140" 
    xhandlers
    flags 
    probability 4576982822975400699
    begin_IR
      LIR
      nr 1190  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1192  <|@ instruction CMP r14|DWORD y: 1 size: DWORD <|@ <|@
      nr 1194  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B138 -> B139 falseDestination: B138 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B138" 
    successors "B141" "B176" 
    xhandlers
    flags 
    probability 4572479223348030203
    begin_IR
      LIR
      nr 1204  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1206  <|@ instruction stack:96|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr 1208  <|@ instruction stack:104|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr 1210  <|@ instruction rdi|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr 1212  <|@ instruction r8|QWORD = ADD (x: rbp|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr 1214  <|@ instruction r9|QWORD = MOV rdi|DWORD size: DWORD <|@ <|@
      nr 1216  <|@ instruction CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr 1218  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B140 -> B141 falseDestination: B140 -> B176 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B142" "B175" 
    xhandlers
    flags 
    probability 4572479223348030203
    begin_IR
      LIR
      nr 1220  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1222  <|@ instruction CMP (x: rdi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1224  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B141 -> B142 falseDestination: B141 -> B175 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B143" 
    xhandlers
    flags 
    probability 4572479223348030203
    begin_IR
      LIR
      nr 1226  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1228  <|@ instruction JUMP ~[] destination: B142 -> B143 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B139" "B142" 
    successors "B144" "B145" 
    xhandlers
    flags 
    probability 4576982822975400699
    begin_IR
      LIR
      nr 1230  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1232  <|@ instruction CMP r14|DWORD y: 1 size: DWORD <|@ <|@
      nr 1234  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B143 -> B144 falseDestination: B143 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B143" 
    successors "B146" "B174" 
    xhandlers
    flags 
    probability 4572479223348030203
    begin_IR
      LIR
      nr 1240  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1242  <|@ instruction CMP (x: r10|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr 1244  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B145 -> B146 falseDestination: B145 -> B174 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B145" 
    successors "B147" 
    xhandlers
    flags 
    probability 4572479223348030203
    begin_IR
      LIR
      nr 1246  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1248  <|@ instruction JUMP ~[] destination: B146 -> B147 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B144" "B146" 
    successors "B148" "B149" 
    xhandlers
    flags 
    probability 4576982822975400699
    begin_IR
      LIR
      nr 1250  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1252  <|@ instruction CMP r14|DWORD y: 1 size: DWORD <|@ <|@
      nr 1254  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B147 -> B148 falseDestination: B147 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B147" 
    successors "B150" "B151" 
    xhandlers
    flags 
    probability 4572479223348030203
    begin_IR
      LIR
      nr 1260  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1262  <|@ instruction r10|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr 1264  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@eef3a58 encoding: base: 0 shift: 3 <|@ <|@
      nr 1266  <|@ instruction r8|QWORD[.] = LEA [rdx|QWORD[.] + rbp|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr 1268  <|@ instruction TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr 1270  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B149 -> B150 falseDestination: B149 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B149" 
    successors "B154" 
    xhandlers
    flags 
    probability 4570890224317833336
    begin_IR
      LIR
      nr 1272  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1274  <|@ instruction rdx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1276  <|@ instruction r9|QWORD = MOVE stack:96|QWORD moveKind: QWORD <|@ <|@
      nr 1278  <|@ instruction JUMP ~[] destination: B150 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B154"
    from_bci -1
    to_bci -1
    predecessors "B150" "B153" 
    successors "B155" "B156" 
    xhandlers
    flags 
    probability 4572479223348030203
    begin_IR
      LIR
      nr 1304  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1306  <|@ instruction CMP (x: rdx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr 1308  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B154 -> B155 falseDestination: B154 -> B156 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B156"
    from_bci -1
    to_bci -1
    predecessors "B154" 
    successors "B157" 
    xhandlers
    flags 
    probability 4570890224317833336
    begin_IR
      LIR
      nr 1318  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1320  <|@ instruction xmm0|V128_DWORD[....] = H [r8|QWORD[.] + rdx|QWORD * 4] nZ: XMM oh: VMOVDQU <|@ <|@
      nr 1322  <|@ instruction J (address: [r10|QWORD[.] + rdx|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr 1324  <|@ instruction rdx|QWORD = LEA [rdx|QWORD + 4] size: QWORD <|@ <|@
      nr 1326  <|@ instruction rcx|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr 1328  <|@ instruction rdx|QWORD = MOVE stack:104|QWORD moveKind: QWORD <|@ <|@
      nr 1330  <|@ instruction JUMP ~[] destination: B156 -> B157 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B157"
    from_bci -1
    to_bci -1
    predecessors "B156" "B155" 
    successors "B158" "B159" 
    xhandlers
    flags 
    probability 4572479223348030203
    begin_IR
      LIR
      nr 1332  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1334  <|@ instruction CMP (x: rcx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1336  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B157 -> B158 falseDestination: B157 -> B159 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B159"
    from_bci -1
    to_bci -1
    predecessors "B157" 
    successors "B160" 
    xhandlers
    flags 
    probability 4570890224317833336
    begin_IR
      LIR
      nr 1342  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1344  <|@ instruction xmm0|V64_DWORD[..] = H [r8|QWORD[.] + rcx|QWORD * 4] nZ: XMM oh: VMOVQ <|@ <|@
      nr 1346  <|@ instruction J (address: [r10|QWORD[.] + rcx|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr 1348  <|@ instruction rdx|QWORD = LEA [rcx|QWORD + 2] size: QWORD <|@ <|@
      nr 1350  <|@ instruction rcx|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr 1352  <|@ instruction JUMP ~[] destination: B159 -> B160 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B160"
    from_bci -1
    to_bci -1
    predecessors "B159" "B158" 
    successors "B161" "B162" 
    xhandlers
    flags 
    probability 4572479223348030203
    begin_IR
      LIR
      nr 1354  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1356  <|@ instruction CMP (x: rcx|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr 1358  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B160 -> B161 falseDestination: B160 -> B162 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B162"
    from_bci -1
    to_bci -1
    predecessors "B160" 
    successors "B163" 
    xhandlers
    flags 
    probability 4570890224317833336
    begin_IR
      LIR
      nr 1364  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1366  <|@ instruction rdx|DWORD[.] = MOV [r8|QWORD[.] + rcx|QWORD * 4] size: DWORD <|@ <|@
      nr 1368  <|@ instruction MOV (x: [r10|QWORD[.] + rcx|QWORD * 4], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr 1370  <|@ instruction JUMP ~[] destination: B162 -> B163 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B163"
    from_bci -1
    to_bci -1
    predecessors "B148" "B162" "B161" 
    successors "B164" "B165" 
    xhandlers
    flags 
    probability 4576982822975400699
    begin_IR
      LIR
      nr 1372  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1374  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr 1376  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B163 -> B164 falseDestination: B163 -> B165 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B165"
    from_bci -1
    to_bci -1
    predecessors "B163" 
    successors "B166" 
    xhandlers
    flags 
    probability 4572479223348030203
    begin_IR
      LIR
      nr 1384  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1386  <|@ instruction rbx|QWORD = MOVE stack:80|QWORD moveKind: QWORD <|@ <|@
      nr 1388  <|@ instruction rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr 1390  <|@ instruction rdx|QWORD[.] = ADD (x: rdx|QWORD[.], y: rbx|QWORD) size: QWORD <|@ <|@
      nr 1392  <|@ instruction rdx|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1394  <|@ instruction rcx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr 1396  <|@ instruction rcx|QWORD[*] = SHR rcx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1398  <|@ instruction rdx|QWORD[*] = SUB (x: rdx|QWORD[*], ~y: rcx|QWORD[*]) size: QWORD <|@ <|@
      nr 1400  <|@ instruction rdx|QWORD[*] = INC rdx|QWORD[*] size: QWORD <|@ <|@
      nr 1402  <|@ instruction r13|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr 1404  <|@ instruction JUMP ~[] destination: B165 -> B166 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B172"
    from_bci -1
    to_bci -1
    predecessors "B166" 
    successors "B166" 
    xhandlers
    flags "lle" 
    loop_index 9
    loop_depth 1
    probability 4572479223348030203
    begin_IR
      LIR
      nr 1456  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 1458  <|@ instruction rdx|QWORD[*] = DEC rdx|QWORD[*] size: QWORD <|@ <|@
      nr 1460  <|@ instruction r8|QWORD[*] = ADD (x: rcx|QWORD[*], y: r13|QWORD) size: QWORD <|@ <|@
      nr 1462  <|@ instruction r8|QWORD[*] = ADD (x: r8|QWORD[*], y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr 1464  <|@ instruction MOVB (x: [r8|QWORD[*]], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 1466  <|@ instruction JUMP ~[] destination: B172 -> B166 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B166"
    from_bci -1
    to_bci -1
    predecessors "B165" "B172" 
    successors "B167" "B172" 
    xhandlers
    flags "llh" 
    loop_index 9
    loop_depth 1
    probability 4576982822975400699
    begin_IR
      LIR
      nr 1406  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1408  <|@ instruction CMP rdx|QWORD[*] y: 1 size: QWORD <|@ <|@
      nr 1410  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B166 -> B167 falseDestination: B166 -> B172 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B246"
    from_bci -1
    to_bci -1
    predecessors "B245" 
    successors "B321" 
    xhandlers
    flags 
    probability 4575596594292739886
    begin_IR
      LIR
      nr 2186  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2188  <|@ instruction rsi|DWORD = MOVE input: int[-270433|0xfffffffffffbdf9f] <|@ <|@
      nr 2190  <|@ instruction JUMP ~[] destination: B246 -> B321 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B321"
    from_bci -1
    to_bci -1
    predecessors "B320" "B246" "B261" "B250" "B248" 
    successors 
    xhandlers
    flags 
    probability 4582300274885977192
    begin_IR
      LIR
      nr 2946  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2948  <|@ instruction MOV (x: [r15|QWORD + 668], y: rsi|DWORD) size: DWORD <|@ <|@
      nr 2950  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2952  <|@ st <@st|@reference-map: [stack:80, stack:88]
live-base-pointers: []
java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:238) [bci: 10]
locals: stack:40|QWORD[.] rdi|DWORD 
java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
locals: - - 
java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
locals: stack:40|QWORD[.] - stack:48|QWORD[.] r14|DWORD 
>@ <|@ instruction DEOPT info [bci:10, 9, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B248"
    from_bci -1
    to_bci -1
    predecessors "B247" 
    successors "B321" 
    xhandlers
    flags 
    probability 4575507128571349317
    begin_IR
      LIR
      nr 2198  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2200  <|@ instruction rsi|DWORD = MOVE input: int[-270433|0xfffffffffffbdf9f] <|@ <|@
      nr 2202  <|@ instruction JUMP ~[] destination: B248 -> B321 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B250"
    from_bci -1
    to_bci -1
    predecessors "B249" 
    successors "B321" 
    xhandlers
    flags 
    probability 4575418557507172653
    begin_IR
      LIR
      nr 2212  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2214  <|@ instruction rsi|DWORD = MOVE input: int[-270433|0xfffffffffffbdf9f] <|@ <|@
      nr 2216  <|@ instruction JUMP ~[] destination: B250 -> B321 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B238"
    from_bci -1
    to_bci -1
    predecessors "B199" 
    successors "B239" 
    xhandlers
    flags 
    probability 4575117334181575713
    begin_IR
      LIR
      nr 2108  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2110  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2112  <|@ st <@st|@reference-map: [stack:88]
live-base-pointers: []
java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
locals: stack:40|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Collection.toArray()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1] <|@ <|@
      nr 2114  <|@ st <@st|@reference-map: [rax:0, stack:88]
live-base-pointers: []
java.util.ArrayList.addAll(ArrayList.java:581) [bci: 6]
stack: Object[null] 
locals: stack:40|QWORD[.] - - - 
>@ <|@ instruction r14|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD state [bci:6] <|@ <|@
      nr 2116  <|@ instruction r13|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr 2118  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2120  <|@ instruction JUMP ~[] destination: B238 -> B239 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4574837534457301975
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: -) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@eef3a58 encoding: base: 0 shift: 3 <|@ <|@
      nr   66  <|@ instruction rsi|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr   68  <|@ instruction rdx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   72  <|@ instruction r13|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   74  <|@ st <@st|@reference-map: [r14:0, stack:80, stack:88]
live-base-pointers: []
java.util.ArrayList.addAll(ArrayList.java:581) [bci: 0]
locals: stack:40|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   76  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction r10|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr   80  <|@ instruction r13|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction JUMP ~[] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B164"
    from_bci -1
    to_bci -1
    predecessors "B163" 
    successors "B168" 
    xhandlers
    flags 
    probability 4572479223348030203
    begin_IR
      LIR
      nr 1378  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1380  <|@ instruction r13|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr 1382  <|@ instruction JUMP ~[] destination: B164 -> B168 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B168"
    from_bci -1
    to_bci -1
    predecessors "B164" "B167" 
    successors "B169" 
    xhandlers
    flags 
    probability 4576982822975400699
    begin_IR
      LIR
      nr 1416  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1418  <|@ instruction rcx|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr 1420  <|@ instruction rdx|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr 1422  <|@ instruction rsi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1424  <|@ instruction JUMP ~[] destination: B168 -> B169 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B170"
    from_bci -1
    to_bci -1
    predecessors "B169" 
    successors "B169" 
    xhandlers
    flags "lle" 
    loop_index 10
    loop_depth 1
    probability 4585439808479858613
    begin_IR
      LIR
      nr 1432  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 1434  <|@ instruction rcx|DWORD = INC rdx|DWORD size: DWORD <|@ <|@
      nr 1436  <|@ instruction rsi|DWORD = INC rsi|DWORD size: DWORD <|@ <|@
      nr 1438  <|@ instruction stack:84|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1440  <|@ instruction rcx|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1442  <|@ instruction rdx|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr 1444  <|@ instruction JUMP ~[] destination: B170 -> B169 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B169"
    from_bci -1
    to_bci -1
    predecessors "B168" "B170" 
    successors "B170" "B171" 
    xhandlers
    flags "llh" 
    loop_index 10
    loop_depth 1
    probability 4586897108778445428
    begin_IR
      LIR
      nr 1426  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr 1428  <|@ instruction CMP (x: r14|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1430  <|@ instruction BRANCH trueDestinationProbability: 0.7836641850436589 condition: > trueDestination: B169 -> B170 falseDestination: B169 -> B171 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B171"
    from_bci -1
    to_bci -1
    predecessors "B169" 
    successors "B190" 
    xhandlers
    flags 
    probability 4576982822975400699
    begin_IR
      LIR
      nr 1446  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1448  <|@ instruction r11|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1450  <|@ instruction r10|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1452  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1454  <|@ instruction JUMP ~[] destination: B171 -> B190 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B167"
    from_bci -1
    to_bci -1
    predecessors "B166" 
    successors "B168" 
    xhandlers
    flags 
    probability 4572479223348030203
    begin_IR
      LIR
      nr 1412  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1414  <|@ instruction JUMP ~[] destination: B167 -> B168 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B143" 
    successors "B147" 
    xhandlers
    flags 
    probability 4572479223348030203
    begin_IR
      LIR
      nr 1236  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1238  <|@ instruction JUMP ~[] destination: B144 -> B147 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B147" 
    successors "B163" 
    xhandlers
    flags 
    probability 4572479223348030203
    begin_IR
      LIR
      nr 1256  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1258  <|@ instruction JUMP ~[] destination: B148 -> B163 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B138" 
    successors "B143" 
    xhandlers
    flags 
    probability 4572479223348030203
    begin_IR
      LIR
      nr 1196  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1198  <|@ instruction stack:96|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr 1200  <|@ instruction stack:104|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr 1202  <|@ instruction JUMP ~[] destination: B139 -> B143 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B257"
    from_bci -1
    to_bci -1
    predecessors "B255" 
    successors "B258" 
    xhandlers
    flags 
    probability 4568396634526279913
    begin_IR
      LIR
      nr 2300  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2302  <|@ instruction r10|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2304  <|@ instruction r14|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr 2306  <|@ instruction rax|DWORD = NOT rax|DWORD size: DWORD <|@ <|@
      nr 2308  <|@ instruction r8|DWORD = ADD (x: rax|DWORD, y: stack:68|DWORD) size: DWORD <|@ <|@
      nr 2310  <|@ instruction r9|DWORD = SUB (x: r14|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr 2312  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2314  <|@ instruction rdx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 2316  <|@ instruction rcx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2318  <|@ st <@st|@reference-map: [stack:88]
live-base-pointers: []
java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
locals: stack:40|QWORD[.] - - stack:64|DWORD 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD] [] callTarget: HotSpotMethod<System.arraycopy(Object, int, Object, int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:31] <|@ <|@
      nr 2320  <|@ instruction r14|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr 2322  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2324  <|@ instruction JUMP ~[] destination: B257 -> B258 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B263"
    from_bci -1
    to_bci -1
    predecessors "B262" 
    successors "B265" 
    xhandlers
    flags 
    probability 4567311708340335520
    begin_IR
      LIR
      nr 2392  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2394  <|@ instruction stack:60|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 2396  <|@ instruction stack:108|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr 2398  <|@ instruction stack:84|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2400  <|@ instruction r13|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 2402  <|@ instruction r11|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: -) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@eef3a58 encoding: base: 0 shift: 3 <|@ <|@
      nr 2404  <|@ instruction rsi|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr 2406  <|@ instruction rdx|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr 2408  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 2410  <|@ st <@st|@reference-map: [stack:44, stack:80, stack:88]
live-base-pointers: []
java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:238) [bci: 10]
locals: stack:40|QWORD[.] stack:108|DWORD 
java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
locals: - - 
java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
locals: stack:40|QWORD[.] - stack:48|QWORD[.] stack:64|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:10, 9, 17] <|@ <|@
      nr 2412  <|@ instruction r11|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2414  <|@ instruction r9|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 2416  <|@ instruction r8|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr 2418  <|@ instruction r10|DWORD[.] = MOVE stack:84|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2420  <|@ instruction r13|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr 2422  <|@ instruction JUMP ~[] destination: B263 -> B265 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B304"
    from_bci -1
    to_bci -1
    predecessors "B303" 
    successors "B309" 
    xhandlers
    flags 
    probability 4567311708340335519
    begin_IR
      LIR
      nr 2768  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2770  <|@ instruction JUMP ~[] destination: B304 -> B309 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B309"
    from_bci -1
    to_bci -1
    predecessors "B304" "B306" "B308" 
    successors 
    xhandlers
    flags 
    probability 4574320729851797906
    begin_IR
      LIR
      nr 2794  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2796  <|@ instruction MOV [r15|QWORD + 668] y: -282977 size: DWORD <|@ <|@
      nr 2798  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2800  <|@ st <@st|@reference-map: [stack:80, stack:88]
live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:266) [bci: 44]
locals: - - - - 
java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
locals: - - 
java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
locals: - - 
java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
locals: stack:40|QWORD[.] - stack:48|QWORD[.] stack:64|DWORD 
>@ <|@ instruction DEOPT info [bci:44, 22, 9, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B306"
    from_bci -1
    to_bci -1
    predecessors "B305" 
    successors "B309" 
    xhandlers
    flags 
    probability 4567260055482195289
    begin_IR
      LIR
      nr 2778  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2780  <|@ instruction JUMP ~[] destination: B306 -> B309 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B308"
    from_bci -1
    to_bci -1
    predecessors "B307" 
    successors "B309" 
    xhandlers
    flags 
    probability 4567208919152636461
    begin_IR
      LIR
      nr 2790  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2792  <|@ instruction JUMP ~[] destination: B308 -> B309 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B58" 
    xhandlers
    flags 
    probability 4563722939497366367
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  506  <|@ instruction stack:68|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  508  <|@ instruction JUMP ~[] destination: B55 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B161"
    from_bci -1
    to_bci -1
    predecessors "B160" 
    successors "B163" 
    xhandlers
    flags 
    probability 4563472024093289211
    begin_IR
      LIR
      nr 1360  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1362  <|@ instruction JUMP ~[] destination: B161 -> B163 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B158"
    from_bci -1
    to_bci -1
    predecessors "B157" 
    successors "B160" 
    xhandlers
    flags 
    probability 4563472024093289211
    begin_IR
      LIR
      nr 1338  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1340  <|@ instruction JUMP ~[] destination: B158 -> B160 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B155"
    from_bci -1
    to_bci -1
    predecessors "B154" 
    successors "B157" 
    xhandlers
    flags 
    probability 4563472024093289211
    begin_IR
      LIR
      nr 1310  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1312  <|@ instruction rcx|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr 1314  <|@ instruction rdx|QWORD = MOVE stack:104|QWORD moveKind: QWORD <|@ <|@
      nr 1316  <|@ instruction JUMP ~[] destination: B155 -> B157 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B149" 
    successors "B152" 
    xhandlers
    flags 
    probability 4563472024093289211
    begin_IR
      LIR
      nr 1280  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1282  <|@ instruction rdx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1284  <|@ instruction JUMP ~[] destination: B151 -> B152 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B173"
    from_bci -1
    to_bci -1
    predecessors "B152" 
    successors "B152" 
    xhandlers
    flags "lle" 
    loop_index 8
    loop_depth 1
    probability 4570890224317833336
    begin_IR
      LIR
      nr 1468  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 1470  <|@ instruction JUMP ~[] destination: B173 -> B152 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B151" "B173" 
    successors "B153" "B173" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 1
    probability 4572479223348030203
    begin_IR
      LIR
      nr 1286  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1288  <|@ instruction xmm0|V256_DWORD[........] = H [r8|QWORD[.] + rdx|QWORD * 4] nZ: YMM oh: VMOVDQU <|@ <|@
      nr 1290  <|@ instruction J (address: [r10|QWORD[.] + rdx|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr 1292  <|@ instruction rdx|QWORD = LEA [rdx|QWORD + 8] size: QWORD <|@ <|@
      nr 1294  <|@ instruction CMP (x: rdx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr 1296  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B152 -> B153 falseDestination: B152 -> B173 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B153"
    from_bci -1
    to_bci -1
    predecessors "B152" 
    successors "B154" 
    xhandlers
    flags 
    probability 4563472024093289211
    begin_IR
      LIR
      nr 1298  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1300  <|@ instruction r9|QWORD = MOVE stack:96|QWORD moveKind: QWORD <|@ <|@
      nr 1302  <|@ instruction JUMP ~[] destination: B153 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B208"
    from_bci -1
    to_bci -1
    predecessors "B207" 
    successors "B211" 
    xhandlers
    flags 
    probability 4563288012940331416
    begin_IR
      LIR
      nr 1840  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1842  <|@ instruction stack:96|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr 1844  <|@ instruction stack:80|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 1846  <|@ instruction JUMP ~[] destination: B208 -> B211 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B316"
    from_bci -1
    to_bci -1
    predecessors "B314" 
    successors "B317" 
    xhandlers
    flags 
    probability 4560356318462058968
    begin_IR
      LIR
      nr 2884  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2886  <|@ instruction rcx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2888  <|@ instruction r11|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr 2890  <|@ instruction r14|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr 2892  <|@ instruction rax|DWORD = NOT rax|DWORD size: DWORD <|@ <|@
      nr 2894  <|@ instruction r8|DWORD = ADD (x: rax|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr 2896  <|@ instruction r9|DWORD = SUB (x: r14|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr 2898  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2900  <|@ instruction rdx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 2902  <|@ st <@st|@reference-map: [stack:88]
live-base-pointers: []
java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
locals: stack:40|QWORD[.] - - stack:64|DWORD 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD] [] callTarget: HotSpotMethod<System.arraycopy(Object, int, Object, int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:31] <|@ <|@
      nr 2904  <|@ instruction r14|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr 2906  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2908  <|@ instruction JUMP ~[] destination: B316 -> B317 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B177"
    from_bci -1
    to_bci -1
    predecessors "B135" 
    successors "B178" "B179" 
    xhandlers
    flags 
    probability 4544778362961599667
    begin_IR
      LIR
      nr 1514  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1516  <|@ instruction CMP r14|DWORD y: 1 size: DWORD <|@ <|@
      nr 1518  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B177 -> B178 falseDestination: B177 -> B179 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B179"
    from_bci -1
    to_bci -1
    predecessors "B177" 
    successors "B180" "B193" 
    xhandlers
    flags 
    probability 4540274763334229171
    begin_IR
      LIR
      nr 1524  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1526  <|@ instruction CMP (x: r10|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr 1528  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B179 -> B180 falseDestination: B179 -> B193 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B180"
    from_bci -1
    to_bci -1
    predecessors "B179" 
    successors "B181" 
    xhandlers
    flags 
    probability 4540274763334229171
    begin_IR
      LIR
      nr 1530  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1532  <|@ instruction JUMP ~[] destination: B180 -> B181 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B181"
    from_bci -1
    to_bci -1
    predecessors "B178" "B180" 
    successors "B182" 
    xhandlers
    flags 
    probability 4544778362961599667
    begin_IR
      LIR
      nr 1534  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1536  <|@ instruction stack:84|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr 1538  <|@ instruction stack:96|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1540  <|@ instruction stack:108|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr 1542  <|@ instruction r11|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr 1544  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1546  <|@ instruction r8|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr 1548  <|@ instruction rsi|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1550  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1552  <|@ instruction JUMP ~[] destination: B181 -> B182 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B183"
    from_bci -1
    to_bci -1
    predecessors "B182" 
    successors "B184" "B187" 
    xhandlers
    flags 
    loop_index 11
    loop_depth 1
    probability 4553299463534714735
    begin_IR
      LIR
      nr 1560  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 1562  <|@ instruction rcx|DWORD = MOV [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1564  <|@ instruction rbx|DWORD = MOV [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1566  <|@ instruction rdi|DWORD = SUB (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1568  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@eef3a58 encoding: base: 0 shift: 3 <|@ <|@
      nr 1570  <|@ instruction CMP (x: rbx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr 1572  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B183 -> B184 falseDestination: B183 -> B187 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B184"
    from_bci -1
    to_bci -1
    predecessors "B183" 
    successors "B185" "B186" 
    xhandlers
    flags 
    loop_index 11
    loop_depth 1
    probability 4553299463534714735
    begin_IR
      LIR
      nr 1574  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1576  <|@ instruction CMP (x: r8|DWORD, y: [rsi|DWORD[.] * 8 + 12]) size: DWORD <|@ <|@
      nr 1578  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B184 -> B185 falseDestination: B184 -> B186 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B185"
    from_bci -1
    to_bci -1
    predecessors "B184" 
    successors "B182" 
    xhandlers
    flags "lle" 
    loop_index 11
    loop_depth 1
    probability 4553299463534714735
    begin_IR
      LIR
      nr 1580  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1582  <|@ instruction stack:112|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1584  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1586  <|@ instruction rdx|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1588  <|@ instruction stack:80|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1590  <|@ instruction stack:116|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1592  <|@ st <@st|@reference-map: [stack:32, stack:48, stack:68, stack:80, stack:88]
live-base-pointers: []
java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
locals: vobject:AbstractList$ListItr:0{cursor=stack:116|DWORD,lastRet=stack:108|DWORD,expectedModCount=stack:64|DWORD,this$0=stack:80|QWORD[.],this$0=stack:80|QWORD[.]} stack:116|DWORD - 
java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
locals: - 
java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
stack: stack:96|QWORD[.] stack:112|DWORD 
locals: - stack:96|QWORD[.] vobject:SubList$1:1{val$index=int[0|0x0],i=vobject:AbstractList$ListItr:0{cursor=stack:116|DWORD,lastRet=stack:108|DWORD,expectedModCount=stack:64|DWORD,this$0=stack:80|QWORD[.],this$0=stack:80|QWORD[.]},this$0=stack:48|QWORD[.]} stack:112|DWORD 
java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
locals: stack:40|QWORD[.] - - - 
vobject:AbstractList$ListItr:0{cursor=stack:116|DWORD,lastRet=stack:108|DWORD,expectedModCount=stack:64|DWORD,this$0=stack:80|QWORD[.],this$0=stack:80|QWORD[.]} Ljava/util/AbstractList$ListItr; stack:116|DWORD stack:108|DWORD stack:64|DWORD stack:80|QWORD[.] stack:80|QWORD[.] 
vobject:SubList$1:1{val$index=int[0|0x0],i=vobject:AbstractList$ListItr:0{cursor=stack:116|DWORD,lastRet=stack:108|DWORD,expectedModCount=stack:64|DWORD,this$0=stack:80|QWORD[.],this$0=stack:80|QWORD[.]},this$0=stack:48|QWORD[.]} Ljava/util/SubList$1; int[0|0x0] vobject:AbstractList$ListItr:0{cursor=stack:116|DWORD,lastRet=stack:108|DWORD,expectedModCount=stack:64|DWORD,this$0=stack:80|QWORD[.],this$0=stack:80|QWORD[.]} stack:48|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractList.get(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:14, 11, 39, 1] <|@ <|@
      nr 1594  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@eef3a58 encoding: base: 0 shift: 3 <|@ <|@
      nr 1596  <|@ instruction r10|DWORD = MOVE stack:112|DWORD moveKind: DWORD <|@ <|@
      nr 1598  <|@ instruction r8|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1600  <|@ instruction MOV (x: [r8|QWORD[.] + r10|DWORD * 4 + 16], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr 1602  <|@ instruction r11|QWORD[.] = LEA [r8|QWORD[.] + r10|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr 1604  <|@ instruction r11|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1606  <|@ instruction r13|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr 1608  <|@ instruction MOVB (x: [r11|QWORD[*] + r13|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 1610  <|@ instruction r11|DWORD = INC stack:116|DWORD size: DWORD <|@ <|@
      nr 1612  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr 1614  <|@ instruction stack:108|DWORD = STACKMOVE (input: stack:116|DWORD, ~backupSlot: stack:32|QWORD) scratch: rax <|@ <|@
      nr 1616  <|@ instruction r14|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr 1618  <|@ instruction r8|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr 1620  <|@ instruction rsi|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1622  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1624  <|@ instruction JUMP ~[] destination: B185 -> B182 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B182"
    from_bci -1
    to_bci -1
    predecessors "B181" "B185" 
    successors "B183" "B189" 
    xhandlers
    flags "llh" 
    loop_index 11
    loop_depth 1
    probability 4554586948177749660
    begin_IR
      LIR
      nr 1554  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr 1556  <|@ instruction CMP (x: r14|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 1558  <|@ instruction BRANCH trueDestinationProbability: 0.7836641850436589 condition: > trueDestination: B182 -> B183 falseDestination: B182 -> B189 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B189"
    from_bci -1
    to_bci -1
    predecessors "B182" 
    successors "B190" 
    xhandlers
    flags 
    probability 4544778362961599667
    begin_IR
      LIR
      nr 1658  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1660  <|@ instruction r10|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1662  <|@ instruction rax|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1664  <|@ instruction r13|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr 1666  <|@ instruction r11|DWORD = MOVE stack:108|DWORD moveKind: DWORD <|@ <|@
      nr 1668  <|@ instruction JUMP ~[] destination: B189 -> B190 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B178"
    from_bci -1
    to_bci -1
    predecessors "B177" 
    successors "B181" 
    xhandlers
    flags 
    probability 4540274763334229171
    begin_IR
      LIR
      nr 1520  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1522  <|@ instruction JUMP ~[] destination: B178 -> B181 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B198"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B237" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1756  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1758  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1760  <|@ instruction r10|DWORD = MOVE input: int[-226323|0xfffffffffffc8bed] <|@ <|@
      nr 1762  <|@ instruction JUMP ~[] destination: B198 -> B237 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B237"
    from_bci -1
    to_bci -1
    predecessors "B50" "B236" "B205" "B198" "B52" "B195" "B83" "B91" "B88" "B194" "B2" "B95" "B137" "B134" "B132" "B193" "B176" "B174" "B133" "B175" 
    successors 
    xhandlers
    flags 
    probability 2374522903531094016
    begin_IR
      LIR
      nr 2100  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 2102  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 2104  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr 2106  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
java.util.ArrayList.addAll(ArrayList.java:581) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B236"
    from_bci -1
    to_bci -1
    predecessors "B202" 
    successors "B237" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2086  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2088  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1399980118] <|@ <|@
      nr 2090  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2092  <|@ instruction r10|DWORD = MOVE input: int[-255259|0xfffffffffffc1ae5] <|@ <|@
      nr 2094  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2096  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2098  <|@ instruction JUMP ~[] destination: B236 -> B237 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B186"
    from_bci -1
    to_bci -1
    predecessors "B184" 
    successors "B188" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1626  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1628  <|@ instruction r9|DWORD = MOVE stack:108|DWORD moveKind: DWORD <|@ <|@
      nr 1630  <|@ instruction rbx|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1632  <|@ instruction r11|DWORD = MOVE input: int[-245779|0xfffffffffffc3fed] <|@ <|@
      nr 1634  <|@ instruction r8|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1636  <|@ instruction JUMP ~[] destination: B186 -> B188 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B188"
    from_bci -1
    to_bci -1
    predecessors "B187" "B186" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1650  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1652  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1654  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1656  <|@ st <@st|@reference-map: [rcx:0, r8:0, stack:80, stack:88]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:138) [bci: 15]
locals: - r8|QWORD[.] vobject:SubList$1:0{val$index=int[0|0x0],i=vobject:AbstractList$ListItr:1{cursor=rbx|DWORD,lastRet=r9|DWORD,expectedModCount=stack:64|DWORD,this$0=rcx|QWORD[.],this$0=rcx|QWORD[.]},this$0=stack:48|QWORD[.]} r10|DWORD 
java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
locals: stack:40|QWORD[.] - - - 
vobject:SubList$1:0{val$index=int[0|0x0],i=vobject:AbstractList$ListItr:1{cursor=rbx|DWORD,lastRet=r9|DWORD,expectedModCount=stack:64|DWORD,this$0=rcx|QWORD[.],this$0=rcx|QWORD[.]},this$0=stack:48|QWORD[.]} Ljava/util/SubList$1; int[0|0x0] vobject:AbstractList$ListItr:1{cursor=rbx|DWORD,lastRet=r9|DWORD,expectedModCount=stack:64|DWORD,this$0=rcx|QWORD[.],this$0=rcx|QWORD[.]} stack:48|QWORD[.] 
vobject:AbstractList$ListItr:1{cursor=rbx|DWORD,lastRet=r9|DWORD,expectedModCount=stack:64|DWORD,this$0=rcx|QWORD[.],this$0=rcx|QWORD[.]} Ljava/util/AbstractList$ListItr; rbx|DWORD r9|DWORD stack:64|DWORD rcx|QWORD[.] rcx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:15, 1] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B187"
    from_bci -1
    to_bci -1
    predecessors "B183" 
    successors "B188" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1638  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1640  <|@ instruction r9|DWORD = MOVE stack:108|DWORD moveKind: DWORD <|@ <|@
      nr 1642  <|@ instruction rbx|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1644  <|@ instruction r11|DWORD = MOVE input: int[-245011|0xfffffffffffc42ed] <|@ <|@
      nr 1646  <|@ instruction r8|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1648  <|@ instruction JUMP ~[] destination: B187 -> B188 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B320"
    from_bci -1
    to_bci -1
    predecessors "B259" 
    successors "B321" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2938  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2940  <|@ instruction rsi|DWORD = MOVE input: int[-273427|0xfffffffffffbd3ed] <|@ <|@
      nr 2942  <|@ instruction r14|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr 2944  <|@ instruction JUMP ~[] destination: B320 -> B321 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B193"
    from_bci -1
    to_bci -1
    predecessors "B179" 
    successors "B237" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1702  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1704  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1800298093] <|@ <|@
      nr 1706  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1708  <|@ instruction r10|DWORD = MOVE input: int[-246555|0xfffffffffffc3ce5] <|@ <|@
      nr 1710  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1712  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1714  <|@ instruction JUMP ~[] destination: B193 -> B237 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B237" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1144  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1146  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1800298093] <|@ <|@
      nr 1148  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1150  <|@ instruction r10|DWORD = MOVE input: int[-232731|0xfffffffffffc72e5] <|@ <|@
      nr 1152  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1154  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1156  <|@ instruction JUMP ~[] destination: B134 -> B237 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B237" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  748  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  750  <|@ instruction r10|DWORD = MOVE input: int[-251411|0xfffffffffffc29ed] <|@ <|@
      nr  752  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  754  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  756  <|@ instruction JUMP ~[] destination: B83 -> B237 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B191"
    from_bci -1
    to_bci -1
    predecessors "B190" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1680  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1682  <|@ instruction r8|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1684  <|@ instruction r9|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr 1686  <|@ instruction r14|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1688  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: r14|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@eef3a58 encoding: base: 0 shift: 3 <|@ <|@
      nr 1690  <|@ instruction MOV [r15|QWORD + 668] y: -249107 size: DWORD <|@ <|@
      nr 1692  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1694  <|@ st <@st|@reference-map: [r8:0, r14:0, stack:80, stack:88]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:143) [bci: 51]
locals: - r8|QWORD[.] vobject:SubList$1:0{val$index=int[0|0x0],i=vobject:AbstractList$ListItr:1{cursor=r10|DWORD,lastRet=r11|DWORD,expectedModCount=r9|DWORD,this$0=r14|QWORD[.],this$0=r14|QWORD[.]},this$0=stack:48|QWORD[.]} - 
java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
locals: stack:40|QWORD[.] - - - 
vobject:SubList$1:0{val$index=int[0|0x0],i=vobject:AbstractList$ListItr:1{cursor=r10|DWORD,lastRet=r11|DWORD,expectedModCount=r9|DWORD,this$0=r14|QWORD[.],this$0=r14|QWORD[.]},this$0=stack:48|QWORD[.]} Ljava/util/SubList$1; int[0|0x0] vobject:AbstractList$ListItr:1{cursor=r10|DWORD,lastRet=r11|DWORD,expectedModCount=r9|DWORD,this$0=r14|QWORD[.],this$0=r14|QWORD[.]} stack:48|QWORD[.] 
vobject:AbstractList$ListItr:1{cursor=r10|DWORD,lastRet=r11|DWORD,expectedModCount=r9|DWORD,this$0=r14|QWORD[.],this$0=r14|QWORD[.]} Ljava/util/AbstractList$ListItr; r10|DWORD r11|DWORD r9|DWORD r14|QWORD[.] r14|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:51, 1] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B237" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  806  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  808  <|@ instruction r10|DWORD = MOVE input: int[-252691|0xfffffffffffc24ed] <|@ <|@
      nr  810  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  812  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  814  <|@ instruction JUMP ~[] destination: B91 -> B237 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B237" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1118  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1800298093] <|@ <|@
      nr 1120  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1122  <|@ instruction r10|DWORD = MOVE input: int[-235291|0xfffffffffffc68e5] <|@ <|@
      nr 1124  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1126  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1128  <|@ instruction JUMP ~[] destination: B132 -> B237 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B175"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B237" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1486  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1488  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1800298093] <|@ <|@
      nr 1490  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1492  <|@ instruction r10|DWORD = MOVE input: int[-240155|0xfffffffffffc55e5] <|@ <|@
      nr 1494  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1496  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1498  <|@ instruction JUMP ~[] destination: B175 -> B237 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B261"
    from_bci -1
    to_bci -1
    predecessors "B260" 
    successors "B321" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2362  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2364  <|@ instruction rsi|DWORD = MOVE input: int[-393313|0xfffffffffff9ff9f] <|@ <|@
      nr 2366  <|@ instruction r14|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr 2368  <|@ instruction JUMP ~[] destination: B261 -> B321 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B237" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  782  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  784  <|@ instruction r10|DWORD = MOVE input: int[-251667|0xfffffffffffc28ed] <|@ <|@
      nr  786  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  788  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  790  <|@ instruction JUMP ~[] destination: B88 -> B237 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B174"
    from_bci -1
    to_bci -1
    predecessors "B145" 
    successors "B237" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1472  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1474  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1800298093] <|@ <|@
      nr 1476  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1478  <|@ instruction r10|DWORD = MOVE input: int[-242459|0xfffffffffffc4ce5] <|@ <|@
      nr 1480  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1482  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1484  <|@ instruction JUMP ~[] destination: B174 -> B237 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B194"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B237" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1716  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1718  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1720  <|@ instruction r10|DWORD = MOVE input: int[-251955|0xfffffffffffc27cd] <|@ <|@
      nr 1722  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1724  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1726  <|@ instruction JUMP ~[] destination: B194 -> B237 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B205"
    from_bci -1
    to_bci -1
    predecessors "B204" 
    successors "B237" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1806  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1808  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1810  <|@ instruction r10|DWORD = MOVE input: int[-254739|0xfffffffffffc1ced] <|@ <|@
      nr 1812  <|@ instruction JUMP ~[] destination: B205 -> B237 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B237" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1130  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1132  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1800298093] <|@ <|@
      nr 1134  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1136  <|@ instruction r10|DWORD = MOVE input: int[-232731|0xfffffffffffc72e5] <|@ <|@
      nr 1138  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1140  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1142  <|@ instruction JUMP ~[] destination: B133 -> B237 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B195"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B237" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1728  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1730  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1732  <|@ instruction r10|DWORD = MOVE input: int[-229683|0xfffffffffffc7ecd] <|@ <|@
      nr 1734  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1736  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1738  <|@ instruction JUMP ~[] destination: B195 -> B237 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B237" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1176  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1178  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1399295821] <|@ <|@
      nr 1180  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1182  <|@ instruction r10|DWORD = MOVE input: int[-238859|0xfffffffffffc5af5] <|@ <|@
      nr 1184  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1186  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1188  <|@ instruction JUMP ~[] destination: B137 -> B237 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B237" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  472  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  474  <|@ instruction r10|DWORD = MOVE input: int[-229907|0xfffffffffffc7ded] <|@ <|@
      nr  476  <|@ instruction JUMP ~[] destination: B52 -> B237 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B176"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B237" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1500  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1502  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1800298093] <|@ <|@
      nr 1504  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1506  <|@ instruction r10|DWORD = MOVE input: int[-240155|0xfffffffffffc55e5] <|@ <|@
      nr 1508  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1510  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1512  <|@ instruction JUMP ~[] destination: B176 -> B237 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B237" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   34  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   36  <|@ instruction r10|DWORD = MOVE input: int[-405345|0xfffffffffff9d09f] <|@ <|@
      nr   38  <|@ instruction JUMP ~[] destination: B2 -> B237 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B237" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  836  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  838  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1399295821] <|@ <|@
      nr  840  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  842  <|@ instruction r10|DWORD = MOVE input: int[-231435|0xfffffffffffc77f5] <|@ <|@
      nr  844  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  846  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  848  <|@ instruction JUMP ~[] destination: B95 -> B237 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B237" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  456  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  458  <|@ instruction r10|DWORD = MOVE input: int[-227859|0xfffffffffffc85ed] <|@ <|@
      nr  460  <|@ instruction JUMP ~[] destination: B50 -> B237 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokeinterface#10, 1      // java.util.Collection.toArray:()java.lang.Object[]
     6: astore_2      
     7: aload_2       
     8: arraylength   
     9: istore_3      
    10: aload_0       
    11: aload_0       
    12: getfield      #0          // size:int
    15: iload_3       
    16: iadd          
    17: invokespecial #28         // ensureCapacityInternal:(int)void
    20: aload_2       
    21: iconst_0      
    22: aload_0       
    23: getfield      #2          // elementData:java.lang.Object[]
    26: aload_0       
    27: getfield      #0          // size:int
    30: iload_3       
    31: invokestatic  #25         // java.lang.System.arraycopy:(java.lang.Object, int, java.lang.Object, int, int)void
    34: aload_0       
    35: dup           
    36: getfield      #0          // size:int
    39: iload_3       
    40: iadd          
    41: putfield      #0          // size:int
    44: iload_3       
    45: ifeq          52
    48: iconst_1      
    49: goto          53
    52: iconst_0      
    53: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B47" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@25350e89 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:40|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:48|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:80, stack:88]
live-base-pointers: []
java.util.ArrayList.addAll(ArrayList.java:581) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction rcx|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction r13|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   14  <|@ instruction stack:56|QWORD = MOVE r13|QWORD moveKind: QWORD <|@ <|@
      nr   16  <|@ instruction CMP rcx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList;, resolved>;compressed} <|@ <|@
      nr   18  <|@ instruction BRANCH trueDestinationProbability: 0.7101534901468434 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4604571713532478778
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction r14|DWORD[.] = MOV [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   24  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r14:0, stack:80, stack:88]
live-base-pointers: []
java.util.ArrayList.addAll(ArrayList.java:581) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r14|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   26  <|@ instruction r10|DWORD = MOV [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   28  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   30  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4604571713532478778
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   42  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   44  <|@ instruction r11|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   46  <|@ instruction r8|DWORD = MOV [r14|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   48  <|@ instruction r9|DWORD = SHL r10|DWORD y: 2 size: DWORD <|@ <|@
      nr   50  <|@ instruction r9|DWORD = LEA [r9|DWORD + 23] size: DWORD <|@ <|@
      nr   52  <|@ instruction r9|DWORD = AND r9|DWORD y: -8 size: DWORD <|@ <|@
      nr   54  <|@ instruction r9|QWORD = MOVSXD r9|DWORD size: QWORD <|@ <|@
      nr   56  <|@ instruction rbx|QWORD = ADD (x: r9|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr   58  <|@ instruction CMP (x: rbx|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr   60  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4604507748592606754
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   88  <|@ instruction MOV (x: [r15|QWORD + 96], y: rbx|QWORD) size: QWORD <|@ <|@
      nr   90  <|@ instruction AMD64PREFETCH ~[r9|QWORD + rcx|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   92  <|@ instruction AMD64PREFETCH ~[r9|QWORD + rcx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   94  <|@ instruction AMD64PREFETCH ~[r9|QWORD + rcx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   96  <|@ instruction AMD64PREFETCH ~[r9|QWORD + rcx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   98  <|@ instruction MOV (x: [rcx|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  100  <|@ instruction MOV [rcx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  102  <|@ instruction MOV (x: [rcx|QWORD + 8], y: r8|DWORD) size: DWORD <|@ <|@
      nr  104  <|@ instruction rcx|QWORD[.] = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  106  <|@ instruction rdx|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  108  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" 
    successors "B22" "B8" 
    xhandlers
    flags 
    probability 4604571713532478778
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  112  <|@ instruction rcx|DWORD = MOV [r14|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  114  <|@ instruction CMP (x: r10|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  116  <|@ instruction r11|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: rcx|DWORD) condition: > <|@ <|@
      nr  118  <|@ instruction rcx|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  120  <|@ instruction CMP rcx|QWORD y: 1 size: QWORD <|@ <|@
      nr  122  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B6 -> B22 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B13" "B11" 
    xhandlers
    flags 
    probability 4600068113905108282
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  130  <|@ instruction r11|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr  132  <|@ instruction r8|QWORD[.] = LEA [rdx|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  134  <|@ instruction r9|QWORD[*] = LEA [r14|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr  136  <|@ instruction TEST (x: r11|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  142  <|@ instruction rbx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  138  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B8 -> B13 falseDestination: B8 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B16" "B15" 
    xhandlers
    flags 
    probability 4600068113905108282
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  170  <|@ instruction r11|QWORD = LEA [rcx|QWORD - 4] size: QWORD <|@ <|@
      nr  172  <|@ instruction CMP (x: rbx|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  174  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B13 -> B16 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4598468990408307692
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  182  <|@ instruction xmm0|V128_DWORD[....] = H [r9|QWORD[*] + rbx|QWORD * 4] nZ: XMM oh: VMOVDQU <|@ <|@
      nr  184  <|@ instruction J (address: [r8|QWORD[.] + rbx|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  186  <|@ instruction r11|QWORD = LEA [rbx|QWORD + 4] size: QWORD <|@ <|@
      nr  188  <|@ instruction rbx|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  190  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B13" 
    successors "B19" "B18" 
    xhandlers
    flags 
    probability 4600068113905108282
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  194  <|@ instruction r11|QWORD = LEA [rcx|QWORD - 2] size: QWORD <|@ <|@
      nr  196  <|@ instruction CMP (x: rbx|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  198  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B16 -> B19 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4598468990408307692
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  206  <|@ instruction xmm0|V64_DWORD[..] = H [r9|QWORD[*] + rbx|QWORD * 4] nZ: XMM oh: VMOVQ <|@ <|@
      nr  208  <|@ instruction J (address: [r8|QWORD[.] + rbx|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr  210  <|@ instruction r11|QWORD = LEA [rbx|QWORD + 2] size: QWORD <|@ <|@
      nr  212  <|@ instruction rbx|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B16" 
    successors "B22" "B21" 
    xhandlers
    flags 
    probability 4600068113905108282
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  218  <|@ instruction r11|QWORD = DEC rcx|QWORD size: QWORD <|@ <|@
      nr  220  <|@ instruction CMP (x: rbx|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  222  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B19 -> B22 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4598468990408307692
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  230  <|@ instruction r11|DWORD[.] = MOV [r9|QWORD[*] + rbx|QWORD * 4] size: DWORD <|@ <|@
      nr  232  <|@ instruction MOV (x: [r8|QWORD[.] + rbx|QWORD * 4], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr  234  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B6" "B21" "B19" 
    successors "B23" "B39" 
    xhandlers
    flags 
    probability 4604571713532478778
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  238  <|@ instruction r11|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  240  <|@ instruction CMP (x: r11|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  242  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B22" "B36" "B34" 
    successors "B44" "B41" 
    xhandlers
    flags 
    probability 4604571713532478778
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  360  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  362  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B39 -> B44 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4600068113905108282
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  370  <|@ instruction rcx|DWORD = DEC r10|DWORD size: DWORD <|@ <|@
      nr  372  <|@ instruction rcx|DWORD = SHL rcx|DWORD y: 2 size: DWORD <|@ <|@
      nr  374  <|@ instruction rcx|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr  376  <|@ instruction r11|QWORD[.] = LEA [rdx|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  378  <|@ instruction r11|QWORD[.] = ADD (x: r11|QWORD[.], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  380  <|@ instruction r11|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  382  <|@ instruction rcx|QWORD[.] = LEA [rdx|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  384  <|@ instruction rcx|QWORD[*] = SHR rcx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  386  <|@ instruction r11|QWORD[*] = SUB (x: r11|QWORD[*], ~y: rcx|QWORD[*]) size: QWORD <|@ <|@
      nr  388  <|@ instruction r11|QWORD[*] = INC r11|QWORD[*] size: QWORD <|@ <|@
      nr  390  <|@ instruction JUMP ~[] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B42" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4600068113905108282
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  412  <|@ instruction r11|QWORD[*] = DEC r11|QWORD[*] size: QWORD <|@ <|@
      nr  414  <|@ instruction r8|QWORD[*] = ADD (x: rcx|QWORD[*], y: r13|QWORD) size: QWORD <|@ <|@
      nr  416  <|@ instruction r8|QWORD[*] = ADD (x: r8|QWORD[*], y: r11|QWORD[*]) size: QWORD <|@ <|@
      nr  418  <|@ instruction MOVB (x: [r8|QWORD[*]], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  420  <|@ instruction JUMP ~[] destination: B45 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B45" 
    successors "B44" "B45" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4604571713532478778
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  394  <|@ instruction CMP r11|QWORD[*] y: 1 size: QWORD <|@ <|@
      nr  396  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B42 -> B44 falseDestination: B42 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4600068113905108282
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  246  <|@ instruction r8|QWORD[.] = LEA [rdx|QWORD[.] + rcx|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr  248  <|@ instruction r11|QWORD = SUB (x: r11|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  250  <|@ instruction rcx|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  252  <|@ instruction TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  254  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 4598468990408307692
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  258  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  260  <|@ instruction JUMP ~[] destination: B24 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B24" "B26" 
    successors "B31" "B30" 
    xhandlers
    flags 
    probability 4600068113905108282
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  286  <|@ instruction rcx|QWORD = LEA [r11|QWORD - 4] size: QWORD <|@ <|@
      nr  288  <|@ instruction CMP (x: r9|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  290  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B28 -> B31 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4598468990408307692
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  298  <|@ instruction xmm0|V128_DWORD[....] = L oc: SIMD<null,null,null,null> <|@ <|@
      nr  300  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  302  <|@ instruction rcx|QWORD = LEA [r9|QWORD + 4] size: QWORD <|@ <|@
      nr  304  <|@ instruction r9|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  306  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" 
    successors "B34" "B33" 
    xhandlers
    flags 
    probability 4600068113905108282
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  310  <|@ instruction rcx|QWORD = LEA [r11|QWORD - 2] size: QWORD <|@ <|@
      nr  312  <|@ instruction CMP (x: r9|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  314  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B31 -> B34 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4598468990408307692
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  322  <|@ instruction xmm0|V64_DWORD[..] = L oc: SIMD<null,null> <|@ <|@
      nr  324  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr  326  <|@ instruction rcx|QWORD = LEA [r9|QWORD + 2] size: QWORD <|@ <|@
      nr  328  <|@ instruction r9|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B31" 
    successors "B39" "B36" 
    xhandlers
    flags 
    probability 4600068113905108282
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  334  <|@ instruction r11|QWORD = DEC r11|QWORD size: QWORD <|@ <|@
      nr  336  <|@ instruction CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  338  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B34 -> B39 falseDestination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B39" 
    xhandlers
    flags 
    probability 4598468990408307692
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  346  <|@ instruction MOV (x: [r8|QWORD[.] + r9|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  348  <|@ instruction JUMP ~[] destination: B36 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B39" "B42" 
    successors "B239" 
    xhandlers
    flags 
    probability 4604571713532478778
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  404  <|@ instruction rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction r14|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  408  <|@ instruction JUMP ~[] destination: B44 -> B239 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B239"
    from_bci -1
    to_bci -1
    predecessors "B238" "B44" "B192" "B233" 
    successors "B240" "B244" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 2122  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 2124  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 2126  <|@ st <@st|@reference-map: [rax:0, rsi:0, r10:0, stack:88]
live-base-pointers: []
java.util.ArrayList.addAll(ArrayList.java:581) [bci: 6]
stack: rax|QWORD[.] 
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:6] <|@ <|@
      nr 2128  <|@ instruction r11|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 2130  <|@ instruction rdi|DWORD = ADD (x: r14|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr 2132  <|@ instruction CMP r10|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Object[0]{}] <|@ <|@
      nr 2134  <|@ instruction BRANCH trueDestinationProbability: 0.20639829530068676 condition: = trueDestination: B239 -> B240 falseDestination: B239 -> B244 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B244"
    from_bci -1
    to_bci -1
    predecessors "B239" "B241" "B240" 
    successors "B245" "B259" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr 2156  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2158  <|@ instruction stack:64|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr 2160  <|@ instruction stack:48|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2162  <|@ instruction stack:68|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 2164  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 2166  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, ~y: [rsi|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr 2168  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: rdx|DWORD) size: DWORD <|@ <|@
      nr 2170  <|@ instruction r8|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr 2172  <|@ instruction r9|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 2174  <|@ instruction rdx|DWORD = SUB (x: rdi|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr 2176  <|@ instruction CMP rdx|DWORD y: 1 size: DWORD <|@ <|@
      nr 2178  <|@ instruction BRANCH trueDestinationProbability: 0.7759914359571053 condition: < trueDestination: B244 -> B245 falseDestination: B244 -> B259 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B245"
    from_bci -1
    to_bci -1
    predecessors "B244" 
    successors "B246" "B247" 
    xhandlers
    flags 
    probability 4605164729028914646
    begin_IR
      LIR
      nr 2180  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2182  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr 2184  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B245 -> B246 falseDestination: B245 -> B247 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B247"
    from_bci -1
    to_bci -1
    predecessors "B245" 
    successors "B248" "B249" 
    xhandlers
    flags 
    probability 4605094833934078264
    begin_IR
      LIR
      nr 2192  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2194  <|@ instruction CMP (x: r14|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 2196  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B247 -> B248 falseDestination: B247 -> B249 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B249"
    from_bci -1
    to_bci -1
    predecessors "B247" 
    successors "B250" "B251" 
    xhandlers
    flags 
    probability 4605025637790190245
    begin_IR
      LIR
      nr 2204  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2206  <|@ instruction r8|DWORD = SUB (x: r8|DWORD, ~y: r14|DWORD) size: DWORD <|@ <|@
      nr 2208  <|@ instruction CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr 2210  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B249 -> B250 falseDestination: B249 -> B251 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B251"
    from_bci -1
    to_bci -1
    predecessors "B249" 
    successors "B258" "B253" 
    xhandlers
    flags 
    probability 4604957133607741107
    begin_IR
      LIR
      nr 2218  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2220  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr 2222  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B251 -> B258 falseDestination: B251 -> B253 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B253"
    from_bci -1
    to_bci -1
    predecessors "B251" 
    successors "B254" "B255" 
    xhandlers
    flags 
    probability 4604278942201494638
    begin_IR
      LIR
      nr 2228  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2230  <|@ instruction rdi|DWORD = MOV [rax|QWORD[.] + 8] size: DWORD <|@ <|@
      nr 2232  <|@ instruction r8|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr 2234  <|@ instruction r9|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr 2236  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@eef3a58 encoding: base: 0 shift: 3 <|@ <|@
      nr 2238  <|@ instruction rcx|QWORD = MOV r14|DWORD size: DWORD <|@ <|@
      nr 2240  <|@ instruction CMP (x: r8|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr 2242  <|@ instruction BRANCH trueDestinationProbability: 0.6 condition: = trueDestination: B253 -> B254 falseDestination: B253 -> B255 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B254"
    from_bci -1
    to_bci -1
    predecessors "B253" 
    successors "B258" 
    xhandlers
    flags 
    probability 4600996087105367786
    begin_IR
      LIR
      nr 2244  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2246  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2248  <|@ instruction r10|QWORD[*] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2250  <|@ instruction rdi|QWORD = LEA [rax|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 2252  <|@ instruction rsi|QWORD = LEA [r10|QWORD[*] + r9|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr 2254  <|@ instruction rdx|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr 2256  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: ObjectArraycopyKillAny(Word,Word,Word)void@0x106813120:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 2258  <|@ instruction r14|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr 2260  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2262  <|@ instruction JUMP ~[] destination: B254 -> B258 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B258"
    from_bci -1
    to_bci -1
    predecessors "B251" "B254" "B256" "B257" 
    successors 
    xhandlers
    flags 
    probability 4604957133607741107
    begin_IR
      LIR
      nr 2326  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2328  <|@ instruction rax|DWORD = ADD (x: r14|DWORD, ~y: [rsi|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr 2330  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr 2332  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr 2334  <|@ instruction rax|DWORD = SETCC condition: != <|@ <|@
      nr 2336  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B48" "B199" 
    xhandlers
    flags 
    probability 4598893030452983180
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  428  <|@ instruction CMP rcx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/RandomAccessSubList;, resolved>;compressed} <|@ <|@
      nr  430  <|@ instruction BRANCH trueDestinationProbability: 0.5054073948247549 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B199 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B198" 
    xhandlers
    flags 
    probability 4594445899282223279
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  434  <|@ instruction r14|DWORD[.] = MOV [rdx|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  436  <|@ instruction stack:60|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD <|@ <|@
      nr  438  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:68, stack:80, stack:88]
live-base-pointers: []
java.util.ArrayList.addAll(ArrayList.java:581) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction r10|DWORD = MOV [r14|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  440  <|@ instruction stack:64|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  442  <|@ instruction CMP (x: r10|DWORD, y: [rdx|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  444  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B198 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4594445899282223279
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  448  <|@ instruction r11|DWORD = MOV [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  450  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  452  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B49 -> B50 falseDestination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4594445899282223279
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  464  <|@ instruction r8|DWORD = MOV [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  466  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  468  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B51 -> B52 falseDestination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B58" 
    xhandlers
    flags 
    probability 4594445899282223279
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  480  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  482  <|@ instruction r9|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  484  <|@ instruction CMP r11|DWORD y: 16777215 size: DWORD <|@ <|@
      nr  486  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B58" "B56" 
    xhandlers
    flags 
    probability 4593918111383054494
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  490  <|@ instruction rbx|DWORD = SHL r11|DWORD y: 2 size: DWORD <|@ <|@
      nr  492  <|@ instruction rbx|DWORD = LEA [rbx|DWORD + 23] size: DWORD <|@ <|@
      nr  494  <|@ instruction rbx|DWORD = AND rbx|DWORD y: -8 size: DWORD <|@ <|@
      nr  496  <|@ instruction rbx|QWORD = MOVSXD rbx|DWORD size: QWORD <|@ <|@
      nr  498  <|@ instruction rdi|QWORD = ADD (x: rbx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  500  <|@ instruction CMP (x: rdi|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  502  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B54 -> B58 falseDestination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B59" 
    xhandlers
    flags 
    probability 4593870610472129303
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  512  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  514  <|@ instruction AMD64PREFETCH ~[rbx|QWORD + rcx|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  516  <|@ instruction AMD64PREFETCH ~[rbx|QWORD + rcx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  518  <|@ instruction AMD64PREFETCH ~[rbx|QWORD + rcx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  520  <|@ instruction AMD64PREFETCH ~[rbx|QWORD + rcx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  522  <|@ instruction MOV (x: [rcx|QWORD + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr  524  <|@ instruction MOV [rcx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  526  <|@ instruction MOV [rcx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr  528  <|@ instruction rcx|QWORD[.] = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  530  <|@ instruction rax|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  532  <|@ instruction stack:68|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  534  <|@ instruction r14|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  536  <|@ instruction JUMP ~[] destination: B56 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" 
    successors "B75" "B61" 
    xhandlers
    flags 
    probability 4594445899282223279
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  562  <|@ instruction r10|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr  564  <|@ instruction r11|QWORD = DEC r10|QWORD size: QWORD <|@ <|@
      nr  566  <|@ instruction r8|QWORD = LEA [r10|QWORD - 2] size: QWORD <|@ <|@
      nr  568  <|@ instruction r9|QWORD = LEA [r10|QWORD - 4] size: QWORD <|@ <|@
      nr  570  <|@ instruction rcx|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  572  <|@ instruction CMP r14|DWORD y: 1 size: DWORD <|@ <|@
      nr  574  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B59 -> B75 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4589942299654852783
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  582  <|@ instruction rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  584  <|@ instruction TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  586  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B66" 
    xhandlers
    flags 
    probability 4588077639523326214
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  590  <|@ instruction rdx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  592  <|@ instruction JUMP ~[] destination: B62 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B62" "B64" 
    successors "B69" "B68" 
    xhandlers
    flags 
    probability 4589942299654852783
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  618  <|@ instruction CMP (x: rdx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  620  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B66 -> B69 falseDestination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    probability 4588077639523326214
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  628  <|@ instruction xmm0|V128_DWORD[....] = L oc: SIMD<null,null,null,null> <|@ <|@
      nr  630  <|@ instruction J (address: [rsi|QWORD[.] + rdx|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  632  <|@ instruction rdx|QWORD = LEA [rdx|QWORD + 4] size: QWORD <|@ <|@
      nr  634  <|@ instruction JUMP ~[] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" "B66" 
    successors "B72" "B71" 
    xhandlers
    flags 
    probability 4589942299654852783
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  638  <|@ instruction CMP (x: rdx|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  640  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B69 -> B72 falseDestination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4588077639523326214
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  648  <|@ instruction xmm0|V64_DWORD[..] = L oc: SIMD<null,null> <|@ <|@
      nr  650  <|@ instruction J (address: [rsi|QWORD[.] + rdx|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr  652  <|@ instruction rdx|QWORD = LEA [rdx|QWORD + 2] size: QWORD <|@ <|@
      nr  654  <|@ instruction JUMP ~[] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" "B69" 
    successors "B75" "B74" 
    xhandlers
    flags 
    probability 4589942299654852783
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  658  <|@ instruction CMP (x: rdx|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  660  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B72 -> B75 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" 
    xhandlers
    flags 
    probability 4588077639523326214
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  668  <|@ instruction MOV (x: [rsi|QWORD[.] + rdx|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  670  <|@ instruction JUMP ~[] destination: B74 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B59" "B74" "B72" 
    successors "B80" "B77" 
    xhandlers
    flags 
    probability 4594445899282223279
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  674  <|@ instruction rsi|DWORD = DEC r14|DWORD size: DWORD <|@ <|@
      nr  676  <|@ instruction rsi|DWORD = SHL rsi|DWORD y: 2 size: DWORD <|@ <|@
      nr  678  <|@ instruction rbx|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr  680  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  682  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B75 -> B80 falseDestination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B78" 
    xhandlers
    flags 
    probability 4589942299654852783
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  692  <|@ instruction rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  694  <|@ instruction rsi|QWORD[.] = ADD (x: rsi|QWORD[.], y: rbx|QWORD) size: QWORD <|@ <|@
      nr  696  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  698  <|@ instruction rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  700  <|@ instruction rdx|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  702  <|@ instruction rsi|QWORD[*] = SUB (x: rsi|QWORD[*], ~y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr  704  <|@ instruction rsi|QWORD[*] = INC rsi|QWORD[*] size: QWORD <|@ <|@
      nr  706  <|@ instruction JUMP ~[] destination: B77 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B196"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B78" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4589942299654852783
    begin_IR
      LIR
      nr 1740  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 1742  <|@ instruction rsi|QWORD[*] = DEC rsi|QWORD[*] size: QWORD <|@ <|@
      nr 1744  <|@ instruction rdi|QWORD[*] = ADD (x: rdx|QWORD[*], y: r13|QWORD) size: QWORD <|@ <|@
      nr 1746  <|@ instruction rdi|QWORD[*] = ADD (x: rdi|QWORD[*], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr 1748  <|@ instruction MOVB (x: [rdi|QWORD[*]], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 1750  <|@ instruction JUMP ~[] destination: B196 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" "B196" 
    successors "B80" "B196" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4594445899282223279
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  710  <|@ instruction CMP rsi|QWORD[*] y: 1 size: QWORD <|@ <|@
      nr  712  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B78 -> B80 falseDestination: B78 -> B196 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B255"
    from_bci -1
    to_bci -1
    predecessors "B253" 
    successors "B256" "B257" 
    xhandlers
    flags 
    probability 4598554598042880498
    begin_IR
      LIR
      nr 2264  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2266  <|@ instruction r8|QWORD = MOV [r8|DWORD * 8 + 232] size: QWORD <|@ <|@
      nr 2268  <|@ instruction rdi|DWORD = MOV [r8|QWORD + 12] size: DWORD <|@ <|@
      nr 2270  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2272  <|@ instruction rdx|QWORD[*] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2274  <|@ instruction rbx|QWORD = MOVSXD rdi|DWORD size: QWORD <|@ <|@
      nr 2276  <|@ instruction rdi|QWORD = LEA [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 2278  <|@ instruction rsi|QWORD = LEA [rdx|QWORD[*] + r9|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr 2280  <|@ instruction rdx|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr 2282  <|@ instruction rcx|QWORD = MOVE rbx|QWORD moveKind: QWORD <|@ <|@
      nr 2284  <|@ instruction stack:96|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2286  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: ObjectCheckcast(Word,Word,Word,Word,Word)int@0x1068133a0:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 2288  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 2290  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B255 -> B256 falseDestination: B255 -> B257 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B256"
    from_bci -1
    to_bci -1
    predecessors "B255" 
    successors "B258" 
    xhandlers
    flags 
    probability 4598505768261630752
    begin_IR
      LIR
      nr 2292  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2294  <|@ instruction r14|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr 2296  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2298  <|@ instruction JUMP ~[] destination: B256 -> B258 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B259"
    from_bci -1
    to_bci -1
    predecessors "B244" 
    successors "B260" "B320" 
    xhandlers
    flags 
    probability 4597238779374946467
    begin_IR
      LIR
      nr 2338  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2340  <|@ instruction rax|DWORD = SHR r8|DWORD size: DWORD <|@ <|@
      nr 2342  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr 2344  <|@ instruction rsi|DWORD = SUB (x: rax|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr 2346  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr 2348  <|@ instruction r14|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: rdi|DWORD) condition: < <|@ <|@
      nr 2350  <|@ instruction rax|DWORD = LEA [r14|DWORD - 2147483639] size: DWORD <|@ <|@
      nr 2352  <|@ instruction CMP rax|DWORD y: 1 size: DWORD <|@ <|@
      nr 2354  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B259 -> B260 falseDestination: B259 -> B320 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B260"
    from_bci -1
    to_bci -1
    predecessors "B259" 
    successors "B261" "B262" 
    xhandlers
    flags 
    probability 4597238779374946467
    begin_IR
      LIR
      nr 2356  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2358  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr 2360  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B260 -> B261 falseDestination: B260 -> B262 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B262"
    from_bci -1
    to_bci -1
    predecessors "B260" 
    successors "B263" "B264" 
    xhandlers
    flags 
    probability 4597238779374946467
    begin_IR
      LIR
      nr 2370  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2372  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr 2374  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr 2376  <|@ instruction r11|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr 2378  <|@ instruction rdx|DWORD = SHL r14|DWORD y: 2 size: DWORD <|@ <|@
      nr 2380  <|@ instruction rdx|DWORD = LEA [rdx|DWORD + 23] size: DWORD <|@ <|@
      nr 2382  <|@ instruction rdx|DWORD = AND rdx|DWORD y: -8 size: DWORD <|@ <|@
      nr 2384  <|@ instruction rdx|QWORD = MOVSXD rdx|DWORD size: QWORD <|@ <|@
      nr 2386  <|@ instruction rcx|QWORD = ADD (x: rdx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr 2388  <|@ instruction CMP (x: rcx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 2390  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B262 -> B263 falseDestination: B262 -> B264 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B264"
    from_bci -1
    to_bci -1
    predecessors "B262" 
    successors "B265" 
    xhandlers
    flags 
    probability 4597158071784102356
    begin_IR
      LIR
      nr 2424  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2426  <|@ instruction MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD <|@ <|@
      nr 2428  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr 2430  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr 2432  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr 2434  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr 2436  <|@ instruction MOV (x: [rax|QWORD + 12], y: r14|DWORD) size: DWORD <|@ <|@
      nr 2438  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr 2440  <|@ instruction MOV (x: [rax|QWORD + 8], y: r11|DWORD) size: DWORD <|@ <|@
      nr 2442  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr 2444  <|@ instruction r11|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2446  <|@ instruction JUMP ~[] destination: B264 -> B265 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B265"
    from_bci -1
    to_bci -1
    predecessors "B264" "B263" 
    successors "B266" "B267" 
    xhandlers
    flags 
    probability 4597238779374946466
    begin_IR
      LIR
      nr 2448  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2450  <|@ instruction CMP (x: r14|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr 2452  <|@ instruction rax|DWORD = CMOVE (falseValue: r14|DWORD, ~trueValue: r8|DWORD) condition: > <|@ <|@
      nr 2454  <|@ instruction rdi|QWORD = MOVSXD rax|DWORD size: QWORD <|@ <|@
      nr 2456  <|@ instruction CMP rdi|QWORD y: 1 size: QWORD <|@ <|@
      nr 2458  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B265 -> B266 falseDestination: B265 -> B267 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B267"
    from_bci -1
    to_bci -1
    predecessors "B265" 
    successors "B272" "B270" 
    xhandlers
    flags 
    probability 4592735179747575970
    begin_IR
      LIR
      nr 2468  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2470  <|@ instruction rsi|QWORD[.] = LEA [r11|QWORD[.] + 16] size: QWORD <|@ <|@
      nr 2472  <|@ instruction rdx|QWORD[*] = LEA [r10|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr 2474  <|@ instruction r10|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr 2476  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 2482  <|@ instruction rbx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 2484  <|@ instruction rcx|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr 2486  <|@ instruction r8|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2478  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B267 -> B272 falseDestination: B267 -> B270 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B272"
    from_bci -1
    to_bci -1
    predecessors "B267" "B270" 
    successors "B275" "B274" 
    xhandlers
    flags 
    probability 4592735179747575970
    begin_IR
      LIR
      nr 2516  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2518  <|@ instruction r10|QWORD = LEA [rdi|QWORD - 4] size: QWORD <|@ <|@
      nr 2520  <|@ instruction CMP (x: rbx|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 2522  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B272 -> B275 falseDestination: B272 -> B274 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B274"
    from_bci -1
    to_bci -1
    predecessors "B272" 
    successors "B275" 
    xhandlers
    flags 
    probability 4590717489976473210
    begin_IR
      LIR
      nr 2528  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2530  <|@ instruction xmm0|V128_DWORD[....] = H [rdx|QWORD[*] + rbx|QWORD * 4] nZ: XMM oh: VMOVDQU <|@ <|@
      nr 2532  <|@ instruction J (address: [rsi|QWORD[.] + rbx|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr 2534  <|@ instruction r10|QWORD = LEA [rbx|QWORD + 4] size: QWORD <|@ <|@
      nr 2536  <|@ instruction rbx|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 2538  <|@ instruction JUMP ~[] destination: B274 -> B275 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B275"
    from_bci -1
    to_bci -1
    predecessors "B274" "B272" 
    successors "B278" "B277" 
    xhandlers
    flags 
    probability 4592735179747575970
    begin_IR
      LIR
      nr 2540  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2542  <|@ instruction r10|QWORD = LEA [rdi|QWORD - 2] size: QWORD <|@ <|@
      nr 2544  <|@ instruction CMP (x: rbx|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 2546  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B275 -> B278 falseDestination: B275 -> B277 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B277"
    from_bci -1
    to_bci -1
    predecessors "B275" 
    successors "B278" 
    xhandlers
    flags 
    probability 4590717489976473210
    begin_IR
      LIR
      nr 2552  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2554  <|@ instruction xmm0|V64_DWORD[..] = H [rdx|QWORD[*] + rbx|QWORD * 4] nZ: XMM oh: VMOVQ <|@ <|@
      nr 2556  <|@ instruction J (address: [rsi|QWORD[.] + rbx|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr 2558  <|@ instruction r10|QWORD = LEA [rbx|QWORD + 2] size: QWORD <|@ <|@
      nr 2560  <|@ instruction rbx|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 2562  <|@ instruction JUMP ~[] destination: B277 -> B278 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B278"
    from_bci -1
    to_bci -1
    predecessors "B277" "B275" 
    successors "B281" "B280" 
    xhandlers
    flags 
    probability 4592735179747575970
    begin_IR
      LIR
      nr 2564  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2566  <|@ instruction r10|QWORD = DEC rdi|QWORD size: QWORD <|@ <|@
      nr 2568  <|@ instruction CMP (x: rbx|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 2570  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B278 -> B281 falseDestination: B278 -> B280 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B280"
    from_bci -1
    to_bci -1
    predecessors "B278" 
    successors "B281" 
    xhandlers
    flags 
    probability 4590717489976473210
    begin_IR
      LIR
      nr 2576  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2578  <|@ instruction rdx|DWORD[.] = MOV [rdx|QWORD[*] + rbx|QWORD * 4] size: DWORD <|@ <|@
      nr 2580  <|@ instruction MOV (x: [rsi|QWORD[.] + rbx|QWORD * 4], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr 2582  <|@ instruction JUMP ~[] destination: B280 -> B281 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B281"
    from_bci -1
    to_bci -1
    predecessors "B266" "B280" "B278" 
    successors "B282" "B298" 
    xhandlers
    flags 
    probability 4597238779374946466
    begin_IR
      LIR
      nr 2584  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2586  <|@ instruction rsi|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr 2588  <|@ instruction CMP (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr 2590  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B281 -> B282 falseDestination: B281 -> B298 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B298"
    from_bci -1
    to_bci -1
    predecessors "B281" "B295" "B293" 
    successors "B303" "B300" 
    xhandlers
    flags 
    probability 4597238779374946466
    begin_IR
      LIR
      nr 2706  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2708  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr 2710  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B298 -> B303 falseDestination: B298 -> B300 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B300"
    from_bci -1
    to_bci -1
    predecessors "B298" 
    successors "B301" 
    xhandlers
    flags 
    probability 4592735179747575970
    begin_IR
      LIR
      nr 2718  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2720  <|@ instruction rdi|DWORD = DEC r14|DWORD size: DWORD <|@ <|@
      nr 2722  <|@ instruction rdi|DWORD = SHL rdi|DWORD y: 2 size: DWORD <|@ <|@
      nr 2724  <|@ instruction rdi|QWORD = MOVSXD rdi|DWORD size: QWORD <|@ <|@
      nr 2726  <|@ instruction rsi|QWORD[.] = LEA [r11|QWORD[.] + 16] size: QWORD <|@ <|@
      nr 2728  <|@ instruction rsi|QWORD[.] = ADD (x: rsi|QWORD[.], y: rdi|QWORD) size: QWORD <|@ <|@
      nr 2730  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 2732  <|@ instruction rdi|QWORD[.] = LEA [r11|QWORD[.] + 16] size: QWORD <|@ <|@
      nr 2734  <|@ instruction rdi|QWORD[*] = SHR rdi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 2736  <|@ instruction rsi|QWORD[*] = SUB (x: rsi|QWORD[*], ~y: rdi|QWORD[*]) size: QWORD <|@ <|@
      nr 2738  <|@ instruction rsi|QWORD[*] = INC rsi|QWORD[*] size: QWORD <|@ <|@
      nr 2740  <|@ instruction JUMP ~[] destination: B300 -> B301 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B318"
    from_bci -1
    to_bci -1
    predecessors "B301" 
    successors "B301" 
    xhandlers
    flags "lle" 
    loop_index 16
    loop_depth 1
    probability 4592735179747575970
    begin_IR
      LIR
      nr 2922  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 2924  <|@ instruction rsi|QWORD[*] = DEC rsi|QWORD[*] size: QWORD <|@ <|@
      nr 2926  <|@ instruction rdx|QWORD[*] = ADD (x: rdi|QWORD[*], y: r13|QWORD) size: QWORD <|@ <|@
      nr 2928  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD[*], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr 2930  <|@ instruction MOVB (x: [rdx|QWORD[*]], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 2932  <|@ instruction JUMP ~[] destination: B318 -> B301 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B301"
    from_bci -1
    to_bci -1
    predecessors "B300" "B318" 
    successors "B303" "B318" 
    xhandlers
    flags "llh" 
    loop_index 16
    loop_depth 1
    probability 4597238779374946466
    begin_IR
      LIR
      nr 2742  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2744  <|@ instruction CMP rsi|QWORD[*] y: 1 size: QWORD <|@ <|@
      nr 2746  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B301 -> B303 falseDestination: B301 -> B318 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B240"
    from_bci -1
    to_bci -1
    predecessors "B239" 
    successors "B241" "B244" 
    xhandlers
    flags 
    probability 4596604302576984052
    begin_IR
      LIR
      nr 2136  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2138  <|@ instruction CMP rdi|DWORD y: 11 size: DWORD <|@ <|@
      nr 2140  <|@ instruction BRANCH trueDestinationProbability: 0.7356387781002678 condition: < trueDestination: B240 -> B241 falseDestination: B240 -> B244 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B241"
    from_bci -1
    to_bci -1
    predecessors "B240" 
    successors "B244" 
    xhandlers
    flags 
    probability 4594638437905347158
    begin_IR
      LIR
      nr 2142  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2144  <|@ instruction rdi|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr 2146  <|@ instruction JUMP ~[] destination: B241 -> B244 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B199"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B200" "B238" 
    xhandlers
    flags 
    probability 4594332962369002089
    begin_IR
      LIR
      nr 1764  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1766  <|@ instruction CMP rcx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Collections$CopiesList;, resolved>;compressed} <|@ <|@
      nr 1768  <|@ instruction BRANCH trueDestinationProbability: 0.9487693188322834 condition: = trueDestination: B199 -> B200 falseDestination: B199 -> B238 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B200"
    from_bci -1
    to_bci -1
    predecessors "B199" 
    successors "B204" "B202" 
    xhandlers
    flags 
    probability 4594068358868130440
    begin_IR
      LIR
      nr 1770  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1772  <|@ instruction r14|DWORD = MOV [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1774  <|@ instruction r10|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr 1776  <|@ instruction r11|QWORD = DEC r10|QWORD size: QWORD <|@ <|@
      nr 1778  <|@ instruction CMP r14|DWORD y: 1 size: DWORD <|@ <|@
      nr 1780  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B200 -> B204 falseDestination: B200 -> B202 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B202"
    from_bci -1
    to_bci -1
    predecessors "B200" 
    successors "B204" "B236" 
    xhandlers
    flags 
    probability 4589564759240759944
    begin_IR
      LIR
      nr 1786  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1788  <|@ instruction CMP (x: r10|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr 1790  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B202 -> B204 falseDestination: B202 -> B236 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B204"
    from_bci -1
    to_bci -1
    predecessors "B200" "B202" 
    successors "B205" "B206" 
    xhandlers
    flags 
    probability 4594068358868130440
    begin_IR
      LIR
      nr 1796  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1798  <|@ instruction r8|DWORD[.] = MOV [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1800  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, stack:80, stack:88]
live-base-pointers: []
java.util.ArrayList.addAll(ArrayList.java:581) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r8|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr 1802  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr 1804  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B204 -> B205 falseDestination: B204 -> B206 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B206"
    from_bci -1
    to_bci -1
    predecessors "B204" 
    successors "B207" "B211" 
    xhandlers
    flags 
    probability 4594068358868130440
    begin_IR
      LIR
      nr 1814  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1816  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr 1818  <|@ instruction r9|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr 1820  <|@ instruction CMP r14|DWORD y: 16777215 size: DWORD <|@ <|@
      nr 1822  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B206 -> B207 falseDestination: B206 -> B211 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B207"
    from_bci -1
    to_bci -1
    predecessors "B206" 
    successors "B211" "B209" 
    xhandlers
    flags 
    probability 4593485030102835957
    begin_IR
      LIR
      nr 1824  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1826  <|@ instruction rbx|DWORD = SHL r14|DWORD y: 2 size: DWORD <|@ <|@
      nr 1828  <|@ instruction rbx|DWORD = LEA [rbx|DWORD + 23] size: DWORD <|@ <|@
      nr 1830  <|@ instruction rbx|DWORD = AND rbx|DWORD y: -8 size: DWORD <|@ <|@
      nr 1832  <|@ instruction rbx|QWORD = MOVSXD rbx|DWORD size: QWORD <|@ <|@
      nr 1834  <|@ instruction rdi|QWORD = ADD (x: rbx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr 1836  <|@ instruction CMP (x: rdi|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr 1838  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B207 -> B211 falseDestination: B207 -> B209 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B209"
    from_bci -1
    to_bci -1
    predecessors "B207" 
    successors "B212" 
    xhandlers
    flags 
    probability 4593396824008439247
    begin_IR
      LIR
      nr 1848  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1850  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdi|QWORD) size: QWORD <|@ <|@
      nr 1852  <|@ instruction AMD64PREFETCH ~[rbx|QWORD + rcx|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr 1854  <|@ instruction AMD64PREFETCH ~[rbx|QWORD + rcx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr 1856  <|@ instruction AMD64PREFETCH ~[rbx|QWORD + rcx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr 1858  <|@ instruction AMD64PREFETCH ~[rbx|QWORD + rcx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr 1860  <|@ instruction MOV (x: [rcx|QWORD + 12], y: r14|DWORD) size: DWORD <|@ <|@
      nr 1862  <|@ instruction MOV [rcx|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1864  <|@ instruction MOV [rcx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr 1866  <|@ instruction rcx|QWORD[.] = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr 1868  <|@ instruction rax|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1870  <|@ instruction stack:96|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr 1872  <|@ instruction stack:80|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 1874  <|@ instruction r13|DWORD[.] = MOVE r8|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1876  <|@ instruction JUMP ~[] destination: B209 -> B212 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B212"
    from_bci -1
    to_bci -1
    predecessors "B209" "B211" 
    successors "B228" "B214" 
    xhandlers
    flags 
    probability 4594068358868130440
    begin_IR
      LIR
      nr 1900  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1902  <|@ instruction CMP r14|DWORD y: 1 size: DWORD <|@ <|@
      nr 1904  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B212 -> B228 falseDestination: B212 -> B214 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B214"
    from_bci -1
    to_bci -1
    predecessors "B212" 
    successors "B219" "B217" 
    xhandlers
    flags 
    probability 4589564759240759944
    begin_IR
      LIR
      nr 1910  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1912  <|@ instruction r10|QWORD = MOVE stack:80|QWORD moveKind: QWORD <|@ <|@
      nr 1914  <|@ instruction rdi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr 1916  <|@ instruction xmm0|V128_DWORD[.   ] = H r13|DWORD[.] <|@ <|@
      nr 1918  <|@ instruction xmm0|V256_DWORD[........] = VPBROADCASTD xmm0|V128_DWORD[.   ] nZ: YMM <|@ <|@
      nr 1920  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr 1922  <|@ instruction TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1928  <|@ instruction rdx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1924  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B214 -> B219 falseDestination: B214 -> B217 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B219"
    from_bci -1
    to_bci -1
    predecessors "B214" "B217" 
    successors "B222" "B221" 
    xhandlers
    flags 
    probability 4589564759240759944
    begin_IR
      LIR
      nr 1952  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1954  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 4] size: QWORD <|@ <|@
      nr 1956  <|@ instruction CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1958  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B219 -> B222 falseDestination: B219 -> B221 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B221"
    from_bci -1
    to_bci -1
    predecessors "B219" 
    successors "B222" 
    xhandlers
    flags 
    probability 4587511328902186956
    begin_IR
      LIR
      nr 1964  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1966  <|@ instruction xmm1|V128_DWORD[....] = VMOVE xmm0|V256_DWORD[........] <|@ <|@
      nr 1968  <|@ instruction J (address: [rdi|QWORD[.] + rdx|QWORD * 4], input: xmm1|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr 1970  <|@ instruction rsi|QWORD = LEA [rdx|QWORD + 4] size: QWORD <|@ <|@
      nr 1972  <|@ instruction rdx|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 1974  <|@ instruction JUMP ~[] destination: B221 -> B222 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B222"
    from_bci -1
    to_bci -1
    predecessors "B221" "B219" 
    successors "B225" "B224" 
    xhandlers
    flags 
    probability 4589564759240759944
    begin_IR
      LIR
      nr 1976  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1978  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 2] size: QWORD <|@ <|@
      nr 1980  <|@ instruction CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1982  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B222 -> B225 falseDestination: B222 -> B224 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B224"
    from_bci -1
    to_bci -1
    predecessors "B222" 
    successors "B225" 
    xhandlers
    flags 
    probability 4587511328902186956
    begin_IR
      LIR
      nr 1988  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1990  <|@ instruction xmm0|V64_DWORD[..] = VMOVE xmm0|V256_DWORD[........] <|@ <|@
      nr 1992  <|@ instruction J (address: [rdi|QWORD[.] + rdx|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr 1994  <|@ instruction rsi|QWORD = LEA [rdx|QWORD + 2] size: QWORD <|@ <|@
      nr 1996  <|@ instruction rdx|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 1998  <|@ instruction JUMP ~[] destination: B224 -> B225 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B225"
    from_bci -1
    to_bci -1
    predecessors "B224" "B222" 
    successors "B228" "B227" 
    xhandlers
    flags 
    probability 4589564759240759944
    begin_IR
      LIR
      nr 2000  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2002  <|@ instruction CMP (x: rdx|QWORD, y: stack:96|QWORD) size: QWORD <|@ <|@
      nr 2004  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B225 -> B228 falseDestination: B225 -> B227 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B227"
    from_bci -1
    to_bci -1
    predecessors "B225" 
    successors "B228" 
    xhandlers
    flags 
    probability 4587511328902186956
    begin_IR
      LIR
      nr 2010  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2012  <|@ instruction MOV (x: [rdi|QWORD[.] + rdx|QWORD * 4], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr 2014  <|@ instruction JUMP ~[] destination: B227 -> B228 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B228"
    from_bci -1
    to_bci -1
    predecessors "B212" "B227" "B225" 
    successors "B229" "B230" 
    xhandlers
    flags 
    probability 4594068358868130440
    begin_IR
      LIR
      nr 2016  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2018  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr 2020  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B228 -> B229 falseDestination: B228 -> B230 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B230"
    from_bci -1
    to_bci -1
    predecessors "B228" 
    successors "B231" 
    xhandlers
    flags 
    probability 4589564759240759944
    begin_IR
      LIR
      nr 2028  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2030  <|@ instruction rdi|DWORD = DEC r14|DWORD size: DWORD <|@ <|@
      nr 2032  <|@ instruction rdi|DWORD = SHL rdi|DWORD y: 2 size: DWORD <|@ <|@
      nr 2034  <|@ instruction rdi|QWORD = MOVSXD rdi|DWORD size: QWORD <|@ <|@
      nr 2036  <|@ instruction rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr 2038  <|@ instruction rsi|QWORD[.] = ADD (x: rsi|QWORD[.], y: rdi|QWORD) size: QWORD <|@ <|@
      nr 2040  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 2042  <|@ instruction rdi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr 2044  <|@ instruction rdi|QWORD[*] = SHR rdi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 2046  <|@ instruction rsi|QWORD[*] = SUB (x: rsi|QWORD[*], ~y: rdi|QWORD[*]) size: QWORD <|@ <|@
      nr 2048  <|@ instruction rsi|QWORD[*] = INC rsi|QWORD[*] size: QWORD <|@ <|@
      nr 2050  <|@ instruction r13|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr 2052  <|@ instruction JUMP ~[] destination: B230 -> B231 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B234"
    from_bci -1
    to_bci -1
    predecessors "B231" 
    successors "B231" 
    xhandlers
    flags "lle" 
    loop_index 13
    loop_depth 1
    probability 4589564759240759944
    begin_IR
      LIR
      nr 2070  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 2072  <|@ instruction rsi|QWORD[*] = DEC rsi|QWORD[*] size: QWORD <|@ <|@
      nr 2074  <|@ instruction rdx|QWORD[*] = ADD (x: rdi|QWORD[*], y: r13|QWORD) size: QWORD <|@ <|@
      nr 2076  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD[*], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr 2078  <|@ instruction MOVB (x: [rdx|QWORD[*]], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 2080  <|@ instruction JUMP ~[] destination: B234 -> B231 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B231"
    from_bci -1
    to_bci -1
    predecessors "B230" "B234" 
    successors "B233" "B234" 
    xhandlers
    flags "llh" 
    loop_index 13
    loop_depth 1
    probability 4594068358868130440
    begin_IR
      LIR
      nr 2054  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2056  <|@ instruction CMP rsi|QWORD[*] y: 1 size: QWORD <|@ <|@
      nr 2058  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B231 -> B233 falseDestination: B231 -> B234 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B303"
    from_bci -1
    to_bci -1
    predecessors "B298" "B301" 
    successors "B309" "B305" 
    xhandlers
    flags 
    probability 4597238779374946466
    begin_IR
      LIR
      nr 2754  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2714  <|@ instruction r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr 2756  <|@ instruction rdi|DWORD[.] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@eef3a58 encoding: base: 0 shift: 3 <|@ <|@
      nr 2758  <|@ instruction MOV (x: [r8|QWORD[.] + 20], y: rdi|DWORD[.]) size: DWORD <|@ <|@
      nr 2760  <|@ instruction rsi|QWORD[*] = SHR r8|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 2762  <|@ instruction MOVB (x: [rsi|QWORD[*] + r13|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 2764  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 2766  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B303 -> B309 falseDestination: B303 -> B305 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B305"
    from_bci -1
    to_bci -1
    predecessors "B303" 
    successors "B309" "B307" 
    xhandlers
    flags 
    probability 4597158071784102356
    begin_IR
      LIR
      nr 2772  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2774  <|@ instruction CMP (x: rcx|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 2776  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B305 -> B309 falseDestination: B305 -> B307 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B307"
    from_bci -1
    to_bci -1
    predecessors "B305" 
    successors "B309" "B310" 
    xhandlers
    flags 
    probability 4597078171269166687
    begin_IR
      LIR
      nr 2782  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2784  <|@ instruction r14|DWORD = SUB (x: r14|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 2786  <|@ instruction CMP (x: r10|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr 2788  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B307 -> B309 falseDestination: B307 -> B310 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B310"
    from_bci -1
    to_bci -1
    predecessors "B307" 
    successors "B311" "B312" 
    xhandlers
    flags 
    probability 4596999069759380374
    begin_IR
      LIR
      nr 2802  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2804  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr 2806  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B310 -> B311 falseDestination: B310 -> B312 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B312"
    from_bci -1
    to_bci -1
    predecessors "B310" 
    successors "B313" "B314" 
    xhandlers
    flags 
    probability 4596215964812495879
    begin_IR
      LIR
      nr 2816  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2818  <|@ instruction rax|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2820  <|@ instruction rdi|DWORD = MOV [rax|QWORD[.] + 8] size: DWORD <|@ <|@
      nr 2822  <|@ instruction r9|DWORD = MOV [r11|QWORD[.] + 8] size: DWORD <|@ <|@
      nr 2824  <|@ instruction rbx|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr 2826  <|@ instruction rdx|QWORD = MOV rcx|DWORD size: DWORD <|@ <|@
      nr 2828  <|@ instruction CMP (x: r9|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr 2830  <|@ instruction BRANCH trueDestinationProbability: 0.6 condition: = trueDestination: B312 -> B313 falseDestination: B312 -> B314 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B313"
    from_bci -1
    to_bci -1
    predecessors "B312" 
    successors "B317" 
    xhandlers
    flags 
    probability 4593121954089517474
    begin_IR
      LIR
      nr 2832  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2834  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2836  <|@ instruction r11|QWORD[*] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2838  <|@ instruction rdi|QWORD = LEA [rax|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 2840  <|@ instruction rsi|QWORD = LEA [r11|QWORD[*] + rbx|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr 2842  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: ObjectArraycopyKillAny(Word,Word,Word)void@0x106813120:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 2844  <|@ instruction r14|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr 2846  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2848  <|@ instruction JUMP ~[] destination: B313 -> B317 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B317"
    from_bci -1
    to_bci -1
    predecessors "B311" "B313" "B315" "B316" 
    successors 
    xhandlers
    flags 
    probability 4596999069759380374
    begin_IR
      LIR
      nr 2910  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2912  <|@ instruction rax|DWORD = ADD (x: r14|DWORD, ~y: [rsi|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr 2914  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr 2916  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr 2918  <|@ instruction rax|DWORD = SETCC condition: != <|@ <|@
      nr 2920  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B266"
    from_bci -1
    to_bci -1
    predecessors "B265" 
    successors "B281" 
    xhandlers
    flags 
    probability 4592735179747575970
    begin_IR
      LIR
      nr 2460  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2462  <|@ instruction rcx|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr 2464  <|@ instruction r8|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2466  <|@ instruction JUMP ~[] destination: B266 -> B281 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B282"
    from_bci -1
    to_bci -1
    predecessors "B281" 
    successors "B283" "B284" 
    xhandlers
    flags 
    probability 4592735179747575970
    begin_IR
      LIR
      nr 2592  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2594  <|@ instruction rdx|QWORD[.] = LEA [r11|QWORD[.] + rdi|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr 2596  <|@ instruction rsi|QWORD = SUB (x: rsi|QWORD, ~y: rdi|QWORD) size: QWORD <|@ <|@
      nr 2598  <|@ instruction rdi|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr 2600  <|@ instruction TEST (x: rdi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr 2602  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B282 -> B283 falseDestination: B282 -> B284 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B283"
    from_bci -1
    to_bci -1
    predecessors "B282" 
    successors "B287" 
    xhandlers
    flags 
    probability 4590717489976473210
    begin_IR
      LIR
      nr 2604  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2606  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 2608  <|@ instruction JUMP ~[] destination: B283 -> B287 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B287"
    from_bci -1
    to_bci -1
    predecessors "B283" "B285" 
    successors "B290" "B289" 
    xhandlers
    flags 
    probability 4592735179747575970
    begin_IR
      LIR
      nr 2632  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2634  <|@ instruction rdi|QWORD = LEA [rsi|QWORD - 4] size: QWORD <|@ <|@
      nr 2636  <|@ instruction CMP (x: r10|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr 2638  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B287 -> B290 falseDestination: B287 -> B289 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B289"
    from_bci -1
    to_bci -1
    predecessors "B287" 
    successors "B290" 
    xhandlers
    flags 
    probability 4590717489976473210
    begin_IR
      LIR
      nr 2644  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2646  <|@ instruction xmm0|V128_DWORD[....] = L oc: SIMD<null,null,null,null> <|@ <|@
      nr 2648  <|@ instruction J (address: [rdx|QWORD[.] + r10|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr 2650  <|@ instruction rdi|QWORD = LEA [r10|QWORD + 4] size: QWORD <|@ <|@
      nr 2652  <|@ instruction r10|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr 2654  <|@ instruction JUMP ~[] destination: B289 -> B290 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B290"
    from_bci -1
    to_bci -1
    predecessors "B289" "B287" 
    successors "B293" "B292" 
    xhandlers
    flags 
    probability 4592735179747575970
    begin_IR
      LIR
      nr 2656  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2658  <|@ instruction rdi|QWORD = LEA [rsi|QWORD - 2] size: QWORD <|@ <|@
      nr 2660  <|@ instruction CMP (x: r10|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr 2662  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B290 -> B293 falseDestination: B290 -> B292 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B292"
    from_bci -1
    to_bci -1
    predecessors "B290" 
    successors "B293" 
    xhandlers
    flags 
    probability 4590717489976473210
    begin_IR
      LIR
      nr 2668  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2670  <|@ instruction xmm0|V64_DWORD[..] = L oc: SIMD<null,null> <|@ <|@
      nr 2672  <|@ instruction J (address: [rdx|QWORD[.] + r10|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr 2674  <|@ instruction rdi|QWORD = LEA [r10|QWORD + 2] size: QWORD <|@ <|@
      nr 2676  <|@ instruction r10|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr 2678  <|@ instruction JUMP ~[] destination: B292 -> B293 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B293"
    from_bci -1
    to_bci -1
    predecessors "B292" "B290" 
    successors "B298" "B295" 
    xhandlers
    flags 
    probability 4592735179747575970
    begin_IR
      LIR
      nr 2680  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2682  <|@ instruction rsi|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr 2684  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 2686  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B293 -> B298 falseDestination: B293 -> B295 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B295"
    from_bci -1
    to_bci -1
    predecessors "B293" 
    successors "B298" 
    xhandlers
    flags 
    probability 4590717489976473210
    begin_IR
      LIR
      nr 2692  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2694  <|@ instruction MOV (x: [rdx|QWORD[.] + r10|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr 2696  <|@ instruction JUMP ~[] destination: B295 -> B298 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4591060914650367290
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  264  <|@ instruction xmm0|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null> <|@ <|@
      nr  266  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  268  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B26" 
    successors "B28" "B26" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4600068113905108282
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  272  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  274  <|@ instruction r9|QWORD = LEA [r9|QWORD + 8] size: QWORD <|@ <|@
      nr  276  <|@ instruction CMP (x: r9|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  278  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B26 -> B28 falseDestination: B26 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B13" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4600068113905108282
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  154  <|@ instruction xmm0|V256_DWORD[........] = H [r9|QWORD[*] + rbx|QWORD * 4] nZ: YMM oh: VMOVDQU <|@ <|@
      nr  156  <|@ instruction J (address: [r8|QWORD[.] + rbx|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  158  <|@ instruction rbx|QWORD = LEA [rbx|QWORD + 8] size: QWORD <|@ <|@
      nr  160  <|@ instruction CMP (x: rbx|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  162  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B11 -> B13 falseDestination: B11 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B314"
    from_bci -1
    to_bci -1
    predecessors "B312" 
    successors "B315" "B316" 
    xhandlers
    flags 
    probability 4590302776280733292
    begin_IR
      LIR
      nr 2850  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2852  <|@ instruction r8|QWORD = MOV [r9|DWORD * 8 + 232] size: QWORD <|@ <|@
      nr 2854  <|@ instruction rdi|DWORD = MOV [r8|QWORD + 12] size: DWORD <|@ <|@
      nr 2856  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2858  <|@ instruction rcx|QWORD[*] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2860  <|@ instruction r9|QWORD = MOVSXD rdi|DWORD size: QWORD <|@ <|@
      nr 2862  <|@ instruction rdi|QWORD = LEA [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 2864  <|@ instruction rsi|QWORD = LEA [rcx|QWORD[*] + rbx|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr 2866  <|@ instruction rcx|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr 2868  <|@ instruction stack:56|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2870  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: ObjectCheckcast(Word,Word,Word,Word,Word)int@0x1068133a0:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 2872  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 2874  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B314 -> B315 falseDestination: B314 -> B316 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B315"
    from_bci -1
    to_bci -1
    predecessors "B314" 
    successors "B317" 
    xhandlers
    flags 
    probability 4590246392724557608
    begin_IR
      LIR
      nr 2876  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2878  <|@ instruction r14|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr 2880  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2882  <|@ instruction JUMP ~[] destination: B315 -> B317 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B75" "B78" 
    successors "B81" "B195" 
    xhandlers
    flags 
    probability 4594445899282223279
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  686  <|@ instruction rdi|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD <|@ <|@
      nr  722  <|@ instruction rdx|DWORD = MOV [rdi|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  724  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<AbstractList.listIterator(int)>} <|@ <|@
      nr  726  <|@ instruction CMP (x: rsi|QWORD, y: [rdx|DWORD * 8 + 696]) size: QWORD <|@ <|@
      nr  728  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B195 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B82" "B85" 
    xhandlers
    flags 
    probability 4594445899282223279
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  732  <|@ instruction CMP rdx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@ <|@
      nr  738  <|@ instruction rsi|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  734  <|@ instruction BRANCH trueDestinationProbability: 0.5468793050355748 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B83" "B93" 
    xhandlers
    flags 
    probability 4590437146253237157
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  740  <|@ instruction rbp|DWORD[.] = MOV [rdi|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  742  <|@ st <@st|@reference-map: [rax:0, rdi:0, stack:68, stack:80, stack:88]
live-base-pointers: []
java.util.ArrayList.addAll(ArrayList.java:581) [bci: 0]
locals: stack:40|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction CMP (x: rsi|DWORD, y: [rbp|DWORD[.] * 8 + 12]) size: DWORD state [bci:0] <|@ <|@
      nr  744  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B82 -> B83 falseDestination: B82 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B90" "B82" "B86" 
    successors "B94" "B135" 
    xhandlers
    flags 
    probability 4594445899282223279
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  822  <|@ instruction rbp|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr  824  <|@ instruction CMP rdx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@ <|@
      nr  826  <|@ instruction BRANCH trueDestinationProbability: 0.9304948647614187 condition: = trueDestination: B93 -> B94 falseDestination: B93 -> B135 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B95" "B96" 
    xhandlers
    flags 
    probability 4594079059589133148
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  830  <|@ instruction rdx|DWORD[.] = MOV [rdi|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  832  <|@ instruction TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr  834  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B94 -> B95 falseDestination: B94 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B101" "B98" 
    xhandlers
    flags 
    probability 4594079059589133148
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  852  <|@ instruction CMP r14|DWORD y: 1 size: DWORD <|@ <|@
      nr  858  <|@ instruction stack:80|QWORD = MOVE rbx|QWORD moveKind: QWORD <|@ <|@
      nr  854  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B96 -> B101 falseDestination: B96 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B99" "B134" 
    xhandlers
    flags 
    probability 4589575459961762652
    begin_IR
      LIR
      nr  862  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  866  <|@ instruction rdi|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  868  <|@ instruction r13|QWORD = ADD (x: rbp|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  870  <|@ instruction rbx|QWORD = MOV rdi|DWORD size: DWORD <|@ <|@
      nr  872  <|@ instruction CMP (x: rbx|QWORD, y: r13|QWORD) size: QWORD <|@ <|@
      nr  874  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B98 -> B99 falseDestination: B98 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B101" "B133" 
    xhandlers
    flags 
    probability 4589575459961762652
    begin_IR
      LIR
      nr  876  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  878  <|@ instruction CMP (x: rdi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  880  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B99 -> B101 falseDestination: B99 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B96" "B99" 
    successors "B105" "B103" 
    xhandlers
    flags 
    probability 4594079059589133148
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  888  <|@ instruction CMP r14|DWORD y: 1 size: DWORD <|@ <|@
      nr  890  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B101 -> B105 falseDestination: B101 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B105" "B132" 
    xhandlers
    flags 
    probability 4589575459961762652
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  898  <|@ instruction CMP (x: r10|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  900  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B103 -> B105 falseDestination: B103 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B101" "B103" 
    successors "B121" "B107" 
    xhandlers
    flags 
    probability 4594079059589133148
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  908  <|@ instruction CMP r14|DWORD y: 1 size: DWORD <|@ <|@
      nr  910  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B105 -> B121 falseDestination: B105 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B112" "B110" 
    xhandlers
    flags 
    probability 4589575459961762652
    begin_IR
      LIR
      nr  916  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  918  <|@ instruction r10|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  920  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@eef3a58 encoding: base: 0 shift: 3 <|@ <|@
      nr  922  <|@ instruction rdx|QWORD[.] = LEA [rdx|QWORD[.] + rbp|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr  924  <|@ instruction TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  930  <|@ instruction rbx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  926  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B107 -> B112 falseDestination: B107 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B107" "B110" 
    successors "B115" "B114" 
    xhandlers
    flags 
    probability 4589575459961762652
    begin_IR
      LIR
      nr  956  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  958  <|@ instruction CMP (x: rbx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  960  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B112 -> B115 falseDestination: B112 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B115" 
    xhandlers
    flags 
    probability 4587527379983691018
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  968  <|@ instruction xmm0|V128_DWORD[....] = H [rdx|QWORD[.] + rbx|QWORD * 4] nZ: XMM oh: VMOVDQU <|@ <|@
      nr  970  <|@ instruction J (address: [r10|QWORD[.] + rbx|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  972  <|@ instruction rcx|QWORD = LEA [rbx|QWORD + 4] size: QWORD <|@ <|@
      nr  974  <|@ instruction rbx|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  976  <|@ instruction JUMP ~[] destination: B114 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" "B112" 
    successors "B118" "B117" 
    xhandlers
    flags 
    probability 4589575459961762652
    begin_IR
      LIR
      nr  978  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  980  <|@ instruction CMP (x: rbx|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  982  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B115 -> B118 falseDestination: B115 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    probability 4587527379983691018
    begin_IR
      LIR
      nr  988  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  990  <|@ instruction xmm0|V64_DWORD[..] = H [rdx|QWORD[.] + rbx|QWORD * 4] nZ: XMM oh: VMOVQ <|@ <|@
      nr  992  <|@ instruction J (address: [r10|QWORD[.] + rbx|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr  994  <|@ instruction rcx|QWORD = LEA [rbx|QWORD + 2] size: QWORD <|@ <|@
      nr  996  <|@ instruction rbx|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  998  <|@ instruction JUMP ~[] destination: B117 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B117" "B115" 
    successors "B121" "B120" 
    xhandlers
    flags 
    probability 4589575459961762652
    begin_IR
      LIR
      nr 1000  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1002  <|@ instruction CMP (x: rbx|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr 1004  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B118 -> B121 falseDestination: B118 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B121" 
    xhandlers
    flags 
    probability 4587527379983691018
    begin_IR
      LIR
      nr 1010  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1012  <|@ instruction rdx|DWORD[.] = MOV [rdx|QWORD[.] + rbx|QWORD * 4] size: DWORD <|@ <|@
      nr 1014  <|@ instruction MOV (x: [r10|QWORD[.] + rbx|QWORD * 4], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr 1016  <|@ instruction JUMP ~[] destination: B120 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B105" "B120" "B118" 
    successors "B122" "B123" 
    xhandlers
    flags 
    probability 4594079059589133148
    begin_IR
      LIR
      nr 1018  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1020  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr 1022  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B121 -> B122 falseDestination: B121 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B121" 
    successors "B124" 
    xhandlers
    flags 
    probability 4589575459961762652
    begin_IR
      LIR
      nr 1030  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1032  <|@ instruction rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr 1034  <|@ instruction rdx|QWORD[.] = ADD (x: rdx|QWORD[.], y: stack:80|QWORD) size: QWORD <|@ <|@
      nr 1036  <|@ instruction rdx|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1038  <|@ instruction rcx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr 1040  <|@ instruction rcx|QWORD[*] = SHR rcx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1042  <|@ instruction rdx|QWORD[*] = SUB (x: rdx|QWORD[*], ~y: rcx|QWORD[*]) size: QWORD <|@ <|@
      nr 1044  <|@ instruction rdx|QWORD[*] = INC rdx|QWORD[*] size: QWORD <|@ <|@
      nr 1046  <|@ instruction r13|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr 1048  <|@ instruction JUMP ~[] destination: B123 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors "B124" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 1
    probability 4589575459961762652
    begin_IR
      LIR
      nr 1100  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 1102  <|@ instruction rdx|QWORD[*] = DEC rdx|QWORD[*] size: QWORD <|@ <|@
      nr 1104  <|@ instruction r10|QWORD[*] = ADD (x: rcx|QWORD[*], y: r13|QWORD) size: QWORD <|@ <|@
      nr 1106  <|@ instruction r10|QWORD[*] = ADD (x: r10|QWORD[*], y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr 1108  <|@ instruction MOVB (x: [r10|QWORD[*]], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 1110  <|@ instruction JUMP ~[] destination: B130 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B123" "B130" 
    successors "B126" "B130" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 1
    probability 4594079059589133148
    begin_IR
      LIR
      nr 1050  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1052  <|@ instruction CMP rdx|QWORD[*] y: 1 size: QWORD <|@ <|@
      nr 1054  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B124 -> B126 falseDestination: B124 -> B130 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" 
    successors "B126" 
    xhandlers
    flags 
    probability 4589575459961762652
    begin_IR
      LIR
      nr 1024  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1026  <|@ instruction r13|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr 1028  <|@ instruction JUMP ~[] destination: B122 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B122" "B124" 
    successors "B127" 
    xhandlers
    flags 
    probability 4594079059589133148
    begin_IR
      LIR
      nr 1060  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1062  <|@ instruction rcx|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr 1064  <|@ instruction rdx|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr 1066  <|@ instruction rsi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1068  <|@ instruction JUMP ~[] destination: B126 -> B127 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B127" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 1
    probability 4602566600183724730
    begin_IR
      LIR
      nr 1076  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 1078  <|@ instruction rcx|DWORD = INC rdx|DWORD size: DWORD <|@ <|@
      nr 1080  <|@ instruction rsi|DWORD = INC rsi|DWORD size: DWORD <|@ <|@
      nr 1082  <|@ instruction stack:84|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1084  <|@ instruction rcx|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1086  <|@ instruction rdx|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr 1088  <|@ instruction JUMP ~[] destination: B128 -> B127 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B126" "B128" 
    successors "B128" "B129" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 1
    probability 4603850469502835252
    begin_IR
      LIR
      nr 1070  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr 1072  <|@ instruction CMP (x: r14|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1074  <|@ instruction BRANCH trueDestinationProbability: 0.7836641850436589 condition: > trueDestination: B127 -> B128 falseDestination: B127 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B190" 
    xhandlers
    flags 
    probability 4594079059589133149
    begin_IR
      LIR
      nr 1090  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1092  <|@ instruction r11|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1094  <|@ instruction r10|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1096  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1098  <|@ instruction JUMP ~[] destination: B129 -> B190 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B190"
    from_bci -1
    to_bci -1
    predecessors "B129" "B171" "B189" 
    successors "B191" "B192" 
    xhandlers
    flags 
    probability 4594445899282223281
    begin_IR
      LIR
      nr 1670  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 1672  <|@ instruction rsi|DWORD = MOV [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1674  <|@ instruction rcx|DWORD = SUB (x: r10|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1676  <|@ instruction CMP (x: rcx|DWORD, y: [rdx|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr 1678  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B190 -> B191 falseDestination: B190 -> B192 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B192"
    from_bci -1
    to_bci -1
    predecessors "B190" 
    successors "B239" 
    xhandlers
    flags 
    probability 4594445899282223281
    begin_IR
      LIR
      nr 1696  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1698  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1700  <|@ instruction JUMP ~[] destination: B192 -> B239 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B233"
    from_bci -1
    to_bci -1
    predecessors "B229" "B231" 
    successors "B239" 
    xhandlers
    flags 
    probability 4594068358868130440
    begin_IR
      LIR
      nr 2064  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2066  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2068  <|@ instruction JUMP ~[] destination: B233 -> B239 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B229"
    from_bci -1
    to_bci -1
    predecessors "B228" 
    successors "B233" 
    xhandlers
    flags 
    probability 4589564759240759944
    begin_IR
      LIR
      nr 2022  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2024  <|@ instruction r13|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr 2026  <|@ instruction JUMP ~[] destination: B229 -> B233 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B86" "B89" 
    xhandlers
    flags 
    probability 4589447453056468409
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  766  <|@ instruction CMP rdx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Collections$EmptyList;, resolved>;compressed} <|@ <|@
      nr  768  <|@ instruction BRANCH trueDestinationProbability: 0.5024679876958296 condition: = trueDestination: B85 -> B86 falseDestination: B85 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B93" "B88" 
    xhandlers
    flags 
    probability 4584967462359288767
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  772  <|@ instruction CMP rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr  774  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B86 -> B93 falseDestination: B86 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B90" "B194" 
    xhandlers
    flags 
    probability 4584920244498907059
    begin_IR
      LIR
      nr  792  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  794  <|@ instruction CMP rdx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed} <|@ <|@
      nr  796  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B89 -> B90 falseDestination: B89 -> B194 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B91" "B93" 
    xhandlers
    flags 
    probability 4584920244498907059
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  800  <|@ instruction CMP (x: rsi|DWORD, y: [rdi|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr  802  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B90 -> B91 falseDestination: B90 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B284"
    from_bci -1
    to_bci -1
    predecessors "B282" 
    successors "B285" 
    xhandlers
    flags 
    probability 4583727980492834978
    begin_IR
      LIR
      nr 2610  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2612  <|@ instruction xmm0|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null> <|@ <|@
      nr 2614  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 2616  <|@ instruction JUMP ~[] destination: B284 -> B285 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B285"
    from_bci -1
    to_bci -1
    predecessors "B284" "B285" 
    successors "B287" "B285" 
    xhandlers
    flags "llh" 
    loop_index 15
    loop_depth 1
    probability 4592735179747575970
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 2620  <|@ instruction J (address: [rdx|QWORD[.] + r10|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr 2622  <|@ instruction r10|QWORD = LEA [r10|QWORD + 8] size: QWORD <|@ <|@
      nr 2624  <|@ instruction CMP (x: r10|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr 2626  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B285 -> B287 falseDestination: B285 -> B285 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B270"
    from_bci -1
    to_bci -1
    predecessors "B267" "B270" 
    successors "B272" "B270" 
    xhandlers
    flags "llh" 
    loop_index 14
    loop_depth 1
    probability 4592735179747575970
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 2502  <|@ instruction xmm0|V256_DWORD[........] = H [rdx|QWORD[*] + rbx|QWORD * 4] nZ: YMM oh: VMOVDQU <|@ <|@
      nr 2504  <|@ instruction J (address: [rsi|QWORD[.] + rbx|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr 2506  <|@ instruction rbx|QWORD = LEA [rbx|QWORD + 8] size: QWORD <|@ <|@
      nr 2508  <|@ instruction CMP (x: rbx|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 2510  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B270 -> B272 falseDestination: B270 -> B270 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B311"
    from_bci -1
    to_bci -1
    predecessors "B310" 
    successors "B317" 
    xhandlers
    flags 
    probability 4581922060983499895
    begin_IR
      LIR
      nr 2808  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2810  <|@ instruction r14|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 2812  <|@ instruction rsi|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2814  <|@ instruction JUMP ~[] destination: B311 -> B317 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" 
    xhandlers
    flags 
    probability 4580935100400111791
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  596  <|@ instruction xmm0|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null> <|@ <|@
      nr  598  <|@ instruction rdx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  600  <|@ instruction JUMP ~[] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" "B64" 
    successors "B66" "B64" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4589942299654852783
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  604  <|@ instruction J (address: [rsi|QWORD[.] + rdx|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  606  <|@ instruction rdx|QWORD = LEA [rdx|QWORD + 8] size: QWORD <|@ <|@
      nr  608  <|@ instruction CMP (x: rdx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  610  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B64 -> B66 falseDestination: B64 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B107" "B110" 
    successors "B112" "B110" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4589575459961762652
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  942  <|@ instruction xmm0|V256_DWORD[........] = H [rdx|QWORD[.] + rbx|QWORD * 4] nZ: YMM oh: VMOVDQU <|@ <|@
      nr  944  <|@ instruction J (address: [r10|QWORD[.] + rbx|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  946  <|@ instruction rbx|QWORD = LEA [rbx|QWORD + 8] size: QWORD <|@ <|@
      nr  948  <|@ instruction CMP (x: rbx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  950  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B110 -> B112 falseDestination: B110 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B217"
    from_bci -1
    to_bci -1
    predecessors "B214" "B217" 
    successors "B219" "B217" 
    xhandlers
    flags "llh" 
    loop_index 12
    loop_depth 1
    probability 4589564759240759944
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 1940  <|@ instruction J (address: [rdi|QWORD[.] + rdx|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr 1942  <|@ instruction rdx|QWORD = LEA [rdx|QWORD + 8] size: QWORD <|@ <|@
      nr 1944  <|@ instruction CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1946  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B217 -> B219 falseDestination: B217 -> B217 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B53" "B54" 
    successors "B59" 
    xhandlers
    flags 
    probability 4580259531889175745
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  540  <|@ instruction stack:68|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  546  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr  548  <|@ instruction rsi|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  550  <|@ instruction rdx|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  552  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  554  <|@ instruction r14|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  556  <|@ st <@st|@reference-map: [stack:68, stack:80, stack:88]
live-base-pointers: []
java.util.ArrayList.addAll(ArrayList.java:581) [bci: 0]
locals: stack:40|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  558  <|@ instruction JUMP ~[] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B211"
    from_bci -1
    to_bci -1
    predecessors "B206" "B207" 
    successors "B212" 
    xhandlers
    flags 
    probability 4579699812260379147
    begin_IR
      LIR
      nr 1886  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1880  <|@ instruction stack:96|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr 1882  <|@ instruction stack:80|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 1888  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr 1890  <|@ instruction rdx|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr 1892  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1894  <|@ instruction r13|DWORD[.] = MOVE r8|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1896  <|@ st <@st|@reference-map: [r13:0, stack:80, stack:88]
live-base-pointers: []
java.util.ArrayList.addAll(ArrayList.java:581) [bci: 0]
locals: stack:40|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr 1898  <|@ instruction JUMP ~[] destination: B211 -> B212 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B136" "B177" 
    xhandlers
    flags 
    probability 4577023056870495540
    begin_IR
      LIR
      nr 1158  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1160  <|@ instruction stack:80|QWORD = MOVE rbx|QWORD moveKind: QWORD <|@ <|@
      nr 1162  <|@ instruction CMP rdx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed} <|@ <|@
      nr 1164  <|@ instruction BRANCH trueDestinationProbability: 0.9931451844203518 condition: = trueDestination: B135 -> B136 falseDestination: B135 -> B177 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B135" 
    successors "B137" "B138" 
    xhandlers
    flags 
    probability 4576982822975400699
    begin_IR
      LIR
      nr 1166  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1168  <|@ instruction rdi|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1170  <|@ instruction rdx|DWORD[.] = MOV [rdi|DWORD[.] * 8 + 28] size: DWORD <|@ <|@
      nr 1172  <|@ instruction TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr 1174  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B136 -> B137 falseDestination: B136 -> B138 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B143" "B140" 
    xhandlers
    flags 
    probability 4576982822975400699
    begin_IR
      LIR
      nr 1190  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1192  <|@ instruction CMP r14|DWORD y: 1 size: DWORD <|@ <|@
      nr 1198  <|@ instruction stack:96|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr 1200  <|@ instruction stack:104|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr 1194  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B138 -> B143 falseDestination: B138 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B138" 
    successors "B141" "B176" 
    xhandlers
    flags 
    probability 4572479223348030203
    begin_IR
      LIR
      nr 1204  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1210  <|@ instruction rdi|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr 1212  <|@ instruction r8|QWORD = ADD (x: rbp|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr 1214  <|@ instruction r9|QWORD = MOV rdi|DWORD size: DWORD <|@ <|@
      nr 1216  <|@ instruction CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr 1218  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B140 -> B141 falseDestination: B140 -> B176 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B143" "B175" 
    xhandlers
    flags 
    probability 4572479223348030203
    begin_IR
      LIR
      nr 1220  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1222  <|@ instruction CMP (x: rdi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1224  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B141 -> B143 falseDestination: B141 -> B175 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B138" "B141" 
    successors "B147" "B145" 
    xhandlers
    flags 
    probability 4576982822975400699
    begin_IR
      LIR
      nr 1230  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1232  <|@ instruction CMP r14|DWORD y: 1 size: DWORD <|@ <|@
      nr 1234  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B143 -> B147 falseDestination: B143 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B143" 
    successors "B147" "B174" 
    xhandlers
    flags 
    probability 4572479223348030203
    begin_IR
      LIR
      nr 1240  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1242  <|@ instruction CMP (x: r10|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr 1244  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B145 -> B147 falseDestination: B145 -> B174 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B143" "B145" 
    successors "B163" "B149" 
    xhandlers
    flags 
    probability 4576982822975400699
    begin_IR
      LIR
      nr 1250  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1252  <|@ instruction CMP r14|DWORD y: 1 size: DWORD <|@ <|@
      nr 1254  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B147 -> B163 falseDestination: B147 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B147" 
    successors "B154" "B152" 
    xhandlers
    flags 
    probability 4572479223348030203
    begin_IR
      LIR
      nr 1260  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1262  <|@ instruction r10|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr 1264  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@eef3a58 encoding: base: 0 shift: 3 <|@ <|@
      nr 1266  <|@ instruction r8|QWORD[.] = LEA [rdx|QWORD[.] + rbp|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr 1268  <|@ instruction TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr 1274  <|@ instruction rdx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1270  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B149 -> B154 falseDestination: B149 -> B152 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B154"
    from_bci -1
    to_bci -1
    predecessors "B149" "B152" 
    successors "B157" "B156" 
    xhandlers
    flags 
    probability 4572479223348030203
    begin_IR
      LIR
      nr 1304  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1276  <|@ instruction r9|QWORD = MOVE stack:96|QWORD moveKind: QWORD <|@ <|@
      nr 1306  <|@ instruction CMP (x: rdx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr 1308  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B154 -> B157 falseDestination: B154 -> B156 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B156"
    from_bci -1
    to_bci -1
    predecessors "B154" 
    successors "B157" 
    xhandlers
    flags 
    probability 4570890224317833336
    begin_IR
      LIR
      nr 1318  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1320  <|@ instruction xmm0|V128_DWORD[....] = H [r8|QWORD[.] + rdx|QWORD * 4] nZ: XMM oh: VMOVDQU <|@ <|@
      nr 1322  <|@ instruction J (address: [r10|QWORD[.] + rdx|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr 1324  <|@ instruction rdx|QWORD = LEA [rdx|QWORD + 4] size: QWORD <|@ <|@
      nr 1330  <|@ instruction JUMP ~[] destination: B156 -> B157 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B157"
    from_bci -1
    to_bci -1
    predecessors "B156" "B154" 
    successors "B160" "B159" 
    xhandlers
    flags 
    probability 4572479223348030203
    begin_IR
      LIR
      nr 1332  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1326  <|@ instruction rcx|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr 1328  <|@ instruction rdx|QWORD = MOVE stack:104|QWORD moveKind: QWORD <|@ <|@
      nr 1334  <|@ instruction CMP (x: rcx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1336  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B157 -> B160 falseDestination: B157 -> B159 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B159"
    from_bci -1
    to_bci -1
    predecessors "B157" 
    successors "B160" 
    xhandlers
    flags 
    probability 4570890224317833336
    begin_IR
      LIR
      nr 1342  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1344  <|@ instruction xmm0|V64_DWORD[..] = H [r8|QWORD[.] + rcx|QWORD * 4] nZ: XMM oh: VMOVQ <|@ <|@
      nr 1346  <|@ instruction J (address: [r10|QWORD[.] + rcx|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr 1348  <|@ instruction rdx|QWORD = LEA [rcx|QWORD + 2] size: QWORD <|@ <|@
      nr 1350  <|@ instruction rcx|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr 1352  <|@ instruction JUMP ~[] destination: B159 -> B160 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B160"
    from_bci -1
    to_bci -1
    predecessors "B159" "B157" 
    successors "B163" "B162" 
    xhandlers
    flags 
    probability 4572479223348030203
    begin_IR
      LIR
      nr 1354  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1356  <|@ instruction CMP (x: rcx|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr 1358  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B160 -> B163 falseDestination: B160 -> B162 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B162"
    from_bci -1
    to_bci -1
    predecessors "B160" 
    successors "B163" 
    xhandlers
    flags 
    probability 4570890224317833336
    begin_IR
      LIR
      nr 1364  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1366  <|@ instruction rdx|DWORD[.] = MOV [r8|QWORD[.] + rcx|QWORD * 4] size: DWORD <|@ <|@
      nr 1368  <|@ instruction MOV (x: [r10|QWORD[.] + rcx|QWORD * 4], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr 1370  <|@ instruction JUMP ~[] destination: B162 -> B163 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B163"
    from_bci -1
    to_bci -1
    predecessors "B147" "B162" "B160" 
    successors "B164" "B165" 
    xhandlers
    flags 
    probability 4576982822975400699
    begin_IR
      LIR
      nr 1372  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1374  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr 1376  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B163 -> B164 falseDestination: B163 -> B165 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B165"
    from_bci -1
    to_bci -1
    predecessors "B163" 
    successors "B166" 
    xhandlers
    flags 
    probability 4572479223348030203
    begin_IR
      LIR
      nr 1384  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1388  <|@ instruction rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr 1390  <|@ instruction rdx|QWORD[.] = ADD (x: rdx|QWORD[.], y: rbx|QWORD) size: QWORD <|@ <|@
      nr 1392  <|@ instruction rdx|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1394  <|@ instruction rcx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr 1396  <|@ instruction rcx|QWORD[*] = SHR rcx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1398  <|@ instruction rdx|QWORD[*] = SUB (x: rdx|QWORD[*], ~y: rcx|QWORD[*]) size: QWORD <|@ <|@
      nr 1400  <|@ instruction rdx|QWORD[*] = INC rdx|QWORD[*] size: QWORD <|@ <|@
      nr 1404  <|@ instruction JUMP ~[] destination: B165 -> B166 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B172"
    from_bci -1
    to_bci -1
    predecessors "B166" 
    successors "B166" 
    xhandlers
    flags "lle" 
    loop_index 9
    loop_depth 1
    probability 4572479223348030203
    begin_IR
      LIR
      nr 1456  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 1458  <|@ instruction rdx|QWORD[*] = DEC rdx|QWORD[*] size: QWORD <|@ <|@
      nr 1460  <|@ instruction r8|QWORD[*] = ADD (x: rcx|QWORD[*], y: r13|QWORD) size: QWORD <|@ <|@
      nr 1462  <|@ instruction r8|QWORD[*] = ADD (x: r8|QWORD[*], y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr 1464  <|@ instruction MOVB (x: [r8|QWORD[*]], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 1466  <|@ instruction JUMP ~[] destination: B172 -> B166 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B166"
    from_bci -1
    to_bci -1
    predecessors "B165" "B172" 
    successors "B168" "B172" 
    xhandlers
    flags "llh" 
    loop_index 9
    loop_depth 1
    probability 4576982822975400699
    begin_IR
      LIR
      nr 1406  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1408  <|@ instruction CMP rdx|QWORD[*] y: 1 size: QWORD <|@ <|@
      nr 1410  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B166 -> B168 falseDestination: B166 -> B172 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B246"
    from_bci -1
    to_bci -1
    predecessors "B245" 
    successors "B321" 
    xhandlers
    flags 
    probability 4575596594292739886
    begin_IR
      LIR
      nr 2186  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2188  <|@ instruction rsi|DWORD = MOVE input: int[-270433|0xfffffffffffbdf9f] <|@ <|@
      nr 2190  <|@ instruction JUMP ~[] destination: B246 -> B321 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B321"
    from_bci -1
    to_bci -1
    predecessors "B320" "B246" "B261" "B250" "B248" 
    successors 
    xhandlers
    flags 
    probability 4582300274885977192
    begin_IR
      LIR
      nr 2946  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2948  <|@ instruction MOV (x: [r15|QWORD + 668], y: rsi|DWORD) size: DWORD <|@ <|@
      nr 2950  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2952  <|@ st <@st|@reference-map: [stack:80, stack:88]
live-base-pointers: []
java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:238) [bci: 10]
locals: stack:40|QWORD[.] rdi|DWORD 
java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
locals: - - 
java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
locals: stack:40|QWORD[.] - stack:48|QWORD[.] r14|DWORD 
>@ <|@ instruction DEOPT info [bci:10, 9, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B248"
    from_bci -1
    to_bci -1
    predecessors "B247" 
    successors "B321" 
    xhandlers
    flags 
    probability 4575507128571349317
    begin_IR
      LIR
      nr 2198  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2200  <|@ instruction rsi|DWORD = MOVE input: int[-270433|0xfffffffffffbdf9f] <|@ <|@
      nr 2202  <|@ instruction JUMP ~[] destination: B248 -> B321 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B250"
    from_bci -1
    to_bci -1
    predecessors "B249" 
    successors "B321" 
    xhandlers
    flags 
    probability 4575418557507172653
    begin_IR
      LIR
      nr 2212  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2214  <|@ instruction rsi|DWORD = MOVE input: int[-270433|0xfffffffffffbdf9f] <|@ <|@
      nr 2216  <|@ instruction JUMP ~[] destination: B250 -> B321 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B238"
    from_bci -1
    to_bci -1
    predecessors "B199" 
    successors "B239" 
    xhandlers
    flags 
    probability 4575117334181575713
    begin_IR
      LIR
      nr 2108  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2110  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2112  <|@ st <@st|@reference-map: [stack:88]
live-base-pointers: []
java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
locals: stack:40|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Collection.toArray()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1] <|@ <|@
      nr 2114  <|@ st <@st|@reference-map: [rax:0, stack:88]
live-base-pointers: []
java.util.ArrayList.addAll(ArrayList.java:581) [bci: 6]
stack: Object[null] 
locals: stack:40|QWORD[.] - - - 
>@ <|@ instruction r14|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD state [bci:6] <|@ <|@
      nr 2116  <|@ instruction r13|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr 2118  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2120  <|@ instruction JUMP ~[] destination: B238 -> B239 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4574837534457301975
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: -) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@eef3a58 encoding: base: 0 shift: 3 <|@ <|@
      nr   66  <|@ instruction rsi|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr   68  <|@ instruction rdx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   72  <|@ instruction r13|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   74  <|@ st <@st|@reference-map: [r14:0, stack:80, stack:88]
live-base-pointers: []
java.util.ArrayList.addAll(ArrayList.java:581) [bci: 0]
locals: stack:40|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   76  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction r10|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr   80  <|@ instruction r13|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction JUMP ~[] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B164"
    from_bci -1
    to_bci -1
    predecessors "B163" 
    successors "B168" 
    xhandlers
    flags 
    probability 4572479223348030203
    begin_IR
      LIR
      nr 1378  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1382  <|@ instruction JUMP ~[] destination: B164 -> B168 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B168"
    from_bci -1
    to_bci -1
    predecessors "B164" "B166" 
    successors "B169" 
    xhandlers
    flags 
    probability 4576982822975400699
    begin_IR
      LIR
      nr 1416  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1418  <|@ instruction rcx|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr 1420  <|@ instruction rdx|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr 1422  <|@ instruction rsi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1424  <|@ instruction JUMP ~[] destination: B168 -> B169 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B170"
    from_bci -1
    to_bci -1
    predecessors "B169" 
    successors "B169" 
    xhandlers
    flags "lle" 
    loop_index 10
    loop_depth 1
    probability 4585439808479858613
    begin_IR
      LIR
      nr 1432  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 1434  <|@ instruction rcx|DWORD = INC rdx|DWORD size: DWORD <|@ <|@
      nr 1436  <|@ instruction rsi|DWORD = INC rsi|DWORD size: DWORD <|@ <|@
      nr 1438  <|@ instruction stack:84|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1440  <|@ instruction rcx|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1442  <|@ instruction rdx|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr 1444  <|@ instruction JUMP ~[] destination: B170 -> B169 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B169"
    from_bci -1
    to_bci -1
    predecessors "B168" "B170" 
    successors "B170" "B171" 
    xhandlers
    flags "llh" 
    loop_index 10
    loop_depth 1
    probability 4586897108778445428
    begin_IR
      LIR
      nr 1426  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr 1428  <|@ instruction CMP (x: r14|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1430  <|@ instruction BRANCH trueDestinationProbability: 0.7836641850436589 condition: > trueDestination: B169 -> B170 falseDestination: B169 -> B171 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B171"
    from_bci -1
    to_bci -1
    predecessors "B169" 
    successors "B190" 
    xhandlers
    flags 
    probability 4576982822975400699
    begin_IR
      LIR
      nr 1446  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1448  <|@ instruction r11|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1450  <|@ instruction r10|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1452  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1454  <|@ instruction JUMP ~[] destination: B171 -> B190 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B257"
    from_bci -1
    to_bci -1
    predecessors "B255" 
    successors "B258" 
    xhandlers
    flags 
    probability 4568396634526279913
    begin_IR
      LIR
      nr 2300  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2302  <|@ instruction r10|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2304  <|@ instruction r14|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr 2306  <|@ instruction rax|DWORD = NOT rax|DWORD size: DWORD <|@ <|@
      nr 2308  <|@ instruction r8|DWORD = ADD (x: rax|DWORD, y: stack:68|DWORD) size: DWORD <|@ <|@
      nr 2310  <|@ instruction r9|DWORD = SUB (x: r14|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr 2312  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2314  <|@ instruction rdx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 2316  <|@ instruction rcx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2318  <|@ st <@st|@reference-map: [stack:88]
live-base-pointers: []
java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
locals: stack:40|QWORD[.] - - stack:64|DWORD 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD] [] callTarget: HotSpotMethod<System.arraycopy(Object, int, Object, int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:31] <|@ <|@
      nr 2320  <|@ instruction r14|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr 2322  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2324  <|@ instruction JUMP ~[] destination: B257 -> B258 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B263"
    from_bci -1
    to_bci -1
    predecessors "B262" 
    successors "B265" 
    xhandlers
    flags 
    probability 4567311708340335520
    begin_IR
      LIR
      nr 2392  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2394  <|@ instruction stack:60|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 2396  <|@ instruction stack:108|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr 2398  <|@ instruction stack:84|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2400  <|@ instruction r13|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 2402  <|@ instruction r11|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: -) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@eef3a58 encoding: base: 0 shift: 3 <|@ <|@
      nr 2404  <|@ instruction rsi|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr 2406  <|@ instruction rdx|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr 2408  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 2410  <|@ st <@st|@reference-map: [stack:44, stack:80, stack:88]
live-base-pointers: []
java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:238) [bci: 10]
locals: stack:40|QWORD[.] stack:108|DWORD 
java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
locals: - - 
java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
locals: stack:40|QWORD[.] - stack:48|QWORD[.] stack:64|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:10, 9, 17] <|@ <|@
      nr 2412  <|@ instruction r11|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2414  <|@ instruction r9|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 2416  <|@ instruction r8|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr 2418  <|@ instruction r10|DWORD[.] = MOVE stack:84|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2420  <|@ instruction r13|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr 2422  <|@ instruction JUMP ~[] destination: B263 -> B265 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B309"
    from_bci -1
    to_bci -1
    predecessors "B303" "B305" "B307" 
    successors 
    xhandlers
    flags 
    probability 4574320729851797906
    begin_IR
      LIR
      nr 2794  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2796  <|@ instruction MOV [r15|QWORD + 668] y: -282977 size: DWORD <|@ <|@
      nr 2798  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2800  <|@ st <@st|@reference-map: [stack:80, stack:88]
live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:266) [bci: 44]
locals: - - - - 
java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
locals: - - 
java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
locals: - - 
java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17]
locals: stack:40|QWORD[.] - stack:48|QWORD[.] stack:64|DWORD 
>@ <|@ instruction DEOPT info [bci:44, 22, 9, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B149" "B152" 
    successors "B154" "B152" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 1
    probability 4572479223348030203
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 1288  <|@ instruction xmm0|V256_DWORD[........] = H [r8|QWORD[.] + rdx|QWORD * 4] nZ: YMM oh: VMOVDQU <|@ <|@
      nr 1290  <|@ instruction J (address: [r10|QWORD[.] + rdx|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr 1292  <|@ instruction rdx|QWORD = LEA [rdx|QWORD + 8] size: QWORD <|@ <|@
      nr 1294  <|@ instruction CMP (x: rdx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr 1296  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B152 -> B154 falseDestination: B152 -> B152 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B316"
    from_bci -1
    to_bci -1
    predecessors "B314" 
    successors "B317" 
    xhandlers
    flags 
    probability 4560356318462058968
    begin_IR
      LIR
      nr 2884  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2886  <|@ instruction rcx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2888  <|@ instruction r11|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr 2890  <|@ instruction r14|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr 2892  <|@ instruction rax|DWORD = NOT rax|DWORD size: DWORD <|@ <|@
      nr 2894  <|@ instruction r8|DWORD = ADD (x: rax|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr 2896  <|@ instruction r9|DWORD = SUB (x: r14|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr 2898  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2900  <|@ instruction rdx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 2902  <|@ st <@st|@reference-map: [stack:88]
live-base-pointers: []
java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31]
locals: stack:40|QWORD[.] - - stack:64|DWORD 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD] [] callTarget: HotSpotMethod<System.arraycopy(Object, int, Object, int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:31] <|@ <|@
      nr 2904  <|@ instruction r14|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr 2906  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2908  <|@ instruction JUMP ~[] destination: B316 -> B317 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B177"
    from_bci -1
    to_bci -1
    predecessors "B135" 
    successors "B181" "B179" 
    xhandlers
    flags 
    probability 4544778362961599667
    begin_IR
      LIR
      nr 1514  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1516  <|@ instruction CMP r14|DWORD y: 1 size: DWORD <|@ <|@
      nr 1518  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B177 -> B181 falseDestination: B177 -> B179 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B179"
    from_bci -1
    to_bci -1
    predecessors "B177" 
    successors "B181" "B193" 
    xhandlers
    flags 
    probability 4540274763334229171
    begin_IR
      LIR
      nr 1524  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1526  <|@ instruction CMP (x: r10|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr 1528  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B179 -> B181 falseDestination: B179 -> B193 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B181"
    from_bci -1
    to_bci -1
    predecessors "B177" "B179" 
    successors "B182" 
    xhandlers
    flags 
    probability 4544778362961599667
    begin_IR
      LIR
      nr 1534  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1536  <|@ instruction stack:84|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr 1538  <|@ instruction stack:96|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1540  <|@ instruction stack:108|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr 1542  <|@ instruction r11|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr 1544  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1552  <|@ instruction JUMP ~[] destination: B181 -> B182 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B183"
    from_bci -1
    to_bci -1
    predecessors "B182" 
    successors "B184" "B187" 
    xhandlers
    flags 
    loop_index 11
    loop_depth 1
    probability 4553299463534714735
    begin_IR
      LIR
      nr 1560  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 1562  <|@ instruction rcx|DWORD = MOV [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1564  <|@ instruction rbx|DWORD = MOV [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1566  <|@ instruction rdi|DWORD = SUB (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1568  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@eef3a58 encoding: base: 0 shift: 3 <|@ <|@
      nr 1570  <|@ instruction CMP (x: rbx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr 1572  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B183 -> B184 falseDestination: B183 -> B187 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B184"
    from_bci -1
    to_bci -1
    predecessors "B183" 
    successors "B185" "B186" 
    xhandlers
    flags 
    loop_index 11
    loop_depth 1
    probability 4553299463534714735
    begin_IR
      LIR
      nr 1574  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1576  <|@ instruction CMP (x: r8|DWORD, y: [rsi|DWORD[.] * 8 + 12]) size: DWORD <|@ <|@
      nr 1578  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B184 -> B185 falseDestination: B184 -> B186 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B185"
    from_bci -1
    to_bci -1
    predecessors "B184" 
    successors "B182" 
    xhandlers
    flags "lle" 
    loop_index 11
    loop_depth 1
    probability 4553299463534714735
    begin_IR
      LIR
      nr 1580  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1582  <|@ instruction stack:112|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1584  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1586  <|@ instruction rdx|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1588  <|@ instruction stack:80|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1590  <|@ instruction stack:116|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1592  <|@ st <@st|@reference-map: [stack:32, stack:48, stack:68, stack:80, stack:88]
live-base-pointers: []
java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
locals: vobject:AbstractList$ListItr:0{cursor=stack:116|DWORD,lastRet=stack:108|DWORD,expectedModCount=stack:64|DWORD,this$0=stack:80|QWORD[.],this$0=stack:80|QWORD[.]} stack:116|DWORD - 
java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
locals: - 
java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
stack: stack:96|QWORD[.] stack:112|DWORD 
locals: - stack:96|QWORD[.] vobject:SubList$1:1{val$index=int[0|0x0],i=vobject:AbstractList$ListItr:0{cursor=stack:116|DWORD,lastRet=stack:108|DWORD,expectedModCount=stack:64|DWORD,this$0=stack:80|QWORD[.],this$0=stack:80|QWORD[.]},this$0=stack:48|QWORD[.]} stack:112|DWORD 
java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
locals: stack:40|QWORD[.] - - - 
vobject:AbstractList$ListItr:0{cursor=stack:116|DWORD,lastRet=stack:108|DWORD,expectedModCount=stack:64|DWORD,this$0=stack:80|QWORD[.],this$0=stack:80|QWORD[.]} Ljava/util/AbstractList$ListItr; stack:116|DWORD stack:108|DWORD stack:64|DWORD stack:80|QWORD[.] stack:80|QWORD[.] 
vobject:SubList$1:1{val$index=int[0|0x0],i=vobject:AbstractList$ListItr:0{cursor=stack:116|DWORD,lastRet=stack:108|DWORD,expectedModCount=stack:64|DWORD,this$0=stack:80|QWORD[.],this$0=stack:80|QWORD[.]},this$0=stack:48|QWORD[.]} Ljava/util/SubList$1; int[0|0x0] vobject:AbstractList$ListItr:0{cursor=stack:116|DWORD,lastRet=stack:108|DWORD,expectedModCount=stack:64|DWORD,this$0=stack:80|QWORD[.],this$0=stack:80|QWORD[.]} stack:48|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractList.get(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:14, 11, 39, 1] <|@ <|@
      nr 1594  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@eef3a58 encoding: base: 0 shift: 3 <|@ <|@
      nr 1596  <|@ instruction r10|DWORD = MOVE stack:112|DWORD moveKind: DWORD <|@ <|@
      nr 1598  <|@ instruction r8|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1600  <|@ instruction MOV (x: [r8|QWORD[.] + r10|DWORD * 4 + 16], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr 1602  <|@ instruction r11|QWORD[.] = LEA [r8|QWORD[.] + r10|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr 1604  <|@ instruction r11|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1606  <|@ instruction r13|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr 1608  <|@ instruction MOVB (x: [r11|QWORD[*] + r13|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 1610  <|@ instruction r11|DWORD = INC stack:116|DWORD size: DWORD <|@ <|@
      nr 1612  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr 1614  <|@ instruction stack:108|DWORD = STACKMOVE (input: stack:116|DWORD, ~backupSlot: stack:32|QWORD) scratch: rax <|@ <|@
      nr 1616  <|@ instruction r14|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr 1624  <|@ instruction JUMP ~[] destination: B185 -> B182 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B182"
    from_bci -1
    to_bci -1
    predecessors "B181" "B185" 
    successors "B183" "B189" 
    xhandlers
    flags "llh" 
    loop_index 11
    loop_depth 1
    probability 4554586948177749660
    begin_IR
      LIR
      nr 1554  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr 1546  <|@ instruction r8|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr 1548  <|@ instruction rsi|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1550  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1556  <|@ instruction CMP (x: r14|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 1558  <|@ instruction BRANCH trueDestinationProbability: 0.7836641850436589 condition: > trueDestination: B182 -> B183 falseDestination: B182 -> B189 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B189"
    from_bci -1
    to_bci -1
    predecessors "B182" 
    successors "B190" 
    xhandlers
    flags 
    probability 4544778362961599667
    begin_IR
      LIR
      nr 1658  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1660  <|@ instruction r10|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1662  <|@ instruction rax|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1666  <|@ instruction r11|DWORD = MOVE stack:108|DWORD moveKind: DWORD <|@ <|@
      nr 1668  <|@ instruction JUMP ~[] destination: B189 -> B190 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B198"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B237" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1756  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1758  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1760  <|@ instruction r10|DWORD = MOVE input: int[-226323|0xfffffffffffc8bed] <|@ <|@
      nr 1762  <|@ instruction JUMP ~[] destination: B198 -> B237 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B237"
    from_bci -1
    to_bci -1
    predecessors "B50" "B236" "B205" "B198" "B52" "B195" "B83" "B91" "B88" "B194" "B2" "B95" "B137" "B134" "B132" "B193" "B176" "B174" "B133" "B175" 
    successors 
    xhandlers
    flags 
    probability 2374522903531094016
    begin_IR
      LIR
      nr 2100  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 2102  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 2104  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr 2106  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
java.util.ArrayList.addAll(ArrayList.java:581) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B236"
    from_bci -1
    to_bci -1
    predecessors "B202" 
    successors "B237" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2086  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2088  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1399980118] <|@ <|@
      nr 2090  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2092  <|@ instruction r10|DWORD = MOVE input: int[-255259|0xfffffffffffc1ae5] <|@ <|@
      nr 2094  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2096  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2098  <|@ instruction JUMP ~[] destination: B236 -> B237 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B186"
    from_bci -1
    to_bci -1
    predecessors "B184" 
    successors "B188" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1626  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1628  <|@ instruction r9|DWORD = MOVE stack:108|DWORD moveKind: DWORD <|@ <|@
      nr 1630  <|@ instruction rbx|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1632  <|@ instruction r11|DWORD = MOVE input: int[-245779|0xfffffffffffc3fed] <|@ <|@
      nr 1636  <|@ instruction JUMP ~[] destination: B186 -> B188 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B188"
    from_bci -1
    to_bci -1
    predecessors "B187" "B186" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1650  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1646  <|@ instruction r8|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1652  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1654  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1656  <|@ st <@st|@reference-map: [rcx:0, r8:0, stack:80, stack:88]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:138) [bci: 15]
locals: - r8|QWORD[.] vobject:SubList$1:0{val$index=int[0|0x0],i=vobject:AbstractList$ListItr:1{cursor=rbx|DWORD,lastRet=r9|DWORD,expectedModCount=stack:64|DWORD,this$0=rcx|QWORD[.],this$0=rcx|QWORD[.]},this$0=stack:48|QWORD[.]} r10|DWORD 
java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
locals: stack:40|QWORD[.] - - - 
vobject:SubList$1:0{val$index=int[0|0x0],i=vobject:AbstractList$ListItr:1{cursor=rbx|DWORD,lastRet=r9|DWORD,expectedModCount=stack:64|DWORD,this$0=rcx|QWORD[.],this$0=rcx|QWORD[.]},this$0=stack:48|QWORD[.]} Ljava/util/SubList$1; int[0|0x0] vobject:AbstractList$ListItr:1{cursor=rbx|DWORD,lastRet=r9|DWORD,expectedModCount=stack:64|DWORD,this$0=rcx|QWORD[.],this$0=rcx|QWORD[.]} stack:48|QWORD[.] 
vobject:AbstractList$ListItr:1{cursor=rbx|DWORD,lastRet=r9|DWORD,expectedModCount=stack:64|DWORD,this$0=rcx|QWORD[.],this$0=rcx|QWORD[.]} Ljava/util/AbstractList$ListItr; rbx|DWORD r9|DWORD stack:64|DWORD rcx|QWORD[.] rcx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:15, 1] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B187"
    from_bci -1
    to_bci -1
    predecessors "B183" 
    successors "B188" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1638  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1640  <|@ instruction r9|DWORD = MOVE stack:108|DWORD moveKind: DWORD <|@ <|@
      nr 1642  <|@ instruction rbx|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1644  <|@ instruction r11|DWORD = MOVE input: int[-245011|0xfffffffffffc42ed] <|@ <|@
      nr 1648  <|@ instruction JUMP ~[] destination: B187 -> B188 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B320"
    from_bci -1
    to_bci -1
    predecessors "B259" 
    successors "B321" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2938  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2940  <|@ instruction rsi|DWORD = MOVE input: int[-273427|0xfffffffffffbd3ed] <|@ <|@
      nr 2942  <|@ instruction r14|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr 2944  <|@ instruction JUMP ~[] destination: B320 -> B321 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B193"
    from_bci -1
    to_bci -1
    predecessors "B179" 
    successors "B237" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1702  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1704  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1800298093] <|@ <|@
      nr 1706  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1708  <|@ instruction r10|DWORD = MOVE input: int[-246555|0xfffffffffffc3ce5] <|@ <|@
      nr 1710  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1712  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1714  <|@ instruction JUMP ~[] destination: B193 -> B237 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B237" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1144  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1146  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1800298093] <|@ <|@
      nr 1148  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1150  <|@ instruction r10|DWORD = MOVE input: int[-232731|0xfffffffffffc72e5] <|@ <|@
      nr 1152  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1154  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1156  <|@ instruction JUMP ~[] destination: B134 -> B237 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B237" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  748  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  750  <|@ instruction r10|DWORD = MOVE input: int[-251411|0xfffffffffffc29ed] <|@ <|@
      nr  752  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  754  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  756  <|@ instruction JUMP ~[] destination: B83 -> B237 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B191"
    from_bci -1
    to_bci -1
    predecessors "B190" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1680  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1682  <|@ instruction r8|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1684  <|@ instruction r9|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr 1686  <|@ instruction r14|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1688  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: r14|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@eef3a58 encoding: base: 0 shift: 3 <|@ <|@
      nr 1690  <|@ instruction MOV [r15|QWORD + 668] y: -249107 size: DWORD <|@ <|@
      nr 1692  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1694  <|@ st <@st|@reference-map: [r8:0, r14:0, stack:80, stack:88]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:143) [bci: 51]
locals: - r8|QWORD[.] vobject:SubList$1:0{val$index=int[0|0x0],i=vobject:AbstractList$ListItr:1{cursor=r10|DWORD,lastRet=r11|DWORD,expectedModCount=r9|DWORD,this$0=r14|QWORD[.],this$0=r14|QWORD[.]},this$0=stack:48|QWORD[.]} - 
java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1]
locals: stack:40|QWORD[.] - - - 
vobject:SubList$1:0{val$index=int[0|0x0],i=vobject:AbstractList$ListItr:1{cursor=r10|DWORD,lastRet=r11|DWORD,expectedModCount=r9|DWORD,this$0=r14|QWORD[.],this$0=r14|QWORD[.]},this$0=stack:48|QWORD[.]} Ljava/util/SubList$1; int[0|0x0] vobject:AbstractList$ListItr:1{cursor=r10|DWORD,lastRet=r11|DWORD,expectedModCount=r9|DWORD,this$0=r14|QWORD[.],this$0=r14|QWORD[.]} stack:48|QWORD[.] 
vobject:AbstractList$ListItr:1{cursor=r10|DWORD,lastRet=r11|DWORD,expectedModCount=r9|DWORD,this$0=r14|QWORD[.],this$0=r14|QWORD[.]} Ljava/util/AbstractList$ListItr; r10|DWORD r11|DWORD r9|DWORD r14|QWORD[.] r14|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:51, 1] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B237" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  806  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  808  <|@ instruction r10|DWORD = MOVE input: int[-252691|0xfffffffffffc24ed] <|@ <|@
      nr  810  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  812  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  814  <|@ instruction JUMP ~[] destination: B91 -> B237 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B237" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1118  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1800298093] <|@ <|@
      nr 1120  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1122  <|@ instruction r10|DWORD = MOVE input: int[-235291|0xfffffffffffc68e5] <|@ <|@
      nr 1124  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1126  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1128  <|@ instruction JUMP ~[] destination: B132 -> B237 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B175"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B237" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1486  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1488  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1800298093] <|@ <|@
      nr 1490  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1492  <|@ instruction r10|DWORD = MOVE input: int[-240155|0xfffffffffffc55e5] <|@ <|@
      nr 1494  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1496  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1498  <|@ instruction JUMP ~[] destination: B175 -> B237 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B261"
    from_bci -1
    to_bci -1
    predecessors "B260" 
    successors "B321" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2362  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2364  <|@ instruction rsi|DWORD = MOVE input: int[-393313|0xfffffffffff9ff9f] <|@ <|@
      nr 2366  <|@ instruction r14|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr 2368  <|@ instruction JUMP ~[] destination: B261 -> B321 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B237" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  782  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  784  <|@ instruction r10|DWORD = MOVE input: int[-251667|0xfffffffffffc28ed] <|@ <|@
      nr  786  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  788  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  790  <|@ instruction JUMP ~[] destination: B88 -> B237 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B174"
    from_bci -1
    to_bci -1
    predecessors "B145" 
    successors "B237" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1472  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1474  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1800298093] <|@ <|@
      nr 1476  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1478  <|@ instruction r10|DWORD = MOVE input: int[-242459|0xfffffffffffc4ce5] <|@ <|@
      nr 1480  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1482  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1484  <|@ instruction JUMP ~[] destination: B174 -> B237 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B194"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B237" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1716  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1718  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1720  <|@ instruction r10|DWORD = MOVE input: int[-251955|0xfffffffffffc27cd] <|@ <|@
      nr 1722  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1724  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1726  <|@ instruction JUMP ~[] destination: B194 -> B237 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B205"
    from_bci -1
    to_bci -1
    predecessors "B204" 
    successors "B237" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1806  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1808  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1810  <|@ instruction r10|DWORD = MOVE input: int[-254739|0xfffffffffffc1ced] <|@ <|@
      nr 1812  <|@ instruction JUMP ~[] destination: B205 -> B237 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B237" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1130  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1132  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1800298093] <|@ <|@
      nr 1134  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1136  <|@ instruction r10|DWORD = MOVE input: int[-232731|0xfffffffffffc72e5] <|@ <|@
      nr 1138  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1140  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1142  <|@ instruction JUMP ~[] destination: B133 -> B237 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B195"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B237" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1728  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1730  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1732  <|@ instruction r10|DWORD = MOVE input: int[-229683|0xfffffffffffc7ecd] <|@ <|@
      nr 1734  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1736  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1738  <|@ instruction JUMP ~[] destination: B195 -> B237 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B237" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1176  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1178  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1399295821] <|@ <|@
      nr 1180  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1182  <|@ instruction r10|DWORD = MOVE input: int[-238859|0xfffffffffffc5af5] <|@ <|@
      nr 1184  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1186  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1188  <|@ instruction JUMP ~[] destination: B137 -> B237 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B237" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  472  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  474  <|@ instruction r10|DWORD = MOVE input: int[-229907|0xfffffffffffc7ded] <|@ <|@
      nr  476  <|@ instruction JUMP ~[] destination: B52 -> B237 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B176"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B237" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1500  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1502  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1800298093] <|@ <|@
      nr 1504  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1506  <|@ instruction r10|DWORD = MOVE input: int[-240155|0xfffffffffffc55e5] <|@ <|@
      nr 1508  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1510  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1512  <|@ instruction JUMP ~[] destination: B176 -> B237 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B237" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   34  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   36  <|@ instruction r10|DWORD = MOVE input: int[-405345|0xfffffffffff9d09f] <|@ <|@
      nr   38  <|@ instruction JUMP ~[] destination: B2 -> B237 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B237" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  836  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  838  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1399295821] <|@ <|@
      nr  840  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  842  <|@ instruction r10|DWORD = MOVE input: int[-231435|0xfffffffffffc77f5] <|@ <|@
      nr  844  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  846  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  848  <|@ instruction JUMP ~[] destination: B95 -> B237 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B237" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  456  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  458  <|@ instruction r10|DWORD = MOVE input: int[-227859|0xfffffffffffc85ed] <|@ <|@
      nr  460  <|@ instruction JUMP ~[] destination: B50 -> B237 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokeinterface#10, 1      // java.util.Collection.toArray:()java.lang.Object[]
     6: astore_2      
     7: aload_2       
     8: arraylength   
     9: istore_3      
    10: aload_0       
    11: aload_0       
    12: getfield      #0          // size:int
    15: iload_3       
    16: iadd          
    17: invokespecial #28         // ensureCapacityInternal:(int)void
    20: aload_2       
    21: iconst_0      
    22: aload_0       
    23: getfield      #2          // elementData:java.lang.Object[]
    26: aload_0       
    27: getfield      #0          // size:int
    30: iload_3       
    31: invokestatic  #25         // java.lang.System.arraycopy:(java.lang.Object, int, java.lang.Object, int, int)void
    34: aload_0       
    35: dup           
    36: getfield      #0          // size:int
    39: iload_3       
    40: iadd          
    41: putfield      #0          // size:int
    44: iload_3       
    45: ifeq          52
    48: iconst_1      
    49: goto          53
    52: iconst_0      
    53: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec7848896c2470488974245848895424508b4a0849bd00e01b17010000004c896c244881f9addeadde0f85bf020000448b7214438504f4448b52104585d20f8ca6120000498b4f604d8b5f70468b04f508000000458bca41c1e102458d49174183e1f84d63c9498bd94803d9493bdb0f87920d000049895f60410f188409c0000000410f18840900010000410f18840940010000410f188409800100004489510c48c7010100000044894108488bd1428b0cf50c000000443bd1458bda440f4fd94963cb4883f9010f8c770000004c8d59f84c8d42104e8d0cf5100000004d85db48c7c3000000000f8d290800004c8d59fc493bdb0f8f13000000c4c17a6f0499c4c17a7f04984c8d5b04498bdb4c8d59fe493bdb0f8f13000000c4c1f96e0499c4c1f97e04984c8d5b02498bdb4c8bd949ffcb493bdb0f8f08000000458b1c9945891c984d63da4c3bd90f8f510000004585d20f84b5000000418bcaffc9c1e1024863c94c8d5a104c03d949c1eb09488d4a1048c1e9094c2bd949ffc3e9130000000f1f400049ffcb4c8bc14d03c54d03c34588204983fb010f8c6f000000ebe54c8d448a104c2bd9498d4bf84885c90f8d2f07000049c7c100000000498d4bfc4c3bc90f8f11000000c5f9efc0c4817a7f0488498d49044c8bc9498d4bfe4c3bc90f8f11000000c5f9efc0c481f97e0488498d49024c8bc949ffcb4d3bcb0f8f4bffffff47892488e942ffffff488bc2458bf2448b5614438504d4448b5e10418bfe4103fb4181faaddeadde0f84fe0300004489742440488944245044895c243cba0100000003560c89560c468b04d50c000000448b480c8bd7412bd083fa010f8d400200004585db0f8c410b0000453bf10f87510b0000452bc6453bd80f8f4c0b00004585f60f843a0000008b7808468b04d5080000004d63cb49c1e203418bce443bc70f85b5010000488d78104b8d748a10488bd1e80000000090448b742440488b742458418bc60346108946104585f60f95c00fb6c0488b6c24704883c478850500000000c5f877c381f9addeadde0f854b030000448b72184489742444468b14f50c0000004489542440443b520c0f853a0d0000448b5a144585db0f8cfa0f0000448b42104585c00f8c7f0f0000498b4f604d8b4f704181fbffffff000f83e1080000418bdbc1e3028d5b1783e3f84863db488bfb4803f9493bf90f87c308000049897f600f18840bc00000000f18840b000100000f18840b400100000f18840b800100004489590c48c70101000000c74108addeadde488bc1448944243c458bf34d63d64d8bda49ffcb4d8d42fe4d8d4afc498d4af84183fe010f8c4e000000488d70104885c90f8df607000048c7c200000000493bd10f8f0d000000c5f9efc0c5fa7f0496488d5204493bd00f8f0e000000c5f9efc0c4e1f97e0496488d5202493bd30f8f0400000044892496418bf6ffcec1e6024863de4585f60f844b050000488d70104803f348c1ee09488d501048c1ea09482bf248ffc6e90f00000048ffce488bfa4903fd4803fe4488274883fe010f8c14050000ebe54e8b04c5e8000000418b780c488bf0498bd24863df488d7e104a8d748a10488bd1488bcb4c89542420e8000000009085c00f85d3090000448b742440488b742458e921feffff418bc0d1e84103c08bf02bf785f6448bf0440f4cf7418d860900008083f8010f8d010c00004585f60f8cf60c0000498b4760498b7770468b1cd508000000418bd6c1e2028d521783e2f84863d2488bca4803c8483bce0f87a709000049894f600f188402c00000000f188402000100000f188402400100000f188402800100004489700c48c70001000000448958084c8bd8453bf0418bc6410f4fc04863f84883ff010f8c1a030000498d73104a8d14d5100000004c8d57f84d85d248c7c3000000008b4c24404c8b4424580f8d2d0600004c8d57fc493bda0f8f11000000c5fa6f049ac5fa7f049e4c8d5304498bda4c8d57fe493bda0f8f13000000c4e1f96e049ac4e1f97e049e4c8d5302498bda4c8bd749ffca493bda0f8f060000008b149a89149e4963f6483bf70f8fa00200004585f60f84f0010000418bfeffcfc1e7024863ff498d73104803f748c1ee09498d7b1048c1ef09482bf748ffc6e91b000000660f1f440000660f1f44000048ffce488bd74903d54803d64488224883fe010f8ca2010000ebe583ff0b0f8df9fbffffbf0a000000e9effbffff81f9addeadde0f8588070000448b72104d63d64d8bda49ffcb4183fe010f8c090000004d3bd30f86070a0000448b4214438504c44585f60f8cb90b0000498b4f604d8b4f704181feffffff000f83bb050000418bdec1e3028d5b1783e3f84863db488bfb4803f9493bf90f879d05000049897f600f18840bc00000000f18840b000100000f18840b400100000f18840b800100004489710c48c70101000000c74108addeadde488bc14c895c24204c89542430458be84183fe010f8c6d0000004c8b542430488d7810c4c1796ec5c4e27d58c0498d72f84885f648c7c2000000000f8deb040000498d72fc483bd60f8f10000000c5fa6fc8c5fa7f0c97488d7204488bd6498d72fe483bd60f8f0d000000c4e1f97e0497488d7202488bd6483b5424200f8f0400000044892c974585f60f84c1030000418bfeffcfc1e7024863ff488d70104803f748c1ee09488d781048c1ef09482bf748ffc64c8b6c2448e91d0000000f1f80000000000f1f800000000048ffce488bd74903d54803d64488224883fe010f8c62030000ebe5448b54243c498bfb48c1ef0341897814498bf048c1ee094688242e4585d20f8cf5060000413bc90f87ec060000442bf1453bd60f8fe006000085c90f84ac030000488b4424508b7808458b4b084963da8bd1443bcf0f8504010000488d7810498d749b10e80000000090448b742440488b742458418bc60346108946104585f60f95c00fb6c0488b6c24704883c478850500000000c5f877c38b4c24404c8b442458e954fdffff498d54bb10482bf7488d7ef84885ff0f8ded02000049c7c200000000488d7efc4c3bd70f8f11000000c5f9efc0c4a17a7f0492498d7a044c8bd7488d7efe4c3bd70f8f11000000c5f9efc0c4a1f97e0492498d7a024c8bd748ffce4c3bd60f8ffcfcffff46892492e9f3fcffffc5f9efc049c7c100000000660f1f440000c4817e7f04884d8d49084c3bc97ef1e9b3f8ffff660f1f440000660f1f440000c4c17e6f0499c4c17e7f0498488d5b08493bdb7eebe9bdf7ffff4e8b04cde8000000418b780c488bf0498bcb4c63cf488d7e10488d749910498bc94c895c2448e8000000009085c00f85bc050000448b742440488b742458e9d2feffff8b7c24448b14fd0800000048beaddeaddeaddeadde483b34d5b80200000f85db08000081faaddeadde8b74243c0f859c0100008b2cfd100000003b34ed0c0000000f8f660700004863ee81faaddeadde0f85b20200008b14fd1000000085d20f84260900004183fe0148895c24300f8c200000008b3cd50c0000004c8bed4d03eb8bdf493bdd0f86ff0600003bfe0f86480800004183fe010f8c090000004d3bd30f866d0700004183fe010f8c640000004c8d501048c1e203488d54aa104885c948c7c3000000000f8db5010000493bd90f8f12000000c5fa6f049ac4c17a7f049a488d4b04488bd9493bd80f8f13000000c4e1f96e049ac4c1f97e049a488d4b02488bd9493bdb0f8f070000008b149a4189149a4585f60f8440000000488d5010480354243048c1ea09488d481048c1e909482bd148ffc24c8b6c2448e90f00000048ffca4c8bd14d03d54c03d24588224883fa010f8c07000000ebe54c8b6c2448b9ffffffff8bd6be00000000e91f0000000f1f8400000000000f1f80000000008bcaffc1ffc6894c242c8bca8b54242c443bf67feb448bd9448bd2488b5424508b7210418bca2bce3b4a140f8c18060000488b742458e9e3f6ffff488b742458e9d9f6ffff4c8b6c2448ebef81faaddeadde0f850e00000083fe010f8c63feffffe97e06000081faaddeadde0f85b30600003b34fd100000000f8e45feffffe9ee050000c5f9efc049c7c20000000090c4a17e7f04924d8d52084c3bd77ef1e9fafcffff660f1f440000660f1f440000c5fe6f049ac5fe7f049e488d5b08493bda7eede9bbf9ffff448bf1498bf0e97cfcffffc5f9efc048c7c2000000006690c5fe7f0496488d5208483bd17ef2e9f1f7ffff0f1f8000000000660f1f440000c5fe6f049ac4c17e7f049a488d5b08483bd97eece932feffff0f1f8000000000c5fe7f0497488d5208483bd67ef2e902fbffff448944243c48b9addeaddeaddeadde488bf1418bd3b900000000458bf3e80000000090e956f7ffff4c895c24204c8954243048beaddeaddeaddeadde418bd6b900000000458be8e80000000090e97ffaffff48895c243081faaddeadde0f85ce0200008b7c24448b14fd1c00000085d20f84f10500004183fe014c894c24204c894424180f8c210000008b3cd50c0000004c8bc54d03c3448bcf4d3bc80f86fb0500003bfe0f86d50400004183fe010f8c090000004d3bd30f86120500004183fe010f8c700000004c8d501048c1e2034c8d44aa104885c948c7c2000000000f8df80100004c8b4c2420493bd10f8f10000000c4c17a6f0490c4c17a7f0492488d5204488bca488b542418483bca0f8f13000000c4c1f96e0488c4c1f97e048a488d5102488bca493bcb0f8f08000000418b14884189148a4585f60f84c9000000488d50104803d348c1ea09488d481048c1e909482bd148ffc2e91d0000000f1f80000000000f1f800000000048ffca4c8bc14d03c54c03c24588204883fa010f8c84000000ebe5be9fdffbff4189b79c0200004d89a7a8020000e80000000090be9fdffbffebe5be9fdffbffebde488b74245048b8ffffffffffffffff660f1f440000e80000000090448b700c4c8b6c2448488b742458e90ef4ffff49c1e003498bf0418bd2b900000000458beae80000000090488bd0458bd54c8b6c2448488b742458e97bf2ffffb9ffffffff8bd6be00000000e91200000066908bcaffc1ffc6894c242c8bca8b54242c443bf67feb448bd9448bd2488b542450e9abfcffff4c8b542420448b742440f7d0448bc0440344243c458bce442bc8488b7424508bd0498bca660f1f440000e80000000090448b742440488b742458e91ef4ffff4489442444897c2414448954242c458be949c1e303498bf3418bd6b900000000e800000000904c8bd8458bcd448b442444448b54242c4c8b6c2448e94ff6ffff41c7879c0200009faefbff4d89a7a8020000e800000000900f1f4000c4c17e6f0490c4c17e7f0492488d5208483bd17eebe9eefdffff488b4c2448448b5c243c448b742440f7d0448bc04503c3458bce442bc8488b7424508bd090e80000000090448b742440488b742458e9ebf8ffff4183fe010f8c090000004d3bd30f866f010000448974242c4889442420c7442414ffffffff448bde41ba00000000e99d000000660f1f8400000000008b4a108b5a14418bfb2bf98bce48c1e1033bdf0f8e0e010000443b04f50c0000000f85d90000004489542410488bf1418bd348894c243044895c240c48b8ffffffffffffffff90e8000000009048c1e803448b5424104c8b44242043894490104f8d5c901049c1eb094c8b6c24484788242b448b5c240c41ffc341ffc248894424608b44240c89442414488b442460448b74242c448b4424408b742444488b542450453bf20f8f55ffffff458bd3488b442420448b5c2414e9c3faffff49bb000000000000000041baed8bfcff4589979c0200004d899fa8020000e8000000009049baaddeaddeaddeadde4d8bda41bae51afcff488b542450488b742458ebcd448b4c2414418bdb41bbed3ffcff4c8b44242045899f9c0200004d89a7a8020000e80000000090448b4c2414418bdb41bbed42fcffebd7beedd3fbff448b742440e9dafcffff49baaddeaddeaddeadde4d8bda41bae53cfcff488b542450488b742458e965ffffff49baaddeaddeaddeadde4d8bda41bae572fcff488b542450488b742458e943ffffff49bb000000000000000041baed29fcff488b542450488b742458e924ffffff4c8bc0448b4c2440448b74244449c1e60341c7879c020000ed32fcff4d89a7a8020000e8000000009049bb000000000000000041baed24fcff488b542450488b742458e9dcfeffff49baaddeaddeaddeadde4d8bda41bae568fcff488b542450488b742458e9bafeffff49baaddeaddeaddeadde4d8bda41bae555fcff488b542450488b742458e998feffffbe9ffff9ff448b742440e9dcfbffff49bb000000000000000041baed28fcff488b542450488b742458e96afeffff49baaddeaddeaddeadde4d8bda41bae54cfcff488b542450488b742458e948feffff49bb000000000000000041bacd27fcff488b542450488b742458e929feffff49bb000000000000000041baed1cfcffe914feffff49baaddeaddeaddeadde4d8bda41bae572fcff488b542450488b742458e9f2fdffff49bb000000000000000041bacd7efcff488b542450488b742458e9d3fdffff49baaddeaddeaddeadde4d8bda41baf55afcff488b542450488b742458e9b1fdffff49bb000000000000000041baed7dfcffe99cfdffff49baaddeaddeaddeadde4d8bda41bae555fcff488b542450488b742458e97afdffff49bb000000000000000041ba9fd0f9ffe965fdffff49baaddeaddeaddeadde4d8bda41baf577fcff488b542450488b742458e943fdffff49bb000000000000000041baed85fcffe92efdffffe80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@25350e89 slotKind: QWORD  <||@
  Comment 48 6 stack:40|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 53 8 stack:48|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 58 10 rcx|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD state [bci:0]  <||@
  Comment 58 [rdx:0, rsi:0, stack:80, stack:88]at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-   <||@
  Comment 58 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 61 12 r13|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 71 14 stack:56|QWORD = MOVE r13|QWORD moveKind: QWORD  <||@
  Comment 76 16 CMP rcx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList;, resolved>;compressed}  <||@
  Comment 76 {meta{HotSpotType<Ljava/util/ArrayList;, resolved>;compressed}}  <||@
  Comment 82 18 BRANCH trueDestinationProbability: 0.7101534901468434 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B47  <||@
  Comment 88 block B1 null  <||@
  Comment 88 20 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 88 22 r14|DWORD[.] = MOV [rdx|QWORD[.] + 20] size: DWORD  <||@
  Comment 92 24 NULLCHECK [r12|QWORD[*] + r14|DWORD[.] * 8] state [bci:0]  <||@
  Comment 92 [rdx:0, rsi:0, r14:0, stack:80, stack:88]at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-   <||@
  Comment 92 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 96 26 r10|DWORD = MOV [rdx|QWORD[.] + 16] size: DWORD  <||@
  Comment 100 28 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 103 30 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3  <||@
  Comment 109 block B3 null  <||@
  Comment 109 40 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 109 42 rcx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 113 44 r11|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 117 46 r8|DWORD = MOV [r14|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 125 48 r9|DWORD = SHL r10|DWORD y: 2 size: DWORD  <||@
  Comment 132 50 r9|DWORD = LEA [r9|DWORD + 23] size: DWORD  <||@
  Comment 136 52 r9|DWORD = AND r9|DWORD y: -8 size: DWORD  <||@
  Comment 140 54 r9|QWORD = MOVSXD r9|DWORD size: QWORD  <||@
  Comment 143 56 rbx|QWORD = ADD (x: r9|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 149 58 CMP (x: rbx|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 152 60 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B5  <||@
  Comment 158 block B5 null  <||@
  Comment 158 86 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 158 88 MOV (x: [r15|QWORD + 96], y: rbx|QWORD) size: QWORD  <||@
  Comment 162 90 AMD64PREFETCH ~[r9|QWORD + rcx|QWORD * 1 + 192] instr: 0  <||@
  Comment 171 92 AMD64PREFETCH ~[r9|QWORD + rcx|QWORD * 1 + 256] instr: 0  <||@
  Comment 180 94 AMD64PREFETCH ~[r9|QWORD + rcx|QWORD * 1 + 320] instr: 0  <||@
  Comment 189 96 AMD64PREFETCH ~[r9|QWORD + rcx|QWORD * 1 + 384] instr: 0  <||@
  Comment 198 98 MOV (x: [rcx|QWORD + 12], y: r10|DWORD) size: DWORD  <||@
  Comment 202 100 MOV [rcx|QWORD] y: 1 size: QWORD  <||@
  Comment 209 102 MOV (x: [rcx|QWORD + 8], y: r8|DWORD) size: DWORD  <||@
  Comment 213 104 rcx|QWORD[.] = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 213 106 rdx|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 216 108 JUMP ~[] destination: B5 -> B6  <||@
  Comment 216 block B6 null  <||@
  Comment 216 110 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 216 112 rcx|DWORD = MOV [r14|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 224 114 CMP (x: r10|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 227 116 r11|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: rcx|DWORD) condition: >  <||@
  Comment 234 118 rcx|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 237 120 CMP rcx|QWORD y: 1 size: QWORD  <||@
  Comment 241 122 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B6 -> B22 falseDestination: B6 -> B8  <||@
  Comment 247 block B8 null  <||@
  Comment 247 128 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 247 130 r11|QWORD = LEA [rcx|QWORD - 8] size: QWORD  <||@
  Comment 251 132 r8|QWORD[.] = LEA [rdx|QWORD[.] + 16] size: QWORD  <||@
  Comment 255 134 r9|QWORD[*] = LEA [r14|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 263 136 TEST (x: r11|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 266 142 rbx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 273 138 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B8 -> B13 falseDestination: B8 -> B11  <||@
  Comment 279 block B13 null  <||@
  Comment 279 168 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 279 170 r11|QWORD = LEA [rcx|QWORD - 4] size: QWORD  <||@
  Comment 283 172 CMP (x: rbx|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 286 174 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B13 -> B16 falseDestination: B13 -> B15  <||@
  Comment 292 block B15 null  <||@
  Comment 292 180 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 292 182 xmm0|V128_DWORD[....] = H [r9|QWORD[*] + rbx|QWORD * 4] nZ: XMM oh: VMOVDQU  <||@
  Comment 298 184 J (address: [r8|QWORD[.] + rbx|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU  <||@
  Comment 304 186 r11|QWORD = LEA [rbx|QWORD + 4] size: QWORD  <||@
  Comment 308 188 rbx|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 311 190 JUMP ~[] destination: B15 -> B16  <||@
  Comment 311 block B16 null  <||@
  Comment 311 192 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 311 194 r11|QWORD = LEA [rcx|QWORD - 2] size: QWORD  <||@
  Comment 315 196 CMP (x: rbx|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 318 198 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B16 -> B19 falseDestination: B16 -> B18  <||@
  Comment 324 block B18 null  <||@
  Comment 324 204 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 324 206 xmm0|V64_DWORD[..] = H [r9|QWORD[*] + rbx|QWORD * 4] nZ: XMM oh: VMOVQ  <||@
  Comment 330 208 J (address: [r8|QWORD[.] + rbx|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ  <||@
  Comment 336 210 r11|QWORD = LEA [rbx|QWORD + 2] size: QWORD  <||@
  Comment 340 212 rbx|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 343 214 JUMP ~[] destination: B18 -> B19  <||@
  Comment 343 block B19 null  <||@
  Comment 343 216 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 343 218 r11|QWORD = DEC rcx|QWORD size: QWORD  <||@
  Comment 349 220 CMP (x: rbx|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 352 222 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B19 -> B22 falseDestination: B19 -> B21  <||@
  Comment 358 block B21 null  <||@
  Comment 358 228 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 358 230 r11|DWORD[.] = MOV [r9|QWORD[*] + rbx|QWORD * 4] size: DWORD  <||@
  Comment 362 232 MOV (x: [r8|QWORD[.] + rbx|QWORD * 4], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 366 234 JUMP ~[] destination: B21 -> B22  <||@
  Comment 366 block B22 null  <||@
  Comment 366 236 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 366 238 r11|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 369 240 CMP (x: r11|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 372 242 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B39  <||@
  Comment 378 block B39 null  <||@
  Comment 378 358 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 378 360 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 381 362 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B39 -> B44 falseDestination: B39 -> B41  <||@
  Comment 387 block B41 null  <||@
  Comment 387 368 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 387 370 rcx|DWORD = DEC r10|DWORD size: DWORD  <||@
  Comment 392 372 rcx|DWORD = SHL rcx|DWORD y: 2 size: DWORD  <||@
  Comment 395 374 rcx|QWORD = MOVSXD rcx|DWORD size: QWORD  <||@
  Comment 398 376 r11|QWORD[.] = LEA [rdx|QWORD[.] + 16] size: QWORD  <||@
  Comment 402 378 r11|QWORD[.] = ADD (x: r11|QWORD[.], y: rcx|QWORD) size: QWORD  <||@
  Comment 405 380 r11|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD  <||@
  Comment 409 382 rcx|QWORD[.] = LEA [rdx|QWORD[.] + 16] size: QWORD  <||@
  Comment 413 384 rcx|QWORD[*] = SHR rcx|QWORD[.] y: 9 size: QWORD  <||@
  Comment 417 386 r11|QWORD[*] = SUB (x: r11|QWORD[*], ~y: rcx|QWORD[*]) size: QWORD  <||@
  Comment 420 388 r11|QWORD[*] = INC r11|QWORD[*] size: QWORD  <||@
  Comment 423 390 JUMP ~[] destination: B41 -> B42  <||@
  Comment 428 block B45 loop 2 depth 1 header:1864|LoopBegin  <||@
  Comment 428 410 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 432 412 r11|QWORD[*] = DEC r11|QWORD[*] size: QWORD  <||@
  Comment 435 414 r8|QWORD[*] = ADD (x: rcx|QWORD[*], y: r13|QWORD) size: QWORD  <||@
  Comment 441 416 r8|QWORD[*] = ADD (x: r8|QWORD[*], y: r11|QWORD[*]) size: QWORD  <||@
  Comment 444 418 MOVB (x: [r8|QWORD[*]], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 447 420 JUMP ~[] destination: B45 -> B42  <||@
  Comment 447 block B42 loop 2 depth 1 header:1864|LoopBegin  <||@
  Comment 447 392 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 447 394 CMP r11|QWORD[*] y: 1 size: QWORD  <||@
  Comment 451 396 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B42 -> B44 falseDestination: B42 -> B45  <||@
  Comment 459 block B23 null  <||@
  Comment 459 244 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 459 246 r8|QWORD[.] = LEA [rdx|QWORD[.] + rcx|QWORD * 4 + 16] size: QWORD  <||@
  Comment 464 248 r11|QWORD = SUB (x: r11|QWORD, ~y: rcx|QWORD) size: QWORD  <||@
  Comment 467 250 rcx|QWORD = LEA [r11|QWORD - 8] size: QWORD  <||@
  Comment 471 252 TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 474 254 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25  <||@
  Comment 480 block B24 null  <||@
  Comment 480 256 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 480 258 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 487 260 JUMP ~[] destination: B24 -> B28  <||@
  Comment 487 block B28 null  <||@
  Comment 487 284 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 487 286 rcx|QWORD = LEA [r11|QWORD - 4] size: QWORD  <||@
  Comment 491 288 CMP (x: r9|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 494 290 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B28 -> B31 falseDestination: B28 -> B30  <||@
  Comment 500 block B30 null  <||@
  Comment 500 296 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 500 298 xmm0|V128_DWORD[....] = L oc: SIMD<null,null,null,null>  <||@
  Comment 504 300 J (address: [r8|QWORD[.] + r9|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU  <||@
  Comment 510 302 rcx|QWORD = LEA [r9|QWORD + 4] size: QWORD  <||@
  Comment 514 304 r9|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 517 306 JUMP ~[] destination: B30 -> B31  <||@
  Comment 517 block B31 null  <||@
  Comment 517 308 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 517 310 rcx|QWORD = LEA [r11|QWORD - 2] size: QWORD  <||@
  Comment 521 312 CMP (x: r9|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 524 314 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B31 -> B34 falseDestination: B31 -> B33  <||@
  Comment 530 block B33 null  <||@
  Comment 530 320 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 530 322 xmm0|V64_DWORD[..] = L oc: SIMD<null,null>  <||@
  Comment 534 324 J (address: [r8|QWORD[.] + r9|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ  <||@
  Comment 540 326 rcx|QWORD = LEA [r9|QWORD + 2] size: QWORD  <||@
  Comment 544 328 r9|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 547 330 JUMP ~[] destination: B33 -> B34  <||@
  Comment 547 block B34 null  <||@
  Comment 547 332 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 547 334 r11|QWORD = DEC r11|QWORD size: QWORD  <||@
  Comment 550 336 CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 553 338 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B34 -> B39 falseDestination: B34 -> B36  <||@
  Comment 559 block B36 null  <||@
  Comment 559 344 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 559 346 MOV (x: [r8|QWORD[.] + r9|QWORD * 4], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 563 348 JUMP ~[] destination: B36 -> B39  <||@
  Comment 568 block B44 null  <||@
  Comment 568 402 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 568 404 rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 571 406 r14|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 574 408 JUMP ~[] destination: B44 -> B239  <||@
  Comment 574 block B239 null  <||@
  Comment 574 2122 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 574 2124 r10|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 578 2126 NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:6]  <||@
  Comment 578 [rax:0, rsi:0, r10:0, stack:88]at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 6, duringCall: false, rethrow: false]
              |0             |1  |2  |3 
     locals:  |rsi|QWORD[.]  |-  |-  |- 
     stack:   |rax|QWORD[.]  |   |   |    <||@
  Comment 578 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 582 2128 r11|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 586 2130 rdi|DWORD = ADD (x: r14|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 592 2132 CMP r10|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Object[0]{}]  <||@
  Comment 592 {NarrowOop[Object[0]{}]}  <||@
  Comment 599 2134 BRANCH trueDestinationProbability: 0.20639829530068676 condition: = trueDestination: B239 -> B240 falseDestination: B239 -> B244  <||@
  Comment 605 block B244 null  <||@
  Comment 605 2156 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 605 2158 stack:64|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 610 2160 stack:48|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 615 2162 stack:68|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 620 2164 rdx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 625 2166 rdx|DWORD = ADD (x: rdx|DWORD, ~y: [rsi|QWORD[.] + 12]) size: DWORD  <||@
  Comment 628 2168 MOV (x: [rsi|QWORD[.] + 12], y: rdx|DWORD) size: DWORD  <||@
  Comment 631 2170 r8|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 639 2172 r9|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD  <||@
  Comment 643 2174 rdx|DWORD = SUB (x: rdi|DWORD, ~y: r8|DWORD) size: DWORD  <||@
  Comment 648 2176 CMP rdx|DWORD y: 1 size: DWORD  <||@
  Comment 651 2178 BRANCH trueDestinationProbability: 0.7759914359571053 condition: < trueDestination: B244 -> B245 falseDestination: B244 -> B259  <||@
  Comment 657 block B245 null  <||@
  Comment 657 2180 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 657 2182 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 660 2184 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B245 -> B246 falseDestination: B245 -> B247  <||@
  Comment 666 block B247 null  <||@
  Comment 666 2192 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 666 2194 CMP (x: r14|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 669 2196 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B247 -> B248 falseDestination: B247 -> B249  <||@
  Comment 675 block B249 null  <||@
  Comment 675 2204 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 675 2206 r8|DWORD = SUB (x: r8|DWORD, ~y: r14|DWORD) size: DWORD  <||@
  Comment 678 2208 CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 681 2210 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B249 -> B250 falseDestination: B249 -> B251  <||@
  Comment 687 block B251 null  <||@
  Comment 687 2218 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 687 2220 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 690 2222 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B251 -> B258 falseDestination: B251 -> B253  <||@
  Comment 696 block B253 null  <||@
  Comment 696 2228 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 696 2230 rdi|DWORD = MOV [rax|QWORD[.] + 8] size: DWORD  <||@
  Comment 699 2232 r8|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 707 2234 r9|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 710 2236 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@eef3a58 encoding: base: 0 shift: 3  <||@
  Comment 714 2238 rcx|QWORD = MOV r14|DWORD size: DWORD  <||@
  Comment 717 2240 CMP (x: r8|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 720 2242 BRANCH trueDestinationProbability: 0.6 condition: = trueDestination: B253 -> B254 falseDestination: B253 -> B255  <||@
  Comment 726 block B254 null  <||@
  Comment 726 2244 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 726 2246 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 726 2248 r10|QWORD[*] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 726 2250 rdi|QWORD = LEA [rax|QWORD[*] + 16] size: QWORD  <||@
  Comment 730 2252 rsi|QWORD = LEA [r10|QWORD[*] + r9|QWORD * 4 + 16] size: QWORD  <||@
  Comment 735 2254 rdx|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 738 2256 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: ObjectArraycopyKillAny(Word,Word,Word)void@0x106813120:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 738 {Field[name=StubRoutines::_oop_arraycopy, type=address, offset=0, address=0x105a7dc90, value=0x106813120]:0x106813120}  <||@
  Comment 744 2258 r14|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 749 2260 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 754 2262 JUMP ~[] destination: B254 -> B258  <||@
  Comment 754 block B258 null  <||@
  Comment 754 2326 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 754 2328 rax|DWORD = ADD (x: r14|DWORD, ~y: [rsi|QWORD[.] + 16]) size: DWORD  <||@
  Comment 760 2330 MOV (x: [rsi|QWORD[.] + 16], y: rax|DWORD) size: DWORD  <||@
  Comment 763 2332 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 766 2334 rax|DWORD = SETCC condition: !=  <||@
  Comment 772 2336 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 781 12  <||@
  Comment 791 block B47 null  <||@
  Comment 791 426 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 791 428 CMP rcx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/RandomAccessSubList;, resolved>;compressed}  <||@
  Comment 791 {meta{HotSpotType<Ljava/util/RandomAccessSubList;, resolved>;compressed}}  <||@
  Comment 797 430 BRANCH trueDestinationProbability: 0.5054073948247549 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B199  <||@
  Comment 803 block B48 null  <||@
  Comment 803 432 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 803 434 r14|DWORD[.] = MOV [rdx|QWORD[.] + 24] size: DWORD  <||@
  Comment 807 436 stack:60|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD  <||@
  Comment 812 438 r10|DWORD = MOV [r14|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 812 [rdx:0, rsi:0, stack:68, stack:80, stack:88]at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-   <||@
  Comment 812 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 820 440 stack:64|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 825 442 CMP (x: r10|DWORD, y: [rdx|QWORD[.] + 12]) size: DWORD  <||@
  Comment 829 444 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B198  <||@
  Comment 835 block B49 null  <||@
  Comment 835 446 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 835 448 r11|DWORD = MOV [rdx|QWORD[.] + 20] size: DWORD  <||@
  Comment 839 450 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 842 452 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B49 -> B50 falseDestination: B49 -> B51  <||@
  Comment 848 block B51 null  <||@
  Comment 848 462 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 848 464 r8|DWORD = MOV [rdx|QWORD[.] + 16] size: DWORD  <||@
  Comment 852 466 TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 855 468 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B51 -> B52 falseDestination: B51 -> B53  <||@
  Comment 861 block B53 null  <||@
  Comment 861 478 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 861 480 rcx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 865 482 r9|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 869 484 CMP r11|DWORD y: 16777215 size: DWORD  <||@
  Comment 876 486 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B58  <||@
  Comment 882 block B54 null  <||@
  Comment 882 488 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 882 490 rbx|DWORD = SHL r11|DWORD y: 2 size: DWORD  <||@
  Comment 888 492 rbx|DWORD = LEA [rbx|DWORD + 23] size: DWORD  <||@
  Comment 891 494 rbx|DWORD = AND rbx|DWORD y: -8 size: DWORD  <||@
  Comment 894 496 rbx|QWORD = MOVSXD rbx|DWORD size: QWORD  <||@
  Comment 897 498 rdi|QWORD = ADD (x: rbx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 903 500 CMP (x: rdi|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 906 502 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B54 -> B58 falseDestination: B54 -> B56  <||@
  Comment 912 block B56 null  <||@
  Comment 912 510 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 912 512 MOV (x: [r15|QWORD + 96], y: rdi|QWORD) size: QWORD  <||@
  Comment 916 514 AMD64PREFETCH ~[rbx|QWORD + rcx|QWORD * 1 + 192] instr: 0  <||@
  Comment 924 516 AMD64PREFETCH ~[rbx|QWORD + rcx|QWORD * 1 + 256] instr: 0  <||@
  Comment 932 518 AMD64PREFETCH ~[rbx|QWORD + rcx|QWORD * 1 + 320] instr: 0  <||@
  Comment 940 520 AMD64PREFETCH ~[rbx|QWORD + rcx|QWORD * 1 + 384] instr: 0  <||@
  Comment 948 522 MOV (x: [rcx|QWORD + 12], y: r11|DWORD) size: DWORD  <||@
  Comment 952 524 MOV [rcx|QWORD] y: 1 size: QWORD  <||@
  Comment 959 526 MOV [rcx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}  <||@
  Comment 959 {meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}}  <||@
  Comment 966 528 rcx|QWORD[.] = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 966 530 rax|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 969 532 stack:68|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 974 534 r14|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 977 536 JUMP ~[] destination: B56 -> B59  <||@
  Comment 977 block B59 null  <||@
  Comment 977 560 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 977 562 r10|QWORD = MOVSXD r14|DWORD size: QWORD  <||@
  Comment 980 564 r11|QWORD = DEC r10|QWORD size: QWORD  <||@
  Comment 986 566 r8|QWORD = LEA [r10|QWORD - 2] size: QWORD  <||@
  Comment 990 568 r9|QWORD = LEA [r10|QWORD - 4] size: QWORD  <||@
  Comment 994 570 rcx|QWORD = LEA [r10|QWORD - 8] size: QWORD  <||@
  Comment 998 572 CMP r14|DWORD y: 1 size: DWORD  <||@
  Comment 1002 574 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B59 -> B75 falseDestination: B59 -> B61  <||@
  Comment 1008 block B61 null  <||@
  Comment 1008 580 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1008 582 rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 1012 584 TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 1015 586 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63  <||@
  Comment 1021 block B62 null  <||@
  Comment 1021 588 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1021 590 rdx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1028 592 JUMP ~[] destination: B62 -> B66  <||@
  Comment 1028 block B66 null  <||@
  Comment 1028 616 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1028 618 CMP (x: rdx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 1031 620 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B66 -> B69 falseDestination: B66 -> B68  <||@
  Comment 1037 block B68 null  <||@
  Comment 1037 626 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1037 628 xmm0|V128_DWORD[....] = L oc: SIMD<null,null,null,null>  <||@
  Comment 1041 630 J (address: [rsi|QWORD[.] + rdx|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU  <||@
  Comment 1046 632 rdx|QWORD = LEA [rdx|QWORD + 4] size: QWORD  <||@
  Comment 1050 634 JUMP ~[] destination: B68 -> B69  <||@
  Comment 1050 block B69 null  <||@
  Comment 1050 636 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1050 638 CMP (x: rdx|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 1053 640 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B69 -> B72 falseDestination: B69 -> B71  <||@
  Comment 1059 block B71 null  <||@
  Comment 1059 646 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1059 648 xmm0|V64_DWORD[..] = L oc: SIMD<null,null>  <||@
  Comment 1063 650 J (address: [rsi|QWORD[.] + rdx|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ  <||@
  Comment 1069 652 rdx|QWORD = LEA [rdx|QWORD + 2] size: QWORD  <||@
  Comment 1073 654 JUMP ~[] destination: B71 -> B72  <||@
  Comment 1073 block B72 null  <||@
  Comment 1073 656 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1073 658 CMP (x: rdx|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 1076 660 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B72 -> B75 falseDestination: B72 -> B74  <||@
  Comment 1082 block B74 null  <||@
  Comment 1082 666 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1082 668 MOV (x: [rsi|QWORD[.] + rdx|QWORD * 4], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 1086 670 JUMP ~[] destination: B74 -> B75  <||@
  Comment 1086 block B75 null  <||@
  Comment 1086 672 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1086 674 rsi|DWORD = DEC r14|DWORD size: DWORD  <||@
  Comment 1091 676 rsi|DWORD = SHL rsi|DWORD y: 2 size: DWORD  <||@
  Comment 1094 678 rbx|QWORD = MOVSXD rsi|DWORD size: QWORD  <||@
  Comment 1097 680 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 1100 682 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B75 -> B80 falseDestination: B75 -> B77  <||@
  Comment 1106 block B77 null  <||@
  Comment 1106 690 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1106 692 rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 1110 694 rsi|QWORD[.] = ADD (x: rsi|QWORD[.], y: rbx|QWORD) size: QWORD  <||@
  Comment 1113 696 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1117 698 rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 1121 700 rdx|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1125 702 rsi|QWORD[*] = SUB (x: rsi|QWORD[*], ~y: rdx|QWORD[*]) size: QWORD  <||@
  Comment 1128 704 rsi|QWORD[*] = INC rsi|QWORD[*] size: QWORD  <||@
  Comment 1131 706 JUMP ~[] destination: B77 -> B78  <||@
  Comment 1136 block B196 loop 4 depth 1 header:1950|LoopBegin  <||@
  Comment 1136 1740 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1136 1742 rsi|QWORD[*] = DEC rsi|QWORD[*] size: QWORD  <||@
  Comment 1139 1744 rdi|QWORD[*] = ADD (x: rdx|QWORD[*], y: r13|QWORD) size: QWORD  <||@
  Comment 1145 1746 rdi|QWORD[*] = ADD (x: rdi|QWORD[*], y: rsi|QWORD[*]) size: QWORD  <||@
  Comment 1148 1748 MOVB (x: [rdi|QWORD[*]], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1151 1750 JUMP ~[] destination: B196 -> B78  <||@
  Comment 1151 block B78 loop 4 depth 1 header:1950|LoopBegin  <||@
  Comment 1151 708 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1151 710 CMP rsi|QWORD[*] y: 1 size: QWORD  <||@
  Comment 1155 712 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B78 -> B80 falseDestination: B78 -> B196  <||@
  Comment 1163 block B255 null  <||@
  Comment 1163 2264 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1163 2266 r8|QWORD = MOV [r8|DWORD * 8 + 232] size: QWORD  <||@
  Comment 1171 2268 rdi|DWORD = MOV [r8|QWORD + 12] size: DWORD  <||@
  Comment 1175 2270 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1178 2272 rdx|QWORD[*] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1181 2274 rbx|QWORD = MOVSXD rdi|DWORD size: QWORD  <||@
  Comment 1184 2276 rdi|QWORD = LEA [rsi|QWORD[*] + 16] size: QWORD  <||@
  Comment 1188 2278 rsi|QWORD = LEA [rdx|QWORD[*] + r9|QWORD * 4 + 16] size: QWORD  <||@
  Comment 1193 2280 rdx|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 1196 2282 rcx|QWORD = MOVE rbx|QWORD moveKind: QWORD  <||@
  Comment 1199 2284 stack:96|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1204 2286 rax|DWORD = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: ObjectCheckcast(Word,Word,Word,Word,Word)int@0x1068133a0:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 1204 {Field[name=StubRoutines::_checkcast_arraycopy, type=address, offset=0, address=0x105aa7b78, value=0x1068133a0]:0x1068133a0}  <||@
  Comment 1210 2288 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1212 2290 BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B255 -> B256 falseDestination: B255 -> B257  <||@
  Comment 1218 block B256 null  <||@
  Comment 1218 2292 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1218 2294 r14|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 1223 2296 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1228 2298 JUMP ~[] destination: B256 -> B258  <||@
  Comment 1233 block B259 null  <||@
  Comment 1233 2338 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1233 2340 rax|DWORD = SHR r8|DWORD size: DWORD  <||@
  Comment 1238 2342 rax|DWORD = ADD (x: rax|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 1241 2344 rsi|DWORD = SUB (x: rax|DWORD, ~y: rdi|DWORD) size: DWORD  <||@
  Comment 1245 2346 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 1247 2348 r14|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: rdi|DWORD) condition: <  <||@
  Comment 1254 2350 rax|DWORD = LEA [r14|DWORD - 2147483639] size: DWORD  <||@
  Comment 1261 2352 CMP rax|DWORD y: 1 size: DWORD  <||@
  Comment 1264 2354 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B259 -> B260 falseDestination: B259 -> B320  <||@
  Comment 1270 block B260 null  <||@
  Comment 1270 2356 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1270 2358 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 1273 2360 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B260 -> B261 falseDestination: B260 -> B262  <||@
  Comment 1279 block B262 null  <||@
  Comment 1279 2370 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1279 2372 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 1283 2374 rsi|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 1287 2376 r11|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 1295 2378 rdx|DWORD = SHL r14|DWORD y: 2 size: DWORD  <||@
  Comment 1301 2380 rdx|DWORD = LEA [rdx|DWORD + 23] size: DWORD  <||@
  Comment 1304 2382 rdx|DWORD = AND rdx|DWORD y: -8 size: DWORD  <||@
  Comment 1307 2384 rdx|QWORD = MOVSXD rdx|DWORD size: QWORD  <||@
  Comment 1310 2386 rcx|QWORD = ADD (x: rdx|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 1316 2388 CMP (x: rcx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1319 2390 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B262 -> B263 falseDestination: B262 -> B264  <||@
  Comment 1325 block B264 null  <||@
  Comment 1325 2424 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1325 2426 MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD  <||@
  Comment 1329 2428 AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 192] instr: 0  <||@
  Comment 1337 2430 AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 256] instr: 0  <||@
  Comment 1345 2432 AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 320] instr: 0  <||@
  Comment 1353 2434 AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 384] instr: 0  <||@
  Comment 1361 2436 MOV (x: [rax|QWORD + 12], y: r14|DWORD) size: DWORD  <||@
  Comment 1365 2438 MOV [rax|QWORD] y: 1 size: QWORD  <||@
  Comment 1372 2440 MOV (x: [rax|QWORD + 8], y: r11|DWORD) size: DWORD  <||@
  Comment 1376 2442 rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 1376 2444 r11|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1379 2446 JUMP ~[] destination: B264 -> B265  <||@
  Comment 1379 block B265 null  <||@
  Comment 1379 2448 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1379 2450 CMP (x: r14|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 1382 2452 rax|DWORD = CMOVE (falseValue: r14|DWORD, ~trueValue: r8|DWORD) condition: >  <||@
  Comment 1389 2454 rdi|QWORD = MOVSXD rax|DWORD size: QWORD  <||@
  Comment 1392 2456 CMP rdi|QWORD y: 1 size: QWORD  <||@
  Comment 1396 2458 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B265 -> B266 falseDestination: B265 -> B267  <||@
  Comment 1402 block B267 null  <||@
  Comment 1402 2468 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1402 2470 rsi|QWORD[.] = LEA [r11|QWORD[.] + 16] size: QWORD  <||@
  Comment 1406 2472 rdx|QWORD[*] = LEA [r10|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 1414 2474 r10|QWORD = LEA [rdi|QWORD - 8] size: QWORD  <||@
  Comment 1418 2476 TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1421 2482 rbx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1428 2484 rcx|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 1432 2486 r8|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1437 2478 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B267 -> B272 falseDestination: B267 -> B270  <||@
  Comment 1443 block B272 null  <||@
  Comment 1443 2516 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1443 2518 r10|QWORD = LEA [rdi|QWORD - 4] size: QWORD  <||@
  Comment 1447 2520 CMP (x: rbx|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1450 2522 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B272 -> B275 falseDestination: B272 -> B274  <||@
  Comment 1456 block B274 null  <||@
  Comment 1456 2528 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1456 2530 xmm0|V128_DWORD[....] = H [rdx|QWORD[*] + rbx|QWORD * 4] nZ: XMM oh: VMOVDQU  <||@
  Comment 1461 2532 J (address: [rsi|QWORD[.] + rbx|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU  <||@
  Comment 1466 2534 r10|QWORD = LEA [rbx|QWORD + 4] size: QWORD  <||@
  Comment 1470 2536 rbx|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 1473 2538 JUMP ~[] destination: B274 -> B275  <||@
  Comment 1473 block B275 null  <||@
  Comment 1473 2540 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1473 2542 r10|QWORD = LEA [rdi|QWORD - 2] size: QWORD  <||@
  Comment 1477 2544 CMP (x: rbx|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1480 2546 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B275 -> B278 falseDestination: B275 -> B277  <||@
  Comment 1486 block B277 null  <||@
  Comment 1486 2552 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1486 2554 xmm0|V64_DWORD[..] = H [rdx|QWORD[*] + rbx|QWORD * 4] nZ: XMM oh: VMOVQ  <||@
  Comment 1492 2556 J (address: [rsi|QWORD[.] + rbx|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ  <||@
  Comment 1498 2558 r10|QWORD = LEA [rbx|QWORD + 2] size: QWORD  <||@
  Comment 1502 2560 rbx|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 1505 2562 JUMP ~[] destination: B277 -> B278  <||@
  Comment 1505 block B278 null  <||@
  Comment 1505 2564 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1505 2566 r10|QWORD = DEC rdi|QWORD size: QWORD  <||@
  Comment 1511 2568 CMP (x: rbx|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1514 2570 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B278 -> B281 falseDestination: B278 -> B280  <||@
  Comment 1520 block B280 null  <||@
  Comment 1520 2576 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1520 2578 rdx|DWORD[.] = MOV [rdx|QWORD[*] + rbx|QWORD * 4] size: DWORD  <||@
  Comment 1523 2580 MOV (x: [rsi|QWORD[.] + rbx|QWORD * 4], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 1526 2582 JUMP ~[] destination: B280 -> B281  <||@
  Comment 1526 block B281 null  <||@
  Comment 1526 2584 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1526 2586 rsi|QWORD = MOVSXD r14|DWORD size: QWORD  <||@
  Comment 1529 2588 CMP (x: rsi|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 1532 2590 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B281 -> B282 falseDestination: B281 -> B298  <||@
  Comment 1538 block B298 null  <||@
  Comment 1538 2706 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1538 2708 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 1541 2710 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B298 -> B303 falseDestination: B298 -> B300  <||@
  Comment 1547 block B300 null  <||@
  Comment 1547 2718 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1547 2720 rdi|DWORD = DEC r14|DWORD size: DWORD  <||@
  Comment 1552 2722 rdi|DWORD = SHL rdi|DWORD y: 2 size: DWORD  <||@
  Comment 1555 2724 rdi|QWORD = MOVSXD rdi|DWORD size: QWORD  <||@
  Comment 1558 2726 rsi|QWORD[.] = LEA [r11|QWORD[.] + 16] size: QWORD  <||@
  Comment 1562 2728 rsi|QWORD[.] = ADD (x: rsi|QWORD[.], y: rdi|QWORD) size: QWORD  <||@
  Comment 1565 2730 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1569 2732 rdi|QWORD[.] = LEA [r11|QWORD[.] + 16] size: QWORD  <||@
  Comment 1573 2734 rdi|QWORD[*] = SHR rdi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1577 2736 rsi|QWORD[*] = SUB (x: rsi|QWORD[*], ~y: rdi|QWORD[*]) size: QWORD  <||@
  Comment 1580 2738 rsi|QWORD[*] = INC rsi|QWORD[*] size: QWORD  <||@
  Comment 1583 2740 JUMP ~[] destination: B300 -> B301  <||@
  Comment 1588 block B318 loop 16 depth 1 header:2255|LoopBegin  <||@
  Comment 1588 2922 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1600 2924 rsi|QWORD[*] = DEC rsi|QWORD[*] size: QWORD  <||@
  Comment 1603 2926 rdx|QWORD[*] = ADD (x: rdi|QWORD[*], y: r13|QWORD) size: QWORD  <||@
  Comment 1609 2928 rdx|QWORD[*] = ADD (x: rdx|QWORD[*], y: rsi|QWORD[*]) size: QWORD  <||@
  Comment 1612 2930 MOVB (x: [rdx|QWORD[*]], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1615 2932 JUMP ~[] destination: B318 -> B301  <||@
  Comment 1615 block B301 loop 16 depth 1 header:2255|LoopBegin  <||@
  Comment 1615 2742 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1615 2744 CMP rsi|QWORD[*] y: 1 size: QWORD  <||@
  Comment 1619 2746 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B301 -> B303 falseDestination: B301 -> B318  <||@
  Comment 1627 block B240 null  <||@
  Comment 1627 2136 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1627 2138 CMP rdi|DWORD y: 11 size: DWORD  <||@
  Comment 1630 2140 BRANCH trueDestinationProbability: 0.7356387781002678 condition: < trueDestination: B240 -> B241 falseDestination: B240 -> B244  <||@
  Comment 1636 block B241 null  <||@
  Comment 1636 2142 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1636 2144 rdi|DWORD = MOVE input: int[10|0xa]  <||@
  Comment 1641 2146 JUMP ~[] destination: B241 -> B244  <||@
  Comment 1646 block B199 null  <||@
  Comment 1646 1764 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1646 1766 CMP rcx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Collections$CopiesList;, resolved>;compressed}  <||@
  Comment 1646 {meta{HotSpotType<Ljava/util/Collections$CopiesList;, resolved>;compressed}}  <||@
  Comment 1652 1768 BRANCH trueDestinationProbability: 0.9487693188322834 condition: = trueDestination: B199 -> B200 falseDestination: B199 -> B238  <||@
  Comment 1658 block B200 null  <||@
  Comment 1658 1770 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1658 1772 r14|DWORD = MOV [rdx|QWORD[.] + 16] size: DWORD  <||@
  Comment 1662 1774 r10|QWORD = MOVSXD r14|DWORD size: QWORD  <||@
  Comment 1665 1776 r11|QWORD = DEC r10|QWORD size: QWORD  <||@
  Comment 1671 1778 CMP r14|DWORD y: 1 size: DWORD  <||@
  Comment 1675 1780 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B200 -> B204 falseDestination: B200 -> B202  <||@
  Comment 1681 block B202 null  <||@
  Comment 1681 1786 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1681 1788 CMP (x: r10|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 1684 1790 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B202 -> B204 falseDestination: B202 -> B236  <||@
  Comment 1690 block B204 null  <||@
  Comment 1690 1796 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1690 1798 r8|DWORD[.] = MOV [rdx|QWORD[.] + 20] size: DWORD  <||@
  Comment 1694 1800 NULLCHECK [r12|QWORD[*] + r8|DWORD[.] * 8] state [bci:0]  <||@
  Comment 1694 [rdx:0, rsi:0, r8:0, stack:80, stack:88]at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-   <||@
  Comment 1694 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1698 1802 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 1701 1804 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B204 -> B205 falseDestination: B204 -> B206  <||@
  Comment 1707 block B206 null  <||@
  Comment 1707 1814 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1707 1816 rcx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 1711 1818 r9|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 1715 1820 CMP r14|DWORD y: 16777215 size: DWORD  <||@
  Comment 1722 1822 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B206 -> B207 falseDestination: B206 -> B211  <||@
  Comment 1728 block B207 null  <||@
  Comment 1728 1824 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1728 1826 rbx|DWORD = SHL r14|DWORD y: 2 size: DWORD  <||@
  Comment 1734 1828 rbx|DWORD = LEA [rbx|DWORD + 23] size: DWORD  <||@
  Comment 1737 1830 rbx|DWORD = AND rbx|DWORD y: -8 size: DWORD  <||@
  Comment 1740 1832 rbx|QWORD = MOVSXD rbx|DWORD size: QWORD  <||@
  Comment 1743 1834 rdi|QWORD = ADD (x: rbx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 1749 1836 CMP (x: rdi|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 1752 1838 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B207 -> B211 falseDestination: B207 -> B209  <||@
  Comment 1758 block B209 null  <||@
  Comment 1758 1848 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1758 1850 MOV (x: [r15|QWORD + 96], y: rdi|QWORD) size: QWORD  <||@
  Comment 1762 1852 AMD64PREFETCH ~[rbx|QWORD + rcx|QWORD * 1 + 192] instr: 0  <||@
  Comment 1770 1854 AMD64PREFETCH ~[rbx|QWORD + rcx|QWORD * 1 + 256] instr: 0  <||@
  Comment 1778 1856 AMD64PREFETCH ~[rbx|QWORD + rcx|QWORD * 1 + 320] instr: 0  <||@
  Comment 1786 1858 AMD64PREFETCH ~[rbx|QWORD + rcx|QWORD * 1 + 384] instr: 0  <||@
  Comment 1794 1860 MOV (x: [rcx|QWORD + 12], y: r14|DWORD) size: DWORD  <||@
  Comment 1798 1862 MOV [rcx|QWORD] y: 1 size: QWORD  <||@
  Comment 1805 1864 MOV [rcx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}  <||@
  Comment 1805 {meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}}  <||@
  Comment 1812 1866 rcx|QWORD[.] = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 1812 1868 rax|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1815 1870 stack:96|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 1820 1872 stack:80|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 1825 1874 r13|DWORD[.] = MOVE r8|DWORD[.] moveKind: DWORD  <||@
  Comment 1828 1876 JUMP ~[] destination: B209 -> B212  <||@
  Comment 1828 block B212 null  <||@
  Comment 1828 1900 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1828 1902 CMP r14|DWORD y: 1 size: DWORD  <||@
  Comment 1832 1904 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B212 -> B228 falseDestination: B212 -> B214  <||@
  Comment 1838 block B214 null  <||@
  Comment 1838 1910 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1838 1912 r10|QWORD = MOVE stack:80|QWORD moveKind: QWORD  <||@
  Comment 1843 1914 rdi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 1847 1916 xmm0|V128_DWORD[.   ] = H r13|DWORD[.]  <||@
  Comment 1852 1918 xmm0|V256_DWORD[........] = VPBROADCASTD xmm0|V128_DWORD[.   ] nZ: YMM  <||@
  Comment 1857 1920 rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD  <||@
  Comment 1861 1922 TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1864 1928 rdx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1871 1924 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B214 -> B219 falseDestination: B214 -> B217  <||@
  Comment 1877 block B219 null  <||@
  Comment 1877 1952 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1877 1954 rsi|QWORD = LEA [r10|QWORD - 4] size: QWORD  <||@
  Comment 1881 1956 CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1884 1958 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B219 -> B222 falseDestination: B219 -> B221  <||@
  Comment 1890 block B221 null  <||@
  Comment 1890 1964 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1890 1966 xmm1|V128_DWORD[....] = VMOVE xmm0|V256_DWORD[........]  <||@
  Comment 1894 1968 J (address: [rdi|QWORD[.] + rdx|QWORD * 4], input: xmm1|V128_DWORD[....]) nZ: XMM oh: VMOVDQU  <||@
  Comment 1899 1970 rsi|QWORD = LEA [rdx|QWORD + 4] size: QWORD  <||@
  Comment 1903 1972 rdx|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1906 1974 JUMP ~[] destination: B221 -> B222  <||@
  Comment 1906 block B222 null  <||@
  Comment 1906 1976 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1906 1978 rsi|QWORD = LEA [r10|QWORD - 2] size: QWORD  <||@
  Comment 1910 1980 CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1913 1982 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B222 -> B225 falseDestination: B222 -> B224  <||@
  Comment 1919 block B224 null  <||@
  Comment 1919 1988 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1919 1990 xmm0|V64_DWORD[..] = VMOVE xmm0|V256_DWORD[........]  <||@
  Comment 1919 1992 J (address: [rdi|QWORD[.] + rdx|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ  <||@
  Comment 1925 1994 rsi|QWORD = LEA [rdx|QWORD + 2] size: QWORD  <||@
  Comment 1929 1996 rdx|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1932 1998 JUMP ~[] destination: B224 -> B225  <||@
  Comment 1932 block B225 null  <||@
  Comment 1932 2000 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1932 2002 CMP (x: rdx|QWORD, y: stack:96|QWORD) size: QWORD  <||@
  Comment 1937 2004 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B225 -> B228 falseDestination: B225 -> B227  <||@
  Comment 1943 block B227 null  <||@
  Comment 1943 2010 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1943 2012 MOV (x: [rdi|QWORD[.] + rdx|QWORD * 4], y: r13|DWORD[.]) size: DWORD  <||@
  Comment 1947 2014 JUMP ~[] destination: B227 -> B228  <||@
  Comment 1947 block B228 null  <||@
  Comment 1947 2016 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1947 2018 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 1950 2020 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B228 -> B229 falseDestination: B228 -> B230  <||@
  Comment 1956 block B230 null  <||@
  Comment 1956 2028 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1956 2030 rdi|DWORD = DEC r14|DWORD size: DWORD  <||@
  Comment 1961 2032 rdi|DWORD = SHL rdi|DWORD y: 2 size: DWORD  <||@
  Comment 1964 2034 rdi|QWORD = MOVSXD rdi|DWORD size: QWORD  <||@
  Comment 1967 2036 rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 1971 2038 rsi|QWORD[.] = ADD (x: rsi|QWORD[.], y: rdi|QWORD) size: QWORD  <||@
  Comment 1974 2040 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1978 2042 rdi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 1982 2044 rdi|QWORD[*] = SHR rdi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1986 2046 rsi|QWORD[*] = SUB (x: rsi|QWORD[*], ~y: rdi|QWORD[*]) size: QWORD  <||@
  Comment 1989 2048 rsi|QWORD[*] = INC rsi|QWORD[*] size: QWORD  <||@
  Comment 1992 2050 r13|QWORD = MOVE stack:56|QWORD moveKind: QWORD  <||@
  Comment 1997 2052 JUMP ~[] destination: B230 -> B231  <||@
  Comment 2002 block B234 loop 13 depth 1 header:2104|LoopBegin  <||@
  Comment 2002 2070 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 2016 2072 rsi|QWORD[*] = DEC rsi|QWORD[*] size: QWORD  <||@
  Comment 2019 2074 rdx|QWORD[*] = ADD (x: rdi|QWORD[*], y: r13|QWORD) size: QWORD  <||@
  Comment 2025 2076 rdx|QWORD[*] = ADD (x: rdx|QWORD[*], y: rsi|QWORD[*]) size: QWORD  <||@
  Comment 2028 2078 MOVB (x: [rdx|QWORD[*]], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 2031 2080 JUMP ~[] destination: B234 -> B231  <||@
  Comment 2031 block B231 loop 13 depth 1 header:2104|LoopBegin  <||@
  Comment 2031 2054 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2031 2056 CMP rsi|QWORD[*] y: 1 size: QWORD  <||@
  Comment 2035 2058 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B231 -> B233 falseDestination: B231 -> B234  <||@
  Comment 2043 block B303 null  <||@
  Comment 2043 2754 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2043 2714 r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 2048 2756 rdi|DWORD[.] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@eef3a58 encoding: base: 0 shift: 3  <||@
  Comment 2055 2758 MOV (x: [r8|QWORD[.] + 20], y: rdi|DWORD[.]) size: DWORD  <||@
  Comment 2059 2760 rsi|QWORD[*] = SHR r8|QWORD[.] y: 9 size: QWORD  <||@
  Comment 2066 2762 MOVB (x: [rsi|QWORD[*] + r13|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 2070 2764 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 2073 2766 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B303 -> B309 falseDestination: B303 -> B305  <||@
  Comment 2079 block B305 null  <||@
  Comment 2079 2772 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2079 2774 CMP (x: rcx|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 2082 2776 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B305 -> B309 falseDestination: B305 -> B307  <||@
  Comment 2088 block B307 null  <||@
  Comment 2088 2782 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2088 2784 r14|DWORD = SUB (x: r14|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 2091 2786 CMP (x: r10|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 2094 2788 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B307 -> B309 falseDestination: B307 -> B310  <||@
  Comment 2100 block B310 null  <||@
  Comment 2100 2802 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2100 2804 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 2102 2806 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B310 -> B311 falseDestination: B310 -> B312  <||@
  Comment 2108 block B312 null  <||@
  Comment 2108 2816 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2108 2818 rax|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2113 2820 rdi|DWORD = MOV [rax|QWORD[.] + 8] size: DWORD  <||@
  Comment 2116 2822 r9|DWORD = MOV [r11|QWORD[.] + 8] size: DWORD  <||@
  Comment 2120 2824 rbx|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 2123 2826 rdx|QWORD = MOV rcx|DWORD size: DWORD  <||@
  Comment 2125 2828 CMP (x: r9|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 2128 2830 BRANCH trueDestinationProbability: 0.6 condition: = trueDestination: B312 -> B313 falseDestination: B312 -> B314  <||@
  Comment 2134 block B313 null  <||@
  Comment 2134 2832 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2134 2834 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2134 2836 r11|QWORD[*] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 2134 2838 rdi|QWORD = LEA [rax|QWORD[*] + 16] size: QWORD  <||@
  Comment 2138 2840 rsi|QWORD = LEA [r11|QWORD[*] + rbx|QWORD * 4 + 16] size: QWORD  <||@
  Comment 2143 2842 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: ObjectArraycopyKillAny(Word,Word,Word)void@0x106813120:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 2143 {Field[name=StubRoutines::_oop_arraycopy, type=address, offset=0, address=0x105a7dc90, value=0x106813120]:0x106813120}  <||@
  Comment 2149 2844 r14|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 2154 2846 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2159 2848 JUMP ~[] destination: B313 -> B317  <||@
  Comment 2159 block B317 null  <||@
  Comment 2159 2910 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2159 2912 rax|DWORD = ADD (x: r14|DWORD, ~y: [rsi|QWORD[.] + 16]) size: DWORD  <||@
  Comment 2165 2914 MOV (x: [rsi|QWORD[.] + 16], y: rax|DWORD) size: DWORD  <||@
  Comment 2168 2916 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 2171 2918 rax|DWORD = SETCC condition: !=  <||@
  Comment 2177 2920 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 2186 12  <||@
  Comment 2196 block B266 null  <||@
  Comment 2196 2460 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2196 2462 rcx|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 2200 2464 r8|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2205 2466 JUMP ~[] destination: B266 -> B281  <||@
  Comment 2210 block B282 null  <||@
  Comment 2210 2592 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2210 2594 rdx|QWORD[.] = LEA [r11|QWORD[.] + rdi|QWORD * 4 + 16] size: QWORD  <||@
  Comment 2215 2596 rsi|QWORD = SUB (x: rsi|QWORD, ~y: rdi|QWORD) size: QWORD  <||@
  Comment 2218 2598 rdi|QWORD = LEA [rsi|QWORD - 8] size: QWORD  <||@
  Comment 2222 2600 TEST (x: rdi|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 2225 2602 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B282 -> B283 falseDestination: B282 -> B284  <||@
  Comment 2231 block B283 null  <||@
  Comment 2231 2604 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2231 2606 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2238 2608 JUMP ~[] destination: B283 -> B287  <||@
  Comment 2238 block B287 null  <||@
  Comment 2238 2632 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2238 2634 rdi|QWORD = LEA [rsi|QWORD - 4] size: QWORD  <||@
  Comment 2242 2636 CMP (x: r10|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 2245 2638 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B287 -> B290 falseDestination: B287 -> B289  <||@
  Comment 2251 block B289 null  <||@
  Comment 2251 2644 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2251 2646 xmm0|V128_DWORD[....] = L oc: SIMD<null,null,null,null>  <||@
  Comment 2255 2648 J (address: [rdx|QWORD[.] + r10|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU  <||@
  Comment 2261 2650 rdi|QWORD = LEA [r10|QWORD + 4] size: QWORD  <||@
  Comment 2265 2652 r10|QWORD = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 2268 2654 JUMP ~[] destination: B289 -> B290  <||@
  Comment 2268 block B290 null  <||@
  Comment 2268 2656 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2268 2658 rdi|QWORD = LEA [rsi|QWORD - 2] size: QWORD  <||@
  Comment 2272 2660 CMP (x: r10|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 2275 2662 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B290 -> B293 falseDestination: B290 -> B292  <||@
  Comment 2281 block B292 null  <||@
  Comment 2281 2668 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2281 2670 xmm0|V64_DWORD[..] = L oc: SIMD<null,null>  <||@
  Comment 2285 2672 J (address: [rdx|QWORD[.] + r10|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ  <||@
  Comment 2291 2674 rdi|QWORD = LEA [r10|QWORD + 2] size: QWORD  <||@
  Comment 2295 2676 r10|QWORD = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 2298 2678 JUMP ~[] destination: B292 -> B293  <||@
  Comment 2298 block B293 null  <||@
  Comment 2298 2680 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2298 2682 rsi|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 2301 2684 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 2304 2686 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B293 -> B298 falseDestination: B293 -> B295  <||@
  Comment 2310 block B295 null  <||@
  Comment 2310 2692 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2310 2694 MOV (x: [rdx|QWORD[.] + r10|QWORD * 4], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 2314 2696 JUMP ~[] destination: B295 -> B298  <||@
  Comment 2319 block B25 null  <||@
  Comment 2319 262 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2319 264 xmm0|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null>  <||@
  Comment 2323 266 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2330 268 JUMP ~[] destination: B25 -> B26  <||@
  Comment 2330 block B26 loop 1 depth 1 header:2755|LoopBegin  <||@
  Comment 2330 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 2336 272 J (address: [r8|QWORD[.] + r9|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU  <||@
  Comment 2342 274 r9|QWORD = LEA [r9|QWORD + 8] size: QWORD  <||@
  Comment 2346 276 CMP (x: r9|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 2349 278 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B26 -> B28 falseDestination: B26 -> B26  <||@
  Comment 2356 block B11 loop 0 depth 1 header:2701|LoopBegin  <||@
  Comment 2356 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 2368 154 xmm0|V256_DWORD[........] = H [r9|QWORD[*] + rbx|QWORD * 4] nZ: YMM oh: VMOVDQU  <||@
  Comment 2374 156 J (address: [r8|QWORD[.] + rbx|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU  <||@
  Comment 2380 158 rbx|QWORD = LEA [rbx|QWORD + 8] size: QWORD  <||@
  Comment 2384 160 CMP (x: rbx|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 2387 162 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B11 -> B13 falseDestination: B11 -> B11  <||@
  Comment 2394 block B314 null  <||@
  Comment 2394 2850 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2394 2852 r8|QWORD = MOV [r9|DWORD * 8 + 232] size: QWORD  <||@
  Comment 2402 2854 rdi|DWORD = MOV [r8|QWORD + 12] size: DWORD  <||@
  Comment 2406 2856 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2409 2858 rcx|QWORD[*] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 2412 2860 r9|QWORD = MOVSXD rdi|DWORD size: QWORD  <||@
  Comment 2415 2862 rdi|QWORD = LEA [rsi|QWORD[*] + 16] size: QWORD  <||@
  Comment 2419 2864 rsi|QWORD = LEA [rcx|QWORD[*] + rbx|QWORD * 4 + 16] size: QWORD  <||@
  Comment 2424 2866 rcx|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 2427 2868 stack:56|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 2432 2870 rax|DWORD = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: ObjectCheckcast(Word,Word,Word,Word,Word)int@0x1068133a0:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 2432 {Field[name=StubRoutines::_checkcast_arraycopy, type=address, offset=0, address=0x105aa7b78, value=0x1068133a0]:0x1068133a0}  <||@
  Comment 2438 2872 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 2440 2874 BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B314 -> B315 falseDestination: B314 -> B316  <||@
  Comment 2446 block B315 null  <||@
  Comment 2446 2876 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2446 2878 r14|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 2451 2880 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2456 2882 JUMP ~[] destination: B315 -> B317  <||@
  Comment 2461 block B80 null  <||@
  Comment 2461 720 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2461 686 rdi|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD  <||@
  Comment 2465 722 rdx|DWORD = MOV [rdi|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 2472 724 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<AbstractList.listIterator(int)>}  <||@
  Comment 2472 {meta{HotSpotMethod<AbstractList.listIterator(int)>}}  <||@
  Comment 2482 726 CMP (x: rsi|QWORD, y: [rdx|DWORD * 8 + 696]) size: QWORD  <||@
  Comment 2490 728 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B195  <||@
  Comment 2496 block B81 null  <||@
  Comment 2496 730 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2496 732 CMP rdx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}  <||@
  Comment 2496 {meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}}  <||@
  Comment 2502 738 rsi|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 2506 734 BRANCH trueDestinationProbability: 0.5468793050355748 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B85  <||@
  Comment 2512 block B82 null  <||@
  Comment 2512 736 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2512 740 rbp|DWORD[.] = MOV [rdi|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 2519 742 CMP (x: rsi|DWORD, y: [rbp|DWORD[.] * 8 + 12]) size: DWORD state [bci:0]  <||@
  Comment 2519 [rax:0, rdi:0, stack:68, stack:80, stack:88]at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |-  |-   <||@
  Comment 2519 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2526 744 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B82 -> B83 falseDestination: B82 -> B93  <||@
  Comment 2532 block B93 null  <||@
  Comment 2532 820 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2532 822 rbp|QWORD = MOVSXD rsi|DWORD size: QWORD  <||@
  Comment 2535 824 CMP rdx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}  <||@
  Comment 2535 {meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}}  <||@
  Comment 2541 826 BRANCH trueDestinationProbability: 0.9304948647614187 condition: = trueDestination: B93 -> B94 falseDestination: B93 -> B135  <||@
  Comment 2547 block B94 null  <||@
  Comment 2547 828 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2547 830 rdx|DWORD[.] = MOV [rdi|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 2554 832 TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 2556 834 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B94 -> B95 falseDestination: B94 -> B96  <||@
  Comment 2562 block B96 null  <||@
  Comment 2562 850 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2562 852 CMP r14|DWORD y: 1 size: DWORD  <||@
  Comment 2566 858 stack:80|QWORD = MOVE rbx|QWORD moveKind: QWORD  <||@
  Comment 2571 854 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B96 -> B101 falseDestination: B96 -> B98  <||@
  Comment 2577 block B98 null  <||@
  Comment 2577 862 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2577 866 rdi|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 2584 868 r13|QWORD = ADD (x: rbp|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 2590 870 rbx|QWORD = MOV rdi|DWORD size: DWORD  <||@
  Comment 2592 872 CMP (x: rbx|QWORD, y: r13|QWORD) size: QWORD  <||@
  Comment 2595 874 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B98 -> B99 falseDestination: B98 -> B134  <||@
  Comment 2601 block B99 null  <||@
  Comment 2601 876 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2601 878 CMP (x: rdi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 2603 880 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B99 -> B101 falseDestination: B99 -> B133  <||@
  Comment 2609 block B101 null  <||@
  Comment 2609 886 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2609 888 CMP r14|DWORD y: 1 size: DWORD  <||@
  Comment 2613 890 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B101 -> B105 falseDestination: B101 -> B103  <||@
  Comment 2619 block B103 null  <||@
  Comment 2619 896 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2619 898 CMP (x: r10|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 2622 900 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B103 -> B105 falseDestination: B103 -> B132  <||@
  Comment 2628 block B105 null  <||@
  Comment 2628 906 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2628 908 CMP r14|DWORD y: 1 size: DWORD  <||@
  Comment 2632 910 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B105 -> B121 falseDestination: B105 -> B107  <||@
  Comment 2638 block B107 null  <||@
  Comment 2638 916 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2638 918 r10|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 2642 920 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@eef3a58 encoding: base: 0 shift: 3  <||@
  Comment 2646 922 rdx|QWORD[.] = LEA [rdx|QWORD[.] + rbp|QWORD * 4 + 16] size: QWORD  <||@
  Comment 2651 924 TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 2654 930 rbx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2661 926 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B107 -> B112 falseDestination: B107 -> B110  <||@
  Comment 2667 block B112 null  <||@
  Comment 2667 956 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2667 958 CMP (x: rbx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 2670 960 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B112 -> B115 falseDestination: B112 -> B114  <||@
  Comment 2676 block B114 null  <||@
  Comment 2676 966 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2676 968 xmm0|V128_DWORD[....] = H [rdx|QWORD[.] + rbx|QWORD * 4] nZ: XMM oh: VMOVDQU  <||@
  Comment 2681 970 J (address: [r10|QWORD[.] + rbx|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU  <||@
  Comment 2687 972 rcx|QWORD = LEA [rbx|QWORD + 4] size: QWORD  <||@
  Comment 2691 974 rbx|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 2694 976 JUMP ~[] destination: B114 -> B115  <||@
  Comment 2694 block B115 null  <||@
  Comment 2694 978 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2694 980 CMP (x: rbx|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 2697 982 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B115 -> B118 falseDestination: B115 -> B117  <||@
  Comment 2703 block B117 null  <||@
  Comment 2703 988 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2703 990 xmm0|V64_DWORD[..] = H [rdx|QWORD[.] + rbx|QWORD * 4] nZ: XMM oh: VMOVQ  <||@
  Comment 2709 992 J (address: [r10|QWORD[.] + rbx|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ  <||@
  Comment 2715 994 rcx|QWORD = LEA [rbx|QWORD + 2] size: QWORD  <||@
  Comment 2719 996 rbx|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 2722 998 JUMP ~[] destination: B117 -> B118  <||@
  Comment 2722 block B118 null  <||@
  Comment 2722 1000 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2722 1002 CMP (x: rbx|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 2725 1004 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B118 -> B121 falseDestination: B118 -> B120  <||@
  Comment 2731 block B120 null  <||@
  Comment 2731 1010 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2731 1012 rdx|DWORD[.] = MOV [rdx|QWORD[.] + rbx|QWORD * 4] size: DWORD  <||@
  Comment 2734 1014 MOV (x: [r10|QWORD[.] + rbx|QWORD * 4], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 2738 1016 JUMP ~[] destination: B120 -> B121  <||@
  Comment 2738 block B121 null  <||@
  Comment 2738 1018 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2738 1020 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 2741 1022 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B121 -> B122 falseDestination: B121 -> B123  <||@
  Comment 2747 block B123 null  <||@
  Comment 2747 1030 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2747 1032 rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 2751 1034 rdx|QWORD[.] = ADD (x: rdx|QWORD[.], y: stack:80|QWORD) size: QWORD  <||@
  Comment 2756 1036 rdx|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD  <||@
  Comment 2760 1038 rcx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 2764 1040 rcx|QWORD[*] = SHR rcx|QWORD[.] y: 9 size: QWORD  <||@
  Comment 2768 1042 rdx|QWORD[*] = SUB (x: rdx|QWORD[*], ~y: rcx|QWORD[*]) size: QWORD  <||@
  Comment 2771 1044 rdx|QWORD[*] = INC rdx|QWORD[*] size: QWORD  <||@
  Comment 2774 1046 r13|QWORD = MOVE stack:56|QWORD moveKind: QWORD  <||@
  Comment 2779 1048 JUMP ~[] destination: B123 -> B124  <||@
  Comment 2784 block B130 loop 6 depth 1 header:1983|LoopBegin  <||@
  Comment 2784 1100 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 2784 1102 rdx|QWORD[*] = DEC rdx|QWORD[*] size: QWORD  <||@
  Comment 2787 1104 r10|QWORD[*] = ADD (x: rcx|QWORD[*], y: r13|QWORD) size: QWORD  <||@
  Comment 2793 1106 r10|QWORD[*] = ADD (x: r10|QWORD[*], y: rdx|QWORD[*]) size: QWORD  <||@
  Comment 2796 1108 MOVB (x: [r10|QWORD[*]], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 2799 1110 JUMP ~[] destination: B130 -> B124  <||@
  Comment 2799 block B124 loop 6 depth 1 header:1983|LoopBegin  <||@
  Comment 2799 1050 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2799 1052 CMP rdx|QWORD[*] y: 1 size: QWORD  <||@
  Comment 2803 1054 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B124 -> B126 falseDestination: B124 -> B130  <||@
  Comment 2811 block B122 null  <||@
  Comment 2811 1024 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2811 1026 r13|QWORD = MOVE stack:56|QWORD moveKind: QWORD  <||@
  Comment 2816 1028 JUMP ~[] destination: B122 -> B126  <||@
  Comment 2816 block B126 null  <||@
  Comment 2816 1060 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2816 1062 rcx|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 2821 1064 rdx|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 2823 1066 rsi|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2828 1068 JUMP ~[] destination: B126 -> B127  <||@
  Comment 2833 block B128 loop 7 depth 1 header:215|LoopBegin  <||@
  Comment 2833 1076 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 2848 1078 rcx|DWORD = INC rdx|DWORD size: DWORD  <||@
  Comment 2852 1080 rsi|DWORD = INC rsi|DWORD size: DWORD  <||@
  Comment 2854 1082 stack:84|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 2858 1084 rcx|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 2860 1086 rdx|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 2864 1088 JUMP ~[] destination: B128 -> B127  <||@
  Comment 2864 block B127 loop 7 depth 1 header:215|LoopBegin  <||@
  Comment 2864 1070 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 2864 1072 CMP (x: r14|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 2867 1074 BRANCH trueDestinationProbability: 0.7836641850436589 condition: > trueDestination: B127 -> B128 falseDestination: B127 -> B129  <||@
  Comment 2869 block B129 null  <||@
  Comment 2869 1090 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2869 1092 r11|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 2872 1094 r10|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 2875 1096 rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2880 1098 JUMP ~[] destination: B129 -> B190  <||@
  Comment 2880 block B190 null  <||@
  Comment 2880 1670 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 2880 1672 rsi|DWORD = MOV [rdx|QWORD[.] + 16] size: DWORD  <||@
  Comment 2883 1674 rcx|DWORD = SUB (x: r10|DWORD, ~y: rsi|DWORD) size: DWORD  <||@
  Comment 2888 1676 CMP (x: rcx|DWORD, y: [rdx|QWORD[.] + 20]) size: DWORD  <||@
  Comment 2891 1678 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B190 -> B191 falseDestination: B190 -> B192  <||@
  Comment 2897 block B192 null  <||@
  Comment 2897 1696 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2897 1698 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2902 1700 JUMP ~[] destination: B192 -> B239  <||@
  Comment 2907 block B233 null  <||@
  Comment 2907 2064 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2907 2066 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2912 2068 JUMP ~[] destination: B233 -> B239  <||@
  Comment 2917 block B229 null  <||@
  Comment 2917 2022 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2917 2024 r13|QWORD = MOVE stack:56|QWORD moveKind: QWORD  <||@
  Comment 2922 2026 JUMP ~[] destination: B229 -> B233  <||@
  Comment 2924 block B85 null  <||@
  Comment 2924 762 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2924 766 CMP rdx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Collections$EmptyList;, resolved>;compressed}  <||@
  Comment 2924 {meta{HotSpotType<Ljava/util/Collections$EmptyList;, resolved>;compressed}}  <||@
  Comment 2930 768 BRANCH trueDestinationProbability: 0.5024679876958296 condition: = trueDestination: B85 -> B86 falseDestination: B85 -> B89  <||@
  Comment 2936 block B86 null  <||@
  Comment 2936 770 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2936 772 CMP rsi|DWORD y: 1 size: DWORD  <||@
  Comment 2939 774 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B86 -> B93 falseDestination: B86 -> B88  <||@
  Comment 2950 block B89 null  <||@
  Comment 2950 792 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2950 794 CMP rdx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}  <||@
  Comment 2950 {meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}}  <||@
  Comment 2956 796 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B89 -> B90 falseDestination: B89 -> B194  <||@
  Comment 2962 block B90 null  <||@
  Comment 2962 798 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2962 800 CMP (x: rsi|DWORD, y: [rdi|DWORD[.] * 8 + 16]) size: DWORD  <||@
  Comment 2969 802 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B90 -> B91 falseDestination: B90 -> B93  <||@
  Comment 2980 block B284 null  <||@
  Comment 2980 2610 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2980 2612 xmm0|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null>  <||@
  Comment 2984 2614 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2991 2616 JUMP ~[] destination: B284 -> B285  <||@
  Comment 2991 block B285 loop 15 depth 1 header:2647|LoopBegin  <||@
  Comment 2991 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 2992 2620 J (address: [rdx|QWORD[.] + r10|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU  <||@
  Comment 2998 2622 r10|QWORD = LEA [r10|QWORD + 8] size: QWORD  <||@
  Comment 3002 2624 CMP (x: r10|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 3005 2626 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B285 -> B287 falseDestination: B285 -> B285  <||@
  Comment 3012 block B270 loop 14 depth 1 header:2593|LoopBegin  <||@
  Comment 3012 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 3024 2502 xmm0|V256_DWORD[........] = H [rdx|QWORD[*] + rbx|QWORD * 4] nZ: YMM oh: VMOVDQU  <||@
  Comment 3029 2504 J (address: [rsi|QWORD[.] + rbx|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU  <||@
  Comment 3034 2506 rbx|QWORD = LEA [rbx|QWORD + 8] size: QWORD  <||@
  Comment 3038 2508 CMP (x: rbx|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 3041 2510 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B270 -> B272 falseDestination: B270 -> B270  <||@
  Comment 3048 block B311 null  <||@
  Comment 3048 2808 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3048 2810 r14|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 3051 2812 rsi|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 3054 2814 JUMP ~[] destination: B311 -> B317  <||@
  Comment 3059 block B63 null  <||@
  Comment 3059 594 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3059 596 xmm0|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null>  <||@
  Comment 3063 598 rdx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 3070 600 JUMP ~[] destination: B63 -> B64  <||@
  Comment 3070 block B64 loop 3 depth 1 header:2485|LoopBegin  <||@
  Comment 3070 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 3072 604 J (address: [rsi|QWORD[.] + rdx|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU  <||@
  Comment 3077 606 rdx|QWORD = LEA [rdx|QWORD + 8] size: QWORD  <||@
  Comment 3081 608 CMP (x: rdx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 3084 610 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B64 -> B66 falseDestination: B64 -> B64  <||@
  Comment 3091 block B110 loop 5 depth 1 header:2362|LoopBegin  <||@
  Comment 3091 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 3104 942 xmm0|V256_DWORD[........] = H [rdx|QWORD[.] + rbx|QWORD * 4] nZ: YMM oh: VMOVDQU  <||@
  Comment 3109 944 J (address: [r10|QWORD[.] + rbx|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU  <||@
  Comment 3115 946 rbx|QWORD = LEA [rbx|QWORD + 8] size: QWORD  <||@
  Comment 3119 948 CMP (x: rbx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 3122 950 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B110 -> B112 falseDestination: B110 -> B110  <||@
  Comment 3129 block B217 loop 12 depth 1 header:2539|LoopBegin  <||@
  Comment 3129 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 3136 1940 J (address: [rdi|QWORD[.] + rdx|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU  <||@
  Comment 3141 1942 rdx|QWORD = LEA [rdx|QWORD + 8] size: QWORD  <||@
  Comment 3145 1944 CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 3148 1946 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B217 -> B219 falseDestination: B217 -> B217  <||@
  Comment 3155 block B58 null  <||@
  Comment 3155 544 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3155 540 stack:68|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 3160 546 rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>}  <||@
  Comment 3160 {meta{HotSpotType<[Ljava/lang/Object;, resolved>}}  <||@
  Comment 3170 548 rsi|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 3173 550 rdx|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 3176 552 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 3181 554 r14|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 3184 556 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 3184 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 3189 [stack:68, stack:80, stack:88]at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |-  |-   <||@
  Comment 3190 558 JUMP ~[] destination: B58 -> B59  <||@
  Comment 3195 block B211 null  <||@
  Comment 3195 1886 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3195 1880 stack:96|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 3200 1882 stack:80|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 3205 1888 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>}  <||@
  Comment 3205 {meta{HotSpotType<[Ljava/lang/Object;, resolved>}}  <||@
  Comment 3215 1890 rdx|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 3218 1892 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 3223 1894 r13|DWORD[.] = MOVE r8|DWORD[.] moveKind: DWORD  <||@
  Comment 3226 1896 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 3226 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 3231 [r13:0, stack:80, stack:88]at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |-  |-   <||@
  Comment 3232 1898 JUMP ~[] destination: B211 -> B212  <||@
  Comment 3237 block B135 null  <||@
  Comment 3237 1158 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3237 1160 stack:80|QWORD = MOVE rbx|QWORD moveKind: QWORD  <||@
  Comment 3242 1162 CMP rdx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}  <||@
  Comment 3242 {meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}}  <||@
  Comment 3248 1164 BRANCH trueDestinationProbability: 0.9931451844203518 condition: = trueDestination: B135 -> B136 falseDestination: B135 -> B177  <||@
  Comment 3254 block B136 null  <||@
  Comment 3254 1166 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3254 1168 rdi|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD  <||@
  Comment 3258 1170 rdx|DWORD[.] = MOV [rdi|DWORD[.] * 8 + 28] size: DWORD  <||@
  Comment 3265 1172 TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 3267 1174 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B136 -> B137 falseDestination: B136 -> B138  <||@
  Comment 3273 block B138 null  <||@
  Comment 3273 1190 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3273 1192 CMP r14|DWORD y: 1 size: DWORD  <||@
  Comment 3277 1198 stack:96|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 3282 1200 stack:104|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 3287 1194 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B138 -> B143 falseDestination: B138 -> B140  <||@
  Comment 3293 block B140 null  <||@
  Comment 3293 1204 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3293 1210 rdi|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 3300 1212 r8|QWORD = ADD (x: rbp|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 3306 1214 r9|QWORD = MOV rdi|DWORD size: DWORD  <||@
  Comment 3309 1216 CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 3312 1218 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B140 -> B141 falseDestination: B140 -> B176  <||@
  Comment 3318 block B141 null  <||@
  Comment 3318 1220 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3318 1222 CMP (x: rdi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 3320 1224 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B141 -> B143 falseDestination: B141 -> B175  <||@
  Comment 3326 block B143 null  <||@
  Comment 3326 1230 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3326 1232 CMP r14|DWORD y: 1 size: DWORD  <||@
  Comment 3330 1234 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B143 -> B147 falseDestination: B143 -> B145  <||@
  Comment 3336 block B145 null  <||@
  Comment 3336 1240 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3336 1242 CMP (x: r10|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 3339 1244 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B145 -> B147 falseDestination: B145 -> B174  <||@
  Comment 3345 block B147 null  <||@
  Comment 3345 1250 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3345 1252 CMP r14|DWORD y: 1 size: DWORD  <||@
  Comment 3349 1254 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B147 -> B163 falseDestination: B147 -> B149  <||@
  Comment 3355 block B149 null  <||@
  Comment 3355 1260 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3355 1262 r10|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 3359 1264 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@eef3a58 encoding: base: 0 shift: 3  <||@
  Comment 3363 1266 r8|QWORD[.] = LEA [rdx|QWORD[.] + rbp|QWORD * 4 + 16] size: QWORD  <||@
  Comment 3368 1268 TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 3371 1274 rdx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 3378 1270 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B149 -> B154 falseDestination: B149 -> B152  <||@
  Comment 3384 block B154 null  <||@
  Comment 3384 1304 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3384 1276 r9|QWORD = MOVE stack:96|QWORD moveKind: QWORD  <||@
  Comment 3389 1306 CMP (x: rdx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 3392 1308 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B154 -> B157 falseDestination: B154 -> B156  <||@
  Comment 3398 block B156 null  <||@
  Comment 3398 1318 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3398 1320 xmm0|V128_DWORD[....] = H [r8|QWORD[.] + rdx|QWORD * 4] nZ: XMM oh: VMOVDQU  <||@
  Comment 3404 1322 J (address: [r10|QWORD[.] + rdx|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU  <||@
  Comment 3410 1324 rdx|QWORD = LEA [rdx|QWORD + 4] size: QWORD  <||@
  Comment 3414 1330 JUMP ~[] destination: B156 -> B157  <||@
  Comment 3414 block B157 null  <||@
  Comment 3414 1332 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3414 1326 rcx|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 3417 1328 rdx|QWORD = MOVE stack:104|QWORD moveKind: QWORD  <||@
  Comment 3422 1334 CMP (x: rcx|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 3425 1336 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B157 -> B160 falseDestination: B157 -> B159  <||@
  Comment 3431 block B159 null  <||@
  Comment 3431 1342 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3431 1344 xmm0|V64_DWORD[..] = H [r8|QWORD[.] + rcx|QWORD * 4] nZ: XMM oh: VMOVQ  <||@
  Comment 3437 1346 J (address: [r10|QWORD[.] + rcx|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ  <||@
  Comment 3443 1348 rdx|QWORD = LEA [rcx|QWORD + 2] size: QWORD  <||@
  Comment 3447 1350 rcx|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 3450 1352 JUMP ~[] destination: B159 -> B160  <||@
  Comment 3450 block B160 null  <||@
  Comment 3450 1354 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3450 1356 CMP (x: rcx|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 3453 1358 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B160 -> B163 falseDestination: B160 -> B162  <||@
  Comment 3459 block B162 null  <||@
  Comment 3459 1364 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3459 1366 rdx|DWORD[.] = MOV [r8|QWORD[.] + rcx|QWORD * 4] size: DWORD  <||@
  Comment 3463 1368 MOV (x: [r10|QWORD[.] + rcx|QWORD * 4], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 3467 1370 JUMP ~[] destination: B162 -> B163  <||@
  Comment 3467 block B163 null  <||@
  Comment 3467 1372 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3467 1374 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 3470 1376 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B163 -> B164 falseDestination: B163 -> B165  <||@
  Comment 3476 block B165 null  <||@
  Comment 3476 1384 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3476 1388 rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 3480 1390 rdx|QWORD[.] = ADD (x: rdx|QWORD[.], y: rbx|QWORD) size: QWORD  <||@
  Comment 3483 1392 rdx|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD  <||@
  Comment 3487 1394 rcx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 3491 1396 rcx|QWORD[*] = SHR rcx|QWORD[.] y: 9 size: QWORD  <||@
  Comment 3495 1398 rdx|QWORD[*] = SUB (x: rdx|QWORD[*], ~y: rcx|QWORD[*]) size: QWORD  <||@
  Comment 3498 1400 rdx|QWORD[*] = INC rdx|QWORD[*] size: QWORD  <||@
  Comment 3501 1404 JUMP ~[] destination: B165 -> B166  <||@
  Comment 3506 block B172 loop 9 depth 1 header:2013|LoopBegin  <||@
  Comment 3506 1456 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 3520 1458 rdx|QWORD[*] = DEC rdx|QWORD[*] size: QWORD  <||@
  Comment 3523 1460 r8|QWORD[*] = ADD (x: rcx|QWORD[*], y: r13|QWORD) size: QWORD  <||@
  Comment 3529 1462 r8|QWORD[*] = ADD (x: r8|QWORD[*], y: rdx|QWORD[*]) size: QWORD  <||@
  Comment 3532 1464 MOVB (x: [r8|QWORD[*]], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 3535 1466 JUMP ~[] destination: B172 -> B166  <||@
  Comment 3535 block B166 loop 9 depth 1 header:2013|LoopBegin  <||@
  Comment 3535 1406 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3535 1408 CMP rdx|QWORD[*] y: 1 size: QWORD  <||@
  Comment 3539 1410 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B166 -> B168 falseDestination: B166 -> B172  <||@
  Comment 3547 block B246 null  <||@
  Comment 3547 2186 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3547 2188 rsi|DWORD = MOVE input: int[-270433|0xfffffffffffbdf9f]  <||@
  Comment 3552 2190 JUMP ~[] destination: B246 -> B321  <||@
  Comment 3552 block B321 null  <||@
  Comment 3552 2946 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3552 2948 MOV (x: [r15|QWORD + 668], y: rsi|DWORD) size: DWORD  <||@
  Comment 3559 2950 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3566 2952 DEOPT info [bci:10, 9, 17]  <||@
  Comment 3566 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3571 [stack:80, stack:88]at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:238) [bci: 10, duringCall: false, rethrow: false]
              |0                  |1         
     locals:  |stack:40|QWORD[.]  |rdi|DWORD 
  at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17, duringCall: true, rethrow: false]
              |0                  |1  |2                  |3         
     locals:  |stack:40|QWORD[.]  |-  |stack:48|QWORD[.]  |r14|DWORD   <||@
  Comment 3572 block B248 null  <||@
  Comment 3572 2198 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3572 2200 rsi|DWORD = MOVE input: int[-270433|0xfffffffffffbdf9f]  <||@
  Comment 3577 2202 JUMP ~[] destination: B248 -> B321  <||@
  Comment 3579 block B250 null  <||@
  Comment 3579 2212 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3579 2214 rsi|DWORD = MOVE input: int[-270433|0xfffffffffffbdf9f]  <||@
  Comment 3584 2216 JUMP ~[] destination: B250 -> B321  <||@
  Comment 3586 block B238 null  <||@
  Comment 3586 2108 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3586 2110 rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 3591 2112 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Collection.toArray()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1]  <||@
  Comment 3591 6  <||@
  Comment 3607 {HotSpotMethod<Collection.toArray()>}  <||@
  Comment 3612 [stack:88]at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:40|QWORD[.]  |-  |-  |-   <||@
  Comment 3613 2114 r14|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD state [bci:6]  <||@
  Comment 3613 [rax:0, stack:88]at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 6, duringCall: false, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:40|QWORD[.]  |-  |-  |- 
     stack:   |Object[null]       |   |   |    <||@
  Comment 3613 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 3617 2116 r13|QWORD = MOVE stack:56|QWORD moveKind: QWORD  <||@
  Comment 3622 2118 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3627 2120 JUMP ~[] destination: B238 -> B239  <||@
  Comment 3632 block B4 null  <||@
  Comment 3632 62 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3632 64 r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: -) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@eef3a58 encoding: base: 0 shift: 3  <||@
  Comment 3636 66 rsi|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 3639 68 rdx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 3642 70 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 3647 72 r13|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 3650 74 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 3650 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 3655 [r14:0, stack:80, stack:88]at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |-  |-   <||@
  Comment 3656 76 rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 3659 78 r10|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 3662 80 r13|QWORD = MOVE stack:56|QWORD moveKind: QWORD  <||@
  Comment 3667 82 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3672 84 JUMP ~[] destination: B4 -> B6  <||@
  Comment 3677 block B164 null  <||@
  Comment 3677 1378 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3677 1382 JUMP ~[] destination: B164 -> B168  <||@
  Comment 3677 block B168 null  <||@
  Comment 3677 1416 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3677 1418 rcx|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 3682 1420 rdx|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 3684 1422 rsi|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 3689 1424 JUMP ~[] destination: B168 -> B169  <||@
  Comment 3694 block B170 loop 10 depth 1 header:669|LoopBegin  <||@
  Comment 3694 1432 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 3696 1434 rcx|DWORD = INC rdx|DWORD size: DWORD  <||@
  Comment 3700 1436 rsi|DWORD = INC rsi|DWORD size: DWORD  <||@
  Comment 3702 1438 stack:84|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 3706 1440 rcx|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 3708 1442 rdx|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 3712 1444 JUMP ~[] destination: B170 -> B169  <||@
  Comment 3712 block B169 loop 10 depth 1 header:669|LoopBegin  <||@
  Comment 3712 1426 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 3712 1428 CMP (x: r14|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 3715 1430 BRANCH trueDestinationProbability: 0.7836641850436589 condition: > trueDestination: B169 -> B170 falseDestination: B169 -> B171  <||@
  Comment 3717 block B171 null  <||@
  Comment 3717 1446 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3717 1448 r11|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 3720 1450 r10|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 3723 1452 rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 3728 1454 JUMP ~[] destination: B171 -> B190  <||@
  Comment 3733 block B257 null  <||@
  Comment 3733 2300 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3733 2302 r10|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD  <||@
  Comment 3738 2304 r14|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 3743 2306 rax|DWORD = NOT rax|DWORD size: DWORD  <||@
  Comment 3745 2308 r8|DWORD = ADD (x: rax|DWORD, y: stack:68|DWORD) size: DWORD  <||@
  Comment 3753 2310 r9|DWORD = SUB (x: r14|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 3759 2312 rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 3764 2314 rdx|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 3766 2316 rcx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 3769 2318 - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD] [] callTarget: HotSpotMethod<System.arraycopy(Object, int, Object, int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:31]  <||@
  Comment 3769 8  <||@
  Comment 3775 {HotSpotMethod<System.arraycopy(Object, int, Object, int, int)>}  <||@
  Comment 3780 [stack:88]at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31, duringCall: true, rethrow: false]
              |0                  |1  |2  |3              
     locals:  |stack:40|QWORD[.]  |-  |-  |stack:64|DWORD   <||@
  Comment 3781 2320 r14|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 3786 2322 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3791 2324 JUMP ~[] destination: B257 -> B258  <||@
  Comment 3796 block B263 null  <||@
  Comment 3796 2392 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3796 2394 stack:60|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 3801 2396 stack:108|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 3805 2398 stack:84|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 3810 2400 r13|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 3813 2402 r11|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: -) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@eef3a58 encoding: base: 0 shift: 3  <||@
  Comment 3817 2404 rsi|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 3820 2406 rdx|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 3823 2408 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 3828 2410 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:10, 9, 17]  <||@
  Comment 3828 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 3833 [stack:44, stack:80, stack:88]at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:238) [bci: 10, duringCall: false, rethrow: false]
              |0                  |1               
     locals:  |stack:40|QWORD[.]  |stack:108|DWORD 
  at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17, duringCall: true, rethrow: false]
              |0                  |1  |2                  |3              
     locals:  |stack:40|QWORD[.]  |-  |stack:48|QWORD[.]  |stack:64|DWORD   <||@
  Comment 3834 2412 r11|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 3837 2414 r9|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 3840 2416 r8|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 3845 2418 r10|DWORD[.] = MOVE stack:84|DWORD[.] moveKind: DWORD  <||@
  Comment 3850 2420 r13|QWORD = MOVE stack:56|QWORD moveKind: QWORD  <||@
  Comment 3855 2422 JUMP ~[] destination: B263 -> B265  <||@
  Comment 3860 block B309 null  <||@
  Comment 3860 2794 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3860 2796 MOV [r15|QWORD + 668] y: -282977 size: DWORD  <||@
  Comment 3871 2798 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3878 2800 DEOPT info [bci:44, 22, 9, 17]  <||@
  Comment 3878 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3883 [stack:80, stack:88]at java.util.ArrayList.grow(ArrayList.java:266) [bci: 44, duringCall: false, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17, duringCall: true, rethrow: false]
              |0                  |1  |2                  |3              
     locals:  |stack:40|QWORD[.]  |-  |stack:48|QWORD[.]  |stack:64|DWORD   <||@
  Comment 3884 block B152 loop 8 depth 1 header:2417|LoopBegin  <||@
  Comment 3884 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 3888 1288 xmm0|V256_DWORD[........] = H [r8|QWORD[.] + rdx|QWORD * 4] nZ: YMM oh: VMOVDQU  <||@
  Comment 3894 1290 J (address: [r10|QWORD[.] + rdx|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU  <||@
  Comment 3900 1292 rdx|QWORD = LEA [rdx|QWORD + 8] size: QWORD  <||@
  Comment 3904 1294 CMP (x: rdx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 3907 1296 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B152 -> B154 falseDestination: B152 -> B152  <||@
  Comment 3914 block B316 null  <||@
  Comment 3914 2884 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3914 2886 rcx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 3919 2888 r11|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 3924 2890 r14|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 3929 2892 rax|DWORD = NOT rax|DWORD size: DWORD  <||@
  Comment 3931 2894 r8|DWORD = ADD (x: rax|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 3937 2896 r9|DWORD = SUB (x: r14|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 3943 2898 rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 3948 2900 rdx|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 3950 2902 - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD] [] callTarget: HotSpotMethod<System.arraycopy(Object, int, Object, int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:31]  <||@
  Comment 3950 8  <||@
  Comment 3951 {HotSpotMethod<System.arraycopy(Object, int, Object, int, int)>}  <||@
  Comment 3956 [stack:88]at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31, duringCall: true, rethrow: false]
              |0                  |1  |2  |3              
     locals:  |stack:40|QWORD[.]  |-  |-  |stack:64|DWORD   <||@
  Comment 3957 2904 r14|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 3962 2906 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3967 2908 JUMP ~[] destination: B316 -> B317  <||@
  Comment 3972 block B177 null  <||@
  Comment 3972 1514 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3972 1516 CMP r14|DWORD y: 1 size: DWORD  <||@
  Comment 3976 1518 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B177 -> B181 falseDestination: B177 -> B179  <||@
  Comment 3982 block B179 null  <||@
  Comment 3982 1524 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3982 1526 CMP (x: r10|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 3985 1528 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B179 -> B181 falseDestination: B179 -> B193  <||@
  Comment 3991 block B181 null  <||@
  Comment 3991 1534 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3991 1536 stack:84|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 3996 1538 stack:96|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 4001 1540 stack:108|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 4009 1542 r11|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 4012 1544 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 4018 1552 JUMP ~[] destination: B181 -> B182  <||@
  Comment 4023 block B183 loop 11 depth 1 header:737|LoopBegin  <||@
  Comment 4023 1560 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 4032 1562 rcx|DWORD = MOV [rdx|QWORD[.] + 16] size: DWORD  <||@
  Comment 4035 1564 rbx|DWORD = MOV [rdx|QWORD[.] + 20] size: DWORD  <||@
  Comment 4038 1566 rdi|DWORD = SUB (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 4043 1568 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@eef3a58 encoding: base: 0 shift: 3  <||@
  Comment 4049 1570 CMP (x: rbx|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 4051 1572 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B183 -> B184 falseDestination: B183 -> B187  <||@
  Comment 4057 block B184 loop 11 depth 1 header:737|LoopBegin  <||@
  Comment 4057 1574 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4057 1576 CMP (x: r8|DWORD, y: [rsi|DWORD[.] * 8 + 12]) size: DWORD  <||@
  Comment 4065 1578 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B184 -> B185 falseDestination: B184 -> B186  <||@
  Comment 4071 block B185 loop 11 depth 1 header:737|LoopBegin  <||@
  Comment 4071 1580 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4071 1582 stack:112|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 4076 1584 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 4079 1586 rdx|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 4082 1588 stack:80|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 4087 1590 stack:116|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 4092 1592 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractList.get(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:14, 11, 39, 1]  <||@
  Comment 4092 7  <||@
  Comment 4103 {HotSpotMethod<AbstractList.get(int)>}  <||@
  Comment 4108 [stack:32, stack:48, stack:68, stack:80, stack:88]at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14, duringCall: true, rethrow: false]
              |0                                                                                                                                                                 |1                |2 
     locals:  |vobject:AbstractList$ListItr:0{cursor=stack:116|DWORD,lastRet=stack:108|DWORD,expectedModCount=stack:64|DWORD,this$0=stack:80|QWORD[.],this$0=stack:80|QWORD[.]}  |stack:116|DWORD  |- 
  at java.util.SubList$1.next(AbstractList.java:707) [bci: 11, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39, duringCall: true, rethrow: false]
              |0                  |1                  |2                                                                                                                                                                                                                                      |3               
     locals:  |-                  |stack:96|QWORD[.]  |vobject:SubList$1:1{val$index=int[0|0x0],i=vobject:AbstractList$ListItr:0{cursor=stack:116|DWORD,lastRet=stack:108|DWORD,expectedModCount=stack:64|DWORD,this$0=stack:80|QWORD[.],this$0=stack:80|QWORD[.]},this$0=stack:48|QWORD[.]}  |stack:112|DWORD 
     stack:   |stack:96|QWORD[.]  |stack:112|DWORD    |                                                                                                                                                                                                                                       |                
  at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:40|QWORD[.]  |-  |-  |-   <||@
  Comment 4109 1594 rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@eef3a58 encoding: base: 0 shift: 3  <||@
  Comment 4113 1596 r10|DWORD = MOVE stack:112|DWORD moveKind: DWORD  <||@
  Comment 4118 1598 r8|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD  <||@
  Comment 4123 1600 MOV (x: [r8|QWORD[.] + r10|DWORD * 4 + 16], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 4128 1602 r11|QWORD[.] = LEA [r8|QWORD[.] + r10|DWORD * 4 + 16] size: QWORD  <||@
  Comment 4133 1604 r11|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD  <||@
  Comment 4137 1606 r13|QWORD = MOVE stack:56|QWORD moveKind: QWORD  <||@
  Comment 4142 1608 MOVB (x: [r11|QWORD[*] + r13|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 4146 1610 r11|DWORD = INC stack:116|DWORD size: DWORD  <||@
  Comment 4154 1612 r10|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 4157 1614 stack:108|DWORD = STACKMOVE (input: stack:116|DWORD, ~backupSlot: stack:32|QWORD) scratch: rax  <||@
  Comment 4175 1616 r14|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 4180 1624 JUMP ~[] destination: B185 -> B182  <||@
  Comment 4180 block B182 loop 11 depth 1 header:737|LoopBegin  <||@
  Comment 4180 1554 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 4180 1546 r8|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 4185 1548 rsi|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD  <||@
  Comment 4189 1550 rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 4194 1556 CMP (x: r14|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 4197 1558 BRANCH trueDestinationProbability: 0.7836641850436589 condition: > trueDestination: B182 -> B183 falseDestination: B182 -> B189  <||@
  Comment 4203 block B189 null  <||@
  Comment 4203 1658 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4203 1660 r10|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 4206 1662 rax|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD  <||@
  Comment 4211 1666 r11|DWORD = MOVE stack:108|DWORD moveKind: DWORD  <||@
  Comment 4216 1668 JUMP ~[] destination: B189 -> B190  <||@
  Comment 4221 block B198 null  <||@
  Comment 4221 1756 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4221 1758 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 4231 1760 r10|DWORD = MOVE input: int[-226323|0xfffffffffffc8bed]  <||@
  Comment 4237 1762 JUMP ~[] destination: B198 -> B237  <||@
  Comment 4237 block B237 null  <||@
  Comment 4237 2100 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 4237 2102 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 4244 2104 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 4251 2106 DEOPT info [bci:0]  <||@
  Comment 4251 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 4256 [rdx:0, rsi:0]at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-   <||@
  Comment 4257 block B236 null  <||@
  Comment 4257 2086 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4257 2088 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1399980118]  <||@
  Comment 4257 {Object[d.a@1399980118]}  <||@
  Comment 4267 2090 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 4270 2092 r10|DWORD = MOVE input: int[-255259|0xfffffffffffc1ae5]  <||@
  Comment 4276 2094 rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 4281 2096 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 4286 2098 JUMP ~[] destination: B236 -> B237  <||@
  Comment 4288 block B186 null  <||@
  Comment 4288 1626 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4288 1628 r9|DWORD = MOVE stack:108|DWORD moveKind: DWORD  <||@
  Comment 4293 1630 rbx|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 4296 1632 r11|DWORD = MOVE input: int[-245779|0xfffffffffffc3fed]  <||@
  Comment 4302 1636 JUMP ~[] destination: B186 -> B188  <||@
  Comment 4302 block B188 null  <||@
  Comment 4302 1650 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 4302 1646 r8|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD  <||@
  Comment 4307 1652 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 4314 1654 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 4321 1656 DEOPT info [bci:15, 1]  <||@
  Comment 4321 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 4326 [rcx:0, r8:0, stack:80, stack:88]at java.util.AbstractCollection.toArray(AbstractCollection.java:138) [bci: 15, duringCall: false, rethrow: false]
              |0  |1            |2                                                                                                                                                                                                               |3         
     locals:  |-  |r8|QWORD[.]  |vobject:SubList$1:0{val$index=int[0|0x0],i=vobject:AbstractList$ListItr:1{cursor=rbx|DWORD,lastRet=r9|DWORD,expectedModCount=stack:64|DWORD,this$0=rcx|QWORD[.],this$0=rcx|QWORD[.]},this$0=stack:48|QWORD[.]}  |r10|DWORD 
  at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:40|QWORD[.]  |-  |-  |-   <||@
  Comment 4327 block B187 null  <||@
  Comment 4327 1638 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4327 1640 r9|DWORD = MOVE stack:108|DWORD moveKind: DWORD  <||@
  Comment 4332 1642 rbx|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 4335 1644 r11|DWORD = MOVE input: int[-245011|0xfffffffffffc42ed]  <||@
  Comment 4341 1648 JUMP ~[] destination: B187 -> B188  <||@
  Comment 4343 block B320 null  <||@
  Comment 4343 2938 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4343 2940 rsi|DWORD = MOVE input: int[-273427|0xfffffffffffbd3ed]  <||@
  Comment 4348 2942 r14|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 4353 2944 JUMP ~[] destination: B320 -> B321  <||@
  Comment 4358 block B193 null  <||@
  Comment 4358 1702 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4358 1704 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1800298093]  <||@
  Comment 4358 {Object[d.a@1800298093]}  <||@
  Comment 4368 1706 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 4371 1708 r10|DWORD = MOVE input: int[-246555|0xfffffffffffc3ce5]  <||@
  Comment 4377 1710 rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 4382 1712 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 4387 1714 JUMP ~[] destination: B193 -> B237  <||@
  Comment 4392 block B134 null  <||@
  Comment 4392 1144 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4392 1146 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1800298093]  <||@
  Comment 4392 {Object[d.a@1800298093]}  <||@
  Comment 4402 1148 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 4405 1150 r10|DWORD = MOVE input: int[-232731|0xfffffffffffc72e5]  <||@
  Comment 4411 1152 rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 4416 1154 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 4421 1156 JUMP ~[] destination: B134 -> B237  <||@
  Comment 4426 block B83 null  <||@
  Comment 4426 746 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4426 748 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 4436 750 r10|DWORD = MOVE input: int[-251411|0xfffffffffffc29ed]  <||@
  Comment 4442 752 rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 4447 754 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 4452 756 JUMP ~[] destination: B83 -> B237  <||@
  Comment 4457 block B191 null  <||@
  Comment 4457 1680 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4457 1682 r8|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 4460 1684 r9|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 4465 1686 r14|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD  <||@
  Comment 4470 1688 r14|QWORD[.] = UNCOMPRESSPOINTER (input: r14|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@eef3a58 encoding: base: 0 shift: 3  <||@
  Comment 4474 1690 MOV [r15|QWORD + 668] y: -249107 size: DWORD  <||@
  Comment 4485 1692 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 4492 1694 DEOPT info [bci:51, 1]  <||@
  Comment 4492 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 4497 [r8:0, r14:0, stack:80, stack:88]at java.util.AbstractCollection.toArray(AbstractCollection.java:143) [bci: 51, duringCall: false, rethrow: false]
              |0  |1            |2                                                                                                                                                                                                          |3 
     locals:  |-  |r8|QWORD[.]  |vobject:SubList$1:0{val$index=int[0|0x0],i=vobject:AbstractList$ListItr:1{cursor=r10|DWORD,lastRet=r11|DWORD,expectedModCount=r9|DWORD,this$0=r14|QWORD[.],this$0=r14|QWORD[.]},this$0=stack:48|QWORD[.]}  |- 
  at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:40|QWORD[.]  |-  |-  |-   <||@
  Comment 4498 block B91 null  <||@
  Comment 4498 804 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4498 806 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 4508 808 r10|DWORD = MOVE input: int[-252691|0xfffffffffffc24ed]  <||@
  Comment 4514 810 rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 4519 812 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 4524 814 JUMP ~[] destination: B91 -> B237  <||@
  Comment 4529 block B132 null  <||@
  Comment 4529 1116 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4529 1118 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1800298093]  <||@
  Comment 4529 {Object[d.a@1800298093]}  <||@
  Comment 4539 1120 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 4542 1122 r10|DWORD = MOVE input: int[-235291|0xfffffffffffc68e5]  <||@
  Comment 4548 1124 rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 4553 1126 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 4558 1128 JUMP ~[] destination: B132 -> B237  <||@
  Comment 4563 block B175 null  <||@
  Comment 4563 1486 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4563 1488 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1800298093]  <||@
  Comment 4563 {Object[d.a@1800298093]}  <||@
  Comment 4573 1490 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 4576 1492 r10|DWORD = MOVE input: int[-240155|0xfffffffffffc55e5]  <||@
  Comment 4582 1494 rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 4587 1496 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 4592 1498 JUMP ~[] destination: B175 -> B237  <||@
  Comment 4597 block B261 null  <||@
  Comment 4597 2362 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4597 2364 rsi|DWORD = MOVE input: int[-393313|0xfffffffffff9ff9f]  <||@
  Comment 4602 2366 r14|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 4607 2368 JUMP ~[] destination: B261 -> B321  <||@
  Comment 4612 block B88 null  <||@
  Comment 4612 780 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4612 782 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 4622 784 r10|DWORD = MOVE input: int[-251667|0xfffffffffffc28ed]  <||@
  Comment 4628 786 rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 4633 788 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 4638 790 JUMP ~[] destination: B88 -> B237  <||@
  Comment 4643 block B174 null  <||@
  Comment 4643 1472 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4643 1474 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1800298093]  <||@
  Comment 4643 {Object[d.a@1800298093]}  <||@
  Comment 4653 1476 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 4656 1478 r10|DWORD = MOVE input: int[-242459|0xfffffffffffc4ce5]  <||@
  Comment 4662 1480 rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 4667 1482 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 4672 1484 JUMP ~[] destination: B174 -> B237  <||@
  Comment 4677 block B194 null  <||@
  Comment 4677 1716 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4677 1718 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 4687 1720 r10|DWORD = MOVE input: int[-251955|0xfffffffffffc27cd]  <||@
  Comment 4693 1722 rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 4698 1724 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 4703 1726 JUMP ~[] destination: B194 -> B237  <||@
  Comment 4708 block B205 null  <||@
  Comment 4708 1806 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4708 1808 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 4718 1810 r10|DWORD = MOVE input: int[-254739|0xfffffffffffc1ced]  <||@
  Comment 4724 1812 JUMP ~[] destination: B205 -> B237  <||@
  Comment 4729 block B133 null  <||@
  Comment 4729 1130 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4729 1132 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1800298093]  <||@
  Comment 4729 {Object[d.a@1800298093]}  <||@
  Comment 4739 1134 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 4742 1136 r10|DWORD = MOVE input: int[-232731|0xfffffffffffc72e5]  <||@
  Comment 4748 1138 rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 4753 1140 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 4758 1142 JUMP ~[] destination: B133 -> B237  <||@
  Comment 4763 block B195 null  <||@
  Comment 4763 1728 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4763 1730 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 4773 1732 r10|DWORD = MOVE input: int[-229683|0xfffffffffffc7ecd]  <||@
  Comment 4779 1734 rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 4784 1736 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 4789 1738 JUMP ~[] destination: B195 -> B237  <||@
  Comment 4794 block B137 null  <||@
  Comment 4794 1176 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4794 1178 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1399295821]  <||@
  Comment 4794 {Object[d.a@1399295821]}  <||@
  Comment 4804 1180 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 4807 1182 r10|DWORD = MOVE input: int[-238859|0xfffffffffffc5af5]  <||@
  Comment 4813 1184 rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 4818 1186 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 4823 1188 JUMP ~[] destination: B137 -> B237  <||@
  Comment 4828 block B52 null  <||@
  Comment 4828 470 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4828 472 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 4838 474 r10|DWORD = MOVE input: int[-229907|0xfffffffffffc7ded]  <||@
  Comment 4844 476 JUMP ~[] destination: B52 -> B237  <||@
  Comment 4849 block B176 null  <||@
  Comment 4849 1500 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4849 1502 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1800298093]  <||@
  Comment 4849 {Object[d.a@1800298093]}  <||@
  Comment 4859 1504 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 4862 1506 r10|DWORD = MOVE input: int[-240155|0xfffffffffffc55e5]  <||@
  Comment 4868 1508 rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 4873 1510 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 4878 1512 JUMP ~[] destination: B176 -> B237  <||@
  Comment 4883 block B2 null  <||@
  Comment 4883 32 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4883 34 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 4893 36 r10|DWORD = MOVE input: int[-405345|0xfffffffffff9d09f]  <||@
  Comment 4899 38 JUMP ~[] destination: B2 -> B237  <||@
  Comment 4904 block B95 null  <||@
  Comment 4904 836 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4904 838 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1399295821]  <||@
  Comment 4904 {Object[d.a@1399295821]}  <||@
  Comment 4914 840 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 4917 842 r10|DWORD = MOVE input: int[-231435|0xfffffffffffc77f5]  <||@
  Comment 4923 844 rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 4928 846 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 4933 848 JUMP ~[] destination: B95 -> B237  <||@
  Comment 4938 block B50 null  <||@
  Comment 4938 454 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4938 456 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 4948 458 r10|DWORD = MOVE input: int[-227859|0xfffffffffffc85ed]  <||@
  Comment 4954 460 JUMP ~[] destination: B50 -> B237  <||@
  Comment 4959 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 4959 4  <||@
  Comment 4965 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 4965 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-8461[java.util.ArrayList.addAll(Collection)]"
  method "HotSpotCompilation-8461[java.util.ArrayList.addAll(Collection)]"
  date 1527005194640
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 107b3f160   <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@25350e89 slotKind: QWORD  <||@
  Comment 48 6 stack:40|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 53 8 stack:48|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 58 10 rcx|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD state [bci:0]  <||@
  Comment 58 [rdx:0, rsi:0, stack:80, stack:88]at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-   <||@
  Comment 58 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 61 12 r13|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 71 14 stack:56|QWORD = MOVE r13|QWORD moveKind: QWORD  <||@
  Comment 76 16 CMP rcx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList;, resolved>;compressed}  <||@
  Comment 76 {meta{HotSpotType<Ljava/util/ArrayList;, resolved>;compressed}}  <||@
  Comment 82 18 BRANCH trueDestinationProbability: 0.7101534901468434 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B47  <||@
  Comment 88 block B1 null  <||@
  Comment 88 20 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 88 22 r14|DWORD[.] = MOV [rdx|QWORD[.] + 20] size: DWORD  <||@
  Comment 92 24 NULLCHECK [r12|QWORD[*] + r14|DWORD[.] * 8] state [bci:0]  <||@
  Comment 92 [rdx:0, rsi:0, r14:0, stack:80, stack:88]at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-   <||@
  Comment 92 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 96 26 r10|DWORD = MOV [rdx|QWORD[.] + 16] size: DWORD  <||@
  Comment 100 28 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 103 30 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3  <||@
  Comment 109 block B3 null  <||@
  Comment 109 40 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 109 42 rcx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 113 44 r11|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 117 46 r8|DWORD = MOV [r14|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 125 48 r9|DWORD = SHL r10|DWORD y: 2 size: DWORD  <||@
  Comment 132 50 r9|DWORD = LEA [r9|DWORD + 23] size: DWORD  <||@
  Comment 136 52 r9|DWORD = AND r9|DWORD y: -8 size: DWORD  <||@
  Comment 140 54 r9|QWORD = MOVSXD r9|DWORD size: QWORD  <||@
  Comment 143 56 rbx|QWORD = ADD (x: r9|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 149 58 CMP (x: rbx|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 152 60 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B5  <||@
  Comment 158 block B5 null  <||@
  Comment 158 86 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 158 88 MOV (x: [r15|QWORD + 96], y: rbx|QWORD) size: QWORD  <||@
  Comment 162 90 AMD64PREFETCH ~[r9|QWORD + rcx|QWORD * 1 + 192] instr: 0  <||@
  Comment 171 92 AMD64PREFETCH ~[r9|QWORD + rcx|QWORD * 1 + 256] instr: 0  <||@
  Comment 180 94 AMD64PREFETCH ~[r9|QWORD + rcx|QWORD * 1 + 320] instr: 0  <||@
  Comment 189 96 AMD64PREFETCH ~[r9|QWORD + rcx|QWORD * 1 + 384] instr: 0  <||@
  Comment 198 98 MOV (x: [rcx|QWORD + 12], y: r10|DWORD) size: DWORD  <||@
  Comment 202 100 MOV [rcx|QWORD] y: 1 size: QWORD  <||@
  Comment 209 102 MOV (x: [rcx|QWORD + 8], y: r8|DWORD) size: DWORD  <||@
  Comment 213 104 rcx|QWORD[.] = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 213 106 rdx|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 216 108 JUMP ~[] destination: B5 -> B6  <||@
  Comment 216 block B6 null  <||@
  Comment 216 110 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 216 112 rcx|DWORD = MOV [r14|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 224 114 CMP (x: r10|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 227 116 r11|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: rcx|DWORD) condition: >  <||@
  Comment 234 118 rcx|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 237 120 CMP rcx|QWORD y: 1 size: QWORD  <||@
  Comment 241 122 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B6 -> B22 falseDestination: B6 -> B8  <||@
  Comment 247 block B8 null  <||@
  Comment 247 128 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 247 130 r11|QWORD = LEA [rcx|QWORD - 8] size: QWORD  <||@
  Comment 251 132 r8|QWORD[.] = LEA [rdx|QWORD[.] + 16] size: QWORD  <||@
  Comment 255 134 r9|QWORD[*] = LEA [r14|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 263 136 TEST (x: r11|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 266 142 rbx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 273 138 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B8 -> B13 falseDestination: B8 -> B11  <||@
  Comment 279 block B13 null  <||@
  Comment 279 168 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 279 170 r11|QWORD = LEA [rcx|QWORD - 4] size: QWORD  <||@
  Comment 283 172 CMP (x: rbx|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 286 174 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B13 -> B16 falseDestination: B13 -> B15  <||@
  Comment 292 block B15 null  <||@
  Comment 292 180 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 292 182 xmm0|V128_DWORD[....] = H [r9|QWORD[*] + rbx|QWORD * 4] nZ: XMM oh: VMOVDQU  <||@
  Comment 298 184 J (address: [r8|QWORD[.] + rbx|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU  <||@
  Comment 304 186 r11|QWORD = LEA [rbx|QWORD + 4] size: QWORD  <||@
  Comment 308 188 rbx|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 311 190 JUMP ~[] destination: B15 -> B16  <||@
  Comment 311 block B16 null  <||@
  Comment 311 192 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 311 194 r11|QWORD = LEA [rcx|QWORD - 2] size: QWORD  <||@
  Comment 315 196 CMP (x: rbx|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 318 198 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B16 -> B19 falseDestination: B16 -> B18  <||@
  Comment 324 block B18 null  <||@
  Comment 324 204 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 324 206 xmm0|V64_DWORD[..] = H [r9|QWORD[*] + rbx|QWORD * 4] nZ: XMM oh: VMOVQ  <||@
  Comment 330 208 J (address: [r8|QWORD[.] + rbx|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ  <||@
  Comment 336 210 r11|QWORD = LEA [rbx|QWORD + 2] size: QWORD  <||@
  Comment 340 212 rbx|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 343 214 JUMP ~[] destination: B18 -> B19  <||@
  Comment 343 block B19 null  <||@
  Comment 343 216 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 343 218 r11|QWORD = DEC rcx|QWORD size: QWORD  <||@
  Comment 349 220 CMP (x: rbx|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 352 222 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B19 -> B22 falseDestination: B19 -> B21  <||@
  Comment 358 block B21 null  <||@
  Comment 358 228 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 358 230 r11|DWORD[.] = MOV [r9|QWORD[*] + rbx|QWORD * 4] size: DWORD  <||@
  Comment 362 232 MOV (x: [r8|QWORD[.] + rbx|QWORD * 4], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 366 234 JUMP ~[] destination: B21 -> B22  <||@
  Comment 366 block B22 null  <||@
  Comment 366 236 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 366 238 r11|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 369 240 CMP (x: r11|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 372 242 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B39  <||@
  Comment 378 block B39 null  <||@
  Comment 378 358 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 378 360 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 381 362 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B39 -> B44 falseDestination: B39 -> B41  <||@
  Comment 387 block B41 null  <||@
  Comment 387 368 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 387 370 rcx|DWORD = DEC r10|DWORD size: DWORD  <||@
  Comment 392 372 rcx|DWORD = SHL rcx|DWORD y: 2 size: DWORD  <||@
  Comment 395 374 rcx|QWORD = MOVSXD rcx|DWORD size: QWORD  <||@
  Comment 398 376 r11|QWORD[.] = LEA [rdx|QWORD[.] + 16] size: QWORD  <||@
  Comment 402 378 r11|QWORD[.] = ADD (x: r11|QWORD[.], y: rcx|QWORD) size: QWORD  <||@
  Comment 405 380 r11|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD  <||@
  Comment 409 382 rcx|QWORD[.] = LEA [rdx|QWORD[.] + 16] size: QWORD  <||@
  Comment 413 384 rcx|QWORD[*] = SHR rcx|QWORD[.] y: 9 size: QWORD  <||@
  Comment 417 386 r11|QWORD[*] = SUB (x: r11|QWORD[*], ~y: rcx|QWORD[*]) size: QWORD  <||@
  Comment 420 388 r11|QWORD[*] = INC r11|QWORD[*] size: QWORD  <||@
  Comment 423 390 JUMP ~[] destination: B41 -> B42  <||@
  Comment 428 block B45 loop 2 depth 1 header:1864|LoopBegin  <||@
  Comment 428 410 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 432 412 r11|QWORD[*] = DEC r11|QWORD[*] size: QWORD  <||@
  Comment 435 414 r8|QWORD[*] = ADD (x: rcx|QWORD[*], y: r13|QWORD) size: QWORD  <||@
  Comment 441 416 r8|QWORD[*] = ADD (x: r8|QWORD[*], y: r11|QWORD[*]) size: QWORD  <||@
  Comment 444 418 MOVB (x: [r8|QWORD[*]], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 447 420 JUMP ~[] destination: B45 -> B42  <||@
  Comment 447 block B42 loop 2 depth 1 header:1864|LoopBegin  <||@
  Comment 447 392 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 447 394 CMP r11|QWORD[*] y: 1 size: QWORD  <||@
  Comment 451 396 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B42 -> B44 falseDestination: B42 -> B45  <||@
  Comment 459 block B23 null  <||@
  Comment 459 244 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 459 246 r8|QWORD[.] = LEA [rdx|QWORD[.] + rcx|QWORD * 4 + 16] size: QWORD  <||@
  Comment 464 248 r11|QWORD = SUB (x: r11|QWORD, ~y: rcx|QWORD) size: QWORD  <||@
  Comment 467 250 rcx|QWORD = LEA [r11|QWORD - 8] size: QWORD  <||@
  Comment 471 252 TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 474 254 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25  <||@
  Comment 480 block B24 null  <||@
  Comment 480 256 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 480 258 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 487 260 JUMP ~[] destination: B24 -> B28  <||@
  Comment 487 block B28 null  <||@
  Comment 487 284 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 487 286 rcx|QWORD = LEA [r11|QWORD - 4] size: QWORD  <||@
  Comment 491 288 CMP (x: r9|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 494 290 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B28 -> B31 falseDestination: B28 -> B30  <||@
  Comment 500 block B30 null  <||@
  Comment 500 296 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 500 298 xmm0|V128_DWORD[....] = L oc: SIMD<null,null,null,null>  <||@
  Comment 504 300 J (address: [r8|QWORD[.] + r9|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU  <||@
  Comment 510 302 rcx|QWORD = LEA [r9|QWORD + 4] size: QWORD  <||@
  Comment 514 304 r9|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 517 306 JUMP ~[] destination: B30 -> B31  <||@
  Comment 517 block B31 null  <||@
  Comment 517 308 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 517 310 rcx|QWORD = LEA [r11|QWORD - 2] size: QWORD  <||@
  Comment 521 312 CMP (x: r9|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 524 314 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B31 -> B34 falseDestination: B31 -> B33  <||@
  Comment 530 block B33 null  <||@
  Comment 530 320 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 530 322 xmm0|V64_DWORD[..] = L oc: SIMD<null,null>  <||@
  Comment 534 324 J (address: [r8|QWORD[.] + r9|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ  <||@
  Comment 540 326 rcx|QWORD = LEA [r9|QWORD + 2] size: QWORD  <||@
  Comment 544 328 r9|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 547 330 JUMP ~[] destination: B33 -> B34  <||@
  Comment 547 block B34 null  <||@
  Comment 547 332 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 547 334 r11|QWORD = DEC r11|QWORD size: QWORD  <||@
  Comment 550 336 CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 553 338 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B34 -> B39 falseDestination: B34 -> B36  <||@
  Comment 559 block B36 null  <||@
  Comment 559 344 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 559 346 MOV (x: [r8|QWORD[.] + r9|QWORD * 4], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 563 348 JUMP ~[] destination: B36 -> B39  <||@
  Comment 568 block B44 null  <||@
  Comment 568 402 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 568 404 rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 571 406 r14|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 574 408 JUMP ~[] destination: B44 -> B239  <||@
  Comment 574 block B239 null  <||@
  Comment 574 2122 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 574 2124 r10|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 578 2126 NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:6]  <||@
  Comment 578 [rax:0, rsi:0, r10:0, stack:88]at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 6, duringCall: false, rethrow: false]
              |0             |1  |2  |3 
     locals:  |rsi|QWORD[.]  |-  |-  |- 
     stack:   |rax|QWORD[.]  |   |   |    <||@
  Comment 578 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 582 2128 r11|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 586 2130 rdi|DWORD = ADD (x: r14|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 592 2132 CMP r10|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Object[0]{}]  <||@
  Comment 592 {NarrowOop[Object[0]{}]}  <||@
  Comment 599 2134 BRANCH trueDestinationProbability: 0.20639829530068676 condition: = trueDestination: B239 -> B240 falseDestination: B239 -> B244  <||@
  Comment 605 block B244 null  <||@
  Comment 605 2156 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 605 2158 stack:64|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 610 2160 stack:48|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 615 2162 stack:68|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 620 2164 rdx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 625 2166 rdx|DWORD = ADD (x: rdx|DWORD, ~y: [rsi|QWORD[.] + 12]) size: DWORD  <||@
  Comment 628 2168 MOV (x: [rsi|QWORD[.] + 12], y: rdx|DWORD) size: DWORD  <||@
  Comment 631 2170 r8|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 639 2172 r9|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD  <||@
  Comment 643 2174 rdx|DWORD = SUB (x: rdi|DWORD, ~y: r8|DWORD) size: DWORD  <||@
  Comment 648 2176 CMP rdx|DWORD y: 1 size: DWORD  <||@
  Comment 651 2178 BRANCH trueDestinationProbability: 0.7759914359571053 condition: < trueDestination: B244 -> B245 falseDestination: B244 -> B259  <||@
  Comment 657 block B245 null  <||@
  Comment 657 2180 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 657 2182 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 660 2184 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B245 -> B246 falseDestination: B245 -> B247  <||@
  Comment 666 block B247 null  <||@
  Comment 666 2192 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 666 2194 CMP (x: r14|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 669 2196 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B247 -> B248 falseDestination: B247 -> B249  <||@
  Comment 675 block B249 null  <||@
  Comment 675 2204 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 675 2206 r8|DWORD = SUB (x: r8|DWORD, ~y: r14|DWORD) size: DWORD  <||@
  Comment 678 2208 CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 681 2210 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B249 -> B250 falseDestination: B249 -> B251  <||@
  Comment 687 block B251 null  <||@
  Comment 687 2218 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 687 2220 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 690 2222 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B251 -> B258 falseDestination: B251 -> B253  <||@
  Comment 696 block B253 null  <||@
  Comment 696 2228 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 696 2230 rdi|DWORD = MOV [rax|QWORD[.] + 8] size: DWORD  <||@
  Comment 699 2232 r8|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 707 2234 r9|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 710 2236 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@eef3a58 encoding: base: 0 shift: 3  <||@
  Comment 714 2238 rcx|QWORD = MOV r14|DWORD size: DWORD  <||@
  Comment 717 2240 CMP (x: r8|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 720 2242 BRANCH trueDestinationProbability: 0.6 condition: = trueDestination: B253 -> B254 falseDestination: B253 -> B255  <||@
  Comment 726 block B254 null  <||@
  Comment 726 2244 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 726 2246 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 726 2248 r10|QWORD[*] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 726 2250 rdi|QWORD = LEA [rax|QWORD[*] + 16] size: QWORD  <||@
  Comment 730 2252 rsi|QWORD = LEA [r10|QWORD[*] + r9|QWORD * 4 + 16] size: QWORD  <||@
  Comment 735 2254 rdx|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 738 2256 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: ObjectArraycopyKillAny(Word,Word,Word)void@0x106813120:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 738 {Field[name=StubRoutines::_oop_arraycopy, type=address, offset=0, address=0x105a7dc90, value=0x106813120]:0x106813120}  <||@
  Comment 744 2258 r14|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 749 2260 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 754 2262 JUMP ~[] destination: B254 -> B258  <||@
  Comment 754 block B258 null  <||@
  Comment 754 2326 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 754 2328 rax|DWORD = ADD (x: r14|DWORD, ~y: [rsi|QWORD[.] + 16]) size: DWORD  <||@
  Comment 760 2330 MOV (x: [rsi|QWORD[.] + 16], y: rax|DWORD) size: DWORD  <||@
  Comment 763 2332 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 766 2334 rax|DWORD = SETCC condition: !=  <||@
  Comment 772 2336 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 781 12  <||@
  Comment 791 block B47 null  <||@
  Comment 791 426 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 791 428 CMP rcx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/RandomAccessSubList;, resolved>;compressed}  <||@
  Comment 791 {meta{HotSpotType<Ljava/util/RandomAccessSubList;, resolved>;compressed}}  <||@
  Comment 797 430 BRANCH trueDestinationProbability: 0.5054073948247549 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B199  <||@
  Comment 803 block B48 null  <||@
  Comment 803 432 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 803 434 r14|DWORD[.] = MOV [rdx|QWORD[.] + 24] size: DWORD  <||@
  Comment 807 436 stack:60|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD  <||@
  Comment 812 438 r10|DWORD = MOV [r14|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 812 [rdx:0, rsi:0, stack:68, stack:80, stack:88]at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-   <||@
  Comment 812 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 820 440 stack:64|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 825 442 CMP (x: r10|DWORD, y: [rdx|QWORD[.] + 12]) size: DWORD  <||@
  Comment 829 444 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B198  <||@
  Comment 835 block B49 null  <||@
  Comment 835 446 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 835 448 r11|DWORD = MOV [rdx|QWORD[.] + 20] size: DWORD  <||@
  Comment 839 450 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 842 452 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B49 -> B50 falseDestination: B49 -> B51  <||@
  Comment 848 block B51 null  <||@
  Comment 848 462 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 848 464 r8|DWORD = MOV [rdx|QWORD[.] + 16] size: DWORD  <||@
  Comment 852 466 TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 855 468 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B51 -> B52 falseDestination: B51 -> B53  <||@
  Comment 861 block B53 null  <||@
  Comment 861 478 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 861 480 rcx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 865 482 r9|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 869 484 CMP r11|DWORD y: 16777215 size: DWORD  <||@
  Comment 876 486 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B58  <||@
  Comment 882 block B54 null  <||@
  Comment 882 488 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 882 490 rbx|DWORD = SHL r11|DWORD y: 2 size: DWORD  <||@
  Comment 888 492 rbx|DWORD = LEA [rbx|DWORD + 23] size: DWORD  <||@
  Comment 891 494 rbx|DWORD = AND rbx|DWORD y: -8 size: DWORD  <||@
  Comment 894 496 rbx|QWORD = MOVSXD rbx|DWORD size: QWORD  <||@
  Comment 897 498 rdi|QWORD = ADD (x: rbx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 903 500 CMP (x: rdi|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 906 502 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B54 -> B58 falseDestination: B54 -> B56  <||@
  Comment 912 block B56 null  <||@
  Comment 912 510 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 912 512 MOV (x: [r15|QWORD + 96], y: rdi|QWORD) size: QWORD  <||@
  Comment 916 514 AMD64PREFETCH ~[rbx|QWORD + rcx|QWORD * 1 + 192] instr: 0  <||@
  Comment 924 516 AMD64PREFETCH ~[rbx|QWORD + rcx|QWORD * 1 + 256] instr: 0  <||@
  Comment 932 518 AMD64PREFETCH ~[rbx|QWORD + rcx|QWORD * 1 + 320] instr: 0  <||@
  Comment 940 520 AMD64PREFETCH ~[rbx|QWORD + rcx|QWORD * 1 + 384] instr: 0  <||@
  Comment 948 522 MOV (x: [rcx|QWORD + 12], y: r11|DWORD) size: DWORD  <||@
  Comment 952 524 MOV [rcx|QWORD] y: 1 size: QWORD  <||@
  Comment 959 526 MOV [rcx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}  <||@
  Comment 959 {meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}}  <||@
  Comment 966 528 rcx|QWORD[.] = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 966 530 rax|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 969 532 stack:68|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 974 534 r14|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 977 536 JUMP ~[] destination: B56 -> B59  <||@
  Comment 977 block B59 null  <||@
  Comment 977 560 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 977 562 r10|QWORD = MOVSXD r14|DWORD size: QWORD  <||@
  Comment 980 564 r11|QWORD = DEC r10|QWORD size: QWORD  <||@
  Comment 986 566 r8|QWORD = LEA [r10|QWORD - 2] size: QWORD  <||@
  Comment 990 568 r9|QWORD = LEA [r10|QWORD - 4] size: QWORD  <||@
  Comment 994 570 rcx|QWORD = LEA [r10|QWORD - 8] size: QWORD  <||@
  Comment 998 572 CMP r14|DWORD y: 1 size: DWORD  <||@
  Comment 1002 574 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B59 -> B75 falseDestination: B59 -> B61  <||@
  Comment 1008 block B61 null  <||@
  Comment 1008 580 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1008 582 rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 1012 584 TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 1015 586 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63  <||@
  Comment 1021 block B62 null  <||@
  Comment 1021 588 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1021 590 rdx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1028 592 JUMP ~[] destination: B62 -> B66  <||@
  Comment 1028 block B66 null  <||@
  Comment 1028 616 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1028 618 CMP (x: rdx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 1031 620 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B66 -> B69 falseDestination: B66 -> B68  <||@
  Comment 1037 block B68 null  <||@
  Comment 1037 626 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1037 628 xmm0|V128_DWORD[....] = L oc: SIMD<null,null,null,null>  <||@
  Comment 1041 630 J (address: [rsi|QWORD[.] + rdx|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU  <||@
  Comment 1046 632 rdx|QWORD = LEA [rdx|QWORD + 4] size: QWORD  <||@
  Comment 1050 634 JUMP ~[] destination: B68 -> B69  <||@
  Comment 1050 block B69 null  <||@
  Comment 1050 636 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1050 638 CMP (x: rdx|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 1053 640 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B69 -> B72 falseDestination: B69 -> B71  <||@
  Comment 1059 block B71 null  <||@
  Comment 1059 646 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1059 648 xmm0|V64_DWORD[..] = L oc: SIMD<null,null>  <||@
  Comment 1063 650 J (address: [rsi|QWORD[.] + rdx|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ  <||@
  Comment 1069 652 rdx|QWORD = LEA [rdx|QWORD + 2] size: QWORD  <||@
  Comment 1073 654 JUMP ~[] destination: B71 -> B72  <||@
  Comment 1073 block B72 null  <||@
  Comment 1073 656 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1073 658 CMP (x: rdx|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 1076 660 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B72 -> B75 falseDestination: B72 -> B74  <||@
  Comment 1082 block B74 null  <||@
  Comment 1082 666 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1082 668 MOV (x: [rsi|QWORD[.] + rdx|QWORD * 4], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 1086 670 JUMP ~[] destination: B74 -> B75  <||@
  Comment 1086 block B75 null  <||@
  Comment 1086 672 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1086 674 rsi|DWORD = DEC r14|DWORD size: DWORD  <||@
  Comment 1091 676 rsi|DWORD = SHL rsi|DWORD y: 2 size: DWORD  <||@
  Comment 1094 678 rbx|QWORD = MOVSXD rsi|DWORD size: QWORD  <||@
  Comment 1097 680 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 1100 682 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B75 -> B80 falseDestination: B75 -> B77  <||@
  Comment 1106 block B77 null  <||@
  Comment 1106 690 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1106 692 rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 1110 694 rsi|QWORD[.] = ADD (x: rsi|QWORD[.], y: rbx|QWORD) size: QWORD  <||@
  Comment 1113 696 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1117 698 rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 1121 700 rdx|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1125 702 rsi|QWORD[*] = SUB (x: rsi|QWORD[*], ~y: rdx|QWORD[*]) size: QWORD  <||@
  Comment 1128 704 rsi|QWORD[*] = INC rsi|QWORD[*] size: QWORD  <||@
  Comment 1131 706 JUMP ~[] destination: B77 -> B78  <||@
  Comment 1136 block B196 loop 4 depth 1 header:1950|LoopBegin  <||@
  Comment 1136 1740 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1136 1742 rsi|QWORD[*] = DEC rsi|QWORD[*] size: QWORD  <||@
  Comment 1139 1744 rdi|QWORD[*] = ADD (x: rdx|QWORD[*], y: r13|QWORD) size: QWORD  <||@
  Comment 1145 1746 rdi|QWORD[*] = ADD (x: rdi|QWORD[*], y: rsi|QWORD[*]) size: QWORD  <||@
  Comment 1148 1748 MOVB (x: [rdi|QWORD[*]], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1151 1750 JUMP ~[] destination: B196 -> B78  <||@
  Comment 1151 block B78 loop 4 depth 1 header:1950|LoopBegin  <||@
  Comment 1151 708 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1151 710 CMP rsi|QWORD[*] y: 1 size: QWORD  <||@
  Comment 1155 712 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B78 -> B80 falseDestination: B78 -> B196  <||@
  Comment 1163 block B255 null  <||@
  Comment 1163 2264 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1163 2266 r8|QWORD = MOV [r8|DWORD * 8 + 232] size: QWORD  <||@
  Comment 1171 2268 rdi|DWORD = MOV [r8|QWORD + 12] size: DWORD  <||@
  Comment 1175 2270 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1178 2272 rdx|QWORD[*] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1181 2274 rbx|QWORD = MOVSXD rdi|DWORD size: QWORD  <||@
  Comment 1184 2276 rdi|QWORD = LEA [rsi|QWORD[*] + 16] size: QWORD  <||@
  Comment 1188 2278 rsi|QWORD = LEA [rdx|QWORD[*] + r9|QWORD * 4 + 16] size: QWORD  <||@
  Comment 1193 2280 rdx|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 1196 2282 rcx|QWORD = MOVE rbx|QWORD moveKind: QWORD  <||@
  Comment 1199 2284 stack:96|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1204 2286 rax|DWORD = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: ObjectCheckcast(Word,Word,Word,Word,Word)int@0x1068133a0:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 1204 {Field[name=StubRoutines::_checkcast_arraycopy, type=address, offset=0, address=0x105aa7b78, value=0x1068133a0]:0x1068133a0}  <||@
  Comment 1210 2288 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1212 2290 BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B255 -> B256 falseDestination: B255 -> B257  <||@
  Comment 1218 block B256 null  <||@
  Comment 1218 2292 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1218 2294 r14|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 1223 2296 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1228 2298 JUMP ~[] destination: B256 -> B258  <||@
  Comment 1233 block B259 null  <||@
  Comment 1233 2338 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1233 2340 rax|DWORD = SHR r8|DWORD size: DWORD  <||@
  Comment 1238 2342 rax|DWORD = ADD (x: rax|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 1241 2344 rsi|DWORD = SUB (x: rax|DWORD, ~y: rdi|DWORD) size: DWORD  <||@
  Comment 1245 2346 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 1247 2348 r14|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: rdi|DWORD) condition: <  <||@
  Comment 1254 2350 rax|DWORD = LEA [r14|DWORD - 2147483639] size: DWORD  <||@
  Comment 1261 2352 CMP rax|DWORD y: 1 size: DWORD  <||@
  Comment 1264 2354 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B259 -> B260 falseDestination: B259 -> B320  <||@
  Comment 1270 block B260 null  <||@
  Comment 1270 2356 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1270 2358 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 1273 2360 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B260 -> B261 falseDestination: B260 -> B262  <||@
  Comment 1279 block B262 null  <||@
  Comment 1279 2370 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1279 2372 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 1283 2374 rsi|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 1287 2376 r11|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 1295 2378 rdx|DWORD = SHL r14|DWORD y: 2 size: DWORD  <||@
  Comment 1301 2380 rdx|DWORD = LEA [rdx|DWORD + 23] size: DWORD  <||@
  Comment 1304 2382 rdx|DWORD = AND rdx|DWORD y: -8 size: DWORD  <||@
  Comment 1307 2384 rdx|QWORD = MOVSXD rdx|DWORD size: QWORD  <||@
  Comment 1310 2386 rcx|QWORD = ADD (x: rdx|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 1316 2388 CMP (x: rcx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1319 2390 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B262 -> B263 falseDestination: B262 -> B264  <||@
  Comment 1325 block B264 null  <||@
  Comment 1325 2424 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1325 2426 MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD  <||@
  Comment 1329 2428 AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 192] instr: 0  <||@
  Comment 1337 2430 AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 256] instr: 0  <||@
  Comment 1345 2432 AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 320] instr: 0  <||@
  Comment 1353 2434 AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 384] instr: 0  <||@
  Comment 1361 2436 MOV (x: [rax|QWORD + 12], y: r14|DWORD) size: DWORD  <||@
  Comment 1365 2438 MOV [rax|QWORD] y: 1 size: QWORD  <||@
  Comment 1372 2440 MOV (x: [rax|QWORD + 8], y: r11|DWORD) size: DWORD  <||@
  Comment 1376 2442 rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 1376 2444 r11|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1379 2446 JUMP ~[] destination: B264 -> B265  <||@
  Comment 1379 block B265 null  <||@
  Comment 1379 2448 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1379 2450 CMP (x: r14|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 1382 2452 rax|DWORD = CMOVE (falseValue: r14|DWORD, ~trueValue: r8|DWORD) condition: >  <||@
  Comment 1389 2454 rdi|QWORD = MOVSXD rax|DWORD size: QWORD  <||@
  Comment 1392 2456 CMP rdi|QWORD y: 1 size: QWORD  <||@
  Comment 1396 2458 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B265 -> B266 falseDestination: B265 -> B267  <||@
  Comment 1402 block B267 null  <||@
  Comment 1402 2468 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1402 2470 rsi|QWORD[.] = LEA [r11|QWORD[.] + 16] size: QWORD  <||@
  Comment 1406 2472 rdx|QWORD[*] = LEA [r10|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 1414 2474 r10|QWORD = LEA [rdi|QWORD - 8] size: QWORD  <||@
  Comment 1418 2476 TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1421 2482 rbx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1428 2484 rcx|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 1432 2486 r8|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1437 2478 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B267 -> B272 falseDestination: B267 -> B270  <||@
  Comment 1443 block B272 null  <||@
  Comment 1443 2516 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1443 2518 r10|QWORD = LEA [rdi|QWORD - 4] size: QWORD  <||@
  Comment 1447 2520 CMP (x: rbx|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1450 2522 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B272 -> B275 falseDestination: B272 -> B274  <||@
  Comment 1456 block B274 null  <||@
  Comment 1456 2528 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1456 2530 xmm0|V128_DWORD[....] = H [rdx|QWORD[*] + rbx|QWORD * 4] nZ: XMM oh: VMOVDQU  <||@
  Comment 1461 2532 J (address: [rsi|QWORD[.] + rbx|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU  <||@
  Comment 1466 2534 r10|QWORD = LEA [rbx|QWORD + 4] size: QWORD  <||@
  Comment 1470 2536 rbx|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 1473 2538 JUMP ~[] destination: B274 -> B275  <||@
  Comment 1473 block B275 null  <||@
  Comment 1473 2540 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1473 2542 r10|QWORD = LEA [rdi|QWORD - 2] size: QWORD  <||@
  Comment 1477 2544 CMP (x: rbx|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1480 2546 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B275 -> B278 falseDestination: B275 -> B277  <||@
  Comment 1486 block B277 null  <||@
  Comment 1486 2552 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1486 2554 xmm0|V64_DWORD[..] = H [rdx|QWORD[*] + rbx|QWORD * 4] nZ: XMM oh: VMOVQ  <||@
  Comment 1492 2556 J (address: [rsi|QWORD[.] + rbx|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ  <||@
  Comment 1498 2558 r10|QWORD = LEA [rbx|QWORD + 2] size: QWORD  <||@
  Comment 1502 2560 rbx|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 1505 2562 JUMP ~[] destination: B277 -> B278  <||@
  Comment 1505 block B278 null  <||@
  Comment 1505 2564 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1505 2566 r10|QWORD = DEC rdi|QWORD size: QWORD  <||@
  Comment 1511 2568 CMP (x: rbx|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1514 2570 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B278 -> B281 falseDestination: B278 -> B280  <||@
  Comment 1520 block B280 null  <||@
  Comment 1520 2576 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1520 2578 rdx|DWORD[.] = MOV [rdx|QWORD[*] + rbx|QWORD * 4] size: DWORD  <||@
  Comment 1523 2580 MOV (x: [rsi|QWORD[.] + rbx|QWORD * 4], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 1526 2582 JUMP ~[] destination: B280 -> B281  <||@
  Comment 1526 block B281 null  <||@
  Comment 1526 2584 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1526 2586 rsi|QWORD = MOVSXD r14|DWORD size: QWORD  <||@
  Comment 1529 2588 CMP (x: rsi|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 1532 2590 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B281 -> B282 falseDestination: B281 -> B298  <||@
  Comment 1538 block B298 null  <||@
  Comment 1538 2706 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1538 2708 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 1541 2710 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B298 -> B303 falseDestination: B298 -> B300  <||@
  Comment 1547 block B300 null  <||@
  Comment 1547 2718 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1547 2720 rdi|DWORD = DEC r14|DWORD size: DWORD  <||@
  Comment 1552 2722 rdi|DWORD = SHL rdi|DWORD y: 2 size: DWORD  <||@
  Comment 1555 2724 rdi|QWORD = MOVSXD rdi|DWORD size: QWORD  <||@
  Comment 1558 2726 rsi|QWORD[.] = LEA [r11|QWORD[.] + 16] size: QWORD  <||@
  Comment 1562 2728 rsi|QWORD[.] = ADD (x: rsi|QWORD[.], y: rdi|QWORD) size: QWORD  <||@
  Comment 1565 2730 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1569 2732 rdi|QWORD[.] = LEA [r11|QWORD[.] + 16] size: QWORD  <||@
  Comment 1573 2734 rdi|QWORD[*] = SHR rdi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1577 2736 rsi|QWORD[*] = SUB (x: rsi|QWORD[*], ~y: rdi|QWORD[*]) size: QWORD  <||@
  Comment 1580 2738 rsi|QWORD[*] = INC rsi|QWORD[*] size: QWORD  <||@
  Comment 1583 2740 JUMP ~[] destination: B300 -> B301  <||@
  Comment 1588 block B318 loop 16 depth 1 header:2255|LoopBegin  <||@
  Comment 1588 2922 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1600 2924 rsi|QWORD[*] = DEC rsi|QWORD[*] size: QWORD  <||@
  Comment 1603 2926 rdx|QWORD[*] = ADD (x: rdi|QWORD[*], y: r13|QWORD) size: QWORD  <||@
  Comment 1609 2928 rdx|QWORD[*] = ADD (x: rdx|QWORD[*], y: rsi|QWORD[*]) size: QWORD  <||@
  Comment 1612 2930 MOVB (x: [rdx|QWORD[*]], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1615 2932 JUMP ~[] destination: B318 -> B301  <||@
  Comment 1615 block B301 loop 16 depth 1 header:2255|LoopBegin  <||@
  Comment 1615 2742 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1615 2744 CMP rsi|QWORD[*] y: 1 size: QWORD  <||@
  Comment 1619 2746 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B301 -> B303 falseDestination: B301 -> B318  <||@
  Comment 1627 block B240 null  <||@
  Comment 1627 2136 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1627 2138 CMP rdi|DWORD y: 11 size: DWORD  <||@
  Comment 1630 2140 BRANCH trueDestinationProbability: 0.7356387781002678 condition: < trueDestination: B240 -> B241 falseDestination: B240 -> B244  <||@
  Comment 1636 block B241 null  <||@
  Comment 1636 2142 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1636 2144 rdi|DWORD = MOVE input: int[10|0xa]  <||@
  Comment 1641 2146 JUMP ~[] destination: B241 -> B244  <||@
  Comment 1646 block B199 null  <||@
  Comment 1646 1764 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1646 1766 CMP rcx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Collections$CopiesList;, resolved>;compressed}  <||@
  Comment 1646 {meta{HotSpotType<Ljava/util/Collections$CopiesList;, resolved>;compressed}}  <||@
  Comment 1652 1768 BRANCH trueDestinationProbability: 0.9487693188322834 condition: = trueDestination: B199 -> B200 falseDestination: B199 -> B238  <||@
  Comment 1658 block B200 null  <||@
  Comment 1658 1770 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1658 1772 r14|DWORD = MOV [rdx|QWORD[.] + 16] size: DWORD  <||@
  Comment 1662 1774 r10|QWORD = MOVSXD r14|DWORD size: QWORD  <||@
  Comment 1665 1776 r11|QWORD = DEC r10|QWORD size: QWORD  <||@
  Comment 1671 1778 CMP r14|DWORD y: 1 size: DWORD  <||@
  Comment 1675 1780 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B200 -> B204 falseDestination: B200 -> B202  <||@
  Comment 1681 block B202 null  <||@
  Comment 1681 1786 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1681 1788 CMP (x: r10|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 1684 1790 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B202 -> B204 falseDestination: B202 -> B236  <||@
  Comment 1690 block B204 null  <||@
  Comment 1690 1796 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1690 1798 r8|DWORD[.] = MOV [rdx|QWORD[.] + 20] size: DWORD  <||@
  Comment 1694 1800 NULLCHECK [r12|QWORD[*] + r8|DWORD[.] * 8] state [bci:0]  <||@
  Comment 1694 [rdx:0, rsi:0, r8:0, stack:80, stack:88]at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-   <||@
  Comment 1694 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1698 1802 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 1701 1804 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B204 -> B205 falseDestination: B204 -> B206  <||@
  Comment 1707 block B206 null  <||@
  Comment 1707 1814 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1707 1816 rcx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 1711 1818 r9|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 1715 1820 CMP r14|DWORD y: 16777215 size: DWORD  <||@
  Comment 1722 1822 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B206 -> B207 falseDestination: B206 -> B211  <||@
  Comment 1728 block B207 null  <||@
  Comment 1728 1824 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1728 1826 rbx|DWORD = SHL r14|DWORD y: 2 size: DWORD  <||@
  Comment 1734 1828 rbx|DWORD = LEA [rbx|DWORD + 23] size: DWORD  <||@
  Comment 1737 1830 rbx|DWORD = AND rbx|DWORD y: -8 size: DWORD  <||@
  Comment 1740 1832 rbx|QWORD = MOVSXD rbx|DWORD size: QWORD  <||@
  Comment 1743 1834 rdi|QWORD = ADD (x: rbx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 1749 1836 CMP (x: rdi|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 1752 1838 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B207 -> B211 falseDestination: B207 -> B209  <||@
  Comment 1758 block B209 null  <||@
  Comment 1758 1848 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1758 1850 MOV (x: [r15|QWORD + 96], y: rdi|QWORD) size: QWORD  <||@
  Comment 1762 1852 AMD64PREFETCH ~[rbx|QWORD + rcx|QWORD * 1 + 192] instr: 0  <||@
  Comment 1770 1854 AMD64PREFETCH ~[rbx|QWORD + rcx|QWORD * 1 + 256] instr: 0  <||@
  Comment 1778 1856 AMD64PREFETCH ~[rbx|QWORD + rcx|QWORD * 1 + 320] instr: 0  <||@
  Comment 1786 1858 AMD64PREFETCH ~[rbx|QWORD + rcx|QWORD * 1 + 384] instr: 0  <||@
  Comment 1794 1860 MOV (x: [rcx|QWORD + 12], y: r14|DWORD) size: DWORD  <||@
  Comment 1798 1862 MOV [rcx|QWORD] y: 1 size: QWORD  <||@
  Comment 1805 1864 MOV [rcx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}  <||@
  Comment 1805 {meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}}  <||@
  Comment 1812 1866 rcx|QWORD[.] = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 1812 1868 rax|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1815 1870 stack:96|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 1820 1872 stack:80|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 1825 1874 r13|DWORD[.] = MOVE r8|DWORD[.] moveKind: DWORD  <||@
  Comment 1828 1876 JUMP ~[] destination: B209 -> B212  <||@
  Comment 1828 block B212 null  <||@
  Comment 1828 1900 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1828 1902 CMP r14|DWORD y: 1 size: DWORD  <||@
  Comment 1832 1904 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B212 -> B228 falseDestination: B212 -> B214  <||@
  Comment 1838 block B214 null  <||@
  Comment 1838 1910 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1838 1912 r10|QWORD = MOVE stack:80|QWORD moveKind: QWORD  <||@
  Comment 1843 1914 rdi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 1847 1916 xmm0|V128_DWORD[.   ] = H r13|DWORD[.]  <||@
  Comment 1852 1918 xmm0|V256_DWORD[........] = VPBROADCASTD xmm0|V128_DWORD[.   ] nZ: YMM  <||@
  Comment 1857 1920 rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD  <||@
  Comment 1861 1922 TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1864 1928 rdx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1871 1924 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B214 -> B219 falseDestination: B214 -> B217  <||@
  Comment 1877 block B219 null  <||@
  Comment 1877 1952 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1877 1954 rsi|QWORD = LEA [r10|QWORD - 4] size: QWORD  <||@
  Comment 1881 1956 CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1884 1958 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B219 -> B222 falseDestination: B219 -> B221  <||@
  Comment 1890 block B221 null  <||@
  Comment 1890 1964 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1890 1966 xmm1|V128_DWORD[....] = VMOVE xmm0|V256_DWORD[........]  <||@
  Comment 1894 1968 J (address: [rdi|QWORD[.] + rdx|QWORD * 4], input: xmm1|V128_DWORD[....]) nZ: XMM oh: VMOVDQU  <||@
  Comment 1899 1970 rsi|QWORD = LEA [rdx|QWORD + 4] size: QWORD  <||@
  Comment 1903 1972 rdx|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1906 1974 JUMP ~[] destination: B221 -> B222  <||@
  Comment 1906 block B222 null  <||@
  Comment 1906 1976 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1906 1978 rsi|QWORD = LEA [r10|QWORD - 2] size: QWORD  <||@
  Comment 1910 1980 CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1913 1982 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B222 -> B225 falseDestination: B222 -> B224  <||@
  Comment 1919 block B224 null  <||@
  Comment 1919 1988 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1919 1990 xmm0|V64_DWORD[..] = VMOVE xmm0|V256_DWORD[........]  <||@
  Comment 1919 1992 J (address: [rdi|QWORD[.] + rdx|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ  <||@
  Comment 1925 1994 rsi|QWORD = LEA [rdx|QWORD + 2] size: QWORD  <||@
  Comment 1929 1996 rdx|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1932 1998 JUMP ~[] destination: B224 -> B225  <||@
  Comment 1932 block B225 null  <||@
  Comment 1932 2000 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1932 2002 CMP (x: rdx|QWORD, y: stack:96|QWORD) size: QWORD  <||@
  Comment 1937 2004 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B225 -> B228 falseDestination: B225 -> B227  <||@
  Comment 1943 block B227 null  <||@
  Comment 1943 2010 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1943 2012 MOV (x: [rdi|QWORD[.] + rdx|QWORD * 4], y: r13|DWORD[.]) size: DWORD  <||@
  Comment 1947 2014 JUMP ~[] destination: B227 -> B228  <||@
  Comment 1947 block B228 null  <||@
  Comment 1947 2016 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1947 2018 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 1950 2020 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B228 -> B229 falseDestination: B228 -> B230  <||@
  Comment 1956 block B230 null  <||@
  Comment 1956 2028 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1956 2030 rdi|DWORD = DEC r14|DWORD size: DWORD  <||@
  Comment 1961 2032 rdi|DWORD = SHL rdi|DWORD y: 2 size: DWORD  <||@
  Comment 1964 2034 rdi|QWORD = MOVSXD rdi|DWORD size: QWORD  <||@
  Comment 1967 2036 rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 1971 2038 rsi|QWORD[.] = ADD (x: rsi|QWORD[.], y: rdi|QWORD) size: QWORD  <||@
  Comment 1974 2040 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1978 2042 rdi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 1982 2044 rdi|QWORD[*] = SHR rdi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1986 2046 rsi|QWORD[*] = SUB (x: rsi|QWORD[*], ~y: rdi|QWORD[*]) size: QWORD  <||@
  Comment 1989 2048 rsi|QWORD[*] = INC rsi|QWORD[*] size: QWORD  <||@
  Comment 1992 2050 r13|QWORD = MOVE stack:56|QWORD moveKind: QWORD  <||@
  Comment 1997 2052 JUMP ~[] destination: B230 -> B231  <||@
  Comment 2002 block B234 loop 13 depth 1 header:2104|LoopBegin  <||@
  Comment 2002 2070 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 2016 2072 rsi|QWORD[*] = DEC rsi|QWORD[*] size: QWORD  <||@
  Comment 2019 2074 rdx|QWORD[*] = ADD (x: rdi|QWORD[*], y: r13|QWORD) size: QWORD  <||@
  Comment 2025 2076 rdx|QWORD[*] = ADD (x: rdx|QWORD[*], y: rsi|QWORD[*]) size: QWORD  <||@
  Comment 2028 2078 MOVB (x: [rdx|QWORD[*]], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 2031 2080 JUMP ~[] destination: B234 -> B231  <||@
  Comment 2031 block B231 loop 13 depth 1 header:2104|LoopBegin  <||@
  Comment 2031 2054 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2031 2056 CMP rsi|QWORD[*] y: 1 size: QWORD  <||@
  Comment 2035 2058 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B231 -> B233 falseDestination: B231 -> B234  <||@
  Comment 2043 block B303 null  <||@
  Comment 2043 2754 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2043 2714 r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 2048 2756 rdi|DWORD[.] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@eef3a58 encoding: base: 0 shift: 3  <||@
  Comment 2055 2758 MOV (x: [r8|QWORD[.] + 20], y: rdi|DWORD[.]) size: DWORD  <||@
  Comment 2059 2760 rsi|QWORD[*] = SHR r8|QWORD[.] y: 9 size: QWORD  <||@
  Comment 2066 2762 MOVB (x: [rsi|QWORD[*] + r13|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 2070 2764 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 2073 2766 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B303 -> B309 falseDestination: B303 -> B305  <||@
  Comment 2079 block B305 null  <||@
  Comment 2079 2772 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2079 2774 CMP (x: rcx|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 2082 2776 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B305 -> B309 falseDestination: B305 -> B307  <||@
  Comment 2088 block B307 null  <||@
  Comment 2088 2782 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2088 2784 r14|DWORD = SUB (x: r14|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 2091 2786 CMP (x: r10|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 2094 2788 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B307 -> B309 falseDestination: B307 -> B310  <||@
  Comment 2100 block B310 null  <||@
  Comment 2100 2802 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2100 2804 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 2102 2806 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B310 -> B311 falseDestination: B310 -> B312  <||@
  Comment 2108 block B312 null  <||@
  Comment 2108 2816 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2108 2818 rax|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2113 2820 rdi|DWORD = MOV [rax|QWORD[.] + 8] size: DWORD  <||@
  Comment 2116 2822 r9|DWORD = MOV [r11|QWORD[.] + 8] size: DWORD  <||@
  Comment 2120 2824 rbx|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 2123 2826 rdx|QWORD = MOV rcx|DWORD size: DWORD  <||@
  Comment 2125 2828 CMP (x: r9|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 2128 2830 BRANCH trueDestinationProbability: 0.6 condition: = trueDestination: B312 -> B313 falseDestination: B312 -> B314  <||@
  Comment 2134 block B313 null  <||@
  Comment 2134 2832 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2134 2834 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2134 2836 r11|QWORD[*] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 2134 2838 rdi|QWORD = LEA [rax|QWORD[*] + 16] size: QWORD  <||@
  Comment 2138 2840 rsi|QWORD = LEA [r11|QWORD[*] + rbx|QWORD * 4 + 16] size: QWORD  <||@
  Comment 2143 2842 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: ObjectArraycopyKillAny(Word,Word,Word)void@0x106813120:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 2143 {Field[name=StubRoutines::_oop_arraycopy, type=address, offset=0, address=0x105a7dc90, value=0x106813120]:0x106813120}  <||@
  Comment 2149 2844 r14|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 2154 2846 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2159 2848 JUMP ~[] destination: B313 -> B317  <||@
  Comment 2159 block B317 null  <||@
  Comment 2159 2910 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2159 2912 rax|DWORD = ADD (x: r14|DWORD, ~y: [rsi|QWORD[.] + 16]) size: DWORD  <||@
  Comment 2165 2914 MOV (x: [rsi|QWORD[.] + 16], y: rax|DWORD) size: DWORD  <||@
  Comment 2168 2916 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 2171 2918 rax|DWORD = SETCC condition: !=  <||@
  Comment 2177 2920 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 2186 12  <||@
  Comment 2196 block B266 null  <||@
  Comment 2196 2460 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2196 2462 rcx|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 2200 2464 r8|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2205 2466 JUMP ~[] destination: B266 -> B281  <||@
  Comment 2210 block B282 null  <||@
  Comment 2210 2592 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2210 2594 rdx|QWORD[.] = LEA [r11|QWORD[.] + rdi|QWORD * 4 + 16] size: QWORD  <||@
  Comment 2215 2596 rsi|QWORD = SUB (x: rsi|QWORD, ~y: rdi|QWORD) size: QWORD  <||@
  Comment 2218 2598 rdi|QWORD = LEA [rsi|QWORD - 8] size: QWORD  <||@
  Comment 2222 2600 TEST (x: rdi|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 2225 2602 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B282 -> B283 falseDestination: B282 -> B284  <||@
  Comment 2231 block B283 null  <||@
  Comment 2231 2604 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2231 2606 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2238 2608 JUMP ~[] destination: B283 -> B287  <||@
  Comment 2238 block B287 null  <||@
  Comment 2238 2632 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2238 2634 rdi|QWORD = LEA [rsi|QWORD - 4] size: QWORD  <||@
  Comment 2242 2636 CMP (x: r10|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 2245 2638 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B287 -> B290 falseDestination: B287 -> B289  <||@
  Comment 2251 block B289 null  <||@
  Comment 2251 2644 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2251 2646 xmm0|V128_DWORD[....] = L oc: SIMD<null,null,null,null>  <||@
  Comment 2255 2648 J (address: [rdx|QWORD[.] + r10|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU  <||@
  Comment 2261 2650 rdi|QWORD = LEA [r10|QWORD + 4] size: QWORD  <||@
  Comment 2265 2652 r10|QWORD = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 2268 2654 JUMP ~[] destination: B289 -> B290  <||@
  Comment 2268 block B290 null  <||@
  Comment 2268 2656 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2268 2658 rdi|QWORD = LEA [rsi|QWORD - 2] size: QWORD  <||@
  Comment 2272 2660 CMP (x: r10|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 2275 2662 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B290 -> B293 falseDestination: B290 -> B292  <||@
  Comment 2281 block B292 null  <||@
  Comment 2281 2668 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2281 2670 xmm0|V64_DWORD[..] = L oc: SIMD<null,null>  <||@
  Comment 2285 2672 J (address: [rdx|QWORD[.] + r10|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ  <||@
  Comment 2291 2674 rdi|QWORD = LEA [r10|QWORD + 2] size: QWORD  <||@
  Comment 2295 2676 r10|QWORD = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 2298 2678 JUMP ~[] destination: B292 -> B293  <||@
  Comment 2298 block B293 null  <||@
  Comment 2298 2680 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2298 2682 rsi|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 2301 2684 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 2304 2686 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B293 -> B298 falseDestination: B293 -> B295  <||@
  Comment 2310 block B295 null  <||@
  Comment 2310 2692 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2310 2694 MOV (x: [rdx|QWORD[.] + r10|QWORD * 4], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 2314 2696 JUMP ~[] destination: B295 -> B298  <||@
  Comment 2319 block B25 null  <||@
  Comment 2319 262 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2319 264 xmm0|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null>  <||@
  Comment 2323 266 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2330 268 JUMP ~[] destination: B25 -> B26  <||@
  Comment 2330 block B26 loop 1 depth 1 header:2755|LoopBegin  <||@
  Comment 2330 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 2336 272 J (address: [r8|QWORD[.] + r9|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU  <||@
  Comment 2342 274 r9|QWORD = LEA [r9|QWORD + 8] size: QWORD  <||@
  Comment 2346 276 CMP (x: r9|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 2349 278 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B26 -> B28 falseDestination: B26 -> B26  <||@
  Comment 2356 block B11 loop 0 depth 1 header:2701|LoopBegin  <||@
  Comment 2356 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 2368 154 xmm0|V256_DWORD[........] = H [r9|QWORD[*] + rbx|QWORD * 4] nZ: YMM oh: VMOVDQU  <||@
  Comment 2374 156 J (address: [r8|QWORD[.] + rbx|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU  <||@
  Comment 2380 158 rbx|QWORD = LEA [rbx|QWORD + 8] size: QWORD  <||@
  Comment 2384 160 CMP (x: rbx|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 2387 162 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B11 -> B13 falseDestination: B11 -> B11  <||@
  Comment 2394 block B314 null  <||@
  Comment 2394 2850 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2394 2852 r8|QWORD = MOV [r9|DWORD * 8 + 232] size: QWORD  <||@
  Comment 2402 2854 rdi|DWORD = MOV [r8|QWORD + 12] size: DWORD  <||@
  Comment 2406 2856 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2409 2858 rcx|QWORD[*] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 2412 2860 r9|QWORD = MOVSXD rdi|DWORD size: QWORD  <||@
  Comment 2415 2862 rdi|QWORD = LEA [rsi|QWORD[*] + 16] size: QWORD  <||@
  Comment 2419 2864 rsi|QWORD = LEA [rcx|QWORD[*] + rbx|QWORD * 4 + 16] size: QWORD  <||@
  Comment 2424 2866 rcx|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 2427 2868 stack:56|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 2432 2870 rax|DWORD = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: ObjectCheckcast(Word,Word,Word,Word,Word)int@0x1068133a0:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 2432 {Field[name=StubRoutines::_checkcast_arraycopy, type=address, offset=0, address=0x105aa7b78, value=0x1068133a0]:0x1068133a0}  <||@
  Comment 2438 2872 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 2440 2874 BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B314 -> B315 falseDestination: B314 -> B316  <||@
  Comment 2446 block B315 null  <||@
  Comment 2446 2876 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2446 2878 r14|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 2451 2880 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2456 2882 JUMP ~[] destination: B315 -> B317  <||@
  Comment 2461 block B80 null  <||@
  Comment 2461 720 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2461 686 rdi|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD  <||@
  Comment 2465 722 rdx|DWORD = MOV [rdi|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 2472 724 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<AbstractList.listIterator(int)>}  <||@
  Comment 2472 {meta{HotSpotMethod<AbstractList.listIterator(int)>}}  <||@
  Comment 2482 726 CMP (x: rsi|QWORD, y: [rdx|DWORD * 8 + 696]) size: QWORD  <||@
  Comment 2490 728 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B195  <||@
  Comment 2496 block B81 null  <||@
  Comment 2496 730 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2496 732 CMP rdx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}  <||@
  Comment 2496 {meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}}  <||@
  Comment 2502 738 rsi|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 2506 734 BRANCH trueDestinationProbability: 0.5468793050355748 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B85  <||@
  Comment 2512 block B82 null  <||@
  Comment 2512 736 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2512 740 rbp|DWORD[.] = MOV [rdi|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 2519 742 CMP (x: rsi|DWORD, y: [rbp|DWORD[.] * 8 + 12]) size: DWORD state [bci:0]  <||@
  Comment 2519 [rax:0, rdi:0, stack:68, stack:80, stack:88]at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |-  |-   <||@
  Comment 2519 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2526 744 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B82 -> B83 falseDestination: B82 -> B93  <||@
  Comment 2532 block B93 null  <||@
  Comment 2532 820 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2532 822 rbp|QWORD = MOVSXD rsi|DWORD size: QWORD  <||@
  Comment 2535 824 CMP rdx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}  <||@
  Comment 2535 {meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}}  <||@
  Comment 2541 826 BRANCH trueDestinationProbability: 0.9304948647614187 condition: = trueDestination: B93 -> B94 falseDestination: B93 -> B135  <||@
  Comment 2547 block B94 null  <||@
  Comment 2547 828 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2547 830 rdx|DWORD[.] = MOV [rdi|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 2554 832 TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 2556 834 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B94 -> B95 falseDestination: B94 -> B96  <||@
  Comment 2562 block B96 null  <||@
  Comment 2562 850 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2562 852 CMP r14|DWORD y: 1 size: DWORD  <||@
  Comment 2566 858 stack:80|QWORD = MOVE rbx|QWORD moveKind: QWORD  <||@
  Comment 2571 854 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B96 -> B101 falseDestination: B96 -> B98  <||@
  Comment 2577 block B98 null  <||@
  Comment 2577 862 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2577 866 rdi|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 2584 868 r13|QWORD = ADD (x: rbp|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 2590 870 rbx|QWORD = MOV rdi|DWORD size: DWORD  <||@
  Comment 2592 872 CMP (x: rbx|QWORD, y: r13|QWORD) size: QWORD  <||@
  Comment 2595 874 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B98 -> B99 falseDestination: B98 -> B134  <||@
  Comment 2601 block B99 null  <||@
  Comment 2601 876 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2601 878 CMP (x: rdi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 2603 880 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B99 -> B101 falseDestination: B99 -> B133  <||@
  Comment 2609 block B101 null  <||@
  Comment 2609 886 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2609 888 CMP r14|DWORD y: 1 size: DWORD  <||@
  Comment 2613 890 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B101 -> B105 falseDestination: B101 -> B103  <||@
  Comment 2619 block B103 null  <||@
  Comment 2619 896 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2619 898 CMP (x: r10|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 2622 900 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B103 -> B105 falseDestination: B103 -> B132  <||@
  Comment 2628 block B105 null  <||@
  Comment 2628 906 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2628 908 CMP r14|DWORD y: 1 size: DWORD  <||@
  Comment 2632 910 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B105 -> B121 falseDestination: B105 -> B107  <||@
  Comment 2638 block B107 null  <||@
  Comment 2638 916 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2638 918 r10|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 2642 920 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@eef3a58 encoding: base: 0 shift: 3  <||@
  Comment 2646 922 rdx|QWORD[.] = LEA [rdx|QWORD[.] + rbp|QWORD * 4 + 16] size: QWORD  <||@
  Comment 2651 924 TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 2654 930 rbx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2661 926 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B107 -> B112 falseDestination: B107 -> B110  <||@
  Comment 2667 block B112 null  <||@
  Comment 2667 956 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2667 958 CMP (x: rbx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 2670 960 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B112 -> B115 falseDestination: B112 -> B114  <||@
  Comment 2676 block B114 null  <||@
  Comment 2676 966 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2676 968 xmm0|V128_DWORD[....] = H [rdx|QWORD[.] + rbx|QWORD * 4] nZ: XMM oh: VMOVDQU  <||@
  Comment 2681 970 J (address: [r10|QWORD[.] + rbx|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU  <||@
  Comment 2687 972 rcx|QWORD = LEA [rbx|QWORD + 4] size: QWORD  <||@
  Comment 2691 974 rbx|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 2694 976 JUMP ~[] destination: B114 -> B115  <||@
  Comment 2694 block B115 null  <||@
  Comment 2694 978 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2694 980 CMP (x: rbx|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 2697 982 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B115 -> B118 falseDestination: B115 -> B117  <||@
  Comment 2703 block B117 null  <||@
  Comment 2703 988 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2703 990 xmm0|V64_DWORD[..] = H [rdx|QWORD[.] + rbx|QWORD * 4] nZ: XMM oh: VMOVQ  <||@
  Comment 2709 992 J (address: [r10|QWORD[.] + rbx|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ  <||@
  Comment 2715 994 rcx|QWORD = LEA [rbx|QWORD + 2] size: QWORD  <||@
  Comment 2719 996 rbx|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 2722 998 JUMP ~[] destination: B117 -> B118  <||@
  Comment 2722 block B118 null  <||@
  Comment 2722 1000 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2722 1002 CMP (x: rbx|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 2725 1004 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B118 -> B121 falseDestination: B118 -> B120  <||@
  Comment 2731 block B120 null  <||@
  Comment 2731 1010 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2731 1012 rdx|DWORD[.] = MOV [rdx|QWORD[.] + rbx|QWORD * 4] size: DWORD  <||@
  Comment 2734 1014 MOV (x: [r10|QWORD[.] + rbx|QWORD * 4], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 2738 1016 JUMP ~[] destination: B120 -> B121  <||@
  Comment 2738 block B121 null  <||@
  Comment 2738 1018 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2738 1020 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 2741 1022 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B121 -> B122 falseDestination: B121 -> B123  <||@
  Comment 2747 block B123 null  <||@
  Comment 2747 1030 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2747 1032 rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 2751 1034 rdx|QWORD[.] = ADD (x: rdx|QWORD[.], y: stack:80|QWORD) size: QWORD  <||@
  Comment 2756 1036 rdx|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD  <||@
  Comment 2760 1038 rcx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 2764 1040 rcx|QWORD[*] = SHR rcx|QWORD[.] y: 9 size: QWORD  <||@
  Comment 2768 1042 rdx|QWORD[*] = SUB (x: rdx|QWORD[*], ~y: rcx|QWORD[*]) size: QWORD  <||@
  Comment 2771 1044 rdx|QWORD[*] = INC rdx|QWORD[*] size: QWORD  <||@
  Comment 2774 1046 r13|QWORD = MOVE stack:56|QWORD moveKind: QWORD  <||@
  Comment 2779 1048 JUMP ~[] destination: B123 -> B124  <||@
  Comment 2784 block B130 loop 6 depth 1 header:1983|LoopBegin  <||@
  Comment 2784 1100 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 2784 1102 rdx|QWORD[*] = DEC rdx|QWORD[*] size: QWORD  <||@
  Comment 2787 1104 r10|QWORD[*] = ADD (x: rcx|QWORD[*], y: r13|QWORD) size: QWORD  <||@
  Comment 2793 1106 r10|QWORD[*] = ADD (x: r10|QWORD[*], y: rdx|QWORD[*]) size: QWORD  <||@
  Comment 2796 1108 MOVB (x: [r10|QWORD[*]], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 2799 1110 JUMP ~[] destination: B130 -> B124  <||@
  Comment 2799 block B124 loop 6 depth 1 header:1983|LoopBegin  <||@
  Comment 2799 1050 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2799 1052 CMP rdx|QWORD[*] y: 1 size: QWORD  <||@
  Comment 2803 1054 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B124 -> B126 falseDestination: B124 -> B130  <||@
  Comment 2811 block B122 null  <||@
  Comment 2811 1024 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2811 1026 r13|QWORD = MOVE stack:56|QWORD moveKind: QWORD  <||@
  Comment 2816 1028 JUMP ~[] destination: B122 -> B126  <||@
  Comment 2816 block B126 null  <||@
  Comment 2816 1060 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2816 1062 rcx|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 2821 1064 rdx|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 2823 1066 rsi|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2828 1068 JUMP ~[] destination: B126 -> B127  <||@
  Comment 2833 block B128 loop 7 depth 1 header:215|LoopBegin  <||@
  Comment 2833 1076 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 2848 1078 rcx|DWORD = INC rdx|DWORD size: DWORD  <||@
  Comment 2852 1080 rsi|DWORD = INC rsi|DWORD size: DWORD  <||@
  Comment 2854 1082 stack:84|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 2858 1084 rcx|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 2860 1086 rdx|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 2864 1088 JUMP ~[] destination: B128 -> B127  <||@
  Comment 2864 block B127 loop 7 depth 1 header:215|LoopBegin  <||@
  Comment 2864 1070 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 2864 1072 CMP (x: r14|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 2867 1074 BRANCH trueDestinationProbability: 0.7836641850436589 condition: > trueDestination: B127 -> B128 falseDestination: B127 -> B129  <||@
  Comment 2869 block B129 null  <||@
  Comment 2869 1090 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2869 1092 r11|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 2872 1094 r10|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 2875 1096 rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2880 1098 JUMP ~[] destination: B129 -> B190  <||@
  Comment 2880 block B190 null  <||@
  Comment 2880 1670 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 2880 1672 rsi|DWORD = MOV [rdx|QWORD[.] + 16] size: DWORD  <||@
  Comment 2883 1674 rcx|DWORD = SUB (x: r10|DWORD, ~y: rsi|DWORD) size: DWORD  <||@
  Comment 2888 1676 CMP (x: rcx|DWORD, y: [rdx|QWORD[.] + 20]) size: DWORD  <||@
  Comment 2891 1678 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B190 -> B191 falseDestination: B190 -> B192  <||@
  Comment 2897 block B192 null  <||@
  Comment 2897 1696 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2897 1698 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2902 1700 JUMP ~[] destination: B192 -> B239  <||@
  Comment 2907 block B233 null  <||@
  Comment 2907 2064 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2907 2066 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2912 2068 JUMP ~[] destination: B233 -> B239  <||@
  Comment 2917 block B229 null  <||@
  Comment 2917 2022 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2917 2024 r13|QWORD = MOVE stack:56|QWORD moveKind: QWORD  <||@
  Comment 2922 2026 JUMP ~[] destination: B229 -> B233  <||@
  Comment 2924 block B85 null  <||@
  Comment 2924 762 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2924 766 CMP rdx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Collections$EmptyList;, resolved>;compressed}  <||@
  Comment 2924 {meta{HotSpotType<Ljava/util/Collections$EmptyList;, resolved>;compressed}}  <||@
  Comment 2930 768 BRANCH trueDestinationProbability: 0.5024679876958296 condition: = trueDestination: B85 -> B86 falseDestination: B85 -> B89  <||@
  Comment 2936 block B86 null  <||@
  Comment 2936 770 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2936 772 CMP rsi|DWORD y: 1 size: DWORD  <||@
  Comment 2939 774 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B86 -> B93 falseDestination: B86 -> B88  <||@
  Comment 2950 block B89 null  <||@
  Comment 2950 792 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2950 794 CMP rdx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}  <||@
  Comment 2950 {meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}}  <||@
  Comment 2956 796 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B89 -> B90 falseDestination: B89 -> B194  <||@
  Comment 2962 block B90 null  <||@
  Comment 2962 798 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2962 800 CMP (x: rsi|DWORD, y: [rdi|DWORD[.] * 8 + 16]) size: DWORD  <||@
  Comment 2969 802 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B90 -> B91 falseDestination: B90 -> B93  <||@
  Comment 2980 block B284 null  <||@
  Comment 2980 2610 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2980 2612 xmm0|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null>  <||@
  Comment 2984 2614 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2991 2616 JUMP ~[] destination: B284 -> B285  <||@
  Comment 2991 block B285 loop 15 depth 1 header:2647|LoopBegin  <||@
  Comment 2991 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 2992 2620 J (address: [rdx|QWORD[.] + r10|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU  <||@
  Comment 2998 2622 r10|QWORD = LEA [r10|QWORD + 8] size: QWORD  <||@
  Comment 3002 2624 CMP (x: r10|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 3005 2626 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B285 -> B287 falseDestination: B285 -> B285  <||@
  Comment 3012 block B270 loop 14 depth 1 header:2593|LoopBegin  <||@
  Comment 3012 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 3024 2502 xmm0|V256_DWORD[........] = H [rdx|QWORD[*] + rbx|QWORD * 4] nZ: YMM oh: VMOVDQU  <||@
  Comment 3029 2504 J (address: [rsi|QWORD[.] + rbx|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU  <||@
  Comment 3034 2506 rbx|QWORD = LEA [rbx|QWORD + 8] size: QWORD  <||@
  Comment 3038 2508 CMP (x: rbx|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 3041 2510 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B270 -> B272 falseDestination: B270 -> B270  <||@
  Comment 3048 block B311 null  <||@
  Comment 3048 2808 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3048 2810 r14|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 3051 2812 rsi|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 3054 2814 JUMP ~[] destination: B311 -> B317  <||@
  Comment 3059 block B63 null  <||@
  Comment 3059 594 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3059 596 xmm0|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null>  <||@
  Comment 3063 598 rdx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 3070 600 JUMP ~[] destination: B63 -> B64  <||@
  Comment 3070 block B64 loop 3 depth 1 header:2485|LoopBegin  <||@
  Comment 3070 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 3072 604 J (address: [rsi|QWORD[.] + rdx|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU  <||@
  Comment 3077 606 rdx|QWORD = LEA [rdx|QWORD + 8] size: QWORD  <||@
  Comment 3081 608 CMP (x: rdx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 3084 610 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B64 -> B66 falseDestination: B64 -> B64  <||@
  Comment 3091 block B110 loop 5 depth 1 header:2362|LoopBegin  <||@
  Comment 3091 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 3104 942 xmm0|V256_DWORD[........] = H [rdx|QWORD[.] + rbx|QWORD * 4] nZ: YMM oh: VMOVDQU  <||@
  Comment 3109 944 J (address: [r10|QWORD[.] + rbx|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU  <||@
  Comment 3115 946 rbx|QWORD = LEA [rbx|QWORD + 8] size: QWORD  <||@
  Comment 3119 948 CMP (x: rbx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 3122 950 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B110 -> B112 falseDestination: B110 -> B110  <||@
  Comment 3129 block B217 loop 12 depth 1 header:2539|LoopBegin  <||@
  Comment 3129 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 3136 1940 J (address: [rdi|QWORD[.] + rdx|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU  <||@
  Comment 3141 1942 rdx|QWORD = LEA [rdx|QWORD + 8] size: QWORD  <||@
  Comment 3145 1944 CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 3148 1946 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B217 -> B219 falseDestination: B217 -> B217  <||@
  Comment 3155 block B58 null  <||@
  Comment 3155 544 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3155 540 stack:68|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 3160 546 rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>}  <||@
  Comment 3160 {meta{HotSpotType<[Ljava/lang/Object;, resolved>}}  <||@
  Comment 3170 548 rsi|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 3173 550 rdx|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 3176 552 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 3181 554 r14|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 3184 556 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 3184 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 3189 [stack:68, stack:80, stack:88]at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |-  |-   <||@
  Comment 3190 558 JUMP ~[] destination: B58 -> B59  <||@
  Comment 3195 block B211 null  <||@
  Comment 3195 1886 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3195 1880 stack:96|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 3200 1882 stack:80|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 3205 1888 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>}  <||@
  Comment 3205 {meta{HotSpotType<[Ljava/lang/Object;, resolved>}}  <||@
  Comment 3215 1890 rdx|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 3218 1892 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 3223 1894 r13|DWORD[.] = MOVE r8|DWORD[.] moveKind: DWORD  <||@
  Comment 3226 1896 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 3226 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 3231 [r13:0, stack:80, stack:88]at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |-  |-   <||@
  Comment 3232 1898 JUMP ~[] destination: B211 -> B212  <||@
  Comment 3237 block B135 null  <||@
  Comment 3237 1158 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3237 1160 stack:80|QWORD = MOVE rbx|QWORD moveKind: QWORD  <||@
  Comment 3242 1162 CMP rdx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}  <||@
  Comment 3242 {meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}}  <||@
  Comment 3248 1164 BRANCH trueDestinationProbability: 0.9931451844203518 condition: = trueDestination: B135 -> B136 falseDestination: B135 -> B177  <||@
  Comment 3254 block B136 null  <||@
  Comment 3254 1166 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3254 1168 rdi|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD  <||@
  Comment 3258 1170 rdx|DWORD[.] = MOV [rdi|DWORD[.] * 8 + 28] size: DWORD  <||@
  Comment 3265 1172 TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 3267 1174 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B136 -> B137 falseDestination: B136 -> B138  <||@
  Comment 3273 block B138 null  <||@
  Comment 3273 1190 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3273 1192 CMP r14|DWORD y: 1 size: DWORD  <||@
  Comment 3277 1198 stack:96|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 3282 1200 stack:104|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 3287 1194 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B138 -> B143 falseDestination: B138 -> B140  <||@
  Comment 3293 block B140 null  <||@
  Comment 3293 1204 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3293 1210 rdi|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 3300 1212 r8|QWORD = ADD (x: rbp|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 3306 1214 r9|QWORD = MOV rdi|DWORD size: DWORD  <||@
  Comment 3309 1216 CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 3312 1218 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B140 -> B141 falseDestination: B140 -> B176  <||@
  Comment 3318 block B141 null  <||@
  Comment 3318 1220 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3318 1222 CMP (x: rdi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 3320 1224 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B141 -> B143 falseDestination: B141 -> B175  <||@
  Comment 3326 block B143 null  <||@
  Comment 3326 1230 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3326 1232 CMP r14|DWORD y: 1 size: DWORD  <||@
  Comment 3330 1234 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B143 -> B147 falseDestination: B143 -> B145  <||@
  Comment 3336 block B145 null  <||@
  Comment 3336 1240 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3336 1242 CMP (x: r10|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 3339 1244 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B145 -> B147 falseDestination: B145 -> B174  <||@
  Comment 3345 block B147 null  <||@
  Comment 3345 1250 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3345 1252 CMP r14|DWORD y: 1 size: DWORD  <||@
  Comment 3349 1254 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B147 -> B163 falseDestination: B147 -> B149  <||@
  Comment 3355 block B149 null  <||@
  Comment 3355 1260 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3355 1262 r10|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 3359 1264 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@eef3a58 encoding: base: 0 shift: 3  <||@
  Comment 3363 1266 r8|QWORD[.] = LEA [rdx|QWORD[.] + rbp|QWORD * 4 + 16] size: QWORD  <||@
  Comment 3368 1268 TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 3371 1274 rdx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 3378 1270 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B149 -> B154 falseDestination: B149 -> B152  <||@
  Comment 3384 block B154 null  <||@
  Comment 3384 1304 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3384 1276 r9|QWORD = MOVE stack:96|QWORD moveKind: QWORD  <||@
  Comment 3389 1306 CMP (x: rdx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 3392 1308 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B154 -> B157 falseDestination: B154 -> B156  <||@
  Comment 3398 block B156 null  <||@
  Comment 3398 1318 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3398 1320 xmm0|V128_DWORD[....] = H [r8|QWORD[.] + rdx|QWORD * 4] nZ: XMM oh: VMOVDQU  <||@
  Comment 3404 1322 J (address: [r10|QWORD[.] + rdx|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU  <||@
  Comment 3410 1324 rdx|QWORD = LEA [rdx|QWORD + 4] size: QWORD  <||@
  Comment 3414 1330 JUMP ~[] destination: B156 -> B157  <||@
  Comment 3414 block B157 null  <||@
  Comment 3414 1332 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3414 1326 rcx|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 3417 1328 rdx|QWORD = MOVE stack:104|QWORD moveKind: QWORD  <||@
  Comment 3422 1334 CMP (x: rcx|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 3425 1336 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B157 -> B160 falseDestination: B157 -> B159  <||@
  Comment 3431 block B159 null  <||@
  Comment 3431 1342 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3431 1344 xmm0|V64_DWORD[..] = H [r8|QWORD[.] + rcx|QWORD * 4] nZ: XMM oh: VMOVQ  <||@
  Comment 3437 1346 J (address: [r10|QWORD[.] + rcx|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ  <||@
  Comment 3443 1348 rdx|QWORD = LEA [rcx|QWORD + 2] size: QWORD  <||@
  Comment 3447 1350 rcx|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 3450 1352 JUMP ~[] destination: B159 -> B160  <||@
  Comment 3450 block B160 null  <||@
  Comment 3450 1354 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3450 1356 CMP (x: rcx|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 3453 1358 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B160 -> B163 falseDestination: B160 -> B162  <||@
  Comment 3459 block B162 null  <||@
  Comment 3459 1364 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3459 1366 rdx|DWORD[.] = MOV [r8|QWORD[.] + rcx|QWORD * 4] size: DWORD  <||@
  Comment 3463 1368 MOV (x: [r10|QWORD[.] + rcx|QWORD * 4], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 3467 1370 JUMP ~[] destination: B162 -> B163  <||@
  Comment 3467 block B163 null  <||@
  Comment 3467 1372 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3467 1374 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 3470 1376 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B163 -> B164 falseDestination: B163 -> B165  <||@
  Comment 3476 block B165 null  <||@
  Comment 3476 1384 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3476 1388 rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 3480 1390 rdx|QWORD[.] = ADD (x: rdx|QWORD[.], y: rbx|QWORD) size: QWORD  <||@
  Comment 3483 1392 rdx|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD  <||@
  Comment 3487 1394 rcx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 3491 1396 rcx|QWORD[*] = SHR rcx|QWORD[.] y: 9 size: QWORD  <||@
  Comment 3495 1398 rdx|QWORD[*] = SUB (x: rdx|QWORD[*], ~y: rcx|QWORD[*]) size: QWORD  <||@
  Comment 3498 1400 rdx|QWORD[*] = INC rdx|QWORD[*] size: QWORD  <||@
  Comment 3501 1404 JUMP ~[] destination: B165 -> B166  <||@
  Comment 3506 block B172 loop 9 depth 1 header:2013|LoopBegin  <||@
  Comment 3506 1456 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 3520 1458 rdx|QWORD[*] = DEC rdx|QWORD[*] size: QWORD  <||@
  Comment 3523 1460 r8|QWORD[*] = ADD (x: rcx|QWORD[*], y: r13|QWORD) size: QWORD  <||@
  Comment 3529 1462 r8|QWORD[*] = ADD (x: r8|QWORD[*], y: rdx|QWORD[*]) size: QWORD  <||@
  Comment 3532 1464 MOVB (x: [r8|QWORD[*]], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 3535 1466 JUMP ~[] destination: B172 -> B166  <||@
  Comment 3535 block B166 loop 9 depth 1 header:2013|LoopBegin  <||@
  Comment 3535 1406 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3535 1408 CMP rdx|QWORD[*] y: 1 size: QWORD  <||@
  Comment 3539 1410 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B166 -> B168 falseDestination: B166 -> B172  <||@
  Comment 3547 block B246 null  <||@
  Comment 3547 2186 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3547 2188 rsi|DWORD = MOVE input: int[-270433|0xfffffffffffbdf9f]  <||@
  Comment 3552 2190 JUMP ~[] destination: B246 -> B321  <||@
  Comment 3552 block B321 null  <||@
  Comment 3552 2946 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3552 2948 MOV (x: [r15|QWORD + 668], y: rsi|DWORD) size: DWORD  <||@
  Comment 3559 2950 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3566 2952 DEOPT info [bci:10, 9, 17]  <||@
  Comment 3566 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3571 [stack:80, stack:88]at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:238) [bci: 10, duringCall: false, rethrow: false]
              |0                  |1         
     locals:  |stack:40|QWORD[.]  |rdi|DWORD 
  at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17, duringCall: true, rethrow: false]
              |0                  |1  |2                  |3         
     locals:  |stack:40|QWORD[.]  |-  |stack:48|QWORD[.]  |r14|DWORD   <||@
  Comment 3572 block B248 null  <||@
  Comment 3572 2198 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3572 2200 rsi|DWORD = MOVE input: int[-270433|0xfffffffffffbdf9f]  <||@
  Comment 3577 2202 JUMP ~[] destination: B248 -> B321  <||@
  Comment 3579 block B250 null  <||@
  Comment 3579 2212 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3579 2214 rsi|DWORD = MOVE input: int[-270433|0xfffffffffffbdf9f]  <||@
  Comment 3584 2216 JUMP ~[] destination: B250 -> B321  <||@
  Comment 3586 block B238 null  <||@
  Comment 3586 2108 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3586 2110 rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 3591 2112 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Collection.toArray()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1]  <||@
  Comment 3591 6  <||@
  Comment 3607 {HotSpotMethod<Collection.toArray()>}  <||@
  Comment 3612 [stack:88]at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:40|QWORD[.]  |-  |-  |-   <||@
  Comment 3613 2114 r14|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD state [bci:6]  <||@
  Comment 3613 [rax:0, stack:88]at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 6, duringCall: false, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:40|QWORD[.]  |-  |-  |- 
     stack:   |Object[null]       |   |   |    <||@
  Comment 3613 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 3617 2116 r13|QWORD = MOVE stack:56|QWORD moveKind: QWORD  <||@
  Comment 3622 2118 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3627 2120 JUMP ~[] destination: B238 -> B239  <||@
  Comment 3632 block B4 null  <||@
  Comment 3632 62 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3632 64 r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: -) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@eef3a58 encoding: base: 0 shift: 3  <||@
  Comment 3636 66 rsi|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 3639 68 rdx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 3642 70 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 3647 72 r13|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 3650 74 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 3650 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 3655 [r14:0, stack:80, stack:88]at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |-  |-   <||@
  Comment 3656 76 rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 3659 78 r10|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 3662 80 r13|QWORD = MOVE stack:56|QWORD moveKind: QWORD  <||@
  Comment 3667 82 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3672 84 JUMP ~[] destination: B4 -> B6  <||@
  Comment 3677 block B164 null  <||@
  Comment 3677 1378 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3677 1382 JUMP ~[] destination: B164 -> B168  <||@
  Comment 3677 block B168 null  <||@
  Comment 3677 1416 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3677 1418 rcx|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 3682 1420 rdx|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 3684 1422 rsi|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 3689 1424 JUMP ~[] destination: B168 -> B169  <||@
  Comment 3694 block B170 loop 10 depth 1 header:669|LoopBegin  <||@
  Comment 3694 1432 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 3696 1434 rcx|DWORD = INC rdx|DWORD size: DWORD  <||@
  Comment 3700 1436 rsi|DWORD = INC rsi|DWORD size: DWORD  <||@
  Comment 3702 1438 stack:84|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 3706 1440 rcx|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 3708 1442 rdx|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 3712 1444 JUMP ~[] destination: B170 -> B169  <||@
  Comment 3712 block B169 loop 10 depth 1 header:669|LoopBegin  <||@
  Comment 3712 1426 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 3712 1428 CMP (x: r14|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 3715 1430 BRANCH trueDestinationProbability: 0.7836641850436589 condition: > trueDestination: B169 -> B170 falseDestination: B169 -> B171  <||@
  Comment 3717 block B171 null  <||@
  Comment 3717 1446 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3717 1448 r11|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 3720 1450 r10|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 3723 1452 rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 3728 1454 JUMP ~[] destination: B171 -> B190  <||@
  Comment 3733 block B257 null  <||@
  Comment 3733 2300 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3733 2302 r10|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD  <||@
  Comment 3738 2304 r14|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 3743 2306 rax|DWORD = NOT rax|DWORD size: DWORD  <||@
  Comment 3745 2308 r8|DWORD = ADD (x: rax|DWORD, y: stack:68|DWORD) size: DWORD  <||@
  Comment 3753 2310 r9|DWORD = SUB (x: r14|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 3759 2312 rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 3764 2314 rdx|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 3766 2316 rcx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 3769 2318 - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD] [] callTarget: HotSpotMethod<System.arraycopy(Object, int, Object, int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:31]  <||@
  Comment 3769 8  <||@
  Comment 3775 {HotSpotMethod<System.arraycopy(Object, int, Object, int, int)>}  <||@
  Comment 3780 [stack:88]at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31, duringCall: true, rethrow: false]
              |0                  |1  |2  |3              
     locals:  |stack:40|QWORD[.]  |-  |-  |stack:64|DWORD   <||@
  Comment 3781 2320 r14|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 3786 2322 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3791 2324 JUMP ~[] destination: B257 -> B258  <||@
  Comment 3796 block B263 null  <||@
  Comment 3796 2392 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3796 2394 stack:60|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 3801 2396 stack:108|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 3805 2398 stack:84|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 3810 2400 r13|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 3813 2402 r11|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: -) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@eef3a58 encoding: base: 0 shift: 3  <||@
  Comment 3817 2404 rsi|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 3820 2406 rdx|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 3823 2408 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 3828 2410 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:10, 9, 17]  <||@
  Comment 3828 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 3833 [stack:44, stack:80, stack:88]at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:238) [bci: 10, duringCall: false, rethrow: false]
              |0                  |1               
     locals:  |stack:40|QWORD[.]  |stack:108|DWORD 
  at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17, duringCall: true, rethrow: false]
              |0                  |1  |2                  |3              
     locals:  |stack:40|QWORD[.]  |-  |stack:48|QWORD[.]  |stack:64|DWORD   <||@
  Comment 3834 2412 r11|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 3837 2414 r9|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 3840 2416 r8|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 3845 2418 r10|DWORD[.] = MOVE stack:84|DWORD[.] moveKind: DWORD  <||@
  Comment 3850 2420 r13|QWORD = MOVE stack:56|QWORD moveKind: QWORD  <||@
  Comment 3855 2422 JUMP ~[] destination: B263 -> B265  <||@
  Comment 3860 block B309 null  <||@
  Comment 3860 2794 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3860 2796 MOV [r15|QWORD + 668] y: -282977 size: DWORD  <||@
  Comment 3871 2798 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3878 2800 DEOPT info [bci:44, 22, 9, 17]  <||@
  Comment 3878 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3883 [stack:80, stack:88]at java.util.ArrayList.grow(ArrayList.java:266) [bci: 44, duringCall: false, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.ArrayList.addAll(ArrayList.java:583) [bci: 17, duringCall: true, rethrow: false]
              |0                  |1  |2                  |3              
     locals:  |stack:40|QWORD[.]  |-  |stack:48|QWORD[.]  |stack:64|DWORD   <||@
  Comment 3884 block B152 loop 8 depth 1 header:2417|LoopBegin  <||@
  Comment 3884 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 3888 1288 xmm0|V256_DWORD[........] = H [r8|QWORD[.] + rdx|QWORD * 4] nZ: YMM oh: VMOVDQU  <||@
  Comment 3894 1290 J (address: [r10|QWORD[.] + rdx|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU  <||@
  Comment 3900 1292 rdx|QWORD = LEA [rdx|QWORD + 8] size: QWORD  <||@
  Comment 3904 1294 CMP (x: rdx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 3907 1296 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B152 -> B154 falseDestination: B152 -> B152  <||@
  Comment 3914 block B316 null  <||@
  Comment 3914 2884 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3914 2886 rcx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 3919 2888 r11|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 3924 2890 r14|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 3929 2892 rax|DWORD = NOT rax|DWORD size: DWORD  <||@
  Comment 3931 2894 r8|DWORD = ADD (x: rax|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 3937 2896 r9|DWORD = SUB (x: r14|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 3943 2898 rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 3948 2900 rdx|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 3950 2902 - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD] [] callTarget: HotSpotMethod<System.arraycopy(Object, int, Object, int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:31]  <||@
  Comment 3950 8  <||@
  Comment 3951 {HotSpotMethod<System.arraycopy(Object, int, Object, int, int)>}  <||@
  Comment 3956 [stack:88]at java.util.ArrayList.addAll(ArrayList.java:584) [bci: 31, duringCall: true, rethrow: false]
              |0                  |1  |2  |3              
     locals:  |stack:40|QWORD[.]  |-  |-  |stack:64|DWORD   <||@
  Comment 3957 2904 r14|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 3962 2906 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3967 2908 JUMP ~[] destination: B316 -> B317  <||@
  Comment 3972 block B177 null  <||@
  Comment 3972 1514 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3972 1516 CMP r14|DWORD y: 1 size: DWORD  <||@
  Comment 3976 1518 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B177 -> B181 falseDestination: B177 -> B179  <||@
  Comment 3982 block B179 null  <||@
  Comment 3982 1524 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3982 1526 CMP (x: r10|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 3985 1528 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B179 -> B181 falseDestination: B179 -> B193  <||@
  Comment 3991 block B181 null  <||@
  Comment 3991 1534 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3991 1536 stack:84|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 3996 1538 stack:96|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 4001 1540 stack:108|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 4009 1542 r11|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 4012 1544 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 4018 1552 JUMP ~[] destination: B181 -> B182  <||@
  Comment 4023 block B183 loop 11 depth 1 header:737|LoopBegin  <||@
  Comment 4023 1560 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 4032 1562 rcx|DWORD = MOV [rdx|QWORD[.] + 16] size: DWORD  <||@
  Comment 4035 1564 rbx|DWORD = MOV [rdx|QWORD[.] + 20] size: DWORD  <||@
  Comment 4038 1566 rdi|DWORD = SUB (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 4043 1568 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@eef3a58 encoding: base: 0 shift: 3  <||@
  Comment 4049 1570 CMP (x: rbx|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 4051 1572 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B183 -> B184 falseDestination: B183 -> B187  <||@
  Comment 4057 block B184 loop 11 depth 1 header:737|LoopBegin  <||@
  Comment 4057 1574 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4057 1576 CMP (x: r8|DWORD, y: [rsi|DWORD[.] * 8 + 12]) size: DWORD  <||@
  Comment 4065 1578 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B184 -> B185 falseDestination: B184 -> B186  <||@
  Comment 4071 block B185 loop 11 depth 1 header:737|LoopBegin  <||@
  Comment 4071 1580 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4071 1582 stack:112|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 4076 1584 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 4079 1586 rdx|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 4082 1588 stack:80|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 4087 1590 stack:116|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 4092 1592 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractList.get(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:14, 11, 39, 1]  <||@
  Comment 4092 7  <||@
  Comment 4103 {HotSpotMethod<AbstractList.get(int)>}  <||@
  Comment 4108 [stack:32, stack:48, stack:68, stack:80, stack:88]at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14, duringCall: true, rethrow: false]
              |0                                                                                                                                                                 |1                |2 
     locals:  |vobject:AbstractList$ListItr:0{cursor=stack:116|DWORD,lastRet=stack:108|DWORD,expectedModCount=stack:64|DWORD,this$0=stack:80|QWORD[.],this$0=stack:80|QWORD[.]}  |stack:116|DWORD  |- 
  at java.util.SubList$1.next(AbstractList.java:707) [bci: 11, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39, duringCall: true, rethrow: false]
              |0                  |1                  |2                                                                                                                                                                                                                                      |3               
     locals:  |-                  |stack:96|QWORD[.]  |vobject:SubList$1:1{val$index=int[0|0x0],i=vobject:AbstractList$ListItr:0{cursor=stack:116|DWORD,lastRet=stack:108|DWORD,expectedModCount=stack:64|DWORD,this$0=stack:80|QWORD[.],this$0=stack:80|QWORD[.]},this$0=stack:48|QWORD[.]}  |stack:112|DWORD 
     stack:   |stack:96|QWORD[.]  |stack:112|DWORD    |                                                                                                                                                                                                                                       |                
  at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:40|QWORD[.]  |-  |-  |-   <||@
  Comment 4109 1594 rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@eef3a58 encoding: base: 0 shift: 3  <||@
  Comment 4113 1596 r10|DWORD = MOVE stack:112|DWORD moveKind: DWORD  <||@
  Comment 4118 1598 r8|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD  <||@
  Comment 4123 1600 MOV (x: [r8|QWORD[.] + r10|DWORD * 4 + 16], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 4128 1602 r11|QWORD[.] = LEA [r8|QWORD[.] + r10|DWORD * 4 + 16] size: QWORD  <||@
  Comment 4133 1604 r11|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD  <||@
  Comment 4137 1606 r13|QWORD = MOVE stack:56|QWORD moveKind: QWORD  <||@
  Comment 4142 1608 MOVB (x: [r11|QWORD[*] + r13|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 4146 1610 r11|DWORD = INC stack:116|DWORD size: DWORD  <||@
  Comment 4154 1612 r10|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 4157 1614 stack:108|DWORD = STACKMOVE (input: stack:116|DWORD, ~backupSlot: stack:32|QWORD) scratch: rax  <||@
  Comment 4175 1616 r14|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 4180 1624 JUMP ~[] destination: B185 -> B182  <||@
  Comment 4180 block B182 loop 11 depth 1 header:737|LoopBegin  <||@
  Comment 4180 1554 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 4180 1546 r8|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 4185 1548 rsi|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD  <||@
  Comment 4189 1550 rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 4194 1556 CMP (x: r14|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 4197 1558 BRANCH trueDestinationProbability: 0.7836641850436589 condition: > trueDestination: B182 -> B183 falseDestination: B182 -> B189  <||@
  Comment 4203 block B189 null  <||@
  Comment 4203 1658 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4203 1660 r10|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 4206 1662 rax|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD  <||@
  Comment 4211 1666 r11|DWORD = MOVE stack:108|DWORD moveKind: DWORD  <||@
  Comment 4216 1668 JUMP ~[] destination: B189 -> B190  <||@
  Comment 4221 block B198 null  <||@
  Comment 4221 1756 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4221 1758 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 4231 1760 r10|DWORD = MOVE input: int[-226323|0xfffffffffffc8bed]  <||@
  Comment 4237 1762 JUMP ~[] destination: B198 -> B237  <||@
  Comment 4237 block B237 null  <||@
  Comment 4237 2100 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 4237 2102 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 4244 2104 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 4251 2106 DEOPT info [bci:0]  <||@
  Comment 4251 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 4256 [rdx:0, rsi:0]at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-   <||@
  Comment 4257 block B236 null  <||@
  Comment 4257 2086 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4257 2088 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1399980118]  <||@
  Comment 4257 {Object[d.a@1399980118]}  <||@
  Comment 4267 2090 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 4270 2092 r10|DWORD = MOVE input: int[-255259|0xfffffffffffc1ae5]  <||@
  Comment 4276 2094 rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 4281 2096 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 4286 2098 JUMP ~[] destination: B236 -> B237  <||@
  Comment 4288 block B186 null  <||@
  Comment 4288 1626 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4288 1628 r9|DWORD = MOVE stack:108|DWORD moveKind: DWORD  <||@
  Comment 4293 1630 rbx|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 4296 1632 r11|DWORD = MOVE input: int[-245779|0xfffffffffffc3fed]  <||@
  Comment 4302 1636 JUMP ~[] destination: B186 -> B188  <||@
  Comment 4302 block B188 null  <||@
  Comment 4302 1650 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 4302 1646 r8|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD  <||@
  Comment 4307 1652 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 4314 1654 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 4321 1656 DEOPT info [bci:15, 1]  <||@
  Comment 4321 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 4326 [rcx:0, r8:0, stack:80, stack:88]at java.util.AbstractCollection.toArray(AbstractCollection.java:138) [bci: 15, duringCall: false, rethrow: false]
              |0  |1            |2                                                                                                                                                                                                               |3         
     locals:  |-  |r8|QWORD[.]  |vobject:SubList$1:0{val$index=int[0|0x0],i=vobject:AbstractList$ListItr:1{cursor=rbx|DWORD,lastRet=r9|DWORD,expectedModCount=stack:64|DWORD,this$0=rcx|QWORD[.],this$0=rcx|QWORD[.]},this$0=stack:48|QWORD[.]}  |r10|DWORD 
  at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:40|QWORD[.]  |-  |-  |-   <||@
  Comment 4327 block B187 null  <||@
  Comment 4327 1638 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4327 1640 r9|DWORD = MOVE stack:108|DWORD moveKind: DWORD  <||@
  Comment 4332 1642 rbx|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 4335 1644 r11|DWORD = MOVE input: int[-245011|0xfffffffffffc42ed]  <||@
  Comment 4341 1648 JUMP ~[] destination: B187 -> B188  <||@
  Comment 4343 block B320 null  <||@
  Comment 4343 2938 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4343 2940 rsi|DWORD = MOVE input: int[-273427|0xfffffffffffbd3ed]  <||@
  Comment 4348 2942 r14|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 4353 2944 JUMP ~[] destination: B320 -> B321  <||@
  Comment 4358 block B193 null  <||@
  Comment 4358 1702 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4358 1704 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1800298093]  <||@
  Comment 4358 {Object[d.a@1800298093]}  <||@
  Comment 4368 1706 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 4371 1708 r10|DWORD = MOVE input: int[-246555|0xfffffffffffc3ce5]  <||@
  Comment 4377 1710 rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 4382 1712 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 4387 1714 JUMP ~[] destination: B193 -> B237  <||@
  Comment 4392 block B134 null  <||@
  Comment 4392 1144 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4392 1146 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1800298093]  <||@
  Comment 4392 {Object[d.a@1800298093]}  <||@
  Comment 4402 1148 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 4405 1150 r10|DWORD = MOVE input: int[-232731|0xfffffffffffc72e5]  <||@
  Comment 4411 1152 rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 4416 1154 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 4421 1156 JUMP ~[] destination: B134 -> B237  <||@
  Comment 4426 block B83 null  <||@
  Comment 4426 746 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4426 748 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 4436 750 r10|DWORD = MOVE input: int[-251411|0xfffffffffffc29ed]  <||@
  Comment 4442 752 rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 4447 754 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 4452 756 JUMP ~[] destination: B83 -> B237  <||@
  Comment 4457 block B191 null  <||@
  Comment 4457 1680 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4457 1682 r8|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 4460 1684 r9|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 4465 1686 r14|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD  <||@
  Comment 4470 1688 r14|QWORD[.] = UNCOMPRESSPOINTER (input: r14|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@eef3a58 encoding: base: 0 shift: 3  <||@
  Comment 4474 1690 MOV [r15|QWORD + 668] y: -249107 size: DWORD  <||@
  Comment 4485 1692 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 4492 1694 DEOPT info [bci:51, 1]  <||@
  Comment 4492 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 4497 [r8:0, r14:0, stack:80, stack:88]at java.util.AbstractCollection.toArray(AbstractCollection.java:143) [bci: 51, duringCall: false, rethrow: false]
              |0  |1            |2                                                                                                                                                                                                          |3 
     locals:  |-  |r8|QWORD[.]  |vobject:SubList$1:0{val$index=int[0|0x0],i=vobject:AbstractList$ListItr:1{cursor=r10|DWORD,lastRet=r11|DWORD,expectedModCount=r9|DWORD,this$0=r14|QWORD[.],this$0=r14|QWORD[.]},this$0=stack:48|QWORD[.]}  |- 
  at java.util.ArrayList.addAll(ArrayList.java:581) [bci: 1, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:40|QWORD[.]  |-  |-  |-   <||@
  Comment 4498 block B91 null  <||@
  Comment 4498 804 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4498 806 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 4508 808 r10|DWORD = MOVE input: int[-252691|0xfffffffffffc24ed]  <||@
  Comment 4514 810 rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 4519 812 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 4524 814 JUMP ~[] destination: B91 -> B237  <||@
  Comment 4529 block B132 null  <||@
  Comment 4529 1116 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4529 1118 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1800298093]  <||@
  Comment 4529 {Object[d.a@1800298093]}  <||@
  Comment 4539 1120 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 4542 1122 r10|DWORD = MOVE input: int[-235291|0xfffffffffffc68e5]  <||@
  Comment 4548 1124 rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 4553 1126 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 4558 1128 JUMP ~[] destination: B132 -> B237  <||@
  Comment 4563 block B175 null  <||@
  Comment 4563 1486 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4563 1488 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1800298093]  <||@
  Comment 4563 {Object[d.a@1800298093]}  <||@
  Comment 4573 1490 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 4576 1492 r10|DWORD = MOVE input: int[-240155|0xfffffffffffc55e5]  <||@
  Comment 4582 1494 rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 4587 1496 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 4592 1498 JUMP ~[] destination: B175 -> B237  <||@
  Comment 4597 block B261 null  <||@
  Comment 4597 2362 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4597 2364 rsi|DWORD = MOVE input: int[-393313|0xfffffffffff9ff9f]  <||@
  Comment 4602 2366 r14|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 4607 2368 JUMP ~[] destination: B261 -> B321  <||@
  Comment 4612 block B88 null  <||@
  Comment 4612 780 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4612 782 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 4622 784 r10|DWORD = MOVE input: int[-251667|0xfffffffffffc28ed]  <||@
  Comment 4628 786 rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 4633 788 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 4638 790 JUMP ~[] destination: B88 -> B237  <||@
  Comment 4643 block B174 null  <||@
  Comment 4643 1472 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4643 1474 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1800298093]  <||@
  Comment 4643 {Object[d.a@1800298093]}  <||@
  Comment 4653 1476 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 4656 1478 r10|DWORD = MOVE input: int[-242459|0xfffffffffffc4ce5]  <||@
  Comment 4662 1480 rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 4667 1482 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 4672 1484 JUMP ~[] destination: B174 -> B237  <||@
  Comment 4677 block B194 null  <||@
  Comment 4677 1716 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4677 1718 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 4687 1720 r10|DWORD = MOVE input: int[-251955|0xfffffffffffc27cd]  <||@
  Comment 4693 1722 rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 4698 1724 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 4703 1726 JUMP ~[] destination: B194 -> B237  <||@
  Comment 4708 block B205 null  <||@
  Comment 4708 1806 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4708 1808 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 4718 1810 r10|DWORD = MOVE input: int[-254739|0xfffffffffffc1ced]  <||@
  Comment 4724 1812 JUMP ~[] destination: B205 -> B237  <||@
  Comment 4729 block B133 null  <||@
  Comment 4729 1130 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4729 1132 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1800298093]  <||@
  Comment 4729 {Object[d.a@1800298093]}  <||@
  Comment 4739 1134 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 4742 1136 r10|DWORD = MOVE input: int[-232731|0xfffffffffffc72e5]  <||@
  Comment 4748 1138 rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 4753 1140 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 4758 1142 JUMP ~[] destination: B133 -> B237  <||@
  Comment 4763 block B195 null  <||@
  Comment 4763 1728 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4763 1730 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 4773 1732 r10|DWORD = MOVE input: int[-229683|0xfffffffffffc7ecd]  <||@
  Comment 4779 1734 rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 4784 1736 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 4789 1738 JUMP ~[] destination: B195 -> B237  <||@
  Comment 4794 block B137 null  <||@
  Comment 4794 1176 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4794 1178 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1399295821]  <||@
  Comment 4794 {Object[d.a@1399295821]}  <||@
  Comment 4804 1180 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 4807 1182 r10|DWORD = MOVE input: int[-238859|0xfffffffffffc5af5]  <||@
  Comment 4813 1184 rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 4818 1186 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 4823 1188 JUMP ~[] destination: B137 -> B237  <||@
  Comment 4828 block B52 null  <||@
  Comment 4828 470 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4828 472 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 4838 474 r10|DWORD = MOVE input: int[-229907|0xfffffffffffc7ded]  <||@
  Comment 4844 476 JUMP ~[] destination: B52 -> B237  <||@
  Comment 4849 block B176 null  <||@
  Comment 4849 1500 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4849 1502 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1800298093]  <||@
  Comment 4849 {Object[d.a@1800298093]}  <||@
  Comment 4859 1504 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 4862 1506 r10|DWORD = MOVE input: int[-240155|0xfffffffffffc55e5]  <||@
  Comment 4868 1508 rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 4873 1510 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 4878 1512 JUMP ~[] destination: B176 -> B237  <||@
  Comment 4883 block B2 null  <||@
  Comment 4883 32 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4883 34 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 4893 36 r10|DWORD = MOVE input: int[-405345|0xfffffffffff9d09f]  <||@
  Comment 4899 38 JUMP ~[] destination: B2 -> B237  <||@
  Comment 4904 block B95 null  <||@
  Comment 4904 836 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4904 838 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1399295821]  <||@
  Comment 4904 {Object[d.a@1399295821]}  <||@
  Comment 4914 840 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 4917 842 r10|DWORD = MOVE input: int[-231435|0xfffffffffffc77f5]  <||@
  Comment 4923 844 rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 4928 846 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 4933 848 JUMP ~[] destination: B95 -> B237  <||@
  Comment 4938 block B50 null  <||@
  Comment 4938 454 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4938 456 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 4948 458 r10|DWORD = MOVE input: int[-227859|0xfffffffffffc85ed]  <||@
  Comment 4954 460 JUMP ~[] destination: B50 -> B237  <||@
  Comment 4959 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 4959 4  <||@
  Comment 4965 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 4965 5  <||@
  HexCodeFile>>> <|@
end_nmethod
