begin_compilation
  name " HotSpotCompilation-9218[org.graalvm.collections.EconomicMapImpl.grow()]"
  method "HotSpotCompilation-9218[org.graalvm.collections.EconomicMapImpl.grow()]"
  date 1527005202345
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a423 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a423  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Lorg/graalvm/collections/EconomicMapImpl;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v425 ?20 v130 ?34 j293 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v425 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a423 v129 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a423 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:455) [bci: 1]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v425 
=== Succesors ===
next: i424 
=== Usages ===
a74 v426 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v425 #next: i424  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<EconomicMapImpl.grow()>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 455
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - 
=== Succesors ===
=== Usages ===
i424 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v426 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a423 
=== Succesors ===
=== Usages ===
i424 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a423  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i424 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:455) [bci: 4]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v426 
=== Succesors ===
next: v14 
=== Usages ===
i6 i9 ?20 j291 v136 ?34 v36 v49 
=== Predecessor ===
a423 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v426 #next: v14  <|@  <|@
f <@~|@floating>@ <|@
tid i8 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 12]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i9 i261 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i9 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 13]
stamp: i32 [0 - 536870911] ⇈000000001fffffff
=== Inputs ===
x: i424 
y: i8 
=== Succesors ===
=== Usages ===
v11 i65 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i424 y: i8  <|@  <|@
f <@~|@floating>@ <|@
tid i10 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
v11 j257 j264 j294 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i9 
y: i10 
=== Succesors ===
=== Usages ===
v14 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i9 y: i10  <|@  <|@
f <@*|@fixed>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14]
stamp: void
trueSuccessorProbability: 0.733268496372742
=== Inputs ===
condition: v11 
=== Succesors ===
trueSuccessor: v12 
falseSuccessor: v13 
=== Usages ===
=== Predecessor ===
i424 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v11 #trueSuccessor: v12 #falseSuccessor: v13  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4604779914999330026
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v16 
=== Usages ===
=== Predecessor ===
v14 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v16  <|@  <|@
f <@~|@floating>@ <|@
tid i7 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 9]
rawvalue: 8
stableDimension: 0
stamp: i32 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i65 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v17 
=== Predecessor ===
v12 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4598476627519280684
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v18 
=== Usages ===
=== Predecessor ===
v14 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v18  <|@  <|@
f <@*|@fixed>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v17 
=== Predecessor ===
v13 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B4" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i65 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14]
stamp: i32 [8 - 536870911] ⇈000000001fffffff
valueDescription: i32
=== Inputs ===
merge: v17 
values: i7 i9 
=== Succesors ===
=== Usages ===
?21 i22 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v17 values: i7 i9  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v16 v18 
=== Succesors ===
next: v148 
=== Usages ===
i65 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v16 v18 #next: v148  <|@  <|@
f <@~|@floating>@ <|@
tid i5 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 7]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i6 i27 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i6 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 8]
stamp: i32 [0 - 1073741823] ⇈000000003fffffff
=== Inputs ===
x: i424 
y: i5 
=== Succesors ===
=== Usages ===
?20 i22 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i424 y: i5  <|@  <|@
tid ?20 <|@
d <@d|@=== Debug Properties ===
bci: 14
code: ResolvedJavaMethodBytecode<EconomicMapImpl.grow()>
duringCall: true
localsSize: 4
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 456
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 i424 - - i6 
=== Succesors ===
=== Usages ===
?21 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i424 - - i6  <|@  <|@
tid ?21 <|@
d <@d|@=== Debug Properties ===
bci: 10
code: ResolvedJavaMethodBytecode<Math.max(int, int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14]
rethrowException: false
sourceFile: Math.java
sourceLine: 1252
stackSize: 1
=== Inputs ===
outerFrameState: ?20 
values: - - i65 
=== Succesors ===
=== Usages ===
a212 v173 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?20 values: - - i65  <|@  <|@
f <@~|@floating>@ <|@
tid i22 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 17]
stamp: i32 [8 - 1610612734] ⇈000000007fffffff
=== Inputs ===
x: i6 
y: i65 
=== Succesors ===
=== Usages ===
v25 i27 i302 v305 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i6 y: i65  <|@  <|@
f <@~|@floating>@ <|@
tid i24 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:457) [bci: 22]
rawvalue: 1073741824
stableDimension: 0
stamp: i32 [1073741824] ⇊0000000040000000 ⇈0000000040000000
stampKind: i32
value: int[1073741824|0x40000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v25 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:457) [bci: 22]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i22 
y: i24 
=== Succesors ===
=== Usages ===
v148 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i22 y: i24  <|@  <|@
f <@~|@floating>@ <|@
tid a170 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v173 v181 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v148 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:457) [bci: 22]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v25 
=== Succesors ===
trueSuccessor: v145 
falseSuccessor: v147 
=== Usages ===
=== Predecessor ===
v17 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v25 #trueSuccessor: v145 #falseSuccessor: v147  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v145 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:457) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v116 
=== Usages ===
=== Predecessor ===
v148 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v116  <|@  <|@
f <@~|@floating>@ <|@
tid i27 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 37]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i22 
y: i5 
=== Succesors ===
=== Usages ===
j306 v40 v52 v136 v239 i260 a212 v197 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i22 y: i5  <|@  <|@
f <@~|@floating>@ <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:461) [bci: 50]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i27 
y: i424 
=== Succesors ===
=== Usages ===
v116 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i27 y: i424  <|@  <|@
f <@*|@fixed>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:461) [bci: 50]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v136 
=== Succesors ===
trueSuccessor: v115 
falseSuccessor: v113 
=== Usages ===
=== Predecessor ===
v145 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v136 #trueSuccessor: v115 #falseSuccessor: v113  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:461) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v168 
=== Usages ===
=== Predecessor ===
v116 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v168  <|@  <|@
f <@~|@floating>@ <|@
tid i169 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -30049
stableDimension: 0
stamp: i32 [-30049] ⇊00000000ffff8a9f ⇈00000000ffff8a9f
stampKind: i32
value: int[-30049|0xffffffffffff8a9f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i171 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v168 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v167 
=== Predecessor ===
v115 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:461) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: j191 
=== Usages ===
=== Predecessor ===
v116 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j191  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j191 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j236 
=== Usages ===
v428 v429 
=== Predecessor ===
v113 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j236  <|@  <|@
f <@~|@floating>@ <|@
tid v428 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j191 
index: - 
=== Succesors ===
=== Usages ===
j236 v238 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j191 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j236 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v428 
=== Succesors ===
next: j237 
=== Usages ===
j195 v430 v431 a211 v436 v432 v433 v434 v435 
=== Predecessor ===
j191 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v428 #next: j237  <|@  <|@
f <@~|@floating>@ <|@
tid v429 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j191 
index: - 
=== Succesors ===
=== Usages ===
j237 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j191 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j237 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v429 
=== Succesors ===
next: v200 
=== Usages ===
v201 
=== Predecessor ===
j236 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v429 #next: v200  <|@  <|@
f <@~|@floating>@ <|@
tid i196 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 48]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v197 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i27 
y: i196 
=== Succesors ===
=== Usages ===
v200 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i27 y: i196  <|@  <|@
f <@~|@floating>@ <|@
tid i30 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:461) [bci: 46]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v277 a212 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j187 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v240 j266 v272 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v200 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v197 
=== Succesors ===
trueSuccessor: v199 
falseSuccessor: v198 
=== Usages ===
=== Predecessor ===
j237 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v197 #trueSuccessor: v199 #falseSuccessor: v198  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v207 
=== Usages ===
=== Predecessor ===
v200 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v207  <|@  <|@
f <@~|@floating>@ <|@
tid i301 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
rawvalue: 3
stableDimension: 0
stamp: i32 [3] ⇊0000000000000003 ⇈0000000000000003
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
i302 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i302 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i22 
y: i301 
=== Succesors ===
=== Usages ===
i220 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i22 y: i301  <|@  <|@
f <@~|@floating>@ <|@
tid i219 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i220 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i220 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
stamp: i32 [-2147483641 - 2147483647] ⇊0000000000000007
=== Inputs ===
x: i302 
y: i219 
=== Succesors ===
=== Usages ===
i190 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i302 y: i219  <|@  <|@
f <@~|@floating>@ <|@
tid i189 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i190 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i190 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i220 
y: i189 
=== Succesors ===
=== Usages ===
j194 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i220 y: i189  <|@  <|@
f <@~|@floating>@ <|@
tid j194 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i190 
=== Succesors ===
=== Usages ===
j195 v432 v433 v434 v435 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i190  <|@  <|@
f <@~|@floating>@ <|@
tid j195 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
stamp: i64
=== Inputs ===
x: j194 
y: j236 
=== Succesors ===
=== Usages ===
v201 v238 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j194 y: j236  <|@  <|@
f <@~|@floating>@ <|@
tid v201 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j237 
y: j195 
=== Succesors ===
=== Usages ===
v207 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j237 y: j195  <|@  <|@
f <@*|@fixed>@ <|@
tid v207 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v201 
=== Succesors ===
trueSuccessor: v206 
falseSuccessor: v205 
=== Usages ===
=== Predecessor ===
v199 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v201 #trueSuccessor: v206 #falseSuccessor: v205  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B11" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v206 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v204 
=== Usages ===
=== Predecessor ===
v207 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v204  <|@  <|@
f <@*|@fixed>@ <|@
tid v204 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v203 
=== Predecessor ===
v206 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606200634081250640
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v205 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v238 
=== Usages ===
=== Predecessor ===
v207 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v238  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v238 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v428 
value: j195 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v225 
=== Usages ===
=== Predecessor ===
v205 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v428 value: j195 stateAfter: - lastLocationAccess: - #next: v225  <|@  <|@
f <@~|@floating>@ <|@
tid v432 <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j194 
index: j236 
=== Succesors ===
=== Usages ===
v225 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j194 index: j236  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v225 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
stamp: void
=== Inputs ===
address: v432 
=== Succesors ===
next: v228 
=== Usages ===
=== Predecessor ===
v238 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v432 #next: v228  <|@  <|@
f <@~|@floating>@ <|@
tid v433 <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j194 
index: j236 
=== Succesors ===
=== Usages ===
v228 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j194 index: j236  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v228 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
stamp: void
=== Inputs ===
address: v433 
=== Succesors ===
next: v231 
=== Usages ===
=== Predecessor ===
v225 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v433 #next: v231  <|@  <|@
f <@~|@floating>@ <|@
tid v434 <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j194 
index: j236 
=== Succesors ===
=== Usages ===
v231 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j194 index: j236  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v231 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
stamp: void
=== Inputs ===
address: v434 
=== Succesors ===
next: v234 
=== Usages ===
=== Predecessor ===
v228 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v434 #next: v234  <|@  <|@
f <@~|@floating>@ <|@
tid v435 <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j194 
index: j236 
=== Succesors ===
=== Usages ===
v234 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j194 index: j236  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v234 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
stamp: void
=== Inputs ===
address: v435 
=== Succesors ===
next: v239 
=== Usages ===
=== Predecessor ===
v231 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v435 #next: v239  <|@  <|@
f <@~|@floating>@ <|@
tid v430 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j236 
index: - 
=== Succesors ===
=== Usages ===
v239 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j236 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v239 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v430 
value: i27 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v240 
=== Usages ===
=== Predecessor ===
v234 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v430 value: i27 stateAfter: - lastLocationAccess: - #next: v240  <|@  <|@
f <@~|@floating>@ <|@
tid v431 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j236 
index: - 
=== Succesors ===
=== Usages ===
v240 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j236 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v240 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v431 
value: j187 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v244 
=== Usages ===
=== Predecessor ===
v239 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v431 value: j187 stateAfter: - lastLocationAccess: - #next: v244  <|@  <|@
f <@~|@floating>@ <|@
tid v436 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j236 
index: - 
=== Succesors ===
=== Usages ===
v244 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j236 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v303 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
rawvalue: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v244 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v436 
value: v303 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v210 
=== Usages ===
=== Predecessor ===
v240 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v436 value: v303 stateAfter: - lastLocationAccess: - #next: v210  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v210 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: a211 
=== Usages ===
=== Predecessor ===
v244 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a211  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a211 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j236 
=== Succesors ===
next: v213 
=== Usages ===
a216 
=== Predecessor ===
v210 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j236 #next: v213  <|@  <|@
f <@*|@fixed>@ <|@
tid v213 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v214 
=== Predecessor ===
a211 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v198 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v202 
=== Usages ===
=== Predecessor ===
v200 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v202  <|@  <|@
f <@*|@fixed>@ <|@
tid v202 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v203 
=== Predecessor ===
v198 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4592518698413299072
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v203 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v202 v204 
=== Succesors ===
next: a212 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v202 v204 #next: a212  <|@  <|@
f <@~|@floating>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
rawvalue: meta{HotSpotType<[Ljava/lang/Object;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[Ljava/lang/Object;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a212 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a212 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?21 
arguments: v186 i27 i30 
=== Succesors ===
next: v215 
=== Usages ===
a216 
=== Predecessor ===
v203 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?21 arguments: v186 i27 i30 #next: v215  <|@  <|@
f <@*|@fixed>@ <|@
tid v215 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v214 
=== Predecessor ===
a212 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a216 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v214 
values: a211 a212 
=== Succesors ===
=== Usages ===
v427 a165 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v214 values: a211 a212  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v214 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v213 v215 
=== Succesors ===
next: v364 
=== Usages ===
a216 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v213 v215 #next: v364  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v364 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v317 
=== Usages ===
j366 
=== Predecessor ===
v214 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v317  <|@  <|@
f <@~|@floating>@ <|@
tid v427 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a216 
index: - 
=== Succesors ===
=== Usages ===
j366 j258 j256 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a216 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j366 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v364 
address: v427 
=== Succesors ===
=== Usages ===
v440 v441 v442 v443 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v364 address: v427  <|@  <|@
f <@~|@floating>@ <|@
tid j306 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483646] ⇈fffffffffffffffe
=== Inputs ===
value: i27 
=== Succesors ===
=== Usages ===
j407 j394 j400 j404 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i27  <|@  <|@
f <@~|@floating>@ <|@
tid j393 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j394 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j394 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483638] ⇈fffffffffffffffe
=== Inputs ===
x: j306 
y: j393 
=== Succesors ===
=== Usages ===
v397 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j306 y: j393  <|@  <|@
f <@~|@floating>@ <|@
tid j242 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j392 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v419 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null,null,null,null,null,null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL>
stampKind: <n -,n -,n -,n -,n -,n -,n -,n ->
value: SIMD<null,null,null,null,null,null,null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v418 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j223 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j387 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v317 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v318 
=== Predecessor ===
v364 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B39" 
    successors "B14" "B39" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4616189618054758400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j387 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v318 
values: j223 j392 
=== Succesors ===
=== Usages ===
v443 j392 v442 j445 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v318 values: j223 j392  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v318 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v317 
=== Succesors ===
next: v418 
=== Usages ===
j387 v322 v323 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v317 #next: v418  <|@  <|@
f <@~|@floating>@ <|@
tid v443 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j366 
index: j387 
=== Succesors ===
=== Usages ===
v418 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j366 index: j387  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v418 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v443 
value: v419 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v325 
=== Usages ===
=== Predecessor ===
v318 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v443 value: v419 stateAfter: - lastLocationAccess: - #next: v325  <|@  <|@
f <@~|@floating>@ <|@
tid j392 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j387 
y: j242 
=== Succesors ===
=== Usages ===
v401 j387 v397 j374 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j387 y: j242  <|@  <|@
f <@~|@floating>@ <|@
tid v397 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j394 
y: j392 
=== Succesors ===
=== Usages ===
v325 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j394 y: j392  <|@  <|@
f <@*|@fixed>@ <|@
tid v325 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v397 
=== Succesors ===
trueSuccessor: v322 
falseSuccessor: v324 
=== Usages ===
=== Predecessor ===
v418 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v397 #trueSuccessor: v322 #falseSuccessor: v324  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v322 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v318 
=== Succesors ===
next: v346 
=== Usages ===
=== Predecessor ===
v325 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v318 #next: v346  <|@  <|@
f <@~|@floating>@ <|@
tid j399 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j400 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j400 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483642] ⇈fffffffffffffffe
=== Inputs ===
x: j306 
y: j399 
=== Succesors ===
=== Usages ===
v401 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j306 y: j399  <|@  <|@
f <@~|@floating>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j400 
y: j392 
=== Succesors ===
=== Usages ===
v346 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j400 y: j392  <|@  <|@
f <@*|@fixed>@ <|@
tid v346 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v401 
=== Succesors ===
trueSuccessor: v345 
falseSuccessor: v344 
=== Usages ===
=== Predecessor ===
v322 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v401 #trueSuccessor: v345 #falseSuccessor: v344  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v345 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v349 
=== Usages ===
=== Predecessor ===
v346 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v349  <|@  <|@
f <@*|@fixed>@ <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v338 
=== Predecessor ===
v345 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v344 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v417 
=== Usages ===
=== Predecessor ===
v346 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v417  <|@  <|@
f <@~|@floating>@ <|@
tid v442 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times4
stamp: void*
=== Inputs ===
base: j366 
index: j387 
=== Succesors ===
=== Usages ===
v417 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j366 index: j387  <|@  <|@
f <@~|@floating>@ <|@
tid v422 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null,null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL,n - NULL,n - NULL>
stampKind: <n -,n -,n -,n ->
value: SIMD<null,null,null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v417 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v417 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v442 
value: v422 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v337 
=== Usages ===
=== Predecessor ===
v344 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v442 value: v422 stateAfter: - lastLocationAccess: - #next: v337  <|@  <|@
f <@~|@floating>@ <|@
tid j444 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 12
stableDimension: 0
stamp: i64 [12] ⇊000000000000000c ⇈000000000000000c
stampKind: i64
value: long[12|0xc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j445 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j445 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j387 
y: j444 
=== Succesors ===
=== Usages ===
j374 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j387 y: j444  <|@  <|@
f <@*|@fixed>@ <|@
tid v337 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v338 
=== Predecessor ===
v417 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j374 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v338 
values: j445 j392 
=== Succesors ===
=== Usages ===
v441 j380 j367 v405 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v338 values: j445 j392  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v338 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v337 v349 
=== Succesors ===
next: v352 
=== Usages ===
j374 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v337 v349 #next: v352  <|@  <|@
f <@~|@floating>@ <|@
tid j403 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j404 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j404 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483644] ⇈fffffffffffffffe
=== Inputs ===
x: j306 
y: j403 
=== Succesors ===
=== Usages ===
v405 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j306 y: j403  <|@  <|@
f <@~|@floating>@ <|@
tid v405 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j404 
y: j374 
=== Succesors ===
=== Usages ===
v352 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j404 y: j374  <|@  <|@
f <@*|@fixed>@ <|@
tid v352 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v405 
=== Succesors ===
trueSuccessor: v351 
falseSuccessor: v350 
=== Usages ===
=== Predecessor ===
v338 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v405 #trueSuccessor: v351 #falseSuccessor: v350  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v351 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v355 
=== Usages ===
=== Predecessor ===
v352 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v355  <|@  <|@
f <@*|@fixed>@ <|@
tid v355 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v341 
=== Predecessor ===
v351 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v350 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v415 
=== Usages ===
=== Predecessor ===
v352 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v415  <|@  <|@
f <@~|@floating>@ <|@
tid v441 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j366 
index: j374 
=== Succesors ===
=== Usages ===
v415 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j366 index: j374  <|@  <|@
f <@~|@floating>@ <|@
tid v421 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL>
stampKind: <n -,n ->
value: SIMD<null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v415 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v441 
value: v421 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v340 
=== Usages ===
=== Predecessor ===
v350 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v441 value: v421 stateAfter: - lastLocationAccess: - #next: v340  <|@  <|@
f <@~|@floating>@ <|@
tid j379 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j380 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j380 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j374 
y: j379 
=== Succesors ===
=== Usages ===
j367 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j374 y: j379  <|@  <|@
f <@*|@fixed>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v341 
=== Predecessor ===
v415 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j367 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v341 
values: j380 j374 
=== Succesors ===
=== Usages ===
v440 v408 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v341 values: j380 j374  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v340 v355 
=== Succesors ===
next: v358 
=== Usages ===
j367 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v340 v355 #next: v358  <|@  <|@
f <@~|@floating>@ <|@
tid j270 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j271 j407 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j407 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483645] ⇊0000000000000001
=== Inputs ===
x: j306 
y: j270 
=== Succesors ===
=== Usages ===
v408 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j306 y: j270  <|@  <|@
f <@~|@floating>@ <|@
tid v408 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j407 
y: j367 
=== Succesors ===
=== Usages ===
v358 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j407 y: j367  <|@  <|@
f <@*|@fixed>@ <|@
tid v358 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v408 
=== Succesors ===
trueSuccessor: v357 
falseSuccessor: v356 
=== Usages ===
=== Predecessor ===
v341 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v408 #trueSuccessor: v357 #falseSuccessor: v356  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v357 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v361 
=== Usages ===
=== Predecessor ===
v358 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v361  <|@  <|@
f <@*|@fixed>@ <|@
tid v361 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v331 
=== Predecessor ===
v357 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v356 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v413 
=== Usages ===
=== Predecessor ===
v358 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v413  <|@  <|@
f <@~|@floating>@ <|@
tid v440 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j366 
index: j367 
=== Succesors ===
=== Usages ===
v413 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j366 index: j367  <|@  <|@
f <@~|@floating>@ <|@
tid a420 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: n - NULL
stampKind: n -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v413 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v413 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v440 
value: a420 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v343 
=== Usages ===
=== Predecessor ===
v356 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v440 value: a420 stateAfter: - lastLocationAccess: - #next: v343  <|@  <|@
f <@*|@fixed>@ <|@
tid v343 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v331 
=== Predecessor ===
v413 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v331 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v343 v361 
=== Succesors ===
next: v255 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v343 v361 #next: v255  <|@  <|@
f <@~|@floating>@ <|@
tid i304 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:154) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
rawvalue: 2147483647
stableDimension: 0
stamp: i32 [2147483647] ⇊000000007fffffff ⇈000000007fffffff
stampKind: i32
value: int[2147483647|0x7fffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v305 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v305 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:154) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
stamp: void
=== Inputs ===
x: i22 
y: i304 
=== Succesors ===
=== Usages ===
v255 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: i22 y: i304  <|@  <|@
f <@~|@floating>@ <|@
tid j279 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:158) [bci: 12]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
j280 v439 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v255 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:154) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v305 
=== Succesors ===
trueSuccessor: v253 
falseSuccessor: v254 
=== Usages ===
=== Predecessor ===
v331 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v305 #trueSuccessor: v253 #falseSuccessor: v254  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v253 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:155) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v282 
=== Usages ===
=== Predecessor ===
v255 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v282  <|@  <|@
f <@*|@fixed>@ <|@
tid v282 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v281 
=== Predecessor ===
v253 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v254 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:157) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: j256 
=== Usages ===
=== Predecessor ===
v255 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j256  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j256 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToFirstArrayElement(WriteBarrierSnippets.java:376) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:159) [bci: 20]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v427 
=== Succesors ===
next: j258 
=== Usages ===
j257 
=== Predecessor ===
v254 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v427 #next: j258  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j258 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:385) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v427 
=== Succesors ===
next: v267 
=== Usages ===
j263 
=== Predecessor ===
j256 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v427 #next: v267  <|@  <|@
f <@~|@floating>@ <|@
tid i259 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i260 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i260 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i27 
y: i259 
=== Succesors ===
=== Usages ===
i261 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i27 y: i259  <|@  <|@
f <@~|@floating>@ <|@
tid i261 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
stamp: i32 [-2147483644 - 2147483644] ⇊0000000000000004 ⇈00000000fffffffc
=== Inputs ===
x: i260 
y: i8 
=== Succesors ===
=== Usages ===
j262 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i260 y: i8  <|@  <|@
f <@~|@floating>@ <|@
tid j262 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 26]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
resultBits: 64
stamp: i64 [-2147483644 - 2147483644] ⇊0000000000000004 ⇈fffffffffffffffc
=== Inputs ===
value: i261 
=== Succesors ===
=== Usages ===
j263 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i261  <|@  <|@
f <@~|@floating>@ <|@
tid j263 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 27]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
stamp: i64
=== Inputs ===
x: j258 
y: j262 
=== Succesors ===
=== Usages ===
j264 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j258 y: j262  <|@  <|@
f <@~|@floating>@ <|@
tid j264 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j263 
y: i10 
=== Succesors ===
=== Usages ===
j265 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j263 y: i10  <|@  <|@
f <@~|@floating>@ <|@
tid j257 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:159) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j256 
y: i10 
=== Succesors ===
=== Usages ===
j265 j280 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j256 y: i10  <|@  <|@
f <@~|@floating>@ <|@
tid j265 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:161) [bci: 41]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
stamp: i64 [-36028797018963967 - 36028797018963967]
=== Inputs ===
x: j264 
y: j257 
=== Succesors ===
=== Usages ===
j266 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j264 y: j257  <|@  <|@
f <@~|@floating>@ <|@
tid j266 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:161) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
stamp: i64 [-36028797018963966 - 36028797018963968]
=== Inputs ===
x: j265 
y: j187 
=== Succesors ===
=== Usages ===
j269 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j265 y: j187  <|@  <|@
f <@*|@fixed>@ <|@
tid v267 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v268 
=== Predecessor ===
j258 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B38" 
    successors "B27" "B38" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j269 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v268 
values: j266 j271 
=== Succesors ===
=== Usages ===
j271 v272 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v268 values: j266 j271  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v268 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 2.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v267 
=== Succesors ===
next: v275 
=== Usages ===
j269 v273 v278 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v267 #next: v275  <|@  <|@
f <@~|@floating>@ <|@
tid v272 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 55]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j269 
y: j187 
=== Succesors ===
=== Usages ===
v275 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j269 y: j187  <|@  <|@
f <@*|@fixed>@ <|@
tid v275 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 55]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v272 
=== Succesors ===
trueSuccessor: v273 
falseSuccessor: v274 
=== Usages ===
=== Predecessor ===
v268 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v272 #trueSuccessor: v273 #falseSuccessor: v274  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v273 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:165) [bci: 76]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v268 
=== Succesors ===
next: v283 
=== Usages ===
=== Predecessor ===
v275 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v268 #next: v283  <|@  <|@
f <@*|@fixed>@ <|@
tid v283 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v281 
=== Predecessor ===
v273 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B24" "B27" 
    successors "B29" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v281 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v282 v283 
=== Succesors ===
next: a165 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v282 v283 #next: a165  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a165 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a216 
=== Succesors ===
next: j285 
=== Usages ===
j289 ?34 a128 
=== Predecessor ===
v281 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a216 #next: j285  <|@  <|@
f <@~|@floating>@ <|@
tid a74 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:455) [bci: 1]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a423 
=== Succesors ===
=== Usages ===
j285 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a423  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j285 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:461) [bci: 50]
stamp: i64
=== Inputs ===
object: a74 
=== Succesors ===
next: j289 
=== Usages ===
v437 
=== Predecessor ===
a165 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a74 #next: j289  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j289 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:461) [bci: 50]
stamp: i64
=== Inputs ===
object: a165 
=== Succesors ===
next: v292 
=== Usages ===
v438 
=== Predecessor ===
j285 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a165 #next: v292  <|@  <|@
f <@~|@floating>@ <|@
tid v437 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j285 
index: - 
=== Succesors ===
=== Usages ===
v292 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j285 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v438 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j289 
index: - 
=== Succesors ===
=== Usages ===
v292 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j289 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j291 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:461) [bci: 50]
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i424 
=== Succesors ===
=== Usages ===
v292 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i424  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v292 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: ObjectDisjointArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:461) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v437 v438 j291 
=== Succesors ===
next: v129 
=== Usages ===
=== Predecessor ===
j289 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v437 v438 j291 #next: v129  <|@  <|@
f <@~|@floating>@ <|@
tid a128 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:462) [bci: 55]
op: Compress
stamp: n! -
=== Inputs ===
value: a165 
=== Succesors ===
=== Usages ===
v129 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a165  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:462) [bci: 55]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v425 
value: a128 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j293 
=== Usages ===
=== Predecessor ===
v292 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v425 value: a128 stateAfter: - lastLocationAccess: - #next: j293  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j293 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:462) [bci: 55]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v297 
=== Usages ===
j294 
=== Predecessor ===
v129 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v297  <|@  <|@
f <@~|@floating>@ <|@
tid j294 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:462) [bci: 55]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j293 
y: i10 
=== Succesors ===
=== Usages ===
v439 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j293 y: i10  <|@  <|@
f <@~|@floating>@ <|@
tid v439 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j294 
index: j279 
=== Succesors ===
=== Usages ===
v297 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j294 index: j279  <|@  <|@
f <@~|@floating>@ <|@
tid i298 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:462) [bci: 55]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v297 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v297 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:462) [bci: 55]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v439 
value: i298 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v39 
=== Usages ===
=== Predecessor ===
j293 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v439 value: i298 stateAfter: - lastLocationAccess: - #next: v39  <|@  <|@
f <@~|@floating>@ <|@
tid i35 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 59]
rawvalue: 512
stableDimension: 0
stamp: i32 [512] ⇊0000000000000200 ⇈0000000000000200
stampKind: i32
value: int[512|0x200]
=== Inputs ===
=== Succesors ===
=== Usages ===
v36 v40 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 62]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i424 
y: i35 
=== Succesors ===
=== Usages ===
v39 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i424 y: i35  <|@  <|@
f <@*|@fixed>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 62]
stamp: void
trueSuccessorProbability: 0.992280021489804
=== Inputs ===
condition: v36 
=== Succesors ===
trueSuccessor: v37 
falseSuccessor: v38 
=== Usages ===
=== Predecessor ===
v297 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v36 #trueSuccessor: v37 #falseSuccessor: v38  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4607112883415333754
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 65]
stamp: void
=== Inputs ===
=== Succesors ===
next: v46 
=== Usages ===
=== Predecessor ===
v39 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v46  <|@  <|@
f <@~|@floating>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 70]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i27 
y: i35 
=== Succesors ===
=== Usages ===
v46 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i27 y: i35  <|@  <|@
f <@*|@fixed>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 70]
stamp: void
trueSuccessorProbability: 0.992596516007533
=== Inputs ===
condition: v40 
=== Succesors ===
trueSuccessor: v45 
falseSuccessor: v44 
=== Usages ===
=== Predecessor ===
v37 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v40 #trueSuccessor: v45 #falseSuccessor: v44  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors 
    xhandlers
    flags 
    probability 4607046713563941733
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v45 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: v70 
=== Usages ===
=== Predecessor ===
v46 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v70  <|@  <|@
f <@*|@fixed>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:468) [bci: 90]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v45 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors 
    xhandlers
    flags 
    probability 4575119763131861572
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v44 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:466) [bci: 86]
stamp: void
=== Inputs ===
=== Succesors ===
next: v56 
=== Usages ===
=== Predecessor ===
v46 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v56  <|@  <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:466) [bci: 87]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@5a986355
stamp: void
targetMethod: HotSpotMethod<EconomicMapImpl.createHash()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
v56 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?157 <|@
d <@d|@=== Debug Properties ===
bci: 87
code: ResolvedJavaMethodBytecode<EconomicMapImpl.grow()>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 466
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - 
=== Succesors ===
=== Usages ===
v56 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v56 <|@
d <@d|@=== Debug Properties ===
bci: 87
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:466) [bci: 87]
polymorphic: false
stamp: void
targetMethod: Direct#EconomicMapImpl.createHash
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v130 
stateDuring: ?157 
=== Succesors ===
next: v64 
=== Usages ===
=== Predecessor ===
v44 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v130 stateDuring: ?157 #next: v64  <|@  <|@
f <@*|@fixed>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:468) [bci: 90]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v56 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4575550551393190656
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: v152 
=== Usages ===
=== Predecessor ===
v39 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v152  <|@  <|@
f <@~|@floating>@ <|@
tid i48 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 74]
rawvalue: 131072
stableDimension: 0
stamp: i32 [131072] ⇊0000000000020000 ⇈0000000000020000
stampKind: i32
value: int[131072|0x20000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v49 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 76]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i424 
y: i48 
=== Succesors ===
=== Usages ===
v152 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i424 y: i48  <|@  <|@
f <@*|@fixed>@ <|@
tid v152 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 76]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v49 
=== Succesors ===
trueSuccessor: v149 
falseSuccessor: v151 
=== Usages ===
=== Predecessor ===
v38 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v49 #trueSuccessor: v149 #falseSuccessor: v151  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4575550551393190656
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v149 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v156 
=== Usages ===
=== Predecessor ===
v152 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v156  <|@  <|@
f <@~|@floating>@ <|@
tid i51 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 83]
rawvalue: 131073
stableDimension: 0
stamp: i32 [131073] ⇊0000000000020001 ⇈0000000000020001
stampKind: i32
value: int[131073|0x20001]
=== Inputs ===
=== Succesors ===
=== Usages ===
v52 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 83]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i27 
y: i51 
=== Succesors ===
=== Usages ===
v156 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i27 y: i51  <|@  <|@
f <@*|@fixed>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 83]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v52 
=== Succesors ===
trueSuccessor: v153 
falseSuccessor: v155 
=== Usages ===
=== Predecessor ===
v149 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v52 #trueSuccessor: v153 #falseSuccessor: v155  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4575550551393190656
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v153 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
next: v63 
=== Usages ===
=== Predecessor ===
v156 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v63  <|@  <|@
f <@*|@fixed>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:468) [bci: 90]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v153 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
next: v182 
=== Usages ===
=== Predecessor ===
v156 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v182  <|@  <|@
f <@~|@floating>@ <|@
tid i183 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -33811
stableDimension: 0
stamp: i32 [-33811] ⇊00000000ffff7bed ⇈00000000ffff7bed
stampKind: i32
value: int[-33811|0xffffffffffff7bed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i179 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v176 
=== Predecessor ===
v155 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v151 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v177 
=== Usages ===
=== Predecessor ===
v152 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v177  <|@  <|@
f <@~|@floating>@ <|@
tid i178 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -33555
stableDimension: 0
stamp: i32 [-33555] ⇊00000000ffff7ced ⇈00000000ffff7ced
stampKind: i32
value: int[-33555|0xffffffffffff7ced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i179 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v177 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v176 
=== Predecessor ===
v151 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i179 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-33811 - -33555] ⇊00000000ffff78ed ⇈00000000ffff7fed
valueDescription: i32
=== Inputs ===
merge: v176 
values: i178 i183 
=== Succesors ===
=== Usages ===
v181 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v176 values: i178 i183  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v176 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v177 v182 
=== Succesors ===
next: v181 
=== Usages ===
i179 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v177 v182 #next: v181  <|@  <|@
tid ?34 <|@
d <@d|@=== Debug Properties ===
bci: 58
code: ResolvedJavaMethodBytecode<EconomicMapImpl.grow()>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:462) [bci: 55]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 463
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i424 - a165 
=== Succesors ===
=== Usages ===
v181 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i424 - a165  <|@  <|@
f <@*|@fixed>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?34 
actionAndReason: i179 
speculation: a170 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v176 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?34 actionAndReason: i179 speculation: a170  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v274 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 58]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v277 
=== Usages ===
=== Predecessor ===
v275 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v277  <|@  <|@
f <@~|@floating>@ <|@
tid j271 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
stamp: i64
=== Inputs ===
x: j269 
y: j270 
=== Succesors ===
=== Usages ===
j269 j276 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j269 y: j270  <|@  <|@
f <@~|@floating>@ <|@
tid j280 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 62]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
stamp: i64 [4682670080 - 36028801701634047] ⇈00ffffffffffffff
=== Inputs ===
x: j257 
y: j279 
=== Succesors ===
=== Usages ===
j276 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j257 y: j279  <|@  <|@
f <@~|@floating>@ <|@
tid j276 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 65]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
stamp: i64
=== Inputs ===
x: j271 
y: j280 
=== Succesors ===
=== Usages ===
v277 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j271 y: j280  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v277 <|@
d <@d|@=== Debug Properties ===
kind: boolean
nodeSourcePosition: at org.graalvm.compiler.replacements.nodes.DirectStoreNode.storeBoolean(long, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 70]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
stamp: void
=== Inputs ===
address: j276 
value: i30 
=== Succesors ===
next: v278 
=== Usages ===
=== Predecessor ===
v274 >@ <|@
instruction <@DirectStore|@org.graalvm.compiler.replacements.nodes.DirectStoreNode>@ address: j276 value: i30 #next: v278  <|@  <|@
f <@*|@fixed>@ <|@
tid v278 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
stamp: void
=== Inputs ===
loopBegin: v268 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v277 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v268  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4613937818241073152
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v324 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v323 
=== Usages ===
=== Predecessor ===
v325 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v323  <|@  <|@
f <@*|@fixed>@ <|@
tid v323 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v318 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v324 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v318  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v147 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:457) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v174 
=== Usages ===
=== Predecessor ===
v148 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v174  <|@  <|@
f <@~|@floating>@ <|@
tid i175 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -20755
stableDimension: 0
stamp: i32 [-20755] ⇊00000000ffffaeed ⇈00000000ffffaeed
stampKind: i32
value: int[-20755|0xffffffffffffaeed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i171 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v167 
=== Predecessor ===
v147 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B5" "B40" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i171 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-30049 - -20755] ⇊00000000ffff8a8d ⇈00000000ffffaeff
valueDescription: i32
=== Inputs ===
merge: v167 
values: i169 i175 
=== Succesors ===
=== Usages ===
v173 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v167 values: i169 i175  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v167 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v168 v174 
=== Succesors ===
next: v173 
=== Usages ===
i171 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v168 v174 #next: v173  <|@  <|@
f <@*|@fixed>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?21 
actionAndReason: i171 
speculation: a170 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v167 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?21 actionAndReason: i171 speculation: a170  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a423 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a423  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Lorg/graalvm/collections/EconomicMapImpl;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v425 ?20 v130 ?34 j293 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v425 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a423 v129 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a423 <|@
result v1|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:455) [bci: 1]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v425 
=== Succesors ===
next: i424 
=== Usages ===
a74 v426 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v425 #next: i424  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<EconomicMapImpl.grow()>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 455
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - 
=== Succesors ===
=== Usages ===
i424 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v426 <|@
result [v1|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a423 
=== Succesors ===
=== Usages ===
i424 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a423  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i424 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:455) [bci: 4]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v426 
=== Succesors ===
next: v14 
=== Usages ===
i6 i9 ?20 j291 v136 ?34 v36 v49 
=== Predecessor ===
a423 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v426 #next: v14  <|@  <|@
f <@~|@floating>@ <|@
tid i8 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 12]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i9 i261 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i9 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 13]
stamp: i32 [0 - 536870911] ⇈000000001fffffff
=== Inputs ===
x: i424 
y: i8 
=== Succesors ===
=== Usages ===
v11 i65 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i424 y: i8  <|@  <|@
f <@~|@floating>@ <|@
tid i10 <|@
result int[9|0x9] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
v11 j257 j264 j294 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i9 
y: i10 
=== Succesors ===
=== Usages ===
v14 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i9 y: i10  <|@  <|@
f <@*|@fixed>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14]
stamp: void
trueSuccessorProbability: 0.733268496372742
=== Inputs ===
condition: v11 
=== Succesors ===
trueSuccessor: v12 
falseSuccessor: v13 
=== Usages ===
=== Predecessor ===
i424 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v11 #trueSuccessor: v12 #falseSuccessor: v13  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@31948acd slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:455) [bci: 0]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction v2|DWORD = MOV [v1|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = SHR v2|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v3|DWORD y: 9 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.733268496372742 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4604779914999330026
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v16 
=== Usages ===
=== Predecessor ===
v14 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v16  <|@  <|@
f <@~|@floating>@ <|@
tid i7 <|@
result int[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 9]
rawvalue: 8
stableDimension: 0
stamp: i32 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i65 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v17 
=== Predecessor ===
v12 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[8|0x8]] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4598476627519280684
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v18 
=== Usages ===
=== Predecessor ===
v14 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v18  <|@  <|@
f <@*|@fixed>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v17 
=== Predecessor ===
v13 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v3|DWORD] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B4" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i65 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14]
stamp: i32 [8 - 536870911] ⇈000000001fffffff
valueDescription: i32
=== Inputs ===
merge: v17 
values: i7 i9 
=== Succesors ===
=== Usages ===
?21 i22 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v17 values: i7 i9  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v16 v18 
=== Succesors ===
next: v148 
=== Usages ===
i65 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v16 v18 #next: v148  <|@  <|@
f <@~|@floating>@ <|@
tid i5 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 7]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i6 i27 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i6 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 8]
stamp: i32 [0 - 1073741823] ⇈000000003fffffff
=== Inputs ===
x: i424 
y: i5 
=== Succesors ===
=== Usages ===
?20 i22 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i424 y: i5  <|@  <|@
tid ?20 <|@
d <@d|@=== Debug Properties ===
bci: 14
code: ResolvedJavaMethodBytecode<EconomicMapImpl.grow()>
duringCall: true
localsSize: 4
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 456
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 i424 - - i6 
=== Succesors ===
=== Usages ===
?21 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i424 - - i6  <|@  <|@
tid ?21 <|@
d <@d|@=== Debug Properties ===
bci: 10
code: ResolvedJavaMethodBytecode<Math.max(int, int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14]
rethrowException: false
sourceFile: Math.java
sourceLine: 1252
stackSize: 1
=== Inputs ===
outerFrameState: ?20 
values: - - i65 
=== Succesors ===
=== Usages ===
a212 v173 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?20 values: - - i65  <|@  <|@
f <@~|@floating>@ <|@
tid i22 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 17]
stamp: i32 [8 - 1610612734] ⇈000000007fffffff
=== Inputs ===
x: i6 
y: i65 
=== Succesors ===
=== Usages ===
v25 i27 i302 v305 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i6 y: i65  <|@  <|@
f <@~|@floating>@ <|@
tid i24 <|@
result int[1073741824|0x40000000] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:457) [bci: 22]
rawvalue: 1073741824
stableDimension: 0
stamp: i32 [1073741824] ⇊0000000040000000 ⇈0000000040000000
stampKind: i32
value: int[1073741824|0x40000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v25 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:457) [bci: 22]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i22 
y: i24 
=== Succesors ===
=== Usages ===
v148 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i22 y: i24  <|@  <|@
f <@~|@floating>@ <|@
tid a170 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v173 v181 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v148 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:457) [bci: 22]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v25 
=== Succesors ===
trueSuccessor: v145 
falseSuccessor: v147 
=== Usages ===
=== Predecessor ===
v17 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v25 #trueSuccessor: v145 #falseSuccessor: v147  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v4|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = SHR v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = ADD (x: v5|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v6|DWORD y: 1073741824 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v145 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:457) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v116 
=== Usages ===
=== Predecessor ===
v148 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v116  <|@  <|@
f <@~|@floating>@ <|@
tid i27 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 37]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i22 
y: i5 
=== Succesors ===
=== Usages ===
j306 v40 v52 v136 v239 i260 a212 v197 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i22 y: i5  <|@  <|@
f <@~|@floating>@ <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:461) [bci: 50]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i27 
y: i424 
=== Succesors ===
=== Usages ===
v116 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i27 y: i424  <|@  <|@
f <@*|@fixed>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:461) [bci: 50]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v136 
=== Succesors ===
trueSuccessor: v115 
falseSuccessor: v113 
=== Usages ===
=== Predecessor ===
v145 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v136 #trueSuccessor: v115 #falseSuccessor: v113  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = SHL v6|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:461) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v168 
=== Usages ===
=== Predecessor ===
v116 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v168  <|@  <|@
f <@~|@floating>@ <|@
tid i169 <|@
result int[-30049|0xffffffffffff8a9f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -30049
stableDimension: 0
stamp: i32 [-30049] ⇊00000000ffff8a9f ⇈00000000ffff8a9f
stampKind: i32
value: int[-30049|0xffffffffffff8a9f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i171 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v168 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v167 
=== Predecessor ===
v115 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-30049|0xffffffffffff8a9f]] destination: B5 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:461) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: j191 
=== Usages ===
=== Predecessor ===
v116 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j191  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j191 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j236 
=== Usages ===
v428 v429 
=== Predecessor ===
v113 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j236  <|@  <|@
f <@~|@floating>@ <|@
tid v428 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j191 
index: - 
=== Succesors ===
=== Usages ===
j236 v238 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j191 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j236 <|@
result v8|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v428 
=== Succesors ===
next: j237 
=== Usages ===
j195 v430 v431 a211 v436 v432 v433 v434 v435 
=== Predecessor ===
j191 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v428 #next: j237  <|@  <|@
f <@~|@floating>@ <|@
tid v429 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j191 
index: - 
=== Succesors ===
=== Usages ===
j237 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j191 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j237 <|@
result v9|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v429 
=== Succesors ===
next: v200 
=== Usages ===
v201 
=== Predecessor ===
j236 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v429 #next: v200  <|@  <|@
f <@~|@floating>@ <|@
tid i196 <|@
result int[16777215|0xffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 48]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v197 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i27 
y: i196 
=== Succesors ===
=== Usages ===
v200 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i27 y: i196  <|@  <|@
f <@~|@floating>@ <|@
tid i30 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:461) [bci: 46]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v277 a212 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j187 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v240 j266 v272 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v200 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v197 
=== Succesors ===
trueSuccessor: v199 
falseSuccessor: v198 
=== Usages ===
=== Predecessor ===
j237 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v197 #trueSuccessor: v199 #falseSuccessor: v198  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v7|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v207 
=== Usages ===
=== Predecessor ===
v200 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v207  <|@  <|@
f <@~|@floating>@ <|@
tid i301 <|@
result int[3|0x3] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
rawvalue: 3
stableDimension: 0
stamp: i32 [3] ⇊0000000000000003 ⇈0000000000000003
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
i302 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i302 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i22 
y: i301 
=== Succesors ===
=== Usages ===
i220 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i22 y: i301  <|@  <|@
f <@~|@floating>@ <|@
tid i219 <|@
result int[23|0x17] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i220 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i220 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
stamp: i32 [-2147483641 - 2147483647] ⇊0000000000000007
=== Inputs ===
x: i302 
y: i219 
=== Succesors ===
=== Usages ===
i190 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i302 y: i219  <|@  <|@
f <@~|@floating>@ <|@
tid i189 <|@
result int[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i190 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i190 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i220 
y: i189 
=== Succesors ===
=== Usages ===
j194 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i220 y: i189  <|@  <|@
f <@~|@floating>@ <|@
tid j194 <|@
result v13|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i190 
=== Succesors ===
=== Usages ===
j195 v432 v433 v434 v435 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i190  <|@  <|@
f <@~|@floating>@ <|@
tid j195 <|@
result v14|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
stamp: i64
=== Inputs ===
x: j194 
y: j236 
=== Succesors ===
=== Usages ===
v201 v238 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j194 y: j236  <|@  <|@
f <@~|@floating>@ <|@
tid v201 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j237 
y: j195 
=== Succesors ===
=== Usages ===
v207 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j237 y: j195  <|@  <|@
f <@*|@fixed>@ <|@
tid v207 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v201 
=== Succesors ===
trueSuccessor: v206 
falseSuccessor: v205 
=== Usages ===
=== Predecessor ===
v199 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v201 #trueSuccessor: v206 #falseSuccessor: v205  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = SHL v6|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = LEA [v10|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = AND v11|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOVSXD v12|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = ADD (x: v13|QWORD, y: v8|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v14|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B11" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v206 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v204 
=== Usages ===
=== Predecessor ===
v207 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v204  <|@  <|@
f <@*|@fixed>@ <|@
tid v204 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v203 
=== Predecessor ===
v206 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B8 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606200634081250640
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v205 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v238 
=== Usages ===
=== Predecessor ===
v207 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v238  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v238 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v428 
value: j195 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v225 
=== Usages ===
=== Predecessor ===
v205 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v428 value: j195 stateAfter: - lastLocationAccess: - #next: v225  <|@  <|@
f <@~|@floating>@ <|@
tid v432 <|@
result [v13|QWORD + v8|QWORD * 1 + 192] <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j194 
index: j236 
=== Succesors ===
=== Usages ===
v225 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j194 index: j236  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v225 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
stamp: void
=== Inputs ===
address: v432 
=== Succesors ===
next: v228 
=== Usages ===
=== Predecessor ===
v238 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v432 #next: v228  <|@  <|@
f <@~|@floating>@ <|@
tid v433 <|@
result [v13|QWORD + v8|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j194 
index: j236 
=== Succesors ===
=== Usages ===
v228 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j194 index: j236  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v228 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
stamp: void
=== Inputs ===
address: v433 
=== Succesors ===
next: v231 
=== Usages ===
=== Predecessor ===
v225 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v433 #next: v231  <|@  <|@
f <@~|@floating>@ <|@
tid v434 <|@
result [v13|QWORD + v8|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j194 
index: j236 
=== Succesors ===
=== Usages ===
v231 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j194 index: j236  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v231 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
stamp: void
=== Inputs ===
address: v434 
=== Succesors ===
next: v234 
=== Usages ===
=== Predecessor ===
v228 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v434 #next: v234  <|@  <|@
f <@~|@floating>@ <|@
tid v435 <|@
result [v13|QWORD + v8|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j194 
index: j236 
=== Succesors ===
=== Usages ===
v234 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j194 index: j236  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v234 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
stamp: void
=== Inputs ===
address: v435 
=== Succesors ===
next: v239 
=== Usages ===
=== Predecessor ===
v231 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v435 #next: v239  <|@  <|@
f <@~|@floating>@ <|@
tid v430 <|@
result [v8|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j236 
index: - 
=== Succesors ===
=== Usages ===
v239 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j236 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v239 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v430 
value: i27 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v240 
=== Usages ===
=== Predecessor ===
v234 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v430 value: i27 stateAfter: - lastLocationAccess: - #next: v240  <|@  <|@
f <@~|@floating>@ <|@
tid v431 <|@
result [v8|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j236 
index: - 
=== Succesors ===
=== Usages ===
v240 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j236 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v240 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v431 
value: j187 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v244 
=== Usages ===
=== Predecessor ===
v239 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v431 value: j187 stateAfter: - lastLocationAccess: - #next: v244  <|@  <|@
f <@~|@floating>@ <|@
tid v436 <|@
result [v8|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j236 
index: - 
=== Succesors ===
=== Usages ===
v244 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j236 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v303 <|@
result meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
rawvalue: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v244 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v436 
value: v303 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v210 
=== Usages ===
=== Predecessor ===
v240 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v436 value: v303 stateAfter: - lastLocationAccess: - #next: v210  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v210 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: a211 
=== Usages ===
=== Predecessor ===
v244 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a211  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a211 <|@
result v15|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j236 
=== Succesors ===
next: v213 
=== Usages ===
a216 
=== Predecessor ===
v210 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j236 #next: v213  <|@  <|@
f <@*|@fixed>@ <|@
tid v213 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v214 
=== Predecessor ===
a211 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v14|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v13|QWORD + v8|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v13|QWORD + v8|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v13|QWORD + v8|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v13|QWORD + v8|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v8|QWORD + 12], y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v8|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v8|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = MOVE v8|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v15|QWORD[.]] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v198 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v202 
=== Usages ===
=== Predecessor ===
v200 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v202  <|@  <|@
f <@*|@fixed>@ <|@
tid v202 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v203 
=== Predecessor ===
v198 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4592518698413299072
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v203 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v202 v204 
=== Succesors ===
next: a212 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v202 v204 #next: a212  <|@  <|@
f <@~|@floating>@ <|@
tid v186 <|@
result v16|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
rawvalue: meta{HotSpotType<[Ljava/lang/Object;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[Ljava/lang/Object;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a212 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a212 <|@
result v17|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?21 
arguments: v186 i27 i30 
=== Succesors ===
next: v215 
=== Usages ===
a216 
=== Predecessor ===
v203 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?21 arguments: v186 i27 i30 #next: v215  <|@  <|@
f <@*|@fixed>@ <|@
tid v215 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v214 
=== Predecessor ===
a212 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v16|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Math.max(Math.java:1252) [bci: 10]
stack: v4|DWORD 
locals: - - 
org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14]
stack: v5|DWORD 
locals: v0|QWORD[.] v2|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:10, 14] <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v17|QWORD[.]] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a216 <|@
result v18|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v214 
values: a211 a212 
=== Succesors ===
=== Usages ===
v427 a165 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v214 values: a211 a212  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v214 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v213 v215 
=== Succesors ===
next: v364 
=== Usages ===
a216 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v213 v215 #next: v364  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v364 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v317 
=== Usages ===
j366 
=== Predecessor ===
v214 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v317  <|@  <|@
f <@~|@floating>@ <|@
tid v427 <|@
result [v18|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a216 
index: - 
=== Succesors ===
=== Usages ===
j366 j258 j256 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a216 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j366 <|@
result v19|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v364 
address: v427 
=== Succesors ===
=== Usages ===
v440 v441 v442 v443 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v364 address: v427  <|@  <|@
f <@~|@floating>@ <|@
tid j306 <|@
result v20|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483646] ⇈fffffffffffffffe
=== Inputs ===
value: i27 
=== Succesors ===
=== Usages ===
j407 j394 j400 j404 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i27  <|@  <|@
f <@~|@floating>@ <|@
tid j393 <|@
result long[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j394 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j394 <|@
result v21|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483638] ⇈fffffffffffffffe
=== Inputs ===
x: j306 
y: j393 
=== Succesors ===
=== Usages ===
v397 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j306 y: j393  <|@  <|@
f <@~|@floating>@ <|@
tid j242 <|@
result long[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j392 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v419 <|@
result v22|V256_DWORD[........] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null,null,null,null,null,null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL>
stampKind: <n -,n -,n -,n -,n -,n -,n -,n ->
value: SIMD<null,null,null,null,null,null,null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v418 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j223 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j387 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v317 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v318 
=== Predecessor ===
v364 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v18|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = LEA [v18|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOVSXD v7|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = LEA [v20|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B39" 
    successors "B14" "B39" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4616189618054758400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j387 <|@
result v23|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v318 
values: j223 j392 
=== Succesors ===
=== Usages ===
v443 j392 v442 j445 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v318 values: j223 j392  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v318 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v317 
=== Succesors ===
next: v418 
=== Usages ===
j387 v322 v323 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v317 #next: v418  <|@  <|@
f <@~|@floating>@ <|@
tid v443 <|@
result [v19|QWORD[.] + v23|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j366 
index: j387 
=== Succesors ===
=== Usages ===
v418 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j366 index: j387  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v418 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v443 
value: v419 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v325 
=== Usages ===
=== Predecessor ===
v318 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v443 value: v419 stateAfter: - lastLocationAccess: - #next: v325  <|@  <|@
f <@~|@floating>@ <|@
tid j392 <|@
result v24|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j387 
y: j242 
=== Succesors ===
=== Usages ===
v401 j387 v397 j374 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j387 y: j242  <|@  <|@
f <@~|@floating>@ <|@
tid v397 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j394 
y: j392 
=== Succesors ===
=== Usages ===
v325 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j394 y: j392  <|@  <|@
f <@*|@fixed>@ <|@
tid v325 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v397 
=== Succesors ===
trueSuccessor: v322 
falseSuccessor: v324 
=== Usages ===
=== Predecessor ===
v418 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v397 #trueSuccessor: v322 #falseSuccessor: v324  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v23|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v19|QWORD[.] + v23|QWORD * 4], input: v22|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = LEA [v23|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v24|QWORD, y: v21|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v322 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v318 
=== Succesors ===
next: v346 
=== Usages ===
=== Predecessor ===
v325 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v318 #next: v346  <|@  <|@
f <@~|@floating>@ <|@
tid j399 <|@
result long[-4|0xfffffffffffffffc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j400 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j400 <|@
result v25|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483642] ⇈fffffffffffffffe
=== Inputs ===
x: j306 
y: j399 
=== Succesors ===
=== Usages ===
v401 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j306 y: j399  <|@  <|@
f <@~|@floating>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j400 
y: j392 
=== Succesors ===
=== Usages ===
v346 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j400 y: j392  <|@  <|@
f <@*|@fixed>@ <|@
tid v346 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v401 
=== Succesors ===
trueSuccessor: v345 
falseSuccessor: v344 
=== Usages ===
=== Predecessor ===
v322 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v401 #trueSuccessor: v345 #falseSuccessor: v344  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = LEA [v20|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v24|QWORD, y: v25|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v345 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v349 
=== Usages ===
=== Predecessor ===
v346 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v349  <|@  <|@
f <@*|@fixed>@ <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v338 
=== Predecessor ===
v345 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v24|QWORD] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v344 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v417 
=== Usages ===
=== Predecessor ===
v346 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v417  <|@  <|@
f <@~|@floating>@ <|@
tid v442 <|@
result [v19|QWORD[.] + v23|QWORD * 4 + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times4
stamp: void*
=== Inputs ===
base: j366 
index: j387 
=== Succesors ===
=== Usages ===
v417 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j366 index: j387  <|@  <|@
f <@~|@floating>@ <|@
tid v422 <|@
result v26|V128_DWORD[....] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null,null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL,n - NULL,n - NULL>
stampKind: <n -,n -,n -,n ->
value: SIMD<null,null,null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v417 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v417 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v442 
value: v422 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v337 
=== Usages ===
=== Predecessor ===
v344 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v442 value: v422 stateAfter: - lastLocationAccess: - #next: v337  <|@  <|@
f <@~|@floating>@ <|@
tid j444 <|@
result long[12|0xc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 12
stableDimension: 0
stamp: i64 [12] ⇊000000000000000c ⇈000000000000000c
stampKind: i64
value: long[12|0xc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j445 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j445 <|@
result v27|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j387 
y: j444 
=== Succesors ===
=== Usages ===
j374 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j387 y: j444  <|@  <|@
f <@*|@fixed>@ <|@
tid v337 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v338 
=== Predecessor ===
v417 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v26|V128_DWORD[....] = L oc: SIMD<null,null,null,null> <|@ <|@
      nr   -1  <|@ instruction J (address: [v19|QWORD[.] + v23|QWORD * 4 + 32], input: v26|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = LEA [v23|QWORD + 12] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v27|QWORD] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j374 <|@
result v28|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v338 
values: j445 j392 
=== Succesors ===
=== Usages ===
v441 j380 j367 v405 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v338 values: j445 j392  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v338 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v337 v349 
=== Succesors ===
next: v352 
=== Usages ===
j374 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v337 v349 #next: v352  <|@  <|@
f <@~|@floating>@ <|@
tid j403 <|@
result long[-2|0xfffffffffffffffe] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j404 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j404 <|@
result v29|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483644] ⇈fffffffffffffffe
=== Inputs ===
x: j306 
y: j403 
=== Succesors ===
=== Usages ===
v405 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j306 y: j403  <|@  <|@
f <@~|@floating>@ <|@
tid v405 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j404 
y: j374 
=== Succesors ===
=== Usages ===
v352 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j404 y: j374  <|@  <|@
f <@*|@fixed>@ <|@
tid v352 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v405 
=== Succesors ===
trueSuccessor: v351 
falseSuccessor: v350 
=== Usages ===
=== Predecessor ===
v338 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v405 #trueSuccessor: v351 #falseSuccessor: v350  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v28|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = LEA [v20|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v28|QWORD, y: v29|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v351 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v355 
=== Usages ===
=== Predecessor ===
v352 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v355  <|@  <|@
f <@*|@fixed>@ <|@
tid v355 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v341 
=== Predecessor ===
v351 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v28|QWORD] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v350 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v415 
=== Usages ===
=== Predecessor ===
v352 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v415  <|@  <|@
f <@~|@floating>@ <|@
tid v441 <|@
result [v19|QWORD[.] + v28|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j366 
index: j374 
=== Succesors ===
=== Usages ===
v415 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j366 index: j374  <|@  <|@
f <@~|@floating>@ <|@
tid v421 <|@
result v30|V64_DWORD[..] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL>
stampKind: <n -,n ->
value: SIMD<null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v415 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v441 
value: v421 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v340 
=== Usages ===
=== Predecessor ===
v350 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v441 value: v421 stateAfter: - lastLocationAccess: - #next: v340  <|@  <|@
f <@~|@floating>@ <|@
tid j379 <|@
result long[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j380 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j380 <|@
result v31|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j374 
y: j379 
=== Succesors ===
=== Usages ===
j367 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j374 y: j379  <|@  <|@
f <@*|@fixed>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v341 
=== Predecessor ===
v415 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v30|V64_DWORD[..] = L oc: SIMD<null,null> <|@ <|@
      nr   -1  <|@ instruction J (address: [v19|QWORD[.] + v28|QWORD * 4], input: v30|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = LEA [v28|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v31|QWORD] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j367 <|@
result v32|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v341 
values: j380 j374 
=== Succesors ===
=== Usages ===
v440 v408 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v341 values: j380 j374  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v340 v355 
=== Succesors ===
next: v358 
=== Usages ===
j367 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v340 v355 #next: v358  <|@  <|@
f <@~|@floating>@ <|@
tid j270 <|@
result long[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j271 j407 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j407 <|@
result v33|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483645] ⇊0000000000000001
=== Inputs ===
x: j306 
y: j270 
=== Succesors ===
=== Usages ===
v408 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j306 y: j270  <|@  <|@
f <@~|@floating>@ <|@
tid v408 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j407 
y: j367 
=== Succesors ===
=== Usages ===
v358 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j407 y: j367  <|@  <|@
f <@*|@fixed>@ <|@
tid v358 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v408 
=== Succesors ===
trueSuccessor: v357 
falseSuccessor: v356 
=== Usages ===
=== Predecessor ===
v341 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v408 #trueSuccessor: v357 #falseSuccessor: v356  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v32|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = DEC v20|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v32|QWORD, y: v33|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B20 -> B21 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v357 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v361 
=== Usages ===
=== Predecessor ===
v358 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v361  <|@  <|@
f <@*|@fixed>@ <|@
tid v361 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v331 
=== Predecessor ===
v357 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v356 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v413 
=== Usages ===
=== Predecessor ===
v358 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v413  <|@  <|@
f <@~|@floating>@ <|@
tid v440 <|@
result [v19|QWORD[.] + v32|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j366 
index: j367 
=== Succesors ===
=== Usages ===
v413 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j366 index: j367  <|@  <|@
f <@~|@floating>@ <|@
tid a420 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: n - NULL
stampKind: n -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v413 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v413 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v440 
value: a420 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v343 
=== Usages ===
=== Predecessor ===
v356 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v440 value: a420 stateAfter: - lastLocationAccess: - #next: v343  <|@  <|@
f <@*|@fixed>@ <|@
tid v343 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v331 
=== Predecessor ===
v413 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v19|QWORD[.] + v32|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v331 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v343 v361 
=== Succesors ===
next: v255 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v343 v361 #next: v255  <|@  <|@
f <@~|@floating>@ <|@
tid i304 <|@
result int[2147483647|0x7fffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:154) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
rawvalue: 2147483647
stableDimension: 0
stamp: i32 [2147483647] ⇊000000007fffffff ⇈000000007fffffff
stampKind: i32
value: int[2147483647|0x7fffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v305 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v305 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:154) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
stamp: void
=== Inputs ===
x: i22 
y: i304 
=== Succesors ===
=== Usages ===
v255 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: i22 y: i304  <|@  <|@
f <@~|@floating>@ <|@
tid j279 <|@
result v34|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:158) [bci: 12]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
j280 v439 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v255 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:154) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v305 
=== Succesors ===
trueSuccessor: v253 
falseSuccessor: v254 
=== Usages ===
=== Predecessor ===
v331 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v305 #trueSuccessor: v253 #falseSuccessor: v254  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction TEST v6|DWORD y: 2147483647 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v253 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:155) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v282 
=== Usages ===
=== Predecessor ===
v255 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v282  <|@  <|@
f <@*|@fixed>@ <|@
tid v282 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v281 
=== Predecessor ===
v253 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B24 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v254 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:157) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: j256 
=== Usages ===
=== Predecessor ===
v255 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j256  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j256 <|@
result [v18|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToFirstArrayElement(WriteBarrierSnippets.java:376) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:159) [bci: 20]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v427 
=== Succesors ===
next: j258 
=== Usages ===
j257 
=== Predecessor ===
v254 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v427 #next: j258  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j258 <|@
result [v18|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:385) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v427 
=== Succesors ===
next: v267 
=== Usages ===
j263 
=== Predecessor ===
j256 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v427 #next: v267  <|@  <|@
f <@~|@floating>@ <|@
tid i259 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i260 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i260 <|@
result v35|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i27 
y: i259 
=== Succesors ===
=== Usages ===
i261 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i27 y: i259  <|@  <|@
f <@~|@floating>@ <|@
tid i261 <|@
result v36|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
stamp: i32 [-2147483644 - 2147483644] ⇊0000000000000004 ⇈00000000fffffffc
=== Inputs ===
x: i260 
y: i8 
=== Succesors ===
=== Usages ===
j262 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i260 y: i8  <|@  <|@
f <@~|@floating>@ <|@
tid j262 <|@
result v37|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 26]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
resultBits: 64
stamp: i64 [-2147483644 - 2147483644] ⇊0000000000000004 ⇈fffffffffffffffc
=== Inputs ===
value: i261 
=== Succesors ===
=== Usages ===
j263 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i261  <|@  <|@
f <@~|@floating>@ <|@
tid j263 <|@
result v39|QWORD[.] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 27]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
stamp: i64
=== Inputs ===
x: j258 
y: j262 
=== Succesors ===
=== Usages ===
j264 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j258 y: j262  <|@  <|@
f <@~|@floating>@ <|@
tid j264 <|@
result v40|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j263 
y: i10 
=== Succesors ===
=== Usages ===
j265 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j263 y: i10  <|@  <|@
f <@~|@floating>@ <|@
tid j257 <|@
result v41|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:159) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j256 
y: i10 
=== Succesors ===
=== Usages ===
j265 j280 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j256 y: i10  <|@  <|@
f <@~|@floating>@ <|@
tid j265 <|@
result v43|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:161) [bci: 41]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
stamp: i64 [-36028797018963967 - 36028797018963967]
=== Inputs ===
x: j264 
y: j257 
=== Succesors ===
=== Usages ===
j266 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j264 y: j257  <|@  <|@
f <@~|@floating>@ <|@
tid j266 <|@
result v44|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:161) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
stamp: i64 [-36028797018963966 - 36028797018963968]
=== Inputs ===
x: j265 
y: j187 
=== Succesors ===
=== Usages ===
j269 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j265 y: j187  <|@  <|@
f <@*|@fixed>@ <|@
tid v267 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v268 
=== Predecessor ===
j258 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = DEC v7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = SHL v35|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOVSXD v36|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = LEA [v18|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = ADD (x: v38|QWORD[.], y: v37|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[*] = SHR v39|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[.] = LEA [v18|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[*] = SHR v42|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[*] = SUB (x: v40|QWORD[*], ~y: v41|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[*] = INC v43|QWORD[*] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v44|QWORD[*]] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B38" 
    successors "B27" "B38" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j269 <|@
result v45|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v268 
values: j266 j271 
=== Succesors ===
=== Usages ===
j271 v272 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v268 values: j266 j271  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v268 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 2.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v267 
=== Succesors ===
next: v275 
=== Usages ===
j269 v273 v278 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v267 #next: v275  <|@  <|@
f <@~|@floating>@ <|@
tid v272 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 55]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j269 
y: j187 
=== Succesors ===
=== Usages ===
v275 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j269 y: j187  <|@  <|@
f <@*|@fixed>@ <|@
tid v275 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 55]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v272 
=== Succesors ===
trueSuccessor: v273 
falseSuccessor: v274 
=== Usages ===
=== Predecessor ===
v268 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v272 #trueSuccessor: v273 #falseSuccessor: v274  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v45|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v45|QWORD[*] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B26 -> B27 falseDestination: B26 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v273 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:165) [bci: 76]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v268 
=== Succesors ===
next: v283 
=== Usages ===
=== Predecessor ===
v275 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v268 #next: v283  <|@  <|@
f <@*|@fixed>@ <|@
tid v283 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v281 
=== Predecessor ===
v273 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B24" "B27" 
    successors "B29" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v281 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v282 v283 
=== Succesors ===
next: a165 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v282 v283 #next: a165  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a165 <|@
result v18|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a216 
=== Succesors ===
next: j285 
=== Usages ===
j289 ?34 a128 
=== Predecessor ===
v281 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a216 #next: j285  <|@  <|@
f <@~|@floating>@ <|@
tid a74 <|@
result v46|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:455) [bci: 1]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a423 
=== Succesors ===
=== Usages ===
j285 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a423  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j285 <|@
result v47|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:461) [bci: 50]
stamp: i64
=== Inputs ===
object: a74 
=== Succesors ===
next: j289 
=== Usages ===
v437 
=== Predecessor ===
a165 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a74 #next: j289  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j289 <|@
result v48|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:461) [bci: 50]
stamp: i64
=== Inputs ===
object: a165 
=== Succesors ===
next: v292 
=== Usages ===
v438 
=== Predecessor ===
j285 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a165 #next: v292  <|@  <|@
f <@~|@floating>@ <|@
tid v437 <|@
result [v47|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j285 
index: - 
=== Succesors ===
=== Usages ===
v292 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j285 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v438 <|@
result [v48|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j289 
index: - 
=== Succesors ===
=== Usages ===
v292 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j289 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j291 <|@
result v49|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:461) [bci: 50]
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i424 
=== Succesors ===
=== Usages ===
v292 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i424  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v292 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: ObjectDisjointArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:461) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v437 v438 j291 
=== Succesors ===
next: v129 
=== Usages ===
=== Predecessor ===
j289 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v437 v438 j291 #next: v129  <|@  <|@
f <@~|@floating>@ <|@
tid a128 <|@
result v50|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:462) [bci: 55]
op: Compress
stamp: n! -
=== Inputs ===
value: a165 
=== Succesors ===
=== Usages ===
v129 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a165  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:462) [bci: 55]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v425 
value: a128 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j293 
=== Usages ===
=== Predecessor ===
v292 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v425 value: a128 stateAfter: - lastLocationAccess: - #next: j293  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j293 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:462) [bci: 55]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v297 
=== Usages ===
j294 
=== Predecessor ===
v129 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v297  <|@  <|@
f <@~|@floating>@ <|@
tid j294 <|@
result v51|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:462) [bci: 55]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j293 
y: i10 
=== Succesors ===
=== Usages ===
v439 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j293 y: i10  <|@  <|@
f <@~|@floating>@ <|@
tid v439 <|@
result [v51|QWORD[*] + v34|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j294 
index: j279 
=== Succesors ===
=== Usages ===
v297 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j294 index: j279  <|@  <|@
f <@~|@floating>@ <|@
tid i298 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:462) [bci: 55]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v297 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v297 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:462) [bci: 55]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v439 
value: i298 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v39 
=== Usages ===
=== Predecessor ===
j293 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v439 value: i298 stateAfter: - lastLocationAccess: - #next: v39  <|@  <|@
f <@~|@floating>@ <|@
tid i35 <|@
result int[512|0x200] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 59]
rawvalue: 512
stableDimension: 0
stamp: i32 [512] ⇊0000000000000200 ⇈0000000000000200
stampKind: i32
value: int[512|0x200]
=== Inputs ===
=== Succesors ===
=== Usages ===
v36 v40 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 62]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i424 
y: i35 
=== Succesors ===
=== Usages ===
v39 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i424 y: i35  <|@  <|@
f <@*|@fixed>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 62]
stamp: void
trueSuccessorProbability: 0.992280021489804
=== Inputs ===
condition: v36 
=== Succesors ===
trueSuccessor: v37 
falseSuccessor: v38 
=== Usages ===
=== Predecessor ===
v297 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v36 #trueSuccessor: v37 #falseSuccessor: v38  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@65b35ec4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[*] = MOVE v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[*] = MOVE v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = MOV v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v47|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v48|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v49|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: ObjectDisjointArraycopy(Word,Word,Word)void@0x106813060:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v50|DWORD[.] = COMPRESSPOINTER (input: v18|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@65b35ec4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v50|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v51|QWORD[*] + v34|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: 512 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.992280021489804 condition: |<| trueDestination: B28 -> B29 falseDestination: B28 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4607112883415333754
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 65]
stamp: void
=== Inputs ===
=== Succesors ===
next: v46 
=== Usages ===
=== Predecessor ===
v39 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v46  <|@  <|@
f <@~|@floating>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 70]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i27 
y: i35 
=== Succesors ===
=== Usages ===
v46 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i27 y: i35  <|@  <|@
f <@*|@fixed>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 70]
stamp: void
trueSuccessorProbability: 0.992596516007533
=== Inputs ===
condition: v40 
=== Succesors ===
trueSuccessor: v45 
falseSuccessor: v44 
=== Usages ===
=== Predecessor ===
v37 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v40 #trueSuccessor: v45 #falseSuccessor: v44  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v7|DWORD y: 512 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.992596516007533 condition: < trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors 
    xhandlers
    flags 
    probability 4607046713563941733
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v45 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: v70 
=== Usages ===
=== Predecessor ===
v46 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v70  <|@  <|@
f <@*|@fixed>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:468) [bci: 90]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v45 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors 
    xhandlers
    flags 
    probability 4575119763131861572
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v44 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:466) [bci: 86]
stamp: void
=== Inputs ===
=== Succesors ===
next: v56 
=== Usages ===
=== Predecessor ===
v46 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v56  <|@  <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:466) [bci: 87]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@5a986355
stamp: void
targetMethod: HotSpotMethod<EconomicMapImpl.createHash()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
v56 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?157 <|@
d <@d|@=== Debug Properties ===
bci: 87
code: ResolvedJavaMethodBytecode<EconomicMapImpl.grow()>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 466
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - 
=== Succesors ===
=== Usages ===
v56 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v56 <|@
d <@d|@=== Debug Properties ===
bci: 87
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:466) [bci: 87]
polymorphic: false
stamp: void
targetMethod: Direct#EconomicMapImpl.createHash
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v130 
stateDuring: ?157 
=== Succesors ===
next: v64 
=== Usages ===
=== Predecessor ===
v44 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v130 stateDuring: ?157 #next: v64  <|@  <|@
f <@*|@fixed>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:468) [bci: 90]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v56 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:466) [bci: 87]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.createHash()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:87] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4575550551393190656
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: v152 
=== Usages ===
=== Predecessor ===
v39 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v152  <|@  <|@
f <@~|@floating>@ <|@
tid i48 <|@
result int[131072|0x20000] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 74]
rawvalue: 131072
stableDimension: 0
stamp: i32 [131072] ⇊0000000000020000 ⇈0000000000020000
stampKind: i32
value: int[131072|0x20000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v49 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 76]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i424 
y: i48 
=== Succesors ===
=== Usages ===
v152 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i424 y: i48  <|@  <|@
f <@*|@fixed>@ <|@
tid v152 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 76]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v49 
=== Succesors ===
trueSuccessor: v149 
falseSuccessor: v151 
=== Usages ===
=== Predecessor ===
v38 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v49 #trueSuccessor: v149 #falseSuccessor: v151  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: 131072 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B32 -> B33 falseDestination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4575550551393190656
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v149 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v156 
=== Usages ===
=== Predecessor ===
v152 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v156  <|@  <|@
f <@~|@floating>@ <|@
tid i51 <|@
result int[131073|0x20001] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 83]
rawvalue: 131073
stableDimension: 0
stamp: i32 [131073] ⇊0000000000020001 ⇈0000000000020001
stampKind: i32
value: int[131073|0x20001]
=== Inputs ===
=== Succesors ===
=== Usages ===
v52 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 83]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i27 
y: i51 
=== Succesors ===
=== Usages ===
v156 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i27 y: i51  <|@  <|@
f <@*|@fixed>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 83]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v52 
=== Succesors ===
trueSuccessor: v153 
falseSuccessor: v155 
=== Usages ===
=== Predecessor ===
v149 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v52 #trueSuccessor: v153 #falseSuccessor: v155  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v7|DWORD y: 131073 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4575550551393190656
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v153 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
next: v63 
=== Usages ===
=== Predecessor ===
v156 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v63  <|@  <|@
f <@*|@fixed>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:468) [bci: 90]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v153 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
next: v182 
=== Usages ===
=== Predecessor ===
v156 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v182  <|@  <|@
f <@~|@floating>@ <|@
tid i183 <|@
result int[-33811|0xffffffffffff7bed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -33811
stableDimension: 0
stamp: i32 [-33811] ⇊00000000ffff7bed ⇈00000000ffff7bed
stampKind: i32
value: int[-33811|0xffffffffffff7bed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i179 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v176 
=== Predecessor ===
v155 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-33811|0xffffffffffff7bed]] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v151 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v177 
=== Usages ===
=== Predecessor ===
v152 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v177  <|@  <|@
f <@~|@floating>@ <|@
tid i178 <|@
result int[-33555|0xffffffffffff7ced] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -33555
stableDimension: 0
stamp: i32 [-33555] ⇊00000000ffff7ced ⇈00000000ffff7ced
stampKind: i32
value: int[-33555|0xffffffffffff7ced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i179 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v177 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v176 
=== Predecessor ===
v151 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-33555|0xffffffffffff7ced]] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i179 <|@
result v52|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-33811 - -33555] ⇊00000000ffff78ed ⇈00000000ffff7fed
valueDescription: i32
=== Inputs ===
merge: v176 
values: i178 i183 
=== Succesors ===
=== Usages ===
v181 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v176 values: i178 i183  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v176 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v177 v182 
=== Succesors ===
next: v181 
=== Usages ===
i179 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v177 v182 #next: v181  <|@  <|@
tid ?34 <|@
d <@d|@=== Debug Properties ===
bci: 58
code: ResolvedJavaMethodBytecode<EconomicMapImpl.grow()>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:462) [bci: 55]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 463
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i424 - a165 
=== Succesors ===
=== Usages ===
v181 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i424 - a165  <|@  <|@
f <@*|@fixed>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?34 
actionAndReason: i179 
speculation: a170 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v176 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?34 actionAndReason: i179 speculation: a170  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v52|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v52|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 58]
locals: v0|QWORD[.] v2|DWORD - v18|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:58] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v274 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 58]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v277 
=== Usages ===
=== Predecessor ===
v275 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v277  <|@  <|@
f <@~|@floating>@ <|@
tid j271 <|@
result v53|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
stamp: i64
=== Inputs ===
x: j269 
y: j270 
=== Succesors ===
=== Usages ===
j269 j276 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j269 y: j270  <|@  <|@
f <@~|@floating>@ <|@
tid j280 <|@
result v54|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 62]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
stamp: i64 [4682670080 - 36028801701634047] ⇈00ffffffffffffff
=== Inputs ===
x: j257 
y: j279 
=== Succesors ===
=== Usages ===
j276 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j257 y: j279  <|@  <|@
f <@~|@floating>@ <|@
tid j276 <|@
result v55|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 65]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
stamp: i64
=== Inputs ===
x: j271 
y: j280 
=== Succesors ===
=== Usages ===
v277 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j271 y: j280  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v277 <|@
d <@d|@=== Debug Properties ===
kind: boolean
nodeSourcePosition: at org.graalvm.compiler.replacements.nodes.DirectStoreNode.storeBoolean(long, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 70]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
stamp: void
=== Inputs ===
address: j276 
value: i30 
=== Succesors ===
next: v278 
=== Usages ===
=== Predecessor ===
v274 >@ <|@
instruction <@DirectStore|@org.graalvm.compiler.replacements.nodes.DirectStoreNode>@ address: j276 value: i30 #next: v278  <|@  <|@
f <@*|@fixed>@ <|@
tid v278 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
stamp: void
=== Inputs ===
loopBegin: v268 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v277 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v268  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[*] = DEC v45|QWORD[*] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[*] = ADD (x: v41|QWORD[*], y: v34|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[*] = ADD (x: v54|QWORD[*], y: v53|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v55|QWORD[*]], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v53|QWORD[*]] destination: B38 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4613937818241073152
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v324 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v323 
=== Usages ===
=== Predecessor ===
v325 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v323  <|@  <|@
f <@*|@fixed>@ <|@
tid v323 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v318 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v324 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v318  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v24|QWORD] destination: B39 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v147 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:457) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v174 
=== Usages ===
=== Predecessor ===
v148 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v174  <|@  <|@
f <@~|@floating>@ <|@
tid i175 <|@
result int[-20755|0xffffffffffffaeed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -20755
stableDimension: 0
stamp: i32 [-20755] ⇊00000000ffffaeed ⇈00000000ffffaeed
stampKind: i32
value: int[-20755|0xffffffffffffaeed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i171 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v167 
=== Predecessor ===
v147 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-20755|0xffffffffffffaeed]] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B5" "B40" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i171 <|@
result v56|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-30049 - -20755] ⇊00000000ffff8a8d ⇈00000000ffffaeff
valueDescription: i32
=== Inputs ===
merge: v167 
values: i169 i175 
=== Succesors ===
=== Usages ===
v173 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v167 values: i169 i175  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v167 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v168 v174 
=== Succesors ===
next: v173 
=== Usages ===
i171 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v168 v174 #next: v173  <|@  <|@
f <@*|@fixed>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?21 
actionAndReason: i171 
speculation: a170 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v167 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?21 actionAndReason: i171 speculation: a170  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v56|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Math.max(Math.java:1252) [bci: 10]
stack: v4|DWORD 
locals: - - 
org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14]
stack: v5|DWORD 
locals: v0|QWORD[.] v2|DWORD - - 
>@ <|@ instruction DEOPT info [bci:10, 14] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@31948acd slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:455) [bci: 0]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction v2|DWORD = MOV [v1|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = SHR v2|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v3|DWORD y: 9 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.733268496372742 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4604779914999330026
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[8|0x8]] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B4" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v4|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = SHR v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = ADD (x: v5|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v6|DWORD y: 1073741824 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = SHL v6|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v7|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = SHL v6|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = LEA [v10|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = AND v11|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOVSXD v12|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = ADD (x: v13|QWORD, y: v8|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v14|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606200634081250640
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v14|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v13|QWORD + v8|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v13|QWORD + v8|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v13|QWORD + v8|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v13|QWORD + v8|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v8|QWORD + 12], y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v8|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v8|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = MOVE v8|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v15|QWORD[.]] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v18|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = LEA [v18|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOVSXD v7|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = LEA [v20|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4613937818241073152
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v24|QWORD] destination: B39 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B39" 
    successors "B14" "B39" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4616189618054758400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v23|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v19|QWORD[.] + v23|QWORD * 4], input: v22|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = LEA [v23|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v24|QWORD, y: v21|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = LEA [v20|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v24|QWORD, y: v25|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v26|V128_DWORD[....] = L oc: SIMD<null,null,null,null> <|@ <|@
      nr   -1  <|@ instruction J (address: [v19|QWORD[.] + v23|QWORD * 4 + 32], input: v26|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = LEA [v23|QWORD + 12] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v27|QWORD] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v28|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = LEA [v20|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v28|QWORD, y: v29|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v30|V64_DWORD[..] = L oc: SIMD<null,null> <|@ <|@
      nr   -1  <|@ instruction J (address: [v19|QWORD[.] + v28|QWORD * 4], input: v30|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = LEA [v28|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v31|QWORD] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v32|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = DEC v20|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v32|QWORD, y: v33|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B20 -> B21 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v19|QWORD[.] + v32|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction TEST v6|DWORD y: 2147483647 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = DEC v7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = SHL v35|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOVSXD v36|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = LEA [v18|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = ADD (x: v38|QWORD[.], y: v37|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[*] = SHR v39|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[.] = LEA [v18|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[*] = SHR v42|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[*] = SUB (x: v40|QWORD[*], ~y: v41|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[*] = INC v43|QWORD[*] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v44|QWORD[*]] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[*] = DEC v45|QWORD[*] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[*] = ADD (x: v41|QWORD[*], y: v34|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[*] = ADD (x: v54|QWORD[*], y: v53|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v55|QWORD[*]], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v53|QWORD[*]] destination: B38 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B38" 
    successors "B27" "B38" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v45|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v45|QWORD[*] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B26 -> B27 falseDestination: B26 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B24 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B24" "B27" 
    successors "B29" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@65b35ec4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[*] = MOVE v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[*] = MOVE v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = MOV v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v47|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v48|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v49|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: ObjectDisjointArraycopy(Word,Word,Word)void@0x106813060:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v50|DWORD[.] = COMPRESSPOINTER (input: v18|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@65b35ec4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v50|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v51|QWORD[*] + v34|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: 512 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.992280021489804 condition: |<| trueDestination: B28 -> B29 falseDestination: B28 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4607112883415333754
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v7|DWORD y: 512 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.992596516007533 condition: < trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors 
    xhandlers
    flags 
    probability 4607046713563941733
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4598476627519280684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v3|DWORD] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v24|QWORD] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v28|QWORD] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4592518698413299072
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v16|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Math.max(Math.java:1252) [bci: 10]
stack: v4|DWORD 
locals: - - 
org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14]
stack: v5|DWORD 
locals: v0|QWORD[.] v2|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:10, 14] <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v17|QWORD[.]] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B11" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B8 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4575550551393190656
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: 131072 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B32 -> B33 falseDestination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4575550551393190656
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v7|DWORD y: 131073 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4575550551393190656
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors 
    xhandlers
    flags 
    probability 4575119763131861572
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:466) [bci: 87]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.createHash()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:87] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-30049|0xffffffffffff8a9f]] destination: B5 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B5" "B40" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v56|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Math.max(Math.java:1252) [bci: 10]
stack: v4|DWORD 
locals: - - 
org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14]
stack: v5|DWORD 
locals: v0|QWORD[.] v2|DWORD - - 
>@ <|@ instruction DEOPT info [bci:10, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-33811|0xffffffffffff7bed]] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v52|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v52|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 58]
locals: v0|QWORD[.] v2|DWORD - v18|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:58] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-20755|0xffffffffffffaeed]] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-33555|0xffffffffffff7ced]] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #22         // entries:java.lang.Object[]
     4: arraylength   
     5: istore_1      
     6: iload_1       
     7: iconst_1      
     8: ishr          
     9: bipush        8
    11: iload_1       
    12: iconst_2      
    13: ishr          
    14: invokestatic  #59         // java.lang.Math.max:(int, int)int
    17: iadd          
    18: istore_2      
    19: iload_2       
    20: ldc           #72         // 1073741823
    22: if_icmple     35
    25: new           #58         // java.lang.UnsupportedOperationException
    28: dup           
    29: ldc           #73         // "map grown too large!"
    31: invokespecial #49         // java.lang.UnsupportedOperationException.<init>:(java.lang.String)void
    34: athrow        
    35: iload_2       
    36: iconst_1      
    37: ishl          
    38: anewarray     #32         // java.lang.Object
    41: astore_3      
    42: aload_0       
    43: getfield      #22         // entries:java.lang.Object[]
    46: iconst_0      
    47: aload_3       
    48: iconst_0      
    49: iload_1       
    50: invokestatic  #60         // java.lang.System.arraycopy:(java.lang.Object, int, java.lang.Object, int, int)void
    53: aload_0       
    54: aload_3       
    55: putfield      #22         // entries:java.lang.Object[]
    58: iload_1       
    59: sipush        512
    62: if_icmpge     73
    65: aload_3       
    66: arraylength   
    67: sipush        512
    70: if_icmpge     86
    73: iload_1       
    74: ldc           #48         // 131072
    76: if_icmpge     90
    79: aload_3       
    80: arraylength   
    81: ldc           #48         // 131072
    83: if_icmple     90
    86: aload_0       
    87: invokespecial #58         // createHash:()void
    90: return        
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@31948acd slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r13|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rsi:0, r13:0, stack:32]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:455) [bci: 0]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction r14|DWORD = MOV [r13|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction stack:36|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr   14  <|@ instruction rdx|DWORD = SHR r14|DWORD y: 2 size: DWORD <|@ <|@
      nr   16  <|@ instruction CMP rdx|DWORD y: 9 size: DWORD <|@ <|@
      nr   18  <|@ instruction BRANCH trueDestinationProbability: 0.733268496372742 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4604779914999330026
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction rdx|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr   24  <|@ instruction JUMP ~[] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B4" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   32  <|@ instruction r10|DWORD = SHR r14|DWORD size: DWORD <|@ <|@
      nr   34  <|@ instruction r11|DWORD = ADD (x: r10|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr   36  <|@ instruction CMP r11|DWORD y: 1073741824 size: DWORD <|@ <|@
      nr   38  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   42  <|@ instruction r8|DWORD = SHL r11|DWORD size: DWORD <|@ <|@
      nr   44  <|@ instruction CMP (x: r14|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   46  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   60  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   62  <|@ instruction r9|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   64  <|@ instruction CMP r8|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   66  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction rbx|DWORD = SHL r11|DWORD y: 3 size: DWORD <|@ <|@
      nr   72  <|@ instruction rbx|DWORD = LEA [rbx|DWORD + 23] size: DWORD <|@ <|@
      nr   74  <|@ instruction rbx|DWORD = AND rbx|DWORD y: -8 size: DWORD <|@ <|@
      nr   76  <|@ instruction rbx|QWORD = MOVSXD rbx|DWORD size: QWORD <|@ <|@
      nr   78  <|@ instruction rdi|QWORD = ADD (x: rbx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr   80  <|@ instruction CMP (x: rdi|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr   82  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606200634081250640
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   96  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdi|QWORD) size: QWORD <|@ <|@
      nr   98  <|@ instruction AMD64PREFETCH ~[rbx|QWORD + rcx|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  100  <|@ instruction AMD64PREFETCH ~[rbx|QWORD + rcx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  102  <|@ instruction AMD64PREFETCH ~[rbx|QWORD + rcx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  104  <|@ instruction AMD64PREFETCH ~[rbx|QWORD + rcx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  106  <|@ instruction MOV (x: [rcx|QWORD + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction MOV [rcx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  110  <|@ instruction MOV [rcx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr  112  <|@ instruction rcx|QWORD[.] = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction rax|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  116  <|@ instruction stack:48|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD <|@ <|@
      nr  118  <|@ instruction r14|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  120  <|@ instruction r13|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  122  <|@ instruction JUMP ~[] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  154  <|@ instruction rdi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  156  <|@ instruction rsi|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr  158  <|@ instruction rdx|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr  160  <|@ instruction xmm0|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null> <|@ <|@
      nr  162  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  164  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4613937818241073152
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  416  <|@ instruction r10|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction JUMP ~[] destination: B39 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B39" 
    successors "B14" "B39" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4616189618054758400
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  168  <|@ instruction J (address: [rdi|QWORD[.] + r10|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  170  <|@ instruction r11|QWORD = LEA [r10|QWORD + 8] size: QWORD <|@ <|@
      nr  172  <|@ instruction CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  174  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  178  <|@ instruction rdx|QWORD = LEA [rsi|QWORD - 4] size: QWORD <|@ <|@
      nr  180  <|@ instruction CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  182  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  190  <|@ instruction xmm0|V128_DWORD[....] = L oc: SIMD<null,null,null,null> <|@ <|@
      nr  192  <|@ instruction J (address: [rdi|QWORD[.] + r10|QWORD * 4 + 32], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  194  <|@ instruction rdx|QWORD = LEA [r10|QWORD + 12] size: QWORD <|@ <|@
      nr  196  <|@ instruction r11|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  202  <|@ instruction rdx|QWORD = LEA [rsi|QWORD - 2] size: QWORD <|@ <|@
      nr  204  <|@ instruction CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  206  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  214  <|@ instruction xmm0|V64_DWORD[..] = L oc: SIMD<null,null> <|@ <|@
      nr  216  <|@ instruction J (address: [rdi|QWORD[.] + r11|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr  218  <|@ instruction rdx|QWORD = LEA [r11|QWORD + 2] size: QWORD <|@ <|@
      nr  220  <|@ instruction r11|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  222  <|@ instruction JUMP ~[] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  226  <|@ instruction rsi|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr  228  <|@ instruction CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  230  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B20 -> B21 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  238  <|@ instruction MOV (x: [rdi|QWORD[.] + r11|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  240  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  244  <|@ instruction r10|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  246  <|@ instruction TEST r13|DWORD y: 2147483647 size: DWORD <|@ <|@
      nr  248  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  264  <|@ instruction r8|DWORD = DEC r14|DWORD size: DWORD <|@ <|@
      nr  266  <|@ instruction r8|DWORD = SHL r8|DWORD y: 2 size: DWORD <|@ <|@
      nr  268  <|@ instruction rdi|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  270  <|@ instruction rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  272  <|@ instruction rsi|QWORD[.] = ADD (x: rsi|QWORD[.], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  274  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  276  <|@ instruction rdi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  278  <|@ instruction rdi|QWORD[*] = SHR rdi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  280  <|@ instruction rsi|QWORD[*] = SUB (x: rsi|QWORD[*], ~y: rdi|QWORD[*]) size: QWORD <|@ <|@
      nr  282  <|@ instruction rsi|QWORD[*] = INC rsi|QWORD[*] size: QWORD <|@ <|@
      nr  284  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  404  <|@ instruction rsi|QWORD[*] = DEC rsi|QWORD[*] size: QWORD <|@ <|@
      nr  406  <|@ instruction rdx|QWORD[*] = ADD (x: rdi|QWORD[*], y: r10|QWORD) size: QWORD <|@ <|@
      nr  408  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD[*], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  410  <|@ instruction MOVB (x: [rdx|QWORD[*]], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  412  <|@ instruction JUMP ~[] destination: B38 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B38" 
    successors "B27" "B38" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4607182418800017408
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  288  <|@ instruction CMP rsi|QWORD[*] y: 1 size: QWORD <|@ <|@
      nr  290  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B26 -> B27 falseDestination: B26 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  252  <|@ instruction stack:56|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction stack:44|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  256  <|@ instruction r14|DWORD = MOVE stack:36|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction r10|DWORD[.] = MOVE stack:48|DWORD[.] moveKind: DWORD <|@ <|@
      nr  260  <|@ instruction JUMP ~[] destination: B24 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B24" "B27" 
    successors "B29" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  306  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@65b35ec4 encoding: base: 0 shift: 3 <|@ <|@
      nr  308  <|@ instruction r13|QWORD[*] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  310  <|@ instruction rdx|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  312  <|@ instruction r10|QWORD = MOV r14|DWORD size: DWORD <|@ <|@
      nr  314  <|@ instruction rdi|QWORD = LEA [r13|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  316  <|@ instruction rsi|QWORD = LEA [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  318  <|@ instruction rdx|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  320  <|@ instruction stack:64|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  322  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: ObjectDisjointArraycopy(Word,Word,Word)void@0x106813060:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  324  <|@ instruction rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction rsi|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@65b35ec4 encoding: base: 0 shift: 3 <|@ <|@
      nr  328  <|@ instruction r11|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction MOV (x: [r11|QWORD[.] + 24], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr  332  <|@ instruction rsi|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  334  <|@ instruction r10|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction MOVB (x: [rsi|QWORD[*] + r10|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  338  <|@ instruction CMP stack:36|DWORD y: 512 size: DWORD <|@ <|@
      nr  340  <|@ instruction BRANCH trueDestinationProbability: 0.992280021489804 condition: |<| trueDestination: B28 -> B29 falseDestination: B28 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4607112883415333754
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  344  <|@ instruction CMP stack:44|DWORD y: 512 size: DWORD <|@ <|@
      nr  346  <|@ instruction BRANCH trueDestinationProbability: 0.992596516007533 condition: < trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors 
    xhandlers
    flags 
    probability 4607046713563941733
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  350  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  294  <|@ instruction stack:56|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  296  <|@ instruction stack:44|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  298  <|@ instruction r14|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  300  <|@ instruction r10|DWORD[.] = MOVE stack:48|DWORD[.] moveKind: DWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4598476627519280684
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   28  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  186  <|@ instruction JUMP ~[] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  234  <|@ instruction JUMP ~[] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  126  <|@ instruction stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  128  <|@ instruction stack:44|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  130  <|@ instruction stack:48|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD <|@ <|@
      nr  132  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4592518698413299072
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  136  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr  138  <|@ instruction rsi|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  140  <|@ instruction rdx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  142  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  144  <|@ instruction r13|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  146  <|@ instruction r14|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ st <@st|@reference-map: [stack:16, stack:32]
live-base-pointers: []
java.lang.Math.max(Math.java:1252) [bci: 10]
stack: stack:44|DWORD 
locals: - - 
org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14]
stack: stack:40|DWORD 
locals: stack:32|QWORD[.] stack:36|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:10, 14] <|@ <|@
      nr  150  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B11" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ instruction stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   88  <|@ instruction stack:44|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   90  <|@ instruction stack:48|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction JUMP ~[] destination: B8 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4575550551393190656
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  362  <|@ instruction CMP stack:36|DWORD y: 131072 size: DWORD <|@ <|@
      nr  364  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B32 -> B33 falseDestination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4575550551393190656
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  368  <|@ instruction r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  370  <|@ instruction CMP r8|DWORD y: 131073 size: DWORD <|@ <|@
      nr  372  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4575550551393190656
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  376  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors 
    xhandlers
    flags 
    probability 4575119763131861572
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  354  <|@ instruction rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  356  <|@ st <@st|@reference-map: []
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:466) [bci: 87]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.createHash()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:87] <|@ <|@
      nr  358  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction r8|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   52  <|@ instruction r11|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   54  <|@ instruction r10|DWORD = MOVE input: int[-30049|0xffffffffffff8a9f] <|@ <|@
      nr   56  <|@ instruction JUMP ~[] destination: B5 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B5" "B40" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  432  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  434  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  436  <|@ st <@st|@reference-map: [r11:0]
live-base-pointers: []
java.lang.Math.max(Math.java:1252) [bci: 10]
stack: rdx|DWORD 
locals: - - 
org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14]
stack: r8|DWORD 
locals: r11|QWORD[.] stack:36|DWORD - - 
>@ <|@ instruction DEOPT info [bci:10, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  380  <|@ instruction r10|DWORD = MOVE input: int[-33811|0xffffffffffff7bed] <|@ <|@
      nr  382  <|@ instruction r14|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  384  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  396  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  398  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  400  <|@ st <@st|@reference-map: [rax:0, r11:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 58]
locals: r11|QWORD[.] r14|DWORD - rax|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:58] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  422  <|@ instruction r8|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  424  <|@ instruction r11|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  426  <|@ instruction r10|DWORD = MOVE input: int[-20755|0xffffffffffffaeed] <|@ <|@
      nr  428  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  388  <|@ instruction r10|DWORD = MOVE input: int[-33555|0xffffffffffff7ced] <|@ <|@
      nr  390  <|@ instruction r14|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  392  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #22         // entries:java.lang.Object[]
     4: arraylength   
     5: istore_1      
     6: iload_1       
     7: iconst_1      
     8: ishr          
     9: bipush        8
    11: iload_1       
    12: iconst_2      
    13: ishr          
    14: invokestatic  #59         // java.lang.Math.max:(int, int)int
    17: iadd          
    18: istore_2      
    19: iload_2       
    20: ldc           #72         // 1073741823
    22: if_icmple     35
    25: new           #58         // java.lang.UnsupportedOperationException
    28: dup           
    29: ldc           #73         // "map grown too large!"
    31: invokespecial #49         // java.lang.UnsupportedOperationException.<init>:(java.lang.String)void
    34: athrow        
    35: iload_2       
    36: iconst_1      
    37: ishl          
    38: anewarray     #32         // java.lang.Object
    41: astore_3      
    42: aload_0       
    43: getfield      #22         // entries:java.lang.Object[]
    46: iconst_0      
    47: aload_3       
    48: iconst_0      
    49: iload_1       
    50: invokestatic  #60         // java.lang.System.arraycopy:(java.lang.Object, int, java.lang.Object, int, int)void
    53: aload_0       
    54: aload_3       
    55: putfield      #22         // entries:java.lang.Object[]
    58: iload_1       
    59: sipush        512
    62: if_icmpge     73
    65: aload_3       
    66: arraylength   
    67: sipush        512
    70: if_icmpge     86
    73: iload_1       
    74: ldc           #48         // 131072
    76: if_icmpge     90
    79: aload_3       
    80: arraylength   
    81: ldc           #48         // 131072
    83: if_icmple     90
    86: aload_0       
    87: invokespecial #58         // createHash:()void
    90: return        
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@31948acd slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r13|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rsi:0, r13:0, stack:32]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:455) [bci: 0]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction r14|DWORD = MOV [r13|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction stack:36|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr   14  <|@ instruction rdx|DWORD = SHR r14|DWORD y: 2 size: DWORD <|@ <|@
      nr   16  <|@ instruction CMP rdx|DWORD y: 9 size: DWORD <|@ <|@
      nr   18  <|@ instruction BRANCH trueDestinationProbability: 0.733268496372742 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4604779914999330026
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction rdx|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr   24  <|@ instruction JUMP ~[] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B0" 
    successors "B4" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   32  <|@ instruction r10|DWORD = SHR r14|DWORD size: DWORD <|@ <|@
      nr   34  <|@ instruction r11|DWORD = ADD (x: r10|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr   36  <|@ instruction CMP r11|DWORD y: 1073741824 size: DWORD <|@ <|@
      nr   38  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   42  <|@ instruction r8|DWORD = SHL r11|DWORD size: DWORD <|@ <|@
      nr   44  <|@ instruction CMP (x: r14|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   46  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   60  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   62  <|@ instruction r9|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   64  <|@ instruction CMP r8|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   66  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" "B9" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction rbx|DWORD = SHL r11|DWORD y: 3 size: DWORD <|@ <|@
      nr   72  <|@ instruction rbx|DWORD = LEA [rbx|DWORD + 23] size: DWORD <|@ <|@
      nr   74  <|@ instruction rbx|DWORD = AND rbx|DWORD y: -8 size: DWORD <|@ <|@
      nr   76  <|@ instruction rbx|QWORD = MOVSXD rbx|DWORD size: QWORD <|@ <|@
      nr   78  <|@ instruction rdi|QWORD = ADD (x: rbx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr   80  <|@ instruction CMP (x: rdi|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr   82  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B11 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606200634081250640
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   96  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdi|QWORD) size: QWORD <|@ <|@
      nr   98  <|@ instruction AMD64PREFETCH ~[rbx|QWORD + rcx|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  100  <|@ instruction AMD64PREFETCH ~[rbx|QWORD + rcx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  102  <|@ instruction AMD64PREFETCH ~[rbx|QWORD + rcx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  104  <|@ instruction AMD64PREFETCH ~[rbx|QWORD + rcx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  106  <|@ instruction MOV (x: [rcx|QWORD + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction MOV [rcx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  110  <|@ instruction MOV [rcx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr  112  <|@ instruction rcx|QWORD[.] = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction rax|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  116  <|@ instruction stack:48|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD <|@ <|@
      nr  118  <|@ instruction r14|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  120  <|@ instruction r13|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  122  <|@ instruction JUMP ~[] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  154  <|@ instruction rdi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  156  <|@ instruction rsi|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr  158  <|@ instruction rdx|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr  160  <|@ instruction xmm0|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null> <|@ <|@
      nr  162  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  164  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4613937818241073152
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  416  <|@ instruction r10|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction JUMP ~[] destination: B39 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B39" 
    successors "B14" "B39" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4616189618054758400
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  168  <|@ instruction J (address: [rdi|QWORD[.] + r10|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  170  <|@ instruction r11|QWORD = LEA [r10|QWORD + 8] size: QWORD <|@ <|@
      nr  172  <|@ instruction CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  174  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  178  <|@ instruction rdx|QWORD = LEA [rsi|QWORD - 4] size: QWORD <|@ <|@
      nr  180  <|@ instruction CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  182  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B14 -> B17 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  190  <|@ instruction xmm0|V128_DWORD[....] = L oc: SIMD<null,null,null,null> <|@ <|@
      nr  192  <|@ instruction J (address: [rdi|QWORD[.] + r10|QWORD * 4 + 32], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  194  <|@ instruction rdx|QWORD = LEA [r10|QWORD + 12] size: QWORD <|@ <|@
      nr  196  <|@ instruction r11|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B14" 
    successors "B20" "B19" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  202  <|@ instruction rdx|QWORD = LEA [rsi|QWORD - 2] size: QWORD <|@ <|@
      nr  204  <|@ instruction CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  206  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B17 -> B20 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  214  <|@ instruction xmm0|V64_DWORD[..] = L oc: SIMD<null,null> <|@ <|@
      nr  216  <|@ instruction J (address: [rdi|QWORD[.] + r11|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr  218  <|@ instruction rdx|QWORD = LEA [r11|QWORD + 2] size: QWORD <|@ <|@
      nr  220  <|@ instruction r11|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  222  <|@ instruction JUMP ~[] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B17" 
    successors "B23" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  226  <|@ instruction rsi|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr  228  <|@ instruction CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  230  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B20 -> B23 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  238  <|@ instruction MOV (x: [rdi|QWORD[.] + r11|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  240  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B20" 
    successors "B28" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  244  <|@ instruction r10|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  246  <|@ instruction TEST r13|DWORD y: 2147483647 size: DWORD <|@ <|@
      nr  248  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B23 -> B28 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  264  <|@ instruction r8|DWORD = DEC r14|DWORD size: DWORD <|@ <|@
      nr  266  <|@ instruction r8|DWORD = SHL r8|DWORD y: 2 size: DWORD <|@ <|@
      nr  268  <|@ instruction rdi|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  270  <|@ instruction rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  272  <|@ instruction rsi|QWORD[.] = ADD (x: rsi|QWORD[.], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  274  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  276  <|@ instruction rdi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  278  <|@ instruction rdi|QWORD[*] = SHR rdi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  280  <|@ instruction rsi|QWORD[*] = SUB (x: rsi|QWORD[*], ~y: rdi|QWORD[*]) size: QWORD <|@ <|@
      nr  282  <|@ instruction rsi|QWORD[*] = INC rsi|QWORD[*] size: QWORD <|@ <|@
      nr  284  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  404  <|@ instruction rsi|QWORD[*] = DEC rsi|QWORD[*] size: QWORD <|@ <|@
      nr  406  <|@ instruction rdx|QWORD[*] = ADD (x: rdi|QWORD[*], y: r10|QWORD) size: QWORD <|@ <|@
      nr  408  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD[*], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  410  <|@ instruction MOVB (x: [rdx|QWORD[*]], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  412  <|@ instruction JUMP ~[] destination: B38 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B38" 
    successors "B28" "B38" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4607182418800017408
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  288  <|@ instruction CMP rsi|QWORD[*] y: 1 size: QWORD <|@ <|@
      nr  290  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B26 -> B28 falseDestination: B26 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B23" "B26" 
    successors "B29" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  252  <|@ instruction stack:56|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction stack:44|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  256  <|@ instruction r14|DWORD = MOVE stack:36|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction r10|DWORD[.] = MOVE stack:48|DWORD[.] moveKind: DWORD <|@ <|@
      nr  306  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@65b35ec4 encoding: base: 0 shift: 3 <|@ <|@
      nr  308  <|@ instruction r13|QWORD[*] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  310  <|@ instruction rdx|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  312  <|@ instruction r10|QWORD = MOV r14|DWORD size: DWORD <|@ <|@
      nr  314  <|@ instruction rdi|QWORD = LEA [r13|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  316  <|@ instruction rsi|QWORD = LEA [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  318  <|@ instruction rdx|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  320  <|@ instruction stack:64|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  322  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: ObjectDisjointArraycopy(Word,Word,Word)void@0x106813060:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  324  <|@ instruction rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction rsi|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@65b35ec4 encoding: base: 0 shift: 3 <|@ <|@
      nr  328  <|@ instruction r11|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction MOV (x: [r11|QWORD[.] + 24], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr  332  <|@ instruction rsi|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  334  <|@ instruction r10|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction MOVB (x: [rsi|QWORD[*] + r10|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  338  <|@ instruction CMP stack:36|DWORD y: 512 size: DWORD <|@ <|@
      nr  340  <|@ instruction BRANCH trueDestinationProbability: 0.992280021489804 condition: |<| trueDestination: B28 -> B29 falseDestination: B28 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4607112883415333754
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  344  <|@ instruction CMP stack:44|DWORD y: 512 size: DWORD <|@ <|@
      nr  346  <|@ instruction BRANCH trueDestinationProbability: 0.992596516007533 condition: < trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors 
    xhandlers
    flags 
    probability 4607046713563941733
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  350  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4592518698413299072
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  126  <|@ instruction stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  128  <|@ instruction stack:44|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  130  <|@ instruction stack:48|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD <|@ <|@
      nr  136  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr  138  <|@ instruction rsi|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  140  <|@ instruction rdx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  142  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  144  <|@ instruction r13|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  146  <|@ instruction r14|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ st <@st|@reference-map: [stack:16, stack:32]
live-base-pointers: []
java.lang.Math.max(Math.java:1252) [bci: 10]
stack: stack:44|DWORD 
locals: - - 
org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14]
stack: stack:40|DWORD 
locals: stack:32|QWORD[.] stack:36|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:10, 14] <|@ <|@
      nr  150  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4575550551393190656
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  362  <|@ instruction CMP stack:36|DWORD y: 131072 size: DWORD <|@ <|@
      nr  364  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B32 -> B33 falseDestination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4575550551393190656
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  368  <|@ instruction r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  370  <|@ instruction CMP r8|DWORD y: 131073 size: DWORD <|@ <|@
      nr  372  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4575550551393190656
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  376  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors 
    xhandlers
    flags 
    probability 4575119763131861572
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  354  <|@ instruction rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  356  <|@ st <@st|@reference-map: []
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:466) [bci: 87]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.createHash()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:87] <|@ <|@
      nr  358  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction r8|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   52  <|@ instruction r11|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   54  <|@ instruction r10|DWORD = MOVE input: int[-30049|0xffffffffffff8a9f] <|@ <|@
      nr   56  <|@ instruction JUMP ~[] destination: B5 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B5" "B40" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  432  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  434  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  436  <|@ st <@st|@reference-map: [r11:0]
live-base-pointers: []
java.lang.Math.max(Math.java:1252) [bci: 10]
stack: rdx|DWORD 
locals: - - 
org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14]
stack: r8|DWORD 
locals: r11|QWORD[.] stack:36|DWORD - - 
>@ <|@ instruction DEOPT info [bci:10, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  380  <|@ instruction r10|DWORD = MOVE input: int[-33811|0xffffffffffff7bed] <|@ <|@
      nr  384  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  390  <|@ instruction r14|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  396  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  398  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  400  <|@ st <@st|@reference-map: [rax:0, r11:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 58]
locals: r11|QWORD[.] r14|DWORD - rax|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:58] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  422  <|@ instruction r8|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  424  <|@ instruction r11|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  426  <|@ instruction r10|DWORD = MOVE input: int[-20755|0xffffffffffffaeed] <|@ <|@
      nr  428  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  388  <|@ instruction r10|DWORD = MOVE input: int[-33555|0xffffffffffff7ced] <|@ <|@
      nr  392  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #22         // entries:java.lang.Object[]
     4: arraylength   
     5: istore_1      
     6: iload_1       
     7: iconst_1      
     8: ishr          
     9: bipush        8
    11: iload_1       
    12: iconst_2      
    13: ishr          
    14: invokestatic  #59         // java.lang.Math.max:(int, int)int
    17: iadd          
    18: istore_2      
    19: iload_2       
    20: ldc           #72         // 1073741823
    22: if_icmple     35
    25: new           #58         // java.lang.UnsupportedOperationException
    28: dup           
    29: ldc           #73         // "map grown too large!"
    31: invokespecial #49         // java.lang.UnsupportedOperationException.<init>:(java.lang.String)void
    34: athrow        
    35: iload_2       
    36: iconst_1      
    37: ishl          
    38: anewarray     #32         // java.lang.Object
    41: astore_3      
    42: aload_0       
    43: getfield      #22         // entries:java.lang.Object[]
    46: iconst_0      
    47: aload_3       
    48: iconst_0      
    49: iload_1       
    50: invokestatic  #60         // java.lang.System.arraycopy:(java.lang.Object, int, java.lang.Object, int, int)void
    53: aload_0       
    54: aload_3       
    55: putfield      #22         // entries:java.lang.Object[]
    58: iload_1       
    59: sipush        512
    62: if_icmpge     73
    65: aload_3       
    66: arraylength   
    67: sipush        512
    70: if_icmpge     86
    73: iload_1       
    74: ldc           #48         // 131072
    76: if_icmpge     90
    79: aload_3       
    80: arraylength   
    81: ldc           #48         // 131072
    83: if_icmple     90
    86: aload_0       
    87: invokespecial #58         // createHash:()void
    90: return        
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec3848896c24304889742420448b6e18468b34ed0c000000448974241c418bd6c1ea0283fa090f8305000000ba08000000458bd641d1ea458bda4403da4181fb000000400f83c4020000458bc341d1e0453bf00f8f76020000498b4f604d8b4f704181f8ffffff000f83d7010000418bdbc1e3038d5b1783e3f84863db488bfb4803f9493bf90f87b901000049897f600f18840bc00000000f18840b000100000f18840b400100000f18840b800100004489410c48c70101000000c74108addeadde488bc144896c2410458bf0458beb488d78104963f6488d56f8c5f9efc049c7c200000000e90f000000660f1f440000660f1f4400004d8bd3c4a17e7f04974d8d5a084c3bda7eee488d56fc4c3bda0f8f12000000c5f9efc0c4a17a7f449720498d520c4c8bda488d56fe4c3bda0f8f11000000c5f9efc0c4a1f97e049f498d53024c8bda48ffce4c3bde0f8f040000004689249f49ba00e01b170100000041f7c5ffffff7f0f844f000000458bc641ffc841c1e0024963f8488d70104803f748c1ee09488d781048c1ef09482bf748ffc6e91e0000000f1f8400000000000f1f800000000048ffce488bd74903d24803d64488224883fe017deb4c895424084489742414448b74241c448b542410458bea49c1e503488bd0458bd6498d7d10488d7210498bd248890424e80000000090488b0424488bf048c1ee034c8b5c242041897318498bf348c1ee094c8b54240846882416817c241c000200000f8355000000817c2414000200000f8d7a000000488b6c24304883c438850500000000c5f877c344895424188954241444896c241048b9addeaddeaddeadde488bf1418bd0b900000000458beb458bf0e80000000090e957feffff817c241c000002000f8395000000448b4424144181f8010002000f8d56000000488b6c24304883c438850500000000c5f877c3498bf30f1f8000000000e80000000090488b6c24304883c438850500000000c5f877c3458bc24c8bde41ba9f8affff4589979c0200004d89a7a8020000e8000000009041baed7bffff448b74241c4589979c0200004d89a7a8020000e80000000090458bc24c8bde41baedaeffffebbf41baed7cffffebd1e80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@31948acd slotKind: QWORD  <||@
  Comment 48 6 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 53 8 r13|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 57 10 r14|DWORD = MOV [r13|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 57 [rsi:0, r13:0, stack:32]at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:455) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2  |3 
     locals:  |rsi|QWORD[.]  |-  |-  |-   <||@
  Comment 57 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 65 12 stack:36|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 70 14 rdx|DWORD = SHR r14|DWORD y: 2 size: DWORD  <||@
  Comment 76 16 CMP rdx|DWORD y: 9 size: DWORD  <||@
  Comment 79 18 BRANCH trueDestinationProbability: 0.733268496372742 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B3  <||@
  Comment 85 block B1 null  <||@
  Comment 85 20 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 85 22 rdx|DWORD = MOVE input: int[8|0x8]  <||@
  Comment 90 24 JUMP ~[] destination: B1 -> B3  <||@
  Comment 90 block B3 null  <||@
  Comment 90 30 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 90 32 r10|DWORD = SHR r14|DWORD size: DWORD  <||@
  Comment 96 34 r11|DWORD = ADD (x: r10|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 102 36 CMP r11|DWORD y: 1073741824 size: DWORD  <||@
  Comment 109 38 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B40  <||@
  Comment 115 block B4 null  <||@
  Comment 115 40 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 115 42 r8|DWORD = SHL r11|DWORD size: DWORD  <||@
  Comment 121 44 CMP (x: r14|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 124 46 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6  <||@
  Comment 130 block B6 null  <||@
  Comment 130 58 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 130 60 rcx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 134 62 r9|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 138 64 CMP r8|DWORD y: 16777215 size: DWORD  <||@
  Comment 145 66 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B11  <||@
  Comment 151 block B7 null  <||@
  Comment 151 68 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 151 70 rbx|DWORD = SHL r11|DWORD y: 3 size: DWORD  <||@
  Comment 157 72 rbx|DWORD = LEA [rbx|DWORD + 23] size: DWORD  <||@
  Comment 160 74 rbx|DWORD = AND rbx|DWORD y: -8 size: DWORD  <||@
  Comment 163 76 rbx|QWORD = MOVSXD rbx|DWORD size: QWORD  <||@
  Comment 166 78 rdi|QWORD = ADD (x: rbx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 172 80 CMP (x: rdi|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 175 82 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B11 falseDestination: B7 -> B9  <||@
  Comment 181 block B9 null  <||@
  Comment 181 94 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 181 96 MOV (x: [r15|QWORD + 96], y: rdi|QWORD) size: QWORD  <||@
  Comment 185 98 AMD64PREFETCH ~[rbx|QWORD + rcx|QWORD * 1 + 192] instr: 0  <||@
  Comment 193 100 AMD64PREFETCH ~[rbx|QWORD + rcx|QWORD * 1 + 256] instr: 0  <||@
  Comment 201 102 AMD64PREFETCH ~[rbx|QWORD + rcx|QWORD * 1 + 320] instr: 0  <||@
  Comment 209 104 AMD64PREFETCH ~[rbx|QWORD + rcx|QWORD * 1 + 384] instr: 0  <||@
  Comment 217 106 MOV (x: [rcx|QWORD + 12], y: r8|DWORD) size: DWORD  <||@
  Comment 221 108 MOV [rcx|QWORD] y: 1 size: QWORD  <||@
  Comment 228 110 MOV [rcx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}  <||@
  Comment 228 {meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}}  <||@
  Comment 235 112 rcx|QWORD[.] = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 235 114 rax|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 238 116 stack:48|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD  <||@
  Comment 243 118 r14|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 246 120 r13|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 249 122 JUMP ~[] destination: B9 -> B12  <||@
  Comment 249 block B12 null  <||@
  Comment 249 152 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 249 154 rdi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 253 156 rsi|QWORD = MOVSXD r14|DWORD size: QWORD  <||@
  Comment 256 158 rdx|QWORD = LEA [rsi|QWORD - 8] size: QWORD  <||@
  Comment 260 160 xmm0|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null>  <||@
  Comment 264 162 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 271 164 JUMP ~[] destination: B12 -> B13  <||@
  Comment 276 block B39 loop 0 depth 1 header:318|LoopBegin  <||@
  Comment 276 414 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 288 416 r10|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 291 418 JUMP ~[] destination: B39 -> B13  <||@
  Comment 291 block B13 loop 0 depth 1 header:318|LoopBegin  <||@
  Comment 291 166 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 291 168 J (address: [rdi|QWORD[.] + r10|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU  <||@
  Comment 297 170 r11|QWORD = LEA [r10|QWORD + 8] size: QWORD  <||@
  Comment 301 172 CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 304 174 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B39  <||@
  Comment 306 block B14 null  <||@
  Comment 306 176 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 306 178 rdx|QWORD = LEA [rsi|QWORD - 4] size: QWORD  <||@
  Comment 310 180 CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 313 182 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B14 -> B17 falseDestination: B14 -> B16  <||@
  Comment 319 block B16 null  <||@
  Comment 319 188 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 319 190 xmm0|V128_DWORD[....] = L oc: SIMD<null,null,null,null>  <||@
  Comment 323 192 J (address: [rdi|QWORD[.] + r10|QWORD * 4 + 32], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU  <||@
  Comment 330 194 rdx|QWORD = LEA [r10|QWORD + 12] size: QWORD  <||@
  Comment 334 196 r11|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 337 198 JUMP ~[] destination: B16 -> B17  <||@
  Comment 337 block B17 null  <||@
  Comment 337 200 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 337 202 rdx|QWORD = LEA [rsi|QWORD - 2] size: QWORD  <||@
  Comment 341 204 CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 344 206 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B17 -> B20 falseDestination: B17 -> B19  <||@
  Comment 350 block B19 null  <||@
  Comment 350 212 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 350 214 xmm0|V64_DWORD[..] = L oc: SIMD<null,null>  <||@
  Comment 354 216 J (address: [rdi|QWORD[.] + r11|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ  <||@
  Comment 360 218 rdx|QWORD = LEA [r11|QWORD + 2] size: QWORD  <||@
  Comment 364 220 r11|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 367 222 JUMP ~[] destination: B19 -> B20  <||@
  Comment 367 block B20 null  <||@
  Comment 367 224 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 367 226 rsi|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 370 228 CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 373 230 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B20 -> B23 falseDestination: B20 -> B22  <||@
  Comment 379 block B22 null  <||@
  Comment 379 236 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 379 238 MOV (x: [rdi|QWORD[.] + r11|QWORD * 4], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 383 240 JUMP ~[] destination: B22 -> B23  <||@
  Comment 383 block B23 null  <||@
  Comment 383 242 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 383 244 r10|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 393 246 TEST r13|DWORD y: 2147483647 size: DWORD  <||@
  Comment 400 248 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B23 -> B28 falseDestination: B23 -> B25  <||@
  Comment 406 block B25 null  <||@
  Comment 406 262 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 406 264 r8|DWORD = DEC r14|DWORD size: DWORD  <||@
  Comment 412 266 r8|DWORD = SHL r8|DWORD y: 2 size: DWORD  <||@
  Comment 416 268 rdi|QWORD = MOVSXD r8|DWORD size: QWORD  <||@
  Comment 419 270 rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 423 272 rsi|QWORD[.] = ADD (x: rsi|QWORD[.], y: rdi|QWORD) size: QWORD  <||@
  Comment 426 274 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 430 276 rdi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 434 278 rdi|QWORD[*] = SHR rdi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 438 280 rsi|QWORD[*] = SUB (x: rsi|QWORD[*], ~y: rdi|QWORD[*]) size: QWORD  <||@
  Comment 441 282 rsi|QWORD[*] = INC rsi|QWORD[*] size: QWORD  <||@
  Comment 444 284 JUMP ~[] destination: B25 -> B26  <||@
  Comment 449 block B38 loop 1 depth 1 header:268|LoopBegin  <||@
  Comment 449 402 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 464 404 rsi|QWORD[*] = DEC rsi|QWORD[*] size: QWORD  <||@
  Comment 467 406 rdx|QWORD[*] = ADD (x: rdi|QWORD[*], y: r10|QWORD) size: QWORD  <||@
  Comment 473 408 rdx|QWORD[*] = ADD (x: rdx|QWORD[*], y: rsi|QWORD[*]) size: QWORD  <||@
  Comment 476 410 MOVB (x: [rdx|QWORD[*]], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 479 412 JUMP ~[] destination: B38 -> B26  <||@
  Comment 479 block B26 loop 1 depth 1 header:268|LoopBegin  <||@
  Comment 479 286 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 479 288 CMP rsi|QWORD[*] y: 1 size: QWORD  <||@
  Comment 483 290 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B26 -> B28 falseDestination: B26 -> B38  <||@
  Comment 485 block B28 null  <||@
  Comment 485 304 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 485 252 stack:56|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 490 254 stack:44|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 495 256 r14|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 500 258 r10|DWORD[.] = MOVE stack:48|DWORD[.] moveKind: DWORD  <||@
  Comment 505 306 r13|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@65b35ec4 encoding: base: 0 shift: 3  <||@
  Comment 512 308 r13|QWORD[*] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 512 310 rdx|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 515 312 r10|QWORD = MOV r14|DWORD size: DWORD  <||@
  Comment 518 314 rdi|QWORD = LEA [r13|QWORD[*] + 16] size: QWORD  <||@
  Comment 522 316 rsi|QWORD = LEA [rdx|QWORD[*] + 16] size: QWORD  <||@
  Comment 526 318 rdx|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 529 320 stack:64|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 533 322 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: ObjectDisjointArraycopy(Word,Word,Word)void@0x106813060:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 533 {Field[name=StubRoutines::_arrayof_oop_disjoint_arraycopy, type=address, offset=0, address=0x105a7dd20, value=0x106813060]:0x106813060}  <||@
  Comment 539 324 rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 543 326 rsi|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@65b35ec4 encoding: base: 0 shift: 3  <||@
  Comment 550 328 r11|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 555 330 MOV (x: [r11|QWORD[.] + 24], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 559 332 rsi|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD  <||@
  Comment 566 334 r10|QWORD = MOVE stack:56|QWORD moveKind: QWORD  <||@
  Comment 571 336 MOVB (x: [rsi|QWORD[*] + r10|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 575 338 CMP stack:36|DWORD y: 512 size: DWORD  <||@
  Comment 583 340 BRANCH trueDestinationProbability: 0.992280021489804 condition: |<| trueDestination: B28 -> B29 falseDestination: B28 -> B32  <||@
  Comment 589 block B29 null  <||@
  Comment 589 342 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 589 344 CMP stack:44|DWORD y: 512 size: DWORD  <||@
  Comment 597 346 BRANCH trueDestinationProbability: 0.992596516007533 condition: < trueDestination: B29 -> B30 falseDestination: B29 -> B31  <||@
  Comment 603 block B30 null  <||@
  Comment 603 348 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 603 350 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 612 12  <||@
  Comment 622 block B11 null  <||@
  Comment 622 134 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 622 126 stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 627 128 stack:44|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 631 130 stack:48|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD  <||@
  Comment 636 136 rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>}  <||@
  Comment 636 {meta{HotSpotType<[Ljava/lang/Object;, resolved>}}  <||@
  Comment 646 138 rsi|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 649 140 rdx|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 652 142 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 657 144 r13|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 660 146 r14|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 663 148 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:10, 14]  <||@
  Comment 663 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 668 [stack:16, stack:32]at java.lang.Math.max(Math.java:1252) [bci: 10, duringCall: false, rethrow: false]
              |0               |1 
     locals:  |-               |- 
     stack:   |stack:44|DWORD  |  
  at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14, duringCall: true, rethrow: false]
              |0                  |1               |2  |3 
     locals:  |stack:32|QWORD[.]  |stack:36|DWORD  |-  |- 
     stack:   |stack:40|DWORD     |                |   |    <||@
  Comment 669 150 JUMP ~[] destination: B11 -> B12  <||@
  Comment 674 block B32 null  <||@
  Comment 674 360 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 674 362 CMP stack:36|DWORD y: 131072 size: DWORD  <||@
  Comment 682 364 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B32 -> B33 falseDestination: B32 -> B36  <||@
  Comment 688 block B33 null  <||@
  Comment 688 366 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 688 368 r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 693 370 CMP r8|DWORD y: 131073 size: DWORD  <||@
  Comment 700 372 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35  <||@
  Comment 706 block B34 null  <||@
  Comment 706 374 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 706 376 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 715 12  <||@
  Comment 725 block B31 null  <||@
  Comment 725 352 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 725 354 rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 728 356 - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.createHash()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:87]  <||@
  Comment 728 9  <||@
  Comment 735 {HotSpotMethod<EconomicMapImpl.createHash()>}  <||@
  Comment 740 []at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:466) [bci: 87, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 741 358 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 750 12  <||@
  Comment 760 block B5 null  <||@
  Comment 760 48 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 760 50 r8|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 763 52 r11|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 766 54 r10|DWORD = MOVE input: int[-30049|0xffffffffffff8a9f]  <||@
  Comment 772 56 JUMP ~[] destination: B5 -> B41  <||@
  Comment 772 block B41 null  <||@
  Comment 772 430 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 772 432 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 779 434 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 786 436 DEOPT info [bci:10, 14]  <||@
  Comment 786 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 791 [r11:0]at java.lang.Math.max(Math.java:1252) [bci: 10, duringCall: false, rethrow: false]
              |0          |1 
     locals:  |-          |- 
     stack:   |rdx|DWORD  |  
  at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14, duringCall: true, rethrow: false]
              |0             |1               |2  |3 
     locals:  |r11|QWORD[.]  |stack:36|DWORD  |-  |- 
     stack:   |r8|DWORD      |                |   |    <||@
  Comment 792 block B35 null  <||@
  Comment 792 378 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 792 380 r10|DWORD = MOVE input: int[-33811|0xffffffffffff7bed]  <||@
  Comment 798 384 JUMP ~[] destination: B35 -> B37  <||@
  Comment 798 block B37 null  <||@
  Comment 798 394 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 798 390 r14|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 803 396 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 810 398 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 817 400 DEOPT info [bci:58]  <||@
  Comment 817 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 822 [rax:0, r11:0]at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 58, duringCall: false, rethrow: false]
              |0             |1          |2  |3            
     locals:  |r11|QWORD[.]  |r14|DWORD  |-  |rax|QWORD[.]   <||@
  Comment 823 block B40 null  <||@
  Comment 823 420 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 823 422 r8|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 826 424 r11|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 829 426 r10|DWORD = MOVE input: int[-20755|0xffffffffffffaeed]  <||@
  Comment 835 428 JUMP ~[] destination: B40 -> B41  <||@
  Comment 837 block B36 null  <||@
  Comment 837 386 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 837 388 r10|DWORD = MOVE input: int[-33555|0xffffffffffff7ced]  <||@
  Comment 843 392 JUMP ~[] destination: B36 -> B37  <||@
  Comment 845 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 845 4  <||@
  Comment 851 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 851 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-9218[org.graalvm.collections.EconomicMapImpl.grow()]"
  method "HotSpotCompilation-9218[org.graalvm.collections.EconomicMapImpl.grow()]"
  date 1527005202542
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 106bc8580 448b560849c1e203493bc20f85cfd8c3ff900f1f80000000000f1f800000000089842400c0feff4883ec3848896c24304889742420448b6e18468b34ed0c000000448974241c418bd6c1ea0283fa090f8305000000ba08000000458bd641d1ea458bda4403da4181fb000000400f83c4020000458bc341d1e0453bf00f8f76020000498b4f604d8b4f704181f8ffffff000f83d7010000418bdbc1e3038d5b1783e3f84863db488bfb4803f9493bf90f87b901000049897f600f18840bc00000000f18840b000100000f18840b400100000f18840b800100004489410c48c70101000000c74108f52200f8488bc144896c2410458bf0458beb488d78104963f6488d56f8c5f9efc049c7c200000000e90f000000660f1f440000660f1f4400004d8bd3c4a17e7f04974d8d5a084c3bda7eee488d56fc4c3bda0f8f12000000c5f9efc0c4a17a7f449720498d520c4c8bda488d56fe4c3bda0f8f11000000c5f9efc0c4a1f97e049f498d53024c8bda48ffce4c3bde0f8f040000004689249f49ba00e01b170100000041f7c5ffffff7f0f844f000000458bc641ffc841c1e0024963f8488d70104803f748c1ee09488d781048c1ef09482bf748ffc6e91e0000000f1f8400000000000f1f800000000048ffce488bd74903d24803d64488224883fe017deb4c895424084489742414448b74241c448b542410458bea49c1e503488bd0458bd6498d7d10488d7210498bd248890424e8c6a8c4ff90488b0424488bf048c1ee034c8b5c242041897318498bf348c1ee094c8b54240846882416817c241c000200000f8355000000817c2414000200000f8d7a000000488b6c24304883c43885051c68ccfdc5f877c344895424188954241444896c241048b9a81701c007000000488bf1418bd0b900000000458beb458bf0e8c4e53c0090e957feffff817c241c000002000f8395000000448b4424144181f8010002000f8d56000000488b6c24304883c4388505b567ccfdc5f877c3498bf30f1f8000000000e83cd8c3ff90488b6c24304883c43885059267ccfdc5f877c3458bc24c8bde41ba9f8affff4589979c0200004d89a7a8020000e867edc3ff9041baed7bffff448b74241c4589979c0200004d89a7a8020000e848edc3ff90458bc24c8bde41baedaeffffebbf41baed7cffffebd1e84e1d080090e828ecc3ff90f4f4f4f4f4f4f448bb0000000000000000e9fbfffffff4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@31948acd slotKind: QWORD  <||@
  Comment 48 6 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 53 8 r13|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 57 10 r14|DWORD = MOV [r13|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 57 [rsi:0, r13:0, stack:32]at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:455) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2  |3 
     locals:  |rsi|QWORD[.]  |-  |-  |-   <||@
  Comment 57 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 65 12 stack:36|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 70 14 rdx|DWORD = SHR r14|DWORD y: 2 size: DWORD  <||@
  Comment 76 16 CMP rdx|DWORD y: 9 size: DWORD  <||@
  Comment 79 18 BRANCH trueDestinationProbability: 0.733268496372742 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B3  <||@
  Comment 85 block B1 null  <||@
  Comment 85 20 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 85 22 rdx|DWORD = MOVE input: int[8|0x8]  <||@
  Comment 90 24 JUMP ~[] destination: B1 -> B3  <||@
  Comment 90 block B3 null  <||@
  Comment 90 30 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 90 32 r10|DWORD = SHR r14|DWORD size: DWORD  <||@
  Comment 96 34 r11|DWORD = ADD (x: r10|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 102 36 CMP r11|DWORD y: 1073741824 size: DWORD  <||@
  Comment 109 38 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B40  <||@
  Comment 115 block B4 null  <||@
  Comment 115 40 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 115 42 r8|DWORD = SHL r11|DWORD size: DWORD  <||@
  Comment 121 44 CMP (x: r14|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 124 46 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6  <||@
  Comment 130 block B6 null  <||@
  Comment 130 58 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 130 60 rcx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 134 62 r9|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 138 64 CMP r8|DWORD y: 16777215 size: DWORD  <||@
  Comment 145 66 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B11  <||@
  Comment 151 block B7 null  <||@
  Comment 151 68 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 151 70 rbx|DWORD = SHL r11|DWORD y: 3 size: DWORD  <||@
  Comment 157 72 rbx|DWORD = LEA [rbx|DWORD + 23] size: DWORD  <||@
  Comment 160 74 rbx|DWORD = AND rbx|DWORD y: -8 size: DWORD  <||@
  Comment 163 76 rbx|QWORD = MOVSXD rbx|DWORD size: QWORD  <||@
  Comment 166 78 rdi|QWORD = ADD (x: rbx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 172 80 CMP (x: rdi|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 175 82 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B11 falseDestination: B7 -> B9  <||@
  Comment 181 block B9 null  <||@
  Comment 181 94 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 181 96 MOV (x: [r15|QWORD + 96], y: rdi|QWORD) size: QWORD  <||@
  Comment 185 98 AMD64PREFETCH ~[rbx|QWORD + rcx|QWORD * 1 + 192] instr: 0  <||@
  Comment 193 100 AMD64PREFETCH ~[rbx|QWORD + rcx|QWORD * 1 + 256] instr: 0  <||@
  Comment 201 102 AMD64PREFETCH ~[rbx|QWORD + rcx|QWORD * 1 + 320] instr: 0  <||@
  Comment 209 104 AMD64PREFETCH ~[rbx|QWORD + rcx|QWORD * 1 + 384] instr: 0  <||@
  Comment 217 106 MOV (x: [rcx|QWORD + 12], y: r8|DWORD) size: DWORD  <||@
  Comment 221 108 MOV [rcx|QWORD] y: 1 size: QWORD  <||@
  Comment 228 110 MOV [rcx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}  <||@
  Comment 228 {meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}}  <||@
  Comment 235 112 rcx|QWORD[.] = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 235 114 rax|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 238 116 stack:48|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD  <||@
  Comment 243 118 r14|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 246 120 r13|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 249 122 JUMP ~[] destination: B9 -> B12  <||@
  Comment 249 block B12 null  <||@
  Comment 249 152 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 249 154 rdi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 253 156 rsi|QWORD = MOVSXD r14|DWORD size: QWORD  <||@
  Comment 256 158 rdx|QWORD = LEA [rsi|QWORD - 8] size: QWORD  <||@
  Comment 260 160 xmm0|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null>  <||@
  Comment 264 162 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 271 164 JUMP ~[] destination: B12 -> B13  <||@
  Comment 276 block B39 loop 0 depth 1 header:318|LoopBegin  <||@
  Comment 276 414 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 288 416 r10|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 291 418 JUMP ~[] destination: B39 -> B13  <||@
  Comment 291 block B13 loop 0 depth 1 header:318|LoopBegin  <||@
  Comment 291 166 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 291 168 J (address: [rdi|QWORD[.] + r10|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU  <||@
  Comment 297 170 r11|QWORD = LEA [r10|QWORD + 8] size: QWORD  <||@
  Comment 301 172 CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 304 174 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B39  <||@
  Comment 306 block B14 null  <||@
  Comment 306 176 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 306 178 rdx|QWORD = LEA [rsi|QWORD - 4] size: QWORD  <||@
  Comment 310 180 CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 313 182 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B14 -> B17 falseDestination: B14 -> B16  <||@
  Comment 319 block B16 null  <||@
  Comment 319 188 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 319 190 xmm0|V128_DWORD[....] = L oc: SIMD<null,null,null,null>  <||@
  Comment 323 192 J (address: [rdi|QWORD[.] + r10|QWORD * 4 + 32], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU  <||@
  Comment 330 194 rdx|QWORD = LEA [r10|QWORD + 12] size: QWORD  <||@
  Comment 334 196 r11|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 337 198 JUMP ~[] destination: B16 -> B17  <||@
  Comment 337 block B17 null  <||@
  Comment 337 200 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 337 202 rdx|QWORD = LEA [rsi|QWORD - 2] size: QWORD  <||@
  Comment 341 204 CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 344 206 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B17 -> B20 falseDestination: B17 -> B19  <||@
  Comment 350 block B19 null  <||@
  Comment 350 212 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 350 214 xmm0|V64_DWORD[..] = L oc: SIMD<null,null>  <||@
  Comment 354 216 J (address: [rdi|QWORD[.] + r11|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ  <||@
  Comment 360 218 rdx|QWORD = LEA [r11|QWORD + 2] size: QWORD  <||@
  Comment 364 220 r11|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 367 222 JUMP ~[] destination: B19 -> B20  <||@
  Comment 367 block B20 null  <||@
  Comment 367 224 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 367 226 rsi|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 370 228 CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 373 230 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B20 -> B23 falseDestination: B20 -> B22  <||@
  Comment 379 block B22 null  <||@
  Comment 379 236 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 379 238 MOV (x: [rdi|QWORD[.] + r11|QWORD * 4], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 383 240 JUMP ~[] destination: B22 -> B23  <||@
  Comment 383 block B23 null  <||@
  Comment 383 242 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 383 244 r10|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 393 246 TEST r13|DWORD y: 2147483647 size: DWORD  <||@
  Comment 400 248 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B23 -> B28 falseDestination: B23 -> B25  <||@
  Comment 406 block B25 null  <||@
  Comment 406 262 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 406 264 r8|DWORD = DEC r14|DWORD size: DWORD  <||@
  Comment 412 266 r8|DWORD = SHL r8|DWORD y: 2 size: DWORD  <||@
  Comment 416 268 rdi|QWORD = MOVSXD r8|DWORD size: QWORD  <||@
  Comment 419 270 rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 423 272 rsi|QWORD[.] = ADD (x: rsi|QWORD[.], y: rdi|QWORD) size: QWORD  <||@
  Comment 426 274 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 430 276 rdi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 434 278 rdi|QWORD[*] = SHR rdi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 438 280 rsi|QWORD[*] = SUB (x: rsi|QWORD[*], ~y: rdi|QWORD[*]) size: QWORD  <||@
  Comment 441 282 rsi|QWORD[*] = INC rsi|QWORD[*] size: QWORD  <||@
  Comment 444 284 JUMP ~[] destination: B25 -> B26  <||@
  Comment 449 block B38 loop 1 depth 1 header:268|LoopBegin  <||@
  Comment 449 402 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 464 404 rsi|QWORD[*] = DEC rsi|QWORD[*] size: QWORD  <||@
  Comment 467 406 rdx|QWORD[*] = ADD (x: rdi|QWORD[*], y: r10|QWORD) size: QWORD  <||@
  Comment 473 408 rdx|QWORD[*] = ADD (x: rdx|QWORD[*], y: rsi|QWORD[*]) size: QWORD  <||@
  Comment 476 410 MOVB (x: [rdx|QWORD[*]], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 479 412 JUMP ~[] destination: B38 -> B26  <||@
  Comment 479 block B26 loop 1 depth 1 header:268|LoopBegin  <||@
  Comment 479 286 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 479 288 CMP rsi|QWORD[*] y: 1 size: QWORD  <||@
  Comment 483 290 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B26 -> B28 falseDestination: B26 -> B38  <||@
  Comment 485 block B28 null  <||@
  Comment 485 304 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 485 252 stack:56|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 490 254 stack:44|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 495 256 r14|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 500 258 r10|DWORD[.] = MOVE stack:48|DWORD[.] moveKind: DWORD  <||@
  Comment 505 306 r13|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@65b35ec4 encoding: base: 0 shift: 3  <||@
  Comment 512 308 r13|QWORD[*] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 512 310 rdx|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 515 312 r10|QWORD = MOV r14|DWORD size: DWORD  <||@
  Comment 518 314 rdi|QWORD = LEA [r13|QWORD[*] + 16] size: QWORD  <||@
  Comment 522 316 rsi|QWORD = LEA [rdx|QWORD[*] + 16] size: QWORD  <||@
  Comment 526 318 rdx|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 529 320 stack:64|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 533 322 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: ObjectDisjointArraycopy(Word,Word,Word)void@0x106813060:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 533 {Field[name=StubRoutines::_arrayof_oop_disjoint_arraycopy, type=address, offset=0, address=0x105a7dd20, value=0x106813060]:0x106813060}  <||@
  Comment 539 324 rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 543 326 rsi|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@65b35ec4 encoding: base: 0 shift: 3  <||@
  Comment 550 328 r11|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 555 330 MOV (x: [r11|QWORD[.] + 24], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 559 332 rsi|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD  <||@
  Comment 566 334 r10|QWORD = MOVE stack:56|QWORD moveKind: QWORD  <||@
  Comment 571 336 MOVB (x: [rsi|QWORD[*] + r10|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 575 338 CMP stack:36|DWORD y: 512 size: DWORD  <||@
  Comment 583 340 BRANCH trueDestinationProbability: 0.992280021489804 condition: |<| trueDestination: B28 -> B29 falseDestination: B28 -> B32  <||@
  Comment 589 block B29 null  <||@
  Comment 589 342 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 589 344 CMP stack:44|DWORD y: 512 size: DWORD  <||@
  Comment 597 346 BRANCH trueDestinationProbability: 0.992596516007533 condition: < trueDestination: B29 -> B30 falseDestination: B29 -> B31  <||@
  Comment 603 block B30 null  <||@
  Comment 603 348 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 603 350 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 612 12  <||@
  Comment 622 block B11 null  <||@
  Comment 622 134 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 622 126 stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 627 128 stack:44|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 631 130 stack:48|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD  <||@
  Comment 636 136 rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>}  <||@
  Comment 636 {meta{HotSpotType<[Ljava/lang/Object;, resolved>}}  <||@
  Comment 646 138 rsi|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 649 140 rdx|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 652 142 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 657 144 r13|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 660 146 r14|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 663 148 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:10, 14]  <||@
  Comment 663 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 668 [stack:16, stack:32]at java.lang.Math.max(Math.java:1252) [bci: 10, duringCall: false, rethrow: false]
              |0               |1 
     locals:  |-               |- 
     stack:   |stack:44|DWORD  |  
  at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14, duringCall: true, rethrow: false]
              |0                  |1               |2  |3 
     locals:  |stack:32|QWORD[.]  |stack:36|DWORD  |-  |- 
     stack:   |stack:40|DWORD     |                |   |    <||@
  Comment 669 150 JUMP ~[] destination: B11 -> B12  <||@
  Comment 674 block B32 null  <||@
  Comment 674 360 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 674 362 CMP stack:36|DWORD y: 131072 size: DWORD  <||@
  Comment 682 364 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B32 -> B33 falseDestination: B32 -> B36  <||@
  Comment 688 block B33 null  <||@
  Comment 688 366 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 688 368 r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 693 370 CMP r8|DWORD y: 131073 size: DWORD  <||@
  Comment 700 372 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35  <||@
  Comment 706 block B34 null  <||@
  Comment 706 374 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 706 376 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 715 12  <||@
  Comment 725 block B31 null  <||@
  Comment 725 352 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 725 354 rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 728 356 - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.createHash()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:87]  <||@
  Comment 728 9  <||@
  Comment 735 {HotSpotMethod<EconomicMapImpl.createHash()>}  <||@
  Comment 740 []at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:466) [bci: 87, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 741 358 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 750 12  <||@
  Comment 760 block B5 null  <||@
  Comment 760 48 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 760 50 r8|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 763 52 r11|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 766 54 r10|DWORD = MOVE input: int[-30049|0xffffffffffff8a9f]  <||@
  Comment 772 56 JUMP ~[] destination: B5 -> B41  <||@
  Comment 772 block B41 null  <||@
  Comment 772 430 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 772 432 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 779 434 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 786 436 DEOPT info [bci:10, 14]  <||@
  Comment 786 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 791 [r11:0]at java.lang.Math.max(Math.java:1252) [bci: 10, duringCall: false, rethrow: false]
              |0          |1 
     locals:  |-          |- 
     stack:   |rdx|DWORD  |  
  at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14, duringCall: true, rethrow: false]
              |0             |1               |2  |3 
     locals:  |r11|QWORD[.]  |stack:36|DWORD  |-  |- 
     stack:   |r8|DWORD      |                |   |    <||@
  Comment 792 block B35 null  <||@
  Comment 792 378 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 792 380 r10|DWORD = MOVE input: int[-33811|0xffffffffffff7bed]  <||@
  Comment 798 384 JUMP ~[] destination: B35 -> B37  <||@
  Comment 798 block B37 null  <||@
  Comment 798 394 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 798 390 r14|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 803 396 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 810 398 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 817 400 DEOPT info [bci:58]  <||@
  Comment 817 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 822 [rax:0, r11:0]at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 58, duringCall: false, rethrow: false]
              |0             |1          |2  |3            
     locals:  |r11|QWORD[.]  |r14|DWORD  |-  |rax|QWORD[.]   <||@
  Comment 823 block B40 null  <||@
  Comment 823 420 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 823 422 r8|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 826 424 r11|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 829 426 r10|DWORD = MOVE input: int[-20755|0xffffffffffffaeed]  <||@
  Comment 835 428 JUMP ~[] destination: B40 -> B41  <||@
  Comment 837 block B36 null  <||@
  Comment 837 386 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 837 388 r10|DWORD = MOVE input: int[-33555|0xffffffffffff7ced]  <||@
  Comment 843 392 JUMP ~[] destination: B36 -> B37  <||@
  Comment 845 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 845 4  <||@
  Comment 851 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 851 5  <||@
  HexCodeFile>>> <|@
end_nmethod
