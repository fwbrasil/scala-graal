begin_compilation
  name " HotSpotCompilation-1689[java.util.regex.Pattern$Node.match(Matcher, int, CharSequence)]"
  method "HotSpotCompilation-1689[java.util.regex.Pattern$Node.match(Matcher, int, CharSequence)]"
  date 1527005169891
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a90 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a90  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# Ljava/util/regex/Matcher;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v95 v94 v93 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v24 v56 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?5 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<Pattern$Node.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 3409
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a2 i3 - 
=== Succesors ===
=== Usages ===
v85 a90 i91 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 i3 -  <|@  <|@
f <@~|@floating>@ <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
displacement: 52
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a90 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a90 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.groups
nodeSourcePosition: at java.util.regex.Pattern$Node.match(Pattern.java:3410) [bci: 6]
nullCheck: true
stamp: n# [I
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v94 
=== Succesors ===
next: i91 
=== Usages ===
v98 v97 v96 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v94 #next: i91  <|@  <|@
f <@~|@floating>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a90 
=== Succesors ===
=== Usages ===
i91 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a90  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i91 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$Node.match(Pattern.java:3410) [bci: 14]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v96 
=== Succesors ===
next: v78 
=== Usages ===
v66 
=== Predecessor ===
a90 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v96 #next: v78  <|@  <|@
f <@~|@floating>@ <|@
tid i42 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$Node.match(Pattern.java:3410) [bci: 14]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v66 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$Node.match(Pattern.java:3411) [bci: 24]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i91 
y: i42 
=== Succesors ===
=== Usages ===
v78 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i91 y: i42  <|@  <|@
f <@*|@fixed>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Node.match(Pattern.java:3410) [bci: 14]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v66 
=== Succesors ===
trueSuccessor: v77 
falseSuccessor: v75 
=== Usages ===
=== Predecessor ===
i91 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v66 #trueSuccessor: v77 #falseSuccessor: v75  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Node.match(Pattern.java:3410) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v85 
=== Usages ===
=== Predecessor ===
v78 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v85  <|@  <|@
f <@~|@floating>@ <|@
tid a82 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v85 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i89 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -14619
stableDimension: 0
stamp: i32 [-14619] ⇊00000000ffffc6e5 ⇈00000000ffffc6e5
stampKind: i32
value: int[-14619|0xffffffffffffc6e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v85 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?5 
actionAndReason: i89 
speculation: a82 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v77 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?5 actionAndReason: i89 speculation: a82  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Node.match(Pattern.java:3410) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v24 
=== Usages ===
v47 v56 
=== Predecessor ===
v78 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v24  <|@  <|@
f <@~|@floating>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v24 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Matcher.last
nodeSourcePosition: at java.util.regex.Pattern$Node.match(Pattern.java:3409) [bci: 2]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v93 
value: i3 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i92 
=== Usages ===
=== Predecessor ===
v75 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v93 value: i3 stateAfter: - lastLocationAccess: - #next: i92  <|@  <|@
f <@~|@floating>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i92 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i92 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.first
nodeSourcePosition: at java.util.regex.Pattern$Node.match(Pattern.java:3410) [bci: 11]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v95 
=== Succesors ===
next: v47 
=== Usages ===
v47 
=== Predecessor ===
v24 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v95 #next: v47  <|@  <|@
f <@~|@floating>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a90 
=== Succesors ===
=== Usages ===
v47 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a90  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$Node.match(Pattern.java:3410) [bci: 14]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v75 
address: v97 
value: i92 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v56 
=== Usages ===
=== Predecessor ===
i92 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v75 address: v97 value: i92 stateAfter: - lastLocationAccess: - #next: v56  <|@  <|@
f <@~|@floating>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a90 
=== Succesors ===
=== Usages ===
v56 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a90  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v56 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$Node.match(Pattern.java:3411) [bci: 24]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v75 
address: v98 
value: i3 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v18 
=== Usages ===
=== Predecessor ===
v47 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v75 address: v98 value: i3 stateAfter: - lastLocationAccess: - #next: v18  <|@  <|@
f <@~|@floating>@ <|@
tid i14 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$Node.match(Pattern.java:3411) [bci: 19]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v18 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Node.match(Pattern.java:3412) [bci: 26]
stamp: void
=== Inputs ===
result: i14 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v56 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i14 memoryMap: -  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a90 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a90  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# Ljava/util/regex/Matcher;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v95 v94 v93 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v24 v56 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?5 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<Pattern$Node.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 3409
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a2 i3 - 
=== Succesors ===
=== Usages ===
v85 a90 i91 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 i3 -  <|@  <|@
f <@~|@floating>@ <|@
tid v94 <|@
result [v0|QWORD[.] + 52] <|@
d <@d|@=== Debug Properties ===
displacement: 52
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a90 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a90 <|@
result v2|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.groups
nodeSourcePosition: at java.util.regex.Pattern$Node.match(Pattern.java:3410) [bci: 6]
nullCheck: true
stamp: n# [I
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v94 
=== Succesors ===
next: i91 
=== Usages ===
v98 v97 v96 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v94 #next: i91  <|@  <|@
f <@~|@floating>@ <|@
tid v96 <|@
result [v2|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a90 
=== Succesors ===
=== Usages ===
i91 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a90  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i91 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$Node.match(Pattern.java:3410) [bci: 14]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v96 
=== Succesors ===
next: v78 
=== Usages ===
v66 
=== Predecessor ===
a90 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v96 #next: v78  <|@  <|@
f <@~|@floating>@ <|@
tid i42 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$Node.match(Pattern.java:3410) [bci: 14]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v66 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v66 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$Node.match(Pattern.java:3411) [bci: 24]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i91 
y: i42 
=== Succesors ===
=== Usages ===
v78 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i91 y: i42  <|@  <|@
f <@*|@fixed>@ <|@
tid v78 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Node.match(Pattern.java:3410) [bci: 14]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v66 
=== Succesors ===
trueSuccessor: v77 
falseSuccessor: v75 
=== Usages ===
=== Predecessor ===
i91 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v66 #trueSuccessor: v77 #falseSuccessor: v75  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@25ecada slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Node.match(Pattern.java:3409) [bci: 0]
locals: - v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v2|DWORD[.] = MOV [v0|QWORD[.] + 52] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Node.match(Pattern.java:3409) [bci: 0]
locals: - v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction CMP [v2|DWORD[.] * 8 + 12] y: 2 size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Node.match(Pattern.java:3410) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v85 
=== Usages ===
=== Predecessor ===
v78 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v85  <|@  <|@
f <@~|@floating>@ <|@
tid a82 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v85 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i89 <|@
result int[-14619|0xffffffffffffc6e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -14619
stableDimension: 0
stamp: i32 [-14619] ⇊00000000ffffc6e5 ⇈00000000ffffc6e5
stampKind: i32
value: int[-14619|0xffffffffffffc6e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v85 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?5 
actionAndReason: i89 
speculation: a82 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v77 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?5 actionAndReason: i89 speculation: a82  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -14619 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Node.match(Pattern.java:3409) [bci: 0]
locals: - v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Node.match(Pattern.java:3410) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v24 
=== Usages ===
v47 v56 
=== Predecessor ===
v78 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v24  <|@  <|@
f <@~|@floating>@ <|@
tid v93 <|@
result [v0|QWORD[.] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v24 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Matcher.last
nodeSourcePosition: at java.util.regex.Pattern$Node.match(Pattern.java:3409) [bci: 2]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v93 
value: i3 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i92 
=== Usages ===
=== Predecessor ===
v75 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v93 value: i3 stateAfter: - lastLocationAccess: - #next: i92  <|@  <|@
f <@~|@floating>@ <|@
tid v95 <|@
result [v0|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i92 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i92 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.first
nodeSourcePosition: at java.util.regex.Pattern$Node.match(Pattern.java:3410) [bci: 11]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v95 
=== Succesors ===
next: v47 
=== Usages ===
v47 
=== Predecessor ===
v24 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v95 #next: v47  <|@  <|@
f <@~|@floating>@ <|@
tid v97 <|@
result [v2|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a90 
=== Succesors ===
=== Usages ===
v47 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a90  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$Node.match(Pattern.java:3410) [bci: 14]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v75 
address: v97 
value: i92 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v56 
=== Usages ===
=== Predecessor ===
i92 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v75 address: v97 value: i92 stateAfter: - lastLocationAccess: - #next: v56  <|@  <|@
f <@~|@floating>@ <|@
tid v98 <|@
result [v2|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a90 
=== Succesors ===
=== Usages ===
v56 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a90  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v56 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$Node.match(Pattern.java:3411) [bci: 24]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v75 
address: v98 
value: i3 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v18 
=== Usages ===
=== Predecessor ===
v47 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v75 address: v98 value: i3 stateAfter: - lastLocationAccess: - #next: v18  <|@  <|@
f <@~|@floating>@ <|@
tid i14 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$Node.match(Pattern.java:3411) [bci: 19]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v18 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Node.match(Pattern.java:3412) [bci: 26]
stamp: void
=== Inputs ===
result: i14 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v56 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i14 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 32], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|DWORD[.] * 8 + 16], y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|DWORD[.] * 8 + 20], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@25ecada slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Node.match(Pattern.java:3409) [bci: 0]
locals: - v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v2|DWORD[.] = MOV [v0|QWORD[.] + 52] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Node.match(Pattern.java:3409) [bci: 0]
locals: - v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction CMP [v2|DWORD[.] * 8 + 12] y: 2 size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 32], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|DWORD[.] * 8 + 16], y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|DWORD[.] * 8 + 20], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -14619 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Node.match(Pattern.java:3409) [bci: 0]
locals: - v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: iload_2       
     2: putfield      #3          // java.util.regex.Matcher.last:int
     5: aload_1       
     6: getfield      #4          // java.util.regex.Matcher.groups:int[]
     9: iconst_0      
    10: aload_1       
    11: getfield      #5          // java.util.regex.Matcher.first:int
    14: iastore       
    15: aload_1       
    16: getfield      #4          // java.util.regex.Matcher.groups:int[]
    19: iconst_1      
    20: aload_1       
    21: getfield      #3          // java.util.regex.Matcher.last:int
    24: iastore       
    25: iconst_1      
    26: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@25ecada slotKind: QWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rdx:0]
live-base-pointers: []
java.util.regex.Pattern$Node.match(Pattern.java:3409) [bci: 0]
locals: - rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction rax|DWORD[.] = MOV [rdx|QWORD[.] + 52] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ st <@st|@reference-map: [rax:0, rdx:0]
live-base-pointers: []
java.util.regex.Pattern$Node.match(Pattern.java:3409) [bci: 0]
locals: - rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction CMP [rax|DWORD[.] * 8 + 12] y: 2 size: DWORD state [bci:0] <|@ <|@
      nr   14  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ instruction MOV (x: [rdx|QWORD[.] + 32], y: rcx|DWORD) size: DWORD <|@ <|@
      nr   20  <|@ instruction r10|DWORD = MOV [rdx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   22  <|@ instruction MOV (x: [rax|DWORD[.] * 8 + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr   24  <|@ instruction MOV (x: [rax|DWORD[.] * 8 + 20], y: rcx|DWORD) size: DWORD <|@ <|@
      nr   26  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   28  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction MOV [r15|QWORD + 668] y: -14619 size: DWORD <|@ <|@
      nr   34  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   36  <|@ st <@st|@reference-map: [rdx:0]
live-base-pointers: []
java.util.regex.Pattern$Node.match(Pattern.java:3409) [bci: 0]
locals: - rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: iload_2       
     2: putfield      #3          // java.util.regex.Matcher.last:int
     5: aload_1       
     6: getfield      #4          // java.util.regex.Matcher.groups:int[]
     9: iconst_0      
    10: aload_1       
    11: getfield      #5          // java.util.regex.Matcher.first:int
    14: iastore       
    15: aload_1       
    16: getfield      #4          // java.util.regex.Matcher.groups:int[]
    19: iconst_1      
    20: aload_1       
    21: getfield      #3          // java.util.regex.Matcher.last:int
    24: iastore       
    25: iconst_1      
    26: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@25ecada slotKind: QWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rdx:0]
live-base-pointers: []
java.util.regex.Pattern$Node.match(Pattern.java:3409) [bci: 0]
locals: - rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction rax|DWORD[.] = MOV [rdx|QWORD[.] + 52] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ st <@st|@reference-map: [rax:0, rdx:0]
live-base-pointers: []
java.util.regex.Pattern$Node.match(Pattern.java:3409) [bci: 0]
locals: - rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction CMP [rax|DWORD[.] * 8 + 12] y: 2 size: DWORD state [bci:0] <|@ <|@
      nr   14  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ instruction MOV (x: [rdx|QWORD[.] + 32], y: rcx|DWORD) size: DWORD <|@ <|@
      nr   20  <|@ instruction r10|DWORD = MOV [rdx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   22  <|@ instruction MOV (x: [rax|DWORD[.] * 8 + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr   24  <|@ instruction MOV (x: [rax|DWORD[.] * 8 + 20], y: rcx|DWORD) size: DWORD <|@ <|@
      nr   26  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   28  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction MOV [r15|QWORD + 668] y: -14619 size: DWORD <|@ <|@
      nr   34  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   36  <|@ st <@st|@reference-map: [rdx:0]
live-base-pointers: []
java.util.regex.Pattern$Node.match(Pattern.java:3409) [bci: 0]
locals: - rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: iload_2       
     2: putfield      #3          // java.util.regex.Matcher.last:int
     5: aload_1       
     6: getfield      #4          // java.util.regex.Matcher.groups:int[]
     9: iconst_0      
    10: aload_1       
    11: getfield      #5          // java.util.regex.Matcher.first:int
    14: iastore       
    15: aload_1       
    16: getfield      #4          // java.util.regex.Matcher.groups:int[]
    19: iconst_1      
    20: aload_1       
    21: getfield      #3          // java.util.regex.Matcher.last:int
    24: iastore       
    25: iconst_1      
    26: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c24108b4234833cc50c000000020f822e000000894a20448b521c448914c510000000890cc514000000b801000000488b6c24104883c418850500000000c5f877c341c7879c020000e5c6ffff4d89a7a8020000e80000000090e80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@25ecada slotKind: QWORD  <||@
  Comment 48 10 rax|DWORD[.] = MOV [rdx|QWORD[.] + 52] size: DWORD state [bci:0]  <||@
  Comment 48 [rdx:0]at java.util.regex.Pattern$Node.match(Pattern.java:3409) [bci: 0, duringCall: false, rethrow: false]
              |0  |1             |2          |3 
     locals:  |-  |rdx|QWORD[.]  |rcx|DWORD  |-   <||@
  Comment 48 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 51 12 CMP [rax|DWORD[.] * 8 + 12] y: 2 size: DWORD state [bci:0]  <||@
  Comment 51 [rax:0, rdx:0]at java.util.regex.Pattern$Node.match(Pattern.java:3409) [bci: 0, duringCall: false, rethrow: false]
              |0  |1             |2          |3 
     locals:  |-  |rdx|QWORD[.]  |rcx|DWORD  |-   <||@
  Comment 51 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 59 14 BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 65 block B2 null  <||@
  Comment 65 16 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 65 18 MOV (x: [rdx|QWORD[.] + 32], y: rcx|DWORD) size: DWORD  <||@
  Comment 68 20 r10|DWORD = MOV [rdx|QWORD[.] + 28] size: DWORD  <||@
  Comment 72 22 MOV (x: [rax|DWORD[.] * 8 + 16], y: r10|DWORD) size: DWORD  <||@
  Comment 80 24 MOV (x: [rax|DWORD[.] * 8 + 20], y: rcx|DWORD) size: DWORD  <||@
  Comment 87 26 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 92 28 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 101 12  <||@
  Comment 111 block B1 null  <||@
  Comment 111 30 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 111 32 MOV [r15|QWORD + 668] y: -14619 size: DWORD  <||@
  Comment 122 34 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 129 36 DEOPT info [bci:0]  <||@
  Comment 129 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 134 [rdx:0]at java.util.regex.Pattern$Node.match(Pattern.java:3409) [bci: 0, duringCall: false, rethrow: false]
              |0  |1             |2          |3 
     locals:  |-  |rdx|QWORD[.]  |rcx|DWORD  |-   <||@
  Comment 135 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 135 4  <||@
  Comment 141 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 141 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-1689[java.util.regex.Pattern$Node.match(Matcher, int, CharSequence)]"
  method "HotSpotCompilation-1689[java.util.regex.Pattern$Node.match(Matcher, int, CharSequence)]"
  date 1527005169920
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 1079601a0 448b560849c1e203493bc20f85af5ceafe900f1f80000000000f1f800000000089842400c0feff4883ec1848896c24108b4234833cc50c000000020f822e000000894a20448b521c448914c510000000890cc514000000b801000000488b6c24104883c4188505fbedf2fcc5f877c341c7879c020000e5c6ffff4d89a7a8020000e8d873eafe90e8f4a32eff90e8ce72eafe90f4f4f4f4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@25ecada slotKind: QWORD  <||@
  Comment 48 10 rax|DWORD[.] = MOV [rdx|QWORD[.] + 52] size: DWORD state [bci:0]  <||@
  Comment 48 [rdx:0]at java.util.regex.Pattern$Node.match(Pattern.java:3409) [bci: 0, duringCall: false, rethrow: false]
              |0  |1             |2          |3 
     locals:  |-  |rdx|QWORD[.]  |rcx|DWORD  |-   <||@
  Comment 48 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 51 12 CMP [rax|DWORD[.] * 8 + 12] y: 2 size: DWORD state [bci:0]  <||@
  Comment 51 [rax:0, rdx:0]at java.util.regex.Pattern$Node.match(Pattern.java:3409) [bci: 0, duringCall: false, rethrow: false]
              |0  |1             |2          |3 
     locals:  |-  |rdx|QWORD[.]  |rcx|DWORD  |-   <||@
  Comment 51 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 59 14 BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 65 block B2 null  <||@
  Comment 65 16 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 65 18 MOV (x: [rdx|QWORD[.] + 32], y: rcx|DWORD) size: DWORD  <||@
  Comment 68 20 r10|DWORD = MOV [rdx|QWORD[.] + 28] size: DWORD  <||@
  Comment 72 22 MOV (x: [rax|DWORD[.] * 8 + 16], y: r10|DWORD) size: DWORD  <||@
  Comment 80 24 MOV (x: [rax|DWORD[.] * 8 + 20], y: rcx|DWORD) size: DWORD  <||@
  Comment 87 26 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 92 28 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 101 12  <||@
  Comment 111 block B1 null  <||@
  Comment 111 30 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 111 32 MOV [r15|QWORD + 668] y: -14619 size: DWORD  <||@
  Comment 122 34 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 129 36 DEOPT info [bci:0]  <||@
  Comment 129 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 134 [rdx:0]at java.util.regex.Pattern$Node.match(Pattern.java:3409) [bci: 0, duringCall: false, rethrow: false]
              |0  |1             |2          |3 
     locals:  |-  |rdx|QWORD[.]  |rcx|DWORD  |-   <||@
  Comment 135 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 135 4  <||@
  Comment 141 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 141 5  <||@
  HexCodeFile>>> <|@
end_nmethod
