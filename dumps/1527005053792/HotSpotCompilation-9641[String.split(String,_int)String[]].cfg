begin_compilation
  name " HotSpotCompilation-9641[java.lang.String.split(String, int)]"
  method "HotSpotCompilation-9641[java.lang.String.split(String, int)]"
  date 1527005216396
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B361" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a4355 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a4355  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/lang/String;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 ?345 ?1448 a2074 ?35 ?309 ?1489 v4395 a348 ?337 ?145 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# Ljava/lang/String;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v4392 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v74 ?159 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?4 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<String.split(String, int)>
duringCall: false
localsSize: 10
locksSize: 0
rethrowException: false
sourceFile: String.java
sourceLine: 2336
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 - - - - - - - 
=== Succesors ===
=== Usages ===
v2391 a4355 i4356 i4359 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3 - - - - - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v4392 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a4355 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4355 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.split(String.java:2337) [bci: 3]
nullCheck: true
stamp: n# [C
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v4392 
=== Succesors ===
next: i4356 
=== Usages ===
v4394 v4393 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v4392 #next: i4356  <|@  <|@
f <@~|@floating>@ <|@
tid v4393 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a4355 
=== Succesors ===
=== Usages ===
i4356 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a4355  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4356 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.split(String.java:2337) [bci: 6]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v4393 
=== Succesors ===
next: v1884 
=== Usages ===
v9 
=== Predecessor ===
a4355 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v4393 #next: v1884  <|@  <|@
f <@~|@floating>@ <|@
tid i8 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.split(String.java:2337) [bci: 7]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v9 i4345 i1411 v214 v81 v443 v431 i4336 v607 i594 i705 v560 i396 v402 a3089 i4332 a2596 i2633 a2703 a2856 v2876 i2883 a2947 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.split(String.java:2337) [bci: 8]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4356 
y: i8 
=== Succesors ===
=== Usages ===
v1884 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i4356 y: i8  <|@  <|@
f <@~|@floating>@ <|@
tid a2461 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@1976730038
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@1976730038]
=== Inputs ===
=== Succesors ===
=== Usages ===
a2442 a2442 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid a244 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@7af0f89d
hasIdentity: true
objectId: -1
stamp: a!# Ljava/util/ArrayList;
type: HotSpotType<Ljava/util/ArrayList;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?1002 ?345 ?35 ?248 ?1489 ?1484 ?248 ?170 ?175 ?145 ?521 ?517 ?143 ?1482 ?309 ?1467 ?179 ?184 ?159 ?1002 ?345 ?80 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?159 <|@
d <@d|@=== Debug Properties ===
bci: 246
code: ResolvedJavaMethodBytecode<String.split(String, int)>
duringCall: true
localsSize: 10
locksSize: 0
rethrowException: false
sourceFile: String.java
sourceLine: 2368
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - i3 - - - - a244 - - 
=== Succesors ===
=== Usages ===
?184 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - i3 - - - - a244 - -  <|@  <|@
tid a524 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@5a86b9fc
hasIdentity: true
objectId: 2
stamp: a!# Ljava/lang/String;
type: HotSpotType<Ljava/lang/String;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?1579 ?184 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?184 <|@
d <@d|@=== Debug Properties ===
bci: 7
code: ResolvedJavaMethodBytecode<ArrayList.add(Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ArrayList.java
sourceLine: 462
stackSize: 0
=== Inputs ===
outerFrameState: ?159 
values: a244 a524 
=== Succesors ===
=== Usages ===
?179 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?159 values: a244 a524  <|@  <|@
f <@~|@floating>@ <|@
tid v3243 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2880 v3175 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2467 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@358913875
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/l/d$a;
stampKind: a -
value: Object[d.a@358913875]
=== Inputs ===
=== Succesors ===
=== Usages ===
a2469 a2469 a2485 a2485 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a4244 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: n - NULL
stampKind: n -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v4193 v4227 v4239 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v4245 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL>
stampKind: <n -,n ->
value: SIMD<null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v4195 v4228 v4240 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v4246 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null,null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL,n - NULL,n - NULL>
stampKind: <n -,n -,n -,n ->
value: SIMD<null,null,null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v4197 v4229 v4241 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v4243 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null,null,null,null,null,null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL>
stampKind: <n -,n -,n -,n -,n -,n -,n -,n ->
value: SIMD<null,null,null,null,null,null,null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v4242 v4230 v4198 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v3223 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v3224 v3239 v3249 v4338 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j3761 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j3775 j3836 j3882 j3939 j3995 j4041 j4088 j4134 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j3815 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j3816 j3857 j3918 j3969 j4020 j4062 j4113 j4155 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j3783 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j3784 j3842 j3890 j3945 j4003 j4047 j4096 j4140 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j3811 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j3812 j3854 j3915 j3966 j4017 j4059 j4110 j4152 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2577 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.ClassGetHubNode.readClass(Class) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.getComponentType(HotSpotClassSubstitutions.java:120) [bci: 1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 6]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j3792 j4146 j4104 j4053 j4011 j3951 j3898 j3848 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j3807 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j3808 j3849 j3912 j3963 j4012 j4054 j4105 j4147 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j3801 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16
stableDimension: 0
stamp: i64 [-16] ⇊fffffffffffffff0 ⇈fffffffffffffff0
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j3802 j3907 j3958 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2098 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.split(String.java:2373) [bci: 275]
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/lang/String;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j3105 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j3105 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v2098 
=== Succesors ===
=== Usages ===
v4478 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v2098  <|@  <|@
f <@~|@floating>@ <|@
tid v4478 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j3105 
index: - 
=== Succesors ===
=== Usages ===
j3109 j2723 j2620 j2967 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3105 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i1663 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:463) [bci: 26]
at java.lang.String.split(String.java:2353) [bci: 165]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i3130 i2997 i3053 a2947 a2856 i3191 a3089 a2596 a2703 i2757 i2813 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2214 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:178) [bci: 41]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2528 v2510 a2390 a2390 a2390 a2390 a2390 a2390 a2390 a2390 a2390 a2390 a2390 a2390 a2390 a2390 a2485 v2520 v2502 a2433 a2442 a2442 a2442 a2442 a2442 a2485 a2485 a2469 a2469 a2469 a2469 a2485 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i19 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.split(String.java:2338) [bci: 23]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1006 v39 i83 ?1489 i2812 i3052 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1884 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.split(String.java:2337) [bci: 8]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v9 
=== Succesors ===
trueSuccessor: v1881 
falseSuccessor: v1883 
=== Usages ===
=== Predecessor ===
i4356 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v9 #trueSuccessor: v1881 #falseSuccessor: v1883  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1881 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.split(String.java:2337) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: i4357 
=== Usages ===
i4357 
=== Predecessor ===
v1884 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i4357  <|@  <|@
f <@~|@floating>@ <|@
tid v4394 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a4355 
=== Succesors ===
=== Usages ===
i4357 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a4355  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4357 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.lang.String.split(String.java:2338) [bci: 15]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v1881 
address: v4394 
=== Succesors ===
next: v1051 
=== Usages ===
i1630 
=== Predecessor ===
v1881 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1881 address: v4394 #next: v1051  <|@  <|@
f <@~|@floating>@ <|@
tid i1630 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.lang.String.split(String.java:2338) [bci: 15]
resultBits: 32
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i4357 
=== Succesors ===
=== Usages ===
?145 v1203 v1326 v1234 v23 ?1489 ?35 ?309 v1296 ?292 v299 ?345 v1018 v1265 v1356 v1048 v1079 v1110 v1141 v1172 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i4357  <|@  <|@
f <@~|@floating>@ <|@
tid i1070 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:1559) [bci: 47]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
rawvalue: 36
stableDimension: 0
stamp: i32 [36] ⇊0000000000000024 ⇈0000000000000024
stampKind: i32
value: int[36|0x24]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1048 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1048 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.indexOf(String.java:1559) [bci: 49]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1630 
y: i1070 
=== Succesors ===
=== Usages ===
v1051 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1630 y: i1070  <|@  <|@
f <@*|@fixed>@ <|@
tid v1051 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1559) [bci: 49]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1048 
=== Succesors ===
trueSuccessor: v1049 
falseSuccessor: v1020 
=== Usages ===
=== Predecessor ===
i4357 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1048 #trueSuccessor: v1049 #falseSuccessor: v1020  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B362" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1049 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1560) [bci: 52]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2394 
=== Usages ===
=== Predecessor ===
v1051 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2394  <|@  <|@
f <@~|@floating>@ <|@
tid i2395 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -390163
stableDimension: 0
stamp: i32 [-390163] ⇊00000000fffa0bed ⇈00000000fffa0bed
stampKind: i32
value: int[-390163|0xfffffffffffa0bed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2389 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2394 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2386 
=== Predecessor ===
v1049 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1020 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1558) [bci: 55]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1021 
=== Usages ===
=== Predecessor ===
v1051 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1021  <|@  <|@
f <@~|@floating>@ <|@
tid i1040 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:1559) [bci: 47]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
rawvalue: 46
stableDimension: 0
stamp: i32 [46] ⇊000000000000002e ⇈000000000000002e
stampKind: i32
value: int[46|0x2e]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1018 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1018 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.indexOf(String.java:1559) [bci: 49]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1630 
y: i1040 
=== Succesors ===
=== Usages ===
v1021 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1630 y: i1040  <|@  <|@
f <@*|@fixed>@ <|@
tid v1021 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1559) [bci: 49]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1018 
=== Succesors ===
trueSuccessor: v1019 
falseSuccessor: v1050 
=== Usages ===
=== Predecessor ===
v1020 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1018 #trueSuccessor: v1019 #falseSuccessor: v1050  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B362" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1019 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1560) [bci: 52]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2398 
=== Usages ===
=== Predecessor ===
v1021 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2398  <|@  <|@
f <@~|@floating>@ <|@
tid i2399 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -389651
stableDimension: 0
stamp: i32 [-389651] ⇊00000000fffa0ded ⇈00000000fffa0ded
stampKind: i32
value: int[-389651|0xfffffffffffa0ded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2389 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2398 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2386 
=== Predecessor ===
v1019 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1050 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1558) [bci: 55]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1113 
=== Usages ===
=== Predecessor ===
v1021 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1113  <|@  <|@
f <@~|@floating>@ <|@
tid i1132 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:1559) [bci: 47]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
rawvalue: 40
stableDimension: 0
stamp: i32 [40] ⇊0000000000000028 ⇈0000000000000028
stampKind: i32
value: int[40|0x28]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1110 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1110 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.indexOf(String.java:1559) [bci: 49]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1630 
y: i1132 
=== Succesors ===
=== Usages ===
v1113 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1630 y: i1132  <|@  <|@
f <@*|@fixed>@ <|@
tid v1113 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1559) [bci: 49]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1110 
=== Succesors ===
trueSuccessor: v1111 
falseSuccessor: v1081 
=== Usages ===
=== Predecessor ===
v1050 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1110 #trueSuccessor: v1111 #falseSuccessor: v1081  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B362" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1111 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1560) [bci: 52]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2400 
=== Usages ===
=== Predecessor ===
v1113 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2400  <|@  <|@
f <@~|@floating>@ <|@
tid i2401 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -391187
stableDimension: 0
stamp: i32 [-391187] ⇊00000000fffa07ed ⇈00000000fffa07ed
stampKind: i32
value: int[-391187|0xfffffffffffa07ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2389 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2400 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2386 
=== Predecessor ===
v1111 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1081 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1558) [bci: 55]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1082 
=== Usages ===
=== Predecessor ===
v1113 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1082  <|@  <|@
f <@~|@floating>@ <|@
tid i1101 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:1559) [bci: 47]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
rawvalue: 124
stableDimension: 0
stamp: i32 [124] ⇊000000000000007c ⇈000000000000007c
stampKind: i32
value: int[124|0x7c]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1079 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1079 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.indexOf(String.java:1559) [bci: 49]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1630 
y: i1101 
=== Succesors ===
=== Usages ===
v1082 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1630 y: i1101  <|@  <|@
f <@*|@fixed>@ <|@
tid v1082 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1559) [bci: 49]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1079 
=== Succesors ===
trueSuccessor: v1080 
falseSuccessor: v1112 
=== Usages ===
=== Predecessor ===
v1081 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1079 #trueSuccessor: v1080 #falseSuccessor: v1112  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B362" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1080 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1560) [bci: 52]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2402 
=== Usages ===
=== Predecessor ===
v1082 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2402  <|@  <|@
f <@~|@floating>@ <|@
tid i2403 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -390675
stableDimension: 0
stamp: i32 [-390675] ⇊00000000fffa09ed ⇈00000000fffa09ed
stampKind: i32
value: int[-390675|0xfffffffffffa09ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2389 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2402 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2386 
=== Predecessor ===
v1080 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1112 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1558) [bci: 55]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1175 
=== Usages ===
=== Predecessor ===
v1082 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1175  <|@  <|@
f <@~|@floating>@ <|@
tid i1194 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:1559) [bci: 47]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
rawvalue: 91
stableDimension: 0
stamp: i32 [91] ⇊000000000000005b ⇈000000000000005b
stampKind: i32
value: int[91|0x5b]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1172 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1172 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.indexOf(String.java:1559) [bci: 49]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1630 
y: i1194 
=== Succesors ===
=== Usages ===
v1175 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1630 y: i1194  <|@  <|@
f <@*|@fixed>@ <|@
tid v1175 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1559) [bci: 49]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1172 
=== Succesors ===
trueSuccessor: v1173 
falseSuccessor: v1143 
=== Usages ===
=== Predecessor ===
v1112 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1172 #trueSuccessor: v1173 #falseSuccessor: v1143  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B362" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1173 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1560) [bci: 52]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2404 
=== Usages ===
=== Predecessor ===
v1175 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2404  <|@  <|@
f <@~|@floating>@ <|@
tid i2405 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -392211
stableDimension: 0
stamp: i32 [-392211] ⇊00000000fffa03ed ⇈00000000fffa03ed
stampKind: i32
value: int[-392211|0xfffffffffffa03ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2389 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2404 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2386 
=== Predecessor ===
v1173 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1143 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1558) [bci: 55]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1144 
=== Usages ===
=== Predecessor ===
v1175 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1144  <|@  <|@
f <@~|@floating>@ <|@
tid i1163 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:1559) [bci: 47]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
rawvalue: 41
stableDimension: 0
stamp: i32 [41] ⇊0000000000000029 ⇈0000000000000029
stampKind: i32
value: int[41|0x29]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1141 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1141 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.indexOf(String.java:1559) [bci: 49]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1630 
y: i1163 
=== Succesors ===
=== Usages ===
v1144 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1630 y: i1163  <|@  <|@
f <@*|@fixed>@ <|@
tid v1144 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1559) [bci: 49]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1141 
=== Succesors ===
trueSuccessor: v1142 
falseSuccessor: v1174 
=== Usages ===
=== Predecessor ===
v1143 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1141 #trueSuccessor: v1142 #falseSuccessor: v1174  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B362" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1142 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1560) [bci: 52]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2406 
=== Usages ===
=== Predecessor ===
v1144 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2406  <|@  <|@
f <@~|@floating>@ <|@
tid i2407 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -391699
stableDimension: 0
stamp: i32 [-391699] ⇊00000000fffa05ed ⇈00000000fffa05ed
stampKind: i32
value: int[-391699|0xfffffffffffa05ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2389 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2406 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2386 
=== Predecessor ===
v1142 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1174 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1558) [bci: 55]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1237 
=== Usages ===
=== Predecessor ===
v1144 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1237  <|@  <|@
f <@~|@floating>@ <|@
tid i1256 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:1559) [bci: 47]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
rawvalue: 94
stableDimension: 0
stamp: i32 [94] ⇊000000000000005e ⇈000000000000005e
stampKind: i32
value: int[94|0x5e]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1234 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1234 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.indexOf(String.java:1559) [bci: 49]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1630 
y: i1256 
=== Succesors ===
=== Usages ===
v1237 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1630 y: i1256  <|@  <|@
f <@*|@fixed>@ <|@
tid v1237 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1559) [bci: 49]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1234 
=== Succesors ===
trueSuccessor: v1235 
falseSuccessor: v1205 
=== Usages ===
=== Predecessor ===
v1174 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1234 #trueSuccessor: v1235 #falseSuccessor: v1205  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B362" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1235 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1560) [bci: 52]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2408 
=== Usages ===
=== Predecessor ===
v1237 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2408  <|@  <|@
f <@~|@floating>@ <|@
tid i2409 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -393235
stableDimension: 0
stamp: i32 [-393235] ⇊00000000fff9ffed ⇈00000000fff9ffed
stampKind: i32
value: int[-393235|0xfffffffffff9ffed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2389 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2408 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2386 
=== Predecessor ===
v1235 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1205 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1558) [bci: 55]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1206 
=== Usages ===
=== Predecessor ===
v1237 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1206  <|@  <|@
f <@~|@floating>@ <|@
tid i1225 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:1559) [bci: 47]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
rawvalue: 123
stableDimension: 0
stamp: i32 [123] ⇊000000000000007b ⇈000000000000007b
stampKind: i32
value: int[123|0x7b]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1203 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1203 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.indexOf(String.java:1559) [bci: 49]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1630 
y: i1225 
=== Succesors ===
=== Usages ===
v1206 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1630 y: i1225  <|@  <|@
f <@*|@fixed>@ <|@
tid v1206 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1559) [bci: 49]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1203 
=== Succesors ===
trueSuccessor: v1204 
falseSuccessor: v1236 
=== Usages ===
=== Predecessor ===
v1205 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1203 #trueSuccessor: v1204 #falseSuccessor: v1236  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B362" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1204 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1560) [bci: 52]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2410 
=== Usages ===
=== Predecessor ===
v1206 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2410  <|@  <|@
f <@~|@floating>@ <|@
tid i2411 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -392723
stableDimension: 0
stamp: i32 [-392723] ⇊00000000fffa01ed ⇈00000000fffa01ed
stampKind: i32
value: int[-392723|0xfffffffffffa01ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2389 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2410 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2386 
=== Predecessor ===
v1204 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1236 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1558) [bci: 55]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1299 
=== Usages ===
=== Predecessor ===
v1206 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1299  <|@  <|@
f <@~|@floating>@ <|@
tid i1318 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:1559) [bci: 47]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
rawvalue: 42
stableDimension: 0
stamp: i32 [42] ⇊000000000000002a ⇈000000000000002a
stampKind: i32
value: int[42|0x2a]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1296 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1296 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.indexOf(String.java:1559) [bci: 49]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1630 
y: i1318 
=== Succesors ===
=== Usages ===
v1299 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1630 y: i1318  <|@  <|@
f <@*|@fixed>@ <|@
tid v1299 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1559) [bci: 49]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1296 
=== Succesors ===
trueSuccessor: v1297 
falseSuccessor: v1267 
=== Usages ===
=== Predecessor ===
v1236 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1296 #trueSuccessor: v1297 #falseSuccessor: v1267  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B362" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1297 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1560) [bci: 52]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2412 
=== Usages ===
=== Predecessor ===
v1299 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2412  <|@  <|@
f <@~|@floating>@ <|@
tid i2413 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -394259
stableDimension: 0
stamp: i32 [-394259] ⇊00000000fff9fbed ⇈00000000fff9fbed
stampKind: i32
value: int[-394259|0xfffffffffff9fbed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2389 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2412 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2386 
=== Predecessor ===
v1297 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1267 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1558) [bci: 55]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1268 
=== Usages ===
=== Predecessor ===
v1299 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1268  <|@  <|@
f <@~|@floating>@ <|@
tid i1287 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:1559) [bci: 47]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
rawvalue: 63
stableDimension: 0
stamp: i32 [63] ⇊000000000000003f ⇈000000000000003f
stampKind: i32
value: int[63|0x3f]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1265 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1265 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.indexOf(String.java:1559) [bci: 49]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1630 
y: i1287 
=== Succesors ===
=== Usages ===
v1268 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1630 y: i1287  <|@  <|@
f <@*|@fixed>@ <|@
tid v1268 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1559) [bci: 49]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1265 
=== Succesors ===
trueSuccessor: v1266 
falseSuccessor: v1298 
=== Usages ===
=== Predecessor ===
v1267 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1265 #trueSuccessor: v1266 #falseSuccessor: v1298  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B362" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1266 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1560) [bci: 52]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2414 
=== Usages ===
=== Predecessor ===
v1268 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2414  <|@  <|@
f <@~|@floating>@ <|@
tid i2415 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -393747
stableDimension: 0
stamp: i32 [-393747] ⇊00000000fff9fded ⇈00000000fff9fded
stampKind: i32
value: int[-393747|0xfffffffffff9fded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2389 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2414 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2386 
=== Predecessor ===
v1266 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1298 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1558) [bci: 55]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1329 
=== Usages ===
=== Predecessor ===
v1268 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1329  <|@  <|@
f <@~|@floating>@ <|@
tid i1348 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:1559) [bci: 47]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
rawvalue: 43
stableDimension: 0
stamp: i32 [43] ⇊000000000000002b ⇈000000000000002b
stampKind: i32
value: int[43|0x2b]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1326 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1326 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.indexOf(String.java:1559) [bci: 49]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1630 
y: i1348 
=== Succesors ===
=== Usages ===
v1329 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1630 y: i1348  <|@  <|@
f <@*|@fixed>@ <|@
tid v1329 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1559) [bci: 49]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1326 
=== Succesors ===
trueSuccessor: v1327 
falseSuccessor: v1328 
=== Usages ===
=== Predecessor ===
v1298 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1326 #trueSuccessor: v1327 #falseSuccessor: v1328  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B362" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1327 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1560) [bci: 52]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2416 
=== Usages ===
=== Predecessor ===
v1329 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2416  <|@  <|@
f <@~|@floating>@ <|@
tid i2417 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -364819
stableDimension: 0
stamp: i32 [-364819] ⇊00000000fffa6eed ⇈00000000fffa6eed
stampKind: i32
value: int[-364819|0xfffffffffffa6eed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2389 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2416 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2386 
=== Predecessor ===
v1327 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B360" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1328 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1558) [bci: 55]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1888 
=== Usages ===
=== Predecessor ===
v1329 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1888  <|@  <|@
f <@~|@floating>@ <|@
tid i5 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.split(String.java:2336) [bci: 0]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v420 v2190 i687 v2977 i34 ?35 ?1489 v441 v2276 ?145 ?309 i503 v74 v95 v2733 ?1489 ?309 v447 v2630 v324 ?345 v597 v356 v3119 a2657 v3206 a2772 v2805 v2828 a2905 a3152 a3012 v3045 v3068 ?345 ?337 ?145 ?35 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.split(String.java:2372) [bci: 258]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i5 
=== Succesors ===
=== Usages ===
v1888 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i3 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v1888 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.split(String.java:2372) [bci: 258]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v74 
=== Succesors ===
trueSuccessor: v1885 
falseSuccessor: v1887 
=== Usages ===
=== Predecessor ===
v1328 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v74 #trueSuccessor: v1885 #falseSuccessor: v1887  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1885 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.split(String.java:2372) [bci: 258]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1892 
=== Usages ===
=== Predecessor ===
v1888 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1892  <|@  <|@
f <@~|@floating>@ <|@
tid i1378 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:1559) [bci: 47]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
rawvalue: 92
stableDimension: 0
stamp: i32 [92] ⇊000000000000005c ⇈000000000000005c
stampKind: i32
value: int[92|0x5c]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1356 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1356 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.indexOf(String.java:1559) [bci: 49]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1630 
y: i1378 
=== Succesors ===
=== Usages ===
v1892 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1630 y: i1378  <|@  <|@
f <@*|@fixed>@ <|@
tid v1892 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.split(String.java:2338) [bci: 24]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1356 
=== Succesors ===
trueSuccessor: v1891 
falseSuccessor: v1889 
=== Usages ===
=== Predecessor ===
v1885 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1356 #trueSuccessor: v1891 #falseSuccessor: v1889  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B362" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1891 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.split(String.java:2338) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2418 
=== Usages ===
=== Predecessor ===
v1892 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2418  <|@  <|@
f <@~|@floating>@ <|@
tid i2419 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -417555
stableDimension: 0
stamp: i32 [-417555] ⇊00000000fff9a0ed ⇈00000000fff9a0ed
stampKind: i32
value: int[-417555|0xfffffffffff9a0ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2389 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2418 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2386 
=== Predecessor ===
v1891 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B359" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1889 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.split(String.java:2338) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1896 
=== Usages ===
=== Predecessor ===
v1892 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1896  <|@  <|@
f <@~|@floating>@ <|@
tid i22 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.split(String.java:2341) [bci: 88]
rawvalue: 55296
stableDimension: 0
stamp: i32 [55296] ⇊000000000000d800 ⇈000000000000d800
stampKind: i32
value: int[55296|0xd800]
=== Inputs ===
=== Succesors ===
=== Usages ===
v23 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.String.split(String.java:2341) [bci: 90]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1630 
y: i22 
=== Succesors ===
=== Usages ===
v1896 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1630 y: i22  <|@  <|@
f <@*|@fixed>@ <|@
tid v1896 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.split(String.java:2341) [bci: 90]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v23 
=== Succesors ===
trueSuccessor: v1893 
falseSuccessor: v1895 
=== Usages ===
=== Predecessor ===
v1889 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v23 #trueSuccessor: v1893 #falseSuccessor: v1895  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1893 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.split(String.java:2341) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: a4358 
=== Usages ===
=== Predecessor ===
v1896 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a4358  <|@  <|@
f <@~|@floating>@ <|@
tid v4395 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a4358 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4358 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.indexOf(String.java:1546) [bci: 1]
at java.lang.String.split(String.java:2351) [bci: 129]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v4395 
=== Succesors ===
next: i4359 
=== Usages ===
a1636 v4396 
=== Predecessor ===
v1893 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4395 #next: i4359  <|@  <|@
f <@~|@floating>@ <|@
tid v4396 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a4358 
=== Succesors ===
=== Usages ===
i4359 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a4358  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4359 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.indexOf(String.java:1546) [bci: 4]
at java.lang.String.split(String.java:2351) [bci: 129]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v4396 
=== Succesors ===
next: v32 
=== Usages ===
v283 ?292 v293 v319 v330 i355 j1812 v450 i458 v1821 v4350 
=== Predecessor ===
a4358 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v4396 #next: v32  <|@  <|@
f <@~|@floating>@ <|@
tid j1812 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i4359 
=== Succesors ===
=== Usages ===
v1820 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i4359  <|@  <|@
f <@~|@floating>@ <|@
tid a1636 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.indexOf(String.java:1546) [bci: 1]
at java.lang.String.split(String.java:2351) [bci: 129]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a4358 
=== Succesors ===
=== Usages ===
v4397 ?292 v4411 v4563 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a4358  <|@  <|@
f <@~|@floating>@ <|@
tid i429 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:262) [bci: 23]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
rawvalue: -2147483639
stableDimension: 0
stamp: i32 [-2147483639] ⇊0000000080000009 ⇈0000000080000009
stampKind: i32
value: int[-2147483639|0xffffffff80000009]
=== Inputs ===
=== Succesors ===
=== Usages ===
i430 i606 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2741 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.ArrayList.add(ArrayList.java:463) [bci: 26]
at java.lang.String.split(String.java:2353) [bci: 165]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2740 v2842 v2982 v3124 v3220 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2735 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.ArrayList.add(ArrayList.java:463) [bci: 26]
at java.lang.String.split(String.java:2353) [bci: 165]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2736 j2810 j2816 j2839 j2979 j3050 j3056 j3121 j3188 j3194 j3217 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2739 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.ArrayList.add(ArrayList.java:463) [bci: 26]
at java.lang.String.split(String.java:2353) [bci: 165]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v4435 j2830 v4446 v4465 j3070 v4481 j3208 v4493 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i193 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList.calculateCapacity(ArrayList.java:225) [bci: 7]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
rawvalue: 10
stableDimension: 0
stamp: i32 [10] ⇊000000000000000a ⇈000000000000000a
stampKind: i32
value: int[10|0xa]
=== Inputs ===
=== Succesors ===
=== Usages ===
i204 i240 i240 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i194 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at java.util.ArrayList.calculateCapacity(ArrayList.java:225) [bci: 10]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
rawvalue: 11
stableDimension: 0
stamp: i32 [11] ⇊000000000000000b ⇈000000000000000b
stampKind: i32
value: int[11|0xb]
=== Inputs ===
=== Succesors ===
=== Usages ===
v195 v4343 v4344 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1626 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.lang.String.split(String.java:2338) [bci: 15]
rawvalue: 16
stableDimension: 0
stamp: i64 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j3906 j3800 j3957 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2049 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j3996 j3952 v4106 v3959 v4055 j4048 j4042 j4097 v4013 j4004 v4148 j3785 j3793 v3803 j4141 j3837 j3843 v3850 j4135 j3891 j3899 v3908 j4089 j3946 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2631 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
rawvalue: meta{HotSpotType<[C, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[C, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a2657 a2905 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v3233 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
rawvalue: meta{HotSpotType<[C, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[C, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2684 v2928 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2632 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2681 v2794 j2818 v2823 v2877 v2925 v3034 j3058 v3063 v3172 j3196 v3201 v3529 v3637 v3403 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2664 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2665 i2779 i2912 i3019 i3159 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2634 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2635 i2758 i2884 i2998 i3131 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2641 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 48]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2642 v2890 v3137 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2133 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: char[0]{}
stableDimension: 1
stamp: n!# [C
stampKind: n -
value: NarrowOop[char[0]{}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2628 a2145 a2145 a2145 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v3230 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2624 v2727 v2971 v3113 v3255 v3256 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2582 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a2596 a2703 a2856 a2947 a3089 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j3225 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 24
stableDimension: 0
stamp: i64 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j3226 j3250 j3234 j3240 j3244 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a127 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList.<init>(ArrayList.java:166) [bci: 5]
at java.lang.String.split(String.java:2350) [bci: 120]
rawvalue: Object[0]{}
stableDimension: 0
stamp: a!# [Ljava/lang/Object;
stampKind: a -
value: Object[Object[0]{}]
=== Inputs ===
=== Succesors ===
=== Usages ===
a505 v227 v4346 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1816 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1817 j1829 j2822 j3062 j3200 j3921 j3972 j4023 j4065 j4116 j4158 j4353 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.split(String.java:2351) [bci: 125]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v33 
=== Predecessor ===
i4359 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B169" "B120" 
    successors "B29" "B30" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4614323782818816755
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i34 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v33 
values: i5 i1411 i1411 
=== Succesors ===
=== Usages ===
?35 ?309 ?1489 v1821 j1814 v459 v283 i291 v450 i321 v324 ?337 v441 ?1448 i355 v4350 j4351 j4352 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v33 values: i5 i1411 i1411  <|@  <|@
f <@~|@floating>@ <|@
tid i503 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v33 
values: i5 i4345 i4345 
=== Succesors ===
=== Usages ===
v1745 v1672 v4407 v4408 v4400 v1758 v4399 ?521 i396 ?521 v4337 i4345 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v33 values: i5 i4345 i4345  <|@  <|@
f <@~|@floating>@ <|@
tid a505 <|@
d <@d|@=== Debug Properties ===
stamp: a! [Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v33 
values: a127 a2335 a505 
=== Succesors ===
=== Usages ===
v227 v4399 v4417 a505 ?521 v4407 ?1484 a1563 v4398 v4410 v4346 v4564 v4565 v4566 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v33 values: a127 a2335 a505  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 3.1714027043602697
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 2
nodeSourcePosition: at java.lang.String.split(String.java:2351) [bci: 125]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v32 
=== Succesors ===
next: v1909 
=== Usages ===
i34 v41 v54 i503 a505 v1485 v1958 v1908 v1913 v1918 v1923 v1928 v1933 v1938 v1943 v1948 v1953 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v32 #next: v1909  <|@  <|@
tid ?521 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a244 
values: i503 i503 a505 
=== Succesors ===
=== Usages ===
?179 ?35 ?292 ?170 ?1448 ?1489 ?337 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a244 values: i503 i503 a505  <|@  <|@
f <@~|@floating>@ <|@
tid v441 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.<init>(String.java:191) [bci: 5]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i34 
y: i5 
=== Succesors ===
=== Usages ===
v1909 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i34 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v1909 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1547) [bci: 7]
at java.lang.String.split(String.java:2351) [bci: 129]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v441 
=== Succesors ===
trueSuccessor: v1908 
falseSuccessor: v1905 
=== Usages ===
=== Predecessor ===
v33 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v441 #trueSuccessor: v1908 #falseSuccessor: v1905  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B183" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1908 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1547) [bci: 7]
at java.lang.String.split(String.java:2351) [bci: 129]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v33 
=== Succesors ===
next: v2430 
=== Usages ===
=== Predecessor ===
v1909 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v33 #next: v2430  <|@  <|@
f <@~|@floating>@ <|@
tid i2431 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -420371
stableDimension: 0
stamp: i32 [-420371] ⇊00000000fff995ed ⇈00000000fff995ed
stampKind: i32
value: int[-420371|0xfffffffffff995ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2432 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2430 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2429 
=== Predecessor ===
v1908 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B184" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4614323782818816755
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1905 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1547) [bci: 7]
at java.lang.String.split(String.java:2351) [bci: 129]
stamp: void
=== Inputs ===
=== Succesors ===
next: v286 
=== Usages ===
=== Predecessor ===
v1909 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v286  <|@  <|@
f <@~|@floating>@ <|@
tid v324 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.substring(String.java:1969) [bci: 49]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i34 
y: i5 
=== Succesors ===
=== Usages ===
v327 v58 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i34 y: i5  <|@  <|@
f <@~|@floating>@ <|@
tid i355 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.String.substring(String.java:1965) [bci: 33]
at java.lang.String.split(String.java:2368) [bci: 243]
stamp: i32
=== Inputs ===
x: i4359 
y: i34 
=== Succesors ===
=== Usages ===
v356 v560 j4354 j1815 i2322 v2164 v2924 i2883 v2890 a2905 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i4359 y: i34  <|@  <|@
f <@~|@floating>@ <|@
tid v283 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.indexOf(String.java:1549) [bci: 17]
at java.lang.String.split(String.java:2351) [bci: 129]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i34 
y: i4359 
=== Succesors ===
=== Usages ===
v286 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i34 y: i4359  <|@  <|@
f <@*|@fixed>@ <|@
tid v286 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1549) [bci: 17]
at java.lang.String.split(String.java:2351) [bci: 129]
stamp: void
trueSuccessorProbability: 0.7686826237895121
=== Inputs ===
condition: v283 
=== Succesors ===
trueSuccessor: v284 
falseSuccessor: v285 
=== Usages ===
=== Predecessor ===
v1905 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v283 #trueSuccessor: v284 #falseSuccessor: v285  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B180" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612671861231424105
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v284 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1554) [bci: 22]
at java.lang.String.split(String.java:2351) [bci: 129]
stamp: void
=== Inputs ===
=== Succesors ===
next: v4267 
=== Usages ===
=== Predecessor ===
v286 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4267  <|@  <|@
f <@~|@floating>@ <|@
tid j1814 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i34 
=== Succesors ===
=== Usages ===
j1818 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i34  <|@  <|@
f <@~|@floating>@ <|@
tid j1815 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i355 
=== Succesors ===
=== Usages ===
j1817 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i355  <|@  <|@
f <@~|@floating>@ <|@
tid j1817 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j1815 
y: j1816 
=== Succesors ===
=== Usages ===
j1818 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1815 y: j1816  <|@  <|@
f <@~|@floating>@ <|@
tid j1818 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j1814 
y: j1817 
=== Succesors ===
=== Usages ===
v1820 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1814 y: j1817  <|@  <|@
f <@~|@floating>@ <|@
tid v1820 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1818 
y: j1812 
=== Succesors ===
=== Usages ===
v4267 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1818 y: j1812  <|@  <|@
f <@*|@fixed>@ <|@
tid v4267 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1559) [bci: 47]
at java.lang.String.split(String.java:2351) [bci: 129]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1820 
=== Succesors ===
trueSuccessor: v4266 
falseSuccessor: v4263 
=== Usages ===
=== Predecessor ===
v284 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1820 #trueSuccessor: v4266 #falseSuccessor: v4263  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B179" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612671861231424105
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4266 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1559) [bci: 47]
at java.lang.String.split(String.java:2351) [bci: 129]
stamp: void
=== Inputs ===
=== Succesors ===
next: v4265 
=== Usages ===
=== Predecessor ===
v4267 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4265  <|@  <|@
f <@~|@floating>@ <|@
tid v1821 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i34 
y: i4359 
=== Succesors ===
=== Usages ===
v4265 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i34 y: i4359  <|@  <|@
f <@*|@fixed>@ <|@
tid v4265 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1559) [bci: 47]
at java.lang.String.split(String.java:2351) [bci: 129]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1821 
=== Succesors ===
trueSuccessor: v4256 
falseSuccessor: v4264 
=== Usages ===
=== Predecessor ===
v4266 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1821 #trueSuccessor: v4256 #falseSuccessor: v4264  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612671861231424105
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4256 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1559) [bci: 47]
at java.lang.String.split(String.java:2351) [bci: 129]
stamp: void
=== Inputs ===
=== Succesors ===
next: v289 
=== Usages ===
v1825 
=== Predecessor ===
v4265 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v289  <|@  <|@
f <@*|@fixed>@ <|@
tid v289 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1558) [bci: 37]
at java.lang.String.split(String.java:2351) [bci: 129]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v290 
=== Predecessor ===
v4256 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B177" 
    successors "B35" "B178" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4629850235763156642
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i291 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v290 
values: i34 i4332 
=== Succesors ===
=== Usages ===
?292 v293 v4397 v330 i321 ?145 v319 i1411 ?345 v39 i4332 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v290 values: i34 i4332  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v290 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 13.563252769086171
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.lang.String.indexOf(String.java:1558) [bci: 37]
at java.lang.String.split(String.java:2351) [bci: 129]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v289 
=== Succesors ===
next: v297 
=== Usages ===
i291 v295 v300 v306 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v289 #next: v297  <|@  <|@
f <@~|@floating>@ <|@
tid v293 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.indexOf(String.java:1558) [bci: 40]
at java.lang.String.split(String.java:2351) [bci: 129]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i291 
y: i4359 
=== Succesors ===
=== Usages ===
v297 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i291 y: i4359  <|@  <|@
f <@*|@fixed>@ <|@
tid v297 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1558) [bci: 40]
at java.lang.String.split(String.java:2351) [bci: 129]
stamp: void
trueSuccessorProbability: 0.9277482167917486
=== Inputs ===
condition: v293 
=== Succesors ===
trueSuccessor: v294 
falseSuccessor: v295 
=== Usages ===
=== Predecessor ===
v290 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v293 #trueSuccessor: v294 #falseSuccessor: v295  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B177" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4629327619026861556
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v294 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1559) [bci: 43]
at java.lang.String.split(String.java:2351) [bci: 129]
stamp: void
=== Inputs ===
=== Succesors ===
next: i4360 
=== Usages ===
v1825 
=== Predecessor ===
v297 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i4360  <|@  <|@
f <@~|@floating>@ <|@
tid v1825 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v4256 v294 
=== Succesors ===
=== Usages ===
i4360 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v4256 v294  <|@  <|@
f <@~|@floating>@ <|@
tid v4397 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a1636 
index: i291 
=== Succesors ===
=== Usages ===
i4360 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1636 index: i291  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4360 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at java.lang.String.indexOf(String.java:1559) [bci: 47]
at java.lang.String.split(String.java:2351) [bci: 129]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v1825 
address: v4397 
=== Succesors ===
next: v304 
=== Usages ===
i1652 
=== Predecessor ===
v294 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1825 address: v4397 #next: v304  <|@  <|@
f <@~|@floating>@ <|@
tid i1652 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.lang.String.indexOf(String.java:1559) [bci: 47]
at java.lang.String.split(String.java:2351) [bci: 129]
resultBits: 32
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i4360 
=== Succesors ===
=== Usages ===
v299 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i4360  <|@  <|@
f <@~|@floating>@ <|@
tid v299 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.indexOf(String.java:1559) [bci: 49]
at java.lang.String.split(String.java:2351) [bci: 129]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1630 
y: i1652 
=== Succesors ===
=== Usages ===
v304 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1630 y: i1652  <|@  <|@
f <@*|@fixed>@ <|@
tid v304 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1559) [bci: 49]
at java.lang.String.split(String.java:2351) [bci: 129]
stamp: void
trueSuccessorProbability: 0.0015918580565381646
=== Inputs ===
condition: v299 
=== Succesors ===
trueSuccessor: v300 
falseSuccessor: v303 
=== Usages ===
=== Predecessor ===
i4360 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v299 #trueSuccessor: v300 #falseSuccessor: v303  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" "B38" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587198128603920715
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v300 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1560) [bci: 52]
at java.lang.String.split(String.java:2351) [bci: 129]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v290 
=== Succesors ===
next: v45 
=== Usages ===
=== Predecessor ===
v304 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v290 #next: v45  <|@  <|@
f <@~|@floating>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.split(String.java:2351) [bci: 136]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i291 
y: i19 
=== Succesors ===
=== Usages ===
v45 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i291 y: i19  <|@  <|@
f <@*|@fixed>@ <|@
tid v45 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.split(String.java:2351) [bci: 136]
stamp: void
trueSuccessorProbability: 0.315317887137174
=== Inputs ===
condition: v39 
=== Succesors ===
trueSuccessor: v1486 
falseSuccessor: v44 
=== Usages ===
=== Predecessor ===
v300 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v39 #trueSuccessor: v1486 #falseSuccessor: v44  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B185" 
    xhandlers
    flags 
    probability 4580029577595117535
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1486 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.split(String.java:2363) [bci: 205]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1488 
=== Usages ===
=== Predecessor ===
v45 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1488  <|@  <|@
f <@*|@fixed>@ <|@
tid v1488 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1487 
=== Predecessor ===
v1486 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584979139650404691
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v44 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.split(String.java:2352) [bci: 139]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1919 
=== Usages ===
=== Predecessor ===
v45 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1919  <|@  <|@
f <@~|@floating>@ <|@
tid v319 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.substring(String.java:1962) [bci: 19]
at java.lang.String.split(String.java:2353) [bci: 162]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4359 
y: i291 
=== Succesors ===
=== Usages ===
v1919 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i4359 y: i291  <|@  <|@
tid ?248 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a244 
materializedValue: a244 
=== Succesors ===
=== Usages ===
?309 ?345 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a244 materializedValue: a244  <|@  <|@
f <@*|@fixed>@ <|@
tid v1919 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1962) [bci: 19]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v319 
=== Succesors ===
trueSuccessor: v1918 
falseSuccessor: v1915 
=== Usages ===
=== Predecessor ===
v44 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v319 #trueSuccessor: v1918 #falseSuccessor: v1915  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1918 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1962) [bci: 19]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v33 
=== Succesors ===
next: v2498 
=== Usages ===
=== Predecessor ===
v1919 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v33 #next: v2498  <|@  <|@
f <@~|@floating>@ <|@
tid i2499 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -423187
stableDimension: 0
stamp: i32 [-423187] ⇊00000000fff98aed ⇈00000000fff98aed
stampKind: i32
value: int[-423187|0xfffffffffff98aed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2500 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2498 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2497 
=== Predecessor ===
v1918 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584979139650404691
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1915 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1962) [bci: 19]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1924 
=== Usages ===
=== Predecessor ===
v1919 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1924  <|@  <|@
f <@~|@floating>@ <|@
tid i321 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.String.substring(String.java:1965) [bci: 33]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: i32
=== Inputs ===
x: i291 
y: i34 
=== Succesors ===
=== Usages ===
i458 v2642 j3259 v443 v447 ?1448 a2657 v2164 i2322 v2680 i2633 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i291 y: i34  <|@  <|@
f <@~|@floating>@ <|@
tid v447 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.<init>(String.java:195) [bci: 22]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i321 
y: i5 
=== Succesors ===
=== Usages ===
v1924 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i321 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v1924 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1966) [bci: 36]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v447 
=== Succesors ===
trueSuccessor: v1923 
falseSuccessor: v1920 
=== Usages ===
=== Predecessor ===
v1915 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v447 #trueSuccessor: v1923 #falseSuccessor: v1920  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1923 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1966) [bci: 36]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v33 
=== Succesors ===
next: v2503 
=== Usages ===
=== Predecessor ===
v1924 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v33 #next: v2503  <|@  <|@
f <@~|@floating>@ <|@
tid i2504 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -423443
stableDimension: 0
stamp: i32 [-423443] ⇊00000000fff989ed ⇈00000000fff989ed
stampKind: i32
value: int[-423443|0xfffffffffff989ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2500 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2503 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2497 
=== Predecessor ===
v1923 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B39" "B41" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i2500 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-423443 - -423187] ⇊00000000fff988ed ⇈00000000fff98bed
valueDescription: i32
=== Inputs ===
merge: v2497 
values: i2499 i2504 
=== Succesors ===
=== Usages ===
v2502 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2497 values: i2499 i2504  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2497 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2498 v2503 
=== Succesors ===
next: v2502 
=== Usages ===
i2500 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2498 v2503 #next: v2502  <|@  <|@
tid ?309 <|@
d <@d|@=== Debug Properties ===
bci: 129
code: ResolvedJavaMethodBytecode<String.split(String, int)>
duringCall: true
localsSize: 10
locksSize: 0
rethrowException: false
sourceFile: String.java
sourceLine: 2351
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - i5 i1630 i34 - i5 a244 - - 
virtualObjectMappings: ?248 
=== Succesors ===
=== Usages ===
?292 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - i5 i1630 i34 - i5 a244 - - virtualObjectMappings: ?248  <|@  <|@
tid ?292 <|@
d <@d|@=== Debug Properties ===
bci: 37
code: ResolvedJavaMethodBytecode<String.indexOf(int, int)>
duringCall: false
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: String.java
sourceLine: 1558
stackSize: 0
=== Inputs ===
outerFrameState: ?309 
values: - i1630 - i4359 a1636 i291 
virtualObjectMappings: ?521 
=== Succesors ===
=== Usages ===
v2502 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?309 values: - i1630 - i4359 a1636 i291 virtualObjectMappings: ?521  <|@  <|@
f <@*|@fixed>@ <|@
tid v2502 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?292 
actionAndReason: i2500 
speculation: a2214 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2497 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?292 actionAndReason: i2500 speculation: a2214  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B44" "B49" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584979139650404691
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1920 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1966) [bci: 36]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: void
=== Inputs ===
=== Succesors ===
next: v327 
=== Usages ===
=== Predecessor ===
v1924 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v327  <|@  <|@
tid ?345 <|@
d <@d|@=== Debug Properties ===
bci: 162
code: ResolvedJavaMethodBytecode<String.split(String, int)>
duringCall: true
localsSize: 10
locksSize: 0
rethrowException: false
sourceFile: String.java
sourceLine: 2353
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 - i5 i1630 - i291 i5 a244 - - a244 
virtualObjectMappings: ?248 
=== Succesors ===
=== Usages ===
?337 ?1448 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - i5 i1630 - i291 i5 a244 - - a244 virtualObjectMappings: ?248  <|@  <|@
f <@~|@floating>@ <|@
tid v443 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.<init>(String.java:194) [bci: 18]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i321 
y: i8 
=== Succesors ===
=== Usages ===
v446 v1455 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i321 y: i8  <|@  <|@
f <@~|@floating>@ <|@
tid v450 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.<init>(String.java:198) [bci: 37]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4359 
y: i34 
=== Succesors ===
=== Usages ===
v1929 v2161 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i4359 y: i34  <|@  <|@
f <@*|@fixed>@ <|@
tid v327 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1969) [bci: 49]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: void
trueSuccessorProbability: 0.18334585698550698
=== Inputs ===
condition: v324 
=== Succesors ===
trueSuccessor: v325 
falseSuccessor: v326 
=== Usages ===
=== Predecessor ===
v1920 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v324 #trueSuccessor: v325 #falseSuccessor: v326  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573717372198682453
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v325 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1969) [bci: 52]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: void
=== Inputs ===
=== Succesors ===
next: v336 
=== Usages ===
=== Predecessor ===
v327 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v336  <|@  <|@
f <@~|@floating>@ <|@
tid v330 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.substring(String.java:1969) [bci: 58]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i291 
y: i4359 
=== Succesors ===
=== Usages ===
v336 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i291 y: i4359  <|@  <|@
f <@*|@fixed>@ <|@
tid v336 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1969) [bci: 58]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: void
trueSuccessorProbability: 0.09242718272553296
=== Inputs ===
condition: v330 
=== Succesors ===
trueSuccessor: v331 
falseSuccessor: v335 
=== Usages ===
=== Predecessor ===
v325 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v330 #trueSuccessor: v331 #falseSuccessor: v335  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B112" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4558364945303527242
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v331 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1969) [bci: 61]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: void
=== Inputs ===
=== Succesors ===
next: v347 
=== Usages ===
=== Predecessor ===
v336 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v347  <|@  <|@
f <@*|@fixed>@ <|@
tid v347 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v346 
=== Predecessor ===
v331 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573064156944687980
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v335 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1969) [bci: 65]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: void
=== Inputs ===
=== Succesors ===
next: v446 
=== Usages ===
=== Predecessor ===
v336 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v446  <|@  <|@
f <@*|@fixed>@ <|@
tid v446 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:194) [bci: 18]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: void
trueSuccessorProbability: 0.09284041465770032
=== Inputs ===
condition: v443 
=== Succesors ===
trueSuccessor: v444 
falseSuccessor: v445 
=== Usages ===
=== Predecessor ===
v335 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v443 #trueSuccessor: v444 #falseSuccessor: v445  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B51" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4557903150740909772
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v444 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:195) [bci: 21]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1444 
=== Usages ===
=== Predecessor ===
v446 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1444  <|@  <|@
f <@*|@fixed>@ <|@
tid v1444 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1443 
=== Predecessor ===
v444 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572468666011020690
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v445 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 50]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1447 
=== Usages ===
=== Predecessor ===
v446 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1447  <|@  <|@
f <@*|@fixed>@ <|@
tid v1447 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1446 
=== Predecessor ===
v445 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B50" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583527021126394577
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v326 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1969) [bci: 65]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1455 
=== Usages ===
=== Predecessor ===
v327 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1455  <|@  <|@
f <@*|@fixed>@ <|@
tid v1455 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:194) [bci: 18]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: void
trueSuccessorProbability: 0.09284041465770032
=== Inputs ===
condition: v443 
=== Succesors ===
trueSuccessor: v1453 
falseSuccessor: v1454 
=== Usages ===
=== Predecessor ===
v326 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v443 #trueSuccessor: v1453 #falseSuccessor: v1454  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4567991506279028027
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1453 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:195) [bci: 21]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1445 
=== Usages ===
=== Predecessor ===
v1455 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1445  <|@  <|@
f <@*|@fixed>@ <|@
tid v1445 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1443 
=== Predecessor ===
v1453 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569182488146362606
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1443 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1444 v1445 
=== Succesors ===
next: v1929 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1444 v1445 #next: v1929  <|@  <|@
tid ?337 <|@
d <@d|@=== Debug Properties ===
bci: 65
code: ResolvedJavaMethodBytecode<String.substring(int, int)>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: String.java
sourceLine: 1969
stackSize: 0
=== Inputs ===
outerFrameState: ?345 
values: a1 i34 - i5 
virtualObjectMappings: ?521 
=== Succesors ===
=== Usages ===
a2596 v1926 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?345 values: a1 i34 - i5 virtualObjectMappings: ?521  <|@  <|@
f <@*|@fixed>@ <|@
tid v1929 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:198) [bci: 37]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v450 
=== Succesors ===
trueSuccessor: v1928 
falseSuccessor: v1925 
=== Usages ===
=== Predecessor ===
v1443 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v450 #trueSuccessor: v1928 #falseSuccessor: v1925  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1928 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:198) [bci: 37]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v33 
=== Succesors ===
next: v1926 
=== Usages ===
=== Predecessor ===
v1929 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v33 #next: v1926  <|@  <|@
f <@*|@fixed>@ <|@
tid v1926 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1680
nodeSourcePosition: at java.lang.String.<init>(String.java:198) [bci: 37]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?337 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1928 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?337  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569182488146362606
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1925 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:198) [bci: 37]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2584 
=== Usages ===
=== Predecessor ===
v1929 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2584  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2584 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j2603 
=== Usages ===
v4418 v4419 
=== Predecessor ===
v1925 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j2603  <|@  <|@
f <@~|@floating>@ <|@
tid v4418 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j2584 
index: - 
=== Succesors ===
=== Usages ===
j2603 v2605 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2584 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2603 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v4418 
=== Succesors ===
next: j2604 
=== Usages ===
j3226 j2609 v4494 
=== Predecessor ===
j2584 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4418 #next: j2604  <|@  <|@
f <@~|@floating>@ <|@
tid v4419 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j2584 
index: - 
=== Succesors ===
=== Usages ===
j2604 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2584 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2604 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v4419 
=== Succesors ===
next: v2592 
=== Usages ===
v2589 
=== Predecessor ===
j2603 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4419 #next: v2592  <|@  <|@
f <@~|@floating>@ <|@
tid j3226 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2603 
y: j3225 
=== Succesors ===
=== Usages ===
v2589 v2605 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2603 y: j3225  <|@  <|@
f <@~|@floating>@ <|@
tid v2589 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2604 
y: j3226 
=== Succesors ===
=== Usages ===
v2592 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j2604 y: j3226  <|@  <|@
f <@*|@fixed>@ <|@
tid v2592 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v2589 
=== Succesors ===
trueSuccessor: v2590 
falseSuccessor: v2591 
=== Usages ===
=== Predecessor ===
j2604 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2589 #trueSuccessor: v2590 #falseSuccessor: v2591  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4539627389128383186
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2590 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a2596 
=== Usages ===
=== Predecessor ===
v2592 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2596  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2596 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?337 
arguments: v2582 i1663 i8 
=== Succesors ===
next: j2597 
=== Usages ===
j2597 
=== Predecessor ===
v2590 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?337 arguments: v2582 i1663 i8 #next: j2597  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2597 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a2596 
=== Succesors ===
next: v2610 
=== Usages ===
j2609 
=== Predecessor ===
a2596 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a2596 #next: v2610  <|@  <|@
f <@*|@fixed>@ <|@
tid v2610 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2607 
=== Predecessor ===
j2597 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569112127490162104
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2591 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2605 
=== Usages ===
=== Predecessor ===
v2592 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2605  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2605 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4418 
value: j3226 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2601 
=== Usages ===
=== Predecessor ===
v2591 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4418 value: j3226 stateAfter: - lastLocationAccess: - #next: v2601  <|@  <|@
f <@~|@floating>@ <|@
tid v4494 <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j2603 
index: - 
=== Succesors ===
=== Usages ===
v2601 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2603 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2601 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v4494 
=== Succesors ===
next: v2608 
=== Usages ===
=== Predecessor ===
v2605 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v4494 #next: v2608  <|@  <|@
f <@*|@fixed>@ <|@
tid v2608 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2607 
=== Predecessor ===
v2601 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" "B54" 
    successors "B112" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569182488146362606
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2609 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2607 
values: j2603 j2597 
=== Succesors ===
=== Usages ===
v4421 v4420 a2051 v4495 v4496 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2607 values: j2603 j2597  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2607 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2608 v2610 
=== Succesors ===
next: a2051 
=== Usages ===
j2609 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2608 v2610 #next: a2051  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2051 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j2609 
=== Succesors ===
next: j2620 
=== Usages ===
a2057 
=== Predecessor ===
v2607 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j2609 #next: j2620  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2620 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v4478 
=== Succesors ===
next: v2621 
=== Usages ===
v2621 
=== Predecessor ===
a2051 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4478 #next: v2621  <|@  <|@
f <@~|@floating>@ <|@
tid v4420 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2609 
index: - 
=== Succesors ===
=== Usages ===
v2621 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2609 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2621 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4420 
value: j2620 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2624 
=== Usages ===
=== Predecessor ===
j2620 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4420 value: j2620 stateAfter: - lastLocationAccess: - #next: v2624  <|@  <|@
f <@~|@floating>@ <|@
tid v4421 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j2609 
index: - 
=== Succesors ===
=== Usages ===
v2624 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2609 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2624 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4421 
value: v3230 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2628 
=== Usages ===
=== Predecessor ===
v2621 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4421 value: v3230 stateAfter: - lastLocationAccess: - #next: v2628  <|@  <|@
f <@~|@floating>@ <|@
tid v4495 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j2609 
index: - 
=== Succesors ===
=== Usages ===
v2628 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2609 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2628 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4495 
value: a2133 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2630 
=== Usages ===
=== Predecessor ===
v2624 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4495 value: a2133 stateAfter: - lastLocationAccess: - #next: v2630  <|@  <|@
f <@~|@floating>@ <|@
tid v4496 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j2609 
index: - 
=== Succesors ===
=== Usages ===
v2630 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2609 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2630 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4496 
value: i5 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a2057 
=== Usages ===
=== Predecessor ===
v2628 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4496 value: i5 stateAfter: - lastLocationAccess: - #next: a2057  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2057 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a2051 
=== Succesors ===
next: v2058 
=== Usages ===
a348 
=== Predecessor ===
v2630 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a2051 #next: v2058  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2058 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v349 
=== Usages ===
=== Predecessor ===
a2057 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v349  <|@  <|@
f <@*|@fixed>@ <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v346 
=== Predecessor ===
v2058 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582796385657305130
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1454 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 50]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1449 
=== Usages ===
=== Predecessor ===
v1455 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1449  <|@  <|@
f <@*|@fixed>@ <|@
tid v1449 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1446 
=== Predecessor ===
v1454 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B48" "B57" 
    successors "B59" "B60" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584251046621639566
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1446 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1447 v1449 
=== Succesors ===
next: v1934 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1447 v1449 #next: v1934  <|@  <|@
tid ?1448 <|@
d <@d|@=== Debug Properties ===
bci: 65
code: ResolvedJavaMethodBytecode<String.substring(int, int)>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: String.java
sourceLine: 1969
stackSize: 0
=== Inputs ===
outerFrameState: ?345 
values: a1 i34 - i321 
virtualObjectMappings: ?521 
=== Succesors ===
=== Usages ===
a2657 a2703 v2520 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?345 values: a1 i34 - i321 virtualObjectMappings: ?521  <|@  <|@
f <@~|@floating>@ <|@
tid i458 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 54]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: i32
=== Inputs ===
x: i4359 
y: i321 
=== Succesors ===
=== Usages ===
v459 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i4359 y: i321  <|@  <|@
f <@~|@floating>@ <|@
tid v459 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 55]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i458 
y: i34 
=== Succesors ===
=== Usages ===
v1934 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i458 y: i34  <|@  <|@
f <@*|@fixed>@ <|@
tid v1934 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 55]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v459 
=== Succesors ===
trueSuccessor: v1933 
falseSuccessor: v1930 
=== Usages ===
=== Predecessor ===
v1446 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v459 #trueSuccessor: v1933 #falseSuccessor: v1930  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1933 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 55]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v33 
=== Succesors ===
next: v2516 
=== Usages ===
=== Predecessor ===
v1934 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v33 #next: v2516  <|@  <|@
f <@~|@floating>@ <|@
tid i2517 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -430355
stableDimension: 0
stamp: i32 [-430355] ⇊00000000fff96eed ⇈00000000fff96eed
stampKind: i32
value: int[-430355|0xfffffffffff96eed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2518 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2516 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2515 
=== Predecessor ===
v1933 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584251046621639566
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1930 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 55]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2161 
=== Usages ===
=== Predecessor ===
v1934 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2161  <|@  <|@
f <@*|@fixed>@ <|@
tid v2161 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:186) [bci: 52]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: void
trueSuccessorProbability: 9.999999999998899E-5
=== Inputs ===
condition: v450 
=== Succesors ===
trueSuccessor: v2160 
falseSuccessor: v2158 
=== Usages ===
=== Predecessor ===
v1930 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v450 #trueSuccessor: v2160 #falseSuccessor: v2158  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" 
    xhandlers
    flags 
    probability 4524150487867272957
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2160 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:187) [bci: 55]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2565 
=== Usages ===
=== Predecessor ===
v2161 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2565  <|@  <|@
f <@~|@floating>@ <|@
tid i2522 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -553569
stableDimension: 0
stamp: i32 [-553569] ⇊00000000fff78d9f ⇈00000000fff78d9f
stampKind: i32
value: int[-553569|0xfffffffffff78d9f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2518 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2565 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:187) [bci: 55]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2515 
=== Predecessor ===
v2160 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B59" "B61" 
    successors 
    xhandlers
    flags 
    probability 4524150487867272957
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i2518 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-553569 - -430355] ⇊00000000fff10c8d ⇈00000000ffffefff
valueDescription: i32
=== Inputs ===
merge: v2515 
values: i2517 i2522 
=== Succesors ===
=== Usages ===
v2520 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2515 values: i2517 i2522  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2515 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2516 v2565 
=== Succesors ===
next: v2520 
=== Usages ===
i2518 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2516 v2565 #next: v2520  <|@  <|@
f <@*|@fixed>@ <|@
tid v2520 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?1448 
actionAndReason: i2518 
speculation: a2214 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2515 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?1448 actionAndReason: i2518 speculation: a2214  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B64" "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584250187239118245
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2158 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:189) [bci: 64]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2636 
=== Usages ===
=== Predecessor ===
v2161 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2636  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2636 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j2677 
=== Usages ===
v4422 v4423 
=== Predecessor ===
v2158 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j2677  <|@  <|@
f <@~|@floating>@ <|@
tid v4422 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j2636 
index: - 
=== Succesors ===
=== Usages ===
j2677 v2679 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2636 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2677 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v4422 
=== Succesors ===
next: j2678 
=== Usages ===
j2640 v4424 v4425 a2656 v4430 v4426 v4427 v4428 v4429 
=== Predecessor ===
j2636 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4422 #next: j2678  <|@  <|@
f <@~|@floating>@ <|@
tid v4423 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j2636 
index: - 
=== Succesors ===
=== Usages ===
j2678 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2636 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2678 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v4423 
=== Succesors ===
next: v2645 
=== Usages ===
v2646 
=== Predecessor ===
j2677 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4423 #next: v2645  <|@  <|@
f <@~|@floating>@ <|@
tid v2642 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i321 
y: i2641 
=== Succesors ===
=== Usages ===
v2645 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i321 y: i2641  <|@  <|@
f <@*|@fixed>@ <|@
tid v2645 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v2642 
=== Succesors ===
trueSuccessor: v2644 
falseSuccessor: v2643 
=== Usages ===
=== Predecessor ===
j2678 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2642 #trueSuccessor: v2644 #falseSuccessor: v2643  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B65" "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583390890656048814
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2644 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2652 
=== Usages ===
=== Predecessor ===
v2645 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2652  <|@  <|@
f <@~|@floating>@ <|@
tid i2633 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i321 
y: i8 
=== Succesors ===
=== Usages ===
i2665 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i321 y: i8  <|@  <|@
f <@~|@floating>@ <|@
tid i2665 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i2633 
y: i2664 
=== Succesors ===
=== Usages ===
i2635 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2633 y: i2664  <|@  <|@
f <@~|@floating>@ <|@
tid i2635 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i2665 
y: i2634 
=== Succesors ===
=== Usages ===
j2639 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i2665 y: i2634  <|@  <|@
f <@~|@floating>@ <|@
tid j2639 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i2635 
=== Succesors ===
=== Usages ===
j2640 v4426 v4427 v4428 v4429 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2635  <|@  <|@
f <@~|@floating>@ <|@
tid j2640 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: i64
=== Inputs ===
x: j2639 
y: j2677 
=== Succesors ===
=== Usages ===
v2646 v2679 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2639 y: j2677  <|@  <|@
f <@~|@floating>@ <|@
tid v2646 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2678 
y: j2640 
=== Succesors ===
=== Usages ===
v2652 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j2678 y: j2640  <|@  <|@
f <@*|@fixed>@ <|@
tid v2652 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v2646 
=== Succesors ===
trueSuccessor: v2651 
falseSuccessor: v2650 
=== Usages ===
=== Predecessor ===
v2644 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2646 #trueSuccessor: v2651 #falseSuccessor: v2650  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B68" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4553585171962680886
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2651 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2649 
=== Usages ===
=== Predecessor ===
v2652 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2649  <|@  <|@
f <@*|@fixed>@ <|@
tid v2649 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2648 
=== Predecessor ===
v2651 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583313553963572565
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2650 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2679 
=== Usages ===
=== Predecessor ===
v2652 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2679  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2679 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4422 
value: j2640 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2667 
=== Usages ===
=== Predecessor ===
v2650 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4422 value: j2640 stateAfter: - lastLocationAccess: - #next: v2667  <|@  <|@
f <@~|@floating>@ <|@
tid v4426 <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j2639 
index: j2677 
=== Succesors ===
=== Usages ===
v2667 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2639 index: j2677  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2667 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: void
=== Inputs ===
address: v4426 
=== Succesors ===
next: v2669 
=== Usages ===
=== Predecessor ===
v2679 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v4426 #next: v2669  <|@  <|@
f <@~|@floating>@ <|@
tid v4427 <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j2639 
index: j2677 
=== Succesors ===
=== Usages ===
v2669 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2639 index: j2677  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2669 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: void
=== Inputs ===
address: v4427 
=== Succesors ===
next: v2672 
=== Usages ===
=== Predecessor ===
v2667 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v4427 #next: v2672  <|@  <|@
f <@~|@floating>@ <|@
tid v4428 <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j2639 
index: j2677 
=== Succesors ===
=== Usages ===
v2672 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2639 index: j2677  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2672 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: void
=== Inputs ===
address: v4428 
=== Succesors ===
next: v2675 
=== Usages ===
=== Predecessor ===
v2669 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v4428 #next: v2675  <|@  <|@
f <@~|@floating>@ <|@
tid v4429 <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j2639 
index: j2677 
=== Succesors ===
=== Usages ===
v2675 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2639 index: j2677  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2675 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: void
=== Inputs ===
address: v4429 
=== Succesors ===
next: v2680 
=== Usages ===
=== Predecessor ===
v2672 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v4429 #next: v2680  <|@  <|@
f <@~|@floating>@ <|@
tid v4424 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j2677 
index: - 
=== Succesors ===
=== Usages ===
v2680 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2677 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2680 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4424 
value: i321 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2681 
=== Usages ===
=== Predecessor ===
v2675 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4424 value: i321 stateAfter: - lastLocationAccess: - #next: v2681  <|@  <|@
f <@~|@floating>@ <|@
tid v4425 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2677 
index: - 
=== Succesors ===
=== Usages ===
v2681 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2677 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2681 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4425 
value: j2632 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2684 
=== Usages ===
=== Predecessor ===
v2680 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4425 value: j2632 stateAfter: - lastLocationAccess: - #next: v2684  <|@  <|@
f <@~|@floating>@ <|@
tid v4430 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j2677 
index: - 
=== Succesors ===
=== Usages ===
v2684 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2677 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2684 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4430 
value: v3233 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2655 
=== Usages ===
=== Predecessor ===
v2681 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4430 value: v3233 stateAfter: - lastLocationAccess: - #next: v2655  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2655 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2656 
=== Usages ===
=== Predecessor ===
v2684 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a2656  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2656 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j2677 
=== Succesors ===
next: v2658 
=== Usages ===
a2661 
=== Predecessor ===
v2655 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j2677 #next: v2658  <|@  <|@
f <@*|@fixed>@ <|@
tid v2658 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2659 
=== Predecessor ===
a2656 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B68" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569020795190867894
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2643 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2647 
=== Usages ===
=== Predecessor ===
v2645 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2647  <|@  <|@
f <@*|@fixed>@ <|@
tid v2647 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2648 
=== Predecessor ===
v2643 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B65" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569639488730677885
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2648 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2647 v2649 
=== Succesors ===
next: a2657 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2647 v2649 #next: a2657  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2657 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?1448 
arguments: v2631 i321 i5 
=== Succesors ===
next: v2660 
=== Usages ===
a2661 
=== Predecessor ===
v2648 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?1448 arguments: v2631 i321 i5 #next: v2660  <|@  <|@
f <@*|@fixed>@ <|@
tid v2660 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2659 
=== Predecessor ===
a2657 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B66" "B68" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584250187239118245
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a2661 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v2659 
values: a2656 a2657 
=== Succesors ===
=== Usages ===
v4507 a2331 v4412 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2659 values: a2656 a2657  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2659 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2658 v2660 
=== Succesors ===
next: v3863 
=== Usages ===
a2661 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2658 v2660 #next: v3863  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3863 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v3406 
=== Usages ===
j3864 j3866 
=== Predecessor ===
v2659 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v3406  <|@  <|@
f <@~|@floating>@ <|@
tid v2164 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 4]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:102) [bci: 9]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i355 
y: i321 
=== Succesors ===
=== Usages ===
i2322 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i355 y: i321  <|@  <|@
f <@~|@floating>@ <|@
tid i2322 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v2164 
trueValue: i355 
falseValue: i321 
=== Succesors ===
=== Usages ===
j3260 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v2164 trueValue: i355 falseValue: i321  <|@  <|@
f <@~|@floating>@ <|@
tid j3260 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i2322 
=== Succesors ===
=== Usages ===
j3921 v4507 j3264 v3403 v3748 j3907 j3912 j3915 j3918 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2322  <|@  <|@
f <@~|@floating>@ <|@
tid v3403 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3260 
y: j2632 
=== Succesors ===
=== Usages ===
v3406 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3260 y: j2632  <|@  <|@
f <@*|@fixed>@ <|@
tid v3406 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v3403 
=== Succesors ===
trueSuccessor: v3404 
falseSuccessor: v3405 
=== Usages ===
=== Predecessor ===
v3863 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3403 #trueSuccessor: v3404 #falseSuccessor: v3405  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B88" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579746587611747749
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3404 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3422 
=== Usages ===
=== Predecessor ===
v3406 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3422  <|@  <|@
f <@*|@fixed>@ <|@
tid v3422 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3423 
=== Predecessor ===
v3404 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579746587611747749
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3405 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3409 
=== Usages ===
=== Predecessor ===
v3406 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3409  <|@  <|@
f <@~|@floating>@ <|@
tid v4412 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a2661 
index: - 
=== Succesors ===
=== Usages ===
j3866 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2661 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j3866 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v3863 
address: v4412 
=== Succesors ===
=== Usages ===
v4524 v4526 v4528 v4530 v4532 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v3863 address: v4412  <|@  <|@
f <@~|@floating>@ <|@
tid j4351 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i34 
=== Succesors ===
=== Usages ===
v4411 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i34  <|@  <|@
f <@~|@floating>@ <|@
tid v4411 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a1636 
index: j4351 
=== Succesors ===
=== Usages ===
j3864 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1636 index: j4351  <|@  <|@
f <@~|@floating>@ <|@
tid j3864 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v3863 
address: v4411 
=== Succesors ===
=== Usages ===
v4525 v4527 v4529 v4531 v4533 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v3863 address: v4411  <|@  <|@
f <@~|@floating>@ <|@
tid j3907 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483664 - 2147483631]
=== Inputs ===
x: j3260 
y: j3801 
=== Succesors ===
=== Usages ===
v3908 v3910 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3260 y: j3801  <|@  <|@
f <@~|@floating>@ <|@
tid v3908 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3907 
y: j2049 
=== Succesors ===
=== Usages ===
v3409 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3907 y: j2049  <|@  <|@
f <@*|@fixed>@ <|@
tid v3409 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v3908 
=== Succesors ===
trueSuccessor: v3407 
falseSuccessor: v3408 
=== Usages ===
=== Predecessor ===
v3405 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3908 #trueSuccessor: v3407 #falseSuccessor: v3408  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577598346154074172
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3407 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3418 
=== Usages ===
=== Predecessor ===
v3409 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3418  <|@  <|@
f <@*|@fixed>@ <|@
tid v3418 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3419 
=== Predecessor ===
v3407 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570739388357006757
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3408 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3410 
=== Usages ===
=== Predecessor ===
v3409 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3410  <|@  <|@
f <@*|@fixed>@ <|@
tid v3410 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3411 
=== Predecessor ===
v3408 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" "B176" 
    successors "B75" "B176" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4579746587611747749
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3899 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3411 
values: j2049 j3906 
=== Succesors ===
=== Usages ===
v4533 j3906 v4532 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3411 values: j2049 j3906  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3411 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v3410 
=== Succesors ===
next: v4361 
=== Usages ===
v4361 v3414 v3415 j3899 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v3410 #next: v4361  <|@  <|@
f <@~|@floating>@ <|@
tid v4533 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3864 
index: j3899 
=== Succesors ===
=== Usages ===
v4361 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3864 index: j3899  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4361 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v3411 
address: v4533 
=== Succesors ===
next: v4208 
=== Usages ===
v4208 
=== Predecessor ===
v3411 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v3411 address: v4533 #next: v4208  <|@  <|@
f <@~|@floating>@ <|@
tid v4532 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3866 
index: j3899 
=== Succesors ===
=== Usages ===
v4208 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3866 index: j3899  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4208 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4532 
value: v4361 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3417 
=== Usages ===
=== Predecessor ===
v4361 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4532 value: v4361 stateAfter: - lastLocationAccess: - #next: v3417  <|@  <|@
f <@~|@floating>@ <|@
tid j3906 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3899 
y: j1626 
=== Succesors ===
=== Usages ===
j3891 j3899 v3910 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3899 y: j1626  <|@  <|@
f <@~|@floating>@ <|@
tid v3910 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3907 
y: j3906 
=== Succesors ===
=== Usages ===
v3417 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3907 y: j3906  <|@  <|@
f <@*|@fixed>@ <|@
tid v3417 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3910 
=== Succesors ===
trueSuccessor: v3414 
falseSuccessor: v3416 
=== Usages ===
=== Predecessor ===
v4208 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3910 #trueSuccessor: v3414 #falseSuccessor: v3416  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570739388357006757
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3414 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v3411 
=== Succesors ===
next: v3420 
=== Usages ===
=== Predecessor ===
v3417 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v3411 #next: v3420  <|@  <|@
f <@*|@fixed>@ <|@
tid v3420 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3419 
=== Predecessor ===
v3414 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B72" "B75" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579746587611747749
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3891 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3419 
values: j2049 j3906 
=== Succesors ===
=== Usages ===
v4531 j3898 j3883 v3913 v4530 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3419 values: j2049 j3906  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3419 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3418 v3420 
=== Succesors ===
next: v3441 
=== Usages ===
j3891 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3418 v3420 #next: v3441  <|@  <|@
f <@~|@floating>@ <|@
tid j3912 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j3260 
y: j3807 
=== Succesors ===
=== Usages ===
v3913 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3260 y: j3807  <|@  <|@
f <@~|@floating>@ <|@
tid v3913 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3912 
y: j3891 
=== Succesors ===
=== Usages ===
v3441 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3912 y: j3891  <|@  <|@
f <@*|@fixed>@ <|@
tid v3441 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3913 
=== Succesors ===
trueSuccessor: v3440 
falseSuccessor: v3439 
=== Usages ===
=== Predecessor ===
v3419 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3913 #trueSuccessor: v3440 #falseSuccessor: v3439  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570739388357006757
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3440 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3444 
=== Usages ===
=== Predecessor ===
v3441 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3444  <|@  <|@
f <@*|@fixed>@ <|@
tid v3444 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3430 
=== Predecessor ===
v3440 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577598346154074172
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3439 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4362 
=== Usages ===
v4362 
=== Predecessor ===
v3441 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4362  <|@  <|@
f <@~|@floating>@ <|@
tid v4531 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3864 
index: j3891 
=== Succesors ===
=== Usages ===
v4362 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3864 index: j3891  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4362 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v3439 
address: v4531 
=== Succesors ===
next: v4206 
=== Usages ===
v4206 
=== Predecessor ===
v3439 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v3439 address: v4531 #next: v4206  <|@  <|@
f <@~|@floating>@ <|@
tid v4530 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3866 
index: j3891 
=== Succesors ===
=== Usages ===
v4206 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3866 index: j3891  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4206 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4530 
value: v4362 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3429 
=== Usages ===
=== Predecessor ===
v4362 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4530 value: v4362 stateAfter: - lastLocationAccess: - #next: v3429  <|@  <|@
f <@~|@floating>@ <|@
tid j3898 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3891 
y: j2577 
=== Succesors ===
=== Usages ===
j3883 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3891 y: j2577  <|@  <|@
f <@*|@fixed>@ <|@
tid v3429 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3430 
=== Predecessor ===
v4206 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B77" 
    successors "B80" "B81" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579746587611747749
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3883 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3430 
values: j3898 j3891 
=== Succesors ===
=== Usages ===
v4529 j3890 j3875 v3916 v4528 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3430 values: j3898 j3891  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3430 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3429 v3444 
=== Succesors ===
next: v3447 
=== Usages ===
j3883 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3429 v3444 #next: v3447  <|@  <|@
f <@~|@floating>@ <|@
tid j3915 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j3260 
y: j3811 
=== Succesors ===
=== Usages ===
v3916 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3260 y: j3811  <|@  <|@
f <@~|@floating>@ <|@
tid v3916 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3915 
y: j3883 
=== Succesors ===
=== Usages ===
v3447 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3915 y: j3883  <|@  <|@
f <@*|@fixed>@ <|@
tid v3447 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3916 
=== Succesors ===
trueSuccessor: v3446 
falseSuccessor: v3445 
=== Usages ===
=== Predecessor ===
v3430 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3916 #trueSuccessor: v3446 #falseSuccessor: v3445  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570739388357006757
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3446 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3450 
=== Usages ===
=== Predecessor ===
v3447 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3450  <|@  <|@
f <@*|@fixed>@ <|@
tid v3450 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3433 
=== Predecessor ===
v3446 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577598346154074172
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3445 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4363 
=== Usages ===
v4363 
=== Predecessor ===
v3447 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4363  <|@  <|@
f <@~|@floating>@ <|@
tid v4529 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3864 
index: j3883 
=== Succesors ===
=== Usages ===
v4363 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3864 index: j3883  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4363 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v3445 
address: v4529 
=== Succesors ===
next: v4204 
=== Usages ===
v4204 
=== Predecessor ===
v3445 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v3445 address: v4529 #next: v4204  <|@  <|@
f <@~|@floating>@ <|@
tid v4528 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3866 
index: j3883 
=== Succesors ===
=== Usages ===
v4204 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3866 index: j3883  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4204 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4528 
value: v4363 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3432 
=== Usages ===
=== Predecessor ===
v4363 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4528 value: v4363 stateAfter: - lastLocationAccess: - #next: v3432  <|@  <|@
f <@~|@floating>@ <|@
tid j3890 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3883 
y: j3783 
=== Succesors ===
=== Usages ===
j3875 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3883 y: j3783  <|@  <|@
f <@*|@fixed>@ <|@
tid v3432 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3433 
=== Predecessor ===
v4204 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" "B80" 
    successors "B83" "B84" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579746587611747749
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3875 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3433 
values: j3890 j3883 
=== Succesors ===
=== Usages ===
v4527 j3882 j3867 v3919 v4526 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3433 values: j3890 j3883  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3433 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3432 v3450 
=== Succesors ===
next: v3453 
=== Usages ===
j3875 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3432 v3450 #next: v3453  <|@  <|@
f <@~|@floating>@ <|@
tid j3918 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j3260 
y: j3815 
=== Succesors ===
=== Usages ===
v3919 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3260 y: j3815  <|@  <|@
f <@~|@floating>@ <|@
tid v3919 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3918 
y: j3875 
=== Succesors ===
=== Usages ===
v3453 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3918 y: j3875  <|@  <|@
f <@*|@fixed>@ <|@
tid v3453 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3919 
=== Succesors ===
trueSuccessor: v3452 
falseSuccessor: v3451 
=== Usages ===
=== Predecessor ===
v3433 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3919 #trueSuccessor: v3452 #falseSuccessor: v3451  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570739388357006757
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3452 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3456 
=== Usages ===
=== Predecessor ===
v3453 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3456  <|@  <|@
f <@*|@fixed>@ <|@
tid v3456 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3436 
=== Predecessor ===
v3452 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577598346154074172
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3451 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4364 
=== Usages ===
v4364 
=== Predecessor ===
v3453 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4364  <|@  <|@
f <@~|@floating>@ <|@
tid v4527 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3864 
index: j3875 
=== Succesors ===
=== Usages ===
v4364 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3864 index: j3875  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4364 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16>
=== Inputs ===
stateBefore: - 
guard: v3451 
address: v4527 
=== Succesors ===
next: v4202 
=== Usages ===
v4202 
=== Predecessor ===
v3451 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v3451 address: v4527 #next: v4202  <|@  <|@
f <@~|@floating>@ <|@
tid v4526 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3866 
index: j3875 
=== Succesors ===
=== Usages ===
v4202 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3866 index: j3875  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4202 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4526 
value: v4364 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3435 
=== Usages ===
=== Predecessor ===
v4364 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4526 value: v4364 stateAfter: - lastLocationAccess: - #next: v3435  <|@  <|@
f <@~|@floating>@ <|@
tid j3882 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3875 
y: j3761 
=== Succesors ===
=== Usages ===
j3867 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3875 y: j3761  <|@  <|@
f <@*|@fixed>@ <|@
tid v3435 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3436 
=== Predecessor ===
v4202 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B83" 
    successors "B86" "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579746587611747749
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3867 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3436 
values: j3882 j3875 
=== Succesors ===
=== Usages ===
v4525 v3922 v4524 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3436 values: j3882 j3875  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3436 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3435 v3456 
=== Succesors ===
next: v3459 
=== Usages ===
j3867 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3435 v3456 #next: v3459  <|@  <|@
f <@~|@floating>@ <|@
tid j3921 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j3260 
y: j1816 
=== Succesors ===
=== Usages ===
v3922 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3260 y: j1816  <|@  <|@
f <@~|@floating>@ <|@
tid v3922 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3921 
y: j3867 
=== Succesors ===
=== Usages ===
v3459 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3921 y: j3867  <|@  <|@
f <@*|@fixed>@ <|@
tid v3459 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3922 
=== Succesors ===
trueSuccessor: v3458 
falseSuccessor: v3457 
=== Usages ===
=== Predecessor ===
v3436 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3922 #trueSuccessor: v3458 #falseSuccessor: v3457  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570739388357006757
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3458 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3462 
=== Usages ===
=== Predecessor ===
v3459 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3462  <|@  <|@
f <@*|@fixed>@ <|@
tid v3462 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3423 
=== Predecessor ===
v3458 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577598346154074172
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3457 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i4365 
=== Usages ===
i4365 
=== Predecessor ===
v3459 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i4365  <|@  <|@
f <@~|@floating>@ <|@
tid v4525 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3864 
index: j3867 
=== Succesors ===
=== Usages ===
i4365 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3864 index: j3867  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4365 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v3457 
address: v4525 
=== Succesors ===
next: v4200 
=== Usages ===
v4200 
=== Predecessor ===
v3457 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v3457 address: v4525 #next: v4200  <|@  <|@
f <@~|@floating>@ <|@
tid v4524 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3866 
index: j3867 
=== Succesors ===
=== Usages ===
v4200 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3866 index: j3867  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4200 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4524 
value: i4365 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3438 
=== Usages ===
=== Predecessor ===
i4365 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4524 value: i4365 stateAfter: - lastLocationAccess: - #next: v3438  <|@  <|@
f <@*|@fixed>@ <|@
tid v3438 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3423 
=== Predecessor ===
v4200 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B70" "B87" "B86" 
    successors "B89" "B107" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584250187239118245
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3423 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3422 v3438 v3462 
=== Succesors ===
next: v3925 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3422 v3438 v3462 #next: v3925  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3925 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v3469 
=== Usages ===
j3927 
=== Predecessor ===
v3423 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v3469  <|@  <|@
f <@~|@floating>@ <|@
tid j3259 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i321 
=== Succesors ===
=== Usages ===
j3264 v3748 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i321  <|@  <|@
f <@~|@floating>@ <|@
tid v3748 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3260 
y: j3259 
=== Succesors ===
=== Usages ===
v3469 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3260 y: j3259  <|@  <|@
f <@*|@fixed>@ <|@
tid v3469 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v3748 
=== Succesors ===
trueSuccessor: v3468 
falseSuccessor: v3467 
=== Usages ===
=== Predecessor ===
v3925 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3748 #trueSuccessor: v3468 #falseSuccessor: v3467  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B90" "B91" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579746587611747749
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3468 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3472 
=== Usages ===
=== Predecessor ===
v3469 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3472  <|@  <|@
f <@~|@floating>@ <|@
tid v4507 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a2661 
index: j3260 
=== Succesors ===
=== Usages ===
j3927 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2661 index: j3260  <|@  <|@
f <@~|@floating>@ <|@
tid j3927 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v3925 
address: v4507 
=== Succesors ===
=== Usages ===
v4534 v4535 v4536 v4537 v4538 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v3925 address: v4507  <|@  <|@
f <@~|@floating>@ <|@
tid j3264 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j3259 
y: j3260 
=== Succesors ===
=== Usages ===
j3972 j3958 j3963 j3966 j3969 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j3259 y: j3260  <|@  <|@
f <@~|@floating>@ <|@
tid j3958 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967311 - 4294967279]
=== Inputs ===
x: j3264 
y: j3801 
=== Succesors ===
=== Usages ===
v3959 v3961 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3264 y: j3801  <|@  <|@
f <@~|@floating>@ <|@
tid v3959 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3958 
y: j2049 
=== Succesors ===
=== Usages ===
v3472 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3958 y: j2049  <|@  <|@
f <@*|@fixed>@ <|@
tid v3472 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v3959 
=== Succesors ===
trueSuccessor: v3470 
falseSuccessor: v3471 
=== Usages ===
=== Predecessor ===
v3468 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3959 #trueSuccessor: v3470 #falseSuccessor: v3471  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B94" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577598346154074172
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3470 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3481 
=== Usages ===
=== Predecessor ===
v3472 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3481  <|@  <|@
f <@*|@fixed>@ <|@
tid v3481 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3482 
=== Predecessor ===
v3470 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B92" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570739388357006757
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3471 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3473 
=== Usages ===
=== Predecessor ===
v3472 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3473  <|@  <|@
f <@~|@floating>@ <|@
tid v4247 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v4218 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v3473 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3474 
=== Predecessor ===
v3471 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" "B106" 
    successors "B93" "B106" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 2
    probability 4579746587611747749
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3952 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3474 
values: j2049 j3957 
=== Succesors ===
=== Usages ===
v4538 j3957 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3474 values: j2049 j3957  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3474 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v3473 
=== Succesors ===
next: v4218 
=== Usages ===
j3952 v3477 v3478 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v3473 #next: v4218  <|@  <|@
f <@~|@floating>@ <|@
tid v4538 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3927 
index: j3952 
=== Succesors ===
=== Usages ===
v4218 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3927 index: j3952  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4218 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4538 
value: v4247 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3480 
=== Usages ===
=== Predecessor ===
v3474 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4538 value: v4247 stateAfter: - lastLocationAccess: - #next: v3480  <|@  <|@
f <@~|@floating>@ <|@
tid j3957 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3952 
y: j1626 
=== Succesors ===
=== Usages ===
j3946 j3952 v3961 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3952 y: j1626  <|@  <|@
f <@~|@floating>@ <|@
tid v3961 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3958 
y: j3957 
=== Succesors ===
=== Usages ===
v3480 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3958 y: j3957  <|@  <|@
f <@*|@fixed>@ <|@
tid v3480 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3961 
=== Succesors ===
trueSuccessor: v3477 
falseSuccessor: v3479 
=== Usages ===
=== Predecessor ===
v4218 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3961 #trueSuccessor: v3477 #falseSuccessor: v3479  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B94" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570739388357006757
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3477 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v3474 
=== Succesors ===
next: v3483 
=== Usages ===
=== Predecessor ===
v3480 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v3474 #next: v3483  <|@  <|@
f <@*|@fixed>@ <|@
tid v3483 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3482 
=== Predecessor ===
v3477 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B90" "B93" 
    successors "B95" "B96" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579746587611747749
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3946 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3482 
values: j2049 j3957 
=== Succesors ===
=== Usages ===
v4537 j3951 j3940 v3964 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3482 values: j2049 j3957  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3482 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3481 v3483 
=== Succesors ===
next: v3504 
=== Usages ===
j3946 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3481 v3483 #next: v3504  <|@  <|@
f <@~|@floating>@ <|@
tid j3963 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967303 - 4294967287]
=== Inputs ===
x: j3264 
y: j3807 
=== Succesors ===
=== Usages ===
v3964 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3264 y: j3807  <|@  <|@
f <@~|@floating>@ <|@
tid v3964 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3963 
y: j3946 
=== Succesors ===
=== Usages ===
v3504 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3963 y: j3946  <|@  <|@
f <@*|@fixed>@ <|@
tid v3504 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3964 
=== Succesors ===
trueSuccessor: v3503 
falseSuccessor: v3502 
=== Usages ===
=== Predecessor ===
v3482 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3964 #trueSuccessor: v3503 #falseSuccessor: v3502  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570739388357006757
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3503 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3507 
=== Usages ===
=== Predecessor ===
v3504 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3507  <|@  <|@
f <@*|@fixed>@ <|@
tid v3507 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3493 
=== Predecessor ===
v3503 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577598346154074172
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3502 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4217 
=== Usages ===
=== Predecessor ===
v3504 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4217  <|@  <|@
f <@~|@floating>@ <|@
tid v4537 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3927 
index: j3946 
=== Succesors ===
=== Usages ===
v4217 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3927 index: j3946  <|@  <|@
f <@~|@floating>@ <|@
tid v4251 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v4217 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4217 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4537 
value: v4251 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3492 
=== Usages ===
=== Predecessor ===
v3502 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4537 value: v4251 stateAfter: - lastLocationAccess: - #next: v3492  <|@  <|@
f <@~|@floating>@ <|@
tid j3951 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3946 
y: j2577 
=== Succesors ===
=== Usages ===
j3940 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3946 y: j2577  <|@  <|@
f <@*|@fixed>@ <|@
tid v3492 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3493 
=== Predecessor ===
v4217 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" "B95" 
    successors "B98" "B99" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579746587611747749
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3940 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3493 
values: j3951 j3946 
=== Succesors ===
=== Usages ===
v4536 j3945 j3934 v3967 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3493 values: j3951 j3946  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3493 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3492 v3507 
=== Succesors ===
next: v3510 
=== Usages ===
j3940 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3492 v3507 #next: v3510  <|@  <|@
f <@~|@floating>@ <|@
tid j3966 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967299 - 4294967291]
=== Inputs ===
x: j3264 
y: j3811 
=== Succesors ===
=== Usages ===
v3967 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3264 y: j3811  <|@  <|@
f <@~|@floating>@ <|@
tid v3967 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3966 
y: j3940 
=== Succesors ===
=== Usages ===
v3510 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3966 y: j3940  <|@  <|@
f <@*|@fixed>@ <|@
tid v3510 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3967 
=== Succesors ===
trueSuccessor: v3509 
falseSuccessor: v3508 
=== Usages ===
=== Predecessor ===
v3493 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3967 #trueSuccessor: v3509 #falseSuccessor: v3508  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B100" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570739388357006757
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3509 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3513 
=== Usages ===
=== Predecessor ===
v3510 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3513  <|@  <|@
f <@*|@fixed>@ <|@
tid v3513 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3496 
=== Predecessor ===
v3509 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B100" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577598346154074172
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3508 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4215 
=== Usages ===
=== Predecessor ===
v3510 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4215  <|@  <|@
f <@~|@floating>@ <|@
tid v4536 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3927 
index: j3940 
=== Succesors ===
=== Usages ===
v4215 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3927 index: j3940  <|@  <|@
f <@~|@floating>@ <|@
tid v4250 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16>
value: SIMD<0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v4215 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4215 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4536 
value: v4250 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3495 
=== Usages ===
=== Predecessor ===
v3508 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4536 value: v4250 stateAfter: - lastLocationAccess: - #next: v3495  <|@  <|@
f <@~|@floating>@ <|@
tid j3945 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3940 
y: j3783 
=== Succesors ===
=== Usages ===
j3934 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3940 y: j3783  <|@  <|@
f <@*|@fixed>@ <|@
tid v3495 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3496 
=== Predecessor ===
v4215 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" "B98" 
    successors "B101" "B102" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579746587611747749
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3934 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3496 
values: j3945 j3940 
=== Succesors ===
=== Usages ===
v4535 j3939 j3928 v3970 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3496 values: j3945 j3940  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3496 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3495 v3513 
=== Succesors ===
next: v3516 
=== Usages ===
j3934 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3495 v3513 #next: v3516  <|@  <|@
f <@~|@floating>@ <|@
tid j3969 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j3264 
y: j3815 
=== Succesors ===
=== Usages ===
v3970 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3264 y: j3815  <|@  <|@
f <@~|@floating>@ <|@
tid v3970 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3969 
y: j3934 
=== Succesors ===
=== Usages ===
v3516 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3969 y: j3934  <|@  <|@
f <@*|@fixed>@ <|@
tid v3516 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3970 
=== Succesors ===
trueSuccessor: v3515 
falseSuccessor: v3514 
=== Usages ===
=== Predecessor ===
v3496 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3970 #trueSuccessor: v3515 #falseSuccessor: v3514  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B103" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570739388357006757
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3515 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3519 
=== Usages ===
=== Predecessor ===
v3516 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3519  <|@  <|@
f <@*|@fixed>@ <|@
tid v3519 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3499 
=== Predecessor ===
v3515 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B103" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577598346154074172
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3514 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4213 
=== Usages ===
=== Predecessor ===
v3516 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4213  <|@  <|@
f <@~|@floating>@ <|@
tid v4535 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3927 
index: j3934 
=== Succesors ===
=== Usages ===
v4213 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3927 index: j3934  <|@  <|@
f <@~|@floating>@ <|@
tid v4249 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16>
value: SIMD<0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v4213 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4213 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4535 
value: v4249 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3498 
=== Usages ===
=== Predecessor ===
v3514 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4535 value: v4249 stateAfter: - lastLocationAccess: - #next: v3498  <|@  <|@
f <@~|@floating>@ <|@
tid j3939 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3934 
y: j3761 
=== Succesors ===
=== Usages ===
j3928 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3934 y: j3761  <|@  <|@
f <@*|@fixed>@ <|@
tid v3498 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3499 
=== Predecessor ===
v4213 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B102" "B101" 
    successors "B104" "B105" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579746587611747749
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3928 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3499 
values: j3939 j3934 
=== Succesors ===
=== Usages ===
v4534 v3973 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3499 values: j3939 j3934  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3499 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3498 v3519 
=== Succesors ===
next: v3522 
=== Usages ===
j3928 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3498 v3519 #next: v3522  <|@  <|@
f <@~|@floating>@ <|@
tid j3972 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j3264 
y: j1816 
=== Succesors ===
=== Usages ===
v3973 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3264 y: j1816  <|@  <|@
f <@~|@floating>@ <|@
tid v3973 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3972 
y: j3928 
=== Succesors ===
=== Usages ===
v3522 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3972 y: j3928  <|@  <|@
f <@*|@fixed>@ <|@
tid v3522 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3973 
=== Succesors ===
trueSuccessor: v3521 
falseSuccessor: v3520 
=== Usages ===
=== Predecessor ===
v3499 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3973 #trueSuccessor: v3521 #falseSuccessor: v3520  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B108" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570739388357006757
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3521 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3525 
=== Usages ===
=== Predecessor ===
v3522 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3525  <|@  <|@
f <@*|@fixed>@ <|@
tid v3525 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3486 
=== Predecessor ===
v3521 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B108" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577598346154074172
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3520 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4211 
=== Usages ===
=== Predecessor ===
v3522 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4211  <|@  <|@
f <@~|@floating>@ <|@
tid v4534 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3927 
index: j3928 
=== Succesors ===
=== Usages ===
v4211 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3927 index: j3928  <|@  <|@
f <@~|@floating>@ <|@
tid i4248 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i16 [0] ⇈0000000000000000
stampKind: i16
value: short[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v4211 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4211 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4534 
value: i4248 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3501 
=== Usages ===
=== Predecessor ===
v3520 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4534 value: i4248 stateAfter: - lastLocationAccess: - #next: v3501  <|@  <|@
f <@*|@fixed>@ <|@
tid v3501 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3486 
=== Predecessor ===
v4211 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B92" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 2
    probability 4577598346154074172
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3479 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3478 
=== Usages ===
=== Predecessor ===
v3480 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3478  <|@  <|@
f <@*|@fixed>@ <|@
tid v3478 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v3474 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v3479 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v3474  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B108" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579746587611747749
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3467 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3485 
=== Usages ===
=== Predecessor ===
v3469 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3485  <|@  <|@
f <@*|@fixed>@ <|@
tid v3485 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3486 
=== Predecessor ===
v3467 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B107" "B105" "B104" 
    successors "B109" "B110" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584250187239118245
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3486 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3485 v3501 v3525 
=== Succesors ===
next: a2331 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3485 v3501 v3525 #next: a2331  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2331 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a2661 
=== Succesors ===
next: j2692 
=== Usages ===
a2064 
=== Predecessor ===
v3486 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a2661 #next: j2692  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2692 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j2707 
=== Usages ===
v4431 v4432 
=== Predecessor ===
a2331 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j2707  <|@  <|@
f <@~|@floating>@ <|@
tid v4431 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j2692 
index: - 
=== Succesors ===
=== Usages ===
j2707 v2709 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2692 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2707 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v4431 
=== Succesors ===
next: j2708 
=== Usages ===
j3234 j2713 v4497 
=== Predecessor ===
j2692 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4431 #next: j2708  <|@  <|@
f <@~|@floating>@ <|@
tid v4432 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j2692 
index: - 
=== Succesors ===
=== Usages ===
j2708 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2692 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2708 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v4432 
=== Succesors ===
next: v2700 
=== Usages ===
v2697 
=== Predecessor ===
j2707 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4432 #next: v2700  <|@  <|@
f <@~|@floating>@ <|@
tid j3234 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2707 
y: j3225 
=== Succesors ===
=== Usages ===
v2697 v2709 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2707 y: j3225  <|@  <|@
f <@~|@floating>@ <|@
tid v2697 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2708 
y: j3234 
=== Succesors ===
=== Usages ===
v2700 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j2708 y: j3234  <|@  <|@
f <@*|@fixed>@ <|@
tid v2700 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v2697 
=== Succesors ===
trueSuccessor: v2698 
falseSuccessor: v2699 
=== Usages ===
=== Predecessor ===
j2708 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2697 #trueSuccessor: v2698 #falseSuccessor: v2699  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4554135121775845323
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2698 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a2703 
=== Usages ===
=== Predecessor ===
v2700 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2703  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2703 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?1448 
arguments: v2582 i1663 i8 
=== Succesors ===
next: j2704 
=== Usages ===
j2704 
=== Predecessor ===
v2698 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?1448 arguments: v2582 i1663 i8 #next: j2704  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2704 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a2703 
=== Succesors ===
next: v2714 
=== Usages ===
j2713 
=== Predecessor ===
a2703 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a2703 #next: v2714  <|@  <|@
f <@*|@fixed>@ <|@
tid v2714 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2711 
=== Predecessor ===
j2704 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584164257580811302
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2699 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2709 
=== Usages ===
=== Predecessor ===
v2700 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2709  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2709 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4431 
value: j3234 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2706 
=== Usages ===
=== Predecessor ===
v2699 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4431 value: j3234 stateAfter: - lastLocationAccess: - #next: v2706  <|@  <|@
f <@~|@floating>@ <|@
tid v4497 <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j2707 
index: - 
=== Succesors ===
=== Usages ===
v2706 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2707 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2706 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v4497 
=== Succesors ===
next: v2712 
=== Usages ===
=== Predecessor ===
v2709 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v4497 #next: v2712  <|@  <|@
f <@*|@fixed>@ <|@
tid v2712 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2711 
=== Predecessor ===
v2706 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" "B109" 
    successors "B112" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584250187239118245
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2713 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2711 
values: j2707 j2704 
=== Succesors ===
=== Usages ===
v4434 v4433 a2061 v4498 v4499 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2711 values: j2707 j2704  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2711 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2712 v2714 
=== Succesors ===
next: a2061 
=== Usages ===
j2713 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2712 v2714 #next: a2061  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2061 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j2713 
=== Succesors ===
next: j2723 
=== Usages ===
a2067 
=== Predecessor ===
v2711 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j2713 #next: j2723  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2723 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v4478 
=== Succesors ===
next: v2724 
=== Usages ===
v2724 
=== Predecessor ===
a2061 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4478 #next: v2724  <|@  <|@
f <@~|@floating>@ <|@
tid v4433 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2713 
index: - 
=== Succesors ===
=== Usages ===
v2724 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2713 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2724 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4433 
value: j2723 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2727 
=== Usages ===
=== Predecessor ===
j2723 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4433 value: j2723 stateAfter: - lastLocationAccess: - #next: v2727  <|@  <|@
f <@~|@floating>@ <|@
tid v4434 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j2713 
index: - 
=== Succesors ===
=== Usages ===
v2727 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2713 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2727 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4434 
value: v3230 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2731 
=== Usages ===
=== Predecessor ===
v2724 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4434 value: v3230 stateAfter: - lastLocationAccess: - #next: v2731  <|@  <|@
f <@~|@floating>@ <|@
tid v4498 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j2713 
index: - 
=== Succesors ===
=== Usages ===
v2731 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2713 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a2064 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n! -
=== Inputs ===
value: a2331 
=== Succesors ===
=== Usages ===
v2731 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2331  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2731 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4498 
value: a2064 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2733 
=== Usages ===
=== Predecessor ===
v2727 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4498 value: a2064 stateAfter: - lastLocationAccess: - #next: v2733  <|@  <|@
f <@~|@floating>@ <|@
tid v4499 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j2713 
index: - 
=== Succesors ===
=== Usages ===
v2733 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2713 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2733 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4499 
value: i5 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a2067 
=== Usages ===
=== Predecessor ===
v2731 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4499 value: i5 stateAfter: - lastLocationAccess: - #next: a2067  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2067 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a2061 
=== Succesors ===
next: v2068 
=== Usages ===
a348 
=== Predecessor ===
v2733 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a2061 #next: v2068  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2068 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v501 
=== Usages ===
=== Predecessor ===
a2067 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v501  <|@  <|@
f <@*|@fixed>@ <|@
tid v501 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v346 
=== Predecessor ===
v2068 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B45" "B56" "B111" 
    successors "B113" "B116" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584978709959144030
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a348 <|@
d <@d|@=== Debug Properties ===
stamp: a!# Ljava/lang/String;
valueDescription: a -
=== Inputs ===
merge: v346 
values: a1 a2057 a2067 
=== Succesors ===
=== Usages ===
?1482 ?143 ?175 a1667 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v346 values: a1 a2057 a2067  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v346 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v347 v349 v501 
=== Succesors ===
next: v192 
=== Usages ===
a348 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v347 v349 v501 #next: v192  <|@  <|@
f <@~|@floating>@ <|@
tid i4345 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:235) [bci: 6]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: i32
=== Inputs ===
x: i503 
y: i8 
=== Succesors ===
=== Usages ===
?1484 i503 ?1484 ?517 ?517 i503 i204 v195 i204 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i503 y: i8  <|@  <|@
f <@~|@floating>@ <|@
tid v4346 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.ArrayList.calculateCapacity(ArrayList.java:224) [bci: 4]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a505 
y: a127 
=== Succesors ===
=== Usages ===
v192 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a505 y: a127  <|@  <|@
f <@*|@fixed>@ <|@
tid v192 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.calculateCapacity(ArrayList.java:224) [bci: 4]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: void
trueSuccessorProbability: 0.2066504369952622
=== Inputs ===
condition: v4346 
=== Succesors ===
trueSuccessor: v190 
falseSuccessor: v191 
=== Usages ===
=== Predecessor ===
v346 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4346 #trueSuccessor: v190 #falseSuccessor: v191  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B114" "B115" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4574614972964921566
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.calculateCapacity(ArrayList.java:225) [bci: 7]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: void
=== Inputs ===
=== Succesors ===
next: v198 
=== Usages ===
=== Predecessor ===
v192 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v198  <|@  <|@
f <@~|@floating>@ <|@
tid v195 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at java.util.ArrayList.calculateCapacity(ArrayList.java:225) [bci: 10]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4345 
y: i194 
=== Succesors ===
=== Usages ===
v198 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i4345 y: i194  <|@  <|@
f <@*|@fixed>@ <|@
tid v198 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at java.util.ArrayList.calculateCapacity(ArrayList.java:225) [bci: 10]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: void
trueSuccessorProbability: 0.7308950256495741
=== Inputs ===
condition: v195 
=== Succesors ===
trueSuccessor: v196 
falseSuccessor: v197 
=== Usages ===
=== Predecessor ===
v190 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v195 #trueSuccessor: v196 #falseSuccessor: v197  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B117" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572471565081160793
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v196 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 5]
at java.util.ArrayList.calculateCapacity(ArrayList.java:225) [bci: 10]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: void
=== Inputs ===
=== Succesors ===
next: v205 
=== Usages ===
=== Predecessor ===
v198 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v205  <|@  <|@
f <@*|@fixed>@ <|@
tid v205 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v202 
=== Predecessor ===
v196 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B117" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566216454433985046
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 9]
at java.util.ArrayList.calculateCapacity(ArrayList.java:225) [bci: 10]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: void
=== Inputs ===
=== Succesors ===
next: v206 
=== Usages ===
=== Predecessor ===
v198 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v206  <|@  <|@
f <@*|@fixed>@ <|@
tid v206 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v202 
=== Predecessor ===
v197 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B117" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583301761552313477
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v191 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.calculateCapacity(ArrayList.java:227) [bci: 14]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: void
=== Inputs ===
=== Succesors ===
next: v203 
=== Usages ===
=== Predecessor ===
v192 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v203  <|@  <|@
f <@*|@fixed>@ <|@
tid v203 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v202 
=== Predecessor ===
v191 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" "B114" "B115" 
    successors "B118" "B123" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584978709959144031
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i204 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v202 
values: i4345 i193 i4345 
=== Succesors ===
=== Usages ===
?170 i419 i1780 i213 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v202 values: i4345 i193 i4345  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v202 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v203 v205 v206 
=== Succesors ===
next: i4366 
=== Usages ===
i204 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v203 v205 v206 #next: i4366  <|@  <|@
f <@~|@floating>@ <|@
tid v4398 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a505 
index: - 
=== Succesors ===
=== Usages ===
i4366 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a505 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4366 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:238) [bci: 15]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v4398 
=== Succesors ===
next: v4367 
=== Usages ===
i213 i4336 v2206 i2323 i4335 v4337 
=== Predecessor ===
v202 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4398 #next: v4367  <|@  <|@
f <@~|@floating>@ <|@
tid v4565 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a505 
index: - 
=== Succesors ===
=== Usages ===
v4367 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a505 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4367 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.ClassGetHubNode.readClass(Class) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.getComponentType(HotSpotClassSubstitutions.java:120) [bci: 1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 6]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v4565 
=== Succesors ===
next: v217 
=== Usages ===
v2797 v4334 v4338 
=== Predecessor ===
i4366 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4565 #next: v217  <|@  <|@
f <@~|@floating>@ <|@
tid i213 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:238) [bci: 16]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: i32
=== Inputs ===
x: i204 
y: i4366 
=== Succesors ===
=== Usages ===
v214 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i204 y: i4366  <|@  <|@
f <@~|@floating>@ <|@
tid v214 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:238) [bci: 17]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i213 
y: i8 
=== Succesors ===
=== Usages ===
v217 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i213 y: i8  <|@  <|@
tid ?145 <|@
d <@d|@=== Debug Properties ===
bci: 165
code: ResolvedJavaMethodBytecode<String.split(String, int)>
duringCall: true
localsSize: 10
locksSize: 0
rethrowException: false
sourceFile: String.java
sourceLine: 2353
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - i5 i1630 - i291 i5 a244 - - 
=== Succesors ===
=== Usages ===
?175 ?143 ?1482 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - i5 i1630 - i291 i5 a244 - -  <|@  <|@
tid ?175 <|@
d <@d|@=== Debug Properties ===
bci: 7
code: ResolvedJavaMethodBytecode<ArrayList.add(Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ArrayList.java
sourceLine: 462
stackSize: 0
=== Inputs ===
outerFrameState: ?145 
values: a244 a348 
=== Succesors ===
=== Usages ===
?170 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?145 values: a244 a348  <|@  <|@
tid ?170 <|@
d <@d|@=== Debug Properties ===
bci: 9
code: ResolvedJavaMethodBytecode<ArrayList.ensureCapacityInternal(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
rethrowException: false
sourceFile: ArrayList.java
sourceLine: 231
stackSize: 2
=== Inputs ===
outerFrameState: ?175 
values: - - a244 i204 
virtualObjectMappings: ?521 
=== Succesors ===
=== Usages ===
a2772 v2470 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?175 values: - - a244 i204 virtualObjectMappings: ?521  <|@  <|@
f <@~|@floating>@ <|@
tid a1667 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:463) [bci: 26]
at java.lang.String.split(String.java:2353) [bci: 165]
op: Compress
stamp: n!# Ljava/lang/String;
=== Inputs ===
value: a348 
=== Succesors ===
=== Usages ===
v1668 v1679 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a348  <|@  <|@
f <@~|@floating>@ <|@
tid i1411 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.String.split(String.java:2354) [bci: 172]
stamp: i32
=== Inputs ===
x: i291 
y: i8 
=== Succesors ===
=== Usages ===
i34 i34 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i291 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:238) [bci: 17]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: void
trueSuccessorProbability: 0.7754412955005789
=== Inputs ===
condition: v214 
=== Succesors ===
trueSuccessor: v215 
falseSuccessor: v216 
=== Usages ===
=== Predecessor ===
v4367 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v214 #trueSuccessor: v215 #falseSuccessor: v216  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors "B119" "B122" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583129201465024141
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v215 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:240) [bci: 25]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1939 
=== Usages ===
=== Predecessor ===
v217 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1939  <|@  <|@
f <@~|@floating>@ <|@
tid v4338 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v4367 
y: v3223 
=== Succesors ===
=== Usages ===
v1939 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v4367 y: v3223  <|@  <|@
f <@*|@fixed>@ <|@
tid v1939 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v4338 
=== Succesors ===
trueSuccessor: v1935 
falseSuccessor: v1938 
=== Usages ===
=== Predecessor ===
v215 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4338 #trueSuccessor: v1935 #falseSuccessor: v1938  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B120" "B121" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583129201465024141
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1935 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1944 
=== Usages ===
=== Predecessor ===
v1939 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1944  <|@  <|@
f <@~|@floating>@ <|@
tid v4337 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:463) [bci: 26]
at java.lang.String.split(String.java:2368) [bci: 246]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i503 
y: i4366 
=== Succesors ===
=== Usages ===
v1944 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i503 y: i4366  <|@  <|@
f <@*|@fixed>@ <|@
tid v1944 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:463) [bci: 26]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v4337 
=== Succesors ===
trueSuccessor: v1940 
falseSuccessor: v1943 
=== Usages ===
=== Predecessor ===
v1935 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4337 #trueSuccessor: v1940 #falseSuccessor: v1943  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4583129201465024141
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1940 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:463) [bci: 26]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1668 
=== Usages ===
v1668 
=== Predecessor ===
v1944 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1668  <|@  <|@
f <@~|@floating>@ <|@
tid v4399 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a505 
index: i503 
=== Succesors ===
=== Usages ===
v1668 j2734 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a505 index: i503  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1668 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:463) [bci: 26]
at java.lang.String.split(String.java:2353) [bci: 165]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1940 
address: v4399 
value: a1667 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j2734 
=== Usages ===
=== Predecessor ===
v1940 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1940 address: v4399 value: a1667 stateAfter: - lastLocationAccess: - #next: j2734  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2734 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at java.util.ArrayList.add(ArrayList.java:463) [bci: 26]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v4399 
=== Succesors ===
next: v2740 
=== Usages ===
j2736 
=== Predecessor ===
v1668 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v4399 #next: v2740  <|@  <|@
f <@~|@floating>@ <|@
tid j2736 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.ArrayList.add(ArrayList.java:463) [bci: 26]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j2734 
y: i2735 
=== Succesors ===
=== Usages ===
v4435 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j2734 y: i2735  <|@  <|@
f <@~|@floating>@ <|@
tid v4435 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2736 
index: j2739 
=== Succesors ===
=== Usages ===
v2740 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2736 index: j2739  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2740 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.ArrayList.add(ArrayList.java:463) [bci: 26]
at java.lang.String.split(String.java:2353) [bci: 165]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4435 
value: i2741 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1808 
=== Usages ===
=== Predecessor ===
j2734 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4435 value: i2741 stateAfter: - lastLocationAccess: - #next: v1808  <|@  <|@
tid ?1484 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a244 
values: i4345 i4345 a505 
=== Succesors ===
=== Usages ===
?1482 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a244 values: i4345 i4345 a505  <|@  <|@
tid ?1482 <|@
d <@d|@=== Debug Properties ===
bci: 27
code: ResolvedJavaMethodBytecode<ArrayList.add(Object)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:463) [bci: 26]
at java.lang.String.split(String.java:2353) [bci: 165]
rethrowException: false
sourceFile: ArrayList.java
sourceLine: 464
stackSize: 0
=== Inputs ===
outerFrameState: ?145 
values: a244 a348 
virtualObjectMappings: ?1484 
=== Succesors ===
=== Usages ===
v1808 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?145 values: a244 a348 virtualObjectMappings: ?1484  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1808 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?1482 
=== Succesors ===
next: v1485 
=== Usages ===
=== Predecessor ===
v2740 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?1482 #next: v1485  <|@  <|@
f <@*|@fixed>@ <|@
tid v1485 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 1
stamp: void
=== Inputs ===
loopBegin: v33 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1808 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v33  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B175" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1943 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:463) [bci: 26]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v33 
=== Succesors ===
next: v2471 
=== Usages ===
=== Predecessor ===
v1944 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v33 #next: v2471  <|@  <|@
f <@~|@floating>@ <|@
tid i2472 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -424987
stableDimension: 0
stamp: i32 [-424987] ⇊00000000fff983e5 ⇈00000000fff983e5
stampKind: i32
value: int[-424987|0xfffffffffff983e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2468 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2471 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2464 
=== Predecessor ===
v1943 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B175" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1938 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v33 
=== Succesors ===
next: v2465 
=== Usages ===
=== Predecessor ===
v1939 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v33 #next: v2465  <|@  <|@
f <@~|@floating>@ <|@
tid i2466 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -424252
stableDimension: 0
stamp: i32 [-424252] ⇊00000000fff986c4 ⇈00000000fff986c4
stampKind: i32
value: int[-424252|0xfffffffffff986c4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2468 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2465 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2464 
=== Predecessor ===
v1938 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors "B124" "B174" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4575305213314078916
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v216 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 20]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1949 
=== Usages ===
=== Predecessor ===
v217 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1949  <|@  <|@
f <@~|@floating>@ <|@
tid i4336 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:259) [bci: 9]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: i32 [0 - 1073741823] ⇈000000003fffffff
=== Inputs ===
x: i4366 
y: i8 
=== Succesors ===
=== Usages ===
i4335 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i4366 y: i8  <|@  <|@
f <@~|@floating>@ <|@
tid i4335 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:259) [bci: 10]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: i32
=== Inputs ===
x: i4336 
y: i4366 
=== Succesors ===
=== Usages ===
i419 i1780 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i4336 y: i4366  <|@  <|@
f <@~|@floating>@ <|@
tid i419 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:260) [bci: 14]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: i32
=== Inputs ===
x: i4335 
y: i204 
=== Succesors ===
=== Usages ===
v420 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i4335 y: i204  <|@  <|@
f <@~|@floating>@ <|@
tid v420 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:260) [bci: 15]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i419 
y: i5 
=== Succesors ===
=== Usages ===
i1780 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i419 y: i5  <|@  <|@
f <@~|@floating>@ <|@
tid i1780 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v420 
trueValue: i204 
falseValue: i4335 
=== Succesors ===
=== Usages ===
v1672 j3266 i430 v2190 v2206 i2323 a2772 v2793 i2812 v2805 i2757 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v420 trueValue: i204 falseValue: i4335  <|@  <|@
f <@~|@floating>@ <|@
tid i430 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:262) [bci: 23]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: i32
=== Inputs ===
x: i1780 
y: i429 
=== Succesors ===
=== Usages ===
v431 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1780 y: i429  <|@  <|@
f <@~|@floating>@ <|@
tid v431 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:262) [bci: 24]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i430 
y: i8 
=== Succesors ===
=== Usages ===
v1949 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i430 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v1949 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:262) [bci: 24]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v431 
=== Succesors ===
trueSuccessor: v1945 
falseSuccessor: v1948 
=== Usages ===
=== Predecessor ===
v216 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v431 #trueSuccessor: v1945 #falseSuccessor: v1948  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B125" "B173" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4575305213314078916
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1945 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:262) [bci: 24]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1954 
=== Usages ===
=== Predecessor ===
v1949 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1954  <|@  <|@
f <@~|@floating>@ <|@
tid v1672 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:463) [bci: 26]
at java.lang.String.split(String.java:2353) [bci: 165]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i503 
y: i1780 
=== Succesors ===
=== Usages ===
v1954 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i503 y: i1780  <|@  <|@
f <@*|@fixed>@ <|@
tid v1954 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:463) [bci: 26]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1672 
=== Succesors ===
trueSuccessor: v1950 
falseSuccessor: v1953 
=== Usages ===
=== Predecessor ===
v1945 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1672 #trueSuccessor: v1950 #falseSuccessor: v1953  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors "B126" "B127" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4575305213314078916
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1950 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:463) [bci: 26]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2196 
=== Usages ===
v1679 
=== Predecessor ===
v1954 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2196  <|@  <|@
f <@~|@floating>@ <|@
tid v2190 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 22]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:171) [bci: 3]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1780 
y: i5 
=== Succesors ===
=== Usages ===
v2196 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1780 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v2196 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 33]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:171) [bci: 3]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v2190 
=== Succesors ===
trueSuccessor: v2195 
falseSuccessor: v2191 
=== Usages ===
=== Predecessor ===
v1950 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2190 #trueSuccessor: v2195 #falseSuccessor: v2191  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B175" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2195 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:187) [bci: 55]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:171) [bci: 3]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2479 
=== Usages ===
=== Predecessor ===
v2196 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2479  <|@  <|@
f <@~|@floating>@ <|@
tid i2480 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -563809
stableDimension: 0
stamp: i32 [-563809] ⇊00000000fff7659f ⇈00000000fff7659f
stampKind: i32
value: int[-563809|0xfffffffffff7659f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2468 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2479 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2464 
=== Predecessor ===
v2195 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B128" "B129" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4575305213314078916
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2191 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 36]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:171) [bci: 3]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2759 
=== Usages ===
=== Predecessor ===
v2196 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2759  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2759 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j2790 
=== Usages ===
v4436 v4437 
=== Predecessor ===
v2191 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j2790  <|@  <|@
f <@~|@floating>@ <|@
tid v4436 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j2759 
index: - 
=== Succesors ===
=== Usages ===
j2790 v2792 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2759 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2790 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v4436 
=== Succesors ===
next: j2791 
=== Usages ===
j2763 v4438 v4439 a2771 v4444 v4440 v4441 v4442 v4443 
=== Predecessor ===
j2759 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4436 #next: j2791  <|@  <|@
f <@~|@floating>@ <|@
tid v4437 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j2759 
index: - 
=== Succesors ===
=== Usages ===
j2791 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2759 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2791 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v4437 
=== Succesors ===
next: v2767 
=== Usages ===
v2764 
=== Predecessor ===
j2790 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4437 #next: v2767  <|@  <|@
f <@~|@floating>@ <|@
tid i2757 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i1780 
y: i1663 
=== Succesors ===
=== Usages ===
i2779 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i1780 y: i1663  <|@  <|@
f <@~|@floating>@ <|@
tid i2779 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: i32 [-2147483645 - 2147483647] ⇊0000000000000003
=== Inputs ===
x: i2757 
y: i2664 
=== Succesors ===
=== Usages ===
i2758 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2757 y: i2664  <|@  <|@
f <@~|@floating>@ <|@
tid i2758 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i2779 
y: i2634 
=== Succesors ===
=== Usages ===
j2762 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i2779 y: i2634  <|@  <|@
f <@~|@floating>@ <|@
tid j2762 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i2758 
=== Succesors ===
=== Usages ===
j2763 v4440 v4441 v4442 v4443 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2758  <|@  <|@
f <@~|@floating>@ <|@
tid j2763 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: i64
=== Inputs ===
x: j2762 
y: j2790 
=== Succesors ===
=== Usages ===
v2764 v2792 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2762 y: j2790  <|@  <|@
f <@~|@floating>@ <|@
tid v2764 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2791 
y: j2763 
=== Succesors ===
=== Usages ===
v2767 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j2791 y: j2763  <|@  <|@
f <@*|@fixed>@ <|@
tid v2767 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v2764 
=== Succesors ===
trueSuccessor: v2765 
falseSuccessor: v2766 
=== Usages ===
=== Predecessor ===
j2791 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2764 #trueSuccessor: v2765 #falseSuccessor: v2766  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B130" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4545167746732113395
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2765 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2772 
=== Usages ===
=== Predecessor ===
v2767 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2772  <|@  <|@
f <@~|@floating>@ <|@
tid v4334 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.ClassGetHubNode.readClass(Class) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.getComponentType(HotSpotClassSubstitutions.java:120) [bci: 1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 6]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v4367 
=== Succesors ===
=== Usages ===
a2772 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v4367  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2772 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?170 
arguments: v4334 i1780 i5 
=== Succesors ===
next: v2775 
=== Usages ===
a2776 
=== Predecessor ===
v2765 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?170 arguments: v4334 i1780 i5 #next: v2775  <|@  <|@
f <@*|@fixed>@ <|@
tid v2775 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2774 
=== Predecessor ===
a2772 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B130" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4575218661402474956
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2766 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2792 
=== Usages ===
=== Predecessor ===
v2767 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2792  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2792 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4436 
value: j2763 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2781 
=== Usages ===
=== Predecessor ===
v2766 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4436 value: j2763 stateAfter: - lastLocationAccess: - #next: v2781  <|@  <|@
f <@~|@floating>@ <|@
tid v4440 <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j2762 
index: j2790 
=== Succesors ===
=== Usages ===
v2781 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2762 index: j2790  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2781 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: void
=== Inputs ===
address: v4440 
=== Succesors ===
next: v2783 
=== Usages ===
=== Predecessor ===
v2792 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v4440 #next: v2783  <|@  <|@
f <@~|@floating>@ <|@
tid v4441 <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j2762 
index: j2790 
=== Succesors ===
=== Usages ===
v2783 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2762 index: j2790  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2783 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: void
=== Inputs ===
address: v4441 
=== Succesors ===
next: v2785 
=== Usages ===
=== Predecessor ===
v2781 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v4441 #next: v2785  <|@  <|@
f <@~|@floating>@ <|@
tid v4442 <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j2762 
index: j2790 
=== Succesors ===
=== Usages ===
v2785 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2762 index: j2790  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2785 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: void
=== Inputs ===
address: v4442 
=== Succesors ===
next: v2787 
=== Usages ===
=== Predecessor ===
v2783 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v4442 #next: v2787  <|@  <|@
f <@~|@floating>@ <|@
tid v4443 <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j2762 
index: j2790 
=== Succesors ===
=== Usages ===
v2787 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2762 index: j2790  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2787 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: void
=== Inputs ===
address: v4443 
=== Succesors ===
next: v2793 
=== Usages ===
=== Predecessor ===
v2785 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v4443 #next: v2793  <|@  <|@
f <@~|@floating>@ <|@
tid v4438 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j2790 
index: - 
=== Succesors ===
=== Usages ===
v2793 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2790 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2793 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4438 
value: i1780 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2794 
=== Usages ===
=== Predecessor ===
v2787 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4438 value: i1780 stateAfter: - lastLocationAccess: - #next: v2794  <|@  <|@
f <@~|@floating>@ <|@
tid v4439 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2790 
index: - 
=== Succesors ===
=== Usages ===
v2794 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2790 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2794 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4439 
value: j2632 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2797 
=== Usages ===
=== Predecessor ===
v2793 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4439 value: j2632 stateAfter: - lastLocationAccess: - #next: v2797  <|@  <|@
f <@~|@floating>@ <|@
tid v4444 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j2790 
index: - 
=== Succesors ===
=== Usages ===
v2797 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2790 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2797 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4444 
value: v4367 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2770 
=== Usages ===
=== Predecessor ===
v2794 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4444 value: v4367 stateAfter: - lastLocationAccess: - #next: v2770  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2770 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2771 
=== Usages ===
=== Predecessor ===
v2797 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a2771  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2771 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j2790 
=== Succesors ===
next: v2773 
=== Usages ===
a2776 
=== Predecessor ===
v2770 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j2790 #next: v2773  <|@  <|@
f <@*|@fixed>@ <|@
tid v2773 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2774 
=== Predecessor ===
a2771 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B129" "B128" 
    successors "B131" "B132" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4575305213314078916
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a2776 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v2774 
values: a2771 a2772 
=== Succesors ===
=== Usages ===
v4508 a2335 v4413 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2774 values: a2771 a2772  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2774 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2773 v2775 
=== Succesors ===
next: v3976 
=== Usages ===
a2776 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2773 v2775 #next: v3976  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3976 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v3532 
=== Usages ===
j3977 j3979 
=== Predecessor ===
v2774 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v3532  <|@  <|@
f <@~|@floating>@ <|@
tid v4413 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a2776 
index: - 
=== Succesors ===
=== Usages ===
j3979 j2811 j2809 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2776 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v2206 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 4]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:174) [bci: 19]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4366 
y: i1780 
=== Succesors ===
=== Usages ===
i2323 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i4366 y: i1780  <|@  <|@
f <@~|@floating>@ <|@
tid i2323 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v2206 
trueValue: i4366 
falseValue: i1780 
=== Succesors ===
=== Usages ===
j3267 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v2206 trueValue: i4366 falseValue: i1780  <|@  <|@
f <@~|@floating>@ <|@
tid j3267 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i2323 
=== Succesors ===
=== Usages ===
j4023 v4508 j3271 v3529 v3750 j4012 j4017 j4020 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2323  <|@  <|@
f <@~|@floating>@ <|@
tid v3529 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3267 
y: j2632 
=== Succesors ===
=== Usages ===
v3532 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3267 y: j2632  <|@  <|@
f <@*|@fixed>@ <|@
tid v3532 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v3529 
=== Succesors ===
trueSuccessor: v3530 
falseSuccessor: v3531 
=== Usages ===
=== Predecessor ===
v3976 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3529 #trueSuccessor: v3530 #falseSuccessor: v3531  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B130" 
    successors "B146" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570801613686708420
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3530 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3548 
=== Usages ===
=== Predecessor ===
v3532 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3548  <|@  <|@
f <@*|@fixed>@ <|@
tid v3548 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3549 
=== Predecessor ===
v3530 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B130" 
    successors "B133" "B134" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570801613686708420
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3531 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3535 
=== Usages ===
=== Predecessor ===
v3532 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3535  <|@  <|@
f <@~|@floating>@ <|@
tid j3979 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v3976 
address: v4413 
=== Succesors ===
=== Usages ===
v4539 v4541 v4543 v4545 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v3976 address: v4413  <|@  <|@
f <@~|@floating>@ <|@
tid v4564 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a505 
index: - 
=== Succesors ===
=== Usages ===
j3977 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a505 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j3977 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v3976 
address: v4564 
=== Succesors ===
=== Usages ===
v4540 v4542 v4544 v4546 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v3976 address: v4564  <|@  <|@
f <@~|@floating>@ <|@
tid j4012 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j3267 
y: j3807 
=== Succesors ===
=== Usages ===
v4013 v4015 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3267 y: j3807  <|@  <|@
f <@~|@floating>@ <|@
tid v4013 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j4012 
y: j2049 
=== Succesors ===
=== Usages ===
v3535 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j4012 y: j2049  <|@  <|@
f <@*|@fixed>@ <|@
tid v3535 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v4013 
=== Succesors ===
trueSuccessor: v3533 
falseSuccessor: v3534 
=== Usages ===
=== Predecessor ===
v3531 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4013 #trueSuccessor: v3533 #falseSuccessor: v3534  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B137" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4568637815896609427
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3533 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3544 
=== Usages ===
=== Predecessor ===
v3535 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3544  <|@  <|@
f <@*|@fixed>@ <|@
tid v3544 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3545 
=== Predecessor ===
v3533 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B135" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561794414431967428
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3534 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3536 
=== Usages ===
=== Predecessor ===
v3535 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3536  <|@  <|@
f <@*|@fixed>@ <|@
tid v3536 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3537 
=== Predecessor ===
v3534 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" "B172" 
    successors "B136" "B172" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 2
    probability 4570801613686708420
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j4004 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3537 
values: j2049 j4011 
=== Succesors ===
=== Usages ===
v4546 j4011 v4545 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3537 values: j2049 j4011  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3537 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v3536 
=== Succesors ===
next: v4368 
=== Usages ===
v4368 v3540 v3541 j4004 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v3536 #next: v4368  <|@  <|@
f <@~|@floating>@ <|@
tid v4546 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j3977 
index: j4004 
=== Succesors ===
=== Usages ===
v4368 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3977 index: j4004  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4368 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: <n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;>
=== Inputs ===
stateBefore: - 
guard: v3537 
address: v4546 
=== Succesors ===
next: v4226 
=== Usages ===
v4226 
=== Predecessor ===
v3537 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v3537 address: v4546 #next: v4226  <|@  <|@
f <@~|@floating>@ <|@
tid v4545 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j3979 
index: j4004 
=== Succesors ===
=== Usages ===
v4226 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3979 index: j4004  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4226 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4545 
value: v4368 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3543 
=== Usages ===
=== Predecessor ===
v4368 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4545 value: v4368 stateAfter: - lastLocationAccess: - #next: v3543  <|@  <|@
f <@~|@floating>@ <|@
tid j4011 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j4004 
y: j2577 
=== Succesors ===
=== Usages ===
j3996 j4004 v4015 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j4004 y: j2577  <|@  <|@
f <@~|@floating>@ <|@
tid v4015 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j4012 
y: j4011 
=== Succesors ===
=== Usages ===
v3543 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j4012 y: j4011  <|@  <|@
f <@*|@fixed>@ <|@
tid v3543 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v4015 
=== Succesors ===
trueSuccessor: v3540 
falseSuccessor: v3542 
=== Usages ===
=== Predecessor ===
v4226 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4015 #trueSuccessor: v3540 #falseSuccessor: v3542  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B135" 
    successors "B137" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561794414431967428
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3540 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v3537 
=== Succesors ===
next: v3546 
=== Usages ===
=== Predecessor ===
v3543 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v3537 #next: v3546  <|@  <|@
f <@*|@fixed>@ <|@
tid v3546 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3545 
=== Predecessor ===
v3540 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B133" "B136" 
    successors "B138" "B139" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570801613686708420
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3996 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3545 
values: j2049 j4011 
=== Succesors ===
=== Usages ===
v4544 j4003 j3988 v4018 v4543 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3545 values: j2049 j4011  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3545 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3544 v3546 
=== Succesors ===
next: v3564 
=== Usages ===
j3996 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3544 v3546 #next: v3564  <|@  <|@
f <@~|@floating>@ <|@
tid j4017 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j3267 
y: j3811 
=== Succesors ===
=== Usages ===
v4018 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3267 y: j3811  <|@  <|@
f <@~|@floating>@ <|@
tid v4018 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j4017 
y: j3996 
=== Succesors ===
=== Usages ===
v3564 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j4017 y: j3996  <|@  <|@
f <@*|@fixed>@ <|@
tid v3564 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v4018 
=== Succesors ===
trueSuccessor: v3563 
falseSuccessor: v3562 
=== Usages ===
=== Predecessor ===
v3545 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4018 #trueSuccessor: v3563 #falseSuccessor: v3562  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B137" 
    successors "B140" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561794414431967428
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3563 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3567 
=== Usages ===
=== Predecessor ===
v3564 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3567  <|@  <|@
f <@*|@fixed>@ <|@
tid v3567 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3556 
=== Predecessor ===
v3563 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B137" 
    successors "B140" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4568637815896609427
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3562 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4369 
=== Usages ===
v4369 
=== Predecessor ===
v3564 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4369  <|@  <|@
f <@~|@floating>@ <|@
tid v4544 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j3977 
index: j3996 
=== Succesors ===
=== Usages ===
v4369 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3977 index: j3996  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4369 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: <n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;>
=== Inputs ===
stateBefore: - 
guard: v3562 
address: v4544 
=== Succesors ===
next: v4224 
=== Usages ===
v4224 
=== Predecessor ===
v3562 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v3562 address: v4544 #next: v4224  <|@  <|@
f <@~|@floating>@ <|@
tid v4543 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j3979 
index: j3996 
=== Succesors ===
=== Usages ===
v4224 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3979 index: j3996  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4224 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4543 
value: v4369 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3555 
=== Usages ===
=== Predecessor ===
v4369 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4543 value: v4369 stateAfter: - lastLocationAccess: - #next: v3555  <|@  <|@
f <@~|@floating>@ <|@
tid j4003 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3996 
y: j3783 
=== Succesors ===
=== Usages ===
j3988 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3996 y: j3783  <|@  <|@
f <@*|@fixed>@ <|@
tid v3555 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3556 
=== Predecessor ===
v4224 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B139" "B138" 
    successors "B141" "B142" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570801613686708420
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3988 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3556 
values: j4003 j3996 
=== Succesors ===
=== Usages ===
v4542 j3995 j3980 v4021 v4541 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3556 values: j4003 j3996  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3556 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3555 v3567 
=== Succesors ===
next: v3570 
=== Usages ===
j3988 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3555 v3567 #next: v3570  <|@  <|@
f <@~|@floating>@ <|@
tid j4020 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j3267 
y: j3815 
=== Succesors ===
=== Usages ===
v4021 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3267 y: j3815  <|@  <|@
f <@~|@floating>@ <|@
tid v4021 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j4020 
y: j3988 
=== Succesors ===
=== Usages ===
v3570 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j4020 y: j3988  <|@  <|@
f <@*|@fixed>@ <|@
tid v3570 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v4021 
=== Succesors ===
trueSuccessor: v3569 
falseSuccessor: v3568 
=== Usages ===
=== Predecessor ===
v3556 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4021 #trueSuccessor: v3569 #falseSuccessor: v3568  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B143" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561794414431967428
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3569 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3573 
=== Usages ===
=== Predecessor ===
v3570 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3573  <|@  <|@
f <@*|@fixed>@ <|@
tid v3573 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3559 
=== Predecessor ===
v3569 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B143" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4568637815896609427
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3568 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4370 
=== Usages ===
v4370 
=== Predecessor ===
v3570 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4370  <|@  <|@
f <@~|@floating>@ <|@
tid v4542 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j3977 
index: j3988 
=== Succesors ===
=== Usages ===
v4370 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3977 index: j3988  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4370 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: <n Ljava/lang/Object;,n Ljava/lang/Object;>
=== Inputs ===
stateBefore: - 
guard: v3568 
address: v4542 
=== Succesors ===
next: v4222 
=== Usages ===
v4222 
=== Predecessor ===
v3568 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v3568 address: v4542 #next: v4222  <|@  <|@
f <@~|@floating>@ <|@
tid v4541 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j3979 
index: j3988 
=== Succesors ===
=== Usages ===
v4222 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3979 index: j3988  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4222 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4541 
value: v4370 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3558 
=== Usages ===
=== Predecessor ===
v4370 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4541 value: v4370 stateAfter: - lastLocationAccess: - #next: v3558  <|@  <|@
f <@~|@floating>@ <|@
tid j3995 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3988 
y: j3761 
=== Succesors ===
=== Usages ===
j3980 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3988 y: j3761  <|@  <|@
f <@*|@fixed>@ <|@
tid v3558 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3559 
=== Predecessor ===
v4222 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B142" "B141" 
    successors "B144" "B145" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570801613686708420
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3980 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3559 
values: j3995 j3988 
=== Succesors ===
=== Usages ===
v4540 v4024 v4539 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3559 values: j3995 j3988  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3559 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3558 v3573 
=== Succesors ===
next: v3576 
=== Usages ===
j3980 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3558 v3573 #next: v3576  <|@  <|@
f <@~|@floating>@ <|@
tid j4023 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j3267 
y: j1816 
=== Succesors ===
=== Usages ===
v4024 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3267 y: j1816  <|@  <|@
f <@~|@floating>@ <|@
tid v4024 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j4023 
y: j3980 
=== Succesors ===
=== Usages ===
v3576 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j4023 y: j3980  <|@  <|@
f <@*|@fixed>@ <|@
tid v3576 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v4024 
=== Succesors ===
trueSuccessor: v3575 
falseSuccessor: v3574 
=== Usages ===
=== Predecessor ===
v3559 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4024 #trueSuccessor: v3575 #falseSuccessor: v3574  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B143" 
    successors "B146" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561794414431967428
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3575 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3579 
=== Usages ===
=== Predecessor ===
v3576 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3579  <|@  <|@
f <@*|@fixed>@ <|@
tid v3579 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3549 
=== Predecessor ===
v3575 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B143" 
    successors "B146" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4568637815896609427
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3574 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a4371 
=== Usages ===
a4371 
=== Predecessor ===
v3576 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a4371  <|@  <|@
f <@~|@floating>@ <|@
tid v4540 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j3977 
index: j3980 
=== Succesors ===
=== Usages ===
a4371 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3977 index: j3980  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4371 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v3574 
address: v4540 
=== Succesors ===
next: v4220 
=== Usages ===
v4220 
=== Predecessor ===
v3574 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v3574 address: v4540 #next: v4220  <|@  <|@
f <@~|@floating>@ <|@
tid v4539 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j3979 
index: j3980 
=== Succesors ===
=== Usages ===
v4220 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3979 index: j3980  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4220 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4539 
value: a4371 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3561 
=== Usages ===
=== Predecessor ===
a4371 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4539 value: a4371 stateAfter: - lastLocationAccess: - #next: v3561  <|@  <|@
f <@*|@fixed>@ <|@
tid v3561 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3549 
=== Predecessor ===
v4220 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B131" "B145" "B144" 
    successors "B147" "B162" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4575305213314078916
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3549 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3548 v3561 v3579 
=== Succesors ===
next: v4027 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3548 v3561 v3579 #next: v4027  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4027 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v3586 
=== Usages ===
j4029 
=== Predecessor ===
v3549 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v3586  <|@  <|@
f <@~|@floating>@ <|@
tid j3266 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1780 
=== Succesors ===
=== Usages ===
j3271 v3750 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1780  <|@  <|@
f <@~|@floating>@ <|@
tid v3750 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3267 
y: j3266 
=== Succesors ===
=== Usages ===
v3586 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3267 y: j3266  <|@  <|@
f <@*|@fixed>@ <|@
tid v3586 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v3750 
=== Succesors ===
trueSuccessor: v3585 
falseSuccessor: v3584 
=== Usages ===
=== Predecessor ===
v4027 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3750 #trueSuccessor: v3585 #falseSuccessor: v3584  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B148" "B149" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570801613686708420
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3585 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3589 
=== Usages ===
=== Predecessor ===
v3586 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3589  <|@  <|@
f <@~|@floating>@ <|@
tid v4508 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a2776 
index: j3267 
=== Succesors ===
=== Usages ===
j4029 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2776 index: j3267  <|@  <|@
f <@~|@floating>@ <|@
tid j4029 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v4027 
address: v4508 
=== Succesors ===
=== Usages ===
v4547 v4548 v4549 v4550 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v4027 address: v4508  <|@  <|@
f <@~|@floating>@ <|@
tid j3271 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j3266 
y: j3267 
=== Succesors ===
=== Usages ===
j4065 j4054 j4059 j4062 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j3266 y: j3267  <|@  <|@
f <@~|@floating>@ <|@
tid j4054 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967303 - 4294967287]
=== Inputs ===
x: j3271 
y: j3807 
=== Succesors ===
=== Usages ===
v4055 v4057 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3271 y: j3807  <|@  <|@
f <@~|@floating>@ <|@
tid v4055 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j4054 
y: j2049 
=== Succesors ===
=== Usages ===
v3589 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j4054 y: j2049  <|@  <|@
f <@*|@fixed>@ <|@
tid v3589 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v4055 
=== Succesors ===
trueSuccessor: v3587 
falseSuccessor: v3588 
=== Usages ===
=== Predecessor ===
v3585 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4055 #trueSuccessor: v3587 #falseSuccessor: v3588  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B147" 
    successors "B152" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4568637815896609427
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3587 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3598 
=== Usages ===
=== Predecessor ===
v3589 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3598  <|@  <|@
f <@*|@fixed>@ <|@
tid v3598 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3599 
=== Predecessor ===
v3587 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B147" 
    successors "B150" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561794414431967428
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3588 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3590 
=== Usages ===
=== Predecessor ===
v3589 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3590  <|@  <|@
f <@*|@fixed>@ <|@
tid v3590 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3591 
=== Predecessor ===
v3588 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B149" "B161" 
    successors "B151" "B161" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 2
    probability 4570801613686708420
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j4048 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3591 
values: j2049 j4053 
=== Succesors ===
=== Usages ===
v4550 j4053 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3591 values: j2049 j4053  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3591 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v3590 
=== Succesors ===
next: v4230 
=== Usages ===
j4048 v3594 v3595 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v3590 #next: v4230  <|@  <|@
f <@~|@floating>@ <|@
tid v4550 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j4029 
index: j4048 
=== Succesors ===
=== Usages ===
v4230 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4029 index: j4048  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4230 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4550 
value: v4243 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3597 
=== Usages ===
=== Predecessor ===
v3591 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4550 value: v4243 stateAfter: - lastLocationAccess: - #next: v3597  <|@  <|@
f <@~|@floating>@ <|@
tid j4053 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j4048 
y: j2577 
=== Succesors ===
=== Usages ===
j4042 j4048 v4057 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j4048 y: j2577  <|@  <|@
f <@~|@floating>@ <|@
tid v4057 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j4054 
y: j4053 
=== Succesors ===
=== Usages ===
v3597 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j4054 y: j4053  <|@  <|@
f <@*|@fixed>@ <|@
tid v3597 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v4057 
=== Succesors ===
trueSuccessor: v3594 
falseSuccessor: v3596 
=== Usages ===
=== Predecessor ===
v4230 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4057 #trueSuccessor: v3594 #falseSuccessor: v3596  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B150" 
    successors "B152" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561794414431967428
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3594 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v3591 
=== Succesors ===
next: v3600 
=== Usages ===
=== Predecessor ===
v3597 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v3591 #next: v3600  <|@  <|@
f <@*|@fixed>@ <|@
tid v3600 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3599 
=== Predecessor ===
v3594 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B148" "B151" 
    successors "B153" "B154" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570801613686708420
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j4042 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3599 
values: j2049 j4053 
=== Succesors ===
=== Usages ===
v4549 j4047 j4036 v4060 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3599 values: j2049 j4053  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3599 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3598 v3600 
=== Succesors ===
next: v3618 
=== Usages ===
j4042 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3598 v3600 #next: v3618  <|@  <|@
f <@~|@floating>@ <|@
tid j4059 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967299 - 4294967291]
=== Inputs ===
x: j3271 
y: j3811 
=== Succesors ===
=== Usages ===
v4060 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3271 y: j3811  <|@  <|@
f <@~|@floating>@ <|@
tid v4060 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j4059 
y: j4042 
=== Succesors ===
=== Usages ===
v3618 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j4059 y: j4042  <|@  <|@
f <@*|@fixed>@ <|@
tid v3618 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v4060 
=== Succesors ===
trueSuccessor: v3617 
falseSuccessor: v3616 
=== Usages ===
=== Predecessor ===
v3599 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4060 #trueSuccessor: v3617 #falseSuccessor: v3616  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B153"
    from_bci -1
    to_bci -1
    predecessors "B152" 
    successors "B155" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561794414431967428
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3617 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3621 
=== Usages ===
=== Predecessor ===
v3618 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3621  <|@  <|@
f <@*|@fixed>@ <|@
tid v3621 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3610 
=== Predecessor ===
v3617 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B154"
    from_bci -1
    to_bci -1
    predecessors "B152" 
    successors "B155" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4568637815896609427
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3616 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4229 
=== Usages ===
=== Predecessor ===
v3618 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4229  <|@  <|@
f <@~|@floating>@ <|@
tid v4549 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j4029 
index: j4042 
=== Succesors ===
=== Usages ===
v4229 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4029 index: j4042  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4229 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4549 
value: v4246 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3609 
=== Usages ===
=== Predecessor ===
v3616 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4549 value: v4246 stateAfter: - lastLocationAccess: - #next: v3609  <|@  <|@
f <@~|@floating>@ <|@
tid j4047 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j4042 
y: j3783 
=== Succesors ===
=== Usages ===
j4036 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j4042 y: j3783  <|@  <|@
f <@*|@fixed>@ <|@
tid v3609 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3610 
=== Predecessor ===
v4229 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B155"
    from_bci -1
    to_bci -1
    predecessors "B154" "B153" 
    successors "B156" "B157" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570801613686708420
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j4036 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3610 
values: j4047 j4042 
=== Succesors ===
=== Usages ===
v4548 j4041 j4030 v4063 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3610 values: j4047 j4042  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3610 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3609 v3621 
=== Succesors ===
next: v3624 
=== Usages ===
j4036 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3609 v3621 #next: v3624  <|@  <|@
f <@~|@floating>@ <|@
tid j4062 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j3271 
y: j3815 
=== Succesors ===
=== Usages ===
v4063 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3271 y: j3815  <|@  <|@
f <@~|@floating>@ <|@
tid v4063 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j4062 
y: j4036 
=== Succesors ===
=== Usages ===
v3624 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j4062 y: j4036  <|@  <|@
f <@*|@fixed>@ <|@
tid v3624 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v4063 
=== Succesors ===
trueSuccessor: v3623 
falseSuccessor: v3622 
=== Usages ===
=== Predecessor ===
v3610 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4063 #trueSuccessor: v3623 #falseSuccessor: v3622  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B156"
    from_bci -1
    to_bci -1
    predecessors "B155" 
    successors "B158" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561794414431967428
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3623 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3627 
=== Usages ===
=== Predecessor ===
v3624 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3627  <|@  <|@
f <@*|@fixed>@ <|@
tid v3627 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3613 
=== Predecessor ===
v3623 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B157"
    from_bci -1
    to_bci -1
    predecessors "B155" 
    successors "B158" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4568637815896609427
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3622 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4228 
=== Usages ===
=== Predecessor ===
v3624 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4228  <|@  <|@
f <@~|@floating>@ <|@
tid v4548 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j4029 
index: j4036 
=== Succesors ===
=== Usages ===
v4228 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4029 index: j4036  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4228 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4548 
value: v4245 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3612 
=== Usages ===
=== Predecessor ===
v3622 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4548 value: v4245 stateAfter: - lastLocationAccess: - #next: v3612  <|@  <|@
f <@~|@floating>@ <|@
tid j4041 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j4036 
y: j3761 
=== Succesors ===
=== Usages ===
j4030 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j4036 y: j3761  <|@  <|@
f <@*|@fixed>@ <|@
tid v3612 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3613 
=== Predecessor ===
v4228 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B158"
    from_bci -1
    to_bci -1
    predecessors "B157" "B156" 
    successors "B159" "B160" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570801613686708420
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j4030 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3613 
values: j4041 j4036 
=== Succesors ===
=== Usages ===
v4547 v4066 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3613 values: j4041 j4036  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3613 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3612 v3627 
=== Succesors ===
next: v3630 
=== Usages ===
j4030 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3612 v3627 #next: v3630  <|@  <|@
f <@~|@floating>@ <|@
tid j4065 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j3271 
y: j1816 
=== Succesors ===
=== Usages ===
v4066 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3271 y: j1816  <|@  <|@
f <@~|@floating>@ <|@
tid v4066 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j4065 
y: j4030 
=== Succesors ===
=== Usages ===
v3630 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j4065 y: j4030  <|@  <|@
f <@*|@fixed>@ <|@
tid v3630 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v4066 
=== Succesors ===
trueSuccessor: v3629 
falseSuccessor: v3628 
=== Usages ===
=== Predecessor ===
v3613 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4066 #trueSuccessor: v3629 #falseSuccessor: v3628  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B159"
    from_bci -1
    to_bci -1
    predecessors "B158" 
    successors "B163" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561794414431967428
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3629 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3633 
=== Usages ===
=== Predecessor ===
v3630 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3633  <|@  <|@
f <@*|@fixed>@ <|@
tid v3633 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3603 
=== Predecessor ===
v3629 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B160"
    from_bci -1
    to_bci -1
    predecessors "B158" 
    successors "B163" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4568637815896609427
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3628 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4227 
=== Usages ===
=== Predecessor ===
v3630 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4227  <|@  <|@
f <@~|@floating>@ <|@
tid v4547 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j4029 
index: j4030 
=== Succesors ===
=== Usages ===
v4227 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4029 index: j4030  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4227 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4547 
value: a4244 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3615 
=== Usages ===
=== Predecessor ===
v3628 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4547 value: a4244 stateAfter: - lastLocationAccess: - #next: v3615  <|@  <|@
f <@*|@fixed>@ <|@
tid v3615 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3603 
=== Predecessor ===
v4227 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B161"
    from_bci -1
    to_bci -1
    predecessors "B150" 
    successors "B150" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 2
    probability 4568637815896609427
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3596 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3595 
=== Usages ===
=== Predecessor ===
v3597 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3595  <|@  <|@
f <@*|@fixed>@ <|@
tid v3595 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v3591 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v3596 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v3591  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B162"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B163" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570801613686708420
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3584 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3602 
=== Usages ===
=== Predecessor ===
v3586 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3602  <|@  <|@
f <@*|@fixed>@ <|@
tid v3602 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3603 
=== Predecessor ===
v3584 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B163"
    from_bci -1
    to_bci -1
    predecessors "B162" "B160" "B159" 
    successors "B164" "B165" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4575305213314078916
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3603 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3602 v3615 v3633 
=== Succesors ===
next: v2808 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3602 v3615 v3633 #next: v2808  <|@  <|@
f <@~|@floating>@ <|@
tid v2805 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:154) [bci: 1]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1780 
y: i5 
=== Succesors ===
=== Usages ===
v2808 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1780 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v2808 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:154) [bci: 1]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v2805 
=== Succesors ===
trueSuccessor: v2806 
falseSuccessor: v2807 
=== Usages ===
=== Predecessor ===
v3603 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2805 #trueSuccessor: v2806 #falseSuccessor: v2807  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B164"
    from_bci -1
    to_bci -1
    predecessors "B163" 
    successors "B168" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570801613686708420
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2806 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:155) [bci: 4]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2832 
=== Usages ===
=== Predecessor ===
v2808 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2832  <|@  <|@
f <@*|@fixed>@ <|@
tid v2832 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2831 
=== Predecessor ===
v2806 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B165"
    from_bci -1
    to_bci -1
    predecessors "B163" 
    successors "B166" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570801613686708420
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2807 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:157) [bci: 5]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2809 
=== Usages ===
=== Predecessor ===
v2808 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2809  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2809 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToFirstArrayElement(WriteBarrierSnippets.java:376) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:159) [bci: 20]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v4413 
=== Succesors ===
next: j2811 
=== Usages ===
j2810 
=== Predecessor ===
v2807 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v4413 #next: j2811  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2811 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:385) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v4413 
=== Succesors ===
next: v2819 
=== Usages ===
j2815 
=== Predecessor ===
j2809 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v4413 #next: v2819  <|@  <|@
f <@~|@floating>@ <|@
tid i2812 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: i32
=== Inputs ===
x: i1780 
y: i19 
=== Succesors ===
=== Usages ===
i2813 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1780 y: i19  <|@  <|@
f <@~|@floating>@ <|@
tid i2813 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i2812 
y: i1663 
=== Succesors ===
=== Usages ===
j2814 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i2812 y: i1663  <|@  <|@
f <@~|@floating>@ <|@
tid j2814 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 26]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
resultBits: 64
stamp: i64 [-2147483648 - 2147483644] ⇈fffffffffffffffc
=== Inputs ===
value: i2813 
=== Succesors ===
=== Usages ===
j2815 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2813  <|@  <|@
f <@~|@floating>@ <|@
tid j2815 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 27]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: i64
=== Inputs ===
x: j2811 
y: j2814 
=== Succesors ===
=== Usages ===
j2816 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2811 y: j2814  <|@  <|@
f <@~|@floating>@ <|@
tid j2816 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 34]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j2815 
y: i2735 
=== Succesors ===
=== Usages ===
j2817 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j2815 y: i2735  <|@  <|@
f <@~|@floating>@ <|@
tid j2810 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:159) [bci: 24]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j2809 
y: i2735 
=== Succesors ===
=== Usages ===
j2817 j2830 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j2809 y: i2735  <|@  <|@
f <@~|@floating>@ <|@
tid j2817 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:161) [bci: 41]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: i64 [-36028797018963967 - 36028797018963967]
=== Inputs ===
x: j2816 
y: j2810 
=== Succesors ===
=== Usages ===
j2818 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j2816 y: j2810  <|@  <|@
f <@~|@floating>@ <|@
tid j2818 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:161) [bci: 43]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: i64 [-36028797018963966 - 36028797018963968]
=== Inputs ===
x: j2817 
y: j2632 
=== Succesors ===
=== Usages ===
j2821 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2817 y: j2632  <|@  <|@
f <@*|@fixed>@ <|@
tid v2819 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2820 
=== Predecessor ===
j2811 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B166"
    from_bci -1
    to_bci -1
    predecessors "B165" "B171" 
    successors "B167" "B171" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 2
    probability 4575305213314078916
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2821 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2820 
values: j2818 j2822 
=== Succesors ===
=== Usages ===
j2822 v2823 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2820 values: j2818 j2822  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2820 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 2.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v2819 
=== Succesors ===
next: v2826 
=== Usages ===
j2821 v2824 v2829 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v2819 #next: v2826  <|@  <|@
f <@~|@floating>@ <|@
tid v2823 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 55]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2821 
y: j2632 
=== Succesors ===
=== Usages ===
v2826 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2821 y: j2632  <|@  <|@
f <@*|@fixed>@ <|@
tid v2826 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 55]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v2823 
=== Succesors ===
trueSuccessor: v2824 
falseSuccessor: v2825 
=== Usages ===
=== Predecessor ===
v2820 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2823 #trueSuccessor: v2824 #falseSuccessor: v2825  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B167"
    from_bci -1
    to_bci -1
    predecessors "B166" 
    successors "B168" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570801613686708420
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2824 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:165) [bci: 76]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v2820 
=== Succesors ===
next: v2833 
=== Usages ===
=== Predecessor ===
v2826 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v2820 #next: v2833  <|@  <|@
f <@*|@fixed>@ <|@
tid v2833 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2831 
=== Predecessor ===
v2824 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B168"
    from_bci -1
    to_bci -1
    predecessors "B164" "B167" 
    successors "B169" "B170" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4575305213314078916
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2831 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2832 v2833 
=== Succesors ===
next: a2335 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2832 v2833 #next: a2335  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2335 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a2776 
=== Succesors ===
next: v4372 
=== Usages ===
v4445 a505 ?517 v4400 
=== Predecessor ===
v2831 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a2776 #next: v4372  <|@  <|@
f <@~|@floating>@ <|@
tid v4445 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a2335 
index: - 
=== Succesors ===
=== Usages ===
v4372 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2335 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4372 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v4445 
=== Succesors ===
next: v1959 
=== Usages ===
v3239 
=== Predecessor ===
a2335 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4445 #next: v1959  <|@  <|@
f <@~|@floating>@ <|@
tid v3239 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v4372 
y: v3223 
=== Succesors ===
=== Usages ===
v1959 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v4372 y: v3223  <|@  <|@
f <@*|@fixed>@ <|@
tid v1959 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v3239 
=== Succesors ===
trueSuccessor: v1955 
falseSuccessor: v1958 
=== Usages ===
=== Predecessor ===
v4372 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3239 #trueSuccessor: v1955 #falseSuccessor: v1958  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B169"
    from_bci -1
    to_bci -1
    predecessors "B168" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4575305213314078916
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1955 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1679 
=== Usages ===
=== Predecessor ===
v1959 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1679  <|@  <|@
f <@~|@floating>@ <|@
tid v4400 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a2335 
index: i503 
=== Succesors ===
=== Usages ===
v1679 j2838 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2335 index: i503  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1679 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:463) [bci: 26]
at java.lang.String.split(String.java:2353) [bci: 165]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1950 
address: v4400 
value: a1667 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j2838 
=== Usages ===
=== Predecessor ===
v1955 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1950 address: v4400 value: a1667 stateAfter: - lastLocationAccess: - #next: j2838  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2838 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at java.util.ArrayList.add(ArrayList.java:463) [bci: 26]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v4400 
=== Succesors ===
next: v2842 
=== Usages ===
j2839 
=== Predecessor ===
v1679 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v4400 #next: v2842  <|@  <|@
f <@~|@floating>@ <|@
tid j2839 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.ArrayList.add(ArrayList.java:463) [bci: 26]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j2838 
y: i2735 
=== Succesors ===
=== Usages ===
v4446 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j2838 y: i2735  <|@  <|@
f <@~|@floating>@ <|@
tid v4446 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2839 
index: j2739 
=== Succesors ===
=== Usages ===
v2842 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2839 index: j2739  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2842 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.ArrayList.add(ArrayList.java:463) [bci: 26]
at java.lang.String.split(String.java:2353) [bci: 165]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4446 
value: i2741 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1807 
=== Usages ===
=== Predecessor ===
j2838 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4446 value: i2741 stateAfter: - lastLocationAccess: - #next: v1807  <|@  <|@
tid ?517 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a244 
values: i4345 i4345 a2335 
=== Succesors ===
=== Usages ===
?143 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a244 values: i4345 i4345 a2335  <|@  <|@
tid ?143 <|@
d <@d|@=== Debug Properties ===
bci: 27
code: ResolvedJavaMethodBytecode<ArrayList.add(Object)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:463) [bci: 26]
at java.lang.String.split(String.java:2353) [bci: 165]
rethrowException: false
sourceFile: ArrayList.java
sourceLine: 464
stackSize: 0
=== Inputs ===
outerFrameState: ?145 
values: a244 a348 
virtualObjectMappings: ?517 
=== Succesors ===
=== Usages ===
v1807 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?145 values: a244 a348 virtualObjectMappings: ?517  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1807 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?143 
=== Succesors ===
next: v54 
=== Usages ===
=== Predecessor ===
v2842 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?143 #next: v54  <|@  <|@
f <@*|@fixed>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at java.lang.String.split(String.java:2351) [bci: 125]
stamp: void
=== Inputs ===
loopBegin: v33 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1807 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v33  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B170"
    from_bci -1
    to_bci -1
    predecessors "B168" 
    successors "B175" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1958 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v33 
=== Succesors ===
next: v2477 
=== Usages ===
=== Predecessor ===
v1959 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v33 #next: v2477  <|@  <|@
f <@~|@floating>@ <|@
tid i2478 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -427836
stableDimension: 0
stamp: i32 [-427836] ⇊00000000fff978c4 ⇈00000000fff978c4
stampKind: i32
value: int[-427836|0xfffffffffff978c4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2468 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2477 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2464 
=== Predecessor ===
v1958 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B171"
    from_bci -1
    to_bci -1
    predecessors "B166" 
    successors "B166" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 2
    probability 4570801613686708420
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2825 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 58]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2828 
=== Usages ===
=== Predecessor ===
v2826 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2828  <|@  <|@
f <@~|@floating>@ <|@
tid j2822 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 50]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: i64
=== Inputs ===
x: j2821 
y: j1816 
=== Succesors ===
=== Usages ===
j2821 j2827 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2821 y: j1816  <|@  <|@
f <@~|@floating>@ <|@
tid j2830 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 62]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: i64 [4682670080 - 36028801701634047] ⇈00ffffffffffffff
=== Inputs ===
x: j2810 
y: j2739 
=== Succesors ===
=== Usages ===
j2827 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2810 y: j2739  <|@  <|@
f <@~|@floating>@ <|@
tid j2827 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 65]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: i64
=== Inputs ===
x: j2822 
y: j2830 
=== Succesors ===
=== Usages ===
v2828 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2822 y: j2830  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2828 <|@
d <@d|@=== Debug Properties ===
kind: boolean
nodeSourcePosition: at org.graalvm.compiler.replacements.nodes.DirectStoreNode.storeBoolean(long, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 70]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: void
=== Inputs ===
address: j2827 
value: i5 
=== Succesors ===
next: v2829 
=== Usages ===
=== Predecessor ===
v2825 >@ <|@
instruction <@DirectStore|@org.graalvm.compiler.replacements.nodes.DirectStoreNode>@ address: j2827 value: i5 #next: v2829  <|@  <|@
f <@*|@fixed>@ <|@
tid v2829 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: void
=== Inputs ===
loopBegin: v2820 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2828 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v2820  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B172"
    from_bci -1
    to_bci -1
    predecessors "B135" 
    successors "B135" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 2
    probability 4568637815896609427
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3542 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3541 
=== Usages ===
=== Predecessor ===
v3543 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3541  <|@  <|@
f <@*|@fixed>@ <|@
tid v3541 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v3537 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v3542 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v3537  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B173"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors "B175" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1953 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:463) [bci: 26]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v33 
=== Succesors ===
next: v2475 
=== Usages ===
=== Predecessor ===
v1954 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v33 #next: v2475  <|@  <|@
f <@~|@floating>@ <|@
tid i2476 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -428315
stableDimension: 0
stamp: i32 [-428315] ⇊00000000fff976e5 ⇈00000000fff976e5
stampKind: i32
value: int[-428315|0xfffffffffff976e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2468 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2475 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2464 
=== Predecessor ===
v1953 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B174"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B175" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1948 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:262) [bci: 24]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v33 
=== Succesors ===
next: v2473 
=== Usages ===
=== Predecessor ===
v1949 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v33 #next: v2473  <|@  <|@
f <@~|@floating>@ <|@
tid i2474 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -427283
stableDimension: 0
stamp: i32 [-427283] ⇊00000000fff97aed ⇈00000000fff97aed
stampKind: i32
value: int[-427283|0xfffffffffff97aed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2468 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2473 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2464 
=== Predecessor ===
v1948 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B175"
    from_bci -1
    to_bci -1
    predecessors "B122" "B121" "B174" "B173" "B170" "B126" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i2468 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-563809 - -424252] ⇊00000000fff10084
valueDescription: i32
=== Inputs ===
merge: v2464 
values: i2466 i2472 i2474 i2476 i2478 i2480 
=== Succesors ===
=== Usages ===
v2470 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2464 values: i2466 i2472 i2474 i2476 i2478 i2480  <|@  <|@
f <@~|@floating>@ <|@
tid a2469 <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/l/d$a;
valueDescription: a -
=== Inputs ===
merge: v2464 
values: a2467 a2214 a2214 a2214 a2467 a2214 
=== Succesors ===
=== Usages ===
v2470 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2464 values: a2467 a2214 a2214 a2214 a2467 a2214  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2464 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2465 v2471 v2473 v2475 v2477 v2479 
=== Succesors ===
next: v2470 
=== Usages ===
i2468 a2469 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2465 v2471 v2473 v2475 v2477 v2479 #next: v2470  <|@  <|@
f <@*|@fixed>@ <|@
tid v2470 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?170 
actionAndReason: i2468 
speculation: a2469 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2464 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?170 actionAndReason: i2468 speculation: a2469  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B176"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B74" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4577598346154074172
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3416 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3415 
=== Usages ===
=== Predecessor ===
v3417 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3415  <|@  <|@
f <@*|@fixed>@ <|@
tid v3415 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v3411 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v3416 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v3411  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B177"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B34" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4629313874285517559
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v303 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1558) [bci: 55]
at java.lang.String.split(String.java:2351) [bci: 129]
stamp: void
=== Inputs ===
=== Succesors ===
next: v306 
=== Usages ===
=== Predecessor ===
v304 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v306  <|@  <|@
f <@~|@floating>@ <|@
tid i4332 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.String.split(String.java:2354) [bci: 172]
stamp: i32
=== Inputs ===
x: i291 
y: i8 
=== Succesors ===
=== Usages ===
i291 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i291 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v306 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.lang.String.indexOf(String.java:1558) [bci: 37]
at java.lang.String.split(String.java:2351) [bci: 129]
stamp: void
=== Inputs ===
loopBegin: v290 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v303 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v290  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B178"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B185" 
    xhandlers
    flags 
    probability 4612561903300672132
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v295 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1563) [bci: 61]
at java.lang.String.split(String.java:2351) [bci: 129]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v290 
=== Succesors ===
next: v1490 
=== Usages ===
=== Predecessor ===
v297 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v290 #next: v1490  <|@  <|@
f <@*|@fixed>@ <|@
tid v1490 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1487 
=== Predecessor ===
v295 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B179"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B181" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4264 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1559) [bci: 47]
at java.lang.String.split(String.java:2351) [bci: 129]
stamp: void
=== Inputs ===
=== Succesors ===
next: v4262 
=== Usages ===
=== Predecessor ===
v4265 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4262  <|@  <|@
f <@*|@fixed>@ <|@
tid v4262 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1559) [bci: 47]
at java.lang.String.split(String.java:2351) [bci: 129]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v4260 
=== Predecessor ===
v4264 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B180"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B181" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4263 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1559) [bci: 47]
at java.lang.String.split(String.java:2351) [bci: 129]
stamp: void
=== Inputs ===
=== Succesors ===
next: v4261 
=== Usages ===
=== Predecessor ===
v4267 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4261  <|@  <|@
f <@*|@fixed>@ <|@
tid v4261 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1559) [bci: 47]
at java.lang.String.split(String.java:2351) [bci: 129]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v4260 
=== Predecessor ===
v4263 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B181"
    from_bci -1
    to_bci -1
    predecessors "B180" "B179" 
    successors "B182" 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4260 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1559) [bci: 47]
at java.lang.String.split(String.java:2351) [bci: 129]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v4261 v4262 
=== Succesors ===
next: v1913 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v4261 v4262 #next: v1913  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B182"
    from_bci -1
    to_bci -1
    predecessors "B181" 
    successors "B183" 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1913 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1559) [bci: 47]
at java.lang.String.split(String.java:2351) [bci: 129]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v33 
=== Succesors ===
next: v2435 
=== Usages ===
=== Predecessor ===
v4260 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v33 #next: v2435  <|@  <|@
f <@~|@floating>@ <|@
tid a2437 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@180539890
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@180539890]
=== Inputs ===
=== Succesors ===
=== Usages ===
a2433 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2436 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -421147
stableDimension: 0
stamp: i32 [-421147] ⇊00000000fff992e5 ⇈00000000fff992e5
stampKind: i32
value: int[-421147|0xfffffffffff992e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2432 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2435 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2429 
=== Predecessor ===
v1913 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B183"
    from_bci -1
    to_bci -1
    predecessors "B29" "B182" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i2432 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-421147 - -420371] ⇊00000000fff990e5 ⇈00000000fff997ed
valueDescription: i32
=== Inputs ===
merge: v2429 
values: i2431 i2436 
=== Succesors ===
=== Usages ===
v2434 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2429 values: i2431 i2436  <|@  <|@
f <@~|@floating>@ <|@
tid a2433 <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/k/d$a;
valueDescription: a -
=== Inputs ===
merge: v2429 
values: a2214 a2437 
=== Succesors ===
=== Usages ===
v2434 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2429 values: a2214 a2437  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2429 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2430 v2435 
=== Succesors ===
next: v2434 
=== Usages ===
i2432 a2433 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2430 v2435 #next: v2434  <|@  <|@
tid ?35 <|@
d <@d|@=== Debug Properties ===
bci: 125
code: ResolvedJavaMethodBytecode<String.split(String, int)>
duringCall: false
localsSize: 10
locksSize: 0
rethrowException: false
sourceFile: String.java
sourceLine: 2351
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - i5 i1630 i34 - i5 a244 - - 
virtualObjectMappings: ?521 
=== Succesors ===
=== Usages ===
v2434 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - i5 i1630 i34 - i5 a244 - - virtualObjectMappings: ?521  <|@  <|@
f <@*|@fixed>@ <|@
tid v2434 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?35 
actionAndReason: i2432 
speculation: a2433 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2429 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?35 actionAndReason: i2432 speculation: a2433  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B184"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B185" 
    xhandlers
    flags 
    probability 4604782905894847016
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v285 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1551) [bci: 20]
at java.lang.String.split(String.java:2351) [bci: 129]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1519 
=== Usages ===
=== Predecessor ===
v286 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1519  <|@  <|@
f <@*|@fixed>@ <|@
tid v1519 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1487 
=== Predecessor ===
v285 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B185"
    from_bci -1
    to_bci -1
    predecessors "B37" "B178" "B184" 
    successors "B186" 
    xhandlers
    flags 
    probability 4614248496590463470
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1487 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1488 v1490 v1519 
=== Succesors ===
next: v41 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1488 v1490 v1519 #next: v41  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B186"
    from_bci -1
    to_bci -1
    predecessors "B185" 
    successors "B187" "B191" 
    xhandlers
    flags 
    probability 4614248496590463470
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.split(String.java:2363) [bci: 205]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v33 
=== Succesors ===
next: v58 
=== Usages ===
=== Predecessor ===
v1487 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v33 #next: v58  <|@  <|@
tid ?1489 <|@
d <@d|@=== Debug Properties ===
bci: 132
code: ResolvedJavaMethodBytecode<String.split(String, int)>
duringCall: false
localsSize: 10
locksSize: 0
nodeSourcePosition: at java.lang.String.split(String.java:2351) [bci: 129]
rethrowException: false
sourceFile: String.java
sourceLine: 2351
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 - i5 i1630 i34 - i5 a244 - - i19 
virtualObjectMappings: ?521 
=== Succesors ===
=== Usages ===
a2856 v2528 a2905 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - i5 i1630 i34 - i5 a244 - - i19 virtualObjectMappings: ?521  <|@  <|@
f <@*|@fixed>@ <|@
tid v58 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.split(String.java:2363) [bci: 207]
stamp: void
trueSuccessorProbability: 0.013959872667270279
=== Inputs ===
condition: v324 
=== Succesors ===
trueSuccessor: v56 
falseSuccessor: v57 
=== Usages ===
=== Predecessor ===
v41 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v324 #trueSuccessor: v56 #falseSuccessor: v57  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B187"
    from_bci -1
    to_bci -1
    predecessors "B186" 
    successors "B188" "B189" 
    xhandlers
    flags 
    probability 4586473879993340259
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v56 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.split(String.java:2364) [bci: 210]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2845 
=== Usages ===
=== Predecessor ===
v58 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2845  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2845 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j2860 
=== Usages ===
v4447 v4448 
=== Predecessor ===
v56 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j2860  <|@  <|@
f <@~|@floating>@ <|@
tid v4447 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j2845 
index: - 
=== Succesors ===
=== Usages ===
j2860 v2862 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2845 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2860 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v4447 
=== Succesors ===
next: j2861 
=== Usages ===
j3240 j2866 v4500 
=== Predecessor ===
j2845 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4447 #next: j2861  <|@  <|@
f <@~|@floating>@ <|@
tid v4448 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j2845 
index: - 
=== Succesors ===
=== Usages ===
j2861 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2845 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2861 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v4448 
=== Succesors ===
next: v2853 
=== Usages ===
v2850 
=== Predecessor ===
j2860 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4448 #next: v2853  <|@  <|@
f <@~|@floating>@ <|@
tid j3240 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2860 
y: j3225 
=== Succesors ===
=== Usages ===
v2850 v2862 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2860 y: j3225  <|@  <|@
f <@~|@floating>@ <|@
tid v2850 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2861 
y: j3240 
=== Succesors ===
=== Usages ===
v2853 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j2861 y: j3240  <|@  <|@
f <@*|@fixed>@ <|@
tid v2853 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v2850 
=== Succesors ===
trueSuccessor: v2851 
falseSuccessor: v2852 
=== Usages ===
=== Predecessor ===
j2861 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2850 #trueSuccessor: v2851 #falseSuccessor: v2852  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B188"
    from_bci -1
    to_bci -1
    predecessors "B187" 
    successors "B190" 
    xhandlers
    flags 
    probability 4556716339109859626
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2851 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a2856 
=== Usages ===
=== Predecessor ===
v2853 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2856  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2856 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?1489 
arguments: v2582 i1663 i8 
=== Succesors ===
next: j2857 
=== Usages ===
j2857 
=== Predecessor ===
v2851 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?1489 arguments: v2582 i1663 i8 #next: j2857  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2857 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a2856 
=== Succesors ===
next: v2867 
=== Usages ===
j2866 
=== Predecessor ===
a2856 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a2856 #next: v2867  <|@  <|@
f <@*|@fixed>@ <|@
tid v2867 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2864 
=== Predecessor ===
j2857 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B189"
    from_bci -1
    to_bci -1
    predecessors "B187" 
    successors "B190" 
    xhandlers
    flags 
    probability 4586410749403764801
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2852 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2862 
=== Usages ===
=== Predecessor ===
v2853 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2862  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2862 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4447 
value: j3240 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2859 
=== Usages ===
=== Predecessor ===
v2852 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4447 value: j3240 stateAfter: - lastLocationAccess: - #next: v2859  <|@  <|@
f <@~|@floating>@ <|@
tid v4500 <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j2860 
index: - 
=== Succesors ===
=== Usages ===
v2859 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2860 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2859 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v4500 
=== Succesors ===
next: v2865 
=== Usages ===
=== Predecessor ===
v2862 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v4500 #next: v2865  <|@  <|@
f <@*|@fixed>@ <|@
tid v2865 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2864 
=== Predecessor ===
v2859 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B190"
    from_bci -1
    to_bci -1
    predecessors "B189" "B188" 
    successors 
    xhandlers
    flags 
    probability 4586473879993340259
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2866 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2864 
values: j2860 j2857 
=== Succesors ===
=== Usages ===
v4451 v4409 a2071 v4449 v4450 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2864 values: j2860 j2857  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2864 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2865 v2867 
=== Succesors ===
next: a2071 
=== Usages ===
j2866 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2865 v2867 #next: a2071  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2071 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j2866 
=== Succesors ===
next: v2876 
=== Usages ===
a2077 
=== Predecessor ===
v2864 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j2866 #next: v2876  <|@  <|@
f <@~|@floating>@ <|@
tid v4449 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j2866 
index: - 
=== Succesors ===
=== Usages ===
v2876 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2866 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2876 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4449 
value: i8 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2877 
=== Usages ===
=== Predecessor ===
a2071 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4449 value: i8 stateAfter: - lastLocationAccess: - #next: v2877  <|@  <|@
f <@~|@floating>@ <|@
tid v4450 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2866 
index: - 
=== Succesors ===
=== Usages ===
v2877 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2866 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2877 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4450 
value: j2632 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2880 
=== Usages ===
=== Predecessor ===
v2876 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4450 value: j2632 stateAfter: - lastLocationAccess: - #next: v2880  <|@  <|@
f <@~|@floating>@ <|@
tid v4451 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j2866 
index: - 
=== Succesors ===
=== Usages ===
v2880 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2866 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2880 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4451 
value: v3243 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2076 
=== Usages ===
=== Predecessor ===
v2877 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4451 value: v3243 stateAfter: - lastLocationAccess: - #next: v2076  <|@  <|@
f <@~|@floating>@ <|@
tid v4409 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j2866 
index: - 
=== Succesors ===
=== Usages ===
v2076 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2866 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a2074 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n!# Ljava/lang/String;
=== Inputs ===
value: a1 
=== Succesors ===
=== Usages ===
v2076 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2076 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4409 
value: a2074 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a2077 
=== Usages ===
=== Predecessor ===
v2880 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4409 value: a2074 stateAfter: - lastLocationAccess: - #next: a2077  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2077 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a2071 
=== Succesors ===
next: v2078 
=== Usages ===
v62 
=== Predecessor ===
v2076 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a2071 #next: v2078  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2078 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v62 
=== Usages ===
=== Predecessor ===
a2077 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v62  <|@  <|@
f <@*|@fixed>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.split(String.java:2364) [bci: 218]
stamp: void
=== Inputs ===
result: a2077 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2078 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a2077 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B191"
    from_bci -1
    to_bci -1
    predecessors "B186" 
    successors "B192" "B193" 
    xhandlers
    flags 
    probability 4614149855044251816
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.split(String.java:2367) [bci: 219]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1963 
=== Usages ===
=== Predecessor ===
v58 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1963  <|@  <|@
f <@~|@floating>@ <|@
tid v356 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.substring(String.java:1966) [bci: 36]
at java.lang.String.split(String.java:2368) [bci: 243]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i355 
y: i5 
=== Succesors ===
=== Usages ===
v1963 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i355 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v1963 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1966) [bci: 36]
at java.lang.String.split(String.java:2368) [bci: 243]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v356 
=== Succesors ===
trueSuccessor: v1962 
falseSuccessor: v1960 
=== Usages ===
=== Predecessor ===
v57 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v356 #trueSuccessor: v1962 #falseSuccessor: v1960  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B192"
    from_bci -1
    to_bci -1
    predecessors "B191" 
    successors "B203" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1962 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1966) [bci: 36]
at java.lang.String.split(String.java:2368) [bci: 243]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2524 
=== Usages ===
=== Predecessor ===
v1963 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2524  <|@  <|@
f <@~|@floating>@ <|@
tid i2525 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -430867
stableDimension: 0
stamp: i32 [-430867] ⇊00000000fff96ced ⇈00000000fff96ced
stampKind: i32
value: int[-430867|0xfffffffffff96ced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2526 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2524 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2523 
=== Predecessor ===
v1962 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B193"
    from_bci -1
    to_bci -1
    predecessors "B191" 
    successors "B194" "B201" 
    xhandlers
    flags 
    probability 4614149855044251816
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1960 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1966) [bci: 36]
at java.lang.String.split(String.java:2368) [bci: 243]
stamp: void
=== Inputs ===
=== Succesors ===
next: v563 
=== Usages ===
=== Predecessor ===
v1963 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v563  <|@  <|@
f <@~|@floating>@ <|@
tid i396 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:235) [bci: 6]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: i32
=== Inputs ===
x: i503 
y: i8 
=== Succesors ===
=== Usages ===
?1007 i240 v4344 i240 ?1467 v4343 ?1467 i240 ?1002 i240 i79 v186 v587 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i503 y: i8  <|@  <|@
f <@~|@floating>@ <|@
tid v227 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.ArrayList.calculateCapacity(ArrayList.java:224) [bci: 4]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a505 
y: a127 
=== Succesors ===
=== Usages ===
v230 v1441 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a505 y: a127  <|@  <|@
f <@~|@floating>@ <|@
tid v4350 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.<init>(String.java:198) [bci: 37]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4359 
y: i34 
=== Succesors ===
=== Usages ===
v1967 v2248 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i4359 y: i34  <|@  <|@
f <@~|@floating>@ <|@
tid v560 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.<init>(String.java:194) [bci: 18]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2368) [bci: 243]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i355 
y: i8 
=== Succesors ===
=== Usages ===
v563 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i355 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v563 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:194) [bci: 18]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2368) [bci: 243]
stamp: void
trueSuccessorProbability: 0.09284041465770032
=== Inputs ===
condition: v560 
=== Succesors ===
trueSuccessor: v561 
falseSuccessor: v562 
=== Usages ===
=== Predecessor ===
v1960 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v560 #trueSuccessor: v561 #falseSuccessor: v562  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B194"
    from_bci -1
    to_bci -1
    predecessors "B193" 
    successors "B195" "B196" 
    xhandlers
    flags 
    probability 4598846497278032421
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v561 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:195) [bci: 21]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2368) [bci: 243]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1967 
=== Usages ===
=== Predecessor ===
v563 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1967  <|@  <|@
f <@*|@fixed>@ <|@
tid v1967 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:198) [bci: 37]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2368) [bci: 243]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v4350 
=== Succesors ===
trueSuccessor: v1966 
falseSuccessor: v1964 
=== Usages ===
=== Predecessor ===
v561 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4350 #trueSuccessor: v1966 #falseSuccessor: v1964  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B195"
    from_bci -1
    to_bci -1
    predecessors "B194" 
    successors "B203" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1966 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:198) [bci: 37]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2368) [bci: 243]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2529 
=== Usages ===
=== Predecessor ===
v1967 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2529  <|@  <|@
f <@~|@floating>@ <|@
tid i2530 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -452627
stableDimension: 0
stamp: i32 [-452627] ⇊00000000fff917ed ⇈00000000fff917ed
stampKind: i32
value: int[-452627|0xfffffffffff917ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2526 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2529 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2523 
=== Predecessor ===
v1966 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B196"
    from_bci -1
    to_bci -1
    predecessors "B194" 
    successors "B197" "B200" 
    xhandlers
    flags 
    probability 4598846497278032421
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1964 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:198) [bci: 37]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2368) [bci: 243]
stamp: void
=== Inputs ===
=== Succesors ===
next: v230 
=== Usages ===
=== Predecessor ===
v1967 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v230  <|@  <|@
f <@~|@floating>@ <|@
tid a452 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.<init>(String.java:199) [bci: 43]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
rawvalue: char[0]{}
stableDimension: 1
stamp: a!# [C
stampKind: a -
value: Object[char[0]{}]
=== Inputs ===
=== Succesors ===
=== Usages ===
a1578 a1578 a1578 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.calculateCapacity(ArrayList.java:224) [bci: 4]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: void
trueSuccessorProbability: 0.2066504369952622
=== Inputs ===
condition: v227 
=== Succesors ===
trueSuccessor: v228 
falseSuccessor: v229 
=== Usages ===
=== Predecessor ===
v1964 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v227 #trueSuccessor: v228 #falseSuccessor: v229  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B197"
    from_bci -1
    to_bci -1
    predecessors "B196" 
    successors "B198" "B199" 
    xhandlers
    flags 
    probability 4588715946378730674
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v228 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.calculateCapacity(ArrayList.java:225) [bci: 7]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: void
=== Inputs ===
=== Succesors ===
next: v234 
=== Usages ===
=== Predecessor ===
v230 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v234  <|@  <|@
f <@~|@floating>@ <|@
tid v4343 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at java.util.ArrayList.calculateCapacity(ArrayList.java:225) [bci: 10]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i396 
y: i194 
=== Succesors ===
=== Usages ===
v234 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i396 y: i194  <|@  <|@
f <@*|@fixed>@ <|@
tid v234 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at java.util.ArrayList.calculateCapacity(ArrayList.java:225) [bci: 10]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: void
trueSuccessorProbability: 0.7308950256495741
=== Inputs ===
condition: v4343 
=== Succesors ===
trueSuccessor: v232 
falseSuccessor: v233 
=== Usages ===
=== Predecessor ===
v228 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4343 #trueSuccessor: v232 #falseSuccessor: v233  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B198"
    from_bci -1
    to_bci -1
    predecessors "B197" 
    successors "B232" 
    xhandlers
    flags 
    probability 4586413719592755138
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v232 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 5]
at java.util.ArrayList.calculateCapacity(ArrayList.java:225) [bci: 10]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: void
=== Inputs ===
=== Succesors ===
next: v241 
=== Usages ===
=== Predecessor ===
v234 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v241  <|@  <|@
f <@*|@fixed>@ <|@
tid v241 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v238 
=== Predecessor ===
v232 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B199"
    from_bci -1
    to_bci -1
    predecessors "B197" 
    successors "B232" 
    xhandlers
    flags 
    probability 4580261674980375008
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v233 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 9]
at java.util.ArrayList.calculateCapacity(ArrayList.java:225) [bci: 10]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: void
=== Inputs ===
=== Succesors ===
next: v242 
=== Usages ===
=== Predecessor ===
v234 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v242  <|@  <|@
f <@*|@fixed>@ <|@
tid v242 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v238 
=== Predecessor ===
v233 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B200"
    from_bci -1
    to_bci -1
    predecessors "B196" 
    successors "B232" 
    xhandlers
    flags 
    probability 4597378993675054365
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v229 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.calculateCapacity(ArrayList.java:227) [bci: 14]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: void
=== Inputs ===
=== Succesors ===
next: v239 
=== Usages ===
=== Predecessor ===
v230 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v239  <|@  <|@
f <@*|@fixed>@ <|@
tid v239 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v238 
=== Predecessor ===
v229 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B201"
    from_bci -1
    to_bci -1
    predecessors "B193" 
    successors "B202" "B204" 
    xhandlers
    flags 
    probability 4613502995374236003
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v562 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 50]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2368) [bci: 243]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2248 
=== Usages ===
=== Predecessor ===
v563 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2248  <|@  <|@
f <@*|@fixed>@ <|@
tid v2248 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:186) [bci: 52]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2368) [bci: 243]
stamp: void
trueSuccessorProbability: 9.999999999998899E-5
=== Inputs ===
condition: v4350 
=== Succesors ===
trueSuccessor: v2247 
falseSuccessor: v2245 
=== Usages ===
=== Predecessor ===
v562 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4350 #trueSuccessor: v2247 #falseSuccessor: v2245  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B202"
    from_bci -1
    to_bci -1
    predecessors "B201" 
    successors "B203" 
    xhandlers
    flags 
    probability 4553813439973800263
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2247 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:187) [bci: 55]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2368) [bci: 243]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2567 
=== Usages ===
=== Predecessor ===
v2248 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2567  <|@  <|@
f <@~|@floating>@ <|@
tid i2532 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -575841
stableDimension: 0
stamp: i32 [-575841] ⇊00000000fff7369f ⇈00000000fff7369f
stampKind: i32
value: int[-575841|0xfffffffffff7369f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2526 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2567 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:187) [bci: 55]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2368) [bci: 243]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2523 
=== Predecessor ===
v2247 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B203"
    from_bci -1
    to_bci -1
    predecessors "B192" "B195" "B202" 
    successors 
    xhandlers
    flags 
    probability 4553813439973800263
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i2526 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-575841 - -430867] ⇊00000000fff1048d ⇈00000000ffff7fff
valueDescription: i32
=== Inputs ===
merge: v2523 
values: i2525 i2530 i2532 
=== Succesors ===
=== Usages ===
v2528 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2523 values: i2525 i2530 i2532  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2523 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2524 v2529 v2567 
=== Succesors ===
next: v2528 
=== Usages ===
i2526 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2524 v2529 v2567 #next: v2528  <|@  <|@
f <@*|@fixed>@ <|@
tid v2528 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?1489 
actionAndReason: i2526 
speculation: a2214 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2523 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?1489 actionAndReason: i2526 speculation: a2214  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B204"
    from_bci -1
    to_bci -1
    predecessors "B201" 
    successors "B205" "B208" 
    xhandlers
    flags 
    probability 4613502363316578581
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2245 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:189) [bci: 64]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2368) [bci: 243]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2885 
=== Usages ===
=== Predecessor ===
v2248 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2885  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2885 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2368) [bci: 243]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j2921 
=== Usages ===
v4452 v4453 
=== Predecessor ===
v2245 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j2921  <|@  <|@
f <@~|@floating>@ <|@
tid v4452 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j2885 
index: - 
=== Succesors ===
=== Usages ===
j2921 v2923 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2885 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2921 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2368) [bci: 243]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v4452 
=== Succesors ===
next: j2922 
=== Usages ===
j2889 v4454 v4455 a2904 v4460 v4456 v4457 v4458 v4459 
=== Predecessor ===
j2885 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4452 #next: j2922  <|@  <|@
f <@~|@floating>@ <|@
tid v4453 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j2885 
index: - 
=== Succesors ===
=== Usages ===
j2922 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2885 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2922 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2368) [bci: 243]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v4453 
=== Succesors ===
next: v2893 
=== Usages ===
v2894 
=== Predecessor ===
j2921 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4453 #next: v2893  <|@  <|@
f <@~|@floating>@ <|@
tid v2890 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2368) [bci: 243]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i355 
y: i2641 
=== Succesors ===
=== Usages ===
v2893 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i355 y: i2641  <|@  <|@
f <@*|@fixed>@ <|@
tid v2893 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2368) [bci: 243]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v2890 
=== Succesors ===
trueSuccessor: v2892 
falseSuccessor: v2891 
=== Usages ===
=== Predecessor ===
j2922 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2890 #trueSuccessor: v2892 #falseSuccessor: v2891  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B205"
    from_bci -1
    to_bci -1
    predecessors "B204" 
    successors "B206" "B207" 
    xhandlers
    flags 
    probability 4612870368864922464
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2892 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2368) [bci: 243]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2900 
=== Usages ===
=== Predecessor ===
v2893 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2900  <|@  <|@
f <@~|@floating>@ <|@
tid i2883 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2368) [bci: 243]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i355 
y: i8 
=== Succesors ===
=== Usages ===
i2912 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i355 y: i8  <|@  <|@
f <@~|@floating>@ <|@
tid i2912 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2368) [bci: 243]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i2883 
y: i2664 
=== Succesors ===
=== Usages ===
i2884 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2883 y: i2664  <|@  <|@
f <@~|@floating>@ <|@
tid i2884 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2368) [bci: 243]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i2912 
y: i2634 
=== Succesors ===
=== Usages ===
j2888 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i2912 y: i2634  <|@  <|@
f <@~|@floating>@ <|@
tid j2888 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2368) [bci: 243]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i2884 
=== Succesors ===
=== Usages ===
j2889 v4456 v4457 v4458 v4459 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2884  <|@  <|@
f <@~|@floating>@ <|@
tid j2889 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2368) [bci: 243]
stamp: i64
=== Inputs ===
x: j2888 
y: j2921 
=== Succesors ===
=== Usages ===
v2894 v2923 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2888 y: j2921  <|@  <|@
f <@~|@floating>@ <|@
tid v2894 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2368) [bci: 243]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2922 
y: j2889 
=== Succesors ===
=== Usages ===
v2900 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j2922 y: j2889  <|@  <|@
f <@*|@fixed>@ <|@
tid v2900 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2368) [bci: 243]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v2894 
=== Succesors ===
trueSuccessor: v2899 
falseSuccessor: v2898 
=== Usages ===
=== Predecessor ===
v2892 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2894 #trueSuccessor: v2899 #falseSuccessor: v2898  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B206"
    from_bci -1
    to_bci -1
    predecessors "B205" 
    successors "B209" 
    xhandlers
    flags 
    probability 4582937797491502414
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2899 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2368) [bci: 243]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2897 
=== Usages ===
=== Predecessor ===
v2900 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2897  <|@  <|@
f <@*|@fixed>@ <|@
tid v2897 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2368) [bci: 243]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2896 
=== Predecessor ===
v2899 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B207"
    from_bci -1
    to_bci -1
    predecessors "B205" 
    successors "B210" 
    xhandlers
    flags 
    probability 4612813489364273413
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2898 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2368) [bci: 243]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2923 
=== Usages ===
=== Predecessor ===
v2900 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2923  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2923 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2368) [bci: 243]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4452 
value: j2889 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2914 
=== Usages ===
=== Predecessor ===
v2898 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4452 value: j2889 stateAfter: - lastLocationAccess: - #next: v2914  <|@  <|@
f <@~|@floating>@ <|@
tid v4456 <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j2888 
index: j2921 
=== Succesors ===
=== Usages ===
v2914 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2888 index: j2921  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2914 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2368) [bci: 243]
stamp: void
=== Inputs ===
address: v4456 
=== Succesors ===
next: v2916 
=== Usages ===
=== Predecessor ===
v2923 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v4456 #next: v2916  <|@  <|@
f <@~|@floating>@ <|@
tid v4457 <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j2888 
index: j2921 
=== Succesors ===
=== Usages ===
v2916 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2888 index: j2921  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2916 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2368) [bci: 243]
stamp: void
=== Inputs ===
address: v4457 
=== Succesors ===
next: v2918 
=== Usages ===
=== Predecessor ===
v2914 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v4457 #next: v2918  <|@  <|@
f <@~|@floating>@ <|@
tid v4458 <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j2888 
index: j2921 
=== Succesors ===
=== Usages ===
v2918 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2888 index: j2921  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2918 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2368) [bci: 243]
stamp: void
=== Inputs ===
address: v4458 
=== Succesors ===
next: v2920 
=== Usages ===
=== Predecessor ===
v2916 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v4458 #next: v2920  <|@  <|@
f <@~|@floating>@ <|@
tid v4459 <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j2888 
index: j2921 
=== Succesors ===
=== Usages ===
v2920 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2888 index: j2921  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2920 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2368) [bci: 243]
stamp: void
=== Inputs ===
address: v4459 
=== Succesors ===
next: v2924 
=== Usages ===
=== Predecessor ===
v2918 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v4459 #next: v2924  <|@  <|@
f <@~|@floating>@ <|@
tid v4454 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j2921 
index: - 
=== Succesors ===
=== Usages ===
v2924 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2921 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2924 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2368) [bci: 243]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4454 
value: i355 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2925 
=== Usages ===
=== Predecessor ===
v2920 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4454 value: i355 stateAfter: - lastLocationAccess: - #next: v2925  <|@  <|@
f <@~|@floating>@ <|@
tid v4455 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2921 
index: - 
=== Succesors ===
=== Usages ===
v2925 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2921 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2925 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2368) [bci: 243]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4455 
value: j2632 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2928 
=== Usages ===
=== Predecessor ===
v2924 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4455 value: j2632 stateAfter: - lastLocationAccess: - #next: v2928  <|@  <|@
f <@~|@floating>@ <|@
tid v4460 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j2921 
index: - 
=== Succesors ===
=== Usages ===
v2928 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2921 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2928 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2368) [bci: 243]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4460 
value: v3233 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2903 
=== Usages ===
=== Predecessor ===
v2925 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4460 value: v3233 stateAfter: - lastLocationAccess: - #next: v2903  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2903 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2368) [bci: 243]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2904 
=== Usages ===
=== Predecessor ===
v2928 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a2904  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2904 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2368) [bci: 243]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j2921 
=== Succesors ===
next: v2906 
=== Usages ===
a2909 
=== Predecessor ===
v2903 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j2921 #next: v2906  <|@  <|@
f <@*|@fixed>@ <|@
tid v2906 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2368) [bci: 243]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2907 
=== Predecessor ===
a2904 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B208"
    from_bci -1
    to_bci -1
    predecessors "B204" 
    successors "B209" 
    xhandlers
    flags 
    probability 4598727575531154857
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2891 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2368) [bci: 243]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2895 
=== Usages ===
=== Predecessor ===
v2893 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2895  <|@  <|@
f <@*|@fixed>@ <|@
tid v2895 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2368) [bci: 243]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2896 
=== Predecessor ===
v2891 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B209"
    from_bci -1
    to_bci -1
    predecessors "B208" "B206" 
    successors "B210" 
    xhandlers
    flags 
    probability 4599182611536347262
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2896 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2368) [bci: 243]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2895 v2897 
=== Succesors ===
next: a2905 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2895 v2897 #next: a2905  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2905 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2368) [bci: 243]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?1489 
arguments: v2631 i355 i5 
=== Succesors ===
next: v2908 
=== Usages ===
a2909 
=== Predecessor ===
v2896 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?1489 arguments: v2631 i355 i5 #next: v2908  <|@  <|@
f <@*|@fixed>@ <|@
tid v2908 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2368) [bci: 243]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2907 
=== Predecessor ===
a2905 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B210"
    from_bci -1
    to_bci -1
    predecessors "B207" "B209" 
    successors "B211" "B212" 
    xhandlers
    flags 
    probability 4613502363316578581
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a2909 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2368) [bci: 243]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v2907 
values: a2904 a2905 
=== Succesors ===
=== Usages ===
v4414 a2339 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2907 values: a2904 a2905  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2907 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2368) [bci: 243]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2906 v2908 
=== Succesors ===
next: v3755 
=== Usages ===
a2909 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2906 v2908 #next: v3755  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3755 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v3283 
=== Usages ===
j3756 j3758 
=== Predecessor ===
v2907 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v3283  <|@  <|@
f <@~|@floating>@ <|@
tid v4414 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a2909 
index: - 
=== Succesors ===
=== Usages ===
j3758 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2909 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j3758 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v3755 
address: v4414 
=== Succesors ===
=== Usages ===
v4510 v4512 v4514 v4516 v4518 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v3755 address: v4414  <|@  <|@
f <@~|@floating>@ <|@
tid j4352 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i34 
=== Succesors ===
=== Usages ===
v4563 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i34  <|@  <|@
f <@~|@floating>@ <|@
tid v4563 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a1636 
index: j4352 
=== Succesors ===
=== Usages ===
j3756 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1636 index: j4352  <|@  <|@
f <@~|@floating>@ <|@
tid j3756 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v3755 
address: v4563 
=== Succesors ===
=== Usages ===
v4511 v4513 v4515 v4517 v4519 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v3755 address: v4563  <|@  <|@
f <@~|@floating>@ <|@
tid j4354 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i355 
=== Succesors ===
=== Usages ===
j3802 j3808 j3812 j3816 j4353 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i355  <|@  <|@
f <@~|@floating>@ <|@
tid j3802 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483664 - 2147483631]
=== Inputs ===
x: j4354 
y: j3801 
=== Succesors ===
=== Usages ===
v3803 v3805 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j4354 y: j3801  <|@  <|@
f <@~|@floating>@ <|@
tid v3803 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3802 
y: j2049 
=== Succesors ===
=== Usages ===
v3283 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3802 y: j2049  <|@  <|@
f <@*|@fixed>@ <|@
tid v3283 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v3803 
=== Succesors ===
trueSuccessor: v3281 
falseSuccessor: v3282 
=== Usages ===
=== Predecessor ===
v3755 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3803 #trueSuccessor: v3281 #falseSuccessor: v3282  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B211"
    from_bci -1
    to_bci -1
    predecessors "B210" 
    successors "B215" 
    xhandlers
    flags 
    probability 4611922377187438288
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3281 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3293 
=== Usages ===
=== Predecessor ===
v3283 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3293  <|@  <|@
f <@*|@fixed>@ <|@
tid v3293 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3294 
=== Predecessor ===
v3281 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B212"
    from_bci -1
    to_bci -1
    predecessors "B210" 
    successors "B213" 
    xhandlers
    flags 
    probability 4604495164061837589
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3282 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3284 
=== Usages ===
=== Predecessor ===
v3283 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3284  <|@  <|@
f <@*|@fixed>@ <|@
tid v3284 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3285 
=== Predecessor ===
v3282 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B213"
    from_bci -1
    to_bci -1
    predecessors "B212" "B358" 
    successors "B214" "B358" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 1
    probability 4613502363316578581
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3793 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3285 
values: j2049 j3800 
=== Succesors ===
=== Usages ===
v4519 j3800 v4518 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3285 values: j2049 j3800  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3285 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v3284 
=== Succesors ===
next: v4373 
=== Usages ===
v4373 v3289 v3290 j3793 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v3284 #next: v4373  <|@  <|@
f <@~|@floating>@ <|@
tid v4519 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3756 
index: j3793 
=== Succesors ===
=== Usages ===
v4373 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3756 index: j3793  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4373 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v3285 
address: v4519 
=== Succesors ===
next: v4190 
=== Usages ===
v4190 
=== Predecessor ===
v3285 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v3285 address: v4519 #next: v4190  <|@  <|@
f <@~|@floating>@ <|@
tid v4518 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3758 
index: j3793 
=== Succesors ===
=== Usages ===
v4190 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3758 index: j3793  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4190 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4518 
value: v4373 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3292 
=== Usages ===
=== Predecessor ===
v4373 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4518 value: v4373 stateAfter: - lastLocationAccess: - #next: v3292  <|@  <|@
f <@~|@floating>@ <|@
tid j3800 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3793 
y: j1626 
=== Succesors ===
=== Usages ===
j3785 j3793 v3805 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3793 y: j1626  <|@  <|@
f <@~|@floating>@ <|@
tid v3805 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3802 
y: j3800 
=== Succesors ===
=== Usages ===
v3292 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3802 y: j3800  <|@  <|@
f <@*|@fixed>@ <|@
tid v3292 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3805 
=== Succesors ===
trueSuccessor: v3289 
falseSuccessor: v3291 
=== Usages ===
=== Predecessor ===
v4190 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3805 #trueSuccessor: v3289 #falseSuccessor: v3291  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B214"
    from_bci -1
    to_bci -1
    predecessors "B213" 
    successors "B215" 
    xhandlers
    flags 
    probability 4604495164061837589
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3289 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v3285 
=== Succesors ===
next: v3295 
=== Usages ===
=== Predecessor ===
v3292 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v3285 #next: v3295  <|@  <|@
f <@*|@fixed>@ <|@
tid v3295 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3294 
=== Predecessor ===
v3289 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B215"
    from_bci -1
    to_bci -1
    predecessors "B211" "B214" 
    successors "B216" "B217" 
    xhandlers
    flags 
    probability 4613502363316578581
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3785 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3294 
values: j2049 j3800 
=== Succesors ===
=== Usages ===
v4517 j3792 j3776 v3809 v4516 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3294 values: j2049 j3800  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3294 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3293 v3295 
=== Succesors ===
next: v3317 
=== Usages ===
j3785 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3293 v3295 #next: v3317  <|@  <|@
f <@~|@floating>@ <|@
tid j3808 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j4354 
y: j3807 
=== Succesors ===
=== Usages ===
v3809 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j4354 y: j3807  <|@  <|@
f <@~|@floating>@ <|@
tid v3809 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3808 
y: j3785 
=== Succesors ===
=== Usages ===
v3317 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3808 y: j3785  <|@  <|@
f <@*|@fixed>@ <|@
tid v3317 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3809 
=== Succesors ===
trueSuccessor: v3316 
falseSuccessor: v3315 
=== Usages ===
=== Predecessor ===
v3294 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3809 #trueSuccessor: v3316 #falseSuccessor: v3315  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B216"
    from_bci -1
    to_bci -1
    predecessors "B215" 
    successors "B218" 
    xhandlers
    flags 
    probability 4604495164061837589
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3316 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3320 
=== Usages ===
=== Predecessor ===
v3317 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3320  <|@  <|@
f <@*|@fixed>@ <|@
tid v3320 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3305 
=== Predecessor ===
v3316 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B217"
    from_bci -1
    to_bci -1
    predecessors "B215" 
    successors "B218" 
    xhandlers
    flags 
    probability 4611922377187438288
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3315 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4374 
=== Usages ===
v4374 
=== Predecessor ===
v3317 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4374  <|@  <|@
f <@~|@floating>@ <|@
tid v4517 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3756 
index: j3785 
=== Succesors ===
=== Usages ===
v4374 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3756 index: j3785  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4374 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v3315 
address: v4517 
=== Succesors ===
next: v4188 
=== Usages ===
v4188 
=== Predecessor ===
v3315 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v3315 address: v4517 #next: v4188  <|@  <|@
f <@~|@floating>@ <|@
tid v4516 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3758 
index: j3785 
=== Succesors ===
=== Usages ===
v4188 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3758 index: j3785  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4188 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4516 
value: v4374 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3304 
=== Usages ===
=== Predecessor ===
v4374 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4516 value: v4374 stateAfter: - lastLocationAccess: - #next: v3304  <|@  <|@
f <@~|@floating>@ <|@
tid j3792 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3785 
y: j2577 
=== Succesors ===
=== Usages ===
j3776 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3785 y: j2577  <|@  <|@
f <@*|@fixed>@ <|@
tid v3304 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3305 
=== Predecessor ===
v4188 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B218"
    from_bci -1
    to_bci -1
    predecessors "B217" "B216" 
    successors "B219" "B220" 
    xhandlers
    flags 
    probability 4613502363316578581
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3776 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3305 
values: j3792 j3785 
=== Succesors ===
=== Usages ===
v4515 j3784 j3768 v3813 v4514 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3305 values: j3792 j3785  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3305 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3304 v3320 
=== Succesors ===
next: v3323 
=== Usages ===
j3776 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3304 v3320 #next: v3323  <|@  <|@
f <@~|@floating>@ <|@
tid j3812 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j4354 
y: j3811 
=== Succesors ===
=== Usages ===
v3813 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j4354 y: j3811  <|@  <|@
f <@~|@floating>@ <|@
tid v3813 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3812 
y: j3776 
=== Succesors ===
=== Usages ===
v3323 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3812 y: j3776  <|@  <|@
f <@*|@fixed>@ <|@
tid v3323 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3813 
=== Succesors ===
trueSuccessor: v3322 
falseSuccessor: v3321 
=== Usages ===
=== Predecessor ===
v3305 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3813 #trueSuccessor: v3322 #falseSuccessor: v3321  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B219"
    from_bci -1
    to_bci -1
    predecessors "B218" 
    successors "B221" 
    xhandlers
    flags 
    probability 4604495164061837589
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3322 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3326 
=== Usages ===
=== Predecessor ===
v3323 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3326  <|@  <|@
f <@*|@fixed>@ <|@
tid v3326 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3309 
=== Predecessor ===
v3322 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B220"
    from_bci -1
    to_bci -1
    predecessors "B218" 
    successors "B221" 
    xhandlers
    flags 
    probability 4611922377187438288
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3321 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4375 
=== Usages ===
v4375 
=== Predecessor ===
v3323 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4375  <|@  <|@
f <@~|@floating>@ <|@
tid v4515 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3756 
index: j3776 
=== Succesors ===
=== Usages ===
v4375 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3756 index: j3776  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4375 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v3321 
address: v4515 
=== Succesors ===
next: v4186 
=== Usages ===
v4186 
=== Predecessor ===
v3321 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v3321 address: v4515 #next: v4186  <|@  <|@
f <@~|@floating>@ <|@
tid v4514 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3758 
index: j3776 
=== Succesors ===
=== Usages ===
v4186 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3758 index: j3776  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4186 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4514 
value: v4375 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3308 
=== Usages ===
=== Predecessor ===
v4375 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4514 value: v4375 stateAfter: - lastLocationAccess: - #next: v3308  <|@  <|@
f <@~|@floating>@ <|@
tid j3784 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3776 
y: j3783 
=== Succesors ===
=== Usages ===
j3768 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3776 y: j3783  <|@  <|@
f <@*|@fixed>@ <|@
tid v3308 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3309 
=== Predecessor ===
v4186 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B221"
    from_bci -1
    to_bci -1
    predecessors "B220" "B219" 
    successors "B222" "B223" 
    xhandlers
    flags 
    probability 4613502363316578581
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3768 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3309 
values: j3784 j3776 
=== Succesors ===
=== Usages ===
v4513 j3775 j3759 v3817 v4512 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3309 values: j3784 j3776  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3309 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3308 v3326 
=== Succesors ===
next: v3329 
=== Usages ===
j3768 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3308 v3326 #next: v3329  <|@  <|@
f <@~|@floating>@ <|@
tid j3816 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j4354 
y: j3815 
=== Succesors ===
=== Usages ===
v3817 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j4354 y: j3815  <|@  <|@
f <@~|@floating>@ <|@
tid v3817 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3816 
y: j3768 
=== Succesors ===
=== Usages ===
v3329 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3816 y: j3768  <|@  <|@
f <@*|@fixed>@ <|@
tid v3329 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3817 
=== Succesors ===
trueSuccessor: v3328 
falseSuccessor: v3327 
=== Usages ===
=== Predecessor ===
v3309 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3817 #trueSuccessor: v3328 #falseSuccessor: v3327  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B222"
    from_bci -1
    to_bci -1
    predecessors "B221" 
    successors "B224" 
    xhandlers
    flags 
    probability 4604495164061837589
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3328 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3332 
=== Usages ===
=== Predecessor ===
v3329 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3332  <|@  <|@
f <@*|@fixed>@ <|@
tid v3332 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3312 
=== Predecessor ===
v3328 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B223"
    from_bci -1
    to_bci -1
    predecessors "B221" 
    successors "B224" 
    xhandlers
    flags 
    probability 4611922377187438288
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3327 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4376 
=== Usages ===
v4376 
=== Predecessor ===
v3329 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4376  <|@  <|@
f <@~|@floating>@ <|@
tid v4513 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3756 
index: j3768 
=== Succesors ===
=== Usages ===
v4376 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3756 index: j3768  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4376 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16>
=== Inputs ===
stateBefore: - 
guard: v3327 
address: v4513 
=== Succesors ===
next: v4184 
=== Usages ===
v4184 
=== Predecessor ===
v3327 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v3327 address: v4513 #next: v4184  <|@  <|@
f <@~|@floating>@ <|@
tid v4512 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3758 
index: j3768 
=== Succesors ===
=== Usages ===
v4184 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3758 index: j3768  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4184 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4512 
value: v4376 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3311 
=== Usages ===
=== Predecessor ===
v4376 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4512 value: v4376 stateAfter: - lastLocationAccess: - #next: v3311  <|@  <|@
f <@~|@floating>@ <|@
tid j3775 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3768 
y: j3761 
=== Succesors ===
=== Usages ===
j3759 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3768 y: j3761  <|@  <|@
f <@*|@fixed>@ <|@
tid v3311 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3312 
=== Predecessor ===
v4184 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B224"
    from_bci -1
    to_bci -1
    predecessors "B223" "B222" 
    successors "B225" "B226" 
    xhandlers
    flags 
    probability 4613502363316578581
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3759 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3312 
values: j3775 j3768 
=== Succesors ===
=== Usages ===
v4511 v3819 v4510 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3312 values: j3775 j3768  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3312 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3311 v3332 
=== Succesors ===
next: v3335 
=== Usages ===
j3759 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3311 v3332 #next: v3335  <|@  <|@
f <@~|@floating>@ <|@
tid j4353 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j4354 
y: j1816 
=== Succesors ===
=== Usages ===
v3819 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j4354 y: j1816  <|@  <|@
f <@~|@floating>@ <|@
tid v3819 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j4353 
y: j3759 
=== Succesors ===
=== Usages ===
v3335 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j4353 y: j3759  <|@  <|@
f <@*|@fixed>@ <|@
tid v3335 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3819 
=== Succesors ===
trueSuccessor: v3334 
falseSuccessor: v3333 
=== Usages ===
=== Predecessor ===
v3312 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3819 #trueSuccessor: v3334 #falseSuccessor: v3333  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B225"
    from_bci -1
    to_bci -1
    predecessors "B224" 
    successors "B227" 
    xhandlers
    flags 
    probability 4604495164061837589
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3334 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3338 
=== Usages ===
=== Predecessor ===
v3335 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3338  <|@  <|@
f <@*|@fixed>@ <|@
tid v3338 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3298 
=== Predecessor ===
v3334 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B226"
    from_bci -1
    to_bci -1
    predecessors "B224" 
    successors "B227" 
    xhandlers
    flags 
    probability 4611922377187438288
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3333 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i4377 
=== Usages ===
i4377 
=== Predecessor ===
v3335 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i4377  <|@  <|@
f <@~|@floating>@ <|@
tid v4511 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3756 
index: j3759 
=== Succesors ===
=== Usages ===
i4377 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3756 index: j3759  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4377 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v3333 
address: v4511 
=== Succesors ===
next: v4182 
=== Usages ===
v4182 
=== Predecessor ===
v3333 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v3333 address: v4511 #next: v4182  <|@  <|@
f <@~|@floating>@ <|@
tid v4510 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3758 
index: j3759 
=== Succesors ===
=== Usages ===
v4182 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3758 index: j3759  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4182 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4510 
value: i4377 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3314 
=== Usages ===
=== Predecessor ===
i4377 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4510 value: i4377 stateAfter: - lastLocationAccess: - #next: v3314  <|@  <|@
f <@*|@fixed>@ <|@
tid v3314 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3298 
=== Predecessor ===
v4182 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B227"
    from_bci -1
    to_bci -1
    predecessors "B226" "B225" 
    successors "B228" "B231" 
    xhandlers
    flags 
    probability 4613502363316578581
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3298 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3314 v3338 
=== Succesors ===
next: a2339 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3314 v3338 #next: a2339  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2339 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2368) [bci: 243]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a2909 
=== Succesors ===
next: v1441 
=== Usages ===
a2144 a1578 a1578 a1578 
=== Predecessor ===
v3298 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a2909 #next: v1441  <|@  <|@
f <@~|@floating>@ <|@
tid a2144 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n! -
=== Inputs ===
value: a2339 
=== Succesors ===
=== Usages ===
a2145 a2145 a2145 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2339  <|@  <|@
f <@*|@fixed>@ <|@
tid v1441 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.calculateCapacity(ArrayList.java:224) [bci: 4]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: void
trueSuccessorProbability: 0.2066504369952622
=== Inputs ===
condition: v227 
=== Succesors ===
trueSuccessor: v1439 
falseSuccessor: v1440 
=== Usages ===
=== Predecessor ===
a2339 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v227 #trueSuccessor: v1439 #falseSuccessor: v1440  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B228"
    from_bci -1
    to_bci -1
    predecessors "B227" 
    successors "B229" "B230" 
    xhandlers
    flags 
    probability 4603399296729809126
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1439 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.calculateCapacity(ArrayList.java:225) [bci: 7]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1556 
=== Usages ===
=== Predecessor ===
v1441 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1556  <|@  <|@
f <@~|@floating>@ <|@
tid v4344 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at java.util.ArrayList.calculateCapacity(ArrayList.java:225) [bci: 10]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i396 
y: i194 
=== Succesors ===
=== Usages ===
v1556 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i396 y: i194  <|@  <|@
f <@*|@fixed>@ <|@
tid v1556 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at java.util.ArrayList.calculateCapacity(ArrayList.java:225) [bci: 10]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: void
trueSuccessorProbability: 0.7308950256495741
=== Inputs ===
condition: v4344 
=== Succesors ===
trueSuccessor: v1554 
falseSuccessor: v1555 
=== Usages ===
=== Predecessor ===
v1439 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4344 #trueSuccessor: v1554 #falseSuccessor: v1555  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B229"
    from_bci -1
    to_bci -1
    predecessors "B228" 
    successors "B232" 
    xhandlers
    flags 
    probability 4601308123973474700
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1554 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 5]
at java.util.ArrayList.calculateCapacity(ArrayList.java:225) [bci: 10]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1557 
=== Usages ===
=== Predecessor ===
v1556 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1557  <|@  <|@
f <@*|@fixed>@ <|@
tid v1557 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v238 
=== Predecessor ===
v1554 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B230"
    from_bci -1
    to_bci -1
    predecessors "B228" 
    successors "B232" 
    xhandlers
    flags 
    probability 4594791320917528704
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1555 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 9]
at java.util.ArrayList.calculateCapacity(ArrayList.java:225) [bci: 10]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1558 
=== Usages ===
=== Predecessor ===
v1556 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1558  <|@  <|@
f <@*|@fixed>@ <|@
tid v1558 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v238 
=== Predecessor ===
v1555 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B231"
    from_bci -1
    to_bci -1
    predecessors "B227" 
    successors "B232" 
    xhandlers
    flags 
    probability 4612196344020445404
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1440 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.calculateCapacity(ArrayList.java:227) [bci: 14]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1442 
=== Usages ===
=== Predecessor ===
v1441 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1442  <|@  <|@
f <@*|@fixed>@ <|@
tid v1442 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v238 
=== Predecessor ===
v1440 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B232"
    from_bci -1
    to_bci -1
    predecessors "B200" "B198" "B199" "B231" "B229" "B230" 
    successors "B233" "B241" 
    xhandlers
    flags 
    probability 4614149222986594394
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i240 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v238 
values: i396 i193 i396 i396 i193 i396 
=== Succesors ===
=== Usages ===
?179 i1781 i401 i596 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v238 values: i396 i193 i396 i396 i193 i396  <|@  <|@
f <@~|@floating>@ <|@
tid a1578 <|@
d <@d|@=== Debug Properties ===
stamp: a!# [C
valueDescription: a -
=== Inputs ===
merge: v238 
values: a452 a452 a452 a2339 a2339 a2339 
=== Succesors ===
=== Usages ===
?1579 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v238 values: a452 a452 a452 a2339 a2339 a2339  <|@  <|@
f <@~|@floating>@ <|@
tid a2145 <|@
d <@d|@=== Debug Properties ===
stamp: n!# [C
valueDescription: n -
=== Inputs ===
merge: v238 
values: a2133 a2133 a2133 a2144 a2144 a2144 
=== Succesors ===
=== Usages ===
v2975 v3117 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v238 values: a2133 a2133 a2133 a2144 a2144 a2144  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v238 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v239 v241 v242 v1442 v1557 v1558 
=== Succesors ===
next: i4378 
=== Usages ===
i240 a1578 a2145 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v239 v241 v242 v1442 v1557 v1558 #next: i4378  <|@  <|@
f <@~|@floating>@ <|@
tid v4566 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a505 
index: - 
=== Succesors ===
=== Usages ===
i4378 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a505 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4378 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:238) [bci: 15]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v4566 
=== Succesors ===
next: v4379 
=== Usages ===
i401 v1745 i595 i594 i2324 v2292 
=== Predecessor ===
v238 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4566 #next: v4379  <|@  <|@
f <@~|@floating>@ <|@
tid v4417 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a505 
index: - 
=== Succesors ===
=== Usages ===
v4379 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a505 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4379 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.ClassGetHubNode.readClass(Class) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.getComponentType(HotSpotClassSubstitutions.java:120) [bci: 1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 6]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v4417 
=== Succesors ===
next: v405 
=== Usages ===
v2580 v3224 v3037 
=== Predecessor ===
i4378 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4417 #next: v405  <|@  <|@
f <@~|@floating>@ <|@
tid i401 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:238) [bci: 16]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: i32
=== Inputs ===
x: i240 
y: i4378 
=== Succesors ===
=== Usages ===
v402 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i240 y: i4378  <|@  <|@
f <@~|@floating>@ <|@
tid v402 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:238) [bci: 17]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i401 
y: i8 
=== Succesors ===
=== Usages ===
v405 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i401 y: i8  <|@  <|@
tid ?1579 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a524 
values: a1578 - 
=== Succesors ===
=== Usages ===
?179 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a524 values: a1578 -  <|@  <|@
tid ?179 <|@
d <@d|@=== Debug Properties ===
bci: 9
code: ResolvedJavaMethodBytecode<ArrayList.ensureCapacityInternal(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
rethrowException: false
sourceFile: ArrayList.java
sourceLine: 231
stackSize: 2
=== Inputs ===
outerFrameState: ?184 
values: - - a244 i240 
virtualObjectMappings: ?521 ?1579 
=== Succesors ===
=== Usages ===
a2947 a3012 a3089 v2486 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?184 values: - - a244 i240 virtualObjectMappings: ?521 ?1579  <|@  <|@
f <@*|@fixed>@ <|@
tid v405 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:238) [bci: 17]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: void
trueSuccessorProbability: 0.7754412955005789
=== Inputs ===
condition: v402 
=== Succesors ===
trueSuccessor: v403 
falseSuccessor: v404 
=== Usages ===
=== Predecessor ===
v4379 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v402 #trueSuccessor: v403 #falseSuccessor: v404  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B233"
    from_bci -1
    to_bci -1
    predecessors "B232" 
    successors "B234" "B240" 
    xhandlers
    flags 
    probability 4612584766463955523
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v403 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:240) [bci: 25]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1971 
=== Usages ===
=== Predecessor ===
v405 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1971  <|@  <|@
f <@~|@floating>@ <|@
tid v3224 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v4379 
y: v3223 
=== Succesors ===
=== Usages ===
v1971 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v4379 y: v3223  <|@  <|@
f <@*|@fixed>@ <|@
tid v1971 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v3224 
=== Succesors ===
trueSuccessor: v1968 
falseSuccessor: v1970 
=== Usages ===
=== Predecessor ===
v403 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3224 #trueSuccessor: v1968 #falseSuccessor: v1970  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B234"
    from_bci -1
    to_bci -1
    predecessors "B233" 
    successors "B235" "B239" 
    xhandlers
    flags 
    probability 4612584766463955523
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1968 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1975 
=== Usages ===
=== Predecessor ===
v1971 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1975  <|@  <|@
f <@~|@floating>@ <|@
tid v1745 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:463) [bci: 26]
at java.lang.String.split(String.java:2368) [bci: 246]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i503 
y: i4378 
=== Succesors ===
=== Usages ===
v1975 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i503 y: i4378  <|@  <|@
f <@*|@fixed>@ <|@
tid v1975 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:463) [bci: 26]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1745 
=== Succesors ===
trueSuccessor: v1972 
falseSuccessor: v1974 
=== Usages ===
=== Predecessor ===
v1968 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1745 #trueSuccessor: v1972 #falseSuccessor: v1974  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B235"
    from_bci -1
    to_bci -1
    predecessors "B234" 
    successors "B236" "B237" 
    xhandlers
    flags 
    probability 4612584766463955523
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1972 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:463) [bci: 26]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2936 
=== Usages ===
v1753 
=== Predecessor ===
v1975 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2936  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2936 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j2951 
=== Usages ===
v4461 v4462 
=== Predecessor ===
v1972 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j2951  <|@  <|@
f <@~|@floating>@ <|@
tid v4461 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j2936 
index: - 
=== Succesors ===
=== Usages ===
j2951 v2953 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2936 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2951 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v4461 
=== Succesors ===
next: j2952 
=== Usages ===
j3244 j2957 v4501 
=== Predecessor ===
j2936 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4461 #next: j2952  <|@  <|@
f <@~|@floating>@ <|@
tid v4462 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j2936 
index: - 
=== Succesors ===
=== Usages ===
j2952 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2936 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2952 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v4462 
=== Succesors ===
next: v2944 
=== Usages ===
v2941 
=== Predecessor ===
j2951 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4462 #next: v2944  <|@  <|@
f <@~|@floating>@ <|@
tid j3244 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2951 
y: j3225 
=== Succesors ===
=== Usages ===
v2941 v2953 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2951 y: j3225  <|@  <|@
f <@~|@floating>@ <|@
tid v2941 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2952 
y: j3244 
=== Succesors ===
=== Usages ===
v2944 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j2952 y: j3244  <|@  <|@
f <@*|@fixed>@ <|@
tid v2944 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v2941 
=== Succesors ===
trueSuccessor: v2942 
falseSuccessor: v2943 
=== Usages ===
=== Predecessor ===
j2952 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2941 #trueSuccessor: v2942 #falseSuccessor: v2943  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B236"
    from_bci -1
    to_bci -1
    predecessors "B235" 
    successors "B238" 
    xhandlers
    flags 
    probability 4582572226418264729
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2942 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a2947 
=== Usages ===
=== Predecessor ===
v2944 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2947  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2947 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?179 
arguments: v2582 i1663 i8 
=== Succesors ===
next: j2948 
=== Usages ===
j2948 
=== Predecessor ===
v2942 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?179 arguments: v2582 i1663 i8 #next: j2948  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2948 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a2947 
=== Succesors ===
next: v2958 
=== Usages ===
j2957 
=== Predecessor ===
a2947 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a2947 #next: v2958  <|@  <|@
f <@*|@fixed>@ <|@
tid v2958 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2955 
=== Predecessor ===
j2948 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B237"
    from_bci -1
    to_bci -1
    predecessors "B235" 
    successors "B238" 
    xhandlers
    flags 
    probability 4612530742987316142
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2943 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2953 
=== Usages ===
=== Predecessor ===
v2944 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2953  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2953 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4461 
value: j3244 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2950 
=== Usages ===
=== Predecessor ===
v2943 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4461 value: j3244 stateAfter: - lastLocationAccess: - #next: v2950  <|@  <|@
f <@~|@floating>@ <|@
tid v4501 <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j2951 
index: - 
=== Succesors ===
=== Usages ===
v2950 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2951 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2950 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v4501 
=== Succesors ===
next: v2956 
=== Usages ===
=== Predecessor ===
v2953 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v4501 #next: v2956  <|@  <|@
f <@*|@fixed>@ <|@
tid v2956 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2955 
=== Predecessor ===
v2950 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B238"
    from_bci -1
    to_bci -1
    predecessors "B237" "B236" 
    successors "B291" 
    xhandlers
    flags 
    probability 4612584766463955523
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2957 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2955 
values: j2951 j2948 
=== Succesors ===
=== Usages ===
v4464 v4463 a2081 v4502 v4503 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2955 values: j2951 j2948  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2955 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2956 v2958 
=== Succesors ===
next: a2081 
=== Usages ===
j2957 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2956 v2958 #next: a2081  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2081 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j2957 
=== Succesors ===
next: j2967 
=== Usages ===
a2087 
=== Predecessor ===
v2955 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j2957 #next: j2967  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2967 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v4478 
=== Succesors ===
next: v2968 
=== Usages ===
v2968 
=== Predecessor ===
a2081 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4478 #next: v2968  <|@  <|@
f <@~|@floating>@ <|@
tid v4463 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2957 
index: - 
=== Succesors ===
=== Usages ===
v2968 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2957 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2968 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4463 
value: j2967 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2971 
=== Usages ===
=== Predecessor ===
j2967 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4463 value: j2967 stateAfter: - lastLocationAccess: - #next: v2971  <|@  <|@
f <@~|@floating>@ <|@
tid v4464 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j2957 
index: - 
=== Succesors ===
=== Usages ===
v2971 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2957 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2971 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4464 
value: v3230 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2975 
=== Usages ===
=== Predecessor ===
v2968 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4464 value: v3230 stateAfter: - lastLocationAccess: - #next: v2975  <|@  <|@
f <@~|@floating>@ <|@
tid v4502 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j2957 
index: - 
=== Succesors ===
=== Usages ===
v2975 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2957 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2975 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4502 
value: a2145 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2977 
=== Usages ===
=== Predecessor ===
v2971 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4502 value: a2145 stateAfter: - lastLocationAccess: - #next: v2977  <|@  <|@
f <@~|@floating>@ <|@
tid v4503 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j2957 
index: - 
=== Succesors ===
=== Usages ===
v2977 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2957 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2977 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4503 
value: i5 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a2087 
=== Usages ===
=== Predecessor ===
v2975 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4503 value: i5 stateAfter: - lastLocationAccess: - #next: a2087  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2087 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a2081 
=== Succesors ===
next: v2088 
=== Usages ===
a1752 
=== Predecessor ===
v2977 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a2081 #next: v2088  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2088 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v1753 
=== Usages ===
=== Predecessor ===
a2087 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v1753  <|@  <|@
f <@~|@floating>@ <|@
tid v4407 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a505 
index: i503 
=== Succesors ===
=== Usages ===
v1753 j2978 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a505 index: i503  <|@  <|@
f <@~|@floating>@ <|@
tid a1752 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:463) [bci: 26]
at java.lang.String.split(String.java:2368) [bci: 246]
op: Compress
stamp: n -
=== Inputs ===
value: a2087 
=== Succesors ===
=== Usages ===
v1753 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2087  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1753 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:463) [bci: 26]
at java.lang.String.split(String.java:2368) [bci: 246]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1972 
address: v4407 
value: a1752 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j2978 
=== Usages ===
=== Predecessor ===
v2088 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1972 address: v4407 value: a1752 stateAfter: - lastLocationAccess: - #next: j2978  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2978 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at java.util.ArrayList.add(ArrayList.java:463) [bci: 26]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v4407 
=== Succesors ===
next: v2982 
=== Usages ===
j2979 
=== Predecessor ===
v1753 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v4407 #next: v2982  <|@  <|@
f <@~|@floating>@ <|@
tid j2979 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.ArrayList.add(ArrayList.java:463) [bci: 26]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j2978 
y: i2735 
=== Succesors ===
=== Usages ===
v4465 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j2978 y: i2735  <|@  <|@
f <@~|@floating>@ <|@
tid v4465 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2979 
index: j2739 
=== Succesors ===
=== Usages ===
v2982 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2979 index: j2739  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2982 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.ArrayList.add(ArrayList.java:463) [bci: 26]
at java.lang.String.split(String.java:2368) [bci: 246]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4465 
value: i2741 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1561 
=== Usages ===
=== Predecessor ===
j2978 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4465 value: i2741 stateAfter: - lastLocationAccess: - #next: v1561  <|@  <|@
f <@*|@fixed>@ <|@
tid v1561 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1560 
=== Predecessor ===
v2982 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B239"
    from_bci -1
    to_bci -1
    predecessors "B234" 
    successors "B357" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1974 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:463) [bci: 26]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2487 
=== Usages ===
=== Predecessor ===
v1975 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2487  <|@  <|@
f <@~|@floating>@ <|@
tid i2488 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -447003
stableDimension: 0
stamp: i32 [-447003] ⇊00000000fff92de5 ⇈00000000fff92de5
stampKind: i32
value: int[-447003|0xfffffffffff92de5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2484 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2487 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2481 
=== Predecessor ===
v1974 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B240"
    from_bci -1
    to_bci -1
    predecessors "B233" 
    successors "B357" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1970 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2482 
=== Usages ===
=== Predecessor ===
v1971 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2482  <|@  <|@
f <@~|@floating>@ <|@
tid i2483 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -446268
stableDimension: 0
stamp: i32 [-446268] ⇊00000000fff930c4 ⇈00000000fff930c4
stampKind: i32
value: int[-446268|0xfffffffffff930c4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2484 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2482 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2481 
=== Predecessor ===
v1970 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B241"
    from_bci -1
    to_bci -1
    predecessors "B232" 
    successors "B242" "B356" 
    xhandlers
    flags 
    probability 4604433045635831900
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v404 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 20]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1979 
=== Usages ===
=== Predecessor ===
v405 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1979  <|@  <|@
f <@~|@floating>@ <|@
tid i594 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:259) [bci: 9]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: i32 [0 - 1073741823] ⇈000000003fffffff
=== Inputs ===
x: i4378 
y: i8 
=== Succesors ===
=== Usages ===
i595 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i4378 y: i8  <|@  <|@
f <@~|@floating>@ <|@
tid i595 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:259) [bci: 10]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: i32
=== Inputs ===
x: i594 
y: i4378 
=== Succesors ===
=== Usages ===
i596 i1781 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i594 y: i4378  <|@  <|@
f <@~|@floating>@ <|@
tid i596 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:260) [bci: 14]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: i32
=== Inputs ===
x: i595 
y: i240 
=== Succesors ===
=== Usages ===
v597 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i595 y: i240  <|@  <|@
f <@~|@floating>@ <|@
tid v597 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:260) [bci: 15]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i596 
y: i5 
=== Succesors ===
=== Usages ===
i1781 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i596 y: i5  <|@  <|@
f <@~|@floating>@ <|@
tid i1781 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v597 
trueValue: i240 
falseValue: i595 
=== Succesors ===
=== Usages ===
v1758 j3339 i606 v2276 v2292 i2324 a3012 v3033 i3052 v3045 i2997 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v597 trueValue: i240 falseValue: i595  <|@  <|@
f <@~|@floating>@ <|@
tid i606 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:262) [bci: 23]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: i32
=== Inputs ===
x: i1781 
y: i429 
=== Succesors ===
=== Usages ===
v607 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1781 y: i429  <|@  <|@
f <@~|@floating>@ <|@
tid v607 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:262) [bci: 24]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i606 
y: i8 
=== Succesors ===
=== Usages ===
v1979 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i606 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v1979 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:262) [bci: 24]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v607 
=== Succesors ===
trueSuccessor: v1976 
falseSuccessor: v1978 
=== Usages ===
=== Predecessor ===
v404 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v607 #trueSuccessor: v1976 #falseSuccessor: v1978  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B242"
    from_bci -1
    to_bci -1
    predecessors "B241" 
    successors "B243" "B355" 
    xhandlers
    flags 
    probability 4604433045635831900
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1976 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:262) [bci: 24]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1983 
=== Usages ===
=== Predecessor ===
v1979 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1983  <|@  <|@
f <@~|@floating>@ <|@
tid v1758 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:463) [bci: 26]
at java.lang.String.split(String.java:2368) [bci: 246]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i503 
y: i1781 
=== Succesors ===
=== Usages ===
v1983 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i503 y: i1781  <|@  <|@
f <@*|@fixed>@ <|@
tid v1983 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:463) [bci: 26]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1758 
=== Succesors ===
trueSuccessor: v1980 
falseSuccessor: v1982 
=== Usages ===
=== Predecessor ===
v1976 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1758 #trueSuccessor: v1980 #falseSuccessor: v1982  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B243"
    from_bci -1
    to_bci -1
    predecessors "B242" 
    successors "B244" "B245" 
    xhandlers
    flags 
    probability 4604433045635831900
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1980 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:463) [bci: 26]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2282 
=== Usages ===
v1766 
=== Predecessor ===
v1983 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2282  <|@  <|@
f <@~|@floating>@ <|@
tid v2276 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 22]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:171) [bci: 3]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1781 
y: i5 
=== Succesors ===
=== Usages ===
v2282 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1781 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v2282 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 33]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:171) [bci: 3]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v2276 
=== Succesors ===
trueSuccessor: v2281 
falseSuccessor: v2277 
=== Usages ===
=== Predecessor ===
v1980 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2276 #trueSuccessor: v2281 #falseSuccessor: v2277  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B244"
    from_bci -1
    to_bci -1
    predecessors "B243" 
    successors "B357" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2281 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:187) [bci: 55]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:171) [bci: 3]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2495 
=== Usages ===
=== Predecessor ===
v2282 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2495  <|@  <|@
f <@~|@floating>@ <|@
tid i2496 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -585825
stableDimension: 0
stamp: i32 [-585825] ⇊00000000fff70f9f ⇈00000000fff70f9f
stampKind: i32
value: int[-585825|0xfffffffffff70f9f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2484 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2495 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2481 
=== Predecessor ===
v2281 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B245"
    from_bci -1
    to_bci -1
    predecessors "B243" 
    successors "B246" "B247" 
    xhandlers
    flags 
    probability 4604433045635831900
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2277 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 36]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:171) [bci: 3]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2999 
=== Usages ===
=== Predecessor ===
v2282 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2999  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2999 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j3030 
=== Usages ===
v4466 v4467 
=== Predecessor ===
v2277 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j3030  <|@  <|@
f <@~|@floating>@ <|@
tid v4466 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j2999 
index: - 
=== Succesors ===
=== Usages ===
j3030 v3032 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2999 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3030 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v4466 
=== Succesors ===
next: j3031 
=== Usages ===
j3003 v4468 v4469 a3011 v4474 v4470 v4471 v4472 v4473 
=== Predecessor ===
j2999 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4466 #next: j3031  <|@  <|@
f <@~|@floating>@ <|@
tid v4467 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j2999 
index: - 
=== Succesors ===
=== Usages ===
j3031 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2999 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3031 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v4467 
=== Succesors ===
next: v3007 
=== Usages ===
v3004 
=== Predecessor ===
j3030 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4467 #next: v3007  <|@  <|@
f <@~|@floating>@ <|@
tid i2997 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i1781 
y: i1663 
=== Succesors ===
=== Usages ===
i3019 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i1781 y: i1663  <|@  <|@
f <@~|@floating>@ <|@
tid i3019 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: i32 [-2147483645 - 2147483647] ⇊0000000000000003
=== Inputs ===
x: i2997 
y: i2664 
=== Succesors ===
=== Usages ===
i2998 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2997 y: i2664  <|@  <|@
f <@~|@floating>@ <|@
tid i2998 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i3019 
y: i2634 
=== Succesors ===
=== Usages ===
j3002 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i3019 y: i2634  <|@  <|@
f <@~|@floating>@ <|@
tid j3002 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i2998 
=== Succesors ===
=== Usages ===
j3003 v4470 v4471 v4472 v4473 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2998  <|@  <|@
f <@~|@floating>@ <|@
tid j3003 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: i64
=== Inputs ===
x: j3002 
y: j3030 
=== Succesors ===
=== Usages ===
v3004 v3032 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3002 y: j3030  <|@  <|@
f <@~|@floating>@ <|@
tid v3004 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3031 
y: j3003 
=== Succesors ===
=== Usages ===
v3007 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j3031 y: j3003  <|@  <|@
f <@*|@fixed>@ <|@
tid v3007 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v3004 
=== Succesors ===
trueSuccessor: v3005 
falseSuccessor: v3006 
=== Usages ===
=== Predecessor ===
j3031 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3004 #trueSuccessor: v3005 #falseSuccessor: v3006  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B246"
    from_bci -1
    to_bci -1
    predecessors "B245" 
    successors "B248" 
    xhandlers
    flags 
    probability 4574660039549593971
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3005 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: void
=== Inputs ===
=== Succesors ===
next: a3012 
=== Usages ===
=== Predecessor ===
v3007 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a3012  <|@  <|@
f <@~|@floating>@ <|@
tid v2580 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.ClassGetHubNode.readClass(Class) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.getComponentType(HotSpotClassSubstitutions.java:120) [bci: 1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 6]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v4379 
=== Succesors ===
=== Usages ===
a3012 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v4379  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3012 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?179 
arguments: v2580 i1781 i5 
=== Succesors ===
next: v3015 
=== Usages ===
a3016 
=== Predecessor ===
v3005 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?179 arguments: v2580 i1781 i5 #next: v3015  <|@  <|@
f <@*|@fixed>@ <|@
tid v3015 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3014 
=== Predecessor ===
a3012 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B247"
    from_bci -1
    to_bci -1
    predecessors "B245" 
    successors "B248" 
    xhandlers
    flags 
    probability 4604370467374926345
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3006 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3032 
=== Usages ===
=== Predecessor ===
v3007 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3032  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3032 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4466 
value: j3003 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3021 
=== Usages ===
=== Predecessor ===
v3006 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4466 value: j3003 stateAfter: - lastLocationAccess: - #next: v3021  <|@  <|@
f <@~|@floating>@ <|@
tid v4470 <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j3002 
index: j3030 
=== Succesors ===
=== Usages ===
v3021 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3002 index: j3030  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3021 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: void
=== Inputs ===
address: v4470 
=== Succesors ===
next: v3023 
=== Usages ===
=== Predecessor ===
v3032 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v4470 #next: v3023  <|@  <|@
f <@~|@floating>@ <|@
tid v4471 <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j3002 
index: j3030 
=== Succesors ===
=== Usages ===
v3023 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3002 index: j3030  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3023 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: void
=== Inputs ===
address: v4471 
=== Succesors ===
next: v3025 
=== Usages ===
=== Predecessor ===
v3021 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v4471 #next: v3025  <|@  <|@
f <@~|@floating>@ <|@
tid v4472 <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j3002 
index: j3030 
=== Succesors ===
=== Usages ===
v3025 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3002 index: j3030  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3025 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: void
=== Inputs ===
address: v4472 
=== Succesors ===
next: v3027 
=== Usages ===
=== Predecessor ===
v3023 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v4472 #next: v3027  <|@  <|@
f <@~|@floating>@ <|@
tid v4473 <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j3002 
index: j3030 
=== Succesors ===
=== Usages ===
v3027 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3002 index: j3030  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3027 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: void
=== Inputs ===
address: v4473 
=== Succesors ===
next: v3033 
=== Usages ===
=== Predecessor ===
v3025 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v4473 #next: v3033  <|@  <|@
f <@~|@floating>@ <|@
tid v4468 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j3030 
index: - 
=== Succesors ===
=== Usages ===
v3033 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3030 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3033 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4468 
value: i1781 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3034 
=== Usages ===
=== Predecessor ===
v3027 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4468 value: i1781 stateAfter: - lastLocationAccess: - #next: v3034  <|@  <|@
f <@~|@floating>@ <|@
tid v4469 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j3030 
index: - 
=== Succesors ===
=== Usages ===
v3034 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3030 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3034 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4469 
value: j2632 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3037 
=== Usages ===
=== Predecessor ===
v3033 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4469 value: j2632 stateAfter: - lastLocationAccess: - #next: v3037  <|@  <|@
f <@~|@floating>@ <|@
tid v4474 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j3030 
index: - 
=== Succesors ===
=== Usages ===
v3037 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3030 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3037 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4474 
value: v4379 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3010 
=== Usages ===
=== Predecessor ===
v3034 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4474 value: v4379 stateAfter: - lastLocationAccess: - #next: v3010  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3010 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: void
=== Inputs ===
=== Succesors ===
next: a3011 
=== Usages ===
=== Predecessor ===
v3037 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a3011  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3011 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j3030 
=== Succesors ===
next: v3013 
=== Usages ===
a3016 
=== Predecessor ===
v3010 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j3030 #next: v3013  <|@  <|@
f <@*|@fixed>@ <|@
tid v3013 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3014 
=== Predecessor ===
a3011 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B248"
    from_bci -1
    to_bci -1
    predecessors "B247" "B246" 
    successors "B249" "B250" 
    xhandlers
    flags 
    probability 4604433045635831900
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a3016 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v3014 
values: a3011 a3012 
=== Succesors ===
=== Usages ===
v4509 a2343 v4415 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3014 values: a3011 a3012  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3014 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3013 v3015 
=== Succesors ===
next: v4069 
=== Usages ===
a3016 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3013 v3015 #next: v4069  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4069 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v3640 
=== Usages ===
j4070 j4072 
=== Predecessor ===
v3014 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v3640  <|@  <|@
f <@~|@floating>@ <|@
tid v4415 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a3016 
index: - 
=== Succesors ===
=== Usages ===
j4072 j3051 j3049 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3016 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v2292 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 4]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:174) [bci: 19]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4378 
y: i1781 
=== Succesors ===
=== Usages ===
i2324 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i4378 y: i1781  <|@  <|@
f <@~|@floating>@ <|@
tid i2324 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v2292 
trueValue: i4378 
falseValue: i1781 
=== Succesors ===
=== Usages ===
j3340 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v2292 trueValue: i4378 falseValue: i1781  <|@  <|@
f <@~|@floating>@ <|@
tid j3340 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i2324 
=== Succesors ===
=== Usages ===
j4116 v4509 j3344 v3637 v3752 j4105 j4110 j4113 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2324  <|@  <|@
f <@~|@floating>@ <|@
tid v3637 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3340 
y: j2632 
=== Succesors ===
=== Usages ===
v3640 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3340 y: j2632  <|@  <|@
f <@*|@fixed>@ <|@
tid v3640 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v3637 
=== Succesors ===
trueSuccessor: v3638 
falseSuccessor: v3639 
=== Usages ===
=== Predecessor ===
v4069 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3637 #trueSuccessor: v3638 #falseSuccessor: v3639  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B249"
    from_bci -1
    to_bci -1
    predecessors "B248" 
    successors "B264" 
    xhandlers
    flags 
    probability 4599929446008461404
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3638 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3656 
=== Usages ===
=== Predecessor ===
v3640 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3656  <|@  <|@
f <@*|@fixed>@ <|@
tid v3656 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3657 
=== Predecessor ===
v3638 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B250"
    from_bci -1
    to_bci -1
    predecessors "B248" 
    successors "B251" "B252" 
    xhandlers
    flags 
    probability 4599929446008461404
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3639 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3643 
=== Usages ===
=== Predecessor ===
v3640 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3643  <|@  <|@
f <@~|@floating>@ <|@
tid j4072 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v4069 
address: v4415 
=== Succesors ===
=== Usages ===
v4551 v4553 v4555 v4557 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v4069 address: v4415  <|@  <|@
f <@~|@floating>@ <|@
tid v4410 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a505 
index: - 
=== Succesors ===
=== Usages ===
j4070 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a505 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j4070 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v4069 
address: v4410 
=== Succesors ===
=== Usages ===
v4552 v4554 v4556 v4558 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v4069 address: v4410  <|@  <|@
f <@~|@floating>@ <|@
tid j4105 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j3340 
y: j3807 
=== Succesors ===
=== Usages ===
v4106 v4108 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3340 y: j3807  <|@  <|@
f <@~|@floating>@ <|@
tid v4106 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j4105 
y: j2049 
=== Succesors ===
=== Usages ===
v3643 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j4105 y: j2049  <|@  <|@
f <@*|@fixed>@ <|@
tid v3643 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v4106 
=== Succesors ===
trueSuccessor: v3641 
falseSuccessor: v3642 
=== Usages ===
=== Predecessor ===
v3639 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4106 #trueSuccessor: v3641 #falseSuccessor: v3642  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B251"
    from_bci -1
    to_bci -1
    predecessors "B250" 
    successors "B255" 
    xhandlers
    flags 
    probability 4598364989485822533
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3641 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3652 
=== Usages ===
=== Predecessor ===
v3643 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3652  <|@  <|@
f <@*|@fixed>@ <|@
tid v3652 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3653 
=== Predecessor ===
v3641 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B252"
    from_bci -1
    to_bci -1
    predecessors "B250" 
    successors "B253" 
    xhandlers
    flags 
    probability 4590922246753720412
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3642 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3644 
=== Usages ===
=== Predecessor ===
v3643 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3644  <|@  <|@
f <@*|@fixed>@ <|@
tid v3644 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3645 
=== Predecessor ===
v3642 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B253"
    from_bci -1
    to_bci -1
    predecessors "B252" "B354" 
    successors "B254" "B354" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 1
    probability 4599929446008461404
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j4097 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3645 
values: j2049 j4104 
=== Succesors ===
=== Usages ===
v4558 j4104 v4557 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3645 values: j2049 j4104  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3645 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v3644 
=== Succesors ===
next: v4380 
=== Usages ===
v4380 v3648 v3649 j4097 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v3644 #next: v4380  <|@  <|@
f <@~|@floating>@ <|@
tid v4558 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j4070 
index: j4097 
=== Succesors ===
=== Usages ===
v4380 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4070 index: j4097  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4380 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: <n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;>
=== Inputs ===
stateBefore: - 
guard: v3645 
address: v4558 
=== Succesors ===
next: v4238 
=== Usages ===
v4238 
=== Predecessor ===
v3645 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v3645 address: v4558 #next: v4238  <|@  <|@
f <@~|@floating>@ <|@
tid v4557 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j4072 
index: j4097 
=== Succesors ===
=== Usages ===
v4238 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4072 index: j4097  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4238 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4557 
value: v4380 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3651 
=== Usages ===
=== Predecessor ===
v4380 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4557 value: v4380 stateAfter: - lastLocationAccess: - #next: v3651  <|@  <|@
f <@~|@floating>@ <|@
tid j4104 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j4097 
y: j2577 
=== Succesors ===
=== Usages ===
j4089 j4097 v4108 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j4097 y: j2577  <|@  <|@
f <@~|@floating>@ <|@
tid v4108 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j4105 
y: j4104 
=== Succesors ===
=== Usages ===
v3651 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j4105 y: j4104  <|@  <|@
f <@*|@fixed>@ <|@
tid v3651 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v4108 
=== Succesors ===
trueSuccessor: v3648 
falseSuccessor: v3650 
=== Usages ===
=== Predecessor ===
v4238 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4108 #trueSuccessor: v3648 #falseSuccessor: v3650  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B254"
    from_bci -1
    to_bci -1
    predecessors "B253" 
    successors "B255" 
    xhandlers
    flags 
    probability 4590922246753720412
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3648 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v3645 
=== Succesors ===
next: v3654 
=== Usages ===
=== Predecessor ===
v3651 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v3645 #next: v3654  <|@  <|@
f <@*|@fixed>@ <|@
tid v3654 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3653 
=== Predecessor ===
v3648 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B255"
    from_bci -1
    to_bci -1
    predecessors "B251" "B254" 
    successors "B256" "B257" 
    xhandlers
    flags 
    probability 4599929446008461404
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j4089 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3653 
values: j2049 j4104 
=== Succesors ===
=== Usages ===
v4556 j4096 j4081 v4111 v4555 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3653 values: j2049 j4104  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3653 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3652 v3654 
=== Succesors ===
next: v3672 
=== Usages ===
j4089 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3652 v3654 #next: v3672  <|@  <|@
f <@~|@floating>@ <|@
tid j4110 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j3340 
y: j3811 
=== Succesors ===
=== Usages ===
v4111 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3340 y: j3811  <|@  <|@
f <@~|@floating>@ <|@
tid v4111 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j4110 
y: j4089 
=== Succesors ===
=== Usages ===
v3672 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j4110 y: j4089  <|@  <|@
f <@*|@fixed>@ <|@
tid v3672 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v4111 
=== Succesors ===
trueSuccessor: v3671 
falseSuccessor: v3670 
=== Usages ===
=== Predecessor ===
v3653 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4111 #trueSuccessor: v3671 #falseSuccessor: v3670  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B256"
    from_bci -1
    to_bci -1
    predecessors "B255" 
    successors "B258" 
    xhandlers
    flags 
    probability 4590922246753720412
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3671 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3675 
=== Usages ===
=== Predecessor ===
v3672 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3675  <|@  <|@
f <@*|@fixed>@ <|@
tid v3675 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3664 
=== Predecessor ===
v3671 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B257"
    from_bci -1
    to_bci -1
    predecessors "B255" 
    successors "B258" 
    xhandlers
    flags 
    probability 4598364989485822533
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3670 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4381 
=== Usages ===
v4381 
=== Predecessor ===
v3672 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4381  <|@  <|@
f <@~|@floating>@ <|@
tid v4556 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j4070 
index: j4089 
=== Succesors ===
=== Usages ===
v4381 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4070 index: j4089  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4381 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: <n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;>
=== Inputs ===
stateBefore: - 
guard: v3670 
address: v4556 
=== Succesors ===
next: v4236 
=== Usages ===
v4236 
=== Predecessor ===
v3670 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v3670 address: v4556 #next: v4236  <|@  <|@
f <@~|@floating>@ <|@
tid v4555 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j4072 
index: j4089 
=== Succesors ===
=== Usages ===
v4236 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4072 index: j4089  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4236 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4555 
value: v4381 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3663 
=== Usages ===
=== Predecessor ===
v4381 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4555 value: v4381 stateAfter: - lastLocationAccess: - #next: v3663  <|@  <|@
f <@~|@floating>@ <|@
tid j4096 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j4089 
y: j3783 
=== Succesors ===
=== Usages ===
j4081 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j4089 y: j3783  <|@  <|@
f <@*|@fixed>@ <|@
tid v3663 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3664 
=== Predecessor ===
v4236 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B258"
    from_bci -1
    to_bci -1
    predecessors "B257" "B256" 
    successors "B259" "B260" 
    xhandlers
    flags 
    probability 4599929446008461404
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j4081 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3664 
values: j4096 j4089 
=== Succesors ===
=== Usages ===
v4554 j4088 j4073 v4114 v4553 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3664 values: j4096 j4089  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3664 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3663 v3675 
=== Succesors ===
next: v3678 
=== Usages ===
j4081 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3663 v3675 #next: v3678  <|@  <|@
f <@~|@floating>@ <|@
tid j4113 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j3340 
y: j3815 
=== Succesors ===
=== Usages ===
v4114 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3340 y: j3815  <|@  <|@
f <@~|@floating>@ <|@
tid v4114 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j4113 
y: j4081 
=== Succesors ===
=== Usages ===
v3678 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j4113 y: j4081  <|@  <|@
f <@*|@fixed>@ <|@
tid v3678 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v4114 
=== Succesors ===
trueSuccessor: v3677 
falseSuccessor: v3676 
=== Usages ===
=== Predecessor ===
v3664 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4114 #trueSuccessor: v3677 #falseSuccessor: v3676  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B259"
    from_bci -1
    to_bci -1
    predecessors "B258" 
    successors "B261" 
    xhandlers
    flags 
    probability 4590922246753720412
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3677 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3681 
=== Usages ===
=== Predecessor ===
v3678 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3681  <|@  <|@
f <@*|@fixed>@ <|@
tid v3681 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3667 
=== Predecessor ===
v3677 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B260"
    from_bci -1
    to_bci -1
    predecessors "B258" 
    successors "B261" 
    xhandlers
    flags 
    probability 4598364989485822533
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3676 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4382 
=== Usages ===
v4382 
=== Predecessor ===
v3678 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4382  <|@  <|@
f <@~|@floating>@ <|@
tid v4554 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j4070 
index: j4081 
=== Succesors ===
=== Usages ===
v4382 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4070 index: j4081  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4382 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: <n Ljava/lang/Object;,n Ljava/lang/Object;>
=== Inputs ===
stateBefore: - 
guard: v3676 
address: v4554 
=== Succesors ===
next: v4234 
=== Usages ===
v4234 
=== Predecessor ===
v3676 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v3676 address: v4554 #next: v4234  <|@  <|@
f <@~|@floating>@ <|@
tid v4553 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j4072 
index: j4081 
=== Succesors ===
=== Usages ===
v4234 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4072 index: j4081  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4234 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4553 
value: v4382 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3666 
=== Usages ===
=== Predecessor ===
v4382 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4553 value: v4382 stateAfter: - lastLocationAccess: - #next: v3666  <|@  <|@
f <@~|@floating>@ <|@
tid j4088 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j4081 
y: j3761 
=== Succesors ===
=== Usages ===
j4073 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j4081 y: j3761  <|@  <|@
f <@*|@fixed>@ <|@
tid v3666 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3667 
=== Predecessor ===
v4234 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B261"
    from_bci -1
    to_bci -1
    predecessors "B260" "B259" 
    successors "B262" "B263" 
    xhandlers
    flags 
    probability 4599929446008461404
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j4073 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3667 
values: j4088 j4081 
=== Succesors ===
=== Usages ===
v4552 v4117 v4551 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3667 values: j4088 j4081  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3667 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3666 v3681 
=== Succesors ===
next: v3684 
=== Usages ===
j4073 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3666 v3681 #next: v3684  <|@  <|@
f <@~|@floating>@ <|@
tid j4116 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j3340 
y: j1816 
=== Succesors ===
=== Usages ===
v4117 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3340 y: j1816  <|@  <|@
f <@~|@floating>@ <|@
tid v4117 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j4116 
y: j4073 
=== Succesors ===
=== Usages ===
v3684 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j4116 y: j4073  <|@  <|@
f <@*|@fixed>@ <|@
tid v3684 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v4117 
=== Succesors ===
trueSuccessor: v3683 
falseSuccessor: v3682 
=== Usages ===
=== Predecessor ===
v3667 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4117 #trueSuccessor: v3683 #falseSuccessor: v3682  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B262"
    from_bci -1
    to_bci -1
    predecessors "B261" 
    successors "B264" 
    xhandlers
    flags 
    probability 4590922246753720412
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3683 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3687 
=== Usages ===
=== Predecessor ===
v3684 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3687  <|@  <|@
f <@*|@fixed>@ <|@
tid v3687 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3657 
=== Predecessor ===
v3683 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B263"
    from_bci -1
    to_bci -1
    predecessors "B261" 
    successors "B264" 
    xhandlers
    flags 
    probability 4598364989485822533
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3682 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a4383 
=== Usages ===
a4383 
=== Predecessor ===
v3684 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a4383  <|@  <|@
f <@~|@floating>@ <|@
tid v4552 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j4070 
index: j4073 
=== Succesors ===
=== Usages ===
a4383 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4070 index: j4073  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4383 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v3682 
address: v4552 
=== Succesors ===
next: v4232 
=== Usages ===
v4232 
=== Predecessor ===
v3682 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v3682 address: v4552 #next: v4232  <|@  <|@
f <@~|@floating>@ <|@
tid v4551 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j4072 
index: j4073 
=== Succesors ===
=== Usages ===
v4232 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4072 index: j4073  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4232 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4551 
value: a4383 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3669 
=== Usages ===
=== Predecessor ===
a4383 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4551 value: a4383 stateAfter: - lastLocationAccess: - #next: v3669  <|@  <|@
f <@*|@fixed>@ <|@
tid v3669 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3657 
=== Predecessor ===
v4232 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B264"
    from_bci -1
    to_bci -1
    predecessors "B249" "B263" "B262" 
    successors "B265" "B280" 
    xhandlers
    flags 
    probability 4604433045635831900
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3657 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3656 v3669 v3687 
=== Succesors ===
next: v4120 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3656 v3669 v3687 #next: v4120  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4120 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v3694 
=== Usages ===
j4122 
=== Predecessor ===
v3657 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v3694  <|@  <|@
f <@~|@floating>@ <|@
tid j3339 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1781 
=== Succesors ===
=== Usages ===
j3344 v3752 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1781  <|@  <|@
f <@~|@floating>@ <|@
tid v3752 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3340 
y: j3339 
=== Succesors ===
=== Usages ===
v3694 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3340 y: j3339  <|@  <|@
f <@*|@fixed>@ <|@
tid v3694 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v3752 
=== Succesors ===
trueSuccessor: v3693 
falseSuccessor: v3692 
=== Usages ===
=== Predecessor ===
v4120 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3752 #trueSuccessor: v3693 #falseSuccessor: v3692  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B265"
    from_bci -1
    to_bci -1
    predecessors "B264" 
    successors "B266" "B267" 
    xhandlers
    flags 
    probability 4599929446008461404
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3693 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3697 
=== Usages ===
=== Predecessor ===
v3694 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3697  <|@  <|@
f <@~|@floating>@ <|@
tid v4509 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a3016 
index: j3340 
=== Succesors ===
=== Usages ===
j4122 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3016 index: j3340  <|@  <|@
f <@~|@floating>@ <|@
tid j4122 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v4120 
address: v4509 
=== Succesors ===
=== Usages ===
v4559 v4560 v4561 v4562 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v4120 address: v4509  <|@  <|@
f <@~|@floating>@ <|@
tid j3344 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j3339 
y: j3340 
=== Succesors ===
=== Usages ===
j4158 j4147 j4152 j4155 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j3339 y: j3340  <|@  <|@
f <@~|@floating>@ <|@
tid j4147 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967303 - 4294967287]
=== Inputs ===
x: j3344 
y: j3807 
=== Succesors ===
=== Usages ===
v4148 v4150 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3344 y: j3807  <|@  <|@
f <@~|@floating>@ <|@
tid v4148 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j4147 
y: j2049 
=== Succesors ===
=== Usages ===
v3697 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j4147 y: j2049  <|@  <|@
f <@*|@fixed>@ <|@
tid v3697 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v4148 
=== Succesors ===
trueSuccessor: v3695 
falseSuccessor: v3696 
=== Usages ===
=== Predecessor ===
v3693 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4148 #trueSuccessor: v3695 #falseSuccessor: v3696  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B266"
    from_bci -1
    to_bci -1
    predecessors "B265" 
    successors "B270" 
    xhandlers
    flags 
    probability 4598364989485822533
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3695 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3706 
=== Usages ===
=== Predecessor ===
v3697 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3706  <|@  <|@
f <@*|@fixed>@ <|@
tid v3706 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3707 
=== Predecessor ===
v3695 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B267"
    from_bci -1
    to_bci -1
    predecessors "B265" 
    successors "B268" 
    xhandlers
    flags 
    probability 4590922246753720412
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3696 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3698 
=== Usages ===
=== Predecessor ===
v3697 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3698  <|@  <|@
f <@*|@fixed>@ <|@
tid v3698 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3699 
=== Predecessor ===
v3696 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B268"
    from_bci -1
    to_bci -1
    predecessors "B267" "B279" 
    successors "B269" "B279" 
    xhandlers
    flags "llh" 
    loop_index 9
    loop_depth 1
    probability 4599929446008461404
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j4141 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3699 
values: j2049 j4146 
=== Succesors ===
=== Usages ===
v4562 j4146 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3699 values: j2049 j4146  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3699 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v3698 
=== Succesors ===
next: v4242 
=== Usages ===
j4141 v3702 v3703 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v3698 #next: v4242  <|@  <|@
f <@~|@floating>@ <|@
tid v4562 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j4122 
index: j4141 
=== Succesors ===
=== Usages ===
v4242 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4122 index: j4141  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4242 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4562 
value: v4243 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3705 
=== Usages ===
=== Predecessor ===
v3699 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4562 value: v4243 stateAfter: - lastLocationAccess: - #next: v3705  <|@  <|@
f <@~|@floating>@ <|@
tid j4146 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j4141 
y: j2577 
=== Succesors ===
=== Usages ===
j4135 j4141 v4150 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j4141 y: j2577  <|@  <|@
f <@~|@floating>@ <|@
tid v4150 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j4147 
y: j4146 
=== Succesors ===
=== Usages ===
v3705 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j4147 y: j4146  <|@  <|@
f <@*|@fixed>@ <|@
tid v3705 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v4150 
=== Succesors ===
trueSuccessor: v3702 
falseSuccessor: v3704 
=== Usages ===
=== Predecessor ===
v4242 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4150 #trueSuccessor: v3702 #falseSuccessor: v3704  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B269"
    from_bci -1
    to_bci -1
    predecessors "B268" 
    successors "B270" 
    xhandlers
    flags 
    probability 4590922246753720412
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3702 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v3699 
=== Succesors ===
next: v3708 
=== Usages ===
=== Predecessor ===
v3705 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v3699 #next: v3708  <|@  <|@
f <@*|@fixed>@ <|@
tid v3708 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3707 
=== Predecessor ===
v3702 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B270"
    from_bci -1
    to_bci -1
    predecessors "B266" "B269" 
    successors "B271" "B272" 
    xhandlers
    flags 
    probability 4599929446008461404
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j4135 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3707 
values: j2049 j4146 
=== Succesors ===
=== Usages ===
v4561 j4140 j4129 v4153 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3707 values: j2049 j4146  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3707 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3706 v3708 
=== Succesors ===
next: v3726 
=== Usages ===
j4135 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3706 v3708 #next: v3726  <|@  <|@
f <@~|@floating>@ <|@
tid j4152 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967299 - 4294967291]
=== Inputs ===
x: j3344 
y: j3811 
=== Succesors ===
=== Usages ===
v4153 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3344 y: j3811  <|@  <|@
f <@~|@floating>@ <|@
tid v4153 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j4152 
y: j4135 
=== Succesors ===
=== Usages ===
v3726 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j4152 y: j4135  <|@  <|@
f <@*|@fixed>@ <|@
tid v3726 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v4153 
=== Succesors ===
trueSuccessor: v3725 
falseSuccessor: v3724 
=== Usages ===
=== Predecessor ===
v3707 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4153 #trueSuccessor: v3725 #falseSuccessor: v3724  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B271"
    from_bci -1
    to_bci -1
    predecessors "B270" 
    successors "B273" 
    xhandlers
    flags 
    probability 4590922246753720412
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3725 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3729 
=== Usages ===
=== Predecessor ===
v3726 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3729  <|@  <|@
f <@*|@fixed>@ <|@
tid v3729 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3718 
=== Predecessor ===
v3725 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B272"
    from_bci -1
    to_bci -1
    predecessors "B270" 
    successors "B273" 
    xhandlers
    flags 
    probability 4598364989485822533
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3724 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4241 
=== Usages ===
=== Predecessor ===
v3726 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4241  <|@  <|@
f <@~|@floating>@ <|@
tid v4561 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j4122 
index: j4135 
=== Succesors ===
=== Usages ===
v4241 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4122 index: j4135  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4241 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4561 
value: v4246 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3717 
=== Usages ===
=== Predecessor ===
v3724 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4561 value: v4246 stateAfter: - lastLocationAccess: - #next: v3717  <|@  <|@
f <@~|@floating>@ <|@
tid j4140 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j4135 
y: j3783 
=== Succesors ===
=== Usages ===
j4129 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j4135 y: j3783  <|@  <|@
f <@*|@fixed>@ <|@
tid v3717 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3718 
=== Predecessor ===
v4241 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B273"
    from_bci -1
    to_bci -1
    predecessors "B272" "B271" 
    successors "B274" "B275" 
    xhandlers
    flags 
    probability 4599929446008461404
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j4129 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3718 
values: j4140 j4135 
=== Succesors ===
=== Usages ===
v4560 j4134 j4123 v4156 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3718 values: j4140 j4135  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3718 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3717 v3729 
=== Succesors ===
next: v3732 
=== Usages ===
j4129 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3717 v3729 #next: v3732  <|@  <|@
f <@~|@floating>@ <|@
tid j4155 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j3344 
y: j3815 
=== Succesors ===
=== Usages ===
v4156 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3344 y: j3815  <|@  <|@
f <@~|@floating>@ <|@
tid v4156 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j4155 
y: j4129 
=== Succesors ===
=== Usages ===
v3732 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j4155 y: j4129  <|@  <|@
f <@*|@fixed>@ <|@
tid v3732 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v4156 
=== Succesors ===
trueSuccessor: v3731 
falseSuccessor: v3730 
=== Usages ===
=== Predecessor ===
v3718 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4156 #trueSuccessor: v3731 #falseSuccessor: v3730  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B274"
    from_bci -1
    to_bci -1
    predecessors "B273" 
    successors "B276" 
    xhandlers
    flags 
    probability 4590922246753720412
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3731 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3735 
=== Usages ===
=== Predecessor ===
v3732 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3735  <|@  <|@
f <@*|@fixed>@ <|@
tid v3735 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3721 
=== Predecessor ===
v3731 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B275"
    from_bci -1
    to_bci -1
    predecessors "B273" 
    successors "B276" 
    xhandlers
    flags 
    probability 4598364989485822533
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3730 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4240 
=== Usages ===
=== Predecessor ===
v3732 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4240  <|@  <|@
f <@~|@floating>@ <|@
tid v4560 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j4122 
index: j4129 
=== Succesors ===
=== Usages ===
v4240 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4122 index: j4129  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4240 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4560 
value: v4245 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3720 
=== Usages ===
=== Predecessor ===
v3730 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4560 value: v4245 stateAfter: - lastLocationAccess: - #next: v3720  <|@  <|@
f <@~|@floating>@ <|@
tid j4134 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j4129 
y: j3761 
=== Succesors ===
=== Usages ===
j4123 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j4129 y: j3761  <|@  <|@
f <@*|@fixed>@ <|@
tid v3720 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3721 
=== Predecessor ===
v4240 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B276"
    from_bci -1
    to_bci -1
    predecessors "B275" "B274" 
    successors "B277" "B278" 
    xhandlers
    flags 
    probability 4599929446008461404
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j4123 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3721 
values: j4134 j4129 
=== Succesors ===
=== Usages ===
v4559 v4159 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3721 values: j4134 j4129  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3721 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3720 v3735 
=== Succesors ===
next: v3738 
=== Usages ===
j4123 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3720 v3735 #next: v3738  <|@  <|@
f <@~|@floating>@ <|@
tid j4158 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j3344 
y: j1816 
=== Succesors ===
=== Usages ===
v4159 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3344 y: j1816  <|@  <|@
f <@~|@floating>@ <|@
tid v4159 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j4158 
y: j4123 
=== Succesors ===
=== Usages ===
v3738 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j4158 y: j4123  <|@  <|@
f <@*|@fixed>@ <|@
tid v3738 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v4159 
=== Succesors ===
trueSuccessor: v3737 
falseSuccessor: v3736 
=== Usages ===
=== Predecessor ===
v3721 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4159 #trueSuccessor: v3737 #falseSuccessor: v3736  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B277"
    from_bci -1
    to_bci -1
    predecessors "B276" 
    successors "B281" 
    xhandlers
    flags 
    probability 4590922246753720412
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3737 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3741 
=== Usages ===
=== Predecessor ===
v3738 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3741  <|@  <|@
f <@*|@fixed>@ <|@
tid v3741 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3711 
=== Predecessor ===
v3737 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B278"
    from_bci -1
    to_bci -1
    predecessors "B276" 
    successors "B281" 
    xhandlers
    flags 
    probability 4598364989485822533
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3736 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4239 
=== Usages ===
=== Predecessor ===
v3738 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4239  <|@  <|@
f <@~|@floating>@ <|@
tid v4559 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j4122 
index: j4123 
=== Succesors ===
=== Usages ===
v4239 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4122 index: j4123  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4239 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4559 
value: a4244 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3723 
=== Usages ===
=== Predecessor ===
v3736 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4559 value: a4244 stateAfter: - lastLocationAccess: - #next: v3723  <|@  <|@
f <@*|@fixed>@ <|@
tid v3723 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3711 
=== Predecessor ===
v4239 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B279"
    from_bci -1
    to_bci -1
    predecessors "B268" 
    successors "B268" 
    xhandlers
    flags "lle" 
    loop_index 9
    loop_depth 1
    probability 4598364989485822533
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3704 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3703 
=== Usages ===
=== Predecessor ===
v3705 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3703  <|@  <|@
f <@*|@fixed>@ <|@
tid v3703 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v3699 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v3704 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v3699  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B280"
    from_bci -1
    to_bci -1
    predecessors "B264" 
    successors "B281" 
    xhandlers
    flags 
    probability 4599929446008461404
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3692 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3710 
=== Usages ===
=== Predecessor ===
v3694 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3710  <|@  <|@
f <@*|@fixed>@ <|@
tid v3710 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3711 
=== Predecessor ===
v3692 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B281"
    from_bci -1
    to_bci -1
    predecessors "B280" "B278" "B277" 
    successors "B282" "B283" 
    xhandlers
    flags 
    probability 4604433045635831900
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3711 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3710 v3723 v3741 
=== Succesors ===
next: v3048 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3710 v3723 v3741 #next: v3048  <|@  <|@
f <@~|@floating>@ <|@
tid v3045 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:154) [bci: 1]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1781 
y: i5 
=== Succesors ===
=== Usages ===
v3048 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1781 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v3048 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:154) [bci: 1]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v3045 
=== Succesors ===
trueSuccessor: v3046 
falseSuccessor: v3047 
=== Usages ===
=== Predecessor ===
v3711 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3045 #trueSuccessor: v3046 #falseSuccessor: v3047  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B282"
    from_bci -1
    to_bci -1
    predecessors "B281" 
    successors "B286" 
    xhandlers
    flags 
    probability 4599929446008461404
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3046 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:155) [bci: 4]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3072 
=== Usages ===
=== Predecessor ===
v3048 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3072  <|@  <|@
f <@*|@fixed>@ <|@
tid v3072 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3071 
=== Predecessor ===
v3046 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B283"
    from_bci -1
    to_bci -1
    predecessors "B281" 
    successors "B284" 
    xhandlers
    flags 
    probability 4599929446008461404
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3047 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:157) [bci: 5]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: void
=== Inputs ===
=== Succesors ===
next: j3049 
=== Usages ===
=== Predecessor ===
v3048 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j3049  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3049 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToFirstArrayElement(WriteBarrierSnippets.java:376) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:159) [bci: 20]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v4415 
=== Succesors ===
next: j3051 
=== Usages ===
j3050 
=== Predecessor ===
v3047 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v4415 #next: j3051  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3051 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:385) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v4415 
=== Succesors ===
next: v3059 
=== Usages ===
j3055 
=== Predecessor ===
j3049 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v4415 #next: v3059  <|@  <|@
f <@~|@floating>@ <|@
tid i3052 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: i32
=== Inputs ===
x: i1781 
y: i19 
=== Succesors ===
=== Usages ===
i3053 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1781 y: i19  <|@  <|@
f <@~|@floating>@ <|@
tid i3053 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i3052 
y: i1663 
=== Succesors ===
=== Usages ===
j3054 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i3052 y: i1663  <|@  <|@
f <@~|@floating>@ <|@
tid j3054 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 26]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
resultBits: 64
stamp: i64 [-2147483648 - 2147483644] ⇈fffffffffffffffc
=== Inputs ===
value: i3053 
=== Succesors ===
=== Usages ===
j3055 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i3053  <|@  <|@
f <@~|@floating>@ <|@
tid j3055 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 27]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: i64
=== Inputs ===
x: j3051 
y: j3054 
=== Succesors ===
=== Usages ===
j3056 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3051 y: j3054  <|@  <|@
f <@~|@floating>@ <|@
tid j3056 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 34]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j3055 
y: i2735 
=== Succesors ===
=== Usages ===
j3057 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j3055 y: i2735  <|@  <|@
f <@~|@floating>@ <|@
tid j3050 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:159) [bci: 24]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j3049 
y: i2735 
=== Succesors ===
=== Usages ===
j3057 j3070 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j3049 y: i2735  <|@  <|@
f <@~|@floating>@ <|@
tid j3057 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:161) [bci: 41]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: i64 [-36028797018963967 - 36028797018963967]
=== Inputs ===
x: j3056 
y: j3050 
=== Succesors ===
=== Usages ===
j3058 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j3056 y: j3050  <|@  <|@
f <@~|@floating>@ <|@
tid j3058 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:161) [bci: 43]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: i64 [-36028797018963966 - 36028797018963968]
=== Inputs ===
x: j3057 
y: j2632 
=== Succesors ===
=== Usages ===
j3061 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3057 y: j2632  <|@  <|@
f <@*|@fixed>@ <|@
tid v3059 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3060 
=== Predecessor ===
j3051 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B284"
    from_bci -1
    to_bci -1
    predecessors "B283" "B353" 
    successors "B285" "B353" 
    xhandlers
    flags "llh" 
    loop_index 10
    loop_depth 1
    probability 4604433045635831900
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3061 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3060 
values: j3058 j3062 
=== Succesors ===
=== Usages ===
j3062 v3063 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3060 values: j3058 j3062  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3060 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 2.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v3059 
=== Succesors ===
next: v3066 
=== Usages ===
j3061 v3064 v3069 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v3059 #next: v3066  <|@  <|@
f <@~|@floating>@ <|@
tid v3063 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 55]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3061 
y: j2632 
=== Succesors ===
=== Usages ===
v3066 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3061 y: j2632  <|@  <|@
f <@*|@fixed>@ <|@
tid v3066 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 55]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v3063 
=== Succesors ===
trueSuccessor: v3064 
falseSuccessor: v3065 
=== Usages ===
=== Predecessor ===
v3060 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3063 #trueSuccessor: v3064 #falseSuccessor: v3065  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B285"
    from_bci -1
    to_bci -1
    predecessors "B284" 
    successors "B286" 
    xhandlers
    flags 
    probability 4599929446008461404
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3064 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:165) [bci: 76]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v3060 
=== Succesors ===
next: v3073 
=== Usages ===
=== Predecessor ===
v3066 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v3060 #next: v3073  <|@  <|@
f <@*|@fixed>@ <|@
tid v3073 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3071 
=== Predecessor ===
v3064 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B286"
    from_bci -1
    to_bci -1
    predecessors "B282" "B285" 
    successors "B287" "B352" 
    xhandlers
    flags 
    probability 4604433045635831900
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3071 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3072 v3073 
=== Succesors ===
next: a2343 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3072 v3073 #next: a2343  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2343 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a3016 
=== Succesors ===
next: v4384 
=== Usages ===
v4408 a1563 v4475 
=== Predecessor ===
v3071 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a3016 #next: v4384  <|@  <|@
f <@~|@floating>@ <|@
tid v4475 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a2343 
index: - 
=== Succesors ===
=== Usages ===
v4384 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2343 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4384 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v4475 
=== Succesors ===
next: v1987 
=== Usages ===
v3249 
=== Predecessor ===
a2343 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4475 #next: v1987  <|@  <|@
f <@~|@floating>@ <|@
tid v3249 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v4384 
y: v3223 
=== Succesors ===
=== Usages ===
v1987 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v4384 y: v3223  <|@  <|@
f <@*|@fixed>@ <|@
tid v1987 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v3249 
=== Succesors ===
trueSuccessor: v1984 
falseSuccessor: v1986 
=== Usages ===
=== Predecessor ===
v4384 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3249 #trueSuccessor: v1984 #falseSuccessor: v1986  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B287"
    from_bci -1
    to_bci -1
    predecessors "B286" 
    successors "B288" "B289" 
    xhandlers
    flags 
    probability 4604433045635831900
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1984 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: j3078 
=== Usages ===
=== Predecessor ===
v1987 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j3078  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3078 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j3093 
=== Usages ===
v4476 v4477 
=== Predecessor ===
v1984 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j3093  <|@  <|@
f <@~|@floating>@ <|@
tid v4476 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j3078 
index: - 
=== Succesors ===
=== Usages ===
j3093 v3095 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3078 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3093 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v4476 
=== Succesors ===
next: j3094 
=== Usages ===
j3250 j3099 v4504 
=== Predecessor ===
j3078 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4476 #next: j3094  <|@  <|@
f <@~|@floating>@ <|@
tid v4477 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j3078 
index: - 
=== Succesors ===
=== Usages ===
j3094 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3078 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3094 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v4477 
=== Succesors ===
next: v3086 
=== Usages ===
v3083 
=== Predecessor ===
j3093 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4477 #next: v3086  <|@  <|@
f <@~|@floating>@ <|@
tid j3250 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3093 
y: j3225 
=== Succesors ===
=== Usages ===
v3083 v3095 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3093 y: j3225  <|@  <|@
f <@~|@floating>@ <|@
tid v3083 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3094 
y: j3250 
=== Succesors ===
=== Usages ===
v3086 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j3094 y: j3250  <|@  <|@
f <@*|@fixed>@ <|@
tid v3086 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v3083 
=== Succesors ===
trueSuccessor: v3084 
falseSuccessor: v3085 
=== Usages ===
=== Predecessor ===
j3094 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3083 #trueSuccessor: v3084 #falseSuccessor: v3085  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B288"
    from_bci -1
    to_bci -1
    predecessors "B287" 
    successors "B290" 
    xhandlers
    flags 
    probability 4574660039549593971
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3084 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a3089 
=== Usages ===
=== Predecessor ===
v3086 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a3089  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3089 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?179 
arguments: v2582 i1663 i8 
=== Succesors ===
next: j3090 
=== Usages ===
j3090 
=== Predecessor ===
v3084 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?179 arguments: v2582 i1663 i8 #next: j3090  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3090 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a3089 
=== Succesors ===
next: v3100 
=== Usages ===
j3099 
=== Predecessor ===
a3089 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a3089 #next: v3100  <|@  <|@
f <@*|@fixed>@ <|@
tid v3100 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3097 
=== Predecessor ===
j3090 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B289"
    from_bci -1
    to_bci -1
    predecessors "B287" 
    successors "B290" 
    xhandlers
    flags 
    probability 4604370467374926345
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3085 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3095 
=== Usages ===
=== Predecessor ===
v3086 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3095  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3095 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4476 
value: j3250 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3092 
=== Usages ===
=== Predecessor ===
v3085 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4476 value: j3250 stateAfter: - lastLocationAccess: - #next: v3092  <|@  <|@
f <@~|@floating>@ <|@
tid v4504 <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j3093 
index: - 
=== Succesors ===
=== Usages ===
v3092 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3093 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3092 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v4504 
=== Succesors ===
next: v3098 
=== Usages ===
=== Predecessor ===
v3095 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v4504 #next: v3098  <|@  <|@
f <@*|@fixed>@ <|@
tid v3098 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3097 
=== Predecessor ===
v3092 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B290"
    from_bci -1
    to_bci -1
    predecessors "B289" "B288" 
    successors "B291" 
    xhandlers
    flags 
    probability 4604433045635831900
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3099 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3097 
values: j3093 j3090 
=== Succesors ===
=== Usages ===
v4480 v4479 a2091 v4505 v4506 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3097 values: j3093 j3090  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3097 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3098 v3100 
=== Succesors ===
next: a2091 
=== Usages ===
j3099 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3098 v3100 #next: a2091  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2091 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j3099 
=== Succesors ===
next: j3109 
=== Usages ===
a2096 
=== Predecessor ===
v3097 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j3099 #next: j3109  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3109 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v4478 
=== Succesors ===
next: v3110 
=== Usages ===
v3110 
=== Predecessor ===
a2091 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4478 #next: v3110  <|@  <|@
f <@~|@floating>@ <|@
tid v4479 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j3099 
index: - 
=== Succesors ===
=== Usages ===
v3110 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3099 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3110 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4479 
value: j3109 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3113 
=== Usages ===
=== Predecessor ===
j3109 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4479 value: j3109 stateAfter: - lastLocationAccess: - #next: v3113  <|@  <|@
f <@~|@floating>@ <|@
tid v4480 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j3099 
index: - 
=== Succesors ===
=== Usages ===
v3113 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3099 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3113 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4480 
value: v3230 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3117 
=== Usages ===
=== Predecessor ===
v3110 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4480 value: v3230 stateAfter: - lastLocationAccess: - #next: v3117  <|@  <|@
f <@~|@floating>@ <|@
tid v4505 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j3099 
index: - 
=== Succesors ===
=== Usages ===
v3117 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3099 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3117 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4505 
value: a2145 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3119 
=== Usages ===
=== Predecessor ===
v3113 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4505 value: a2145 stateAfter: - lastLocationAccess: - #next: v3119  <|@  <|@
f <@~|@floating>@ <|@
tid v4506 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j3099 
index: - 
=== Succesors ===
=== Usages ===
v3119 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3099 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3119 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4506 
value: i5 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a2096 
=== Usages ===
=== Predecessor ===
v3117 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4506 value: i5 stateAfter: - lastLocationAccess: - #next: a2096  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2096 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a2091 
=== Succesors ===
next: v2097 
=== Usages ===
a1765 
=== Predecessor ===
v3119 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a2091 #next: v2097  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2097 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v1766 
=== Usages ===
=== Predecessor ===
a2096 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v1766  <|@  <|@
f <@~|@floating>@ <|@
tid v4408 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a2343 
index: i503 
=== Succesors ===
=== Usages ===
v1766 j3120 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2343 index: i503  <|@  <|@
f <@~|@floating>@ <|@
tid a1765 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:463) [bci: 26]
at java.lang.String.split(String.java:2368) [bci: 246]
op: Compress
stamp: n -
=== Inputs ===
value: a2096 
=== Succesors ===
=== Usages ===
v1766 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2096  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1766 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:463) [bci: 26]
at java.lang.String.split(String.java:2368) [bci: 246]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1980 
address: v4408 
value: a1765 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j3120 
=== Usages ===
=== Predecessor ===
v2097 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1980 address: v4408 value: a1765 stateAfter: - lastLocationAccess: - #next: j3120  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3120 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at java.util.ArrayList.add(ArrayList.java:463) [bci: 26]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v4408 
=== Succesors ===
next: v3124 
=== Usages ===
j3121 
=== Predecessor ===
v1766 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v4408 #next: v3124  <|@  <|@
f <@~|@floating>@ <|@
tid j3121 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.ArrayList.add(ArrayList.java:463) [bci: 26]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j3120 
y: i2735 
=== Succesors ===
=== Usages ===
v4481 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j3120 y: i2735  <|@  <|@
f <@~|@floating>@ <|@
tid v4481 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j3121 
index: j2739 
=== Succesors ===
=== Usages ===
v3124 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3121 index: j2739  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3124 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.ArrayList.add(ArrayList.java:463) [bci: 26]
at java.lang.String.split(String.java:2368) [bci: 246]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4481 
value: i2741 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1559 
=== Usages ===
=== Predecessor ===
j3120 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4481 value: i2741 stateAfter: - lastLocationAccess: - #next: v1559  <|@  <|@
f <@*|@fixed>@ <|@
tid v1559 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1560 
=== Predecessor ===
v3124 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B291"
    from_bci -1
    to_bci -1
    predecessors "B290" "B238" 
    successors "B292" 
    xhandlers
    flags 
    probability 4614149222986594394
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a1563 <|@
d <@d|@=== Debug Properties ===
stamp: a! [Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v1560 
values: a2343 a505 
=== Succesors ===
=== Usages ===
?1467 v4402 v4401 v4405 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1560 values: a2343 a505  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1560 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1559 v1561 
=== Succesors ===
next: i4385 
=== Usages ===
a1563 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1559 v1561 #next: i4385  <|@  <|@
f <@~|@floating>@ <|@
tid v4401 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1563 
index: - 
=== Succesors ===
=== Usages ===
i4385 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1563 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4385 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.ArrayList.elementData(ArrayList.java:422) [bci: 5]
at java.util.ArrayList.get(ArrayList.java:435) [bci: 7]
at java.lang.String.split(String.java:2373) [bci: 272]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v4401 
=== Succesors ===
next: v77 
=== Usages ===
v1689 j1826 
=== Predecessor ===
v1560 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4401 #next: v77  <|@  <|@
tid ?1467 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a244 
values: i396 i396 a1563 
=== Succesors ===
=== Usages ===
?80 ?688 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a244 values: i396 i396 a1563  <|@  <|@
f <@*|@fixed>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.split(String.java:2373) [bci: 261]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v78 
=== Predecessor ===
i4385 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B292"
    from_bci -1
    to_bci -1
    predecessors "B291" "B301" 
    successors "B293" "B294" 
    xhandlers
    flags "llh" 
    loop_index 11
    loop_depth 1
    probability 4618652822613964890
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i79 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v78 
values: i396 i83 
=== Succesors ===
=== Usages ===
?80 v81 i83 v853 i3130 a3152 v875 v587 j1828 ?1002 v3171 v3137 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v78 values: i396 i83  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 2.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.lang.String.split(String.java:2373) [bci: 261]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v77 
=== Succesors ===
next: v1992 
=== Usages ===
i79 v98 v102 v1991 v1996 v2001 v2006 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v77 #next: v1992  <|@  <|@
tid ?80 <|@
d <@d|@=== Debug Properties ===
bci: 261
code: ResolvedJavaMethodBytecode<String.split(String, int)>
duringCall: false
localsSize: 10
locksSize: 0
rethrowException: false
sourceFile: String.java
sourceLine: 2373
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - - - - a244 i79 - 
virtualObjectMappings: ?1467 
=== Succesors ===
=== Usages ===
v1809 v2443 a3152 a4388 i4389 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - - - - a244 i79 - virtualObjectMappings: ?1467  <|@  <|@
f <@~|@floating>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.split(String.java:2373) [bci: 263]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i79 
y: i8 
=== Succesors ===
=== Usages ===
v1992 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i79 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v1992 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.split(String.java:2373) [bci: 263]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v81 
=== Succesors ===
trueSuccessor: v1991 
falseSuccessor: v1988 
=== Usages ===
=== Predecessor ===
v78 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v81 #trueSuccessor: v1991 #falseSuccessor: v1988  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B293"
    from_bci -1
    to_bci -1
    predecessors "B292" 
    successors "B351" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1991 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.split(String.java:2373) [bci: 263]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v78 
=== Succesors ===
next: v2444 
=== Usages ===
=== Predecessor ===
v1992 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v78 #next: v2444  <|@  <|@
f <@~|@floating>@ <|@
tid i2445 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -431379
stableDimension: 0
stamp: i32 [-431379] ⇊00000000fff96aed ⇈00000000fff96aed
stampKind: i32
value: int[-431379|0xfffffffffff96aed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2441 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2444 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2438 
=== Predecessor ===
v1991 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B294"
    from_bci -1
    to_bci -1
    predecessors "B292" 
    successors "B295" "B350" 
    xhandlers
    flags 
    loop_index 11
    loop_depth 1
    probability 4618652822613964890
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1988 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.split(String.java:2373) [bci: 263]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1997 
=== Usages ===
=== Predecessor ===
v1992 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1997  <|@  <|@
f <@~|@floating>@ <|@
tid i83 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.String.split(String.java:2373) [bci: 271]
stamp: i32
=== Inputs ===
x: i79 
y: i19 
=== Succesors ===
=== Usages ===
i3191 i79 v186 v1689 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i79 y: i19  <|@  <|@
f <@~|@floating>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList.rangeCheck(ArrayList.java:656) [bci: 5]
at java.util.ArrayList.get(ArrayList.java:433) [bci: 2]
at java.lang.String.split(String.java:2373) [bci: 272]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i83 
y: i396 
=== Succesors ===
=== Usages ===
v1997 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i83 y: i396  <|@  <|@
f <@*|@fixed>@ <|@
tid v1997 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.rangeCheck(ArrayList.java:656) [bci: 5]
at java.util.ArrayList.get(ArrayList.java:433) [bci: 2]
at java.lang.String.split(String.java:2373) [bci: 272]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v186 
=== Succesors ===
trueSuccessor: v1993 
falseSuccessor: v1996 
=== Usages ===
=== Predecessor ===
v1988 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v186 #trueSuccessor: v1993 #falseSuccessor: v1996  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B295"
    from_bci -1
    to_bci -1
    predecessors "B294" 
    successors "B296" "B349" 
    xhandlers
    flags 
    loop_index 11
    loop_depth 1
    probability 4618652822613964890
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1993 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.rangeCheck(ArrayList.java:656) [bci: 5]
at java.util.ArrayList.get(ArrayList.java:433) [bci: 2]
at java.lang.String.split(String.java:2373) [bci: 272]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2002 
=== Usages ===
=== Predecessor ===
v1997 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2002  <|@  <|@
f <@~|@floating>@ <|@
tid v1689 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.ArrayList.elementData(ArrayList.java:422) [bci: 5]
at java.util.ArrayList.get(ArrayList.java:435) [bci: 7]
at java.lang.String.split(String.java:2373) [bci: 272]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i83 
y: i4385 
=== Succesors ===
=== Usages ===
v2002 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i83 y: i4385  <|@  <|@
f <@*|@fixed>@ <|@
tid v2002 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.elementData(ArrayList.java:422) [bci: 5]
at java.util.ArrayList.get(ArrayList.java:435) [bci: 7]
at java.lang.String.split(String.java:2373) [bci: 272]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1689 
=== Succesors ===
trueSuccessor: v1998 
falseSuccessor: v2001 
=== Usages ===
=== Predecessor ===
v1993 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1689 #trueSuccessor: v1998 #falseSuccessor: v2001  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B296"
    from_bci -1
    to_bci -1
    predecessors "B295" 
    successors "B297" "B298" 
    xhandlers
    flags 
    loop_index 11
    loop_depth 1
    probability 4618652822613964890
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1998 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.elementData(ArrayList.java:422) [bci: 5]
at java.util.ArrayList.get(ArrayList.java:435) [bci: 7]
at java.lang.String.split(String.java:2373) [bci: 272]
stamp: void
=== Inputs ===
=== Succesors ===
next: a4386 
=== Usages ===
a4386 
=== Predecessor ===
v2002 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a4386  <|@  <|@
f <@~|@floating>@ <|@
tid j1828 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i79 
=== Succesors ===
=== Usages ===
j1829 v1844 j3857 j3849 j3854 v4402 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i79  <|@  <|@
f <@~|@floating>@ <|@
tid v4402 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times4
stamp: void*
=== Inputs ===
base: a1563 
index: j1828 
=== Succesors ===
=== Usages ===
a4386 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1563 index: j1828  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4386 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.ArrayList.elementData(ArrayList.java:422) [bci: 5]
at java.util.ArrayList.get(ArrayList.java:435) [bci: 7]
at java.lang.String.split(String.java:2373) [bci: 272]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v1998 
address: v4402 
=== Succesors ===
next: v2102 
=== Usages ===
v4482 v1699 v4403 
=== Predecessor ===
v1998 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1998 address: v4402 #next: v2102  <|@  <|@
f <@~|@floating>@ <|@
tid v1699 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.split(String.java:2373) [bci: 275]
stamp: void
=== Inputs ===
value: a4386 
=== Succesors ===
=== Usages ===
v2102 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a4386  <|@  <|@
f <@*|@fixed>@ <|@
tid v2102 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 15]
at java.lang.String.split(String.java:2373) [bci: 275]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v1699 
=== Succesors ===
trueSuccessor: v2101 
falseSuccessor: v2100 
=== Usages ===
=== Predecessor ===
a4386 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1699 #trueSuccessor: v2101 #falseSuccessor: v2100  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B297"
    from_bci -1
    to_bci -1
    predecessors "B296" 
    successors "B300" 
    xhandlers
    flags 
    loop_index 11
    loop_depth 1
    probability 4603748662894538004
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2101 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 18]
at java.lang.String.split(String.java:2373) [bci: 275]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2538 
=== Usages ===
=== Predecessor ===
v2102 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2538  <|@  <|@
f <@*|@fixed>@ <|@
tid v2538 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.split(String.java:2373) [bci: 275]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2536 
=== Predecessor ===
v2101 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B298"
    from_bci -1
    to_bci -1
    predecessors "B296" 
    successors "B299" "B348" 
    xhandlers
    flags 
    loop_index 11
    loop_depth 1
    probability 4617956142195307192
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:141) [bci: 28]
at java.lang.String.split(String.java:2373) [bci: 275]
stamp: void
=== Inputs ===
=== Succesors ===
next: v4387 
=== Usages ===
=== Predecessor ===
v2102 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4387  <|@  <|@
f <@~|@floating>@ <|@
tid v4482 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a4386 
=== Succesors ===
=== Usages ===
v4387 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a4386  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4387 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.lang.String.split(String.java:2373) [bci: 275]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v4482 
=== Succesors ===
next: v4321 
=== Usages ===
v3255 
=== Predecessor ===
v2100 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4482 #next: v4321  <|@  <|@
f <@~|@floating>@ <|@
tid v3255 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.lang.String.split(String.java:2373) [bci: 275]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v4387 
y: v3230 
=== Succesors ===
=== Usages ===
v4321 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v4387 y: v3230  <|@  <|@
f <@*|@fixed>@ <|@
tid v4321 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.split(String.java:2373) [bci: 275]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v3255 
=== Succesors ===
trueSuccessor: v4320 
falseSuccessor: v2006 
=== Usages ===
=== Predecessor ===
v4387 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3255 #trueSuccessor: v4320 #falseSuccessor: v2006  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B299"
    from_bci -1
    to_bci -1
    predecessors "B298" 
    successors "B300" 
    xhandlers
    flags 
    loop_index 11
    loop_depth 1
    probability 4617956142195307192
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4320 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.split(String.java:2373) [bci: 275]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2547 
=== Usages ===
=== Predecessor ===
v4321 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2547  <|@  <|@
f <@*|@fixed>@ <|@
tid v2547 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.split(String.java:2373) [bci: 275]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2536 
=== Predecessor ===
v4320 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B300"
    from_bci -1
    to_bci -1
    predecessors "B297" "B299" 
    successors "B301" "B302" 
    xhandlers
    flags 
    loop_index 11
    loop_depth 1
    probability 4618652822613964890
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2536 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.split(String.java:2373) [bci: 275]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2538 v2547 
=== Succesors ===
next: a4388 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2538 v2547 #next: a4388  <|@  <|@
f <@~|@floating>@ <|@
tid v4403 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a4386 
=== Succesors ===
=== Usages ===
a4388 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a4386  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4388 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at java.lang.String.split(String.java:2373) [bci: 278]
nullCheck: true
stamp: n# [C
=== Inputs ===
stateBefore: ?80 
guard: - 
address: v4403 
=== Succesors ===
next: i4389 
=== Usages ===
v4404 
=== Predecessor ===
v2536 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?80 guard: - address: v4403 #next: i4389  <|@  <|@
f <@~|@floating>@ <|@
tid v4404 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a4388 
=== Succesors ===
=== Usages ===
i4389 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a4388  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4389 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at java.lang.String.split(String.java:2373) [bci: 278]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?80 
guard: - 
address: v4404 
=== Succesors ===
next: v101 
=== Usages ===
v95 
=== Predecessor ===
a4388 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?80 guard: - address: v4404 #next: v101  <|@  <|@
f <@~|@floating>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.split(String.java:2373) [bci: 281]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4389 
y: i5 
=== Succesors ===
=== Usages ===
v101 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i4389 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.split(String.java:2373) [bci: 281]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v95 
=== Succesors ===
trueSuccessor: v96 
falseSuccessor: v98 
=== Usages ===
=== Predecessor ===
i4389 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v95 #trueSuccessor: v96 #falseSuccessor: v98  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B301"
    from_bci -1
    to_bci -1
    predecessors "B300" 
    successors "B292" 
    xhandlers
    flags "lle" 
    loop_index 11
    loop_depth 1
    probability 4614149222986594394
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.split(String.java:2374) [bci: 284]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1809 
=== Usages ===
=== Predecessor ===
v101 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1809  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1809 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?80 
=== Succesors ===
next: v102 
=== Usages ===
=== Predecessor ===
v96 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?80 #next: v102  <|@  <|@
f <@*|@fixed>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at java.lang.String.split(String.java:2373) [bci: 261]
stamp: void
=== Inputs ===
loopBegin: v78 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1809 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v78  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B302"
    from_bci -1
    to_bci -1
    predecessors "B300" 
    successors "B303" "B347" 
    xhandlers
    flags 
    probability 4614149222986594394
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.split(String.java:2377) [bci: 290]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v78 
=== Succesors ===
next: v4283 
=== Usages ===
=== Predecessor ===
v101 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v78 #next: v4283  <|@  <|@
f <@~|@floating>@ <|@
tid j1829 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j1828 
y: j1816 
=== Succesors ===
=== Usages ===
v1844 v1831 v1838 v3860 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1828 y: j1816  <|@  <|@
f <@~|@floating>@ <|@
tid j1826 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i4385 
=== Succesors ===
=== Usages ===
v1831 v1838 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i4385  <|@  <|@
f <@~|@floating>@ <|@
tid v1831 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1829 
y: j1826 
=== Succesors ===
=== Usages ===
v4283 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1829 y: j1826  <|@  <|@
f <@*|@fixed>@ <|@
tid v4283 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1119) [bci: 47]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
at java.lang.String.split(String.java:2378) [bci: 307]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1831 
=== Succesors ===
trueSuccessor: v4282 
falseSuccessor: v4279 
=== Usages ===
=== Predecessor ===
v98 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1831 #trueSuccessor: v4282 #falseSuccessor: v4279  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B303"
    from_bci -1
    to_bci -1
    predecessors "B302" 
    successors "B304" "B346" 
    xhandlers
    flags 
    probability 4614149222986594394
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4282 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1119) [bci: 47]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
at java.lang.String.split(String.java:2378) [bci: 307]
stamp: void
=== Inputs ===
=== Succesors ===
next: v4299 
=== Usages ===
=== Predecessor ===
v4283 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4299  <|@  <|@
f <@~|@floating>@ <|@
tid v1838 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1829 
y: j1826 
=== Succesors ===
=== Usages ===
v4299 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1829 y: j1826  <|@  <|@
f <@*|@fixed>@ <|@
tid v4299 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1122) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
at java.lang.String.split(String.java:2378) [bci: 307]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1838 
=== Succesors ===
trueSuccessor: v4298 
falseSuccessor: v4295 
=== Usages ===
=== Predecessor ===
v4282 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1838 #trueSuccessor: v4298 #falseSuccessor: v4295  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B304"
    from_bci -1
    to_bci -1
    predecessors "B303" 
    successors "B305" "B345" 
    xhandlers
    flags 
    probability 4614149222986594394
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4298 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1122) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
at java.lang.String.split(String.java:2378) [bci: 307]
stamp: void
=== Inputs ===
=== Succesors ===
next: v4315 
=== Usages ===
v1843 
=== Predecessor ===
v4299 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4315  <|@  <|@
f <@~|@floating>@ <|@
tid v1844 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1829 
y: j1828 
=== Succesors ===
=== Usages ===
v4315 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1829 y: j1828  <|@  <|@
f <@*|@fixed>@ <|@
tid v4315 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
at java.lang.String.split(String.java:2378) [bci: 307]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1844 
=== Succesors ===
trueSuccessor: v4314 
falseSuccessor: v4311 
=== Usages ===
=== Predecessor ===
v4298 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1844 #trueSuccessor: v4314 #falseSuccessor: v4311  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B305"
    from_bci -1
    to_bci -1
    predecessors "B304" 
    successors "B306" "B307" 
    xhandlers
    flags 
    probability 4614149222986594394
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4314 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
at java.lang.String.split(String.java:2378) [bci: 307]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2033 
=== Usages ===
v1849 
=== Predecessor ===
v4315 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2033  <|@  <|@
f <@~|@floating>@ <|@
tid v587 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList.subListRangeCheck(ArrayList.java:1011) [bci: 33]
at java.util.ArrayList.subList(ArrayList.java:1004) [bci: 6]
at java.lang.String.split(String.java:2378) [bci: 302]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i396 
y: i79 
=== Succesors ===
=== Usages ===
v2033 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i396 y: i79  <|@  <|@
f <@*|@fixed>@ <|@
tid v2033 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.subListRangeCheck(ArrayList.java:1011) [bci: 33]
at java.util.ArrayList.subList(ArrayList.java:1004) [bci: 6]
at java.lang.String.split(String.java:2378) [bci: 302]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v587 
=== Succesors ===
trueSuccessor: v2032 
falseSuccessor: v2030 
=== Usages ===
=== Predecessor ===
v4314 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v587 #trueSuccessor: v2032 #falseSuccessor: v2030  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B306"
    from_bci -1
    to_bci -1
    predecessors "B305" 
    successors "B351" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2032 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.subListRangeCheck(ArrayList.java:1011) [bci: 33]
at java.util.ArrayList.subList(ArrayList.java:1004) [bci: 6]
at java.lang.String.split(String.java:2378) [bci: 302]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2439 
=== Usages ===
=== Predecessor ===
v2033 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2439  <|@  <|@
f <@~|@floating>@ <|@
tid i2440 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -438803
stableDimension: 0
stamp: i32 [-438803] ⇊00000000fff94ded ⇈00000000fff94ded
stampKind: i32
value: int[-438803|0xfffffffffff94ded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2441 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2439 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2438 
=== Predecessor ===
v2032 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B307"
    from_bci -1
    to_bci -1
    predecessors "B305" 
    successors "B308" "B311" 
    xhandlers
    flags 
    probability 4614149222986594394
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2030 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.subListRangeCheck(ArrayList.java:1011) [bci: 33]
at java.util.ArrayList.subList(ArrayList.java:1004) [bci: 6]
at java.lang.String.split(String.java:2378) [bci: 302]
stamp: void
=== Inputs ===
=== Succesors ===
next: j3132 
=== Usages ===
=== Predecessor ===
v2033 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j3132  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3132 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.split(String.java:2377) [bci: 292]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j3168 
=== Usages ===
v4483 v4484 
=== Predecessor ===
v2030 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j3168  <|@  <|@
f <@~|@floating>@ <|@
tid v4483 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j3132 
index: - 
=== Succesors ===
=== Usages ===
j3168 v3170 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3132 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3168 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.split(String.java:2377) [bci: 292]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v4483 
=== Succesors ===
next: j3169 
=== Usages ===
j3136 v4485 v4486 a3151 v4491 v4487 v4488 v4489 v4490 
=== Predecessor ===
j3132 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4483 #next: j3169  <|@  <|@
f <@~|@floating>@ <|@
tid v4484 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j3132 
index: - 
=== Succesors ===
=== Usages ===
j3169 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3132 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3169 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.split(String.java:2377) [bci: 292]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v4484 
=== Succesors ===
next: v3140 
=== Usages ===
v3141 
=== Predecessor ===
j3168 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4484 #next: v3140  <|@  <|@
f <@~|@floating>@ <|@
tid v3137 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.split(String.java:2377) [bci: 292]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i79 
y: i2641 
=== Succesors ===
=== Usages ===
v3140 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i79 y: i2641  <|@  <|@
f <@*|@fixed>@ <|@
tid v3140 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.split(String.java:2377) [bci: 292]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v3137 
=== Succesors ===
trueSuccessor: v3139 
falseSuccessor: v3138 
=== Usages ===
=== Predecessor ===
j3169 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3137 #trueSuccessor: v3139 #falseSuccessor: v3138  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B308"
    from_bci -1
    to_bci -1
    predecessors "B307" 
    successors "B309" "B310" 
    xhandlers
    flags 
    probability 4613452542567936696
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3139 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.split(String.java:2377) [bci: 292]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3147 
=== Usages ===
=== Predecessor ===
v3140 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3147  <|@  <|@
f <@~|@floating>@ <|@
tid i3130 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.split(String.java:2377) [bci: 292]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i79 
y: i1663 
=== Succesors ===
=== Usages ===
i3159 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i79 y: i1663  <|@  <|@
f <@~|@floating>@ <|@
tid i3159 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.split(String.java:2377) [bci: 292]
stamp: i32 [-2147483645 - 2147483647] ⇊0000000000000003
=== Inputs ===
x: i3130 
y: i2664 
=== Succesors ===
=== Usages ===
i3131 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i3130 y: i2664  <|@  <|@
f <@~|@floating>@ <|@
tid i3131 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.split(String.java:2377) [bci: 292]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i3159 
y: i2634 
=== Succesors ===
=== Usages ===
j3135 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i3159 y: i2634  <|@  <|@
f <@~|@floating>@ <|@
tid j3135 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.split(String.java:2377) [bci: 292]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i3131 
=== Succesors ===
=== Usages ===
j3136 v4487 v4488 v4489 v4490 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i3131  <|@  <|@
f <@~|@floating>@ <|@
tid j3136 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.split(String.java:2377) [bci: 292]
stamp: i64
=== Inputs ===
x: j3135 
y: j3168 
=== Succesors ===
=== Usages ===
v3141 v3170 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3135 y: j3168  <|@  <|@
f <@~|@floating>@ <|@
tid v3141 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.split(String.java:2377) [bci: 292]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3169 
y: j3136 
=== Succesors ===
=== Usages ===
v3147 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j3169 y: j3136  <|@  <|@
f <@*|@fixed>@ <|@
tid v3147 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.split(String.java:2377) [bci: 292]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v3141 
=== Succesors ===
trueSuccessor: v3146 
falseSuccessor: v3145 
=== Usages ===
=== Predecessor ===
v3139 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3141 #trueSuccessor: v3146 #falseSuccessor: v3145  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B309"
    from_bci -1
    to_bci -1
    predecessors "B308" 
    successors "B312" 
    xhandlers
    flags 
    probability 4583682979831360632
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3146 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.split(String.java:2377) [bci: 292]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3144 
=== Usages ===
=== Predecessor ===
v3147 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3144  <|@  <|@
f <@*|@fixed>@ <|@
tid v3144 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.split(String.java:2377) [bci: 292]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3143 
=== Predecessor ===
v3146 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B310"
    from_bci -1
    to_bci -1
    predecessors "B308" 
    successors "B313" 
    xhandlers
    flags 
    probability 4613389841330257503
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3145 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.split(String.java:2377) [bci: 292]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3170 
=== Usages ===
=== Predecessor ===
v3147 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3170  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3170 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.split(String.java:2377) [bci: 292]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4483 
value: j3136 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3161 
=== Usages ===
=== Predecessor ===
v3145 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4483 value: j3136 stateAfter: - lastLocationAccess: - #next: v3161  <|@  <|@
f <@~|@floating>@ <|@
tid v4487 <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j3135 
index: j3168 
=== Succesors ===
=== Usages ===
v3161 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3135 index: j3168  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3161 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.split(String.java:2377) [bci: 292]
stamp: void
=== Inputs ===
address: v4487 
=== Succesors ===
next: v3163 
=== Usages ===
=== Predecessor ===
v3170 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v4487 #next: v3163  <|@  <|@
f <@~|@floating>@ <|@
tid v4488 <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j3135 
index: j3168 
=== Succesors ===
=== Usages ===
v3163 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3135 index: j3168  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3163 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.split(String.java:2377) [bci: 292]
stamp: void
=== Inputs ===
address: v4488 
=== Succesors ===
next: v3165 
=== Usages ===
=== Predecessor ===
v3161 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v4488 #next: v3165  <|@  <|@
f <@~|@floating>@ <|@
tid v4489 <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j3135 
index: j3168 
=== Succesors ===
=== Usages ===
v3165 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3135 index: j3168  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3165 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.split(String.java:2377) [bci: 292]
stamp: void
=== Inputs ===
address: v4489 
=== Succesors ===
next: v3167 
=== Usages ===
=== Predecessor ===
v3163 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v4489 #next: v3167  <|@  <|@
f <@~|@floating>@ <|@
tid v4490 <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j3135 
index: j3168 
=== Succesors ===
=== Usages ===
v3167 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3135 index: j3168  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3167 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.split(String.java:2377) [bci: 292]
stamp: void
=== Inputs ===
address: v4490 
=== Succesors ===
next: v3171 
=== Usages ===
=== Predecessor ===
v3165 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v4490 #next: v3171  <|@  <|@
f <@~|@floating>@ <|@
tid v4485 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j3168 
index: - 
=== Succesors ===
=== Usages ===
v3171 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3168 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3171 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.split(String.java:2377) [bci: 292]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4485 
value: i79 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3172 
=== Usages ===
=== Predecessor ===
v3167 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4485 value: i79 stateAfter: - lastLocationAccess: - #next: v3172  <|@  <|@
f <@~|@floating>@ <|@
tid v4486 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j3168 
index: - 
=== Succesors ===
=== Usages ===
v3172 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3168 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3172 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.split(String.java:2377) [bci: 292]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4486 
value: j2632 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3175 
=== Usages ===
=== Predecessor ===
v3171 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4486 value: j2632 stateAfter: - lastLocationAccess: - #next: v3175  <|@  <|@
f <@~|@floating>@ <|@
tid v4491 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j3168 
index: - 
=== Succesors ===
=== Usages ===
v3175 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3168 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3175 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.split(String.java:2377) [bci: 292]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4491 
value: v3243 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3150 
=== Usages ===
=== Predecessor ===
v3172 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4491 value: v3243 stateAfter: - lastLocationAccess: - #next: v3150  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3150 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.split(String.java:2377) [bci: 292]
stamp: void
=== Inputs ===
=== Succesors ===
next: a3151 
=== Usages ===
=== Predecessor ===
v3175 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a3151  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3151 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.split(String.java:2377) [bci: 292]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j3168 
=== Succesors ===
next: v3153 
=== Usages ===
a3156 
=== Predecessor ===
v3150 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j3168 #next: v3153  <|@  <|@
f <@*|@fixed>@ <|@
tid v3153 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.split(String.java:2377) [bci: 292]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3154 
=== Predecessor ===
a3151 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B311"
    from_bci -1
    to_bci -1
    predecessors "B307" 
    successors "B312" 
    xhandlers
    flags 
    probability 4599245063267167508
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3138 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.split(String.java:2377) [bci: 292]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3142 
=== Usages ===
=== Predecessor ===
v3140 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3142  <|@  <|@
f <@*|@fixed>@ <|@
tid v3142 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.split(String.java:2377) [bci: 292]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3143 
=== Predecessor ===
v3138 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B312"
    from_bci -1
    to_bci -1
    predecessors "B311" "B309" 
    successors "B313" 
    xhandlers
    flags 
    probability 4599746673168601052
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3143 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.split(String.java:2377) [bci: 292]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3142 v3144 
=== Succesors ===
next: a3152 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3142 v3144 #next: a3152  <|@  <|@
f <@~|@floating>@ <|@
tid v2872 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[Ljava/lang/String;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[Ljava/lang/String;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a3152 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3152 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.split(String.java:2377) [bci: 292]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?80 
arguments: v2872 i79 i5 
=== Succesors ===
next: v3155 
=== Usages ===
a3156 
=== Predecessor ===
v3143 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?80 arguments: v2872 i79 i5 #next: v3155  <|@  <|@
f <@*|@fixed>@ <|@
tid v3155 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.split(String.java:2377) [bci: 292]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3154 
=== Predecessor ===
a3152 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B313"
    from_bci -1
    to_bci -1
    predecessors "B310" "B312" 
    successors "B314" "B315" 
    xhandlers
    flags 
    probability 4614149222986594394
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a3156 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.split(String.java:2377) [bci: 292]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v3154 
values: a3151 a3152 
=== Succesors ===
=== Usages ===
v4416 a2347 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3154 values: a3151 a3152  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3154 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.split(String.java:2377) [bci: 292]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3153 v3155 
=== Succesors ===
next: v3822 
=== Usages ===
a3156 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3153 v3155 #next: v3822  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3822 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v3355 
=== Usages ===
j3824 
=== Predecessor ===
v3154 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v3355  <|@  <|@
f <@~|@floating>@ <|@
tid v4416 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a3156 
index: - 
=== Succesors ===
=== Usages ===
j3824 j3189 j3187 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3156 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j3824 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v3822 
address: v4416 
=== Succesors ===
=== Usages ===
v4520 v4521 v4522 v4523 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v3822 address: v4416  <|@  <|@
f <@~|@floating>@ <|@
tid j3849 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j1828 
y: j3807 
=== Succesors ===
=== Usages ===
v3850 v3852 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1828 y: j3807  <|@  <|@
f <@~|@floating>@ <|@
tid v3850 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3849 
y: j2049 
=== Succesors ===
=== Usages ===
v3355 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3849 y: j2049  <|@  <|@
f <@*|@fixed>@ <|@
tid v3355 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v3850 
=== Succesors ===
trueSuccessor: v3353 
falseSuccessor: v3354 
=== Usages ===
=== Predecessor ===
v3822 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3850 #trueSuccessor: v3353 #falseSuccessor: v3354  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B314"
    from_bci -1
    to_bci -1
    predecessors "B313" 
    successors "B318" 
    xhandlers
    flags 
    probability 4612407521939950148
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3353 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3364 
=== Usages ===
=== Predecessor ===
v3355 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3364  <|@  <|@
f <@*|@fixed>@ <|@
tid v3364 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3365 
=== Predecessor ===
v3353 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B315"
    from_bci -1
    to_bci -1
    predecessors "B313" 
    successors "B316" 
    xhandlers
    flags 
    probability 4605142023731853402
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3354 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3356 
=== Usages ===
=== Predecessor ===
v3355 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3356  <|@  <|@
f <@*|@fixed>@ <|@
tid v3356 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3357 
=== Predecessor ===
v3354 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B316"
    from_bci -1
    to_bci -1
    predecessors "B315" "B344" 
    successors "B317" "B344" 
    xhandlers
    flags "llh" 
    loop_index 12
    loop_depth 1
    probability 4614149222986594394
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3843 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3357 
values: j2049 j3848 
=== Succesors ===
=== Usages ===
v4523 j3848 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3357 values: j2049 j3848  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3357 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v3356 
=== Succesors ===
next: v4198 
=== Usages ===
j3843 v3360 v3361 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v3356 #next: v4198  <|@  <|@
f <@~|@floating>@ <|@
tid v4523 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j3824 
index: j3843 
=== Succesors ===
=== Usages ===
v4198 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3824 index: j3843  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4198 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4523 
value: v4243 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3363 
=== Usages ===
=== Predecessor ===
v3357 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4523 value: v4243 stateAfter: - lastLocationAccess: - #next: v3363  <|@  <|@
f <@~|@floating>@ <|@
tid j3848 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3843 
y: j2577 
=== Succesors ===
=== Usages ===
j3837 j3843 v3852 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3843 y: j2577  <|@  <|@
f <@~|@floating>@ <|@
tid v3852 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3849 
y: j3848 
=== Succesors ===
=== Usages ===
v3363 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3849 y: j3848  <|@  <|@
f <@*|@fixed>@ <|@
tid v3363 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3852 
=== Succesors ===
trueSuccessor: v3360 
falseSuccessor: v3362 
=== Usages ===
=== Predecessor ===
v4198 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3852 #trueSuccessor: v3360 #falseSuccessor: v3362  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B317"
    from_bci -1
    to_bci -1
    predecessors "B316" 
    successors "B318" 
    xhandlers
    flags 
    probability 4605142023731853402
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3360 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v3357 
=== Succesors ===
next: v3366 
=== Usages ===
=== Predecessor ===
v3363 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v3357 #next: v3366  <|@  <|@
f <@*|@fixed>@ <|@
tid v3366 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3365 
=== Predecessor ===
v3360 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B318"
    from_bci -1
    to_bci -1
    predecessors "B314" "B317" 
    successors "B319" "B320" 
    xhandlers
    flags 
    probability 4614149222986594394
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3837 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3365 
values: j2049 j3848 
=== Succesors ===
=== Usages ===
v4522 j3842 j3831 v3855 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3365 values: j2049 j3848  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3365 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3364 v3366 
=== Succesors ===
next: v3384 
=== Usages ===
j3837 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3364 v3366 #next: v3384  <|@  <|@
f <@~|@floating>@ <|@
tid j3854 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j1828 
y: j3811 
=== Succesors ===
=== Usages ===
v3855 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1828 y: j3811  <|@  <|@
f <@~|@floating>@ <|@
tid v3855 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3854 
y: j3837 
=== Succesors ===
=== Usages ===
v3384 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3854 y: j3837  <|@  <|@
f <@*|@fixed>@ <|@
tid v3384 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3855 
=== Succesors ===
trueSuccessor: v3383 
falseSuccessor: v3382 
=== Usages ===
=== Predecessor ===
v3365 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3855 #trueSuccessor: v3383 #falseSuccessor: v3382  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B319"
    from_bci -1
    to_bci -1
    predecessors "B318" 
    successors "B321" 
    xhandlers
    flags 
    probability 4605142023731853402
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3383 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3387 
=== Usages ===
=== Predecessor ===
v3384 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3387  <|@  <|@
f <@*|@fixed>@ <|@
tid v3387 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3376 
=== Predecessor ===
v3383 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B320"
    from_bci -1
    to_bci -1
    predecessors "B318" 
    successors "B321" 
    xhandlers
    flags 
    probability 4612407521939950148
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3382 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4197 
=== Usages ===
=== Predecessor ===
v3384 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4197  <|@  <|@
f <@~|@floating>@ <|@
tid v4522 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j3824 
index: j3837 
=== Succesors ===
=== Usages ===
v4197 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3824 index: j3837  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4197 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4522 
value: v4246 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3375 
=== Usages ===
=== Predecessor ===
v3382 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4522 value: v4246 stateAfter: - lastLocationAccess: - #next: v3375  <|@  <|@
f <@~|@floating>@ <|@
tid j3842 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3837 
y: j3783 
=== Succesors ===
=== Usages ===
j3831 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3837 y: j3783  <|@  <|@
f <@*|@fixed>@ <|@
tid v3375 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3376 
=== Predecessor ===
v4197 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B321"
    from_bci -1
    to_bci -1
    predecessors "B320" "B319" 
    successors "B322" "B323" 
    xhandlers
    flags 
    probability 4614149222986594394
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3831 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3376 
values: j3842 j3837 
=== Succesors ===
=== Usages ===
v4521 j3836 j3825 v3858 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3376 values: j3842 j3837  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3376 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3375 v3387 
=== Succesors ===
next: v3390 
=== Usages ===
j3831 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3375 v3387 #next: v3390  <|@  <|@
f <@~|@floating>@ <|@
tid j3857 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j1828 
y: j3815 
=== Succesors ===
=== Usages ===
v3858 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1828 y: j3815  <|@  <|@
f <@~|@floating>@ <|@
tid v3858 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3857 
y: j3831 
=== Succesors ===
=== Usages ===
v3390 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3857 y: j3831  <|@  <|@
f <@*|@fixed>@ <|@
tid v3390 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3858 
=== Succesors ===
trueSuccessor: v3389 
falseSuccessor: v3388 
=== Usages ===
=== Predecessor ===
v3376 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3858 #trueSuccessor: v3389 #falseSuccessor: v3388  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B322"
    from_bci -1
    to_bci -1
    predecessors "B321" 
    successors "B324" 
    xhandlers
    flags 
    probability 4605142023731853402
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3389 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3393 
=== Usages ===
=== Predecessor ===
v3390 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3393  <|@  <|@
f <@*|@fixed>@ <|@
tid v3393 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3379 
=== Predecessor ===
v3389 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B323"
    from_bci -1
    to_bci -1
    predecessors "B321" 
    successors "B324" 
    xhandlers
    flags 
    probability 4612407521939950148
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3388 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4195 
=== Usages ===
=== Predecessor ===
v3390 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4195  <|@  <|@
f <@~|@floating>@ <|@
tid v4521 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j3824 
index: j3831 
=== Succesors ===
=== Usages ===
v4195 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3824 index: j3831  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4195 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4521 
value: v4245 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3378 
=== Usages ===
=== Predecessor ===
v3388 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4521 value: v4245 stateAfter: - lastLocationAccess: - #next: v3378  <|@  <|@
f <@~|@floating>@ <|@
tid j3836 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3831 
y: j3761 
=== Succesors ===
=== Usages ===
j3825 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3831 y: j3761  <|@  <|@
f <@*|@fixed>@ <|@
tid v3378 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3379 
=== Predecessor ===
v4195 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B324"
    from_bci -1
    to_bci -1
    predecessors "B323" "B322" 
    successors "B325" "B326" 
    xhandlers
    flags 
    probability 4614149222986594394
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3825 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3379 
values: j3836 j3831 
=== Succesors ===
=== Usages ===
v4520 v3860 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3379 values: j3836 j3831  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3379 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3378 v3393 
=== Succesors ===
next: v3396 
=== Usages ===
j3825 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3378 v3393 #next: v3396  <|@  <|@
f <@~|@floating>@ <|@
tid v3860 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1829 
y: j3825 
=== Succesors ===
=== Usages ===
v3396 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1829 y: j3825  <|@  <|@
f <@*|@fixed>@ <|@
tid v3396 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3860 
=== Succesors ===
trueSuccessor: v3395 
falseSuccessor: v3394 
=== Usages ===
=== Predecessor ===
v3379 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3860 #trueSuccessor: v3395 #falseSuccessor: v3394  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B325"
    from_bci -1
    to_bci -1
    predecessors "B324" 
    successors "B327" 
    xhandlers
    flags 
    probability 4605142023731853402
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3395 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3399 
=== Usages ===
=== Predecessor ===
v3396 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3399  <|@  <|@
f <@*|@fixed>@ <|@
tid v3399 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3369 
=== Predecessor ===
v3395 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B326"
    from_bci -1
    to_bci -1
    predecessors "B324" 
    successors "B327" 
    xhandlers
    flags 
    probability 4612407521939950148
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3394 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4193 
=== Usages ===
=== Predecessor ===
v3396 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4193  <|@  <|@
f <@~|@floating>@ <|@
tid v4520 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j3824 
index: j3825 
=== Succesors ===
=== Usages ===
v4193 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3824 index: j3825  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4193 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4520 
value: a4244 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3381 
=== Usages ===
=== Predecessor ===
v3394 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4520 value: a4244 stateAfter: - lastLocationAccess: - #next: v3381  <|@  <|@
f <@*|@fixed>@ <|@
tid v3381 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3369 
=== Predecessor ===
v4193 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B327"
    from_bci -1
    to_bci -1
    predecessors "B326" "B325" 
    successors "B328" 
    xhandlers
    flags 
    probability 4614149222986594394
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3369 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3381 v3399 
=== Succesors ===
next: j3187 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3381 v3399 #next: j3187  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3187 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToFirstArrayElement(WriteBarrierSnippets.java:376) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:159) [bci: 20]
at java.lang.String.split(String.java:2377) [bci: 292]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v4416 
=== Succesors ===
next: j3189 
=== Usages ===
j3188 
=== Predecessor ===
v3369 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v4416 #next: j3189  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3189 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:385) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at java.lang.String.split(String.java:2377) [bci: 292]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v4416 
=== Succesors ===
next: v3197 
=== Usages ===
j3193 
=== Predecessor ===
j3187 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v4416 #next: v3197  <|@  <|@
f <@~|@floating>@ <|@
tid i3191 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at java.lang.String.split(String.java:2377) [bci: 292]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i83 
y: i1663 
=== Succesors ===
=== Usages ===
j3192 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i83 y: i1663  <|@  <|@
f <@~|@floating>@ <|@
tid j3192 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 26]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at java.lang.String.split(String.java:2377) [bci: 292]
resultBits: 64
stamp: i64 [-2147483648 - 2147483644] ⇈fffffffffffffffc
=== Inputs ===
value: i3191 
=== Succesors ===
=== Usages ===
j3193 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i3191  <|@  <|@
f <@~|@floating>@ <|@
tid j3193 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 27]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at java.lang.String.split(String.java:2377) [bci: 292]
stamp: i64
=== Inputs ===
x: j3189 
y: j3192 
=== Succesors ===
=== Usages ===
j3194 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3189 y: j3192  <|@  <|@
f <@~|@floating>@ <|@
tid j3194 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 34]
at java.lang.String.split(String.java:2377) [bci: 292]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j3193 
y: i2735 
=== Succesors ===
=== Usages ===
j3195 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j3193 y: i2735  <|@  <|@
f <@~|@floating>@ <|@
tid j3188 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:159) [bci: 24]
at java.lang.String.split(String.java:2377) [bci: 292]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j3187 
y: i2735 
=== Succesors ===
=== Usages ===
j3195 j3208 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j3187 y: i2735  <|@  <|@
f <@~|@floating>@ <|@
tid j3195 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:161) [bci: 41]
at java.lang.String.split(String.java:2377) [bci: 292]
stamp: i64 [-36028797018963967 - 36028797018963967]
=== Inputs ===
x: j3194 
y: j3188 
=== Succesors ===
=== Usages ===
j3196 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j3194 y: j3188  <|@  <|@
f <@~|@floating>@ <|@
tid j3196 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:161) [bci: 43]
at java.lang.String.split(String.java:2377) [bci: 292]
stamp: i64 [-36028797018963966 - 36028797018963968]
=== Inputs ===
x: j3195 
y: j2632 
=== Succesors ===
=== Usages ===
j3199 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3195 y: j2632  <|@  <|@
f <@*|@fixed>@ <|@
tid v3197 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at java.lang.String.split(String.java:2377) [bci: 292]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3198 
=== Predecessor ===
j3189 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B328"
    from_bci -1
    to_bci -1
    predecessors "B327" "B343" 
    successors "B329" "B343" 
    xhandlers
    flags "llh" 
    loop_index 13
    loop_depth 1
    probability 4618652822613964890
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3199 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.split(String.java:2377) [bci: 292]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3198 
values: j3196 j3200 
=== Succesors ===
=== Usages ===
j3200 v3201 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3198 values: j3196 j3200  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3198 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 2.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at java.lang.String.split(String.java:2377) [bci: 292]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v3197 
=== Succesors ===
next: v3204 
=== Usages ===
j3199 v3202 v3207 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v3197 #next: v3204  <|@  <|@
f <@~|@floating>@ <|@
tid v3201 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 55]
at java.lang.String.split(String.java:2377) [bci: 292]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3199 
y: j2632 
=== Succesors ===
=== Usages ===
v3204 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3199 y: j2632  <|@  <|@
f <@*|@fixed>@ <|@
tid v3204 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 55]
at java.lang.String.split(String.java:2377) [bci: 292]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v3201 
=== Succesors ===
trueSuccessor: v3202 
falseSuccessor: v3203 
=== Usages ===
=== Predecessor ===
v3198 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3201 #trueSuccessor: v3202 #falseSuccessor: v3203  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B329"
    from_bci -1
    to_bci -1
    predecessors "B328" 
    successors "B330" 
    xhandlers
    flags 
    probability 4614149222986594394
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3202 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:165) [bci: 76]
at java.lang.String.split(String.java:2377) [bci: 292]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v3198 
=== Succesors ===
next: a2347 
=== Usages ===
=== Predecessor ===
v3204 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v3198 #next: a2347  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2347 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.split(String.java:2377) [bci: 292]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a3156 
=== Succesors ===
next: v685 
=== Usages ===
?688 v4406 ?688 v113 
=== Predecessor ===
v3202 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a3156 #next: v685  <|@  <|@
f <@*|@fixed>@ <|@
tid v685 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
at java.lang.String.split(String.java:2378) [bci: 307]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v686 
=== Predecessor ===
a2347 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B330"
    from_bci -1
    to_bci -1
    predecessors "B329" "B337" 
    successors "B331" "B339" 
    xhandlers
    flags "llh" 
    loop_index 14
    loop_depth 1
    probability 4621950233479046828
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i687 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v686 
values: i5 i705 
=== Succesors ===
=== Usages ===
?688 v4405 v4406 i705 i1006 ?1007 v853 v875 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v686 values: i5 i705  <|@  <|@
f <@~|@floating>@ <|@
tid i1006 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v686 
values: i19 i687 
=== Succesors ===
=== Usages ===
?1007 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v686 values: i19 i687  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v686 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 3.3074650987822882
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
at java.lang.String.split(String.java:2378) [bci: 307]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v685 
=== Succesors ===
next: v694 
=== Usages ===
i687 v692 v706 i1006 v2042 v2037 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v685 #next: v694  <|@  <|@
f <@~|@floating>@ <|@
tid v853 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.ArrayList$SubList$1.hasNext(ArrayList.java:1109) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
at java.lang.String.split(String.java:2378) [bci: 307]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i79 
y: i687 
=== Succesors ===
=== Usages ===
v2038 v2047 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i79 y: i687  <|@  <|@
f <@~|@floating>@ <|@
tid v875 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1116) [bci: 17]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
at java.lang.String.split(String.java:2378) [bci: 307]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i687 
y: i79 
=== Succesors ===
=== Usages ===
v694 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i687 y: i79  <|@  <|@
f <@*|@fixed>@ <|@
tid v694 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 46]
at java.lang.String.split(String.java:2378) [bci: 307]
stamp: void
trueSuccessorProbability: 0.6976536501116306
=== Inputs ===
condition: v875 
=== Succesors ===
trueSuccessor: v691 
falseSuccessor: v692 
=== Usages ===
=== Predecessor ===
v686 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v875 #trueSuccessor: v691 #falseSuccessor: v692  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B331"
    from_bci -1
    to_bci -1
    predecessors "B330" 
    successors "B332" "B333" 
    xhandlers
    flags 
    loop_index 14
    loop_depth 1
    probability 4619723847182676267
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v691 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 49]
at java.lang.String.split(String.java:2378) [bci: 307]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2038 
=== Usages ===
v1849 v1843 
=== Predecessor ===
v694 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2038  <|@  <|@
f <@*|@fixed>@ <|@
tid v2038 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 56]
at java.lang.String.split(String.java:2378) [bci: 307]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v853 
=== Succesors ===
trueSuccessor: v2037 
falseSuccessor: v2034 
=== Usages ===
=== Predecessor ===
v691 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v853 #trueSuccessor: v2037 #falseSuccessor: v2034  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B332"
    from_bci -1
    to_bci -1
    predecessors "B331" 
    successors "B342" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2037 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 56]
at java.lang.String.split(String.java:2378) [bci: 307]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v686 
=== Succesors ===
next: v2506 
=== Usages ===
=== Predecessor ===
v2038 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v686 #next: v2506  <|@  <|@
f <@~|@floating>@ <|@
tid i2507 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -439315
stableDimension: 0
stamp: i32 [-439315] ⇊00000000fff94bed ⇈00000000fff94bed
stampKind: i32
value: int[-439315|0xfffffffffff94bed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2508 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2506 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2505 
=== Predecessor ===
v2037 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B333"
    from_bci -1
    to_bci -1
    predecessors "B331" 
    successors "B334" "B335" 
    xhandlers
    flags 
    loop_index 14
    loop_depth 1
    probability 4619723847182676267
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2034 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 56]
at java.lang.String.split(String.java:2378) [bci: 307]
stamp: void
=== Inputs ===
=== Succesors ===
next: a4390 
=== Usages ===
=== Predecessor ===
v2038 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a4390  <|@  <|@
f <@~|@floating>@ <|@
tid v1843 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v4298 v691 
=== Succesors ===
=== Usages ===
a4390 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v4298 v691  <|@  <|@
f <@~|@floating>@ <|@
tid v4405 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1563 
index: i687 
=== Succesors ===
=== Usages ===
a4390 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1563 index: i687  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4390 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1122) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
at java.lang.String.split(String.java:2378) [bci: 307]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v1843 
address: v4405 
=== Succesors ===
next: v2119 
=== Usages ===
v4492 v1732 v1740 
=== Predecessor ===
v2034 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1843 address: v4405 #next: v2119  <|@  <|@
f <@~|@floating>@ <|@
tid v1732 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
at java.lang.String.split(String.java:2378) [bci: 307]
stamp: void
=== Inputs ===
value: a4390 
=== Succesors ===
=== Usages ===
v2119 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a4390  <|@  <|@
f <@*|@fixed>@ <|@
tid v2119 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 15]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
at java.lang.String.split(String.java:2378) [bci: 307]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v1732 
=== Succesors ===
trueSuccessor: v2118 
falseSuccessor: v2117 
=== Usages ===
=== Predecessor ===
a4390 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1732 #trueSuccessor: v2118 #falseSuccessor: v2117  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B334"
    from_bci -1
    to_bci -1
    predecessors "B333" 
    successors "B337" 
    xhandlers
    flags 
    loop_index 14
    loop_depth 1
    probability 4604605482549507105
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2118 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 18]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
at java.lang.String.split(String.java:2378) [bci: 307]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2554 
=== Usages ===
=== Predecessor ===
v2119 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2554  <|@  <|@
f <@*|@fixed>@ <|@
tid v2554 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
at java.lang.String.split(String.java:2378) [bci: 307]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2552 
=== Predecessor ===
v2118 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B335"
    from_bci -1
    to_bci -1
    predecessors "B333" 
    successors "B336" "B338" 
    xhandlers
    flags 
    loop_index 14
    loop_depth 1
    probability 4618920064307147431
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2117 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:141) [bci: 28]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
at java.lang.String.split(String.java:2378) [bci: 307]
stamp: void
=== Inputs ===
=== Succesors ===
next: v4391 
=== Usages ===
=== Predecessor ===
v2119 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4391  <|@  <|@
f <@~|@floating>@ <|@
tid v4492 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a4390 
=== Succesors ===
=== Usages ===
v4391 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a4390  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4391 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
at java.lang.String.split(String.java:2378) [bci: 307]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v4492 
=== Succesors ===
next: v4329 
=== Usages ===
v3256 
=== Predecessor ===
v2117 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4492 #next: v4329  <|@  <|@
f <@~|@floating>@ <|@
tid v3256 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
at java.lang.String.split(String.java:2378) [bci: 307]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v4391 
y: v3230 
=== Succesors ===
=== Usages ===
v4329 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v4391 y: v3230  <|@  <|@
f <@*|@fixed>@ <|@
tid v4329 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
at java.lang.String.split(String.java:2378) [bci: 307]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v3256 
=== Succesors ===
trueSuccessor: v4328 
falseSuccessor: v2042 
=== Usages ===
=== Predecessor ===
v4391 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3256 #trueSuccessor: v4328 #falseSuccessor: v2042  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B336"
    from_bci -1
    to_bci -1
    predecessors "B335" 
    successors "B337" 
    xhandlers
    flags 
    loop_index 14
    loop_depth 1
    probability 4618920064307147431
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4328 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
at java.lang.String.split(String.java:2378) [bci: 307]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2563 
=== Usages ===
=== Predecessor ===
v4329 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2563  <|@  <|@
f <@*|@fixed>@ <|@
tid v2563 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
at java.lang.String.split(String.java:2378) [bci: 307]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2552 
=== Predecessor ===
v4328 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B337"
    from_bci -1
    to_bci -1
    predecessors "B334" "B336" 
    successors "B330" 
    xhandlers
    flags "lle" 
    loop_index 14
    loop_depth 1
    probability 4619723847182676267
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2552 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
at java.lang.String.split(String.java:2378) [bci: 307]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2554 v2563 
=== Succesors ===
next: v1740 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2554 v2563 #next: v1740  <|@  <|@
f <@~|@floating>@ <|@
tid v1849 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v4314 v691 
=== Succesors ===
=== Usages ===
v1740 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v4314 v691  <|@  <|@
f <@~|@floating>@ <|@
tid v4406 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a2347 
index: i687 
=== Succesors ===
=== Usages ===
v1740 j3216 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2347 index: i687  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1740 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
at java.lang.String.split(String.java:2378) [bci: 307]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1849 
address: v4406 
value: a4390 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j3216 
=== Usages ===
=== Predecessor ===
v2552 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1849 address: v4406 value: a4390 stateAfter: - lastLocationAccess: - #next: j3216  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3216 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
at java.lang.String.split(String.java:2378) [bci: 307]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v4406 
=== Succesors ===
next: v3220 
=== Usages ===
j3217 
=== Predecessor ===
v1740 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v4406 #next: v3220  <|@  <|@
f <@~|@floating>@ <|@
tid j3217 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
at java.lang.String.split(String.java:2378) [bci: 307]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j3216 
y: i2735 
=== Succesors ===
=== Usages ===
v4493 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j3216 y: i2735  <|@  <|@
f <@~|@floating>@ <|@
tid v4493 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j3217 
index: j2739 
=== Succesors ===
=== Usages ===
v3220 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3217 index: j2739  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3220 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
at java.lang.String.split(String.java:2378) [bci: 307]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4493 
value: i2741 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v706 
=== Usages ===
=== Predecessor ===
j3216 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4493 value: i2741 stateAfter: - lastLocationAccess: - #next: v706  <|@  <|@
f <@~|@floating>@ <|@
tid i705 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 120]
at java.lang.String.split(String.java:2378) [bci: 307]
stamp: i32
=== Inputs ===
x: i687 
y: i8 
=== Succesors ===
=== Usages ===
i687 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i687 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v706 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
at java.lang.String.split(String.java:2378) [bci: 307]
stamp: void
=== Inputs ===
loopBegin: v686 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v3220 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v686  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B338"
    from_bci -1
    to_bci -1
    predecessors "B335" 
    successors "B342" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2042 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
at java.lang.String.split(String.java:2378) [bci: 307]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v686 
=== Succesors ===
next: v2511 
=== Usages ===
=== Predecessor ===
v4329 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v686 #next: v2511  <|@  <|@
f <@~|@floating>@ <|@
tid i2512 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -445739
stableDimension: 0
stamp: i32 [-445739] ⇊00000000fff932d5 ⇈00000000fff932d5
stampKind: i32
value: int[-445739|0xfffffffffff932d5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2508 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2511 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2505 
=== Predecessor ===
v2042 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B339"
    from_bci -1
    to_bci -1
    predecessors "B330" 
    successors "B340" "B341" 
    xhandlers
    flags 
    probability 4614149222986594394
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v692 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 126]
at java.lang.String.split(String.java:2378) [bci: 307]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v686 
=== Succesors ===
next: v2047 
=== Usages ===
=== Predecessor ===
v694 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v686 #next: v2047  <|@  <|@
f <@*|@fixed>@ <|@
tid v2047 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 133]
at java.lang.String.split(String.java:2378) [bci: 307]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v853 
=== Succesors ===
trueSuccessor: v2044 
falseSuccessor: v2046 
=== Usages ===
=== Predecessor ===
v692 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v853 #trueSuccessor: v2044 #falseSuccessor: v2046  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B340"
    from_bci -1
    to_bci -1
    predecessors "B339" 
    successors 
    xhandlers
    flags 
    probability 4614149222986594394
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2044 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 133]
at java.lang.String.split(String.java:2378) [bci: 307]
stamp: void
=== Inputs ===
=== Succesors ===
next: v113 
=== Usages ===
=== Predecessor ===
v2047 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v113  <|@  <|@
f <@*|@fixed>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.split(String.java:2378) [bci: 315]
stamp: void
=== Inputs ===
result: a2347 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2044 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a2347 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B341"
    from_bci -1
    to_bci -1
    predecessors "B339" 
    successors "B342" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2046 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 133]
at java.lang.String.split(String.java:2378) [bci: 307]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2513 
=== Usages ===
=== Predecessor ===
v2047 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2513  <|@  <|@
f <@~|@floating>@ <|@
tid i2514 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -445971
stableDimension: 0
stamp: i32 [-445971] ⇊00000000fff931ed ⇈00000000fff931ed
stampKind: i32
value: int[-445971|0xfffffffffff931ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2508 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2513 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2505 
=== Predecessor ===
v2046 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B342"
    from_bci -1
    to_bci -1
    predecessors "B332" "B338" "B341" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i2508 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-445971 - -439315] ⇊00000000fff900c5 ⇈00000000fff97bfd
valueDescription: i32
=== Inputs ===
merge: v2505 
values: i2507 i2512 i2514 
=== Succesors ===
=== Usages ===
v2510 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2505 values: i2507 i2512 i2514  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2505 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2506 v2511 v2513 
=== Succesors ===
next: v2510 
=== Usages ===
i2508 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2506 v2511 v2513 #next: v2510  <|@  <|@
tid ?715 <|@
d <@d|@=== Debug Properties ===
bci: 307
code: ResolvedJavaMethodBytecode<String.split(String, int)>
duringCall: true
localsSize: 10
locksSize: 0
rethrowException: false
sourceFile: String.java
sourceLine: 2378
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - - - - - - - 
=== Succesors ===
=== Usages ===
?688 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - - - - - - -  <|@  <|@
tid a1004 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@41b3f949
hasIdentity: true
objectId: -1
stamp: a!# Ljava/util/ArrayList$SubList$1;
type: HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?688 ?1007 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid a536 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@5d62fdcc
hasIdentity: true
objectId: -1
stamp: a!# Ljava/util/ArrayList$SubList;
type: HotSpotType<Ljava/util/ArrayList$SubList;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?1007 ?1002 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?1007 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a1004 
values: i687 i1006 i396 - - a536 
=== Succesors ===
=== Usages ===
?688 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a1004 values: i687 i1006 i396 - - a536  <|@  <|@
tid ?1002 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a536 
values: i396 - - i79 a244 a244 
=== Succesors ===
=== Usages ===
?688 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a536 values: i396 - - i79 a244 a244  <|@  <|@
tid ?688 <|@
d <@d|@=== Debug Properties ===
bci: 42
code: ResolvedJavaMethodBytecode<AbstractCollection.toArray(Object[])>
duringCall: false
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 182
stackSize: 0
=== Inputs ===
outerFrameState: ?715 
values: - a2347 - a2347 a1004 i687 
virtualObjectMappings: ?1007 ?1002 ?1467 
=== Succesors ===
=== Usages ===
v2510 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?715 values: - a2347 - a2347 a1004 i687 virtualObjectMappings: ?1007 ?1002 ?1467  <|@  <|@
f <@*|@fixed>@ <|@
tid v2510 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?688 
actionAndReason: i2508 
speculation: a2214 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2505 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?688 actionAndReason: i2508 speculation: a2214  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B343"
    from_bci -1
    to_bci -1
    predecessors "B328" 
    successors "B328" 
    xhandlers
    flags "lle" 
    loop_index 13
    loop_depth 1
    probability 4614149222986594394
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3203 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 58]
at java.lang.String.split(String.java:2377) [bci: 292]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3206 
=== Usages ===
=== Predecessor ===
v3204 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3206  <|@  <|@
f <@~|@floating>@ <|@
tid j3200 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 50]
at java.lang.String.split(String.java:2377) [bci: 292]
stamp: i64
=== Inputs ===
x: j3199 
y: j1816 
=== Succesors ===
=== Usages ===
j3199 j3205 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3199 y: j1816  <|@  <|@
f <@~|@floating>@ <|@
tid j3208 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 62]
at java.lang.String.split(String.java:2377) [bci: 292]
stamp: i64 [4682670080 - 36028801701634047] ⇈00ffffffffffffff
=== Inputs ===
x: j3188 
y: j2739 
=== Succesors ===
=== Usages ===
j3205 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3188 y: j2739  <|@  <|@
f <@~|@floating>@ <|@
tid j3205 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 65]
at java.lang.String.split(String.java:2377) [bci: 292]
stamp: i64
=== Inputs ===
x: j3200 
y: j3208 
=== Succesors ===
=== Usages ===
v3206 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3200 y: j3208  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3206 <|@
d <@d|@=== Debug Properties ===
kind: boolean
nodeSourcePosition: at org.graalvm.compiler.replacements.nodes.DirectStoreNode.storeBoolean(long, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 70]
at java.lang.String.split(String.java:2377) [bci: 292]
stamp: void
=== Inputs ===
address: j3205 
value: i5 
=== Succesors ===
next: v3207 
=== Usages ===
=== Predecessor ===
v3203 >@ <|@
instruction <@DirectStore|@org.graalvm.compiler.replacements.nodes.DirectStoreNode>@ address: j3205 value: i5 #next: v3207  <|@  <|@
f <@*|@fixed>@ <|@
tid v3207 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at java.lang.String.split(String.java:2377) [bci: 292]
stamp: void
=== Inputs ===
loopBegin: v3198 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v3206 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v3198  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B344"
    from_bci -1
    to_bci -1
    predecessors "B316" 
    successors "B316" 
    xhandlers
    flags "lle" 
    loop_index 12
    loop_depth 1
    probability 4612407521939950148
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3362 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3361 
=== Usages ===
=== Predecessor ===
v3363 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3361  <|@  <|@
f <@*|@fixed>@ <|@
tid v3361 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v3357 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v3362 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v3357  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B345"
    from_bci -1
    to_bci -1
    predecessors "B304" 
    successors "B351" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4311 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
at java.lang.String.split(String.java:2378) [bci: 307]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2462 
=== Usages ===
=== Predecessor ===
v4315 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2462  <|@  <|@
f <@~|@floating>@ <|@
tid i2463 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -442907
stableDimension: 0
stamp: i32 [-442907] ⇊00000000fff93de5 ⇈00000000fff93de5
stampKind: i32
value: int[-442907|0xfffffffffff93de5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2441 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2462 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2438 
=== Predecessor ===
v4311 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B346"
    from_bci -1
    to_bci -1
    predecessors "B303" 
    successors "B351" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4295 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1122) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
at java.lang.String.split(String.java:2378) [bci: 307]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2459 
=== Usages ===
=== Predecessor ===
v4299 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2459  <|@  <|@
f <@~|@floating>@ <|@
tid i2460 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -440603
stableDimension: 0
stamp: i32 [-440603] ⇊00000000fff946e5 ⇈00000000fff946e5
stampKind: i32
value: int[-440603|0xfffffffffff946e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2441 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2459 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2438 
=== Predecessor ===
v4295 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B347"
    from_bci -1
    to_bci -1
    predecessors "B302" 
    successors "B351" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4279 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1119) [bci: 47]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
at java.lang.String.split(String.java:2378) [bci: 307]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2456 
=== Usages ===
=== Predecessor ===
v4283 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2456  <|@  <|@
f <@~|@floating>@ <|@
tid a2458 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@1144871021
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@1144871021]
=== Inputs ===
=== Succesors ===
=== Usages ===
a2442 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2457 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -439827
stableDimension: 0
stamp: i32 [-439827] ⇊00000000fff949ed ⇈00000000fff949ed
stampKind: i32
value: int[-439827|0xfffffffffff949ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2441 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2456 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2438 
=== Predecessor ===
v4279 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B348"
    from_bci -1
    to_bci -1
    predecessors "B298" 
    successors "B351" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2006 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.split(String.java:2373) [bci: 275]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v78 
=== Succesors ===
next: v2450 
=== Usages ===
=== Predecessor ===
v4321 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v78 #next: v2450  <|@  <|@
f <@~|@floating>@ <|@
tid i2451 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -435491
stableDimension: 0
stamp: i32 [-435491] ⇊00000000fff95add ⇈00000000fff95add
stampKind: i32
value: int[-435491|0xfffffffffff95add]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2441 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2450 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2438 
=== Predecessor ===
v2006 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B349"
    from_bci -1
    to_bci -1
    predecessors "B295" 
    successors "B351" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2001 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.elementData(ArrayList.java:422) [bci: 5]
at java.util.ArrayList.get(ArrayList.java:435) [bci: 7]
at java.lang.String.split(String.java:2373) [bci: 272]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v78 
=== Succesors ===
next: v2448 
=== Usages ===
=== Predecessor ===
v2002 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v78 #next: v2448  <|@  <|@
f <@~|@floating>@ <|@
tid i2449 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -432667
stableDimension: 0
stamp: i32 [-432667] ⇊00000000fff965e5 ⇈00000000fff965e5
stampKind: i32
value: int[-432667|0xfffffffffff965e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2441 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2448 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2438 
=== Predecessor ===
v2001 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B350"
    from_bci -1
    to_bci -1
    predecessors "B294" 
    successors "B351" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1996 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.rangeCheck(ArrayList.java:656) [bci: 5]
at java.util.ArrayList.get(ArrayList.java:433) [bci: 2]
at java.lang.String.split(String.java:2373) [bci: 272]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v78 
=== Succesors ===
next: v2446 
=== Usages ===
=== Predecessor ===
v1997 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v78 #next: v2446  <|@  <|@
f <@~|@floating>@ <|@
tid i2447 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -431635
stableDimension: 0
stamp: i32 [-431635] ⇊00000000fff969ed ⇈00000000fff969ed
stampKind: i32
value: int[-431635|0xfffffffffff969ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2441 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2446 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2438 
=== Predecessor ===
v1996 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B351"
    from_bci -1
    to_bci -1
    predecessors "B306" "B293" "B350" "B349" "B348" "B347" "B346" "B345" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i2441 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-442907 - -431379] ⇊00000000fff900c5 ⇈00000000fff97ffd
valueDescription: i32
=== Inputs ===
merge: v2438 
values: i2440 i2445 i2447 i2449 i2451 i2457 i2460 i2463 
=== Succesors ===
=== Usages ===
v2443 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2438 values: i2440 i2445 i2447 i2449 i2451 i2457 i2460 i2463  <|@  <|@
f <@~|@floating>@ <|@
tid a2442 <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/k/d$a;
valueDescription: a -
=== Inputs ===
merge: v2438 
values: a2214 a2214 a2214 a2214 a2214 a2458 a2461 a2461 
=== Succesors ===
=== Usages ===
v2443 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2438 values: a2214 a2214 a2214 a2214 a2214 a2458 a2461 a2461  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2438 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2439 v2444 v2446 v2448 v2450 v2456 v2459 v2462 
=== Succesors ===
next: v2443 
=== Usages ===
i2441 a2442 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2439 v2444 v2446 v2448 v2450 v2456 v2459 v2462 #next: v2443  <|@  <|@
f <@*|@fixed>@ <|@
tid v2443 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?80 
actionAndReason: i2441 
speculation: a2442 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2438 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?80 actionAndReason: i2441 speculation: a2442  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B352"
    from_bci -1
    to_bci -1
    predecessors "B286" 
    successors "B357" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1986 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2493 
=== Usages ===
=== Predecessor ===
v1987 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2493  <|@  <|@
f <@~|@floating>@ <|@
tid i2494 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -449852
stableDimension: 0
stamp: i32 [-449852] ⇊00000000fff922c4 ⇈00000000fff922c4
stampKind: i32
value: int[-449852|0xfffffffffff922c4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2484 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2493 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2481 
=== Predecessor ===
v1986 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B353"
    from_bci -1
    to_bci -1
    predecessors "B284" 
    successors "B284" 
    xhandlers
    flags "lle" 
    loop_index 10
    loop_depth 1
    probability 4599929446008461404
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3065 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 58]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3068 
=== Usages ===
=== Predecessor ===
v3066 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3068  <|@  <|@
f <@~|@floating>@ <|@
tid j3062 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 50]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: i64
=== Inputs ===
x: j3061 
y: j1816 
=== Succesors ===
=== Usages ===
j3061 j3067 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3061 y: j1816  <|@  <|@
f <@~|@floating>@ <|@
tid j3070 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 62]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: i64 [4682670080 - 36028801701634047] ⇈00ffffffffffffff
=== Inputs ===
x: j3050 
y: j2739 
=== Succesors ===
=== Usages ===
j3067 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3050 y: j2739  <|@  <|@
f <@~|@floating>@ <|@
tid j3067 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 65]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: i64
=== Inputs ===
x: j3062 
y: j3070 
=== Succesors ===
=== Usages ===
v3068 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3062 y: j3070  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3068 <|@
d <@d|@=== Debug Properties ===
kind: boolean
nodeSourcePosition: at org.graalvm.compiler.replacements.nodes.DirectStoreNode.storeBoolean(long, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 70]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: void
=== Inputs ===
address: j3067 
value: i5 
=== Succesors ===
next: v3069 
=== Usages ===
=== Predecessor ===
v3065 >@ <|@
instruction <@DirectStore|@org.graalvm.compiler.replacements.nodes.DirectStoreNode>@ address: j3067 value: i5 #next: v3069  <|@  <|@
f <@*|@fixed>@ <|@
tid v3069 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: void
=== Inputs ===
loopBegin: v3060 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v3068 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v3060  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B354"
    from_bci -1
    to_bci -1
    predecessors "B253" 
    successors "B253" 
    xhandlers
    flags "lle" 
    loop_index 8
    loop_depth 1
    probability 4598364989485822533
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3650 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3649 
=== Usages ===
=== Predecessor ===
v3651 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3649  <|@  <|@
f <@*|@fixed>@ <|@
tid v3649 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v3645 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v3650 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v3645  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B355"
    from_bci -1
    to_bci -1
    predecessors "B242" 
    successors "B357" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1982 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:463) [bci: 26]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2491 
=== Usages ===
=== Predecessor ===
v1983 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2491  <|@  <|@
f <@~|@floating>@ <|@
tid i2492 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -450331
stableDimension: 0
stamp: i32 [-450331] ⇊00000000fff920e5 ⇈00000000fff920e5
stampKind: i32
value: int[-450331|0xfffffffffff920e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2484 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2491 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2481 
=== Predecessor ===
v1982 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B356"
    from_bci -1
    to_bci -1
    predecessors "B241" 
    successors "B357" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1978 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:262) [bci: 24]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2489 
=== Usages ===
=== Predecessor ===
v1979 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2489  <|@  <|@
f <@~|@floating>@ <|@
tid i2490 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -449299
stableDimension: 0
stamp: i32 [-449299] ⇊00000000fff924ed ⇈00000000fff924ed
stampKind: i32
value: int[-449299|0xfffffffffff924ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2484 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2489 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2481 
=== Predecessor ===
v1978 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B357"
    from_bci -1
    to_bci -1
    predecessors "B240" "B239" "B356" "B355" "B352" "B244" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i2484 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-585825 - -446268] ⇊00000000fff10084 ⇈00000000ffff3fff
valueDescription: i32
=== Inputs ===
merge: v2481 
values: i2483 i2488 i2490 i2492 i2494 i2496 
=== Succesors ===
=== Usages ===
v2486 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2481 values: i2483 i2488 i2490 i2492 i2494 i2496  <|@  <|@
f <@~|@floating>@ <|@
tid a2485 <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/l/d$a;
valueDescription: a -
=== Inputs ===
merge: v2481 
values: a2467 a2214 a2214 a2214 a2467 a2214 
=== Succesors ===
=== Usages ===
v2486 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2481 values: a2467 a2214 a2214 a2214 a2467 a2214  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2481 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2482 v2487 v2489 v2491 v2493 v2495 
=== Succesors ===
next: v2486 
=== Usages ===
i2484 a2485 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2482 v2487 v2489 v2491 v2493 v2495 #next: v2486  <|@  <|@
f <@*|@fixed>@ <|@
tid v2486 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?179 
actionAndReason: i2484 
speculation: a2485 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2481 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?179 actionAndReason: i2484 speculation: a2485  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B358"
    from_bci -1
    to_bci -1
    predecessors "B213" 
    successors "B213" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 1
    probability 4611922377187438288
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3291 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3290 
=== Usages ===
=== Predecessor ===
v3292 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3290  <|@  <|@
f <@*|@fixed>@ <|@
tid v3290 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v3285 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v3291 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v3285  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B359"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B362" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1895 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.split(String.java:2341) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2425 
=== Usages ===
=== Predecessor ===
v1896 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2425  <|@  <|@
f <@~|@floating>@ <|@
tid i2426 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -417811
stableDimension: 0
stamp: i32 [-417811] ⇊00000000fff99fed ⇈00000000fff99fed
stampKind: i32
value: int[-417811|0xfffffffffff99fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2389 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2425 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2386 
=== Predecessor ===
v1895 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B360"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B362" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1887 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.split(String.java:2372) [bci: 258]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2420 
=== Usages ===
=== Predecessor ===
v1888 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2420  <|@  <|@
f <@~|@floating>@ <|@
tid a2422 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@1154356070
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@1154356070]
=== Inputs ===
=== Succesors ===
=== Usages ===
a2390 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2421 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -460051
stableDimension: 0
stamp: i32 [-460051] ⇊00000000fff8faed ⇈00000000fff8faed
stampKind: i32
value: int[-460051|0xfffffffffff8faed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2389 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2420 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2386 
=== Predecessor ===
v1887 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B361"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B362" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1883 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.split(String.java:2337) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2396 
=== Usages ===
=== Predecessor ===
v1884 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2396  <|@  <|@
f <@~|@floating>@ <|@
tid i2397 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -414227
stableDimension: 0
stamp: i32 [-414227] ⇊00000000fff9aded ⇈00000000fff9aded
stampKind: i32
value: int[-414227|0xfffffffffff9aded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2389 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2396 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2386 
=== Predecessor ===
v1883 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B362"
    from_bci -1
    to_bci -1
    predecessors "B2" "B361" "B4" "B6" "B8" "B10" "B12" "B14" "B16" "B18" "B20" "B22" "B25" "B360" "B359" 
    successors 
    xhandlers
    flags 
    probability 2372834053670830080
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i2389 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-460051 - -364819] ⇊00000000fff800e5 ⇈00000000fffbfffd
valueDescription: i32
=== Inputs ===
merge: v2386 
values: i2395 i2397 i2399 i2401 i2403 i2405 i2407 i2409 i2411 i2413 i2415 i2417 i2419 i2421 i2426 
=== Succesors ===
=== Usages ===
v2391 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2386 values: i2395 i2397 i2399 i2401 i2403 i2405 i2407 i2409 i2411 i2413 i2415 i2417 i2419 i2421 i2426  <|@  <|@
f <@~|@floating>@ <|@
tid a2390 <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/k/d$a;
valueDescription: a -
=== Inputs ===
merge: v2386 
values: a2214 a2214 a2214 a2214 a2214 a2214 a2214 a2214 a2214 a2214 a2214 a2214 a2214 a2422 a2214 
=== Succesors ===
=== Usages ===
v2391 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2386 values: a2214 a2214 a2214 a2214 a2214 a2214 a2214 a2214 a2214 a2214 a2214 a2214 a2214 a2422 a2214  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2386 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2394 v2396 v2398 v2400 v2402 v2404 v2406 v2408 v2410 v2412 v2414 v2416 v2418 v2420 v2425 
=== Succesors ===
next: v2391 
=== Usages ===
i2389 a2390 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2394 v2396 v2398 v2400 v2402 v2404 v2406 v2408 v2410 v2412 v2414 v2416 v2418 v2420 v2425 #next: v2391  <|@  <|@
f <@*|@fixed>@ <|@
tid v2391 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?4 
actionAndReason: i2389 
speculation: a2390 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2386 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?4 actionAndReason: i2389 speculation: a2390  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B361" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a4355 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a4355  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/lang/String;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 ?345 ?1448 a2074 ?35 ?309 ?1489 v4395 a348 ?337 ?145 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# Ljava/lang/String;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v4392 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v74 ?159 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?4 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<String.split(String, int)>
duringCall: false
localsSize: 10
locksSize: 0
rethrowException: false
sourceFile: String.java
sourceLine: 2336
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 - - - - - - - 
=== Succesors ===
=== Usages ===
v2391 a4355 i4356 i4359 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3 - - - - - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v4392 <|@
result [v1|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a4355 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4355 <|@
result v3|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.split(String.java:2337) [bci: 3]
nullCheck: true
stamp: n# [C
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v4392 
=== Succesors ===
next: i4356 
=== Usages ===
v4394 v4393 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v4392 #next: i4356  <|@  <|@
f <@~|@floating>@ <|@
tid v4393 <|@
result [v3|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a4355 
=== Succesors ===
=== Usages ===
i4356 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a4355  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4356 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.split(String.java:2337) [bci: 6]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v4393 
=== Succesors ===
next: v1884 
=== Usages ===
v9 
=== Predecessor ===
a4355 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v4393 #next: v1884  <|@  <|@
f <@~|@floating>@ <|@
tid i8 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.split(String.java:2337) [bci: 7]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v9 i4345 i1411 v214 v81 v443 v431 i4336 v607 i594 i705 v560 i396 v402 a3089 i4332 a2596 i2633 a2703 a2856 v2876 i2883 a2947 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.split(String.java:2337) [bci: 8]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4356 
y: i8 
=== Succesors ===
=== Usages ===
v1884 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i4356 y: i8  <|@  <|@
f <@~|@floating>@ <|@
tid a2461 <|@
result v5|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@1976730038
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@1976730038]
=== Inputs ===
=== Succesors ===
=== Usages ===
a2442 a2442 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid a244 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@7af0f89d
hasIdentity: true
objectId: -1
stamp: a!# Ljava/util/ArrayList;
type: HotSpotType<Ljava/util/ArrayList;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?1002 ?345 ?35 ?248 ?1489 ?1484 ?248 ?170 ?175 ?145 ?521 ?517 ?143 ?1482 ?309 ?1467 ?179 ?184 ?159 ?1002 ?345 ?80 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?159 <|@
d <@d|@=== Debug Properties ===
bci: 246
code: ResolvedJavaMethodBytecode<String.split(String, int)>
duringCall: true
localsSize: 10
locksSize: 0
rethrowException: false
sourceFile: String.java
sourceLine: 2368
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - i3 - - - - a244 - - 
=== Succesors ===
=== Usages ===
?184 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - i3 - - - - a244 - -  <|@  <|@
tid a524 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@5a86b9fc
hasIdentity: true
objectId: 2
stamp: a!# Ljava/lang/String;
type: HotSpotType<Ljava/lang/String;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?1579 ?184 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?184 <|@
d <@d|@=== Debug Properties ===
bci: 7
code: ResolvedJavaMethodBytecode<ArrayList.add(Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ArrayList.java
sourceLine: 462
stackSize: 0
=== Inputs ===
outerFrameState: ?159 
values: a244 a524 
=== Succesors ===
=== Usages ===
?179 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?159 values: a244 a524  <|@  <|@
f <@~|@floating>@ <|@
tid v3243 <|@
result meta{HotSpotType<[Ljava/lang/String;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2880 v3175 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2467 <|@
result v6|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@358913875
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/l/d$a;
stampKind: a -
value: Object[d.a@358913875]
=== Inputs ===
=== Succesors ===
=== Usages ===
a2469 a2469 a2485 a2485 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a4244 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: n - NULL
stampKind: n -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v4193 v4227 v4239 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v4245 <|@
result v7|V64_DWORD[..] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL>
stampKind: <n -,n ->
value: SIMD<null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v4195 v4228 v4240 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v4246 <|@
result v8|V128_DWORD[....] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null,null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL,n - NULL,n - NULL>
stampKind: <n -,n -,n -,n ->
value: SIMD<null,null,null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v4197 v4229 v4241 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v4243 <|@
result v9|V256_DWORD[........] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null,null,null,null,null,null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL>
stampKind: <n -,n -,n -,n -,n -,n -,n -,n ->
value: SIMD<null,null,null,null,null,null,null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v4242 v4230 v4198 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v3223 <|@
result meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v3224 v3239 v3249 v4338 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j3761 <|@
result long[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j3775 j3836 j3882 j3939 j3995 j4041 j4088 j4134 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j3815 <|@
result long[-2|0xfffffffffffffffe] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j3816 j3857 j3918 j3969 j4020 j4062 j4113 j4155 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j3783 <|@
result long[4|0x4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j3784 j3842 j3890 j3945 j4003 j4047 j4096 j4140 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j3811 <|@
result long[-4|0xfffffffffffffffc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j3812 j3854 j3915 j3966 j4017 j4059 j4110 j4152 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2577 <|@
result long[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.ClassGetHubNode.readClass(Class) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.getComponentType(HotSpotClassSubstitutions.java:120) [bci: 1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 6]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j3792 j4146 j4104 j4053 j4011 j3951 j3898 j3848 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j3807 <|@
result long[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j3808 j3849 j3912 j3963 j4012 j4054 j4105 j4147 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j3801 <|@
result long[-16|0xfffffffffffffff0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16
stableDimension: 0
stamp: i64 [-16] ⇊fffffffffffffff0 ⇈fffffffffffffff0
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j3802 j3907 j3958 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2098 <|@
result v10|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.split(String.java:2373) [bci: 275]
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/lang/String;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j3105 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j3105 <|@
result v10|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v2098 
=== Succesors ===
=== Usages ===
v4478 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v2098  <|@  <|@
f <@~|@floating>@ <|@
tid v4478 <|@
result [v10|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j3105 
index: - 
=== Succesors ===
=== Usages ===
j3109 j2723 j2620 j2967 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3105 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i1663 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:463) [bci: 26]
at java.lang.String.split(String.java:2353) [bci: 165]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i3130 i2997 i3053 a2947 a2856 i3191 a3089 a2596 a2703 i2757 i2813 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2214 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:178) [bci: 41]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2528 v2510 a2390 a2390 a2390 a2390 a2390 a2390 a2390 a2390 a2390 a2390 a2390 a2390 a2390 a2390 a2485 v2520 v2502 a2433 a2442 a2442 a2442 a2442 a2442 a2485 a2485 a2469 a2469 a2469 a2469 a2485 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i19 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.split(String.java:2338) [bci: 23]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1006 v39 i83 ?1489 i2812 i3052 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1884 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.split(String.java:2337) [bci: 8]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v9 
=== Succesors ===
trueSuccessor: v1881 
falseSuccessor: v1883 
=== Usages ===
=== Predecessor ===
i4356 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v9 #trueSuccessor: v1881 #falseSuccessor: v1883  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7332283d slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.split(String.java:2336) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - - - - - - - 
>@ <|@ instruction v3|DWORD[.] = MOV [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.split(String.java:2336) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - - - - - - - 
>@ <|@ instruction v4|DWORD = MOV [v3|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1976730038] <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@358913875] <|@ <|@
      nr   -1  <|@ instruction v7|V64_DWORD[..] = L oc: SIMD<null,null> <|@ <|@
      nr   -1  <|@ instruction v8|V128_DWORD[....] = L oc: SIMD<null,null,null,null> <|@ <|@
      nr   -1  <|@ instruction v9|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null> <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP v4|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B361 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1881 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.split(String.java:2337) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: i4357 
=== Usages ===
i4357 
=== Predecessor ===
v1884 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i4357  <|@  <|@
f <@~|@floating>@ <|@
tid v4394 <|@
result [v3|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a4355 
=== Succesors ===
=== Usages ===
i4357 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a4355  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4357 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.lang.String.split(String.java:2338) [bci: 15]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v1881 
address: v4394 
=== Succesors ===
next: v1051 
=== Usages ===
i1630 
=== Predecessor ===
v1881 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1881 address: v4394 #next: v1051  <|@  <|@
f <@~|@floating>@ <|@
tid i1630 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.lang.String.split(String.java:2338) [bci: 15]
resultBits: 32
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i4357 
=== Succesors ===
=== Usages ===
?145 v1203 v1326 v1234 v23 ?1489 ?35 ?309 v1296 ?292 v299 ?345 v1018 v1265 v1356 v1048 v1079 v1110 v1141 v1172 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i4357  <|@  <|@
f <@~|@floating>@ <|@
tid i1070 <|@
result int[36|0x24] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:1559) [bci: 47]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
rawvalue: 36
stableDimension: 0
stamp: i32 [36] ⇊0000000000000024 ⇈0000000000000024
stampKind: i32
value: int[36|0x24]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1048 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1048 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.indexOf(String.java:1559) [bci: 49]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1630 
y: i1070 
=== Succesors ===
=== Usages ===
v1051 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1630 y: i1070  <|@  <|@
f <@*|@fixed>@ <|@
tid v1051 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1559) [bci: 49]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1048 
=== Succesors ===
trueSuccessor: v1049 
falseSuccessor: v1020 
=== Usages ===
=== Predecessor ===
i4357 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1048 #trueSuccessor: v1049 #falseSuccessor: v1020  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVZX [v3|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v11|DWORD y: 36 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B362" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1049 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1560) [bci: 52]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2394 
=== Usages ===
=== Predecessor ===
v1051 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2394  <|@  <|@
f <@~|@floating>@ <|@
tid i2395 <|@
result int[-390163|0xfffffffffffa0bed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -390163
stableDimension: 0
stamp: i32 [-390163] ⇊00000000fffa0bed ⇈00000000fffa0bed
stampKind: i32
value: int[-390163|0xfffffffffffa0bed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2389 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2394 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2386 
=== Predecessor ===
v1049 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-390163|0xfffffffffffa0bed], Object[null]] destination: B2 -> B362 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1020 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1558) [bci: 55]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1021 
=== Usages ===
=== Predecessor ===
v1051 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1021  <|@  <|@
f <@~|@floating>@ <|@
tid i1040 <|@
result int[46|0x2e] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:1559) [bci: 47]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
rawvalue: 46
stableDimension: 0
stamp: i32 [46] ⇊000000000000002e ⇈000000000000002e
stampKind: i32
value: int[46|0x2e]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1018 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1018 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.indexOf(String.java:1559) [bci: 49]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1630 
y: i1040 
=== Succesors ===
=== Usages ===
v1021 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1630 y: i1040  <|@  <|@
f <@*|@fixed>@ <|@
tid v1021 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1559) [bci: 49]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1018 
=== Succesors ===
trueSuccessor: v1019 
falseSuccessor: v1050 
=== Usages ===
=== Predecessor ===
v1020 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1018 #trueSuccessor: v1019 #falseSuccessor: v1050  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v11|DWORD y: 46 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B362" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1019 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1560) [bci: 52]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2398 
=== Usages ===
=== Predecessor ===
v1021 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2398  <|@  <|@
f <@~|@floating>@ <|@
tid i2399 <|@
result int[-389651|0xfffffffffffa0ded] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -389651
stableDimension: 0
stamp: i32 [-389651] ⇊00000000fffa0ded ⇈00000000fffa0ded
stampKind: i32
value: int[-389651|0xfffffffffffa0ded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2389 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2398 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2386 
=== Predecessor ===
v1019 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-389651|0xfffffffffffa0ded], Object[null]] destination: B4 -> B362 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1050 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1558) [bci: 55]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1113 
=== Usages ===
=== Predecessor ===
v1021 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1113  <|@  <|@
f <@~|@floating>@ <|@
tid i1132 <|@
result int[40|0x28] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:1559) [bci: 47]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
rawvalue: 40
stableDimension: 0
stamp: i32 [40] ⇊0000000000000028 ⇈0000000000000028
stampKind: i32
value: int[40|0x28]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1110 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1110 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.indexOf(String.java:1559) [bci: 49]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1630 
y: i1132 
=== Succesors ===
=== Usages ===
v1113 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1630 y: i1132  <|@  <|@
f <@*|@fixed>@ <|@
tid v1113 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1559) [bci: 49]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1110 
=== Succesors ===
trueSuccessor: v1111 
falseSuccessor: v1081 
=== Usages ===
=== Predecessor ===
v1050 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1110 #trueSuccessor: v1111 #falseSuccessor: v1081  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v11|DWORD y: 40 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B362" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1111 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1560) [bci: 52]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2400 
=== Usages ===
=== Predecessor ===
v1113 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2400  <|@  <|@
f <@~|@floating>@ <|@
tid i2401 <|@
result int[-391187|0xfffffffffffa07ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -391187
stableDimension: 0
stamp: i32 [-391187] ⇊00000000fffa07ed ⇈00000000fffa07ed
stampKind: i32
value: int[-391187|0xfffffffffffa07ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2389 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2400 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2386 
=== Predecessor ===
v1111 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-391187|0xfffffffffffa07ed], Object[null]] destination: B6 -> B362 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1081 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1558) [bci: 55]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1082 
=== Usages ===
=== Predecessor ===
v1113 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1082  <|@  <|@
f <@~|@floating>@ <|@
tid i1101 <|@
result int[124|0x7c] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:1559) [bci: 47]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
rawvalue: 124
stableDimension: 0
stamp: i32 [124] ⇊000000000000007c ⇈000000000000007c
stampKind: i32
value: int[124|0x7c]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1079 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1079 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.indexOf(String.java:1559) [bci: 49]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1630 
y: i1101 
=== Succesors ===
=== Usages ===
v1082 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1630 y: i1101  <|@  <|@
f <@*|@fixed>@ <|@
tid v1082 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1559) [bci: 49]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1079 
=== Succesors ===
trueSuccessor: v1080 
falseSuccessor: v1112 
=== Usages ===
=== Predecessor ===
v1081 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1079 #trueSuccessor: v1080 #falseSuccessor: v1112  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v11|DWORD y: 124 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B362" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1080 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1560) [bci: 52]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2402 
=== Usages ===
=== Predecessor ===
v1082 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2402  <|@  <|@
f <@~|@floating>@ <|@
tid i2403 <|@
result int[-390675|0xfffffffffffa09ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -390675
stableDimension: 0
stamp: i32 [-390675] ⇊00000000fffa09ed ⇈00000000fffa09ed
stampKind: i32
value: int[-390675|0xfffffffffffa09ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2389 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2402 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2386 
=== Predecessor ===
v1080 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-390675|0xfffffffffffa09ed], Object[null]] destination: B8 -> B362 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1112 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1558) [bci: 55]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1175 
=== Usages ===
=== Predecessor ===
v1082 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1175  <|@  <|@
f <@~|@floating>@ <|@
tid i1194 <|@
result int[91|0x5b] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:1559) [bci: 47]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
rawvalue: 91
stableDimension: 0
stamp: i32 [91] ⇊000000000000005b ⇈000000000000005b
stampKind: i32
value: int[91|0x5b]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1172 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1172 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.indexOf(String.java:1559) [bci: 49]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1630 
y: i1194 
=== Succesors ===
=== Usages ===
v1175 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1630 y: i1194  <|@  <|@
f <@*|@fixed>@ <|@
tid v1175 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1559) [bci: 49]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1172 
=== Succesors ===
trueSuccessor: v1173 
falseSuccessor: v1143 
=== Usages ===
=== Predecessor ===
v1112 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1172 #trueSuccessor: v1173 #falseSuccessor: v1143  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v11|DWORD y: 91 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B362" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1173 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1560) [bci: 52]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2404 
=== Usages ===
=== Predecessor ===
v1175 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2404  <|@  <|@
f <@~|@floating>@ <|@
tid i2405 <|@
result int[-392211|0xfffffffffffa03ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -392211
stableDimension: 0
stamp: i32 [-392211] ⇊00000000fffa03ed ⇈00000000fffa03ed
stampKind: i32
value: int[-392211|0xfffffffffffa03ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2389 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2404 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2386 
=== Predecessor ===
v1173 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-392211|0xfffffffffffa03ed], Object[null]] destination: B10 -> B362 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1143 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1558) [bci: 55]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1144 
=== Usages ===
=== Predecessor ===
v1175 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1144  <|@  <|@
f <@~|@floating>@ <|@
tid i1163 <|@
result int[41|0x29] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:1559) [bci: 47]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
rawvalue: 41
stableDimension: 0
stamp: i32 [41] ⇊0000000000000029 ⇈0000000000000029
stampKind: i32
value: int[41|0x29]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1141 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1141 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.indexOf(String.java:1559) [bci: 49]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1630 
y: i1163 
=== Succesors ===
=== Usages ===
v1144 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1630 y: i1163  <|@  <|@
f <@*|@fixed>@ <|@
tid v1144 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1559) [bci: 49]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1141 
=== Succesors ===
trueSuccessor: v1142 
falseSuccessor: v1174 
=== Usages ===
=== Predecessor ===
v1143 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1141 #trueSuccessor: v1142 #falseSuccessor: v1174  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v11|DWORD y: 41 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B362" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1142 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1560) [bci: 52]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2406 
=== Usages ===
=== Predecessor ===
v1144 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2406  <|@  <|@
f <@~|@floating>@ <|@
tid i2407 <|@
result int[-391699|0xfffffffffffa05ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -391699
stableDimension: 0
stamp: i32 [-391699] ⇊00000000fffa05ed ⇈00000000fffa05ed
stampKind: i32
value: int[-391699|0xfffffffffffa05ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2389 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2406 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2386 
=== Predecessor ===
v1142 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-391699|0xfffffffffffa05ed], Object[null]] destination: B12 -> B362 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1174 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1558) [bci: 55]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1237 
=== Usages ===
=== Predecessor ===
v1144 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1237  <|@  <|@
f <@~|@floating>@ <|@
tid i1256 <|@
result int[94|0x5e] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:1559) [bci: 47]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
rawvalue: 94
stableDimension: 0
stamp: i32 [94] ⇊000000000000005e ⇈000000000000005e
stampKind: i32
value: int[94|0x5e]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1234 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1234 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.indexOf(String.java:1559) [bci: 49]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1630 
y: i1256 
=== Succesors ===
=== Usages ===
v1237 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1630 y: i1256  <|@  <|@
f <@*|@fixed>@ <|@
tid v1237 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1559) [bci: 49]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1234 
=== Succesors ===
trueSuccessor: v1235 
falseSuccessor: v1205 
=== Usages ===
=== Predecessor ===
v1174 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1234 #trueSuccessor: v1235 #falseSuccessor: v1205  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v11|DWORD y: 94 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B362" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1235 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1560) [bci: 52]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2408 
=== Usages ===
=== Predecessor ===
v1237 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2408  <|@  <|@
f <@~|@floating>@ <|@
tid i2409 <|@
result int[-393235|0xfffffffffff9ffed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -393235
stableDimension: 0
stamp: i32 [-393235] ⇊00000000fff9ffed ⇈00000000fff9ffed
stampKind: i32
value: int[-393235|0xfffffffffff9ffed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2389 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2408 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2386 
=== Predecessor ===
v1235 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-393235|0xfffffffffff9ffed], Object[null]] destination: B14 -> B362 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1205 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1558) [bci: 55]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1206 
=== Usages ===
=== Predecessor ===
v1237 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1206  <|@  <|@
f <@~|@floating>@ <|@
tid i1225 <|@
result int[123|0x7b] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:1559) [bci: 47]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
rawvalue: 123
stableDimension: 0
stamp: i32 [123] ⇊000000000000007b ⇈000000000000007b
stampKind: i32
value: int[123|0x7b]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1203 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1203 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.indexOf(String.java:1559) [bci: 49]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1630 
y: i1225 
=== Succesors ===
=== Usages ===
v1206 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1630 y: i1225  <|@  <|@
f <@*|@fixed>@ <|@
tid v1206 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1559) [bci: 49]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1203 
=== Succesors ===
trueSuccessor: v1204 
falseSuccessor: v1236 
=== Usages ===
=== Predecessor ===
v1205 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1203 #trueSuccessor: v1204 #falseSuccessor: v1236  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v11|DWORD y: 123 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B362" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1204 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1560) [bci: 52]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2410 
=== Usages ===
=== Predecessor ===
v1206 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2410  <|@  <|@
f <@~|@floating>@ <|@
tid i2411 <|@
result int[-392723|0xfffffffffffa01ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -392723
stableDimension: 0
stamp: i32 [-392723] ⇊00000000fffa01ed ⇈00000000fffa01ed
stampKind: i32
value: int[-392723|0xfffffffffffa01ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2389 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2410 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2386 
=== Predecessor ===
v1204 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-392723|0xfffffffffffa01ed], Object[null]] destination: B16 -> B362 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1236 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1558) [bci: 55]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1299 
=== Usages ===
=== Predecessor ===
v1206 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1299  <|@  <|@
f <@~|@floating>@ <|@
tid i1318 <|@
result int[42|0x2a] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:1559) [bci: 47]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
rawvalue: 42
stableDimension: 0
stamp: i32 [42] ⇊000000000000002a ⇈000000000000002a
stampKind: i32
value: int[42|0x2a]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1296 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1296 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.indexOf(String.java:1559) [bci: 49]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1630 
y: i1318 
=== Succesors ===
=== Usages ===
v1299 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1630 y: i1318  <|@  <|@
f <@*|@fixed>@ <|@
tid v1299 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1559) [bci: 49]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1296 
=== Succesors ===
trueSuccessor: v1297 
falseSuccessor: v1267 
=== Usages ===
=== Predecessor ===
v1236 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1296 #trueSuccessor: v1297 #falseSuccessor: v1267  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v11|DWORD y: 42 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B362" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1297 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1560) [bci: 52]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2412 
=== Usages ===
=== Predecessor ===
v1299 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2412  <|@  <|@
f <@~|@floating>@ <|@
tid i2413 <|@
result int[-394259|0xfffffffffff9fbed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -394259
stableDimension: 0
stamp: i32 [-394259] ⇊00000000fff9fbed ⇈00000000fff9fbed
stampKind: i32
value: int[-394259|0xfffffffffff9fbed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2389 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2412 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2386 
=== Predecessor ===
v1297 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-394259|0xfffffffffff9fbed], Object[null]] destination: B18 -> B362 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1267 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1558) [bci: 55]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1268 
=== Usages ===
=== Predecessor ===
v1299 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1268  <|@  <|@
f <@~|@floating>@ <|@
tid i1287 <|@
result int[63|0x3f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:1559) [bci: 47]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
rawvalue: 63
stableDimension: 0
stamp: i32 [63] ⇊000000000000003f ⇈000000000000003f
stampKind: i32
value: int[63|0x3f]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1265 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1265 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.indexOf(String.java:1559) [bci: 49]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1630 
y: i1287 
=== Succesors ===
=== Usages ===
v1268 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1630 y: i1287  <|@  <|@
f <@*|@fixed>@ <|@
tid v1268 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1559) [bci: 49]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1265 
=== Succesors ===
trueSuccessor: v1266 
falseSuccessor: v1298 
=== Usages ===
=== Predecessor ===
v1267 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1265 #trueSuccessor: v1266 #falseSuccessor: v1298  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v11|DWORD y: 63 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B362" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1266 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1560) [bci: 52]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2414 
=== Usages ===
=== Predecessor ===
v1268 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2414  <|@  <|@
f <@~|@floating>@ <|@
tid i2415 <|@
result int[-393747|0xfffffffffff9fded] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -393747
stableDimension: 0
stamp: i32 [-393747] ⇊00000000fff9fded ⇈00000000fff9fded
stampKind: i32
value: int[-393747|0xfffffffffff9fded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2389 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2414 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2386 
=== Predecessor ===
v1266 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-393747|0xfffffffffff9fded], Object[null]] destination: B20 -> B362 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1298 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1558) [bci: 55]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1329 
=== Usages ===
=== Predecessor ===
v1268 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1329  <|@  <|@
f <@~|@floating>@ <|@
tid i1348 <|@
result int[43|0x2b] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:1559) [bci: 47]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
rawvalue: 43
stableDimension: 0
stamp: i32 [43] ⇊000000000000002b ⇈000000000000002b
stampKind: i32
value: int[43|0x2b]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1326 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1326 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.indexOf(String.java:1559) [bci: 49]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1630 
y: i1348 
=== Succesors ===
=== Usages ===
v1329 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1630 y: i1348  <|@  <|@
f <@*|@fixed>@ <|@
tid v1329 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1559) [bci: 49]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1326 
=== Succesors ===
trueSuccessor: v1327 
falseSuccessor: v1328 
=== Usages ===
=== Predecessor ===
v1298 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1326 #trueSuccessor: v1327 #falseSuccessor: v1328  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v11|DWORD y: 43 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B362" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1327 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1560) [bci: 52]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2416 
=== Usages ===
=== Predecessor ===
v1329 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2416  <|@  <|@
f <@~|@floating>@ <|@
tid i2417 <|@
result int[-364819|0xfffffffffffa6eed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -364819
stableDimension: 0
stamp: i32 [-364819] ⇊00000000fffa6eed ⇈00000000fffa6eed
stampKind: i32
value: int[-364819|0xfffffffffffa6eed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2389 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2416 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2386 
=== Predecessor ===
v1327 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-364819|0xfffffffffffa6eed], Object[null]] destination: B22 -> B362 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B360" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1328 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1558) [bci: 55]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1888 
=== Usages ===
=== Predecessor ===
v1329 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1888  <|@  <|@
f <@~|@floating>@ <|@
tid i5 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.split(String.java:2336) [bci: 0]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v420 v2190 i687 v2977 i34 ?35 ?1489 v441 v2276 ?145 ?309 i503 v74 v95 v2733 ?1489 ?309 v447 v2630 v324 ?345 v597 v356 v3119 a2657 v3206 a2772 v2805 v2828 a2905 a3152 a3012 v3045 v3068 ?345 ?337 ?145 ?35 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.split(String.java:2372) [bci: 258]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i5 
=== Succesors ===
=== Usages ===
v1888 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i3 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v1888 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.split(String.java:2372) [bci: 258]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v74 
=== Succesors ===
trueSuccessor: v1885 
falseSuccessor: v1887 
=== Usages ===
=== Predecessor ===
v1328 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v74 #trueSuccessor: v1885 #falseSuccessor: v1887  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B360 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1885 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.split(String.java:2372) [bci: 258]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1892 
=== Usages ===
=== Predecessor ===
v1888 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1892  <|@  <|@
f <@~|@floating>@ <|@
tid i1378 <|@
result int[92|0x5c] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:1559) [bci: 47]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
rawvalue: 92
stableDimension: 0
stamp: i32 [92] ⇊000000000000005c ⇈000000000000005c
stampKind: i32
value: int[92|0x5c]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1356 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1356 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.indexOf(String.java:1559) [bci: 49]
at java.lang.String.indexOf(String.java:1503) [bci: 3]
at java.lang.String.split(String.java:2338) [bci: 20]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1630 
y: i1378 
=== Succesors ===
=== Usages ===
v1892 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1630 y: i1378  <|@  <|@
f <@*|@fixed>@ <|@
tid v1892 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.split(String.java:2338) [bci: 24]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1356 
=== Succesors ===
trueSuccessor: v1891 
falseSuccessor: v1889 
=== Usages ===
=== Predecessor ===
v1885 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1356 #trueSuccessor: v1891 #falseSuccessor: v1889  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v11|DWORD y: 92 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B362" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1891 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.split(String.java:2338) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2418 
=== Usages ===
=== Predecessor ===
v1892 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2418  <|@  <|@
f <@~|@floating>@ <|@
tid i2419 <|@
result int[-417555|0xfffffffffff9a0ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -417555
stableDimension: 0
stamp: i32 [-417555] ⇊00000000fff9a0ed ⇈00000000fff9a0ed
stampKind: i32
value: int[-417555|0xfffffffffff9a0ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2389 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2418 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2386 
=== Predecessor ===
v1891 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-417555|0xfffffffffff9a0ed], Object[null]] destination: B25 -> B362 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B359" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1889 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.split(String.java:2338) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1896 
=== Usages ===
=== Predecessor ===
v1892 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1896  <|@  <|@
f <@~|@floating>@ <|@
tid i22 <|@
result int[55296|0xd800] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.split(String.java:2341) [bci: 88]
rawvalue: 55296
stableDimension: 0
stamp: i32 [55296] ⇊000000000000d800 ⇈000000000000d800
stampKind: i32
value: int[55296|0xd800]
=== Inputs ===
=== Succesors ===
=== Usages ===
v23 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.String.split(String.java:2341) [bci: 90]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1630 
y: i22 
=== Succesors ===
=== Usages ===
v1896 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1630 y: i22  <|@  <|@
f <@*|@fixed>@ <|@
tid v1896 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.split(String.java:2341) [bci: 90]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v23 
=== Succesors ===
trueSuccessor: v1893 
falseSuccessor: v1895 
=== Usages ===
=== Predecessor ===
v1889 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v23 #trueSuccessor: v1893 #falseSuccessor: v1895  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v11|DWORD y: 55296 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B26 -> B27 falseDestination: B26 -> B359 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1893 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.split(String.java:2341) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: a4358 
=== Usages ===
=== Predecessor ===
v1896 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a4358  <|@  <|@
f <@~|@floating>@ <|@
tid v4395 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a4358 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4358 <|@
result v12|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.indexOf(String.java:1546) [bci: 1]
at java.lang.String.split(String.java:2351) [bci: 129]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v4395 
=== Succesors ===
next: i4359 
=== Usages ===
a1636 v4396 
=== Predecessor ===
v1893 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4395 #next: i4359  <|@  <|@
f <@~|@floating>@ <|@
tid v4396 <|@
result [v12|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a4358 
=== Succesors ===
=== Usages ===
i4359 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a4358  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4359 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.indexOf(String.java:1546) [bci: 4]
at java.lang.String.split(String.java:2351) [bci: 129]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v4396 
=== Succesors ===
next: v32 
=== Usages ===
v283 ?292 v293 v319 v330 i355 j1812 v450 i458 v1821 v4350 
=== Predecessor ===
a4358 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v4396 #next: v32  <|@  <|@
f <@~|@floating>@ <|@
tid j1812 <|@
result v14|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i4359 
=== Succesors ===
=== Usages ===
v1820 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i4359  <|@  <|@
f <@~|@floating>@ <|@
tid a1636 <|@
result v15|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.indexOf(String.java:1546) [bci: 1]
at java.lang.String.split(String.java:2351) [bci: 129]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a4358 
=== Succesors ===
=== Usages ===
v4397 ?292 v4411 v4563 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a4358  <|@  <|@
f <@~|@floating>@ <|@
tid i429 <|@
result int[-2147483639|0xffffffff80000009] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:262) [bci: 23]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
rawvalue: -2147483639
stableDimension: 0
stamp: i32 [-2147483639] ⇊0000000080000009 ⇈0000000080000009
stampKind: i32
value: int[-2147483639|0xffffffff80000009]
=== Inputs ===
=== Succesors ===
=== Usages ===
i430 i606 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2741 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.ArrayList.add(ArrayList.java:463) [bci: 26]
at java.lang.String.split(String.java:2353) [bci: 165]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2740 v2842 v2982 v3124 v3220 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2735 <|@
result int[9|0x9] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.ArrayList.add(ArrayList.java:463) [bci: 26]
at java.lang.String.split(String.java:2353) [bci: 165]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2736 j2810 j2816 j2839 j2979 j3050 j3056 j3121 j3188 j3194 j3217 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2739 <|@
result v16|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.ArrayList.add(ArrayList.java:463) [bci: 26]
at java.lang.String.split(String.java:2353) [bci: 165]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v4435 j2830 v4446 v4465 j3070 v4481 j3208 v4493 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i193 <|@
result int[10|0xa] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList.calculateCapacity(ArrayList.java:225) [bci: 7]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
rawvalue: 10
stableDimension: 0
stamp: i32 [10] ⇊000000000000000a ⇈000000000000000a
stampKind: i32
value: int[10|0xa]
=== Inputs ===
=== Succesors ===
=== Usages ===
i204 i240 i240 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i194 <|@
result int[11|0xb] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at java.util.ArrayList.calculateCapacity(ArrayList.java:225) [bci: 10]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
rawvalue: 11
stableDimension: 0
stamp: i32 [11] ⇊000000000000000b ⇈000000000000000b
stampKind: i32
value: int[11|0xb]
=== Inputs ===
=== Succesors ===
=== Usages ===
v195 v4343 v4344 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1626 <|@
result long[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.lang.String.split(String.java:2338) [bci: 15]
rawvalue: 16
stableDimension: 0
stamp: i64 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j3906 j3800 j3957 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2049 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j3996 j3952 v4106 v3959 v4055 j4048 j4042 j4097 v4013 j4004 v4148 j3785 j3793 v3803 j4141 j3837 j3843 v3850 j4135 j3891 j3899 v3908 j4089 j3946 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2631 <|@
result v17|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
rawvalue: meta{HotSpotType<[C, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[C, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a2657 a2905 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v3233 <|@
result meta{HotSpotType<[C, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
rawvalue: meta{HotSpotType<[C, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[C, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2684 v2928 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2632 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2681 v2794 j2818 v2823 v2877 v2925 v3034 j3058 v3063 v3172 j3196 v3201 v3529 v3637 v3403 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2664 <|@
result int[23|0x17] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2665 i2779 i2912 i3019 i3159 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2634 <|@
result int[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2635 i2758 i2884 i2998 i3131 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2641 <|@
result int[16777215|0xffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 48]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2642 v2890 v3137 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2133 <|@
result NarrowOop[char[0]{}] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: char[0]{}
stableDimension: 1
stamp: n!# [C
stampKind: n -
value: NarrowOop[char[0]{}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2628 a2145 a2145 a2145 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v3230 <|@
result meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2624 v2727 v2971 v3113 v3255 v3256 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2582 <|@
result v18|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a2596 a2703 a2856 a2947 a3089 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j3225 <|@
result long[24|0x18] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 24
stableDimension: 0
stamp: i64 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j3226 j3250 j3234 j3240 j3244 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a127 <|@
result v19|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList.<init>(ArrayList.java:166) [bci: 5]
at java.lang.String.split(String.java:2350) [bci: 120]
rawvalue: Object[0]{}
stableDimension: 0
stamp: a!# [Ljava/lang/Object;
stampKind: a -
value: Object[Object[0]{}]
=== Inputs ===
=== Succesors ===
=== Usages ===
a505 v227 v4346 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1816 <|@
result long[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1817 j1829 j2822 j3062 j3200 j3921 j3972 j4023 j4065 j4116 j4158 j4353 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.split(String.java:2351) [bci: 125]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v33 
=== Predecessor ===
i4359 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[.] = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.split(String.java:2336) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - - - - - - - 
>@ <|@ instruction v13|DWORD = MOV [v12|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOV v13|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@120cc8dc encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Object[0]{}] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0], int[0|0x0], v19|QWORD[.]] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B169" "B120" 
    successors "B29" "B30" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4614323782818816755
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i34 <|@
result v20|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v33 
values: i5 i1411 i1411 
=== Succesors ===
=== Usages ===
?35 ?309 ?1489 v1821 j1814 v459 v283 i291 v450 i321 v324 ?337 v441 ?1448 i355 v4350 j4351 j4352 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v33 values: i5 i1411 i1411  <|@  <|@
f <@~|@floating>@ <|@
tid i503 <|@
result v21|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v33 
values: i5 i4345 i4345 
=== Succesors ===
=== Usages ===
v1745 v1672 v4407 v4408 v4400 v1758 v4399 ?521 i396 ?521 v4337 i4345 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v33 values: i5 i4345 i4345  <|@  <|@
f <@~|@floating>@ <|@
tid a505 <|@
result v22|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a! [Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v33 
values: a127 a2335 a505 
=== Succesors ===
=== Usages ===
v227 v4399 v4417 a505 ?521 v4407 ?1484 a1563 v4398 v4410 v4346 v4564 v4565 v4566 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v33 values: a127 a2335 a505  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 3.1714027043602697
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 2
nodeSourcePosition: at java.lang.String.split(String.java:2351) [bci: 125]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v32 
=== Succesors ===
next: v1909 
=== Usages ===
i34 v41 v54 i503 a505 v1485 v1958 v1908 v1913 v1918 v1923 v1928 v1933 v1938 v1943 v1948 v1953 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v32 #next: v1909  <|@  <|@
tid ?521 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a244 
values: i503 i503 a505 
=== Succesors ===
=== Usages ===
?179 ?35 ?292 ?170 ?1448 ?1489 ?337 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a244 values: i503 i503 a505  <|@  <|@
f <@~|@floating>@ <|@
tid v441 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.<init>(String.java:191) [bci: 5]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i34 
y: i5 
=== Succesors ===
=== Usages ===
v1909 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i34 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v1909 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1547) [bci: 7]
at java.lang.String.split(String.java:2351) [bci: 129]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v441 
=== Succesors ===
trueSuccessor: v1908 
falseSuccessor: v1905 
=== Usages ===
=== Predecessor ===
v33 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v441 #trueSuccessor: v1908 #falseSuccessor: v1905  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v20|DWORD, v21|DWORD, v22|QWORD[.]] = LABEL numbPhis: 3 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v20|DWORD, y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B183" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1908 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1547) [bci: 7]
at java.lang.String.split(String.java:2351) [bci: 129]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v33 
=== Succesors ===
next: v2430 
=== Usages ===
=== Predecessor ===
v1909 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v33 #next: v2430  <|@  <|@
f <@~|@floating>@ <|@
tid i2431 <|@
result int[-420371|0xfffffffffff995ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -420371
stableDimension: 0
stamp: i32 [-420371] ⇊00000000fff995ed ⇈00000000fff995ed
stampKind: i32
value: int[-420371|0xfffffffffff995ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2432 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2430 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2429 
=== Predecessor ===
v1908 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-420371|0xfffffffffff995ed], Object[null]] destination: B29 -> B183 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B184" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4614323782818816755
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1905 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1547) [bci: 7]
at java.lang.String.split(String.java:2351) [bci: 129]
stamp: void
=== Inputs ===
=== Succesors ===
next: v286 
=== Usages ===
=== Predecessor ===
v1909 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v286  <|@  <|@
f <@~|@floating>@ <|@
tid v324 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.substring(String.java:1969) [bci: 49]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i34 
y: i5 
=== Succesors ===
=== Usages ===
v327 v58 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i34 y: i5  <|@  <|@
f <@~|@floating>@ <|@
tid i355 <|@
result v23|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.String.substring(String.java:1965) [bci: 33]
at java.lang.String.split(String.java:2368) [bci: 243]
stamp: i32
=== Inputs ===
x: i4359 
y: i34 
=== Succesors ===
=== Usages ===
v356 v560 j4354 j1815 i2322 v2164 v2924 i2883 v2890 a2905 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i4359 y: i34  <|@  <|@
f <@~|@floating>@ <|@
tid v283 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.indexOf(String.java:1549) [bci: 17]
at java.lang.String.split(String.java:2351) [bci: 129]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i34 
y: i4359 
=== Succesors ===
=== Usages ===
v286 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i34 y: i4359  <|@  <|@
f <@*|@fixed>@ <|@
tid v286 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1549) [bci: 17]
at java.lang.String.split(String.java:2351) [bci: 129]
stamp: void
trueSuccessorProbability: 0.7686826237895121
=== Inputs ===
condition: v283 
=== Succesors ===
trueSuccessor: v284 
falseSuccessor: v285 
=== Usages ===
=== Predecessor ===
v1905 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v283 #trueSuccessor: v284 #falseSuccessor: v285  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = SUB (x: v13|DWORD, ~y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v13|DWORD, y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7686826237895121 condition: > trueDestination: B30 -> B31 falseDestination: B30 -> B184 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B180" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612671861231424105
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v284 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1554) [bci: 22]
at java.lang.String.split(String.java:2351) [bci: 129]
stamp: void
=== Inputs ===
=== Succesors ===
next: v4267 
=== Usages ===
=== Predecessor ===
v286 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4267  <|@  <|@
f <@~|@floating>@ <|@
tid j1814 <|@
result v24|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i34 
=== Succesors ===
=== Usages ===
j1818 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i34  <|@  <|@
f <@~|@floating>@ <|@
tid j1815 <|@
result v25|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i355 
=== Succesors ===
=== Usages ===
j1817 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i355  <|@  <|@
f <@~|@floating>@ <|@
tid j1817 <|@
result v26|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j1815 
y: j1816 
=== Succesors ===
=== Usages ===
j1818 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1815 y: j1816  <|@  <|@
f <@~|@floating>@ <|@
tid j1818 <|@
result v27|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j1814 
y: j1817 
=== Succesors ===
=== Usages ===
v1820 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1814 y: j1817  <|@  <|@
f <@~|@floating>@ <|@
tid v1820 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1818 
y: j1812 
=== Succesors ===
=== Usages ===
v4267 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1818 y: j1812  <|@  <|@
f <@*|@fixed>@ <|@
tid v4267 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1559) [bci: 47]
at java.lang.String.split(String.java:2351) [bci: 129]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1820 
=== Succesors ===
trueSuccessor: v4266 
falseSuccessor: v4263 
=== Usages ===
=== Predecessor ===
v284 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1820 #trueSuccessor: v4266 #falseSuccessor: v4263  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOVSXD v20|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOVSXD v23|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = DEC v25|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = ADD (x: v24|QWORD, y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v14|QWORD, y: v27|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B180 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B179" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612671861231424105
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4266 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1559) [bci: 47]
at java.lang.String.split(String.java:2351) [bci: 129]
stamp: void
=== Inputs ===
=== Succesors ===
next: v4265 
=== Usages ===
=== Predecessor ===
v4267 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4265  <|@  <|@
f <@~|@floating>@ <|@
tid v1821 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i34 
y: i4359 
=== Succesors ===
=== Usages ===
v4265 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i34 y: i4359  <|@  <|@
f <@*|@fixed>@ <|@
tid v4265 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1559) [bci: 47]
at java.lang.String.split(String.java:2351) [bci: 129]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1821 
=== Succesors ===
trueSuccessor: v4256 
falseSuccessor: v4264 
=== Usages ===
=== Predecessor ===
v4266 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1821 #trueSuccessor: v4256 #falseSuccessor: v4264  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v13|DWORD, y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B32 -> B33 falseDestination: B32 -> B179 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612671861231424105
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4256 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1559) [bci: 47]
at java.lang.String.split(String.java:2351) [bci: 129]
stamp: void
=== Inputs ===
=== Succesors ===
next: v289 
=== Usages ===
v1825 
=== Predecessor ===
v4265 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v289  <|@  <|@
f <@*|@fixed>@ <|@
tid v289 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1558) [bci: 37]
at java.lang.String.split(String.java:2351) [bci: 129]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v290 
=== Predecessor ===
v4256 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v20|DWORD] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B177" 
    successors "B35" "B178" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4629850235763156642
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i291 <|@
result v28|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v290 
values: i34 i4332 
=== Succesors ===
=== Usages ===
?292 v293 v4397 v330 i321 ?145 v319 i1411 ?345 v39 i4332 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v290 values: i34 i4332  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v290 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 13.563252769086171
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.lang.String.indexOf(String.java:1558) [bci: 37]
at java.lang.String.split(String.java:2351) [bci: 129]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v289 
=== Succesors ===
next: v297 
=== Usages ===
i291 v295 v300 v306 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v289 #next: v297  <|@  <|@
f <@~|@floating>@ <|@
tid v293 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.indexOf(String.java:1558) [bci: 40]
at java.lang.String.split(String.java:2351) [bci: 129]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i291 
y: i4359 
=== Succesors ===
=== Usages ===
v297 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i291 y: i4359  <|@  <|@
f <@*|@fixed>@ <|@
tid v297 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1558) [bci: 40]
at java.lang.String.split(String.java:2351) [bci: 129]
stamp: void
trueSuccessorProbability: 0.9277482167917486
=== Inputs ===
condition: v293 
=== Succesors ===
trueSuccessor: v294 
falseSuccessor: v295 
=== Usages ===
=== Predecessor ===
v290 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v293 #trueSuccessor: v294 #falseSuccessor: v295  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v28|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v13|DWORD, y: v28|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9277482167917486 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B178 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B177" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4629327619026861556
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v294 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1559) [bci: 43]
at java.lang.String.split(String.java:2351) [bci: 129]
stamp: void
=== Inputs ===
=== Succesors ===
next: i4360 
=== Usages ===
v1825 
=== Predecessor ===
v297 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i4360  <|@  <|@
f <@~|@floating>@ <|@
tid v1825 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v4256 v294 
=== Succesors ===
=== Usages ===
i4360 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v4256 v294  <|@  <|@
f <@~|@floating>@ <|@
tid v4397 <|@
result [v15|QWORD[.] + v28|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a1636 
index: i291 
=== Succesors ===
=== Usages ===
i4360 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1636 index: i291  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4360 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at java.lang.String.indexOf(String.java:1559) [bci: 47]
at java.lang.String.split(String.java:2351) [bci: 129]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v1825 
address: v4397 
=== Succesors ===
next: v304 
=== Usages ===
i1652 
=== Predecessor ===
v294 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1825 address: v4397 #next: v304  <|@  <|@
f <@~|@floating>@ <|@
tid i1652 <|@
result v29|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.lang.String.indexOf(String.java:1559) [bci: 47]
at java.lang.String.split(String.java:2351) [bci: 129]
resultBits: 32
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i4360 
=== Succesors ===
=== Usages ===
v299 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i4360  <|@  <|@
f <@~|@floating>@ <|@
tid v299 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.indexOf(String.java:1559) [bci: 49]
at java.lang.String.split(String.java:2351) [bci: 129]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1630 
y: i1652 
=== Succesors ===
=== Usages ===
v304 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1630 y: i1652  <|@  <|@
f <@*|@fixed>@ <|@
tid v304 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1559) [bci: 49]
at java.lang.String.split(String.java:2351) [bci: 129]
stamp: void
trueSuccessorProbability: 0.0015918580565381646
=== Inputs ===
condition: v299 
=== Succesors ===
trueSuccessor: v300 
falseSuccessor: v303 
=== Usages ===
=== Predecessor ===
i4360 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v299 #trueSuccessor: v300 #falseSuccessor: v303  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOVZX [v15|QWORD[.] + v28|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v29|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0015918580565381646 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B177 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" "B38" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587198128603920715
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v300 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1560) [bci: 52]
at java.lang.String.split(String.java:2351) [bci: 129]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v290 
=== Succesors ===
next: v45 
=== Usages ===
=== Predecessor ===
v304 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v290 #next: v45  <|@  <|@
f <@~|@floating>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.split(String.java:2351) [bci: 136]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i291 
y: i19 
=== Succesors ===
=== Usages ===
v45 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i291 y: i19  <|@  <|@
f <@*|@fixed>@ <|@
tid v45 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.split(String.java:2351) [bci: 136]
stamp: void
trueSuccessorProbability: 0.315317887137174
=== Inputs ===
condition: v39 
=== Succesors ===
trueSuccessor: v1486 
falseSuccessor: v44 
=== Usages ===
=== Predecessor ===
v300 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v39 #trueSuccessor: v1486 #falseSuccessor: v44  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v28|DWORD y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.315317887137174 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B185" 
    xhandlers
    flags 
    probability 4580029577595117535
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1486 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.split(String.java:2363) [bci: 205]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1488 
=== Usages ===
=== Predecessor ===
v45 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1488  <|@  <|@
f <@*|@fixed>@ <|@
tid v1488 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1487 
=== Predecessor ===
v1486 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B37 -> B185 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584979139650404691
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v44 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.split(String.java:2352) [bci: 139]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1919 
=== Usages ===
=== Predecessor ===
v45 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1919  <|@  <|@
f <@~|@floating>@ <|@
tid v319 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.substring(String.java:1962) [bci: 19]
at java.lang.String.split(String.java:2353) [bci: 162]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4359 
y: i291 
=== Succesors ===
=== Usages ===
v1919 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i4359 y: i291  <|@  <|@
tid ?248 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a244 
materializedValue: a244 
=== Succesors ===
=== Usages ===
?309 ?345 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a244 materializedValue: a244  <|@  <|@
f <@*|@fixed>@ <|@
tid v1919 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1962) [bci: 19]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v319 
=== Succesors ===
trueSuccessor: v1918 
falseSuccessor: v1915 
=== Usages ===
=== Predecessor ===
v44 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v319 #trueSuccessor: v1918 #falseSuccessor: v1915  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v28|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1918 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1962) [bci: 19]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v33 
=== Succesors ===
next: v2498 
=== Usages ===
=== Predecessor ===
v1919 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v33 #next: v2498  <|@  <|@
f <@~|@floating>@ <|@
tid i2499 <|@
result int[-423187|0xfffffffffff98aed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -423187
stableDimension: 0
stamp: i32 [-423187] ⇊00000000fff98aed ⇈00000000fff98aed
stampKind: i32
value: int[-423187|0xfffffffffff98aed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2500 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2498 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2497 
=== Predecessor ===
v1918 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-423187|0xfffffffffff98aed]] destination: B39 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584979139650404691
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1915 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1962) [bci: 19]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1924 
=== Usages ===
=== Predecessor ===
v1919 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1924  <|@  <|@
f <@~|@floating>@ <|@
tid i321 <|@
result v30|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.String.substring(String.java:1965) [bci: 33]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: i32
=== Inputs ===
x: i291 
y: i34 
=== Succesors ===
=== Usages ===
i458 v2642 j3259 v443 v447 ?1448 a2657 v2164 i2322 v2680 i2633 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i291 y: i34  <|@  <|@
f <@~|@floating>@ <|@
tid v447 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.<init>(String.java:195) [bci: 22]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i321 
y: i5 
=== Succesors ===
=== Usages ===
v1924 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i321 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v1924 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1966) [bci: 36]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v447 
=== Succesors ===
trueSuccessor: v1923 
falseSuccessor: v1920 
=== Usages ===
=== Predecessor ===
v1915 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v447 #trueSuccessor: v1923 #falseSuccessor: v1920  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = SUB (x: v28|DWORD, ~y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v30|DWORD, y: v30|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B40 -> B41 falseDestination: B40 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1923 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1966) [bci: 36]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v33 
=== Succesors ===
next: v2503 
=== Usages ===
=== Predecessor ===
v1924 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v33 #next: v2503  <|@  <|@
f <@~|@floating>@ <|@
tid i2504 <|@
result int[-423443|0xfffffffffff989ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -423443
stableDimension: 0
stamp: i32 [-423443] ⇊00000000fff989ed ⇈00000000fff989ed
stampKind: i32
value: int[-423443|0xfffffffffff989ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2500 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2503 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2497 
=== Predecessor ===
v1923 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-423443|0xfffffffffff989ed]] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B39" "B41" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i2500 <|@
result v31|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-423443 - -423187] ⇊00000000fff988ed ⇈00000000fff98bed
valueDescription: i32
=== Inputs ===
merge: v2497 
values: i2499 i2504 
=== Succesors ===
=== Usages ===
v2502 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2497 values: i2499 i2504  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2497 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2498 v2503 
=== Succesors ===
next: v2502 
=== Usages ===
i2500 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2498 v2503 #next: v2502  <|@  <|@
tid ?309 <|@
d <@d|@=== Debug Properties ===
bci: 129
code: ResolvedJavaMethodBytecode<String.split(String, int)>
duringCall: true
localsSize: 10
locksSize: 0
rethrowException: false
sourceFile: String.java
sourceLine: 2351
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - i5 i1630 i34 - i5 a244 - - 
virtualObjectMappings: ?248 
=== Succesors ===
=== Usages ===
?292 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - i5 i1630 i34 - i5 a244 - - virtualObjectMappings: ?248  <|@  <|@
tid ?292 <|@
d <@d|@=== Debug Properties ===
bci: 37
code: ResolvedJavaMethodBytecode<String.indexOf(int, int)>
duringCall: false
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: String.java
sourceLine: 1558
stackSize: 0
=== Inputs ===
outerFrameState: ?309 
values: - i1630 - i4359 a1636 i291 
virtualObjectMappings: ?521 
=== Succesors ===
=== Usages ===
v2502 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?309 values: - i1630 - i4359 a1636 i291 virtualObjectMappings: ?521  <|@  <|@
f <@*|@fixed>@ <|@
tid v2502 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?292 
actionAndReason: i2500 
speculation: a2214 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2497 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?292 actionAndReason: i2500 speculation: a2214  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v31|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v31|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.indexOf(String.java:1558) [bci: 37]
locals: - v11|DWORD - v13|DWORD v15|QWORD[.] v28|DWORD 
java.lang.String.split(String.java:2351) [bci: 129]
locals: v0|QWORD[.] - int[0|0x0] v11|DWORD v20|DWORD - int[0|0x0] vobject:ArrayList:0{modCount=v21|DWORD,size=v21|DWORD,elementData=v22|QWORD[.]} - - 
vobject:ArrayList:0{modCount=v21|DWORD,size=v21|DWORD,elementData=v22|QWORD[.]} Ljava/util/ArrayList; v21|DWORD v21|DWORD v22|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37, 129] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B44" "B49" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584979139650404691
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1920 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1966) [bci: 36]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: void
=== Inputs ===
=== Succesors ===
next: v327 
=== Usages ===
=== Predecessor ===
v1924 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v327  <|@  <|@
tid ?345 <|@
d <@d|@=== Debug Properties ===
bci: 162
code: ResolvedJavaMethodBytecode<String.split(String, int)>
duringCall: true
localsSize: 10
locksSize: 0
rethrowException: false
sourceFile: String.java
sourceLine: 2353
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 - i5 i1630 - i291 i5 a244 - - a244 
virtualObjectMappings: ?248 
=== Succesors ===
=== Usages ===
?337 ?1448 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - i5 i1630 - i291 i5 a244 - - a244 virtualObjectMappings: ?248  <|@  <|@
f <@~|@floating>@ <|@
tid v443 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.<init>(String.java:194) [bci: 18]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i321 
y: i8 
=== Succesors ===
=== Usages ===
v446 v1455 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i321 y: i8  <|@  <|@
f <@~|@floating>@ <|@
tid v450 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.<init>(String.java:198) [bci: 37]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4359 
y: i34 
=== Succesors ===
=== Usages ===
v1929 v2161 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i4359 y: i34  <|@  <|@
f <@*|@fixed>@ <|@
tid v327 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1969) [bci: 49]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: void
trueSuccessorProbability: 0.18334585698550698
=== Inputs ===
condition: v324 
=== Succesors ===
trueSuccessor: v325 
falseSuccessor: v326 
=== Usages ===
=== Predecessor ===
v1920 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v324 #trueSuccessor: v325 #falseSuccessor: v326  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v20|DWORD, y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.18334585698550698 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573717372198682453
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v325 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1969) [bci: 52]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: void
=== Inputs ===
=== Succesors ===
next: v336 
=== Usages ===
=== Predecessor ===
v327 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v336  <|@  <|@
f <@~|@floating>@ <|@
tid v330 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.substring(String.java:1969) [bci: 58]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i291 
y: i4359 
=== Succesors ===
=== Usages ===
v336 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i291 y: i4359  <|@  <|@
f <@*|@fixed>@ <|@
tid v336 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1969) [bci: 58]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: void
trueSuccessorProbability: 0.09242718272553296
=== Inputs ===
condition: v330 
=== Succesors ===
trueSuccessor: v331 
falseSuccessor: v335 
=== Usages ===
=== Predecessor ===
v325 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v330 #trueSuccessor: v331 #falseSuccessor: v335  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v13|DWORD, y: v28|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09242718272553296 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B112" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4558364945303527242
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v331 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1969) [bci: 61]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: void
=== Inputs ===
=== Succesors ===
next: v347 
=== Usages ===
=== Predecessor ===
v336 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v347  <|@  <|@
f <@*|@fixed>@ <|@
tid v347 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v346 
=== Predecessor ===
v331 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v0|QWORD[.]] destination: B45 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573064156944687980
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v335 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1969) [bci: 65]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: void
=== Inputs ===
=== Succesors ===
next: v446 
=== Usages ===
=== Predecessor ===
v336 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v446  <|@  <|@
f <@*|@fixed>@ <|@
tid v446 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:194) [bci: 18]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: void
trueSuccessorProbability: 0.09284041465770032
=== Inputs ===
condition: v443 
=== Succesors ===
trueSuccessor: v444 
falseSuccessor: v445 
=== Usages ===
=== Predecessor ===
v335 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v443 #trueSuccessor: v444 #falseSuccessor: v445  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v30|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09284041465770032 condition: < trueDestination: B46 -> B47 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B51" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4557903150740909772
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v444 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:195) [bci: 21]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1444 
=== Usages ===
=== Predecessor ===
v446 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1444  <|@  <|@
f <@*|@fixed>@ <|@
tid v1444 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1443 
=== Predecessor ===
v444 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B47 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572468666011020690
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v445 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 50]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1447 
=== Usages ===
=== Predecessor ===
v446 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1447  <|@  <|@
f <@*|@fixed>@ <|@
tid v1447 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1446 
=== Predecessor ===
v445 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B48 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B50" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583527021126394577
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v326 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1969) [bci: 65]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1455 
=== Usages ===
=== Predecessor ===
v327 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1455  <|@  <|@
f <@*|@fixed>@ <|@
tid v1455 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:194) [bci: 18]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: void
trueSuccessorProbability: 0.09284041465770032
=== Inputs ===
condition: v443 
=== Succesors ===
trueSuccessor: v1453 
falseSuccessor: v1454 
=== Usages ===
=== Predecessor ===
v326 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v443 #trueSuccessor: v1453 #falseSuccessor: v1454  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v30|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09284041465770032 condition: < trueDestination: B49 -> B50 falseDestination: B49 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4567991506279028027
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1453 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:195) [bci: 21]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1445 
=== Usages ===
=== Predecessor ===
v1455 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1445  <|@  <|@
f <@*|@fixed>@ <|@
tid v1445 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1443 
=== Predecessor ===
v1453 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569182488146362606
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1443 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1444 v1445 
=== Succesors ===
next: v1929 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1444 v1445 #next: v1929  <|@  <|@
tid ?337 <|@
d <@d|@=== Debug Properties ===
bci: 65
code: ResolvedJavaMethodBytecode<String.substring(int, int)>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: String.java
sourceLine: 1969
stackSize: 0
=== Inputs ===
outerFrameState: ?345 
values: a1 i34 - i5 
virtualObjectMappings: ?521 
=== Succesors ===
=== Usages ===
a2596 v1926 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?345 values: a1 i34 - i5 virtualObjectMappings: ?521  <|@  <|@
f <@*|@fixed>@ <|@
tid v1929 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:198) [bci: 37]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v450 
=== Succesors ===
trueSuccessor: v1928 
falseSuccessor: v1925 
=== Usages ===
=== Predecessor ===
v1443 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v450 #trueSuccessor: v1928 #falseSuccessor: v1925  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v20|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B51 -> B52 falseDestination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1928 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:198) [bci: 37]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v33 
=== Succesors ===
next: v1926 
=== Usages ===
=== Predecessor ===
v1929 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v33 #next: v1926  <|@  <|@
f <@*|@fixed>@ <|@
tid v1926 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1680
nodeSourcePosition: at java.lang.String.<init>(String.java:198) [bci: 37]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?337 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1928 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?337  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -430099 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.substring(String.java:1969) [bci: 65]
locals: v0|QWORD[.] v20|DWORD - int[0|0x0] 
java.lang.String.split(String.java:2353) [bci: 162]
stack: vobject:ArrayList:0{modCount=v21|DWORD,size=v21|DWORD,elementData=v22|QWORD[.]} 
locals: v0|QWORD[.] - int[0|0x0] v11|DWORD - v28|DWORD int[0|0x0] vobject:ArrayList:0{modCount=v21|DWORD,size=v21|DWORD,elementData=v22|QWORD[.]} - - 
vobject:ArrayList:0{modCount=v21|DWORD,size=v21|DWORD,elementData=v22|QWORD[.]} Ljava/util/ArrayList; v21|DWORD v21|DWORD v22|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:65, 162] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569182488146362606
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1925 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:198) [bci: 37]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2584 
=== Usages ===
=== Predecessor ===
v1929 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2584  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2584 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j2603 
=== Usages ===
v4418 v4419 
=== Predecessor ===
v1925 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j2603  <|@  <|@
f <@~|@floating>@ <|@
tid v4418 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j2584 
index: - 
=== Succesors ===
=== Usages ===
j2603 v2605 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2584 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2603 <|@
result v32|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v4418 
=== Succesors ===
next: j2604 
=== Usages ===
j3226 j2609 v4494 
=== Predecessor ===
j2584 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4418 #next: j2604  <|@  <|@
f <@~|@floating>@ <|@
tid v4419 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j2584 
index: - 
=== Succesors ===
=== Usages ===
j2604 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2584 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2604 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v4419 
=== Succesors ===
next: v2592 
=== Usages ===
v2589 
=== Predecessor ===
j2603 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4419 #next: v2592  <|@  <|@
f <@~|@floating>@ <|@
tid j3226 <|@
result v33|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2603 
y: j3225 
=== Succesors ===
=== Usages ===
v2589 v2605 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2603 y: j3225  <|@  <|@
f <@~|@floating>@ <|@
tid v2589 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2604 
y: j3226 
=== Succesors ===
=== Usages ===
v2592 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j2604 y: j3226  <|@  <|@
f <@*|@fixed>@ <|@
tid v2592 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v2589 
=== Succesors ===
trueSuccessor: v2590 
falseSuccessor: v2591 
=== Usages ===
=== Predecessor ===
j2604 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2589 #trueSuccessor: v2590 #falseSuccessor: v2591  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = LEA [v32|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v33|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B53 -> B54 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4539627389128383186
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2590 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a2596 
=== Usages ===
=== Predecessor ===
v2592 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2596  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2596 <|@
result v34|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?337 
arguments: v2582 i1663 i8 
=== Succesors ===
next: j2597 
=== Usages ===
j2597 
=== Predecessor ===
v2590 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?337 arguments: v2582 i1663 i8 #next: j2597  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2597 <|@
result v34|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a2596 
=== Succesors ===
next: v2610 
=== Usages ===
j2609 
=== Predecessor ===
a2596 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a2596 #next: v2610  <|@  <|@
f <@*|@fixed>@ <|@
tid v2610 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2607 
=== Predecessor ===
j2597 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v18|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.substring(String.java:1969) [bci: 65]
locals: v0|QWORD[.] v20|DWORD - int[0|0x0] 
java.lang.String.split(String.java:2353) [bci: 162]
stack: vobject:ArrayList:0{modCount=v21|DWORD,size=v21|DWORD,elementData=v22|QWORD[.]} 
locals: v0|QWORD[.] - int[0|0x0] v11|DWORD - v28|DWORD int[0|0x0] vobject:ArrayList:0{modCount=v21|DWORD,size=v21|DWORD,elementData=v22|QWORD[.]} - - 
vobject:ArrayList:0{modCount=v21|DWORD,size=v21|DWORD,elementData=v22|QWORD[.]} Ljava/util/ArrayList; v21|DWORD v21|DWORD v22|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:65, 162] <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v34|QWORD[.]] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569112127490162104
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2591 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2605 
=== Usages ===
=== Predecessor ===
v2592 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2605  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2605 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4418 
value: j3226 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2601 
=== Usages ===
=== Predecessor ===
v2591 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4418 value: j3226 stateAfter: - lastLocationAccess: - #next: v2601  <|@  <|@
f <@~|@floating>@ <|@
tid v4494 <|@
result [v32|QWORD + 216] <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j2603 
index: - 
=== Succesors ===
=== Usages ===
v2601 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2603 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2601 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v4494 
=== Succesors ===
next: v2608 
=== Usages ===
=== Predecessor ===
v2605 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v4494 #next: v2608  <|@  <|@
f <@*|@fixed>@ <|@
tid v2608 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2607 
=== Predecessor ===
v2601 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v33|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v32|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v32|QWORD] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" "B54" 
    successors "B112" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569182488146362606
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2609 <|@
result v35|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2607 
values: j2603 j2597 
=== Succesors ===
=== Usages ===
v4421 v4420 a2051 v4495 v4496 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2607 values: j2603 j2597  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2607 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2608 v2610 
=== Succesors ===
next: a2051 
=== Usages ===
j2609 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2608 v2610 #next: a2051  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2051 <|@
result v36|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j2609 
=== Succesors ===
next: j2620 
=== Usages ===
a2057 
=== Predecessor ===
v2607 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j2609 #next: j2620  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2620 <|@
result v37|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v4478 
=== Succesors ===
next: v2621 
=== Usages ===
v2621 
=== Predecessor ===
a2051 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4478 #next: v2621  <|@  <|@
f <@~|@floating>@ <|@
tid v4420 <|@
result [v35|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2609 
index: - 
=== Succesors ===
=== Usages ===
v2621 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2609 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2621 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4420 
value: j2620 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2624 
=== Usages ===
=== Predecessor ===
j2620 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4420 value: j2620 stateAfter: - lastLocationAccess: - #next: v2624  <|@  <|@
f <@~|@floating>@ <|@
tid v4421 <|@
result [v35|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j2609 
index: - 
=== Succesors ===
=== Usages ===
v2624 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2609 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2624 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4421 
value: v3230 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2628 
=== Usages ===
=== Predecessor ===
v2621 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4421 value: v3230 stateAfter: - lastLocationAccess: - #next: v2628  <|@  <|@
f <@~|@floating>@ <|@
tid v4495 <|@
result [v35|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j2609 
index: - 
=== Succesors ===
=== Usages ===
v2628 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2609 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2628 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4495 
value: a2133 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2630 
=== Usages ===
=== Predecessor ===
v2624 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4495 value: a2133 stateAfter: - lastLocationAccess: - #next: v2630  <|@  <|@
f <@~|@floating>@ <|@
tid v4496 <|@
result [v35|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j2609 
index: - 
=== Succesors ===
=== Usages ===
v2630 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2609 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2630 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4496 
value: i5 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a2057 
=== Usages ===
=== Predecessor ===
v2628 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4496 value: i5 stateAfter: - lastLocationAccess: - #next: a2057  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2057 <|@
result v36|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a2051 
=== Succesors ===
next: v2058 
=== Usages ===
a348 
=== Predecessor ===
v2630 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a2051 #next: v2058  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2058 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v349 
=== Usages ===
=== Predecessor ===
a2057 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v349  <|@  <|@
f <@*|@fixed>@ <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v346 
=== Predecessor ===
v2058 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v35|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = MOVE v35|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOV [v10|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v35|QWORD[*]], y: v37|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v35|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v35|QWORD[*] + 12] y: -559030611 size: DWORD c: NarrowOop[char[0]{}] <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v35|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v36|QWORD[.]] destination: B56 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582796385657305130
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1454 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 50]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1449 
=== Usages ===
=== Predecessor ===
v1455 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1449  <|@  <|@
f <@*|@fixed>@ <|@
tid v1449 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1446 
=== Predecessor ===
v1454 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B48" "B57" 
    successors "B59" "B60" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584251046621639566
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1446 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1447 v1449 
=== Succesors ===
next: v1934 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1447 v1449 #next: v1934  <|@  <|@
tid ?1448 <|@
d <@d|@=== Debug Properties ===
bci: 65
code: ResolvedJavaMethodBytecode<String.substring(int, int)>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: String.java
sourceLine: 1969
stackSize: 0
=== Inputs ===
outerFrameState: ?345 
values: a1 i34 - i321 
virtualObjectMappings: ?521 
=== Succesors ===
=== Usages ===
a2657 a2703 v2520 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?345 values: a1 i34 - i321 virtualObjectMappings: ?521  <|@  <|@
f <@~|@floating>@ <|@
tid i458 <|@
result v38|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 54]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: i32
=== Inputs ===
x: i4359 
y: i321 
=== Succesors ===
=== Usages ===
v459 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i4359 y: i321  <|@  <|@
f <@~|@floating>@ <|@
tid v459 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 55]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i458 
y: i34 
=== Succesors ===
=== Usages ===
v1934 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i458 y: i34  <|@  <|@
f <@*|@fixed>@ <|@
tid v1934 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 55]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v459 
=== Succesors ===
trueSuccessor: v1933 
falseSuccessor: v1930 
=== Usages ===
=== Predecessor ===
v1446 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v459 #trueSuccessor: v1933 #falseSuccessor: v1930  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = SUB (x: v13|DWORD, ~y: v30|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v20|DWORD, y: v38|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B58 -> B59 falseDestination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1933 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 55]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v33 
=== Succesors ===
next: v2516 
=== Usages ===
=== Predecessor ===
v1934 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v33 #next: v2516  <|@  <|@
f <@~|@floating>@ <|@
tid i2517 <|@
result int[-430355|0xfffffffffff96eed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -430355
stableDimension: 0
stamp: i32 [-430355] ⇊00000000fff96eed ⇈00000000fff96eed
stampKind: i32
value: int[-430355|0xfffffffffff96eed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2518 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2516 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2515 
=== Predecessor ===
v1933 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-430355|0xfffffffffff96eed]] destination: B59 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584251046621639566
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1930 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 55]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2161 
=== Usages ===
=== Predecessor ===
v1934 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2161  <|@  <|@
f <@*|@fixed>@ <|@
tid v2161 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:186) [bci: 52]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: void
trueSuccessorProbability: 9.999999999998899E-5
=== Inputs ===
condition: v450 
=== Succesors ===
trueSuccessor: v2160 
falseSuccessor: v2158 
=== Usages ===
=== Predecessor ===
v1930 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v450 #trueSuccessor: v2160 #falseSuccessor: v2158  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v20|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 9.999999999998899E-5 condition: > trueDestination: B60 -> B61 falseDestination: B60 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" 
    xhandlers
    flags 
    probability 4524150487867272957
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2160 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:187) [bci: 55]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2565 
=== Usages ===
=== Predecessor ===
v2161 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2565  <|@  <|@
f <@~|@floating>@ <|@
tid i2522 <|@
result int[-553569|0xfffffffffff78d9f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -553569
stableDimension: 0
stamp: i32 [-553569] ⇊00000000fff78d9f ⇈00000000fff78d9f
stampKind: i32
value: int[-553569|0xfffffffffff78d9f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2518 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2565 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:187) [bci: 55]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2515 
=== Predecessor ===
v2160 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-553569|0xfffffffffff78d9f]] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B59" "B61" 
    successors 
    xhandlers
    flags 
    probability 4524150487867272957
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i2518 <|@
result v39|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-553569 - -430355] ⇊00000000fff10c8d ⇈00000000ffffefff
valueDescription: i32
=== Inputs ===
merge: v2515 
values: i2517 i2522 
=== Succesors ===
=== Usages ===
v2520 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2515 values: i2517 i2522  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2515 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2516 v2565 
=== Succesors ===
next: v2520 
=== Usages ===
i2518 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2516 v2565 #next: v2520  <|@  <|@
f <@*|@fixed>@ <|@
tid v2520 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?1448 
actionAndReason: i2518 
speculation: a2214 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2515 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?1448 actionAndReason: i2518 speculation: a2214  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v39|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v39|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.substring(String.java:1969) [bci: 65]
locals: v0|QWORD[.] v20|DWORD - v30|DWORD 
java.lang.String.split(String.java:2353) [bci: 162]
stack: vobject:ArrayList:0{modCount=v21|DWORD,size=v21|DWORD,elementData=v22|QWORD[.]} 
locals: v0|QWORD[.] - int[0|0x0] v11|DWORD - v28|DWORD int[0|0x0] vobject:ArrayList:0{modCount=v21|DWORD,size=v21|DWORD,elementData=v22|QWORD[.]} - - 
vobject:ArrayList:0{modCount=v21|DWORD,size=v21|DWORD,elementData=v22|QWORD[.]} Ljava/util/ArrayList; v21|DWORD v21|DWORD v22|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:65, 162] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B64" "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584250187239118245
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2158 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:189) [bci: 64]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2636 
=== Usages ===
=== Predecessor ===
v2161 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2636  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2636 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j2677 
=== Usages ===
v4422 v4423 
=== Predecessor ===
v2158 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j2677  <|@  <|@
f <@~|@floating>@ <|@
tid v4422 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j2636 
index: - 
=== Succesors ===
=== Usages ===
j2677 v2679 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2636 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2677 <|@
result v40|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v4422 
=== Succesors ===
next: j2678 
=== Usages ===
j2640 v4424 v4425 a2656 v4430 v4426 v4427 v4428 v4429 
=== Predecessor ===
j2636 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4422 #next: j2678  <|@  <|@
f <@~|@floating>@ <|@
tid v4423 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j2636 
index: - 
=== Succesors ===
=== Usages ===
j2678 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2636 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2678 <|@
result v41|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v4423 
=== Succesors ===
next: v2645 
=== Usages ===
v2646 
=== Predecessor ===
j2677 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4423 #next: v2645  <|@  <|@
f <@~|@floating>@ <|@
tid v2642 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i321 
y: i2641 
=== Succesors ===
=== Usages ===
v2645 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i321 y: i2641  <|@  <|@
f <@*|@fixed>@ <|@
tid v2645 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v2642 
=== Succesors ===
trueSuccessor: v2644 
falseSuccessor: v2643 
=== Usages ===
=== Predecessor ===
j2678 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2642 #trueSuccessor: v2644 #falseSuccessor: v2643  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v30|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B63 -> B64 falseDestination: B63 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B65" "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583390890656048814
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2644 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2652 
=== Usages ===
=== Predecessor ===
v2645 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2652  <|@  <|@
f <@~|@floating>@ <|@
tid i2633 <|@
result v42|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i321 
y: i8 
=== Succesors ===
=== Usages ===
i2665 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i321 y: i8  <|@  <|@
f <@~|@floating>@ <|@
tid i2665 <|@
result v43|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i2633 
y: i2664 
=== Succesors ===
=== Usages ===
i2635 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2633 y: i2664  <|@  <|@
f <@~|@floating>@ <|@
tid i2635 <|@
result v44|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i2665 
y: i2634 
=== Succesors ===
=== Usages ===
j2639 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i2665 y: i2634  <|@  <|@
f <@~|@floating>@ <|@
tid j2639 <|@
result v45|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i2635 
=== Succesors ===
=== Usages ===
j2640 v4426 v4427 v4428 v4429 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2635  <|@  <|@
f <@~|@floating>@ <|@
tid j2640 <|@
result v46|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: i64
=== Inputs ===
x: j2639 
y: j2677 
=== Succesors ===
=== Usages ===
v2646 v2679 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2639 y: j2677  <|@  <|@
f <@~|@floating>@ <|@
tid v2646 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2678 
y: j2640 
=== Succesors ===
=== Usages ===
v2652 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j2678 y: j2640  <|@  <|@
f <@*|@fixed>@ <|@
tid v2652 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v2646 
=== Succesors ===
trueSuccessor: v2651 
falseSuccessor: v2650 
=== Usages ===
=== Predecessor ===
v2644 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2646 #trueSuccessor: v2651 #falseSuccessor: v2650  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = SHL v30|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = LEA [v42|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = AND v43|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOVSXD v44|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = ADD (x: v45|QWORD, y: v40|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v46|QWORD, y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B64 -> B65 falseDestination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B68" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4553585171962680886
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2651 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2649 
=== Usages ===
=== Predecessor ===
v2652 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2649  <|@  <|@
f <@*|@fixed>@ <|@
tid v2649 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2648 
=== Predecessor ===
v2651 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B65 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583313553963572565
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2650 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2679 
=== Usages ===
=== Predecessor ===
v2652 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2679  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2679 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4422 
value: j2640 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2667 
=== Usages ===
=== Predecessor ===
v2650 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4422 value: j2640 stateAfter: - lastLocationAccess: - #next: v2667  <|@  <|@
f <@~|@floating>@ <|@
tid v4426 <|@
result [v45|QWORD + v40|QWORD * 1 + 192] <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j2639 
index: j2677 
=== Succesors ===
=== Usages ===
v2667 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2639 index: j2677  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2667 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: void
=== Inputs ===
address: v4426 
=== Succesors ===
next: v2669 
=== Usages ===
=== Predecessor ===
v2679 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v4426 #next: v2669  <|@  <|@
f <@~|@floating>@ <|@
tid v4427 <|@
result [v45|QWORD + v40|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j2639 
index: j2677 
=== Succesors ===
=== Usages ===
v2669 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2639 index: j2677  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2669 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: void
=== Inputs ===
address: v4427 
=== Succesors ===
next: v2672 
=== Usages ===
=== Predecessor ===
v2667 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v4427 #next: v2672  <|@  <|@
f <@~|@floating>@ <|@
tid v4428 <|@
result [v45|QWORD + v40|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j2639 
index: j2677 
=== Succesors ===
=== Usages ===
v2672 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2639 index: j2677  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2672 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: void
=== Inputs ===
address: v4428 
=== Succesors ===
next: v2675 
=== Usages ===
=== Predecessor ===
v2669 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v4428 #next: v2675  <|@  <|@
f <@~|@floating>@ <|@
tid v4429 <|@
result [v45|QWORD + v40|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j2639 
index: j2677 
=== Succesors ===
=== Usages ===
v2675 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2639 index: j2677  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2675 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: void
=== Inputs ===
address: v4429 
=== Succesors ===
next: v2680 
=== Usages ===
=== Predecessor ===
v2672 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v4429 #next: v2680  <|@  <|@
f <@~|@floating>@ <|@
tid v4424 <|@
result [v40|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j2677 
index: - 
=== Succesors ===
=== Usages ===
v2680 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2677 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2680 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4424 
value: i321 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2681 
=== Usages ===
=== Predecessor ===
v2675 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4424 value: i321 stateAfter: - lastLocationAccess: - #next: v2681  <|@  <|@
f <@~|@floating>@ <|@
tid v4425 <|@
result [v40|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2677 
index: - 
=== Succesors ===
=== Usages ===
v2681 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2677 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2681 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4425 
value: j2632 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2684 
=== Usages ===
=== Predecessor ===
v2680 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4425 value: j2632 stateAfter: - lastLocationAccess: - #next: v2684  <|@  <|@
f <@~|@floating>@ <|@
tid v4430 <|@
result [v40|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j2677 
index: - 
=== Succesors ===
=== Usages ===
v2684 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2677 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2684 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4430 
value: v3233 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2655 
=== Usages ===
=== Predecessor ===
v2681 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4430 value: v3233 stateAfter: - lastLocationAccess: - #next: v2655  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2655 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2656 
=== Usages ===
=== Predecessor ===
v2684 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a2656  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2656 <|@
result v47|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j2677 
=== Succesors ===
next: v2658 
=== Usages ===
a2661 
=== Predecessor ===
v2655 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j2677 #next: v2658  <|@  <|@
f <@*|@fixed>@ <|@
tid v2658 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2659 
=== Predecessor ===
a2656 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v45|QWORD + v40|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v45|QWORD + v40|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v45|QWORD + v40|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v45|QWORD + v40|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v40|QWORD + 12], y: v30|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v40|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v40|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[.] = MOVE v40|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v47|QWORD[.]] destination: B66 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B68" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569020795190867894
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2643 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2647 
=== Usages ===
=== Predecessor ===
v2645 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2647  <|@  <|@
f <@*|@fixed>@ <|@
tid v2647 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2648 
=== Predecessor ===
v2643 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B65" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569639488730677885
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2648 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2647 v2649 
=== Succesors ===
next: a2657 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2647 v2649 #next: a2657  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2657 <|@
result v48|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?1448 
arguments: v2631 i321 i5 
=== Succesors ===
next: v2660 
=== Usages ===
a2661 
=== Predecessor ===
v2648 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?1448 arguments: v2631 i321 i5 #next: v2660  <|@  <|@
f <@*|@fixed>@ <|@
tid v2660 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2659 
=== Predecessor ===
a2657 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v17|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v30|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.substring(String.java:1969) [bci: 65]
locals: v0|QWORD[.] v20|DWORD - v30|DWORD 
java.lang.String.split(String.java:2353) [bci: 162]
stack: vobject:ArrayList:0{modCount=v21|DWORD,size=v21|DWORD,elementData=v22|QWORD[.]} 
locals: v0|QWORD[.] - int[0|0x0] v11|DWORD - v28|DWORD int[0|0x0] vobject:ArrayList:0{modCount=v21|DWORD,size=v21|DWORD,elementData=v22|QWORD[.]} - - 
vobject:ArrayList:0{modCount=v21|DWORD,size=v21|DWORD,elementData=v22|QWORD[.]} Ljava/util/ArrayList; v21|DWORD v21|DWORD v22|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:65, 162] <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v48|QWORD[.]] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B66" "B68" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584250187239118245
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a2661 <|@
result v49|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v2659 
values: a2656 a2657 
=== Succesors ===
=== Usages ===
v4507 a2331 v4412 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2659 values: a2656 a2657  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2659 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2658 v2660 
=== Succesors ===
next: v3863 
=== Usages ===
a2661 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2658 v2660 #next: v3863  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3863 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v3406 
=== Usages ===
j3864 j3866 
=== Predecessor ===
v2659 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v3406  <|@  <|@
f <@~|@floating>@ <|@
tid v2164 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 4]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:102) [bci: 9]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i355 
y: i321 
=== Succesors ===
=== Usages ===
i2322 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i355 y: i321  <|@  <|@
f <@~|@floating>@ <|@
tid i2322 <|@
result v50|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v2164 
trueValue: i355 
falseValue: i321 
=== Succesors ===
=== Usages ===
j3260 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v2164 trueValue: i355 falseValue: i321  <|@  <|@
f <@~|@floating>@ <|@
tid j3260 <|@
result v51|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i2322 
=== Succesors ===
=== Usages ===
j3921 v4507 j3264 v3403 v3748 j3907 j3912 j3915 j3918 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2322  <|@  <|@
f <@~|@floating>@ <|@
tid v3403 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3260 
y: j2632 
=== Succesors ===
=== Usages ===
v3406 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3260 y: j2632  <|@  <|@
f <@*|@fixed>@ <|@
tid v3406 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v3403 
=== Succesors ===
trueSuccessor: v3404 
falseSuccessor: v3405 
=== Usages ===
=== Predecessor ===
v3863 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3403 #trueSuccessor: v3404 #falseSuccessor: v3405  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v49|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v30|DWORD, y: v23|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = CMOVE (falseValue: v30|DWORD, ~trueValue: v23|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = MOVSXD v50|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v51|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B69 -> B70 falseDestination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B88" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579746587611747749
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3404 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3422 
=== Usages ===
=== Predecessor ===
v3406 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3422  <|@  <|@
f <@*|@fixed>@ <|@
tid v3422 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3423 
=== Predecessor ===
v3404 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B70 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579746587611747749
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3405 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3409 
=== Usages ===
=== Predecessor ===
v3406 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3409  <|@  <|@
f <@~|@floating>@ <|@
tid v4412 <|@
result [v49|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a2661 
index: - 
=== Succesors ===
=== Usages ===
j3866 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2661 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j3866 <|@
result v52|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v3863 
address: v4412 
=== Succesors ===
=== Usages ===
v4524 v4526 v4528 v4530 v4532 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v3863 address: v4412  <|@  <|@
f <@~|@floating>@ <|@
tid j4351 <|@
result v53|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i34 
=== Succesors ===
=== Usages ===
v4411 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i34  <|@  <|@
f <@~|@floating>@ <|@
tid v4411 <|@
result [v15|QWORD[.] + v53|QWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a1636 
index: j4351 
=== Succesors ===
=== Usages ===
j3864 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1636 index: j4351  <|@  <|@
f <@~|@floating>@ <|@
tid j3864 <|@
result v54|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v3863 
address: v4411 
=== Succesors ===
=== Usages ===
v4525 v4527 v4529 v4531 v4533 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v3863 address: v4411  <|@  <|@
f <@~|@floating>@ <|@
tid j3907 <|@
result v55|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483664 - 2147483631]
=== Inputs ===
x: j3260 
y: j3801 
=== Succesors ===
=== Usages ===
v3908 v3910 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3260 y: j3801  <|@  <|@
f <@~|@floating>@ <|@
tid v3908 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3907 
y: j2049 
=== Succesors ===
=== Usages ===
v3409 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3907 y: j2049  <|@  <|@
f <@*|@fixed>@ <|@
tid v3409 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v3908 
=== Succesors ===
trueSuccessor: v3407 
falseSuccessor: v3408 
=== Usages ===
=== Predecessor ===
v3405 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3908 #trueSuccessor: v3407 #falseSuccessor: v3408  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = LEA [v49|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = MOVSXD v20|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = LEA [v15|QWORD[.] + v53|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = LEA [v51|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v55|QWORD, y: v55|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B71 -> B72 falseDestination: B71 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577598346154074172
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3407 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3418 
=== Usages ===
=== Predecessor ===
v3409 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3418  <|@  <|@
f <@*|@fixed>@ <|@
tid v3418 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3419 
=== Predecessor ===
v3407 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B72 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570739388357006757
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3408 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3410 
=== Usages ===
=== Predecessor ===
v3409 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3410  <|@  <|@
f <@*|@fixed>@ <|@
tid v3410 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3411 
=== Predecessor ===
v3408 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" "B176" 
    successors "B75" "B176" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4579746587611747749
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3899 <|@
result v56|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3411 
values: j2049 j3906 
=== Succesors ===
=== Usages ===
v4533 j3906 v4532 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3411 values: j2049 j3906  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3411 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v3410 
=== Succesors ===
next: v4361 
=== Usages ===
v4361 v3414 v3415 j3899 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v3410 #next: v4361  <|@  <|@
f <@~|@floating>@ <|@
tid v4533 <|@
result [v54|QWORD[.] + v56|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3864 
index: j3899 
=== Succesors ===
=== Usages ===
v4361 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3864 index: j3899  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4361 <|@
result v57|V256_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v3411 
address: v4533 
=== Succesors ===
next: v4208 
=== Usages ===
v4208 
=== Predecessor ===
v3411 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v3411 address: v4533 #next: v4208  <|@  <|@
f <@~|@floating>@ <|@
tid v4532 <|@
result [v52|QWORD[.] + v56|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3866 
index: j3899 
=== Succesors ===
=== Usages ===
v4208 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3866 index: j3899  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4208 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4532 
value: v4361 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3417 
=== Usages ===
=== Predecessor ===
v4361 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4532 value: v4361 stateAfter: - lastLocationAccess: - #next: v3417  <|@  <|@
f <@~|@floating>@ <|@
tid j3906 <|@
result v58|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3899 
y: j1626 
=== Succesors ===
=== Usages ===
j3891 j3899 v3910 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3899 y: j1626  <|@  <|@
f <@~|@floating>@ <|@
tid v3910 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3907 
y: j3906 
=== Succesors ===
=== Usages ===
v3417 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3907 y: j3906  <|@  <|@
f <@*|@fixed>@ <|@
tid v3417 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3910 
=== Succesors ===
trueSuccessor: v3414 
falseSuccessor: v3416 
=== Usages ===
=== Predecessor ===
v4208 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3910 #trueSuccessor: v3414 #falseSuccessor: v3416  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v56|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v57|V256_WORD = H [v54|QWORD[.] + v56|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v52|QWORD[.] + v56|QWORD * 2], input: v57|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = LEA [v56|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v58|QWORD, y: v55|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B74 -> B75 falseDestination: B74 -> B176 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570739388357006757
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3414 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v3411 
=== Succesors ===
next: v3420 
=== Usages ===
=== Predecessor ===
v3417 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v3411 #next: v3420  <|@  <|@
f <@*|@fixed>@ <|@
tid v3420 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3419 
=== Predecessor ===
v3414 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v58|QWORD] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B72" "B75" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579746587611747749
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3891 <|@
result v59|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3419 
values: j2049 j3906 
=== Succesors ===
=== Usages ===
v4531 j3898 j3883 v3913 v4530 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3419 values: j2049 j3906  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3419 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3418 v3420 
=== Succesors ===
next: v3441 
=== Usages ===
j3891 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3418 v3420 #next: v3441  <|@  <|@
f <@~|@floating>@ <|@
tid j3912 <|@
result v60|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j3260 
y: j3807 
=== Succesors ===
=== Usages ===
v3913 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3260 y: j3807  <|@  <|@
f <@~|@floating>@ <|@
tid v3913 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3912 
y: j3891 
=== Succesors ===
=== Usages ===
v3441 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3912 y: j3891  <|@  <|@
f <@*|@fixed>@ <|@
tid v3441 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3913 
=== Succesors ===
trueSuccessor: v3440 
falseSuccessor: v3439 
=== Usages ===
=== Predecessor ===
v3419 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3913 #trueSuccessor: v3440 #falseSuccessor: v3439  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v59|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = LEA [v51|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v59|QWORD, y: v60|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570739388357006757
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3440 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3444 
=== Usages ===
=== Predecessor ===
v3441 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3444  <|@  <|@
f <@*|@fixed>@ <|@
tid v3444 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3430 
=== Predecessor ===
v3440 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v59|QWORD] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577598346154074172
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3439 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4362 
=== Usages ===
v4362 
=== Predecessor ===
v3441 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4362  <|@  <|@
f <@~|@floating>@ <|@
tid v4531 <|@
result [v54|QWORD[.] + v59|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3864 
index: j3891 
=== Succesors ===
=== Usages ===
v4362 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3864 index: j3891  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4362 <|@
result v61|V128_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v3439 
address: v4531 
=== Succesors ===
next: v4206 
=== Usages ===
v4206 
=== Predecessor ===
v3439 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v3439 address: v4531 #next: v4206  <|@  <|@
f <@~|@floating>@ <|@
tid v4530 <|@
result [v52|QWORD[.] + v59|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3866 
index: j3891 
=== Succesors ===
=== Usages ===
v4206 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3866 index: j3891  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4206 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4530 
value: v4362 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3429 
=== Usages ===
=== Predecessor ===
v4362 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4530 value: v4362 stateAfter: - lastLocationAccess: - #next: v3429  <|@  <|@
f <@~|@floating>@ <|@
tid j3898 <|@
result v62|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3891 
y: j2577 
=== Succesors ===
=== Usages ===
j3883 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3891 y: j2577  <|@  <|@
f <@*|@fixed>@ <|@
tid v3429 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3430 
=== Predecessor ===
v4206 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v61|V128_WORD = H [v54|QWORD[.] + v59|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v52|QWORD[.] + v59|QWORD * 2], input: v61|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = LEA [v59|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v62|QWORD] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B77" 
    successors "B80" "B81" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579746587611747749
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3883 <|@
result v63|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3430 
values: j3898 j3891 
=== Succesors ===
=== Usages ===
v4529 j3890 j3875 v3916 v4528 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3430 values: j3898 j3891  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3430 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3429 v3444 
=== Succesors ===
next: v3447 
=== Usages ===
j3883 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3429 v3444 #next: v3447  <|@  <|@
f <@~|@floating>@ <|@
tid j3915 <|@
result v64|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j3260 
y: j3811 
=== Succesors ===
=== Usages ===
v3916 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3260 y: j3811  <|@  <|@
f <@~|@floating>@ <|@
tid v3916 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3915 
y: j3883 
=== Succesors ===
=== Usages ===
v3447 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3915 y: j3883  <|@  <|@
f <@*|@fixed>@ <|@
tid v3447 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3916 
=== Succesors ===
trueSuccessor: v3446 
falseSuccessor: v3445 
=== Usages ===
=== Predecessor ===
v3430 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3916 #trueSuccessor: v3446 #falseSuccessor: v3445  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v63|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = LEA [v51|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v63|QWORD, y: v64|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B79 -> B80 falseDestination: B79 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570739388357006757
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3446 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3450 
=== Usages ===
=== Predecessor ===
v3447 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3450  <|@  <|@
f <@*|@fixed>@ <|@
tid v3450 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3433 
=== Predecessor ===
v3446 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v63|QWORD] destination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577598346154074172
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3445 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4363 
=== Usages ===
v4363 
=== Predecessor ===
v3447 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4363  <|@  <|@
f <@~|@floating>@ <|@
tid v4529 <|@
result [v54|QWORD[.] + v63|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3864 
index: j3883 
=== Succesors ===
=== Usages ===
v4363 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3864 index: j3883  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4363 <|@
result v65|V64_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v3445 
address: v4529 
=== Succesors ===
next: v4204 
=== Usages ===
v4204 
=== Predecessor ===
v3445 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v3445 address: v4529 #next: v4204  <|@  <|@
f <@~|@floating>@ <|@
tid v4528 <|@
result [v52|QWORD[.] + v63|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3866 
index: j3883 
=== Succesors ===
=== Usages ===
v4204 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3866 index: j3883  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4204 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4528 
value: v4363 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3432 
=== Usages ===
=== Predecessor ===
v4363 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4528 value: v4363 stateAfter: - lastLocationAccess: - #next: v3432  <|@  <|@
f <@~|@floating>@ <|@
tid j3890 <|@
result v66|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3883 
y: j3783 
=== Succesors ===
=== Usages ===
j3875 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3883 y: j3783  <|@  <|@
f <@*|@fixed>@ <|@
tid v3432 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3433 
=== Predecessor ===
v4204 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v65|V64_WORD = H [v54|QWORD[.] + v63|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v52|QWORD[.] + v63|QWORD * 2], input: v65|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = LEA [v63|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v66|QWORD] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" "B80" 
    successors "B83" "B84" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579746587611747749
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3875 <|@
result v67|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3433 
values: j3890 j3883 
=== Succesors ===
=== Usages ===
v4527 j3882 j3867 v3919 v4526 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3433 values: j3890 j3883  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3433 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3432 v3450 
=== Succesors ===
next: v3453 
=== Usages ===
j3875 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3432 v3450 #next: v3453  <|@  <|@
f <@~|@floating>@ <|@
tid j3918 <|@
result v68|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j3260 
y: j3815 
=== Succesors ===
=== Usages ===
v3919 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3260 y: j3815  <|@  <|@
f <@~|@floating>@ <|@
tid v3919 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3918 
y: j3875 
=== Succesors ===
=== Usages ===
v3453 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3918 y: j3875  <|@  <|@
f <@*|@fixed>@ <|@
tid v3453 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3919 
=== Succesors ===
trueSuccessor: v3452 
falseSuccessor: v3451 
=== Usages ===
=== Predecessor ===
v3433 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3919 #trueSuccessor: v3452 #falseSuccessor: v3451  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v67|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = LEA [v51|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v67|QWORD, y: v68|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B82 -> B83 falseDestination: B82 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570739388357006757
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3452 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3456 
=== Usages ===
=== Predecessor ===
v3453 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3456  <|@  <|@
f <@*|@fixed>@ <|@
tid v3456 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3436 
=== Predecessor ===
v3452 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v67|QWORD] destination: B83 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577598346154074172
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3451 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4364 
=== Usages ===
v4364 
=== Predecessor ===
v3453 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4364  <|@  <|@
f <@~|@floating>@ <|@
tid v4527 <|@
result [v54|QWORD[.] + v67|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3864 
index: j3875 
=== Succesors ===
=== Usages ===
v4364 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3864 index: j3875  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4364 <|@
result v69|V32_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16>
=== Inputs ===
stateBefore: - 
guard: v3451 
address: v4527 
=== Succesors ===
next: v4202 
=== Usages ===
v4202 
=== Predecessor ===
v3451 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v3451 address: v4527 #next: v4202  <|@  <|@
f <@~|@floating>@ <|@
tid v4526 <|@
result [v52|QWORD[.] + v67|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3866 
index: j3875 
=== Succesors ===
=== Usages ===
v4202 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3866 index: j3875  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4202 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4526 
value: v4364 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3435 
=== Usages ===
=== Predecessor ===
v4364 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4526 value: v4364 stateAfter: - lastLocationAccess: - #next: v3435  <|@  <|@
f <@~|@floating>@ <|@
tid j3882 <|@
result v70|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3875 
y: j3761 
=== Succesors ===
=== Usages ===
j3867 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3875 y: j3761  <|@  <|@
f <@*|@fixed>@ <|@
tid v3435 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3436 
=== Predecessor ===
v4202 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v69|V32_WORD = H [v54|QWORD[.] + v67|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction J (address: [v52|QWORD[.] + v67|QWORD * 2], input: v69|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD = LEA [v67|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v70|QWORD] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B83" 
    successors "B86" "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579746587611747749
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3867 <|@
result v71|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3436 
values: j3882 j3875 
=== Succesors ===
=== Usages ===
v4525 v3922 v4524 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3436 values: j3882 j3875  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3436 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3435 v3456 
=== Succesors ===
next: v3459 
=== Usages ===
j3867 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3435 v3456 #next: v3459  <|@  <|@
f <@~|@floating>@ <|@
tid j3921 <|@
result v72|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j3260 
y: j1816 
=== Succesors ===
=== Usages ===
v3922 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3260 y: j1816  <|@  <|@
f <@~|@floating>@ <|@
tid v3922 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3921 
y: j3867 
=== Succesors ===
=== Usages ===
v3459 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3921 y: j3867  <|@  <|@
f <@*|@fixed>@ <|@
tid v3459 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3922 
=== Succesors ===
trueSuccessor: v3458 
falseSuccessor: v3457 
=== Usages ===
=== Predecessor ===
v3436 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3922 #trueSuccessor: v3458 #falseSuccessor: v3457  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v71|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = DEC v51|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v71|QWORD, y: v72|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B85 -> B86 falseDestination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570739388357006757
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3458 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3462 
=== Usages ===
=== Predecessor ===
v3459 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3462  <|@  <|@
f <@*|@fixed>@ <|@
tid v3462 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3423 
=== Predecessor ===
v3458 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B86 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577598346154074172
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3457 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i4365 
=== Usages ===
i4365 
=== Predecessor ===
v3459 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i4365  <|@  <|@
f <@~|@floating>@ <|@
tid v4525 <|@
result [v54|QWORD[.] + v71|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3864 
index: j3867 
=== Succesors ===
=== Usages ===
i4365 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3864 index: j3867  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4365 <|@
result v73|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v3457 
address: v4525 
=== Succesors ===
next: v4200 
=== Usages ===
v4200 
=== Predecessor ===
v3457 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v3457 address: v4525 #next: v4200  <|@  <|@
f <@~|@floating>@ <|@
tid v4524 <|@
result [v52|QWORD[.] + v71|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3866 
index: j3867 
=== Succesors ===
=== Usages ===
v4200 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3866 index: j3867  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4200 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4524 
value: i4365 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3438 
=== Usages ===
=== Predecessor ===
i4365 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4524 value: i4365 stateAfter: - lastLocationAccess: - #next: v3438  <|@  <|@
f <@*|@fixed>@ <|@
tid v3438 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3423 
=== Predecessor ===
v4200 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVSX [v54|QWORD[.] + v71|QWORD * 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v52|QWORD[.] + v71|QWORD * 2], y: v73|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B87 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B70" "B87" "B86" 
    successors "B89" "B107" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584250187239118245
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3423 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3422 v3438 v3462 
=== Succesors ===
next: v3925 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3422 v3438 v3462 #next: v3925  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3925 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v3469 
=== Usages ===
j3927 
=== Predecessor ===
v3423 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v3469  <|@  <|@
f <@~|@floating>@ <|@
tid j3259 <|@
result v74|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i321 
=== Succesors ===
=== Usages ===
j3264 v3748 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i321  <|@  <|@
f <@~|@floating>@ <|@
tid v3748 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3260 
y: j3259 
=== Succesors ===
=== Usages ===
v3469 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3260 y: j3259  <|@  <|@
f <@*|@fixed>@ <|@
tid v3469 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v3748 
=== Succesors ===
trueSuccessor: v3468 
falseSuccessor: v3467 
=== Usages ===
=== Predecessor ===
v3925 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3748 #trueSuccessor: v3468 #falseSuccessor: v3467  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = MOVSXD v30|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v74|QWORD, y: v51|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B88 -> B89 falseDestination: B88 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B90" "B91" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579746587611747749
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3468 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3472 
=== Usages ===
=== Predecessor ===
v3469 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3472  <|@  <|@
f <@~|@floating>@ <|@
tid v4507 <|@
result [v49|QWORD[.] + v51|QWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a2661 
index: j3260 
=== Succesors ===
=== Usages ===
j3927 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2661 index: j3260  <|@  <|@
f <@~|@floating>@ <|@
tid j3927 <|@
result v75|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v3925 
address: v4507 
=== Succesors ===
=== Usages ===
v4534 v4535 v4536 v4537 v4538 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v3925 address: v4507  <|@  <|@
f <@~|@floating>@ <|@
tid j3264 <|@
result v76|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j3259 
y: j3260 
=== Succesors ===
=== Usages ===
j3972 j3958 j3963 j3966 j3969 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j3259 y: j3260  <|@  <|@
f <@~|@floating>@ <|@
tid j3958 <|@
result v77|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967311 - 4294967279]
=== Inputs ===
x: j3264 
y: j3801 
=== Succesors ===
=== Usages ===
v3959 v3961 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3264 y: j3801  <|@  <|@
f <@~|@floating>@ <|@
tid v3959 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3958 
y: j2049 
=== Succesors ===
=== Usages ===
v3472 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3958 y: j2049  <|@  <|@
f <@*|@fixed>@ <|@
tid v3472 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v3959 
=== Succesors ===
trueSuccessor: v3470 
falseSuccessor: v3471 
=== Usages ===
=== Predecessor ===
v3468 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3959 #trueSuccessor: v3470 #falseSuccessor: v3471  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = LEA [v49|QWORD[.] + v51|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v76|QWORD = SUB (x: v74|QWORD, ~y: v51|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v77|QWORD = LEA [v76|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v77|QWORD, y: v77|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B89 -> B90 falseDestination: B89 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B94" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577598346154074172
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3470 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3481 
=== Usages ===
=== Predecessor ===
v3472 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3481  <|@  <|@
f <@*|@fixed>@ <|@
tid v3481 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3482 
=== Predecessor ===
v3470 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B90 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B92" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570739388357006757
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3471 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3473 
=== Usages ===
=== Predecessor ===
v3472 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3473  <|@  <|@
f <@~|@floating>@ <|@
tid v4247 <|@
result v78|V256_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v4218 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v3473 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3474 
=== Predecessor ===
v3471 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v78|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B91 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" "B106" 
    successors "B93" "B106" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 2
    probability 4579746587611747749
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3952 <|@
result v79|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3474 
values: j2049 j3957 
=== Succesors ===
=== Usages ===
v4538 j3957 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3474 values: j2049 j3957  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3474 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v3473 
=== Succesors ===
next: v4218 
=== Usages ===
j3952 v3477 v3478 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v3473 #next: v4218  <|@  <|@
f <@~|@floating>@ <|@
tid v4538 <|@
result [v75|QWORD[.] + v79|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3927 
index: j3952 
=== Succesors ===
=== Usages ===
v4218 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3927 index: j3952  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4218 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4538 
value: v4247 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3480 
=== Usages ===
=== Predecessor ===
v3474 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4538 value: v4247 stateAfter: - lastLocationAccess: - #next: v3480  <|@  <|@
f <@~|@floating>@ <|@
tid j3957 <|@
result v80|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3952 
y: j1626 
=== Succesors ===
=== Usages ===
j3946 j3952 v3961 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3952 y: j1626  <|@  <|@
f <@~|@floating>@ <|@
tid v3961 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3958 
y: j3957 
=== Succesors ===
=== Usages ===
v3480 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3958 y: j3957  <|@  <|@
f <@*|@fixed>@ <|@
tid v3480 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3961 
=== Succesors ===
trueSuccessor: v3477 
falseSuccessor: v3479 
=== Usages ===
=== Predecessor ===
v4218 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3961 #trueSuccessor: v3477 #falseSuccessor: v3479  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v79|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v75|QWORD[.] + v79|QWORD * 2], input: v78|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v80|QWORD = LEA [v79|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v80|QWORD, y: v77|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B92 -> B93 falseDestination: B92 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B94" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570739388357006757
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3477 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v3474 
=== Succesors ===
next: v3483 
=== Usages ===
=== Predecessor ===
v3480 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v3474 #next: v3483  <|@  <|@
f <@*|@fixed>@ <|@
tid v3483 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3482 
=== Predecessor ===
v3477 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v80|QWORD] destination: B93 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B90" "B93" 
    successors "B95" "B96" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579746587611747749
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3946 <|@
result v81|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3482 
values: j2049 j3957 
=== Succesors ===
=== Usages ===
v4537 j3951 j3940 v3964 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3482 values: j2049 j3957  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3482 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3481 v3483 
=== Succesors ===
next: v3504 
=== Usages ===
j3946 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3481 v3483 #next: v3504  <|@  <|@
f <@~|@floating>@ <|@
tid j3963 <|@
result v82|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967303 - 4294967287]
=== Inputs ===
x: j3264 
y: j3807 
=== Succesors ===
=== Usages ===
v3964 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3264 y: j3807  <|@  <|@
f <@~|@floating>@ <|@
tid v3964 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3963 
y: j3946 
=== Succesors ===
=== Usages ===
v3504 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3963 y: j3946  <|@  <|@
f <@*|@fixed>@ <|@
tid v3504 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3964 
=== Succesors ===
trueSuccessor: v3503 
falseSuccessor: v3502 
=== Usages ===
=== Predecessor ===
v3482 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3964 #trueSuccessor: v3503 #falseSuccessor: v3502  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v81|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = LEA [v76|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v81|QWORD, y: v82|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B94 -> B95 falseDestination: B94 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570739388357006757
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3503 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3507 
=== Usages ===
=== Predecessor ===
v3504 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3507  <|@  <|@
f <@*|@fixed>@ <|@
tid v3507 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3493 
=== Predecessor ===
v3503 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v81|QWORD] destination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577598346154074172
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3502 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4217 
=== Usages ===
=== Predecessor ===
v3504 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4217  <|@  <|@
f <@~|@floating>@ <|@
tid v4537 <|@
result [v75|QWORD[.] + v81|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3927 
index: j3946 
=== Succesors ===
=== Usages ===
v4217 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3927 index: j3946  <|@  <|@
f <@~|@floating>@ <|@
tid v4251 <|@
result v83|V128_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v4217 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4217 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4537 
value: v4251 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3492 
=== Usages ===
=== Predecessor ===
v3502 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4537 value: v4251 stateAfter: - lastLocationAccess: - #next: v3492  <|@  <|@
f <@~|@floating>@ <|@
tid j3951 <|@
result v84|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3946 
y: j2577 
=== Succesors ===
=== Usages ===
j3940 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3946 y: j2577  <|@  <|@
f <@*|@fixed>@ <|@
tid v3492 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3493 
=== Predecessor ===
v4217 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v83|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v75|QWORD[.] + v81|QWORD * 2], input: v83|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v84|QWORD = LEA [v81|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v84|QWORD] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" "B95" 
    successors "B98" "B99" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579746587611747749
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3940 <|@
result v85|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3493 
values: j3951 j3946 
=== Succesors ===
=== Usages ===
v4536 j3945 j3934 v3967 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3493 values: j3951 j3946  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3493 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3492 v3507 
=== Succesors ===
next: v3510 
=== Usages ===
j3940 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3492 v3507 #next: v3510  <|@  <|@
f <@~|@floating>@ <|@
tid j3966 <|@
result v86|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967299 - 4294967291]
=== Inputs ===
x: j3264 
y: j3811 
=== Succesors ===
=== Usages ===
v3967 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3264 y: j3811  <|@  <|@
f <@~|@floating>@ <|@
tid v3967 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3966 
y: j3940 
=== Succesors ===
=== Usages ===
v3510 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3966 y: j3940  <|@  <|@
f <@*|@fixed>@ <|@
tid v3510 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3967 
=== Succesors ===
trueSuccessor: v3509 
falseSuccessor: v3508 
=== Usages ===
=== Predecessor ===
v3493 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3967 #trueSuccessor: v3509 #falseSuccessor: v3508  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v85|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v86|QWORD = LEA [v76|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v85|QWORD, y: v86|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B97 -> B98 falseDestination: B97 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B100" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570739388357006757
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3509 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3513 
=== Usages ===
=== Predecessor ===
v3510 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3513  <|@  <|@
f <@*|@fixed>@ <|@
tid v3513 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3496 
=== Predecessor ===
v3509 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v85|QWORD] destination: B98 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B100" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577598346154074172
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3508 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4215 
=== Usages ===
=== Predecessor ===
v3510 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4215  <|@  <|@
f <@~|@floating>@ <|@
tid v4536 <|@
result [v75|QWORD[.] + v85|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3927 
index: j3940 
=== Succesors ===
=== Usages ===
v4215 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3927 index: j3940  <|@  <|@
f <@~|@floating>@ <|@
tid v4250 <|@
result v87|V64_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16>
value: SIMD<0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v4215 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4215 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4536 
value: v4250 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3495 
=== Usages ===
=== Predecessor ===
v3508 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4536 value: v4250 stateAfter: - lastLocationAccess: - #next: v3495  <|@  <|@
f <@~|@floating>@ <|@
tid j3945 <|@
result v88|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3940 
y: j3783 
=== Succesors ===
=== Usages ===
j3934 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3940 y: j3783  <|@  <|@
f <@*|@fixed>@ <|@
tid v3495 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3496 
=== Predecessor ===
v4215 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v87|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v75|QWORD[.] + v85|QWORD * 2], input: v87|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v88|QWORD = LEA [v85|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v88|QWORD] destination: B99 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" "B98" 
    successors "B101" "B102" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579746587611747749
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3934 <|@
result v89|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3496 
values: j3945 j3940 
=== Succesors ===
=== Usages ===
v4535 j3939 j3928 v3970 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3496 values: j3945 j3940  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3496 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3495 v3513 
=== Succesors ===
next: v3516 
=== Usages ===
j3934 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3495 v3513 #next: v3516  <|@  <|@
f <@~|@floating>@ <|@
tid j3969 <|@
result v90|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j3264 
y: j3815 
=== Succesors ===
=== Usages ===
v3970 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3264 y: j3815  <|@  <|@
f <@~|@floating>@ <|@
tid v3970 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3969 
y: j3934 
=== Succesors ===
=== Usages ===
v3516 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3969 y: j3934  <|@  <|@
f <@*|@fixed>@ <|@
tid v3516 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3970 
=== Succesors ===
trueSuccessor: v3515 
falseSuccessor: v3514 
=== Usages ===
=== Predecessor ===
v3496 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3970 #trueSuccessor: v3515 #falseSuccessor: v3514  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v89|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v90|QWORD = LEA [v76|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v89|QWORD, y: v90|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B100 -> B101 falseDestination: B100 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B103" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570739388357006757
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3515 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3519 
=== Usages ===
=== Predecessor ===
v3516 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3519  <|@  <|@
f <@*|@fixed>@ <|@
tid v3519 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3499 
=== Predecessor ===
v3515 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v89|QWORD] destination: B101 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B103" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577598346154074172
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3514 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4213 
=== Usages ===
=== Predecessor ===
v3516 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4213  <|@  <|@
f <@~|@floating>@ <|@
tid v4535 <|@
result [v75|QWORD[.] + v89|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3927 
index: j3934 
=== Succesors ===
=== Usages ===
v4213 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3927 index: j3934  <|@  <|@
f <@~|@floating>@ <|@
tid v4249 <|@
result v91|V32_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16>
value: SIMD<0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v4213 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4213 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4535 
value: v4249 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3498 
=== Usages ===
=== Predecessor ===
v3514 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4535 value: v4249 stateAfter: - lastLocationAccess: - #next: v3498  <|@  <|@
f <@~|@floating>@ <|@
tid j3939 <|@
result v92|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3934 
y: j3761 
=== Succesors ===
=== Usages ===
j3928 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3934 y: j3761  <|@  <|@
f <@*|@fixed>@ <|@
tid v3498 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3499 
=== Predecessor ===
v4213 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v91|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v75|QWORD[.] + v89|QWORD * 2], input: v91|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v92|QWORD = LEA [v89|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v92|QWORD] destination: B102 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B102" "B101" 
    successors "B104" "B105" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579746587611747749
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3928 <|@
result v93|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3499 
values: j3939 j3934 
=== Succesors ===
=== Usages ===
v4534 v3973 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3499 values: j3939 j3934  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3499 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3498 v3519 
=== Succesors ===
next: v3522 
=== Usages ===
j3928 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3498 v3519 #next: v3522  <|@  <|@
f <@~|@floating>@ <|@
tid j3972 <|@
result v94|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j3264 
y: j1816 
=== Succesors ===
=== Usages ===
v3973 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3264 y: j1816  <|@  <|@
f <@~|@floating>@ <|@
tid v3973 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3972 
y: j3928 
=== Succesors ===
=== Usages ===
v3522 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3972 y: j3928  <|@  <|@
f <@*|@fixed>@ <|@
tid v3522 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3973 
=== Succesors ===
trueSuccessor: v3521 
falseSuccessor: v3520 
=== Usages ===
=== Predecessor ===
v3499 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3973 #trueSuccessor: v3521 #falseSuccessor: v3520  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v93|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v94|QWORD = DEC v76|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v93|QWORD, y: v94|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B103 -> B104 falseDestination: B103 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B108" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570739388357006757
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3521 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3525 
=== Usages ===
=== Predecessor ===
v3522 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3525  <|@  <|@
f <@*|@fixed>@ <|@
tid v3525 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3486 
=== Predecessor ===
v3521 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B104 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B108" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577598346154074172
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3520 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4211 
=== Usages ===
=== Predecessor ===
v3522 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4211  <|@  <|@
f <@~|@floating>@ <|@
tid v4534 <|@
result [v75|QWORD[.] + v93|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3927 
index: j3928 
=== Succesors ===
=== Usages ===
v4211 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3927 index: j3928  <|@  <|@
f <@~|@floating>@ <|@
tid i4248 <|@
result short[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i16 [0] ⇈0000000000000000
stampKind: i16
value: short[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v4211 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4211 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4534 
value: i4248 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3501 
=== Usages ===
=== Predecessor ===
v3520 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4534 value: i4248 stateAfter: - lastLocationAccess: - #next: v3501  <|@  <|@
f <@*|@fixed>@ <|@
tid v3501 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3486 
=== Predecessor ===
v4211 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v75|QWORD[.] + v93|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B105 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B92" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 2
    probability 4577598346154074172
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3479 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3478 
=== Usages ===
=== Predecessor ===
v3480 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3478  <|@  <|@
f <@*|@fixed>@ <|@
tid v3478 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v3474 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v3479 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v3474  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v80|QWORD] destination: B106 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B108" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579746587611747749
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3467 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3485 
=== Usages ===
=== Predecessor ===
v3469 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3485  <|@  <|@
f <@*|@fixed>@ <|@
tid v3485 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3486 
=== Predecessor ===
v3467 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B107 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B107" "B105" "B104" 
    successors "B109" "B110" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584250187239118245
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3486 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3485 v3501 v3525 
=== Succesors ===
next: a2331 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3485 v3501 v3525 #next: a2331  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2331 <|@
result v49|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a2661 
=== Succesors ===
next: j2692 
=== Usages ===
a2064 
=== Predecessor ===
v3486 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a2661 #next: j2692  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2692 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j2707 
=== Usages ===
v4431 v4432 
=== Predecessor ===
a2331 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j2707  <|@  <|@
f <@~|@floating>@ <|@
tid v4431 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j2692 
index: - 
=== Succesors ===
=== Usages ===
j2707 v2709 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2692 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2707 <|@
result v95|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v4431 
=== Succesors ===
next: j2708 
=== Usages ===
j3234 j2713 v4497 
=== Predecessor ===
j2692 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4431 #next: j2708  <|@  <|@
f <@~|@floating>@ <|@
tid v4432 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j2692 
index: - 
=== Succesors ===
=== Usages ===
j2708 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2692 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2708 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v4432 
=== Succesors ===
next: v2700 
=== Usages ===
v2697 
=== Predecessor ===
j2707 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4432 #next: v2700  <|@  <|@
f <@~|@floating>@ <|@
tid j3234 <|@
result v96|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2707 
y: j3225 
=== Succesors ===
=== Usages ===
v2697 v2709 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2707 y: j3225  <|@  <|@
f <@~|@floating>@ <|@
tid v2697 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2708 
y: j3234 
=== Succesors ===
=== Usages ===
v2700 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j2708 y: j3234  <|@  <|@
f <@*|@fixed>@ <|@
tid v2700 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v2697 
=== Succesors ===
trueSuccessor: v2698 
falseSuccessor: v2699 
=== Usages ===
=== Predecessor ===
j2708 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2697 #trueSuccessor: v2698 #falseSuccessor: v2699  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v96|QWORD = LEA [v95|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v96|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B108 -> B109 falseDestination: B108 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4554135121775845323
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2698 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a2703 
=== Usages ===
=== Predecessor ===
v2700 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2703  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2703 <|@
result v97|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?1448 
arguments: v2582 i1663 i8 
=== Succesors ===
next: j2704 
=== Usages ===
j2704 
=== Predecessor ===
v2698 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?1448 arguments: v2582 i1663 i8 #next: j2704  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2704 <|@
result v97|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a2703 
=== Succesors ===
next: v2714 
=== Usages ===
j2713 
=== Predecessor ===
a2703 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a2703 #next: v2714  <|@  <|@
f <@*|@fixed>@ <|@
tid v2714 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2711 
=== Predecessor ===
j2704 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v18|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.substring(String.java:1969) [bci: 65]
locals: v0|QWORD[.] v20|DWORD - v30|DWORD 
java.lang.String.split(String.java:2353) [bci: 162]
stack: vobject:ArrayList:0{modCount=v21|DWORD,size=v21|DWORD,elementData=v22|QWORD[.]} 
locals: v0|QWORD[.] - int[0|0x0] v11|DWORD - v28|DWORD int[0|0x0] vobject:ArrayList:0{modCount=v21|DWORD,size=v21|DWORD,elementData=v22|QWORD[.]} - - 
vobject:ArrayList:0{modCount=v21|DWORD,size=v21|DWORD,elementData=v22|QWORD[.]} Ljava/util/ArrayList; v21|DWORD v21|DWORD v22|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:65, 162] <|@ <|@
      nr   -1  <|@ instruction v97|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v97|QWORD[.]] destination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584164257580811302
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2699 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2709 
=== Usages ===
=== Predecessor ===
v2700 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2709  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2709 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4431 
value: j3234 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2706 
=== Usages ===
=== Predecessor ===
v2699 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4431 value: j3234 stateAfter: - lastLocationAccess: - #next: v2706  <|@  <|@
f <@~|@floating>@ <|@
tid v4497 <|@
result [v95|QWORD + 216] <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j2707 
index: - 
=== Succesors ===
=== Usages ===
v2706 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2707 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2706 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v4497 
=== Succesors ===
next: v2712 
=== Usages ===
=== Predecessor ===
v2709 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v4497 #next: v2712  <|@  <|@
f <@*|@fixed>@ <|@
tid v2712 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2711 
=== Predecessor ===
v2706 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v96|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v95|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v95|QWORD] destination: B110 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" "B109" 
    successors "B112" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584250187239118245
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2713 <|@
result v98|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2711 
values: j2707 j2704 
=== Succesors ===
=== Usages ===
v4434 v4433 a2061 v4498 v4499 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2711 values: j2707 j2704  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2711 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2712 v2714 
=== Succesors ===
next: a2061 
=== Usages ===
j2713 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2712 v2714 #next: a2061  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2061 <|@
result v99|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j2713 
=== Succesors ===
next: j2723 
=== Usages ===
a2067 
=== Predecessor ===
v2711 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j2713 #next: j2723  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2723 <|@
result v100|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v4478 
=== Succesors ===
next: v2724 
=== Usages ===
v2724 
=== Predecessor ===
a2061 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4478 #next: v2724  <|@  <|@
f <@~|@floating>@ <|@
tid v4433 <|@
result [v98|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2713 
index: - 
=== Succesors ===
=== Usages ===
v2724 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2713 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2724 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4433 
value: j2723 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2727 
=== Usages ===
=== Predecessor ===
j2723 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4433 value: j2723 stateAfter: - lastLocationAccess: - #next: v2727  <|@  <|@
f <@~|@floating>@ <|@
tid v4434 <|@
result [v98|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j2713 
index: - 
=== Succesors ===
=== Usages ===
v2727 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2713 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2727 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4434 
value: v3230 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2731 
=== Usages ===
=== Predecessor ===
v2724 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4434 value: v3230 stateAfter: - lastLocationAccess: - #next: v2731  <|@  <|@
f <@~|@floating>@ <|@
tid v4498 <|@
result [v98|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j2713 
index: - 
=== Succesors ===
=== Usages ===
v2731 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2713 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a2064 <|@
result v101|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n! -
=== Inputs ===
value: a2331 
=== Succesors ===
=== Usages ===
v2731 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2331  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2731 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4498 
value: a2064 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2733 
=== Usages ===
=== Predecessor ===
v2727 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4498 value: a2064 stateAfter: - lastLocationAccess: - #next: v2733  <|@  <|@
f <@~|@floating>@ <|@
tid v4499 <|@
result [v98|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j2713 
index: - 
=== Succesors ===
=== Usages ===
v2733 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2713 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2733 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4499 
value: i5 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a2067 
=== Usages ===
=== Predecessor ===
v2731 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4499 value: i5 stateAfter: - lastLocationAccess: - #next: a2067  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2067 <|@
result v99|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a2061 
=== Succesors ===
next: v2068 
=== Usages ===
a348 
=== Predecessor ===
v2733 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a2061 #next: v2068  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2068 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v501 
=== Usages ===
=== Predecessor ===
a2067 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v501  <|@  <|@
f <@*|@fixed>@ <|@
tid v501 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v346 
=== Predecessor ===
v2068 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v98|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v99|QWORD[.] = MOVE v98|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v100|QWORD = MOV [v10|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v98|QWORD[*]], y: v100|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v98|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v101|DWORD[.] = COMPRESSPOINTER (input: v49|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@120cc8dc encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v98|QWORD[*] + 12], y: v101|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v98|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v99|QWORD[.]] destination: B111 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B45" "B56" "B111" 
    successors "B113" "B116" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584978709959144030
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a348 <|@
result v102|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a!# Ljava/lang/String;
valueDescription: a -
=== Inputs ===
merge: v346 
values: a1 a2057 a2067 
=== Succesors ===
=== Usages ===
?1482 ?143 ?175 a1667 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v346 values: a1 a2057 a2067  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v346 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v347 v349 v501 
=== Succesors ===
next: v192 
=== Usages ===
a348 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v347 v349 v501 #next: v192  <|@  <|@
f <@~|@floating>@ <|@
tid i4345 <|@
result v103|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:235) [bci: 6]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: i32
=== Inputs ===
x: i503 
y: i8 
=== Succesors ===
=== Usages ===
?1484 i503 ?1484 ?517 ?517 i503 i204 v195 i204 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i503 y: i8  <|@  <|@
f <@~|@floating>@ <|@
tid v4346 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.ArrayList.calculateCapacity(ArrayList.java:224) [bci: 4]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a505 
y: a127 
=== Succesors ===
=== Usages ===
v192 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a505 y: a127  <|@  <|@
f <@*|@fixed>@ <|@
tid v192 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.calculateCapacity(ArrayList.java:224) [bci: 4]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: void
trueSuccessorProbability: 0.2066504369952622
=== Inputs ===
condition: v4346 
=== Succesors ===
trueSuccessor: v190 
falseSuccessor: v191 
=== Usages ===
=== Predecessor ===
v346 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4346 #trueSuccessor: v190 #falseSuccessor: v191  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v102|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v103|DWORD = INC v21|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v19|QWORD[.], y: v22|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.2066504369952622 condition: = trueDestination: B112 -> B113 falseDestination: B112 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B114" "B115" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4574614972964921566
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.calculateCapacity(ArrayList.java:225) [bci: 7]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: void
=== Inputs ===
=== Succesors ===
next: v198 
=== Usages ===
=== Predecessor ===
v192 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v198  <|@  <|@
f <@~|@floating>@ <|@
tid v195 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at java.util.ArrayList.calculateCapacity(ArrayList.java:225) [bci: 10]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4345 
y: i194 
=== Succesors ===
=== Usages ===
v198 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i4345 y: i194  <|@  <|@
f <@*|@fixed>@ <|@
tid v198 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at java.util.ArrayList.calculateCapacity(ArrayList.java:225) [bci: 10]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: void
trueSuccessorProbability: 0.7308950256495741
=== Inputs ===
condition: v195 
=== Succesors ===
trueSuccessor: v196 
falseSuccessor: v197 
=== Usages ===
=== Predecessor ===
v190 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v195 #trueSuccessor: v196 #falseSuccessor: v197  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v103|DWORD y: 11 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7308950256495741 condition: < trueDestination: B113 -> B114 falseDestination: B113 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B117" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572471565081160793
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v196 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 5]
at java.util.ArrayList.calculateCapacity(ArrayList.java:225) [bci: 10]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: void
=== Inputs ===
=== Succesors ===
next: v205 
=== Usages ===
=== Predecessor ===
v198 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v205  <|@  <|@
f <@*|@fixed>@ <|@
tid v205 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v202 
=== Predecessor ===
v196 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[10|0xa]] destination: B114 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B117" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566216454433985046
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 9]
at java.util.ArrayList.calculateCapacity(ArrayList.java:225) [bci: 10]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: void
=== Inputs ===
=== Succesors ===
next: v206 
=== Usages ===
=== Predecessor ===
v198 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v206  <|@  <|@
f <@*|@fixed>@ <|@
tid v206 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v202 
=== Predecessor ===
v197 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v103|DWORD] destination: B115 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B117" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583301761552313477
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v191 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.calculateCapacity(ArrayList.java:227) [bci: 14]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: void
=== Inputs ===
=== Succesors ===
next: v203 
=== Usages ===
=== Predecessor ===
v192 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v203  <|@  <|@
f <@*|@fixed>@ <|@
tid v203 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v202 
=== Predecessor ===
v191 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v103|DWORD] destination: B116 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" "B114" "B115" 
    successors "B118" "B123" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584978709959144031
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i204 <|@
result v104|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v202 
values: i4345 i193 i4345 
=== Succesors ===
=== Usages ===
?170 i419 i1780 i213 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v202 values: i4345 i193 i4345  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v202 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v203 v205 v206 
=== Succesors ===
next: i4366 
=== Usages ===
i204 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v203 v205 v206 #next: i4366  <|@  <|@
f <@~|@floating>@ <|@
tid v4398 <|@
result [v22|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a505 
index: - 
=== Succesors ===
=== Usages ===
i4366 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a505 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4366 <|@
result v105|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:238) [bci: 15]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v4398 
=== Succesors ===
next: v4367 
=== Usages ===
i213 i4336 v2206 i2323 i4335 v4337 
=== Predecessor ===
v202 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4398 #next: v4367  <|@  <|@
f <@~|@floating>@ <|@
tid v4565 <|@
result [v22|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a505 
index: - 
=== Succesors ===
=== Usages ===
v4367 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a505 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4367 <|@
result v106|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.ClassGetHubNode.readClass(Class) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.getComponentType(HotSpotClassSubstitutions.java:120) [bci: 1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 6]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v4565 
=== Succesors ===
next: v217 
=== Usages ===
v2797 v4334 v4338 
=== Predecessor ===
i4366 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4565 #next: v217  <|@  <|@
f <@~|@floating>@ <|@
tid i213 <|@
result v107|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:238) [bci: 16]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: i32
=== Inputs ===
x: i204 
y: i4366 
=== Succesors ===
=== Usages ===
v214 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i204 y: i4366  <|@  <|@
f <@~|@floating>@ <|@
tid v214 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:238) [bci: 17]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i213 
y: i8 
=== Succesors ===
=== Usages ===
v217 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i213 y: i8  <|@  <|@
tid ?145 <|@
d <@d|@=== Debug Properties ===
bci: 165
code: ResolvedJavaMethodBytecode<String.split(String, int)>
duringCall: true
localsSize: 10
locksSize: 0
rethrowException: false
sourceFile: String.java
sourceLine: 2353
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - i5 i1630 - i291 i5 a244 - - 
=== Succesors ===
=== Usages ===
?175 ?143 ?1482 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - i5 i1630 - i291 i5 a244 - -  <|@  <|@
tid ?175 <|@
d <@d|@=== Debug Properties ===
bci: 7
code: ResolvedJavaMethodBytecode<ArrayList.add(Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ArrayList.java
sourceLine: 462
stackSize: 0
=== Inputs ===
outerFrameState: ?145 
values: a244 a348 
=== Succesors ===
=== Usages ===
?170 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?145 values: a244 a348  <|@  <|@
tid ?170 <|@
d <@d|@=== Debug Properties ===
bci: 9
code: ResolvedJavaMethodBytecode<ArrayList.ensureCapacityInternal(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
rethrowException: false
sourceFile: ArrayList.java
sourceLine: 231
stackSize: 2
=== Inputs ===
outerFrameState: ?175 
values: - - a244 i204 
virtualObjectMappings: ?521 
=== Succesors ===
=== Usages ===
a2772 v2470 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?175 values: - - a244 i204 virtualObjectMappings: ?521  <|@  <|@
f <@~|@floating>@ <|@
tid a1667 <|@
result v108|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:463) [bci: 26]
at java.lang.String.split(String.java:2353) [bci: 165]
op: Compress
stamp: n!# Ljava/lang/String;
=== Inputs ===
value: a348 
=== Succesors ===
=== Usages ===
v1668 v1679 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a348  <|@  <|@
f <@~|@floating>@ <|@
tid i1411 <|@
result v109|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.String.split(String.java:2354) [bci: 172]
stamp: i32
=== Inputs ===
x: i291 
y: i8 
=== Succesors ===
=== Usages ===
i34 i34 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i291 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:238) [bci: 17]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: void
trueSuccessorProbability: 0.7754412955005789
=== Inputs ===
condition: v214 
=== Succesors ===
trueSuccessor: v215 
falseSuccessor: v216 
=== Usages ===
=== Predecessor ===
v4367 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v214 #trueSuccessor: v215 #falseSuccessor: v216  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v104|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = MOV [v22|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = MOV [v22|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v107|DWORD = SUB (x: v104|DWORD, ~y: v105|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v108|DWORD[.] = COMPRESSPOINTER (input: v102|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@120cc8dc encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v109|DWORD = INC v28|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v107|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7754412955005789 condition: < trueDestination: B117 -> B118 falseDestination: B117 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors "B119" "B122" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583129201465024141
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v215 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:240) [bci: 25]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1939 
=== Usages ===
=== Predecessor ===
v217 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1939  <|@  <|@
f <@~|@floating>@ <|@
tid v4338 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v4367 
y: v3223 
=== Succesors ===
=== Usages ===
v1939 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v4367 y: v3223  <|@  <|@
f <@*|@fixed>@ <|@
tid v1939 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v4338 
=== Succesors ===
trueSuccessor: v1935 
falseSuccessor: v1938 
=== Usages ===
=== Predecessor ===
v215 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4338 #trueSuccessor: v1935 #falseSuccessor: v1938  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v106|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B118 -> B119 falseDestination: B118 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B120" "B121" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583129201465024141
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1935 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1944 
=== Usages ===
=== Predecessor ===
v1939 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1944  <|@  <|@
f <@~|@floating>@ <|@
tid v4337 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:463) [bci: 26]
at java.lang.String.split(String.java:2368) [bci: 246]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i503 
y: i4366 
=== Succesors ===
=== Usages ===
v1944 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i503 y: i4366  <|@  <|@
f <@*|@fixed>@ <|@
tid v1944 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:463) [bci: 26]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v4337 
=== Succesors ===
trueSuccessor: v1940 
falseSuccessor: v1943 
=== Usages ===
=== Predecessor ===
v1935 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4337 #trueSuccessor: v1940 #falseSuccessor: v1943  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v105|DWORD, y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B119 -> B120 falseDestination: B119 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4583129201465024141
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1940 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:463) [bci: 26]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1668 
=== Usages ===
v1668 
=== Predecessor ===
v1944 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1668  <|@  <|@
f <@~|@floating>@ <|@
tid v4399 <|@
result [v22|QWORD[.] + v21|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a505 
index: i503 
=== Succesors ===
=== Usages ===
v1668 j2734 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a505 index: i503  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1668 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:463) [bci: 26]
at java.lang.String.split(String.java:2353) [bci: 165]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1940 
address: v4399 
value: a1667 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j2734 
=== Usages ===
=== Predecessor ===
v1940 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1940 address: v4399 value: a1667 stateAfter: - lastLocationAccess: - #next: j2734  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2734 <|@
result [v22|QWORD[.] + v21|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at java.util.ArrayList.add(ArrayList.java:463) [bci: 26]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v4399 
=== Succesors ===
next: v2740 
=== Usages ===
j2736 
=== Predecessor ===
v1668 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v4399 #next: v2740  <|@  <|@
f <@~|@floating>@ <|@
tid j2736 <|@
result v110|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.ArrayList.add(ArrayList.java:463) [bci: 26]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j2734 
y: i2735 
=== Succesors ===
=== Usages ===
v4435 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j2734 y: i2735  <|@  <|@
f <@~|@floating>@ <|@
tid v4435 <|@
result [v110|QWORD[*] + v16|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2736 
index: j2739 
=== Succesors ===
=== Usages ===
v2740 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2736 index: j2739  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2740 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.ArrayList.add(ArrayList.java:463) [bci: 26]
at java.lang.String.split(String.java:2353) [bci: 165]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4435 
value: i2741 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1808 
=== Usages ===
=== Predecessor ===
j2734 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4435 value: i2741 stateAfter: - lastLocationAccess: - #next: v1808  <|@  <|@
tid ?1484 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a244 
values: i4345 i4345 a505 
=== Succesors ===
=== Usages ===
?1482 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a244 values: i4345 i4345 a505  <|@  <|@
tid ?1482 <|@
d <@d|@=== Debug Properties ===
bci: 27
code: ResolvedJavaMethodBytecode<ArrayList.add(Object)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:463) [bci: 26]
at java.lang.String.split(String.java:2353) [bci: 165]
rethrowException: false
sourceFile: ArrayList.java
sourceLine: 464
stackSize: 0
=== Inputs ===
outerFrameState: ?145 
values: a244 a348 
virtualObjectMappings: ?1484 
=== Succesors ===
=== Usages ===
v1808 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?145 values: a244 a348 virtualObjectMappings: ?1484  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1808 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?1482 
=== Succesors ===
next: v1485 
=== Usages ===
=== Predecessor ===
v2740 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?1482 #next: v1485  <|@  <|@
f <@*|@fixed>@ <|@
tid v1485 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 1
stamp: void
=== Inputs ===
loopBegin: v33 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1808 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v33  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v22|QWORD[.] + v21|DWORD * 4 + 16], y: v108|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v111|QWORD[.] = LEA [v22|QWORD[.] + v21|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v110|QWORD[*] = SHR v111|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v110|QWORD[*] + v16|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.add(ArrayList.java:464) [bci: 27]
locals: vobject:ArrayList:0{modCount=v103|DWORD,size=v103|DWORD,elementData=v22|QWORD[.]} v102|QWORD[.] 
java.lang.String.split(String.java:2353) [bci: 165]
locals: v0|QWORD[.] - int[0|0x0] v11|DWORD - v28|DWORD int[0|0x0] vobject:ArrayList:0{modCount=v103|DWORD,size=v103|DWORD,elementData=v22|QWORD[.]} - - 
vobject:ArrayList:0{modCount=v103|DWORD,size=v103|DWORD,elementData=v22|QWORD[.]} Ljava/util/ArrayList; v103|DWORD v103|DWORD v22|QWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:27, 165] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v109|DWORD, v103|DWORD, v22|QWORD[.]] destination: B120 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B175" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1943 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:463) [bci: 26]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v33 
=== Succesors ===
next: v2471 
=== Usages ===
=== Predecessor ===
v1944 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v33 #next: v2471  <|@  <|@
f <@~|@floating>@ <|@
tid i2472 <|@
result int[-424987|0xfffffffffff983e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -424987
stableDimension: 0
stamp: i32 [-424987] ⇊00000000fff983e5 ⇈00000000fff983e5
stampKind: i32
value: int[-424987|0xfffffffffff983e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2468 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2471 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2464 
=== Predecessor ===
v1943 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-424987|0xfffffffffff983e5], Object[null]] destination: B121 -> B175 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B175" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1938 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v33 
=== Succesors ===
next: v2465 
=== Usages ===
=== Predecessor ===
v1939 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v33 #next: v2465  <|@  <|@
f <@~|@floating>@ <|@
tid i2466 <|@
result int[-424252|0xfffffffffff986c4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -424252
stableDimension: 0
stamp: i32 [-424252] ⇊00000000fff986c4 ⇈00000000fff986c4
stampKind: i32
value: int[-424252|0xfffffffffff986c4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2468 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2465 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2464 
=== Predecessor ===
v1938 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-424252|0xfffffffffff986c4], v6|QWORD[.]] destination: B122 -> B175 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors "B124" "B174" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4575305213314078916
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v216 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 20]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1949 
=== Usages ===
=== Predecessor ===
v217 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1949  <|@  <|@
f <@~|@floating>@ <|@
tid i4336 <|@
result v112|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:259) [bci: 9]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: i32 [0 - 1073741823] ⇈000000003fffffff
=== Inputs ===
x: i4366 
y: i8 
=== Succesors ===
=== Usages ===
i4335 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i4366 y: i8  <|@  <|@
f <@~|@floating>@ <|@
tid i4335 <|@
result v113|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:259) [bci: 10]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: i32
=== Inputs ===
x: i4336 
y: i4366 
=== Succesors ===
=== Usages ===
i419 i1780 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i4336 y: i4366  <|@  <|@
f <@~|@floating>@ <|@
tid i419 <|@
result v114|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:260) [bci: 14]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: i32
=== Inputs ===
x: i4335 
y: i204 
=== Succesors ===
=== Usages ===
v420 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i4335 y: i204  <|@  <|@
f <@~|@floating>@ <|@
tid v420 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:260) [bci: 15]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i419 
y: i5 
=== Succesors ===
=== Usages ===
i1780 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i419 y: i5  <|@  <|@
f <@~|@floating>@ <|@
tid i1780 <|@
result v115|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v420 
trueValue: i204 
falseValue: i4335 
=== Succesors ===
=== Usages ===
v1672 j3266 i430 v2190 v2206 i2323 a2772 v2793 i2812 v2805 i2757 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v420 trueValue: i204 falseValue: i4335  <|@  <|@
f <@~|@floating>@ <|@
tid i430 <|@
result v116|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:262) [bci: 23]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: i32
=== Inputs ===
x: i1780 
y: i429 
=== Succesors ===
=== Usages ===
v431 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1780 y: i429  <|@  <|@
f <@~|@floating>@ <|@
tid v431 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:262) [bci: 24]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i430 
y: i8 
=== Succesors ===
=== Usages ===
v1949 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i430 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v1949 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:262) [bci: 24]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v431 
=== Succesors ===
trueSuccessor: v1945 
falseSuccessor: v1948 
=== Usages ===
=== Predecessor ===
v216 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v431 #trueSuccessor: v1945 #falseSuccessor: v1948  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = SHR v105|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v113|DWORD = ADD (x: v112|DWORD, y: v105|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v114|DWORD = SUB (x: v113|DWORD, ~y: v104|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v114|DWORD, y: v114|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v115|DWORD = CMOVE (falseValue: v113|DWORD, ~trueValue: v104|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction v116|DWORD = LEA [v115|DWORD - 2147483639] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v116|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B123 -> B124 falseDestination: B123 -> B174 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B125" "B173" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4575305213314078916
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1945 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:262) [bci: 24]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1954 
=== Usages ===
=== Predecessor ===
v1949 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1954  <|@  <|@
f <@~|@floating>@ <|@
tid v1672 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:463) [bci: 26]
at java.lang.String.split(String.java:2353) [bci: 165]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i503 
y: i1780 
=== Succesors ===
=== Usages ===
v1954 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i503 y: i1780  <|@  <|@
f <@*|@fixed>@ <|@
tid v1954 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:463) [bci: 26]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1672 
=== Succesors ===
trueSuccessor: v1950 
falseSuccessor: v1953 
=== Usages ===
=== Predecessor ===
v1945 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1672 #trueSuccessor: v1950 #falseSuccessor: v1953  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v115|DWORD, y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B124 -> B125 falseDestination: B124 -> B173 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors "B126" "B127" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4575305213314078916
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1950 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:463) [bci: 26]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2196 
=== Usages ===
v1679 
=== Predecessor ===
v1954 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2196  <|@  <|@
f <@~|@floating>@ <|@
tid v2190 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 22]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:171) [bci: 3]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1780 
y: i5 
=== Succesors ===
=== Usages ===
v2196 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1780 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v2196 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 33]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:171) [bci: 3]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v2190 
=== Succesors ===
trueSuccessor: v2195 
falseSuccessor: v2191 
=== Usages ===
=== Predecessor ===
v1950 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2190 #trueSuccessor: v2195 #falseSuccessor: v2191  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v115|DWORD, y: v115|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B125 -> B126 falseDestination: B125 -> B127 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B175" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2195 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:187) [bci: 55]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:171) [bci: 3]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2479 
=== Usages ===
=== Predecessor ===
v2196 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2479  <|@  <|@
f <@~|@floating>@ <|@
tid i2480 <|@
result int[-563809|0xfffffffffff7659f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -563809
stableDimension: 0
stamp: i32 [-563809] ⇊00000000fff7659f ⇈00000000fff7659f
stampKind: i32
value: int[-563809|0xfffffffffff7659f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2468 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2479 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2464 
=== Predecessor ===
v2195 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-563809|0xfffffffffff7659f], Object[null]] destination: B126 -> B175 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B128" "B129" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4575305213314078916
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2191 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 36]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:171) [bci: 3]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2759 
=== Usages ===
=== Predecessor ===
v2196 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2759  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2759 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j2790 
=== Usages ===
v4436 v4437 
=== Predecessor ===
v2191 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j2790  <|@  <|@
f <@~|@floating>@ <|@
tid v4436 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j2759 
index: - 
=== Succesors ===
=== Usages ===
j2790 v2792 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2759 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2790 <|@
result v117|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v4436 
=== Succesors ===
next: j2791 
=== Usages ===
j2763 v4438 v4439 a2771 v4444 v4440 v4441 v4442 v4443 
=== Predecessor ===
j2759 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4436 #next: j2791  <|@  <|@
f <@~|@floating>@ <|@
tid v4437 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j2759 
index: - 
=== Succesors ===
=== Usages ===
j2791 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2759 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2791 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v4437 
=== Succesors ===
next: v2767 
=== Usages ===
v2764 
=== Predecessor ===
j2790 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4437 #next: v2767  <|@  <|@
f <@~|@floating>@ <|@
tid i2757 <|@
result v118|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i1780 
y: i1663 
=== Succesors ===
=== Usages ===
i2779 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i1780 y: i1663  <|@  <|@
f <@~|@floating>@ <|@
tid i2779 <|@
result v119|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: i32 [-2147483645 - 2147483647] ⇊0000000000000003
=== Inputs ===
x: i2757 
y: i2664 
=== Succesors ===
=== Usages ===
i2758 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2757 y: i2664  <|@  <|@
f <@~|@floating>@ <|@
tid i2758 <|@
result v120|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i2779 
y: i2634 
=== Succesors ===
=== Usages ===
j2762 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i2779 y: i2634  <|@  <|@
f <@~|@floating>@ <|@
tid j2762 <|@
result v121|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i2758 
=== Succesors ===
=== Usages ===
j2763 v4440 v4441 v4442 v4443 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2758  <|@  <|@
f <@~|@floating>@ <|@
tid j2763 <|@
result v122|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: i64
=== Inputs ===
x: j2762 
y: j2790 
=== Succesors ===
=== Usages ===
v2764 v2792 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2762 y: j2790  <|@  <|@
f <@~|@floating>@ <|@
tid v2764 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2791 
y: j2763 
=== Succesors ===
=== Usages ===
v2767 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j2791 y: j2763  <|@  <|@
f <@*|@fixed>@ <|@
tid v2767 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v2764 
=== Succesors ===
trueSuccessor: v2765 
falseSuccessor: v2766 
=== Usages ===
=== Predecessor ===
j2791 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2764 #trueSuccessor: v2765 #falseSuccessor: v2766  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v117|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v118|DWORD = SHL v115|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v119|DWORD = LEA [v118|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v120|DWORD = AND v119|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v121|QWORD = MOVSXD v120|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v122|QWORD = ADD (x: v121|QWORD, y: v117|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v122|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B127 -> B128 falseDestination: B127 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B130" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4545167746732113395
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2765 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2772 
=== Usages ===
=== Predecessor ===
v2767 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2772  <|@  <|@
f <@~|@floating>@ <|@
tid v4334 <|@
result v123|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.ClassGetHubNode.readClass(Class) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.getComponentType(HotSpotClassSubstitutions.java:120) [bci: 1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 6]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v4367 
=== Succesors ===
=== Usages ===
a2772 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v4367  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2772 <|@
result v124|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?170 
arguments: v4334 i1780 i5 
=== Succesors ===
next: v2775 
=== Usages ===
a2776 
=== Predecessor ===
v2765 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?170 arguments: v4334 i1780 i5 #next: v2775  <|@  <|@
f <@*|@fixed>@ <|@
tid v2775 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2774 
=== Predecessor ===
a2772 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v123|QWORD = UNCOMPRESSPOINTER (input: v106|DWORD, ~baseRegister: -) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@120cc8dc encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v123|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v115|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
stack: vobject:ArrayList:0{modCount=v21|DWORD,size=v21|DWORD,elementData=v22|QWORD[.]} v104|DWORD 
locals: - - 
java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
locals: vobject:ArrayList:0{modCount=v21|DWORD,size=v21|DWORD,elementData=v22|QWORD[.]} v102|QWORD[.] 
java.lang.String.split(String.java:2353) [bci: 165]
locals: v0|QWORD[.] - int[0|0x0] v11|DWORD - v28|DWORD int[0|0x0] vobject:ArrayList:0{modCount=v21|DWORD,size=v21|DWORD,elementData=v22|QWORD[.]} - - 
vobject:ArrayList:0{modCount=v21|DWORD,size=v21|DWORD,elementData=v22|QWORD[.]} Ljava/util/ArrayList; v21|DWORD v21|DWORD v22|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:9, 7, 165] <|@ <|@
      nr   -1  <|@ instruction v124|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v124|QWORD[.]] destination: B128 -> B130 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B130" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4575218661402474956
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2766 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2792 
=== Usages ===
=== Predecessor ===
v2767 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2792  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2792 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4436 
value: j2763 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2781 
=== Usages ===
=== Predecessor ===
v2766 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4436 value: j2763 stateAfter: - lastLocationAccess: - #next: v2781  <|@  <|@
f <@~|@floating>@ <|@
tid v4440 <|@
result [v121|QWORD + v117|QWORD * 1 + 192] <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j2762 
index: j2790 
=== Succesors ===
=== Usages ===
v2781 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2762 index: j2790  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2781 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: void
=== Inputs ===
address: v4440 
=== Succesors ===
next: v2783 
=== Usages ===
=== Predecessor ===
v2792 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v4440 #next: v2783  <|@  <|@
f <@~|@floating>@ <|@
tid v4441 <|@
result [v121|QWORD + v117|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j2762 
index: j2790 
=== Succesors ===
=== Usages ===
v2783 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2762 index: j2790  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2783 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: void
=== Inputs ===
address: v4441 
=== Succesors ===
next: v2785 
=== Usages ===
=== Predecessor ===
v2781 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v4441 #next: v2785  <|@  <|@
f <@~|@floating>@ <|@
tid v4442 <|@
result [v121|QWORD + v117|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j2762 
index: j2790 
=== Succesors ===
=== Usages ===
v2785 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2762 index: j2790  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2785 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: void
=== Inputs ===
address: v4442 
=== Succesors ===
next: v2787 
=== Usages ===
=== Predecessor ===
v2783 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v4442 #next: v2787  <|@  <|@
f <@~|@floating>@ <|@
tid v4443 <|@
result [v121|QWORD + v117|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j2762 
index: j2790 
=== Succesors ===
=== Usages ===
v2787 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2762 index: j2790  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2787 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: void
=== Inputs ===
address: v4443 
=== Succesors ===
next: v2793 
=== Usages ===
=== Predecessor ===
v2785 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v4443 #next: v2793  <|@  <|@
f <@~|@floating>@ <|@
tid v4438 <|@
result [v117|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j2790 
index: - 
=== Succesors ===
=== Usages ===
v2793 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2790 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2793 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4438 
value: i1780 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2794 
=== Usages ===
=== Predecessor ===
v2787 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4438 value: i1780 stateAfter: - lastLocationAccess: - #next: v2794  <|@  <|@
f <@~|@floating>@ <|@
tid v4439 <|@
result [v117|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2790 
index: - 
=== Succesors ===
=== Usages ===
v2794 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2790 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2794 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4439 
value: j2632 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2797 
=== Usages ===
=== Predecessor ===
v2793 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4439 value: j2632 stateAfter: - lastLocationAccess: - #next: v2797  <|@  <|@
f <@~|@floating>@ <|@
tid v4444 <|@
result [v117|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j2790 
index: - 
=== Succesors ===
=== Usages ===
v2797 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2790 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2797 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4444 
value: v4367 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2770 
=== Usages ===
=== Predecessor ===
v2794 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4444 value: v4367 stateAfter: - lastLocationAccess: - #next: v2770  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2770 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2771 
=== Usages ===
=== Predecessor ===
v2797 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a2771  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2771 <|@
result v125|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j2790 
=== Succesors ===
next: v2773 
=== Usages ===
a2776 
=== Predecessor ===
v2770 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j2790 #next: v2773  <|@  <|@
f <@*|@fixed>@ <|@
tid v2773 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2774 
=== Predecessor ===
a2771 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v122|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v121|QWORD + v117|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v121|QWORD + v117|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v121|QWORD + v117|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v121|QWORD + v117|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v117|QWORD + 12], y: v115|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v117|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v117|QWORD + 8], y: v106|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v125|QWORD[.] = MOVE v117|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v125|QWORD[.]] destination: B129 -> B130 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B129" "B128" 
    successors "B131" "B132" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4575305213314078916
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a2776 <|@
result v126|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v2774 
values: a2771 a2772 
=== Succesors ===
=== Usages ===
v4508 a2335 v4413 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2774 values: a2771 a2772  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2774 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2773 v2775 
=== Succesors ===
next: v3976 
=== Usages ===
a2776 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2773 v2775 #next: v3976  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3976 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v3532 
=== Usages ===
j3977 j3979 
=== Predecessor ===
v2774 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v3532  <|@  <|@
f <@~|@floating>@ <|@
tid v4413 <|@
result [v126|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a2776 
index: - 
=== Succesors ===
=== Usages ===
j3979 j2811 j2809 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2776 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v2206 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 4]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:174) [bci: 19]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4366 
y: i1780 
=== Succesors ===
=== Usages ===
i2323 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i4366 y: i1780  <|@  <|@
f <@~|@floating>@ <|@
tid i2323 <|@
result v127|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v2206 
trueValue: i4366 
falseValue: i1780 
=== Succesors ===
=== Usages ===
j3267 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v2206 trueValue: i4366 falseValue: i1780  <|@  <|@
f <@~|@floating>@ <|@
tid j3267 <|@
result v128|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i2323 
=== Succesors ===
=== Usages ===
j4023 v4508 j3271 v3529 v3750 j4012 j4017 j4020 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2323  <|@  <|@
f <@~|@floating>@ <|@
tid v3529 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3267 
y: j2632 
=== Succesors ===
=== Usages ===
v3532 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3267 y: j2632  <|@  <|@
f <@*|@fixed>@ <|@
tid v3532 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v3529 
=== Succesors ===
trueSuccessor: v3530 
falseSuccessor: v3531 
=== Usages ===
=== Predecessor ===
v3976 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3529 #trueSuccessor: v3530 #falseSuccessor: v3531  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v126|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v115|DWORD, y: v105|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v127|DWORD = CMOVE (falseValue: v115|DWORD, ~trueValue: v105|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v128|QWORD = MOVSXD v127|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v128|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B130 -> B131 falseDestination: B130 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B130" 
    successors "B146" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570801613686708420
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3530 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3548 
=== Usages ===
=== Predecessor ===
v3532 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3548  <|@  <|@
f <@*|@fixed>@ <|@
tid v3548 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3549 
=== Predecessor ===
v3530 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B131 -> B146 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B130" 
    successors "B133" "B134" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570801613686708420
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3531 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3535 
=== Usages ===
=== Predecessor ===
v3532 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3535  <|@  <|@
f <@~|@floating>@ <|@
tid j3979 <|@
result v129|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v3976 
address: v4413 
=== Succesors ===
=== Usages ===
v4539 v4541 v4543 v4545 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v3976 address: v4413  <|@  <|@
f <@~|@floating>@ <|@
tid v4564 <|@
result [v22|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a505 
index: - 
=== Succesors ===
=== Usages ===
j3977 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a505 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j3977 <|@
result v130|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v3976 
address: v4564 
=== Succesors ===
=== Usages ===
v4540 v4542 v4544 v4546 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v3976 address: v4564  <|@  <|@
f <@~|@floating>@ <|@
tid j4012 <|@
result v131|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j3267 
y: j3807 
=== Succesors ===
=== Usages ===
v4013 v4015 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3267 y: j3807  <|@  <|@
f <@~|@floating>@ <|@
tid v4013 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j4012 
y: j2049 
=== Succesors ===
=== Usages ===
v3535 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j4012 y: j2049  <|@  <|@
f <@*|@fixed>@ <|@
tid v3535 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v4013 
=== Succesors ===
trueSuccessor: v3533 
falseSuccessor: v3534 
=== Usages ===
=== Predecessor ===
v3531 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4013 #trueSuccessor: v3533 #falseSuccessor: v3534  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v129|QWORD[.] = LEA [v126|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v130|QWORD[.] = LEA [v22|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v131|QWORD = LEA [v128|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v131|QWORD, y: v131|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B132 -> B133 falseDestination: B132 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B137" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4568637815896609427
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3533 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3544 
=== Usages ===
=== Predecessor ===
v3535 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3544  <|@  <|@
f <@*|@fixed>@ <|@
tid v3544 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3545 
=== Predecessor ===
v3533 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B133 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B135" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561794414431967428
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3534 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3536 
=== Usages ===
=== Predecessor ===
v3535 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3536  <|@  <|@
f <@*|@fixed>@ <|@
tid v3536 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3537 
=== Predecessor ===
v3534 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B134 -> B135 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" "B172" 
    successors "B136" "B172" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 2
    probability 4570801613686708420
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j4004 <|@
result v132|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3537 
values: j2049 j4011 
=== Succesors ===
=== Usages ===
v4546 j4011 v4545 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3537 values: j2049 j4011  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3537 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v3536 
=== Succesors ===
next: v4368 
=== Usages ===
v4368 v3540 v3541 j4004 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v3536 #next: v4368  <|@  <|@
f <@~|@floating>@ <|@
tid v4546 <|@
result [v130|QWORD[.] + v132|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j3977 
index: j4004 
=== Succesors ===
=== Usages ===
v4368 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3977 index: j4004  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4368 <|@
result v133|V256_DWORD[........] <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: <n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;>
=== Inputs ===
stateBefore: - 
guard: v3537 
address: v4546 
=== Succesors ===
next: v4226 
=== Usages ===
v4226 
=== Predecessor ===
v3537 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v3537 address: v4546 #next: v4226  <|@  <|@
f <@~|@floating>@ <|@
tid v4545 <|@
result [v129|QWORD[.] + v132|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j3979 
index: j4004 
=== Succesors ===
=== Usages ===
v4226 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3979 index: j4004  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4226 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4545 
value: v4368 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3543 
=== Usages ===
=== Predecessor ===
v4368 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4545 value: v4368 stateAfter: - lastLocationAccess: - #next: v3543  <|@  <|@
f <@~|@floating>@ <|@
tid j4011 <|@
result v134|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j4004 
y: j2577 
=== Succesors ===
=== Usages ===
j3996 j4004 v4015 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j4004 y: j2577  <|@  <|@
f <@~|@floating>@ <|@
tid v4015 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j4012 
y: j4011 
=== Succesors ===
=== Usages ===
v3543 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j4012 y: j4011  <|@  <|@
f <@*|@fixed>@ <|@
tid v3543 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v4015 
=== Succesors ===
trueSuccessor: v3540 
falseSuccessor: v3542 
=== Usages ===
=== Predecessor ===
v4226 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4015 #trueSuccessor: v3540 #falseSuccessor: v3542  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v132|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v133|V256_DWORD[........] = H [v130|QWORD[.] + v132|QWORD * 4] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v129|QWORD[.] + v132|QWORD * 4], input: v133|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v134|QWORD = LEA [v132|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v134|QWORD, y: v131|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B135 -> B136 falseDestination: B135 -> B172 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B135" 
    successors "B137" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561794414431967428
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3540 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v3537 
=== Succesors ===
next: v3546 
=== Usages ===
=== Predecessor ===
v3543 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v3537 #next: v3546  <|@  <|@
f <@*|@fixed>@ <|@
tid v3546 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3545 
=== Predecessor ===
v3540 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v134|QWORD] destination: B136 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B133" "B136" 
    successors "B138" "B139" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570801613686708420
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3996 <|@
result v135|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3545 
values: j2049 j4011 
=== Succesors ===
=== Usages ===
v4544 j4003 j3988 v4018 v4543 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3545 values: j2049 j4011  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3545 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3544 v3546 
=== Succesors ===
next: v3564 
=== Usages ===
j3996 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3544 v3546 #next: v3564  <|@  <|@
f <@~|@floating>@ <|@
tid j4017 <|@
result v136|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j3267 
y: j3811 
=== Succesors ===
=== Usages ===
v4018 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3267 y: j3811  <|@  <|@
f <@~|@floating>@ <|@
tid v4018 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j4017 
y: j3996 
=== Succesors ===
=== Usages ===
v3564 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j4017 y: j3996  <|@  <|@
f <@*|@fixed>@ <|@
tid v3564 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v4018 
=== Succesors ===
trueSuccessor: v3563 
falseSuccessor: v3562 
=== Usages ===
=== Predecessor ===
v3545 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4018 #trueSuccessor: v3563 #falseSuccessor: v3562  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v135|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v136|QWORD = LEA [v128|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v135|QWORD, y: v136|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B137 -> B138 falseDestination: B137 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B137" 
    successors "B140" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561794414431967428
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3563 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3567 
=== Usages ===
=== Predecessor ===
v3564 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3567  <|@  <|@
f <@*|@fixed>@ <|@
tid v3567 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3556 
=== Predecessor ===
v3563 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v135|QWORD] destination: B138 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B137" 
    successors "B140" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4568637815896609427
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3562 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4369 
=== Usages ===
v4369 
=== Predecessor ===
v3564 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4369  <|@  <|@
f <@~|@floating>@ <|@
tid v4544 <|@
result [v130|QWORD[.] + v135|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j3977 
index: j3996 
=== Succesors ===
=== Usages ===
v4369 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3977 index: j3996  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4369 <|@
result v137|V128_DWORD[....] <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: <n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;>
=== Inputs ===
stateBefore: - 
guard: v3562 
address: v4544 
=== Succesors ===
next: v4224 
=== Usages ===
v4224 
=== Predecessor ===
v3562 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v3562 address: v4544 #next: v4224  <|@  <|@
f <@~|@floating>@ <|@
tid v4543 <|@
result [v129|QWORD[.] + v135|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j3979 
index: j3996 
=== Succesors ===
=== Usages ===
v4224 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3979 index: j3996  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4224 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4543 
value: v4369 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3555 
=== Usages ===
=== Predecessor ===
v4369 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4543 value: v4369 stateAfter: - lastLocationAccess: - #next: v3555  <|@  <|@
f <@~|@floating>@ <|@
tid j4003 <|@
result v138|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3996 
y: j3783 
=== Succesors ===
=== Usages ===
j3988 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3996 y: j3783  <|@  <|@
f <@*|@fixed>@ <|@
tid v3555 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3556 
=== Predecessor ===
v4224 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v137|V128_DWORD[....] = H [v130|QWORD[.] + v135|QWORD * 4] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v129|QWORD[.] + v135|QWORD * 4], input: v137|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v138|QWORD = LEA [v135|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v138|QWORD] destination: B139 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B139" "B138" 
    successors "B141" "B142" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570801613686708420
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3988 <|@
result v139|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3556 
values: j4003 j3996 
=== Succesors ===
=== Usages ===
v4542 j3995 j3980 v4021 v4541 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3556 values: j4003 j3996  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3556 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3555 v3567 
=== Succesors ===
next: v3570 
=== Usages ===
j3988 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3555 v3567 #next: v3570  <|@  <|@
f <@~|@floating>@ <|@
tid j4020 <|@
result v140|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j3267 
y: j3815 
=== Succesors ===
=== Usages ===
v4021 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3267 y: j3815  <|@  <|@
f <@~|@floating>@ <|@
tid v4021 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j4020 
y: j3988 
=== Succesors ===
=== Usages ===
v3570 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j4020 y: j3988  <|@  <|@
f <@*|@fixed>@ <|@
tid v3570 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v4021 
=== Succesors ===
trueSuccessor: v3569 
falseSuccessor: v3568 
=== Usages ===
=== Predecessor ===
v3556 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4021 #trueSuccessor: v3569 #falseSuccessor: v3568  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v139|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v140|QWORD = LEA [v128|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v139|QWORD, y: v140|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B140 -> B141 falseDestination: B140 -> B142 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B143" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561794414431967428
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3569 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3573 
=== Usages ===
=== Predecessor ===
v3570 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3573  <|@  <|@
f <@*|@fixed>@ <|@
tid v3573 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3559 
=== Predecessor ===
v3569 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v139|QWORD] destination: B141 -> B143 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B143" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4568637815896609427
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3568 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4370 
=== Usages ===
v4370 
=== Predecessor ===
v3570 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4370  <|@  <|@
f <@~|@floating>@ <|@
tid v4542 <|@
result [v130|QWORD[.] + v139|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j3977 
index: j3988 
=== Succesors ===
=== Usages ===
v4370 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3977 index: j3988  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4370 <|@
result v141|V64_DWORD[..] <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: <n Ljava/lang/Object;,n Ljava/lang/Object;>
=== Inputs ===
stateBefore: - 
guard: v3568 
address: v4542 
=== Succesors ===
next: v4222 
=== Usages ===
v4222 
=== Predecessor ===
v3568 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v3568 address: v4542 #next: v4222  <|@  <|@
f <@~|@floating>@ <|@
tid v4541 <|@
result [v129|QWORD[.] + v139|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j3979 
index: j3988 
=== Succesors ===
=== Usages ===
v4222 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3979 index: j3988  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4222 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4541 
value: v4370 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3558 
=== Usages ===
=== Predecessor ===
v4370 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4541 value: v4370 stateAfter: - lastLocationAccess: - #next: v3558  <|@  <|@
f <@~|@floating>@ <|@
tid j3995 <|@
result v142|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3988 
y: j3761 
=== Succesors ===
=== Usages ===
j3980 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3988 y: j3761  <|@  <|@
f <@*|@fixed>@ <|@
tid v3558 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3559 
=== Predecessor ===
v4222 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v141|V64_DWORD[..] = H [v130|QWORD[.] + v139|QWORD * 4] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v129|QWORD[.] + v139|QWORD * 4], input: v141|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v142|QWORD = LEA [v139|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v142|QWORD] destination: B142 -> B143 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B142" "B141" 
    successors "B144" "B145" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570801613686708420
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3980 <|@
result v143|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3559 
values: j3995 j3988 
=== Succesors ===
=== Usages ===
v4540 v4024 v4539 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3559 values: j3995 j3988  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3559 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3558 v3573 
=== Succesors ===
next: v3576 
=== Usages ===
j3980 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3558 v3573 #next: v3576  <|@  <|@
f <@~|@floating>@ <|@
tid j4023 <|@
result v144|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j3267 
y: j1816 
=== Succesors ===
=== Usages ===
v4024 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3267 y: j1816  <|@  <|@
f <@~|@floating>@ <|@
tid v4024 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j4023 
y: j3980 
=== Succesors ===
=== Usages ===
v3576 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j4023 y: j3980  <|@  <|@
f <@*|@fixed>@ <|@
tid v3576 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v4024 
=== Succesors ===
trueSuccessor: v3575 
falseSuccessor: v3574 
=== Usages ===
=== Predecessor ===
v3559 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4024 #trueSuccessor: v3575 #falseSuccessor: v3574  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v143|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v144|QWORD = DEC v128|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v143|QWORD, y: v144|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B143 -> B144 falseDestination: B143 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B143" 
    successors "B146" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561794414431967428
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3575 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3579 
=== Usages ===
=== Predecessor ===
v3576 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3579  <|@  <|@
f <@*|@fixed>@ <|@
tid v3579 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3549 
=== Predecessor ===
v3575 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B144 -> B146 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B143" 
    successors "B146" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4568637815896609427
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3574 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a4371 
=== Usages ===
a4371 
=== Predecessor ===
v3576 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a4371  <|@  <|@
f <@~|@floating>@ <|@
tid v4540 <|@
result [v130|QWORD[.] + v143|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j3977 
index: j3980 
=== Succesors ===
=== Usages ===
a4371 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3977 index: j3980  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4371 <|@
result v145|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v3574 
address: v4540 
=== Succesors ===
next: v4220 
=== Usages ===
v4220 
=== Predecessor ===
v3574 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v3574 address: v4540 #next: v4220  <|@  <|@
f <@~|@floating>@ <|@
tid v4539 <|@
result [v129|QWORD[.] + v143|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j3979 
index: j3980 
=== Succesors ===
=== Usages ===
v4220 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3979 index: j3980  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4220 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4539 
value: a4371 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3561 
=== Usages ===
=== Predecessor ===
a4371 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4539 value: a4371 stateAfter: - lastLocationAccess: - #next: v3561  <|@  <|@
f <@*|@fixed>@ <|@
tid v3561 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3549 
=== Predecessor ===
v4220 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v145|DWORD[.] = MOV [v130|QWORD[.] + v143|QWORD * 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v129|QWORD[.] + v143|QWORD * 4], y: v145|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B145 -> B146 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B131" "B145" "B144" 
    successors "B147" "B162" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4575305213314078916
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3549 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3548 v3561 v3579 
=== Succesors ===
next: v4027 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3548 v3561 v3579 #next: v4027  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4027 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v3586 
=== Usages ===
j4029 
=== Predecessor ===
v3549 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v3586  <|@  <|@
f <@~|@floating>@ <|@
tid j3266 <|@
result v146|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1780 
=== Succesors ===
=== Usages ===
j3271 v3750 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1780  <|@  <|@
f <@~|@floating>@ <|@
tid v3750 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3267 
y: j3266 
=== Succesors ===
=== Usages ===
v3586 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3267 y: j3266  <|@  <|@
f <@*|@fixed>@ <|@
tid v3586 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v3750 
=== Succesors ===
trueSuccessor: v3585 
falseSuccessor: v3584 
=== Usages ===
=== Predecessor ===
v4027 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3750 #trueSuccessor: v3585 #falseSuccessor: v3584  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v146|QWORD = MOVSXD v115|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v146|QWORD, y: v128|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B146 -> B147 falseDestination: B146 -> B162 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B148" "B149" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570801613686708420
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3585 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3589 
=== Usages ===
=== Predecessor ===
v3586 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3589  <|@  <|@
f <@~|@floating>@ <|@
tid v4508 <|@
result [v126|QWORD[.] + v128|QWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a2776 
index: j3267 
=== Succesors ===
=== Usages ===
j4029 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2776 index: j3267  <|@  <|@
f <@~|@floating>@ <|@
tid j4029 <|@
result v147|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v4027 
address: v4508 
=== Succesors ===
=== Usages ===
v4547 v4548 v4549 v4550 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v4027 address: v4508  <|@  <|@
f <@~|@floating>@ <|@
tid j3271 <|@
result v148|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j3266 
y: j3267 
=== Succesors ===
=== Usages ===
j4065 j4054 j4059 j4062 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j3266 y: j3267  <|@  <|@
f <@~|@floating>@ <|@
tid j4054 <|@
result v149|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967303 - 4294967287]
=== Inputs ===
x: j3271 
y: j3807 
=== Succesors ===
=== Usages ===
v4055 v4057 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3271 y: j3807  <|@  <|@
f <@~|@floating>@ <|@
tid v4055 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j4054 
y: j2049 
=== Succesors ===
=== Usages ===
v3589 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j4054 y: j2049  <|@  <|@
f <@*|@fixed>@ <|@
tid v3589 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v4055 
=== Succesors ===
trueSuccessor: v3587 
falseSuccessor: v3588 
=== Usages ===
=== Predecessor ===
v3585 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4055 #trueSuccessor: v3587 #falseSuccessor: v3588  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v147|QWORD[.] = LEA [v126|QWORD[.] + v128|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v148|QWORD = SUB (x: v146|QWORD, ~y: v128|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v149|QWORD = LEA [v148|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v149|QWORD, y: v149|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B147 -> B148 falseDestination: B147 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B147" 
    successors "B152" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4568637815896609427
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3587 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3598 
=== Usages ===
=== Predecessor ===
v3589 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3598  <|@  <|@
f <@*|@fixed>@ <|@
tid v3598 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3599 
=== Predecessor ===
v3587 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B148 -> B152 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B147" 
    successors "B150" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561794414431967428
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3588 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3590 
=== Usages ===
=== Predecessor ===
v3589 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3590  <|@  <|@
f <@*|@fixed>@ <|@
tid v3590 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3591 
=== Predecessor ===
v3588 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B149 -> B150 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B149" "B161" 
    successors "B151" "B161" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 2
    probability 4570801613686708420
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j4048 <|@
result v150|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3591 
values: j2049 j4053 
=== Succesors ===
=== Usages ===
v4550 j4053 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3591 values: j2049 j4053  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3591 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v3590 
=== Succesors ===
next: v4230 
=== Usages ===
j4048 v3594 v3595 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v3590 #next: v4230  <|@  <|@
f <@~|@floating>@ <|@
tid v4550 <|@
result [v147|QWORD[.] + v150|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j4029 
index: j4048 
=== Succesors ===
=== Usages ===
v4230 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4029 index: j4048  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4230 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4550 
value: v4243 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3597 
=== Usages ===
=== Predecessor ===
v3591 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4550 value: v4243 stateAfter: - lastLocationAccess: - #next: v3597  <|@  <|@
f <@~|@floating>@ <|@
tid j4053 <|@
result v151|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j4048 
y: j2577 
=== Succesors ===
=== Usages ===
j4042 j4048 v4057 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j4048 y: j2577  <|@  <|@
f <@~|@floating>@ <|@
tid v4057 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j4054 
y: j4053 
=== Succesors ===
=== Usages ===
v3597 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j4054 y: j4053  <|@  <|@
f <@*|@fixed>@ <|@
tid v3597 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v4057 
=== Succesors ===
trueSuccessor: v3594 
falseSuccessor: v3596 
=== Usages ===
=== Predecessor ===
v4230 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4057 #trueSuccessor: v3594 #falseSuccessor: v3596  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v150|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v147|QWORD[.] + v150|QWORD * 4], input: v9|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v151|QWORD = LEA [v150|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v151|QWORD, y: v149|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B150 -> B151 falseDestination: B150 -> B161 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B150" 
    successors "B152" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561794414431967428
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3594 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v3591 
=== Succesors ===
next: v3600 
=== Usages ===
=== Predecessor ===
v3597 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v3591 #next: v3600  <|@  <|@
f <@*|@fixed>@ <|@
tid v3600 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3599 
=== Predecessor ===
v3594 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v151|QWORD] destination: B151 -> B152 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B148" "B151" 
    successors "B153" "B154" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570801613686708420
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j4042 <|@
result v152|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3599 
values: j2049 j4053 
=== Succesors ===
=== Usages ===
v4549 j4047 j4036 v4060 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3599 values: j2049 j4053  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3599 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3598 v3600 
=== Succesors ===
next: v3618 
=== Usages ===
j4042 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3598 v3600 #next: v3618  <|@  <|@
f <@~|@floating>@ <|@
tid j4059 <|@
result v153|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967299 - 4294967291]
=== Inputs ===
x: j3271 
y: j3811 
=== Succesors ===
=== Usages ===
v4060 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3271 y: j3811  <|@  <|@
f <@~|@floating>@ <|@
tid v4060 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j4059 
y: j4042 
=== Succesors ===
=== Usages ===
v3618 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j4059 y: j4042  <|@  <|@
f <@*|@fixed>@ <|@
tid v3618 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v4060 
=== Succesors ===
trueSuccessor: v3617 
falseSuccessor: v3616 
=== Usages ===
=== Predecessor ===
v3599 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4060 #trueSuccessor: v3617 #falseSuccessor: v3616  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v152|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v153|QWORD = LEA [v148|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v152|QWORD, y: v153|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B152 -> B153 falseDestination: B152 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B153"
    from_bci -1
    to_bci -1
    predecessors "B152" 
    successors "B155" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561794414431967428
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3617 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3621 
=== Usages ===
=== Predecessor ===
v3618 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3621  <|@  <|@
f <@*|@fixed>@ <|@
tid v3621 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3610 
=== Predecessor ===
v3617 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v152|QWORD] destination: B153 -> B155 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B154"
    from_bci -1
    to_bci -1
    predecessors "B152" 
    successors "B155" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4568637815896609427
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3616 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4229 
=== Usages ===
=== Predecessor ===
v3618 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4229  <|@  <|@
f <@~|@floating>@ <|@
tid v4549 <|@
result [v147|QWORD[.] + v152|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j4029 
index: j4042 
=== Succesors ===
=== Usages ===
v4229 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4029 index: j4042  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4229 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4549 
value: v4246 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3609 
=== Usages ===
=== Predecessor ===
v3616 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4549 value: v4246 stateAfter: - lastLocationAccess: - #next: v3609  <|@  <|@
f <@~|@floating>@ <|@
tid j4047 <|@
result v154|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j4042 
y: j3783 
=== Succesors ===
=== Usages ===
j4036 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j4042 y: j3783  <|@  <|@
f <@*|@fixed>@ <|@
tid v3609 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3610 
=== Predecessor ===
v4229 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v147|QWORD[.] + v152|QWORD * 4], input: v8|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v154|QWORD = LEA [v152|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v154|QWORD] destination: B154 -> B155 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B155"
    from_bci -1
    to_bci -1
    predecessors "B154" "B153" 
    successors "B156" "B157" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570801613686708420
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j4036 <|@
result v155|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3610 
values: j4047 j4042 
=== Succesors ===
=== Usages ===
v4548 j4041 j4030 v4063 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3610 values: j4047 j4042  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3610 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3609 v3621 
=== Succesors ===
next: v3624 
=== Usages ===
j4036 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3609 v3621 #next: v3624  <|@  <|@
f <@~|@floating>@ <|@
tid j4062 <|@
result v156|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j3271 
y: j3815 
=== Succesors ===
=== Usages ===
v4063 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3271 y: j3815  <|@  <|@
f <@~|@floating>@ <|@
tid v4063 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j4062 
y: j4036 
=== Succesors ===
=== Usages ===
v3624 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j4062 y: j4036  <|@  <|@
f <@*|@fixed>@ <|@
tid v3624 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v4063 
=== Succesors ===
trueSuccessor: v3623 
falseSuccessor: v3622 
=== Usages ===
=== Predecessor ===
v3610 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4063 #trueSuccessor: v3623 #falseSuccessor: v3622  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v155|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v156|QWORD = LEA [v148|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v155|QWORD, y: v156|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B155 -> B156 falseDestination: B155 -> B157 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B156"
    from_bci -1
    to_bci -1
    predecessors "B155" 
    successors "B158" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561794414431967428
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3623 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3627 
=== Usages ===
=== Predecessor ===
v3624 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3627  <|@  <|@
f <@*|@fixed>@ <|@
tid v3627 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3613 
=== Predecessor ===
v3623 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v155|QWORD] destination: B156 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B157"
    from_bci -1
    to_bci -1
    predecessors "B155" 
    successors "B158" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4568637815896609427
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3622 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4228 
=== Usages ===
=== Predecessor ===
v3624 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4228  <|@  <|@
f <@~|@floating>@ <|@
tid v4548 <|@
result [v147|QWORD[.] + v155|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j4029 
index: j4036 
=== Succesors ===
=== Usages ===
v4228 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4029 index: j4036  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4228 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4548 
value: v4245 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3612 
=== Usages ===
=== Predecessor ===
v3622 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4548 value: v4245 stateAfter: - lastLocationAccess: - #next: v3612  <|@  <|@
f <@~|@floating>@ <|@
tid j4041 <|@
result v157|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j4036 
y: j3761 
=== Succesors ===
=== Usages ===
j4030 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j4036 y: j3761  <|@  <|@
f <@*|@fixed>@ <|@
tid v3612 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3613 
=== Predecessor ===
v4228 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v147|QWORD[.] + v155|QWORD * 4], input: v7|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v157|QWORD = LEA [v155|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v157|QWORD] destination: B157 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B158"
    from_bci -1
    to_bci -1
    predecessors "B157" "B156" 
    successors "B159" "B160" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570801613686708420
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j4030 <|@
result v158|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3613 
values: j4041 j4036 
=== Succesors ===
=== Usages ===
v4547 v4066 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3613 values: j4041 j4036  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3613 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3612 v3627 
=== Succesors ===
next: v3630 
=== Usages ===
j4030 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3612 v3627 #next: v3630  <|@  <|@
f <@~|@floating>@ <|@
tid j4065 <|@
result v159|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j3271 
y: j1816 
=== Succesors ===
=== Usages ===
v4066 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3271 y: j1816  <|@  <|@
f <@~|@floating>@ <|@
tid v4066 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j4065 
y: j4030 
=== Succesors ===
=== Usages ===
v3630 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j4065 y: j4030  <|@  <|@
f <@*|@fixed>@ <|@
tid v3630 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v4066 
=== Succesors ===
trueSuccessor: v3629 
falseSuccessor: v3628 
=== Usages ===
=== Predecessor ===
v3613 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4066 #trueSuccessor: v3629 #falseSuccessor: v3628  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v158|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v159|QWORD = DEC v148|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v158|QWORD, y: v159|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B158 -> B159 falseDestination: B158 -> B160 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B159"
    from_bci -1
    to_bci -1
    predecessors "B158" 
    successors "B163" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561794414431967428
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3629 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3633 
=== Usages ===
=== Predecessor ===
v3630 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3633  <|@  <|@
f <@*|@fixed>@ <|@
tid v3633 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3603 
=== Predecessor ===
v3629 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B159 -> B163 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B160"
    from_bci -1
    to_bci -1
    predecessors "B158" 
    successors "B163" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4568637815896609427
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3628 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4227 
=== Usages ===
=== Predecessor ===
v3630 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4227  <|@  <|@
f <@~|@floating>@ <|@
tid v4547 <|@
result [v147|QWORD[.] + v158|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j4029 
index: j4030 
=== Succesors ===
=== Usages ===
v4227 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4029 index: j4030  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4227 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4547 
value: a4244 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3615 
=== Usages ===
=== Predecessor ===
v3628 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4547 value: a4244 stateAfter: - lastLocationAccess: - #next: v3615  <|@  <|@
f <@*|@fixed>@ <|@
tid v3615 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3603 
=== Predecessor ===
v4227 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v147|QWORD[.] + v158|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B160 -> B163 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B161"
    from_bci -1
    to_bci -1
    predecessors "B150" 
    successors "B150" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 2
    probability 4568637815896609427
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3596 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3595 
=== Usages ===
=== Predecessor ===
v3597 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3595  <|@  <|@
f <@*|@fixed>@ <|@
tid v3595 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v3591 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v3596 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v3591  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v151|QWORD] destination: B161 -> B150 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B162"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B163" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570801613686708420
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3584 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3602 
=== Usages ===
=== Predecessor ===
v3586 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3602  <|@  <|@
f <@*|@fixed>@ <|@
tid v3602 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3603 
=== Predecessor ===
v3584 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B162 -> B163 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B163"
    from_bci -1
    to_bci -1
    predecessors "B162" "B160" "B159" 
    successors "B164" "B165" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4575305213314078916
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3603 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3602 v3615 v3633 
=== Succesors ===
next: v2808 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3602 v3615 v3633 #next: v2808  <|@  <|@
f <@~|@floating>@ <|@
tid v2805 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:154) [bci: 1]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1780 
y: i5 
=== Succesors ===
=== Usages ===
v2808 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1780 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v2808 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:154) [bci: 1]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v2805 
=== Succesors ===
trueSuccessor: v2806 
falseSuccessor: v2807 
=== Usages ===
=== Predecessor ===
v3603 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2805 #trueSuccessor: v2806 #falseSuccessor: v2807  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v115|DWORD, y: v115|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B163 -> B164 falseDestination: B163 -> B165 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B164"
    from_bci -1
    to_bci -1
    predecessors "B163" 
    successors "B168" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570801613686708420
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2806 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:155) [bci: 4]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2832 
=== Usages ===
=== Predecessor ===
v2808 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2832  <|@  <|@
f <@*|@fixed>@ <|@
tid v2832 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2831 
=== Predecessor ===
v2806 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B164 -> B168 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B165"
    from_bci -1
    to_bci -1
    predecessors "B163" 
    successors "B166" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570801613686708420
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2807 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:157) [bci: 5]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2809 
=== Usages ===
=== Predecessor ===
v2808 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2809  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2809 <|@
result [v126|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToFirstArrayElement(WriteBarrierSnippets.java:376) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:159) [bci: 20]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v4413 
=== Succesors ===
next: j2811 
=== Usages ===
j2810 
=== Predecessor ===
v2807 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v4413 #next: j2811  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2811 <|@
result [v126|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:385) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v4413 
=== Succesors ===
next: v2819 
=== Usages ===
j2815 
=== Predecessor ===
j2809 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v4413 #next: v2819  <|@  <|@
f <@~|@floating>@ <|@
tid i2812 <|@
result v160|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: i32
=== Inputs ===
x: i1780 
y: i19 
=== Succesors ===
=== Usages ===
i2813 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1780 y: i19  <|@  <|@
f <@~|@floating>@ <|@
tid i2813 <|@
result v161|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i2812 
y: i1663 
=== Succesors ===
=== Usages ===
j2814 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i2812 y: i1663  <|@  <|@
f <@~|@floating>@ <|@
tid j2814 <|@
result v162|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 26]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
resultBits: 64
stamp: i64 [-2147483648 - 2147483644] ⇈fffffffffffffffc
=== Inputs ===
value: i2813 
=== Succesors ===
=== Usages ===
j2815 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2813  <|@  <|@
f <@~|@floating>@ <|@
tid j2815 <|@
result v164|QWORD[.] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 27]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: i64
=== Inputs ===
x: j2811 
y: j2814 
=== Succesors ===
=== Usages ===
j2816 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2811 y: j2814  <|@  <|@
f <@~|@floating>@ <|@
tid j2816 <|@
result v165|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 34]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j2815 
y: i2735 
=== Succesors ===
=== Usages ===
j2817 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j2815 y: i2735  <|@  <|@
f <@~|@floating>@ <|@
tid j2810 <|@
result v166|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:159) [bci: 24]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j2809 
y: i2735 
=== Succesors ===
=== Usages ===
j2817 j2830 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j2809 y: i2735  <|@  <|@
f <@~|@floating>@ <|@
tid j2817 <|@
result v168|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:161) [bci: 41]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: i64 [-36028797018963967 - 36028797018963967]
=== Inputs ===
x: j2816 
y: j2810 
=== Succesors ===
=== Usages ===
j2818 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j2816 y: j2810  <|@  <|@
f <@~|@floating>@ <|@
tid j2818 <|@
result v169|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:161) [bci: 43]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: i64 [-36028797018963966 - 36028797018963968]
=== Inputs ===
x: j2817 
y: j2632 
=== Succesors ===
=== Usages ===
j2821 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2817 y: j2632  <|@  <|@
f <@*|@fixed>@ <|@
tid v2819 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2820 
=== Predecessor ===
j2811 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v160|DWORD = DEC v115|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v161|DWORD = SHL v160|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v162|QWORD = MOVSXD v161|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v163|QWORD[.] = LEA [v126|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v164|QWORD[.] = ADD (x: v163|QWORD[.], y: v162|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v165|QWORD[*] = SHR v164|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v167|QWORD[.] = LEA [v126|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v166|QWORD[*] = SHR v167|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v168|QWORD[*] = SUB (x: v165|QWORD[*], ~y: v166|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v169|QWORD[*] = INC v168|QWORD[*] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v169|QWORD[*]] destination: B165 -> B166 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B166"
    from_bci -1
    to_bci -1
    predecessors "B165" "B171" 
    successors "B167" "B171" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 2
    probability 4575305213314078916
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2821 <|@
result v170|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2820 
values: j2818 j2822 
=== Succesors ===
=== Usages ===
j2822 v2823 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2820 values: j2818 j2822  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2820 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 2.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v2819 
=== Succesors ===
next: v2826 
=== Usages ===
j2821 v2824 v2829 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v2819 #next: v2826  <|@  <|@
f <@~|@floating>@ <|@
tid v2823 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 55]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2821 
y: j2632 
=== Succesors ===
=== Usages ===
v2826 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2821 y: j2632  <|@  <|@
f <@*|@fixed>@ <|@
tid v2826 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 55]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v2823 
=== Succesors ===
trueSuccessor: v2824 
falseSuccessor: v2825 
=== Usages ===
=== Predecessor ===
v2820 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2823 #trueSuccessor: v2824 #falseSuccessor: v2825  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v170|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v170|QWORD[*] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B166 -> B167 falseDestination: B166 -> B171 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B167"
    from_bci -1
    to_bci -1
    predecessors "B166" 
    successors "B168" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570801613686708420
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2824 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:165) [bci: 76]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v2820 
=== Succesors ===
next: v2833 
=== Usages ===
=== Predecessor ===
v2826 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v2820 #next: v2833  <|@  <|@
f <@*|@fixed>@ <|@
tid v2833 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2831 
=== Predecessor ===
v2824 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B167 -> B168 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B168"
    from_bci -1
    to_bci -1
    predecessors "B164" "B167" 
    successors "B169" "B170" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4575305213314078916
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2831 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2832 v2833 
=== Succesors ===
next: a2335 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2832 v2833 #next: a2335  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2335 <|@
result v126|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a2776 
=== Succesors ===
next: v4372 
=== Usages ===
v4445 a505 ?517 v4400 
=== Predecessor ===
v2831 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a2776 #next: v4372  <|@  <|@
f <@~|@floating>@ <|@
tid v4445 <|@
result [v126|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a2335 
index: - 
=== Succesors ===
=== Usages ===
v4372 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2335 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4372 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v4445 
=== Succesors ===
next: v1959 
=== Usages ===
v3239 
=== Predecessor ===
a2335 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4445 #next: v1959  <|@  <|@
f <@~|@floating>@ <|@
tid v3239 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v4372 
y: v3223 
=== Succesors ===
=== Usages ===
v1959 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v4372 y: v3223  <|@  <|@
f <@*|@fixed>@ <|@
tid v1959 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v3239 
=== Succesors ===
trueSuccessor: v1955 
falseSuccessor: v1958 
=== Usages ===
=== Predecessor ===
v4372 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3239 #trueSuccessor: v1955 #falseSuccessor: v1958  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v126|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B168 -> B169 falseDestination: B168 -> B170 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B169"
    from_bci -1
    to_bci -1
    predecessors "B168" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4575305213314078916
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1955 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1679 
=== Usages ===
=== Predecessor ===
v1959 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1679  <|@  <|@
f <@~|@floating>@ <|@
tid v4400 <|@
result [v126|QWORD[.] + v21|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a2335 
index: i503 
=== Succesors ===
=== Usages ===
v1679 j2838 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2335 index: i503  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1679 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:463) [bci: 26]
at java.lang.String.split(String.java:2353) [bci: 165]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1950 
address: v4400 
value: a1667 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j2838 
=== Usages ===
=== Predecessor ===
v1955 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1950 address: v4400 value: a1667 stateAfter: - lastLocationAccess: - #next: j2838  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2838 <|@
result [v126|QWORD[.] + v21|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at java.util.ArrayList.add(ArrayList.java:463) [bci: 26]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v4400 
=== Succesors ===
next: v2842 
=== Usages ===
j2839 
=== Predecessor ===
v1679 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v4400 #next: v2842  <|@  <|@
f <@~|@floating>@ <|@
tid j2839 <|@
result v171|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.ArrayList.add(ArrayList.java:463) [bci: 26]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j2838 
y: i2735 
=== Succesors ===
=== Usages ===
v4446 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j2838 y: i2735  <|@  <|@
f <@~|@floating>@ <|@
tid v4446 <|@
result [v171|QWORD[*] + v16|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2839 
index: j2739 
=== Succesors ===
=== Usages ===
v2842 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2839 index: j2739  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2842 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.ArrayList.add(ArrayList.java:463) [bci: 26]
at java.lang.String.split(String.java:2353) [bci: 165]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4446 
value: i2741 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1807 
=== Usages ===
=== Predecessor ===
j2838 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4446 value: i2741 stateAfter: - lastLocationAccess: - #next: v1807  <|@  <|@
tid ?517 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a244 
values: i4345 i4345 a2335 
=== Succesors ===
=== Usages ===
?143 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a244 values: i4345 i4345 a2335  <|@  <|@
tid ?143 <|@
d <@d|@=== Debug Properties ===
bci: 27
code: ResolvedJavaMethodBytecode<ArrayList.add(Object)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:463) [bci: 26]
at java.lang.String.split(String.java:2353) [bci: 165]
rethrowException: false
sourceFile: ArrayList.java
sourceLine: 464
stackSize: 0
=== Inputs ===
outerFrameState: ?145 
values: a244 a348 
virtualObjectMappings: ?517 
=== Succesors ===
=== Usages ===
v1807 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?145 values: a244 a348 virtualObjectMappings: ?517  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1807 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?143 
=== Succesors ===
next: v54 
=== Usages ===
=== Predecessor ===
v2842 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?143 #next: v54  <|@  <|@
f <@*|@fixed>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at java.lang.String.split(String.java:2351) [bci: 125]
stamp: void
=== Inputs ===
loopBegin: v33 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1807 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v33  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v126|QWORD[.] + v21|DWORD * 4 + 16], y: v108|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v172|QWORD[.] = LEA [v126|QWORD[.] + v21|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v171|QWORD[*] = SHR v172|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v171|QWORD[*] + v16|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.add(ArrayList.java:464) [bci: 27]
locals: vobject:ArrayList:0{modCount=v103|DWORD,size=v103|DWORD,elementData=v126|QWORD[.]} v102|QWORD[.] 
java.lang.String.split(String.java:2353) [bci: 165]
locals: v0|QWORD[.] - int[0|0x0] v11|DWORD - v28|DWORD int[0|0x0] vobject:ArrayList:0{modCount=v103|DWORD,size=v103|DWORD,elementData=v126|QWORD[.]} - - 
vobject:ArrayList:0{modCount=v103|DWORD,size=v103|DWORD,elementData=v126|QWORD[.]} Ljava/util/ArrayList; v103|DWORD v103|DWORD v126|QWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:27, 165] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v109|DWORD, v103|DWORD, v126|QWORD[.]] destination: B169 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B170"
    from_bci -1
    to_bci -1
    predecessors "B168" 
    successors "B175" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1958 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v33 
=== Succesors ===
next: v2477 
=== Usages ===
=== Predecessor ===
v1959 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v33 #next: v2477  <|@  <|@
f <@~|@floating>@ <|@
tid i2478 <|@
result int[-427836|0xfffffffffff978c4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -427836
stableDimension: 0
stamp: i32 [-427836] ⇊00000000fff978c4 ⇈00000000fff978c4
stampKind: i32
value: int[-427836|0xfffffffffff978c4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2468 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2477 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2464 
=== Predecessor ===
v1958 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-427836|0xfffffffffff978c4], v6|QWORD[.]] destination: B170 -> B175 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B171"
    from_bci -1
    to_bci -1
    predecessors "B166" 
    successors "B166" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 2
    probability 4570801613686708420
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2825 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 58]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2828 
=== Usages ===
=== Predecessor ===
v2826 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2828  <|@  <|@
f <@~|@floating>@ <|@
tid j2822 <|@
result v173|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 50]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: i64
=== Inputs ===
x: j2821 
y: j1816 
=== Succesors ===
=== Usages ===
j2821 j2827 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2821 y: j1816  <|@  <|@
f <@~|@floating>@ <|@
tid j2830 <|@
result v174|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 62]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: i64 [4682670080 - 36028801701634047] ⇈00ffffffffffffff
=== Inputs ===
x: j2810 
y: j2739 
=== Succesors ===
=== Usages ===
j2827 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2810 y: j2739  <|@  <|@
f <@~|@floating>@ <|@
tid j2827 <|@
result v175|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 65]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: i64
=== Inputs ===
x: j2822 
y: j2830 
=== Succesors ===
=== Usages ===
v2828 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2822 y: j2830  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2828 <|@
d <@d|@=== Debug Properties ===
kind: boolean
nodeSourcePosition: at org.graalvm.compiler.replacements.nodes.DirectStoreNode.storeBoolean(long, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 70]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: void
=== Inputs ===
address: j2827 
value: i5 
=== Succesors ===
next: v2829 
=== Usages ===
=== Predecessor ===
v2825 >@ <|@
instruction <@DirectStore|@org.graalvm.compiler.replacements.nodes.DirectStoreNode>@ address: j2827 value: i5 #next: v2829  <|@  <|@
f <@*|@fixed>@ <|@
tid v2829 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: void
=== Inputs ===
loopBegin: v2820 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2828 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v2820  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v173|QWORD[*] = DEC v170|QWORD[*] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v174|QWORD[*] = ADD (x: v166|QWORD[*], y: v16|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v175|QWORD[*] = ADD (x: v174|QWORD[*], y: v173|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v175|QWORD[*]], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v173|QWORD[*]] destination: B171 -> B166 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B172"
    from_bci -1
    to_bci -1
    predecessors "B135" 
    successors "B135" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 2
    probability 4568637815896609427
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3542 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3541 
=== Usages ===
=== Predecessor ===
v3543 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3541  <|@  <|@
f <@*|@fixed>@ <|@
tid v3541 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v3537 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v3542 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v3537  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v134|QWORD] destination: B172 -> B135 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B173"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors "B175" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1953 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:463) [bci: 26]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v33 
=== Succesors ===
next: v2475 
=== Usages ===
=== Predecessor ===
v1954 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v33 #next: v2475  <|@  <|@
f <@~|@floating>@ <|@
tid i2476 <|@
result int[-428315|0xfffffffffff976e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -428315
stableDimension: 0
stamp: i32 [-428315] ⇊00000000fff976e5 ⇈00000000fff976e5
stampKind: i32
value: int[-428315|0xfffffffffff976e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2468 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2475 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2464 
=== Predecessor ===
v1953 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-428315|0xfffffffffff976e5], Object[null]] destination: B173 -> B175 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B174"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B175" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1948 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:262) [bci: 24]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v33 
=== Succesors ===
next: v2473 
=== Usages ===
=== Predecessor ===
v1949 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v33 #next: v2473  <|@  <|@
f <@~|@floating>@ <|@
tid i2474 <|@
result int[-427283|0xfffffffffff97aed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -427283
stableDimension: 0
stamp: i32 [-427283] ⇊00000000fff97aed ⇈00000000fff97aed
stampKind: i32
value: int[-427283|0xfffffffffff97aed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2468 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2473 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2464 
=== Predecessor ===
v1948 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-427283|0xfffffffffff97aed], Object[null]] destination: B174 -> B175 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B175"
    from_bci -1
    to_bci -1
    predecessors "B122" "B121" "B174" "B173" "B170" "B126" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i2468 <|@
result v176|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-563809 - -424252] ⇊00000000fff10084
valueDescription: i32
=== Inputs ===
merge: v2464 
values: i2466 i2472 i2474 i2476 i2478 i2480 
=== Succesors ===
=== Usages ===
v2470 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2464 values: i2466 i2472 i2474 i2476 i2478 i2480  <|@  <|@
f <@~|@floating>@ <|@
tid a2469 <|@
result v177|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/l/d$a;
valueDescription: a -
=== Inputs ===
merge: v2464 
values: a2467 a2214 a2214 a2214 a2467 a2214 
=== Succesors ===
=== Usages ===
v2470 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2464 values: a2467 a2214 a2214 a2214 a2467 a2214  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2464 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2465 v2471 v2473 v2475 v2477 v2479 
=== Succesors ===
next: v2470 
=== Usages ===
i2468 a2469 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2465 v2471 v2473 v2475 v2477 v2479 #next: v2470  <|@  <|@
f <@*|@fixed>@ <|@
tid v2470 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?170 
actionAndReason: i2468 
speculation: a2469 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2464 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?170 actionAndReason: i2468 speculation: a2469  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v176|DWORD, v177|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v176|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v177|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
stack: vobject:ArrayList:0{modCount=v21|DWORD,size=v21|DWORD,elementData=v22|QWORD[.]} v104|DWORD 
locals: - - 
java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
locals: vobject:ArrayList:0{modCount=v21|DWORD,size=v21|DWORD,elementData=v22|QWORD[.]} v102|QWORD[.] 
java.lang.String.split(String.java:2353) [bci: 165]
locals: v0|QWORD[.] - int[0|0x0] v11|DWORD - v28|DWORD int[0|0x0] vobject:ArrayList:0{modCount=v21|DWORD,size=v21|DWORD,elementData=v22|QWORD[.]} - - 
vobject:ArrayList:0{modCount=v21|DWORD,size=v21|DWORD,elementData=v22|QWORD[.]} Ljava/util/ArrayList; v21|DWORD v21|DWORD v22|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:9, 7, 165] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B176"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B74" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4577598346154074172
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3416 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3415 
=== Usages ===
=== Predecessor ===
v3417 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3415  <|@  <|@
f <@*|@fixed>@ <|@
tid v3415 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v3411 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v3416 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v3411  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v58|QWORD] destination: B176 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B177"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B34" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4629313874285517559
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v303 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1558) [bci: 55]
at java.lang.String.split(String.java:2351) [bci: 129]
stamp: void
=== Inputs ===
=== Succesors ===
next: v306 
=== Usages ===
=== Predecessor ===
v304 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v306  <|@  <|@
f <@~|@floating>@ <|@
tid i4332 <|@
result v178|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.String.split(String.java:2354) [bci: 172]
stamp: i32
=== Inputs ===
x: i291 
y: i8 
=== Succesors ===
=== Usages ===
i291 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i291 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v306 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.lang.String.indexOf(String.java:1558) [bci: 37]
at java.lang.String.split(String.java:2351) [bci: 129]
stamp: void
=== Inputs ===
loopBegin: v290 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v303 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v290  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v178|DWORD = INC v28|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v178|DWORD] destination: B177 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B178"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B185" 
    xhandlers
    flags 
    probability 4612561903300672132
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v295 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1563) [bci: 61]
at java.lang.String.split(String.java:2351) [bci: 129]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v290 
=== Succesors ===
next: v1490 
=== Usages ===
=== Predecessor ===
v297 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v290 #next: v1490  <|@  <|@
f <@*|@fixed>@ <|@
tid v1490 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1487 
=== Predecessor ===
v295 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B178 -> B185 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B179"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B181" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4264 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1559) [bci: 47]
at java.lang.String.split(String.java:2351) [bci: 129]
stamp: void
=== Inputs ===
=== Succesors ===
next: v4262 
=== Usages ===
=== Predecessor ===
v4265 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4262  <|@  <|@
f <@*|@fixed>@ <|@
tid v4262 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1559) [bci: 47]
at java.lang.String.split(String.java:2351) [bci: 129]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v4260 
=== Predecessor ===
v4264 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B179 -> B181 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B180"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B181" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4263 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1559) [bci: 47]
at java.lang.String.split(String.java:2351) [bci: 129]
stamp: void
=== Inputs ===
=== Succesors ===
next: v4261 
=== Usages ===
=== Predecessor ===
v4267 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4261  <|@  <|@
f <@*|@fixed>@ <|@
tid v4261 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1559) [bci: 47]
at java.lang.String.split(String.java:2351) [bci: 129]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v4260 
=== Predecessor ===
v4263 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B180 -> B181 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B181"
    from_bci -1
    to_bci -1
    predecessors "B180" "B179" 
    successors "B182" 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4260 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1559) [bci: 47]
at java.lang.String.split(String.java:2351) [bci: 129]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v4261 v4262 
=== Succesors ===
next: v1913 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v4261 v4262 #next: v1913  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B181 -> B182 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B182"
    from_bci -1
    to_bci -1
    predecessors "B181" 
    successors "B183" 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1913 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1559) [bci: 47]
at java.lang.String.split(String.java:2351) [bci: 129]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v33 
=== Succesors ===
next: v2435 
=== Usages ===
=== Predecessor ===
v4260 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v33 #next: v2435  <|@  <|@
f <@~|@floating>@ <|@
tid a2437 <|@
result v179|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@180539890
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@180539890]
=== Inputs ===
=== Succesors ===
=== Usages ===
a2433 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2436 <|@
result int[-421147|0xfffffffffff992e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -421147
stableDimension: 0
stamp: i32 [-421147] ⇊00000000fff992e5 ⇈00000000fff992e5
stampKind: i32
value: int[-421147|0xfffffffffff992e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2432 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2435 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2429 
=== Predecessor ===
v1913 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v179|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@180539890] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-421147|0xfffffffffff992e5], v179|QWORD[.]] destination: B182 -> B183 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B183"
    from_bci -1
    to_bci -1
    predecessors "B29" "B182" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i2432 <|@
result v180|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-421147 - -420371] ⇊00000000fff990e5 ⇈00000000fff997ed
valueDescription: i32
=== Inputs ===
merge: v2429 
values: i2431 i2436 
=== Succesors ===
=== Usages ===
v2434 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2429 values: i2431 i2436  <|@  <|@
f <@~|@floating>@ <|@
tid a2433 <|@
result v181|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/k/d$a;
valueDescription: a -
=== Inputs ===
merge: v2429 
values: a2214 a2437 
=== Succesors ===
=== Usages ===
v2434 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2429 values: a2214 a2437  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2429 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2430 v2435 
=== Succesors ===
next: v2434 
=== Usages ===
i2432 a2433 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2430 v2435 #next: v2434  <|@  <|@
tid ?35 <|@
d <@d|@=== Debug Properties ===
bci: 125
code: ResolvedJavaMethodBytecode<String.split(String, int)>
duringCall: false
localsSize: 10
locksSize: 0
rethrowException: false
sourceFile: String.java
sourceLine: 2351
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - i5 i1630 i34 - i5 a244 - - 
virtualObjectMappings: ?521 
=== Succesors ===
=== Usages ===
v2434 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - i5 i1630 i34 - i5 a244 - - virtualObjectMappings: ?521  <|@  <|@
f <@*|@fixed>@ <|@
tid v2434 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?35 
actionAndReason: i2432 
speculation: a2433 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2429 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?35 actionAndReason: i2432 speculation: a2433  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v180|DWORD, v181|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v180|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v181|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.split(String.java:2351) [bci: 125]
locals: v0|QWORD[.] - int[0|0x0] v11|DWORD v20|DWORD - int[0|0x0] vobject:ArrayList:0{modCount=v21|DWORD,size=v21|DWORD,elementData=v22|QWORD[.]} - - 
vobject:ArrayList:0{modCount=v21|DWORD,size=v21|DWORD,elementData=v22|QWORD[.]} Ljava/util/ArrayList; v21|DWORD v21|DWORD v22|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:125] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B184"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B185" 
    xhandlers
    flags 
    probability 4604782905894847016
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v285 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:1551) [bci: 20]
at java.lang.String.split(String.java:2351) [bci: 129]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1519 
=== Usages ===
=== Predecessor ===
v286 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1519  <|@  <|@
f <@*|@fixed>@ <|@
tid v1519 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1487 
=== Predecessor ===
v285 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B184 -> B185 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B185"
    from_bci -1
    to_bci -1
    predecessors "B37" "B178" "B184" 
    successors "B186" 
    xhandlers
    flags 
    probability 4614248496590463470
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1487 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1488 v1490 v1519 
=== Succesors ===
next: v41 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1488 v1490 v1519 #next: v41  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B185 -> B186 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B186"
    from_bci -1
    to_bci -1
    predecessors "B185" 
    successors "B187" "B191" 
    xhandlers
    flags 
    probability 4614248496590463470
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.split(String.java:2363) [bci: 205]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v33 
=== Succesors ===
next: v58 
=== Usages ===
=== Predecessor ===
v1487 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v33 #next: v58  <|@  <|@
tid ?1489 <|@
d <@d|@=== Debug Properties ===
bci: 132
code: ResolvedJavaMethodBytecode<String.split(String, int)>
duringCall: false
localsSize: 10
locksSize: 0
nodeSourcePosition: at java.lang.String.split(String.java:2351) [bci: 129]
rethrowException: false
sourceFile: String.java
sourceLine: 2351
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 - i5 i1630 i34 - i5 a244 - - i19 
virtualObjectMappings: ?521 
=== Succesors ===
=== Usages ===
a2856 v2528 a2905 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - i5 i1630 i34 - i5 a244 - - i19 virtualObjectMappings: ?521  <|@  <|@
f <@*|@fixed>@ <|@
tid v58 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.split(String.java:2363) [bci: 207]
stamp: void
trueSuccessorProbability: 0.013959872667270279
=== Inputs ===
condition: v324 
=== Succesors ===
trueSuccessor: v56 
falseSuccessor: v57 
=== Usages ===
=== Predecessor ===
v41 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v324 #trueSuccessor: v56 #falseSuccessor: v57  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v20|DWORD, y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.013959872667270279 condition: = trueDestination: B186 -> B187 falseDestination: B186 -> B191 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B187"
    from_bci -1
    to_bci -1
    predecessors "B186" 
    successors "B188" "B189" 
    xhandlers
    flags 
    probability 4586473879993340259
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v56 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.split(String.java:2364) [bci: 210]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2845 
=== Usages ===
=== Predecessor ===
v58 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2845  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2845 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j2860 
=== Usages ===
v4447 v4448 
=== Predecessor ===
v56 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j2860  <|@  <|@
f <@~|@floating>@ <|@
tid v4447 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j2845 
index: - 
=== Succesors ===
=== Usages ===
j2860 v2862 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2845 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2860 <|@
result v182|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v4447 
=== Succesors ===
next: j2861 
=== Usages ===
j3240 j2866 v4500 
=== Predecessor ===
j2845 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4447 #next: j2861  <|@  <|@
f <@~|@floating>@ <|@
tid v4448 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j2845 
index: - 
=== Succesors ===
=== Usages ===
j2861 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2845 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2861 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v4448 
=== Succesors ===
next: v2853 
=== Usages ===
v2850 
=== Predecessor ===
j2860 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4448 #next: v2853  <|@  <|@
f <@~|@floating>@ <|@
tid j3240 <|@
result v183|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2860 
y: j3225 
=== Succesors ===
=== Usages ===
v2850 v2862 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2860 y: j3225  <|@  <|@
f <@~|@floating>@ <|@
tid v2850 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2861 
y: j3240 
=== Succesors ===
=== Usages ===
v2853 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j2861 y: j3240  <|@  <|@
f <@*|@fixed>@ <|@
tid v2853 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v2850 
=== Succesors ===
trueSuccessor: v2851 
falseSuccessor: v2852 
=== Usages ===
=== Predecessor ===
j2861 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2850 #trueSuccessor: v2851 #falseSuccessor: v2852  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v182|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v183|QWORD = LEA [v182|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v183|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B187 -> B188 falseDestination: B187 -> B189 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B188"
    from_bci -1
    to_bci -1
    predecessors "B187" 
    successors "B190" 
    xhandlers
    flags 
    probability 4556716339109859626
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2851 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a2856 
=== Usages ===
=== Predecessor ===
v2853 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2856  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2856 <|@
result v184|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?1489 
arguments: v2582 i1663 i8 
=== Succesors ===
next: j2857 
=== Usages ===
j2857 
=== Predecessor ===
v2851 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?1489 arguments: v2582 i1663 i8 #next: j2857  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2857 <|@
result v184|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a2856 
=== Succesors ===
next: v2867 
=== Usages ===
j2866 
=== Predecessor ===
a2856 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a2856 #next: v2867  <|@  <|@
f <@*|@fixed>@ <|@
tid v2867 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2864 
=== Predecessor ===
j2857 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v18|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.split(String.java:2351) [bci: 132]
stack: int[-1|0xffffffffffffffff] 
locals: v0|QWORD[.] - int[0|0x0] v11|DWORD v20|DWORD - int[0|0x0] vobject:ArrayList:0{modCount=v21|DWORD,size=v21|DWORD,elementData=v22|QWORD[.]} - - 
vobject:ArrayList:0{modCount=v21|DWORD,size=v21|DWORD,elementData=v22|QWORD[.]} Ljava/util/ArrayList; v21|DWORD v21|DWORD v22|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:132] <|@ <|@
      nr   -1  <|@ instruction v184|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v184|QWORD[.]] destination: B188 -> B190 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B189"
    from_bci -1
    to_bci -1
    predecessors "B187" 
    successors "B190" 
    xhandlers
    flags 
    probability 4586410749403764801
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2852 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2862 
=== Usages ===
=== Predecessor ===
v2853 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2862  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2862 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4447 
value: j3240 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2859 
=== Usages ===
=== Predecessor ===
v2852 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4447 value: j3240 stateAfter: - lastLocationAccess: - #next: v2859  <|@  <|@
f <@~|@floating>@ <|@
tid v4500 <|@
result [v182|QWORD + 216] <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j2860 
index: - 
=== Succesors ===
=== Usages ===
v2859 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2860 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2859 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v4500 
=== Succesors ===
next: v2865 
=== Usages ===
=== Predecessor ===
v2862 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v4500 #next: v2865  <|@  <|@
f <@*|@fixed>@ <|@
tid v2865 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2864 
=== Predecessor ===
v2859 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v183|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v182|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v182|QWORD] destination: B189 -> B190 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B190"
    from_bci -1
    to_bci -1
    predecessors "B189" "B188" 
    successors 
    xhandlers
    flags 
    probability 4586473879993340259
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2866 <|@
result v185|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2864 
values: j2860 j2857 
=== Succesors ===
=== Usages ===
v4451 v4409 a2071 v4449 v4450 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2864 values: j2860 j2857  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2864 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2865 v2867 
=== Succesors ===
next: a2071 
=== Usages ===
j2866 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2865 v2867 #next: a2071  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2071 <|@
result v186|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j2866 
=== Succesors ===
next: v2876 
=== Usages ===
a2077 
=== Predecessor ===
v2864 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j2866 #next: v2876  <|@  <|@
f <@~|@floating>@ <|@
tid v4449 <|@
result [v185|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j2866 
index: - 
=== Succesors ===
=== Usages ===
v2876 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2866 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2876 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4449 
value: i8 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2877 
=== Usages ===
=== Predecessor ===
a2071 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4449 value: i8 stateAfter: - lastLocationAccess: - #next: v2877  <|@  <|@
f <@~|@floating>@ <|@
tid v4450 <|@
result [v185|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2866 
index: - 
=== Succesors ===
=== Usages ===
v2877 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2866 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2877 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4450 
value: j2632 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2880 
=== Usages ===
=== Predecessor ===
v2876 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4450 value: j2632 stateAfter: - lastLocationAccess: - #next: v2880  <|@  <|@
f <@~|@floating>@ <|@
tid v4451 <|@
result [v185|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j2866 
index: - 
=== Succesors ===
=== Usages ===
v2880 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2866 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2880 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4451 
value: v3243 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2076 
=== Usages ===
=== Predecessor ===
v2877 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4451 value: v3243 stateAfter: - lastLocationAccess: - #next: v2076  <|@  <|@
f <@~|@floating>@ <|@
tid v4409 <|@
result [v185|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j2866 
index: - 
=== Succesors ===
=== Usages ===
v2076 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2866 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a2074 <|@
result v187|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n!# Ljava/lang/String;
=== Inputs ===
value: a1 
=== Succesors ===
=== Usages ===
v2076 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2076 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4409 
value: a2074 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a2077 
=== Usages ===
=== Predecessor ===
v2880 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4409 value: a2074 stateAfter: - lastLocationAccess: - #next: a2077  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2077 <|@
result v186|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a2071 
=== Succesors ===
next: v2078 
=== Usages ===
v62 
=== Predecessor ===
v2076 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a2071 #next: v2078  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2078 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v62 
=== Usages ===
=== Predecessor ===
a2077 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v62  <|@  <|@
f <@*|@fixed>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.split(String.java:2364) [bci: 218]
stamp: void
=== Inputs ===
result: a2077 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2078 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a2077 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v185|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v186|QWORD[.] = MOVE v185|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v185|QWORD[*] + 12] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v185|QWORD[*]] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v185|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v187|DWORD[.] = COMPRESSPOINTER (input: v0|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@120cc8dc encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v185|QWORD[*] + 16], y: v187|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v186|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B191"
    from_bci -1
    to_bci -1
    predecessors "B186" 
    successors "B192" "B193" 
    xhandlers
    flags 
    probability 4614149855044251816
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.split(String.java:2367) [bci: 219]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1963 
=== Usages ===
=== Predecessor ===
v58 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1963  <|@  <|@
f <@~|@floating>@ <|@
tid v356 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.substring(String.java:1966) [bci: 36]
at java.lang.String.split(String.java:2368) [bci: 243]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i355 
y: i5 
=== Succesors ===
=== Usages ===
v1963 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i355 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v1963 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1966) [bci: 36]
at java.lang.String.split(String.java:2368) [bci: 243]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v356 
=== Succesors ===
trueSuccessor: v1962 
falseSuccessor: v1960 
=== Usages ===
=== Predecessor ===
v57 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v356 #trueSuccessor: v1962 #falseSuccessor: v1960  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v23|DWORD, y: v23|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B191 -> B192 falseDestination: B191 -> B193 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B192"
    from_bci -1
    to_bci -1
    predecessors "B191" 
    successors "B203" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1962 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1966) [bci: 36]
at java.lang.String.split(String.java:2368) [bci: 243]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2524 
=== Usages ===
=== Predecessor ===
v1963 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2524  <|@  <|@
f <@~|@floating>@ <|@
tid i2525 <|@
result int[-430867|0xfffffffffff96ced] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -430867
stableDimension: 0
stamp: i32 [-430867] ⇊00000000fff96ced ⇈00000000fff96ced
stampKind: i32
value: int[-430867|0xfffffffffff96ced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2526 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2524 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2523 
=== Predecessor ===
v1962 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-430867|0xfffffffffff96ced]] destination: B192 -> B203 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B193"
    from_bci -1
    to_bci -1
    predecessors "B191" 
    successors "B194" "B201" 
    xhandlers
    flags 
    probability 4614149855044251816
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1960 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1966) [bci: 36]
at java.lang.String.split(String.java:2368) [bci: 243]
stamp: void
=== Inputs ===
=== Succesors ===
next: v563 
=== Usages ===
=== Predecessor ===
v1963 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v563  <|@  <|@
f <@~|@floating>@ <|@
tid i396 <|@
result v188|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:235) [bci: 6]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: i32
=== Inputs ===
x: i503 
y: i8 
=== Succesors ===
=== Usages ===
?1007 i240 v4344 i240 ?1467 v4343 ?1467 i240 ?1002 i240 i79 v186 v587 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i503 y: i8  <|@  <|@
f <@~|@floating>@ <|@
tid v227 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.ArrayList.calculateCapacity(ArrayList.java:224) [bci: 4]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a505 
y: a127 
=== Succesors ===
=== Usages ===
v230 v1441 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a505 y: a127  <|@  <|@
f <@~|@floating>@ <|@
tid v4350 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.<init>(String.java:198) [bci: 37]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4359 
y: i34 
=== Succesors ===
=== Usages ===
v1967 v2248 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i4359 y: i34  <|@  <|@
f <@~|@floating>@ <|@
tid v560 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.<init>(String.java:194) [bci: 18]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2368) [bci: 243]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i355 
y: i8 
=== Succesors ===
=== Usages ===
v563 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i355 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v563 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:194) [bci: 18]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2368) [bci: 243]
stamp: void
trueSuccessorProbability: 0.09284041465770032
=== Inputs ===
condition: v560 
=== Succesors ===
trueSuccessor: v561 
falseSuccessor: v562 
=== Usages ===
=== Predecessor ===
v1960 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v560 #trueSuccessor: v561 #falseSuccessor: v562  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v188|DWORD = INC v21|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v23|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09284041465770032 condition: < trueDestination: B193 -> B194 falseDestination: B193 -> B201 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B194"
    from_bci -1
    to_bci -1
    predecessors "B193" 
    successors "B195" "B196" 
    xhandlers
    flags 
    probability 4598846497278032421
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v561 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:195) [bci: 21]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2368) [bci: 243]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1967 
=== Usages ===
=== Predecessor ===
v563 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1967  <|@  <|@
f <@*|@fixed>@ <|@
tid v1967 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:198) [bci: 37]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2368) [bci: 243]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v4350 
=== Succesors ===
trueSuccessor: v1966 
falseSuccessor: v1964 
=== Usages ===
=== Predecessor ===
v561 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4350 #trueSuccessor: v1966 #falseSuccessor: v1964  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v20|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B194 -> B195 falseDestination: B194 -> B196 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B195"
    from_bci -1
    to_bci -1
    predecessors "B194" 
    successors "B203" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1966 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:198) [bci: 37]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2368) [bci: 243]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2529 
=== Usages ===
=== Predecessor ===
v1967 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2529  <|@  <|@
f <@~|@floating>@ <|@
tid i2530 <|@
result int[-452627|0xfffffffffff917ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -452627
stableDimension: 0
stamp: i32 [-452627] ⇊00000000fff917ed ⇈00000000fff917ed
stampKind: i32
value: int[-452627|0xfffffffffff917ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2526 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2529 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2523 
=== Predecessor ===
v1966 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-452627|0xfffffffffff917ed]] destination: B195 -> B203 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B196"
    from_bci -1
    to_bci -1
    predecessors "B194" 
    successors "B197" "B200" 
    xhandlers
    flags 
    probability 4598846497278032421
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1964 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:198) [bci: 37]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2368) [bci: 243]
stamp: void
=== Inputs ===
=== Succesors ===
next: v230 
=== Usages ===
=== Predecessor ===
v1967 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v230  <|@  <|@
f <@~|@floating>@ <|@
tid a452 <|@
result v189|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.<init>(String.java:199) [bci: 43]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2353) [bci: 162]
rawvalue: char[0]{}
stableDimension: 1
stamp: a!# [C
stampKind: a -
value: Object[char[0]{}]
=== Inputs ===
=== Succesors ===
=== Usages ===
a1578 a1578 a1578 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.calculateCapacity(ArrayList.java:224) [bci: 4]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: void
trueSuccessorProbability: 0.2066504369952622
=== Inputs ===
condition: v227 
=== Succesors ===
trueSuccessor: v228 
falseSuccessor: v229 
=== Usages ===
=== Predecessor ===
v1964 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v227 #trueSuccessor: v228 #falseSuccessor: v229  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v189|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[0]{}] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v19|QWORD[.], y: v22|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.2066504369952622 condition: = trueDestination: B196 -> B197 falseDestination: B196 -> B200 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B197"
    from_bci -1
    to_bci -1
    predecessors "B196" 
    successors "B198" "B199" 
    xhandlers
    flags 
    probability 4588715946378730674
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v228 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.calculateCapacity(ArrayList.java:225) [bci: 7]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: void
=== Inputs ===
=== Succesors ===
next: v234 
=== Usages ===
=== Predecessor ===
v230 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v234  <|@  <|@
f <@~|@floating>@ <|@
tid v4343 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at java.util.ArrayList.calculateCapacity(ArrayList.java:225) [bci: 10]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i396 
y: i194 
=== Succesors ===
=== Usages ===
v234 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i396 y: i194  <|@  <|@
f <@*|@fixed>@ <|@
tid v234 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at java.util.ArrayList.calculateCapacity(ArrayList.java:225) [bci: 10]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: void
trueSuccessorProbability: 0.7308950256495741
=== Inputs ===
condition: v4343 
=== Succesors ===
trueSuccessor: v232 
falseSuccessor: v233 
=== Usages ===
=== Predecessor ===
v228 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4343 #trueSuccessor: v232 #falseSuccessor: v233  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v188|DWORD y: 11 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7308950256495741 condition: < trueDestination: B197 -> B198 falseDestination: B197 -> B199 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B198"
    from_bci -1
    to_bci -1
    predecessors "B197" 
    successors "B232" 
    xhandlers
    flags 
    probability 4586413719592755138
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v232 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 5]
at java.util.ArrayList.calculateCapacity(ArrayList.java:225) [bci: 10]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: void
=== Inputs ===
=== Succesors ===
next: v241 
=== Usages ===
=== Predecessor ===
v234 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v241  <|@  <|@
f <@*|@fixed>@ <|@
tid v241 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v238 
=== Predecessor ===
v232 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[10|0xa], v189|QWORD[.], NarrowOop[char[0]{}]] destination: B198 -> B232 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B199"
    from_bci -1
    to_bci -1
    predecessors "B197" 
    successors "B232" 
    xhandlers
    flags 
    probability 4580261674980375008
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v233 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 9]
at java.util.ArrayList.calculateCapacity(ArrayList.java:225) [bci: 10]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: void
=== Inputs ===
=== Succesors ===
next: v242 
=== Usages ===
=== Predecessor ===
v234 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v242  <|@  <|@
f <@*|@fixed>@ <|@
tid v242 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v238 
=== Predecessor ===
v233 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v188|DWORD, v189|QWORD[.], NarrowOop[char[0]{}]] destination: B199 -> B232 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B200"
    from_bci -1
    to_bci -1
    predecessors "B196" 
    successors "B232" 
    xhandlers
    flags 
    probability 4597378993675054365
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v229 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.calculateCapacity(ArrayList.java:227) [bci: 14]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: void
=== Inputs ===
=== Succesors ===
next: v239 
=== Usages ===
=== Predecessor ===
v230 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v239  <|@  <|@
f <@*|@fixed>@ <|@
tid v239 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v238 
=== Predecessor ===
v229 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v188|DWORD, v189|QWORD[.], NarrowOop[char[0]{}]] destination: B200 -> B232 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B201"
    from_bci -1
    to_bci -1
    predecessors "B193" 
    successors "B202" "B204" 
    xhandlers
    flags 
    probability 4613502995374236003
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v562 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 50]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2368) [bci: 243]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2248 
=== Usages ===
=== Predecessor ===
v563 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2248  <|@  <|@
f <@*|@fixed>@ <|@
tid v2248 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:186) [bci: 52]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2368) [bci: 243]
stamp: void
trueSuccessorProbability: 9.999999999998899E-5
=== Inputs ===
condition: v4350 
=== Succesors ===
trueSuccessor: v2247 
falseSuccessor: v2245 
=== Usages ===
=== Predecessor ===
v562 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4350 #trueSuccessor: v2247 #falseSuccessor: v2245  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v20|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 9.999999999998899E-5 condition: > trueDestination: B201 -> B202 falseDestination: B201 -> B204 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B202"
    from_bci -1
    to_bci -1
    predecessors "B201" 
    successors "B203" 
    xhandlers
    flags 
    probability 4553813439973800263
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2247 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:187) [bci: 55]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2368) [bci: 243]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2567 
=== Usages ===
=== Predecessor ===
v2248 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2567  <|@  <|@
f <@~|@floating>@ <|@
tid i2532 <|@
result int[-575841|0xfffffffffff7369f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -575841
stableDimension: 0
stamp: i32 [-575841] ⇊00000000fff7369f ⇈00000000fff7369f
stampKind: i32
value: int[-575841|0xfffffffffff7369f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2526 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2567 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:187) [bci: 55]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2368) [bci: 243]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2523 
=== Predecessor ===
v2247 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-575841|0xfffffffffff7369f]] destination: B202 -> B203 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B203"
    from_bci -1
    to_bci -1
    predecessors "B192" "B195" "B202" 
    successors 
    xhandlers
    flags 
    probability 4553813439973800263
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i2526 <|@
result v190|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-575841 - -430867] ⇊00000000fff1048d ⇈00000000ffff7fff
valueDescription: i32
=== Inputs ===
merge: v2523 
values: i2525 i2530 i2532 
=== Succesors ===
=== Usages ===
v2528 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2523 values: i2525 i2530 i2532  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2523 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2524 v2529 v2567 
=== Succesors ===
next: v2528 
=== Usages ===
i2526 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2524 v2529 v2567 #next: v2528  <|@  <|@
f <@*|@fixed>@ <|@
tid v2528 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?1489 
actionAndReason: i2526 
speculation: a2214 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2523 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?1489 actionAndReason: i2526 speculation: a2214  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v190|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v190|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.split(String.java:2351) [bci: 132]
stack: int[-1|0xffffffffffffffff] 
locals: v0|QWORD[.] - int[0|0x0] v11|DWORD v20|DWORD - int[0|0x0] vobject:ArrayList:0{modCount=v21|DWORD,size=v21|DWORD,elementData=v22|QWORD[.]} - - 
vobject:ArrayList:0{modCount=v21|DWORD,size=v21|DWORD,elementData=v22|QWORD[.]} Ljava/util/ArrayList; v21|DWORD v21|DWORD v22|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:132] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B204"
    from_bci -1
    to_bci -1
    predecessors "B201" 
    successors "B205" "B208" 
    xhandlers
    flags 
    probability 4613502363316578581
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2245 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:189) [bci: 64]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2368) [bci: 243]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2885 
=== Usages ===
=== Predecessor ===
v2248 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2885  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2885 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2368) [bci: 243]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j2921 
=== Usages ===
v4452 v4453 
=== Predecessor ===
v2245 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j2921  <|@  <|@
f <@~|@floating>@ <|@
tid v4452 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j2885 
index: - 
=== Succesors ===
=== Usages ===
j2921 v2923 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2885 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2921 <|@
result v191|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2368) [bci: 243]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v4452 
=== Succesors ===
next: j2922 
=== Usages ===
j2889 v4454 v4455 a2904 v4460 v4456 v4457 v4458 v4459 
=== Predecessor ===
j2885 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4452 #next: j2922  <|@  <|@
f <@~|@floating>@ <|@
tid v4453 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j2885 
index: - 
=== Succesors ===
=== Usages ===
j2922 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2885 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2922 <|@
result v192|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2368) [bci: 243]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v4453 
=== Succesors ===
next: v2893 
=== Usages ===
v2894 
=== Predecessor ===
j2921 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4453 #next: v2893  <|@  <|@
f <@~|@floating>@ <|@
tid v2890 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2368) [bci: 243]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i355 
y: i2641 
=== Succesors ===
=== Usages ===
v2893 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i355 y: i2641  <|@  <|@
f <@*|@fixed>@ <|@
tid v2893 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2368) [bci: 243]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v2890 
=== Succesors ===
trueSuccessor: v2892 
falseSuccessor: v2891 
=== Usages ===
=== Predecessor ===
j2922 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2890 #trueSuccessor: v2892 #falseSuccessor: v2891  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v191|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v192|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v23|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B204 -> B205 falseDestination: B204 -> B208 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B205"
    from_bci -1
    to_bci -1
    predecessors "B204" 
    successors "B206" "B207" 
    xhandlers
    flags 
    probability 4612870368864922464
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2892 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2368) [bci: 243]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2900 
=== Usages ===
=== Predecessor ===
v2893 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2900  <|@  <|@
f <@~|@floating>@ <|@
tid i2883 <|@
result v193|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2368) [bci: 243]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i355 
y: i8 
=== Succesors ===
=== Usages ===
i2912 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i355 y: i8  <|@  <|@
f <@~|@floating>@ <|@
tid i2912 <|@
result v194|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2368) [bci: 243]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i2883 
y: i2664 
=== Succesors ===
=== Usages ===
i2884 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2883 y: i2664  <|@  <|@
f <@~|@floating>@ <|@
tid i2884 <|@
result v195|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2368) [bci: 243]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i2912 
y: i2634 
=== Succesors ===
=== Usages ===
j2888 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i2912 y: i2634  <|@  <|@
f <@~|@floating>@ <|@
tid j2888 <|@
result v196|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2368) [bci: 243]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i2884 
=== Succesors ===
=== Usages ===
j2889 v4456 v4457 v4458 v4459 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2884  <|@  <|@
f <@~|@floating>@ <|@
tid j2889 <|@
result v197|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2368) [bci: 243]
stamp: i64
=== Inputs ===
x: j2888 
y: j2921 
=== Succesors ===
=== Usages ===
v2894 v2923 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2888 y: j2921  <|@  <|@
f <@~|@floating>@ <|@
tid v2894 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2368) [bci: 243]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2922 
y: j2889 
=== Succesors ===
=== Usages ===
v2900 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j2922 y: j2889  <|@  <|@
f <@*|@fixed>@ <|@
tid v2900 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2368) [bci: 243]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v2894 
=== Succesors ===
trueSuccessor: v2899 
falseSuccessor: v2898 
=== Usages ===
=== Predecessor ===
v2892 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2894 #trueSuccessor: v2899 #falseSuccessor: v2898  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v193|DWORD = SHL v23|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v194|DWORD = LEA [v193|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v195|DWORD = AND v194|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v196|QWORD = MOVSXD v195|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v197|QWORD = ADD (x: v196|QWORD, y: v191|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v197|QWORD, y: v192|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B205 -> B206 falseDestination: B205 -> B207 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B206"
    from_bci -1
    to_bci -1
    predecessors "B205" 
    successors "B209" 
    xhandlers
    flags 
    probability 4582937797491502414
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2899 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2368) [bci: 243]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2897 
=== Usages ===
=== Predecessor ===
v2900 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2897  <|@  <|@
f <@*|@fixed>@ <|@
tid v2897 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2368) [bci: 243]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2896 
=== Predecessor ===
v2899 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B206 -> B209 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B207"
    from_bci -1
    to_bci -1
    predecessors "B205" 
    successors "B210" 
    xhandlers
    flags 
    probability 4612813489364273413
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2898 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2368) [bci: 243]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2923 
=== Usages ===
=== Predecessor ===
v2900 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2923  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2923 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2368) [bci: 243]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4452 
value: j2889 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2914 
=== Usages ===
=== Predecessor ===
v2898 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4452 value: j2889 stateAfter: - lastLocationAccess: - #next: v2914  <|@  <|@
f <@~|@floating>@ <|@
tid v4456 <|@
result [v196|QWORD + v191|QWORD * 1 + 192] <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j2888 
index: j2921 
=== Succesors ===
=== Usages ===
v2914 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2888 index: j2921  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2914 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2368) [bci: 243]
stamp: void
=== Inputs ===
address: v4456 
=== Succesors ===
next: v2916 
=== Usages ===
=== Predecessor ===
v2923 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v4456 #next: v2916  <|@  <|@
f <@~|@floating>@ <|@
tid v4457 <|@
result [v196|QWORD + v191|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j2888 
index: j2921 
=== Succesors ===
=== Usages ===
v2916 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2888 index: j2921  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2916 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2368) [bci: 243]
stamp: void
=== Inputs ===
address: v4457 
=== Succesors ===
next: v2918 
=== Usages ===
=== Predecessor ===
v2914 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v4457 #next: v2918  <|@  <|@
f <@~|@floating>@ <|@
tid v4458 <|@
result [v196|QWORD + v191|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j2888 
index: j2921 
=== Succesors ===
=== Usages ===
v2918 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2888 index: j2921  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2918 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2368) [bci: 243]
stamp: void
=== Inputs ===
address: v4458 
=== Succesors ===
next: v2920 
=== Usages ===
=== Predecessor ===
v2916 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v4458 #next: v2920  <|@  <|@
f <@~|@floating>@ <|@
tid v4459 <|@
result [v196|QWORD + v191|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j2888 
index: j2921 
=== Succesors ===
=== Usages ===
v2920 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2888 index: j2921  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2920 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2368) [bci: 243]
stamp: void
=== Inputs ===
address: v4459 
=== Succesors ===
next: v2924 
=== Usages ===
=== Predecessor ===
v2918 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v4459 #next: v2924  <|@  <|@
f <@~|@floating>@ <|@
tid v4454 <|@
result [v191|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j2921 
index: - 
=== Succesors ===
=== Usages ===
v2924 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2921 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2924 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2368) [bci: 243]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4454 
value: i355 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2925 
=== Usages ===
=== Predecessor ===
v2920 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4454 value: i355 stateAfter: - lastLocationAccess: - #next: v2925  <|@  <|@
f <@~|@floating>@ <|@
tid v4455 <|@
result [v191|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2921 
index: - 
=== Succesors ===
=== Usages ===
v2925 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2921 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2925 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2368) [bci: 243]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4455 
value: j2632 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2928 
=== Usages ===
=== Predecessor ===
v2924 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4455 value: j2632 stateAfter: - lastLocationAccess: - #next: v2928  <|@  <|@
f <@~|@floating>@ <|@
tid v4460 <|@
result [v191|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j2921 
index: - 
=== Succesors ===
=== Usages ===
v2928 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2921 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2928 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2368) [bci: 243]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4460 
value: v3233 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2903 
=== Usages ===
=== Predecessor ===
v2925 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4460 value: v3233 stateAfter: - lastLocationAccess: - #next: v2903  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2903 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2368) [bci: 243]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2904 
=== Usages ===
=== Predecessor ===
v2928 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a2904  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2904 <|@
result v198|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2368) [bci: 243]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j2921 
=== Succesors ===
next: v2906 
=== Usages ===
a2909 
=== Predecessor ===
v2903 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j2921 #next: v2906  <|@  <|@
f <@*|@fixed>@ <|@
tid v2906 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2368) [bci: 243]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2907 
=== Predecessor ===
a2904 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v197|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v196|QWORD + v191|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v196|QWORD + v191|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v196|QWORD + v191|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v196|QWORD + v191|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v191|QWORD + 12], y: v23|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v191|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v191|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v198|QWORD[.] = MOVE v191|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v198|QWORD[.]] destination: B207 -> B210 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B208"
    from_bci -1
    to_bci -1
    predecessors "B204" 
    successors "B209" 
    xhandlers
    flags 
    probability 4598727575531154857
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2891 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2368) [bci: 243]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2895 
=== Usages ===
=== Predecessor ===
v2893 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2895  <|@  <|@
f <@*|@fixed>@ <|@
tid v2895 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2368) [bci: 243]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2896 
=== Predecessor ===
v2891 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B208 -> B209 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B209"
    from_bci -1
    to_bci -1
    predecessors "B208" "B206" 
    successors "B210" 
    xhandlers
    flags 
    probability 4599182611536347262
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2896 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2368) [bci: 243]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2895 v2897 
=== Succesors ===
next: a2905 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2895 v2897 #next: a2905  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2905 <|@
result v199|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2368) [bci: 243]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?1489 
arguments: v2631 i355 i5 
=== Succesors ===
next: v2908 
=== Usages ===
a2909 
=== Predecessor ===
v2896 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?1489 arguments: v2631 i355 i5 #next: v2908  <|@  <|@
f <@*|@fixed>@ <|@
tid v2908 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2368) [bci: 243]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2907 
=== Predecessor ===
a2905 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v17|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v23|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.split(String.java:2351) [bci: 132]
stack: int[-1|0xffffffffffffffff] 
locals: v0|QWORD[.] - int[0|0x0] v11|DWORD v20|DWORD - int[0|0x0] vobject:ArrayList:0{modCount=v21|DWORD,size=v21|DWORD,elementData=v22|QWORD[.]} - - 
vobject:ArrayList:0{modCount=v21|DWORD,size=v21|DWORD,elementData=v22|QWORD[.]} Ljava/util/ArrayList; v21|DWORD v21|DWORD v22|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:132] <|@ <|@
      nr   -1  <|@ instruction v199|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v199|QWORD[.]] destination: B209 -> B210 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B210"
    from_bci -1
    to_bci -1
    predecessors "B207" "B209" 
    successors "B211" "B212" 
    xhandlers
    flags 
    probability 4613502363316578581
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a2909 <|@
result v200|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2368) [bci: 243]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v2907 
values: a2904 a2905 
=== Succesors ===
=== Usages ===
v4414 a2339 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2907 values: a2904 a2905  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2907 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2368) [bci: 243]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2906 v2908 
=== Succesors ===
next: v3755 
=== Usages ===
a2909 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2906 v2908 #next: v3755  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3755 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v3283 
=== Usages ===
j3756 j3758 
=== Predecessor ===
v2907 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v3283  <|@  <|@
f <@~|@floating>@ <|@
tid v4414 <|@
result [v200|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a2909 
index: - 
=== Succesors ===
=== Usages ===
j3758 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2909 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j3758 <|@
result v201|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v3755 
address: v4414 
=== Succesors ===
=== Usages ===
v4510 v4512 v4514 v4516 v4518 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v3755 address: v4414  <|@  <|@
f <@~|@floating>@ <|@
tid j4352 <|@
result v202|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i34 
=== Succesors ===
=== Usages ===
v4563 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i34  <|@  <|@
f <@~|@floating>@ <|@
tid v4563 <|@
result [v15|QWORD[.] + v202|QWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a1636 
index: j4352 
=== Succesors ===
=== Usages ===
j3756 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1636 index: j4352  <|@  <|@
f <@~|@floating>@ <|@
tid j3756 <|@
result v203|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v3755 
address: v4563 
=== Succesors ===
=== Usages ===
v4511 v4513 v4515 v4517 v4519 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v3755 address: v4563  <|@  <|@
f <@~|@floating>@ <|@
tid j4354 <|@
result v204|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i355 
=== Succesors ===
=== Usages ===
j3802 j3808 j3812 j3816 j4353 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i355  <|@  <|@
f <@~|@floating>@ <|@
tid j3802 <|@
result v205|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483664 - 2147483631]
=== Inputs ===
x: j4354 
y: j3801 
=== Succesors ===
=== Usages ===
v3803 v3805 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j4354 y: j3801  <|@  <|@
f <@~|@floating>@ <|@
tid v3803 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3802 
y: j2049 
=== Succesors ===
=== Usages ===
v3283 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3802 y: j2049  <|@  <|@
f <@*|@fixed>@ <|@
tid v3283 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v3803 
=== Succesors ===
trueSuccessor: v3281 
falseSuccessor: v3282 
=== Usages ===
=== Predecessor ===
v3755 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3803 #trueSuccessor: v3281 #falseSuccessor: v3282  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v200|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v201|QWORD[.] = LEA [v200|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v202|QWORD = MOVSXD v20|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v203|QWORD[.] = LEA [v15|QWORD[.] + v202|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v204|QWORD = MOVSXD v23|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v205|QWORD = LEA [v204|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v205|QWORD, y: v205|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B210 -> B211 falseDestination: B210 -> B212 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B211"
    from_bci -1
    to_bci -1
    predecessors "B210" 
    successors "B215" 
    xhandlers
    flags 
    probability 4611922377187438288
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3281 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3293 
=== Usages ===
=== Predecessor ===
v3283 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3293  <|@  <|@
f <@*|@fixed>@ <|@
tid v3293 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3294 
=== Predecessor ===
v3281 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B211 -> B215 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B212"
    from_bci -1
    to_bci -1
    predecessors "B210" 
    successors "B213" 
    xhandlers
    flags 
    probability 4604495164061837589
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3282 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3284 
=== Usages ===
=== Predecessor ===
v3283 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3284  <|@  <|@
f <@*|@fixed>@ <|@
tid v3284 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3285 
=== Predecessor ===
v3282 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B212 -> B213 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B213"
    from_bci -1
    to_bci -1
    predecessors "B212" "B358" 
    successors "B214" "B358" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 1
    probability 4613502363316578581
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3793 <|@
result v206|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3285 
values: j2049 j3800 
=== Succesors ===
=== Usages ===
v4519 j3800 v4518 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3285 values: j2049 j3800  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3285 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v3284 
=== Succesors ===
next: v4373 
=== Usages ===
v4373 v3289 v3290 j3793 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v3284 #next: v4373  <|@  <|@
f <@~|@floating>@ <|@
tid v4519 <|@
result [v203|QWORD[.] + v206|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3756 
index: j3793 
=== Succesors ===
=== Usages ===
v4373 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3756 index: j3793  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4373 <|@
result v207|V256_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v3285 
address: v4519 
=== Succesors ===
next: v4190 
=== Usages ===
v4190 
=== Predecessor ===
v3285 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v3285 address: v4519 #next: v4190  <|@  <|@
f <@~|@floating>@ <|@
tid v4518 <|@
result [v201|QWORD[.] + v206|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3758 
index: j3793 
=== Succesors ===
=== Usages ===
v4190 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3758 index: j3793  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4190 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4518 
value: v4373 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3292 
=== Usages ===
=== Predecessor ===
v4373 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4518 value: v4373 stateAfter: - lastLocationAccess: - #next: v3292  <|@  <|@
f <@~|@floating>@ <|@
tid j3800 <|@
result v208|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3793 
y: j1626 
=== Succesors ===
=== Usages ===
j3785 j3793 v3805 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3793 y: j1626  <|@  <|@
f <@~|@floating>@ <|@
tid v3805 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3802 
y: j3800 
=== Succesors ===
=== Usages ===
v3292 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3802 y: j3800  <|@  <|@
f <@*|@fixed>@ <|@
tid v3292 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3805 
=== Succesors ===
trueSuccessor: v3289 
falseSuccessor: v3291 
=== Usages ===
=== Predecessor ===
v4190 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3805 #trueSuccessor: v3289 #falseSuccessor: v3291  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v206|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v207|V256_WORD = H [v203|QWORD[.] + v206|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v201|QWORD[.] + v206|QWORD * 2], input: v207|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v208|QWORD = LEA [v206|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v208|QWORD, y: v205|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B213 -> B214 falseDestination: B213 -> B358 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B214"
    from_bci -1
    to_bci -1
    predecessors "B213" 
    successors "B215" 
    xhandlers
    flags 
    probability 4604495164061837589
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3289 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v3285 
=== Succesors ===
next: v3295 
=== Usages ===
=== Predecessor ===
v3292 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v3285 #next: v3295  <|@  <|@
f <@*|@fixed>@ <|@
tid v3295 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3294 
=== Predecessor ===
v3289 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v208|QWORD] destination: B214 -> B215 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B215"
    from_bci -1
    to_bci -1
    predecessors "B211" "B214" 
    successors "B216" "B217" 
    xhandlers
    flags 
    probability 4613502363316578581
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3785 <|@
result v209|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3294 
values: j2049 j3800 
=== Succesors ===
=== Usages ===
v4517 j3792 j3776 v3809 v4516 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3294 values: j2049 j3800  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3294 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3293 v3295 
=== Succesors ===
next: v3317 
=== Usages ===
j3785 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3293 v3295 #next: v3317  <|@  <|@
f <@~|@floating>@ <|@
tid j3808 <|@
result v210|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j4354 
y: j3807 
=== Succesors ===
=== Usages ===
v3809 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j4354 y: j3807  <|@  <|@
f <@~|@floating>@ <|@
tid v3809 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3808 
y: j3785 
=== Succesors ===
=== Usages ===
v3317 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3808 y: j3785  <|@  <|@
f <@*|@fixed>@ <|@
tid v3317 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3809 
=== Succesors ===
trueSuccessor: v3316 
falseSuccessor: v3315 
=== Usages ===
=== Predecessor ===
v3294 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3809 #trueSuccessor: v3316 #falseSuccessor: v3315  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v209|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v210|QWORD = LEA [v204|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v209|QWORD, y: v210|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B215 -> B216 falseDestination: B215 -> B217 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B216"
    from_bci -1
    to_bci -1
    predecessors "B215" 
    successors "B218" 
    xhandlers
    flags 
    probability 4604495164061837589
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3316 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3320 
=== Usages ===
=== Predecessor ===
v3317 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3320  <|@  <|@
f <@*|@fixed>@ <|@
tid v3320 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3305 
=== Predecessor ===
v3316 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v209|QWORD] destination: B216 -> B218 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B217"
    from_bci -1
    to_bci -1
    predecessors "B215" 
    successors "B218" 
    xhandlers
    flags 
    probability 4611922377187438288
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3315 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4374 
=== Usages ===
v4374 
=== Predecessor ===
v3317 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4374  <|@  <|@
f <@~|@floating>@ <|@
tid v4517 <|@
result [v203|QWORD[.] + v209|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3756 
index: j3785 
=== Succesors ===
=== Usages ===
v4374 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3756 index: j3785  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4374 <|@
result v211|V128_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v3315 
address: v4517 
=== Succesors ===
next: v4188 
=== Usages ===
v4188 
=== Predecessor ===
v3315 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v3315 address: v4517 #next: v4188  <|@  <|@
f <@~|@floating>@ <|@
tid v4516 <|@
result [v201|QWORD[.] + v209|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3758 
index: j3785 
=== Succesors ===
=== Usages ===
v4188 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3758 index: j3785  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4188 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4516 
value: v4374 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3304 
=== Usages ===
=== Predecessor ===
v4374 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4516 value: v4374 stateAfter: - lastLocationAccess: - #next: v3304  <|@  <|@
f <@~|@floating>@ <|@
tid j3792 <|@
result v212|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3785 
y: j2577 
=== Succesors ===
=== Usages ===
j3776 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3785 y: j2577  <|@  <|@
f <@*|@fixed>@ <|@
tid v3304 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3305 
=== Predecessor ===
v4188 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v211|V128_WORD = H [v203|QWORD[.] + v209|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v201|QWORD[.] + v209|QWORD * 2], input: v211|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v212|QWORD = LEA [v209|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v212|QWORD] destination: B217 -> B218 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B218"
    from_bci -1
    to_bci -1
    predecessors "B217" "B216" 
    successors "B219" "B220" 
    xhandlers
    flags 
    probability 4613502363316578581
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3776 <|@
result v213|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3305 
values: j3792 j3785 
=== Succesors ===
=== Usages ===
v4515 j3784 j3768 v3813 v4514 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3305 values: j3792 j3785  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3305 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3304 v3320 
=== Succesors ===
next: v3323 
=== Usages ===
j3776 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3304 v3320 #next: v3323  <|@  <|@
f <@~|@floating>@ <|@
tid j3812 <|@
result v214|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j4354 
y: j3811 
=== Succesors ===
=== Usages ===
v3813 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j4354 y: j3811  <|@  <|@
f <@~|@floating>@ <|@
tid v3813 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3812 
y: j3776 
=== Succesors ===
=== Usages ===
v3323 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3812 y: j3776  <|@  <|@
f <@*|@fixed>@ <|@
tid v3323 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3813 
=== Succesors ===
trueSuccessor: v3322 
falseSuccessor: v3321 
=== Usages ===
=== Predecessor ===
v3305 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3813 #trueSuccessor: v3322 #falseSuccessor: v3321  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v213|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v214|QWORD = LEA [v204|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v213|QWORD, y: v214|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B218 -> B219 falseDestination: B218 -> B220 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B219"
    from_bci -1
    to_bci -1
    predecessors "B218" 
    successors "B221" 
    xhandlers
    flags 
    probability 4604495164061837589
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3322 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3326 
=== Usages ===
=== Predecessor ===
v3323 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3326  <|@  <|@
f <@*|@fixed>@ <|@
tid v3326 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3309 
=== Predecessor ===
v3322 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v213|QWORD] destination: B219 -> B221 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B220"
    from_bci -1
    to_bci -1
    predecessors "B218" 
    successors "B221" 
    xhandlers
    flags 
    probability 4611922377187438288
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3321 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4375 
=== Usages ===
v4375 
=== Predecessor ===
v3323 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4375  <|@  <|@
f <@~|@floating>@ <|@
tid v4515 <|@
result [v203|QWORD[.] + v213|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3756 
index: j3776 
=== Succesors ===
=== Usages ===
v4375 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3756 index: j3776  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4375 <|@
result v215|V64_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v3321 
address: v4515 
=== Succesors ===
next: v4186 
=== Usages ===
v4186 
=== Predecessor ===
v3321 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v3321 address: v4515 #next: v4186  <|@  <|@
f <@~|@floating>@ <|@
tid v4514 <|@
result [v201|QWORD[.] + v213|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3758 
index: j3776 
=== Succesors ===
=== Usages ===
v4186 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3758 index: j3776  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4186 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4514 
value: v4375 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3308 
=== Usages ===
=== Predecessor ===
v4375 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4514 value: v4375 stateAfter: - lastLocationAccess: - #next: v3308  <|@  <|@
f <@~|@floating>@ <|@
tid j3784 <|@
result v216|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3776 
y: j3783 
=== Succesors ===
=== Usages ===
j3768 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3776 y: j3783  <|@  <|@
f <@*|@fixed>@ <|@
tid v3308 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3309 
=== Predecessor ===
v4186 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v215|V64_WORD = H [v203|QWORD[.] + v213|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v201|QWORD[.] + v213|QWORD * 2], input: v215|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v216|QWORD = LEA [v213|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v216|QWORD] destination: B220 -> B221 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B221"
    from_bci -1
    to_bci -1
    predecessors "B220" "B219" 
    successors "B222" "B223" 
    xhandlers
    flags 
    probability 4613502363316578581
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3768 <|@
result v217|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3309 
values: j3784 j3776 
=== Succesors ===
=== Usages ===
v4513 j3775 j3759 v3817 v4512 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3309 values: j3784 j3776  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3309 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3308 v3326 
=== Succesors ===
next: v3329 
=== Usages ===
j3768 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3308 v3326 #next: v3329  <|@  <|@
f <@~|@floating>@ <|@
tid j3816 <|@
result v218|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j4354 
y: j3815 
=== Succesors ===
=== Usages ===
v3817 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j4354 y: j3815  <|@  <|@
f <@~|@floating>@ <|@
tid v3817 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3816 
y: j3768 
=== Succesors ===
=== Usages ===
v3329 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3816 y: j3768  <|@  <|@
f <@*|@fixed>@ <|@
tid v3329 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3817 
=== Succesors ===
trueSuccessor: v3328 
falseSuccessor: v3327 
=== Usages ===
=== Predecessor ===
v3309 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3817 #trueSuccessor: v3328 #falseSuccessor: v3327  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v217|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v218|QWORD = LEA [v204|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v217|QWORD, y: v218|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B221 -> B222 falseDestination: B221 -> B223 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B222"
    from_bci -1
    to_bci -1
    predecessors "B221" 
    successors "B224" 
    xhandlers
    flags 
    probability 4604495164061837589
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3328 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3332 
=== Usages ===
=== Predecessor ===
v3329 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3332  <|@  <|@
f <@*|@fixed>@ <|@
tid v3332 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3312 
=== Predecessor ===
v3328 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v217|QWORD] destination: B222 -> B224 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B223"
    from_bci -1
    to_bci -1
    predecessors "B221" 
    successors "B224" 
    xhandlers
    flags 
    probability 4611922377187438288
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3327 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4376 
=== Usages ===
v4376 
=== Predecessor ===
v3329 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4376  <|@  <|@
f <@~|@floating>@ <|@
tid v4513 <|@
result [v203|QWORD[.] + v217|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3756 
index: j3768 
=== Succesors ===
=== Usages ===
v4376 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3756 index: j3768  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4376 <|@
result v219|V32_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16>
=== Inputs ===
stateBefore: - 
guard: v3327 
address: v4513 
=== Succesors ===
next: v4184 
=== Usages ===
v4184 
=== Predecessor ===
v3327 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v3327 address: v4513 #next: v4184  <|@  <|@
f <@~|@floating>@ <|@
tid v4512 <|@
result [v201|QWORD[.] + v217|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3758 
index: j3768 
=== Succesors ===
=== Usages ===
v4184 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3758 index: j3768  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4184 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4512 
value: v4376 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3311 
=== Usages ===
=== Predecessor ===
v4376 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4512 value: v4376 stateAfter: - lastLocationAccess: - #next: v3311  <|@  <|@
f <@~|@floating>@ <|@
tid j3775 <|@
result v220|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3768 
y: j3761 
=== Succesors ===
=== Usages ===
j3759 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3768 y: j3761  <|@  <|@
f <@*|@fixed>@ <|@
tid v3311 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3312 
=== Predecessor ===
v4184 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v219|V32_WORD = H [v203|QWORD[.] + v217|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction J (address: [v201|QWORD[.] + v217|QWORD * 2], input: v219|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v220|QWORD = LEA [v217|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v220|QWORD] destination: B223 -> B224 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B224"
    from_bci -1
    to_bci -1
    predecessors "B223" "B222" 
    successors "B225" "B226" 
    xhandlers
    flags 
    probability 4613502363316578581
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3759 <|@
result v221|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3312 
values: j3775 j3768 
=== Succesors ===
=== Usages ===
v4511 v3819 v4510 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3312 values: j3775 j3768  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3312 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3311 v3332 
=== Succesors ===
next: v3335 
=== Usages ===
j3759 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3311 v3332 #next: v3335  <|@  <|@
f <@~|@floating>@ <|@
tid j4353 <|@
result v222|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j4354 
y: j1816 
=== Succesors ===
=== Usages ===
v3819 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j4354 y: j1816  <|@  <|@
f <@~|@floating>@ <|@
tid v3819 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j4353 
y: j3759 
=== Succesors ===
=== Usages ===
v3335 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j4353 y: j3759  <|@  <|@
f <@*|@fixed>@ <|@
tid v3335 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3819 
=== Succesors ===
trueSuccessor: v3334 
falseSuccessor: v3333 
=== Usages ===
=== Predecessor ===
v3312 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3819 #trueSuccessor: v3334 #falseSuccessor: v3333  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v221|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v222|QWORD = DEC v204|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v221|QWORD, y: v222|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B224 -> B225 falseDestination: B224 -> B226 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B225"
    from_bci -1
    to_bci -1
    predecessors "B224" 
    successors "B227" 
    xhandlers
    flags 
    probability 4604495164061837589
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3334 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3338 
=== Usages ===
=== Predecessor ===
v3335 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3338  <|@  <|@
f <@*|@fixed>@ <|@
tid v3338 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3298 
=== Predecessor ===
v3334 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B225 -> B227 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B226"
    from_bci -1
    to_bci -1
    predecessors "B224" 
    successors "B227" 
    xhandlers
    flags 
    probability 4611922377187438288
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3333 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i4377 
=== Usages ===
i4377 
=== Predecessor ===
v3335 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i4377  <|@  <|@
f <@~|@floating>@ <|@
tid v4511 <|@
result [v203|QWORD[.] + v221|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3756 
index: j3759 
=== Succesors ===
=== Usages ===
i4377 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3756 index: j3759  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4377 <|@
result v223|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v3333 
address: v4511 
=== Succesors ===
next: v4182 
=== Usages ===
v4182 
=== Predecessor ===
v3333 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v3333 address: v4511 #next: v4182  <|@  <|@
f <@~|@floating>@ <|@
tid v4510 <|@
result [v201|QWORD[.] + v221|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3758 
index: j3759 
=== Succesors ===
=== Usages ===
v4182 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3758 index: j3759  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4182 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4510 
value: i4377 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3314 
=== Usages ===
=== Predecessor ===
i4377 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4510 value: i4377 stateAfter: - lastLocationAccess: - #next: v3314  <|@  <|@
f <@*|@fixed>@ <|@
tid v3314 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3298 
=== Predecessor ===
v4182 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v223|DWORD = MOVSX [v203|QWORD[.] + v221|QWORD * 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v201|QWORD[.] + v221|QWORD * 2], y: v223|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B226 -> B227 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B227"
    from_bci -1
    to_bci -1
    predecessors "B226" "B225" 
    successors "B228" "B231" 
    xhandlers
    flags 
    probability 4613502363316578581
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3298 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3314 v3338 
=== Succesors ===
next: a2339 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3314 v3338 #next: a2339  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2339 <|@
result v200|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.split(String.java:2368) [bci: 243]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a2909 
=== Succesors ===
next: v1441 
=== Usages ===
a2144 a1578 a1578 a1578 
=== Predecessor ===
v3298 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a2909 #next: v1441  <|@  <|@
f <@~|@floating>@ <|@
tid a2144 <|@
result v224|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n! -
=== Inputs ===
value: a2339 
=== Succesors ===
=== Usages ===
a2145 a2145 a2145 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2339  <|@  <|@
f <@*|@fixed>@ <|@
tid v1441 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.calculateCapacity(ArrayList.java:224) [bci: 4]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: void
trueSuccessorProbability: 0.2066504369952622
=== Inputs ===
condition: v227 
=== Succesors ===
trueSuccessor: v1439 
falseSuccessor: v1440 
=== Usages ===
=== Predecessor ===
a2339 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v227 #trueSuccessor: v1439 #falseSuccessor: v1440  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v224|DWORD[.] = COMPRESSPOINTER (input: v200|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@120cc8dc encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v19|QWORD[.], y: v22|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.2066504369952622 condition: = trueDestination: B227 -> B228 falseDestination: B227 -> B231 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B228"
    from_bci -1
    to_bci -1
    predecessors "B227" 
    successors "B229" "B230" 
    xhandlers
    flags 
    probability 4603399296729809126
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1439 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.calculateCapacity(ArrayList.java:225) [bci: 7]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1556 
=== Usages ===
=== Predecessor ===
v1441 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1556  <|@  <|@
f <@~|@floating>@ <|@
tid v4344 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at java.util.ArrayList.calculateCapacity(ArrayList.java:225) [bci: 10]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i396 
y: i194 
=== Succesors ===
=== Usages ===
v1556 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i396 y: i194  <|@  <|@
f <@*|@fixed>@ <|@
tid v1556 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at java.util.ArrayList.calculateCapacity(ArrayList.java:225) [bci: 10]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: void
trueSuccessorProbability: 0.7308950256495741
=== Inputs ===
condition: v4344 
=== Succesors ===
trueSuccessor: v1554 
falseSuccessor: v1555 
=== Usages ===
=== Predecessor ===
v1439 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4344 #trueSuccessor: v1554 #falseSuccessor: v1555  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v188|DWORD y: 11 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7308950256495741 condition: < trueDestination: B228 -> B229 falseDestination: B228 -> B230 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B229"
    from_bci -1
    to_bci -1
    predecessors "B228" 
    successors "B232" 
    xhandlers
    flags 
    probability 4601308123973474700
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1554 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 5]
at java.util.ArrayList.calculateCapacity(ArrayList.java:225) [bci: 10]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1557 
=== Usages ===
=== Predecessor ===
v1556 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1557  <|@  <|@
f <@*|@fixed>@ <|@
tid v1557 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v238 
=== Predecessor ===
v1554 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[10|0xa], v200|QWORD[.], v224|DWORD[.]] destination: B229 -> B232 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B230"
    from_bci -1
    to_bci -1
    predecessors "B228" 
    successors "B232" 
    xhandlers
    flags 
    probability 4594791320917528704
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1555 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 9]
at java.util.ArrayList.calculateCapacity(ArrayList.java:225) [bci: 10]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1558 
=== Usages ===
=== Predecessor ===
v1556 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1558  <|@  <|@
f <@*|@fixed>@ <|@
tid v1558 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v238 
=== Predecessor ===
v1555 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v188|DWORD, v200|QWORD[.], v224|DWORD[.]] destination: B230 -> B232 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B231"
    from_bci -1
    to_bci -1
    predecessors "B227" 
    successors "B232" 
    xhandlers
    flags 
    probability 4612196344020445404
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1440 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.calculateCapacity(ArrayList.java:227) [bci: 14]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1442 
=== Usages ===
=== Predecessor ===
v1441 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1442  <|@  <|@
f <@*|@fixed>@ <|@
tid v1442 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v238 
=== Predecessor ===
v1440 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v188|DWORD, v200|QWORD[.], v224|DWORD[.]] destination: B231 -> B232 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B232"
    from_bci -1
    to_bci -1
    predecessors "B200" "B198" "B199" "B231" "B229" "B230" 
    successors "B233" "B241" 
    xhandlers
    flags 
    probability 4614149222986594394
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i240 <|@
result v225|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v238 
values: i396 i193 i396 i396 i193 i396 
=== Succesors ===
=== Usages ===
?179 i1781 i401 i596 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v238 values: i396 i193 i396 i396 i193 i396  <|@  <|@
f <@~|@floating>@ <|@
tid a1578 <|@
result v226|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a!# [C
valueDescription: a -
=== Inputs ===
merge: v238 
values: a452 a452 a452 a2339 a2339 a2339 
=== Succesors ===
=== Usages ===
?1579 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v238 values: a452 a452 a452 a2339 a2339 a2339  <|@  <|@
f <@~|@floating>@ <|@
tid a2145 <|@
result v227|DWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: n!# [C
valueDescription: n -
=== Inputs ===
merge: v238 
values: a2133 a2133 a2133 a2144 a2144 a2144 
=== Succesors ===
=== Usages ===
v2975 v3117 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v238 values: a2133 a2133 a2133 a2144 a2144 a2144  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v238 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v239 v241 v242 v1442 v1557 v1558 
=== Succesors ===
next: i4378 
=== Usages ===
i240 a1578 a2145 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v239 v241 v242 v1442 v1557 v1558 #next: i4378  <|@  <|@
f <@~|@floating>@ <|@
tid v4566 <|@
result [v22|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a505 
index: - 
=== Succesors ===
=== Usages ===
i4378 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a505 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4378 <|@
result v228|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:238) [bci: 15]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2353) [bci: 165]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v4566 
=== Succesors ===
next: v4379 
=== Usages ===
i401 v1745 i595 i594 i2324 v2292 
=== Predecessor ===
v238 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4566 #next: v4379  <|@  <|@
f <@~|@floating>@ <|@
tid v4417 <|@
result [v22|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a505 
index: - 
=== Succesors ===
=== Usages ===
v4379 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a505 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4379 <|@
result v229|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.ClassGetHubNode.readClass(Class) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.getComponentType(HotSpotClassSubstitutions.java:120) [bci: 1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 6]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v4417 
=== Succesors ===
next: v405 
=== Usages ===
v2580 v3224 v3037 
=== Predecessor ===
i4378 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4417 #next: v405  <|@  <|@
f <@~|@floating>@ <|@
tid i401 <|@
result v230|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:238) [bci: 16]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: i32
=== Inputs ===
x: i240 
y: i4378 
=== Succesors ===
=== Usages ===
v402 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i240 y: i4378  <|@  <|@
f <@~|@floating>@ <|@
tid v402 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:238) [bci: 17]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i401 
y: i8 
=== Succesors ===
=== Usages ===
v405 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i401 y: i8  <|@  <|@
tid ?1579 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a524 
values: a1578 - 
=== Succesors ===
=== Usages ===
?179 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a524 values: a1578 -  <|@  <|@
tid ?179 <|@
d <@d|@=== Debug Properties ===
bci: 9
code: ResolvedJavaMethodBytecode<ArrayList.ensureCapacityInternal(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
rethrowException: false
sourceFile: ArrayList.java
sourceLine: 231
stackSize: 2
=== Inputs ===
outerFrameState: ?184 
values: - - a244 i240 
virtualObjectMappings: ?521 ?1579 
=== Succesors ===
=== Usages ===
a2947 a3012 a3089 v2486 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?184 values: - - a244 i240 virtualObjectMappings: ?521 ?1579  <|@  <|@
f <@*|@fixed>@ <|@
tid v405 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:238) [bci: 17]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: void
trueSuccessorProbability: 0.7754412955005789
=== Inputs ===
condition: v402 
=== Succesors ===
trueSuccessor: v403 
falseSuccessor: v404 
=== Usages ===
=== Predecessor ===
v4379 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v402 #trueSuccessor: v403 #falseSuccessor: v404  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v225|DWORD, v226|QWORD[.], v227|DWORD[.]] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v228|DWORD = MOV [v22|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v229|DWORD = MOV [v22|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v230|DWORD = SUB (x: v225|DWORD, ~y: v228|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v230|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7754412955005789 condition: < trueDestination: B232 -> B233 falseDestination: B232 -> B241 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B233"
    from_bci -1
    to_bci -1
    predecessors "B232" 
    successors "B234" "B240" 
    xhandlers
    flags 
    probability 4612584766463955523
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v403 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:240) [bci: 25]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1971 
=== Usages ===
=== Predecessor ===
v405 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1971  <|@  <|@
f <@~|@floating>@ <|@
tid v3224 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v4379 
y: v3223 
=== Succesors ===
=== Usages ===
v1971 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v4379 y: v3223  <|@  <|@
f <@*|@fixed>@ <|@
tid v1971 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v3224 
=== Succesors ===
trueSuccessor: v1968 
falseSuccessor: v1970 
=== Usages ===
=== Predecessor ===
v403 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3224 #trueSuccessor: v1968 #falseSuccessor: v1970  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v229|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B233 -> B234 falseDestination: B233 -> B240 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B234"
    from_bci -1
    to_bci -1
    predecessors "B233" 
    successors "B235" "B239" 
    xhandlers
    flags 
    probability 4612584766463955523
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1968 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1975 
=== Usages ===
=== Predecessor ===
v1971 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1975  <|@  <|@
f <@~|@floating>@ <|@
tid v1745 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:463) [bci: 26]
at java.lang.String.split(String.java:2368) [bci: 246]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i503 
y: i4378 
=== Succesors ===
=== Usages ===
v1975 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i503 y: i4378  <|@  <|@
f <@*|@fixed>@ <|@
tid v1975 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:463) [bci: 26]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1745 
=== Succesors ===
trueSuccessor: v1972 
falseSuccessor: v1974 
=== Usages ===
=== Predecessor ===
v1968 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1745 #trueSuccessor: v1972 #falseSuccessor: v1974  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v228|DWORD, y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B234 -> B235 falseDestination: B234 -> B239 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B235"
    from_bci -1
    to_bci -1
    predecessors "B234" 
    successors "B236" "B237" 
    xhandlers
    flags 
    probability 4612584766463955523
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1972 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:463) [bci: 26]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2936 
=== Usages ===
v1753 
=== Predecessor ===
v1975 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2936  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2936 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j2951 
=== Usages ===
v4461 v4462 
=== Predecessor ===
v1972 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j2951  <|@  <|@
f <@~|@floating>@ <|@
tid v4461 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j2936 
index: - 
=== Succesors ===
=== Usages ===
j2951 v2953 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2936 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2951 <|@
result v231|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v4461 
=== Succesors ===
next: j2952 
=== Usages ===
j3244 j2957 v4501 
=== Predecessor ===
j2936 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4461 #next: j2952  <|@  <|@
f <@~|@floating>@ <|@
tid v4462 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j2936 
index: - 
=== Succesors ===
=== Usages ===
j2952 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2936 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2952 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v4462 
=== Succesors ===
next: v2944 
=== Usages ===
v2941 
=== Predecessor ===
j2951 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4462 #next: v2944  <|@  <|@
f <@~|@floating>@ <|@
tid j3244 <|@
result v232|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2951 
y: j3225 
=== Succesors ===
=== Usages ===
v2941 v2953 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2951 y: j3225  <|@  <|@
f <@~|@floating>@ <|@
tid v2941 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2952 
y: j3244 
=== Succesors ===
=== Usages ===
v2944 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j2952 y: j3244  <|@  <|@
f <@*|@fixed>@ <|@
tid v2944 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v2941 
=== Succesors ===
trueSuccessor: v2942 
falseSuccessor: v2943 
=== Usages ===
=== Predecessor ===
j2952 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2941 #trueSuccessor: v2942 #falseSuccessor: v2943  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v231|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v232|QWORD = LEA [v231|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v232|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B235 -> B236 falseDestination: B235 -> B237 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B236"
    from_bci -1
    to_bci -1
    predecessors "B235" 
    successors "B238" 
    xhandlers
    flags 
    probability 4582572226418264729
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2942 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a2947 
=== Usages ===
=== Predecessor ===
v2944 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2947  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2947 <|@
result v233|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?179 
arguments: v2582 i1663 i8 
=== Succesors ===
next: j2948 
=== Usages ===
j2948 
=== Predecessor ===
v2942 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?179 arguments: v2582 i1663 i8 #next: j2948  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2948 <|@
result v233|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a2947 
=== Succesors ===
next: v2958 
=== Usages ===
j2957 
=== Predecessor ===
a2947 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a2947 #next: v2958  <|@  <|@
f <@*|@fixed>@ <|@
tid v2958 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2955 
=== Predecessor ===
j2948 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v18|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
stack: vobject:ArrayList:0{modCount=v21|DWORD,size=v21|DWORD,elementData=v22|QWORD[.]} v225|DWORD 
locals: - - 
java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
locals: vobject:ArrayList:0{modCount=v21|DWORD,size=v21|DWORD,elementData=v22|QWORD[.]} vobject:String:1{value=v226|QWORD[.],hash=int[0|0x0]} 
java.lang.String.split(String.java:2368) [bci: 246]
locals: - - v2|DWORD - - - - vobject:ArrayList:0{modCount=v21|DWORD,size=v21|DWORD,elementData=v22|QWORD[.]} - - 
vobject:ArrayList:0{modCount=v21|DWORD,size=v21|DWORD,elementData=v22|QWORD[.]} Ljava/util/ArrayList; v21|DWORD v21|DWORD v22|QWORD[.] 
vobject:String:1{value=v226|QWORD[.],hash=int[0|0x0]} Ljava/lang/String; v226|QWORD[.] int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:9, 7, 246] <|@ <|@
      nr   -1  <|@ instruction v233|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v233|QWORD[.]] destination: B236 -> B238 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B237"
    from_bci -1
    to_bci -1
    predecessors "B235" 
    successors "B238" 
    xhandlers
    flags 
    probability 4612530742987316142
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2943 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2953 
=== Usages ===
=== Predecessor ===
v2944 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2953  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2953 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4461 
value: j3244 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2950 
=== Usages ===
=== Predecessor ===
v2943 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4461 value: j3244 stateAfter: - lastLocationAccess: - #next: v2950  <|@  <|@
f <@~|@floating>@ <|@
tid v4501 <|@
result [v231|QWORD + 216] <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j2951 
index: - 
=== Succesors ===
=== Usages ===
v2950 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2951 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2950 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v4501 
=== Succesors ===
next: v2956 
=== Usages ===
=== Predecessor ===
v2953 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v4501 #next: v2956  <|@  <|@
f <@*|@fixed>@ <|@
tid v2956 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2955 
=== Predecessor ===
v2950 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v232|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v231|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v231|QWORD] destination: B237 -> B238 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B238"
    from_bci -1
    to_bci -1
    predecessors "B237" "B236" 
    successors "B291" 
    xhandlers
    flags 
    probability 4612584766463955523
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2957 <|@
result v234|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2955 
values: j2951 j2948 
=== Succesors ===
=== Usages ===
v4464 v4463 a2081 v4502 v4503 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2955 values: j2951 j2948  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2955 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2956 v2958 
=== Succesors ===
next: a2081 
=== Usages ===
j2957 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2956 v2958 #next: a2081  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2081 <|@
result v235|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j2957 
=== Succesors ===
next: j2967 
=== Usages ===
a2087 
=== Predecessor ===
v2955 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j2957 #next: j2967  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2967 <|@
result v236|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v4478 
=== Succesors ===
next: v2968 
=== Usages ===
v2968 
=== Predecessor ===
a2081 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4478 #next: v2968  <|@  <|@
f <@~|@floating>@ <|@
tid v4463 <|@
result [v234|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2957 
index: - 
=== Succesors ===
=== Usages ===
v2968 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2957 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2968 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4463 
value: j2967 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2971 
=== Usages ===
=== Predecessor ===
j2967 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4463 value: j2967 stateAfter: - lastLocationAccess: - #next: v2971  <|@  <|@
f <@~|@floating>@ <|@
tid v4464 <|@
result [v234|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j2957 
index: - 
=== Succesors ===
=== Usages ===
v2971 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2957 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2971 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4464 
value: v3230 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2975 
=== Usages ===
=== Predecessor ===
v2968 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4464 value: v3230 stateAfter: - lastLocationAccess: - #next: v2975  <|@  <|@
f <@~|@floating>@ <|@
tid v4502 <|@
result [v234|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j2957 
index: - 
=== Succesors ===
=== Usages ===
v2975 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2957 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2975 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4502 
value: a2145 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2977 
=== Usages ===
=== Predecessor ===
v2971 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4502 value: a2145 stateAfter: - lastLocationAccess: - #next: v2977  <|@  <|@
f <@~|@floating>@ <|@
tid v4503 <|@
result [v234|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j2957 
index: - 
=== Succesors ===
=== Usages ===
v2977 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2957 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2977 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4503 
value: i5 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a2087 
=== Usages ===
=== Predecessor ===
v2975 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4503 value: i5 stateAfter: - lastLocationAccess: - #next: a2087  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2087 <|@
result v235|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a2081 
=== Succesors ===
next: v2088 
=== Usages ===
a1752 
=== Predecessor ===
v2977 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a2081 #next: v2088  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2088 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v1753 
=== Usages ===
=== Predecessor ===
a2087 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v1753  <|@  <|@
f <@~|@floating>@ <|@
tid v4407 <|@
result [v22|QWORD[.] + v21|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a505 
index: i503 
=== Succesors ===
=== Usages ===
v1753 j2978 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a505 index: i503  <|@  <|@
f <@~|@floating>@ <|@
tid a1752 <|@
result v237|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:463) [bci: 26]
at java.lang.String.split(String.java:2368) [bci: 246]
op: Compress
stamp: n -
=== Inputs ===
value: a2087 
=== Succesors ===
=== Usages ===
v1753 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2087  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1753 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:463) [bci: 26]
at java.lang.String.split(String.java:2368) [bci: 246]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1972 
address: v4407 
value: a1752 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j2978 
=== Usages ===
=== Predecessor ===
v2088 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1972 address: v4407 value: a1752 stateAfter: - lastLocationAccess: - #next: j2978  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2978 <|@
result [v22|QWORD[.] + v21|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at java.util.ArrayList.add(ArrayList.java:463) [bci: 26]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v4407 
=== Succesors ===
next: v2982 
=== Usages ===
j2979 
=== Predecessor ===
v1753 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v4407 #next: v2982  <|@  <|@
f <@~|@floating>@ <|@
tid j2979 <|@
result v238|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.ArrayList.add(ArrayList.java:463) [bci: 26]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j2978 
y: i2735 
=== Succesors ===
=== Usages ===
v4465 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j2978 y: i2735  <|@  <|@
f <@~|@floating>@ <|@
tid v4465 <|@
result [v238|QWORD[*] + v16|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2979 
index: j2739 
=== Succesors ===
=== Usages ===
v2982 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2979 index: j2739  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2982 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.ArrayList.add(ArrayList.java:463) [bci: 26]
at java.lang.String.split(String.java:2368) [bci: 246]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4465 
value: i2741 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1561 
=== Usages ===
=== Predecessor ===
j2978 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4465 value: i2741 stateAfter: - lastLocationAccess: - #next: v1561  <|@  <|@
f <@*|@fixed>@ <|@
tid v1561 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1560 
=== Predecessor ===
v2982 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v234|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v235|QWORD[.] = MOVE v234|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v236|QWORD = MOV [v10|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v234|QWORD[*]], y: v236|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v234|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v234|QWORD[*] + 12], y: v227|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v234|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v237|DWORD[.] = COMPRESSPOINTER (input: v235|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@120cc8dc encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v22|QWORD[.] + v21|DWORD * 4 + 16], y: v237|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v239|QWORD[.] = LEA [v22|QWORD[.] + v21|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v238|QWORD[*] = SHR v239|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v238|QWORD[*] + v16|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v22|QWORD[.]] destination: B238 -> B291 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B239"
    from_bci -1
    to_bci -1
    predecessors "B234" 
    successors "B357" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1974 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:463) [bci: 26]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2487 
=== Usages ===
=== Predecessor ===
v1975 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2487  <|@  <|@
f <@~|@floating>@ <|@
tid i2488 <|@
result int[-447003|0xfffffffffff92de5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -447003
stableDimension: 0
stamp: i32 [-447003] ⇊00000000fff92de5 ⇈00000000fff92de5
stampKind: i32
value: int[-447003|0xfffffffffff92de5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2484 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2487 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2481 
=== Predecessor ===
v1974 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-447003|0xfffffffffff92de5], Object[null]] destination: B239 -> B357 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B240"
    from_bci -1
    to_bci -1
    predecessors "B233" 
    successors "B357" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1970 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2482 
=== Usages ===
=== Predecessor ===
v1971 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2482  <|@  <|@
f <@~|@floating>@ <|@
tid i2483 <|@
result int[-446268|0xfffffffffff930c4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -446268
stableDimension: 0
stamp: i32 [-446268] ⇊00000000fff930c4 ⇈00000000fff930c4
stampKind: i32
value: int[-446268|0xfffffffffff930c4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2484 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2482 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2481 
=== Predecessor ===
v1970 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-446268|0xfffffffffff930c4], v6|QWORD[.]] destination: B240 -> B357 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B241"
    from_bci -1
    to_bci -1
    predecessors "B232" 
    successors "B242" "B356" 
    xhandlers
    flags 
    probability 4604433045635831900
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v404 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 20]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1979 
=== Usages ===
=== Predecessor ===
v405 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1979  <|@  <|@
f <@~|@floating>@ <|@
tid i594 <|@
result v240|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:259) [bci: 9]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: i32 [0 - 1073741823] ⇈000000003fffffff
=== Inputs ===
x: i4378 
y: i8 
=== Succesors ===
=== Usages ===
i595 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i4378 y: i8  <|@  <|@
f <@~|@floating>@ <|@
tid i595 <|@
result v241|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:259) [bci: 10]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: i32
=== Inputs ===
x: i594 
y: i4378 
=== Succesors ===
=== Usages ===
i596 i1781 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i594 y: i4378  <|@  <|@
f <@~|@floating>@ <|@
tid i596 <|@
result v242|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:260) [bci: 14]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: i32
=== Inputs ===
x: i595 
y: i240 
=== Succesors ===
=== Usages ===
v597 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i595 y: i240  <|@  <|@
f <@~|@floating>@ <|@
tid v597 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:260) [bci: 15]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i596 
y: i5 
=== Succesors ===
=== Usages ===
i1781 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i596 y: i5  <|@  <|@
f <@~|@floating>@ <|@
tid i1781 <|@
result v243|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v597 
trueValue: i240 
falseValue: i595 
=== Succesors ===
=== Usages ===
v1758 j3339 i606 v2276 v2292 i2324 a3012 v3033 i3052 v3045 i2997 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v597 trueValue: i240 falseValue: i595  <|@  <|@
f <@~|@floating>@ <|@
tid i606 <|@
result v244|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:262) [bci: 23]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: i32
=== Inputs ===
x: i1781 
y: i429 
=== Succesors ===
=== Usages ===
v607 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1781 y: i429  <|@  <|@
f <@~|@floating>@ <|@
tid v607 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:262) [bci: 24]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i606 
y: i8 
=== Succesors ===
=== Usages ===
v1979 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i606 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v1979 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:262) [bci: 24]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v607 
=== Succesors ===
trueSuccessor: v1976 
falseSuccessor: v1978 
=== Usages ===
=== Predecessor ===
v404 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v607 #trueSuccessor: v1976 #falseSuccessor: v1978  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v240|DWORD = SHR v228|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v241|DWORD = ADD (x: v240|DWORD, y: v228|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v242|DWORD = SUB (x: v241|DWORD, ~y: v225|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v242|DWORD, y: v242|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v243|DWORD = CMOVE (falseValue: v241|DWORD, ~trueValue: v225|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction v244|DWORD = LEA [v243|DWORD - 2147483639] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v244|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B241 -> B242 falseDestination: B241 -> B356 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B242"
    from_bci -1
    to_bci -1
    predecessors "B241" 
    successors "B243" "B355" 
    xhandlers
    flags 
    probability 4604433045635831900
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1976 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:262) [bci: 24]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1983 
=== Usages ===
=== Predecessor ===
v1979 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1983  <|@  <|@
f <@~|@floating>@ <|@
tid v1758 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:463) [bci: 26]
at java.lang.String.split(String.java:2368) [bci: 246]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i503 
y: i1781 
=== Succesors ===
=== Usages ===
v1983 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i503 y: i1781  <|@  <|@
f <@*|@fixed>@ <|@
tid v1983 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:463) [bci: 26]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1758 
=== Succesors ===
trueSuccessor: v1980 
falseSuccessor: v1982 
=== Usages ===
=== Predecessor ===
v1976 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1758 #trueSuccessor: v1980 #falseSuccessor: v1982  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v243|DWORD, y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B242 -> B243 falseDestination: B242 -> B355 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B243"
    from_bci -1
    to_bci -1
    predecessors "B242" 
    successors "B244" "B245" 
    xhandlers
    flags 
    probability 4604433045635831900
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1980 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:463) [bci: 26]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2282 
=== Usages ===
v1766 
=== Predecessor ===
v1983 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2282  <|@  <|@
f <@~|@floating>@ <|@
tid v2276 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 22]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:171) [bci: 3]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1781 
y: i5 
=== Succesors ===
=== Usages ===
v2282 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1781 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v2282 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 33]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:171) [bci: 3]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v2276 
=== Succesors ===
trueSuccessor: v2281 
falseSuccessor: v2277 
=== Usages ===
=== Predecessor ===
v1980 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2276 #trueSuccessor: v2281 #falseSuccessor: v2277  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v243|DWORD, y: v243|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B243 -> B244 falseDestination: B243 -> B245 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B244"
    from_bci -1
    to_bci -1
    predecessors "B243" 
    successors "B357" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2281 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:187) [bci: 55]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:171) [bci: 3]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2495 
=== Usages ===
=== Predecessor ===
v2282 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2495  <|@  <|@
f <@~|@floating>@ <|@
tid i2496 <|@
result int[-585825|0xfffffffffff70f9f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -585825
stableDimension: 0
stamp: i32 [-585825] ⇊00000000fff70f9f ⇈00000000fff70f9f
stampKind: i32
value: int[-585825|0xfffffffffff70f9f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2484 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2495 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2481 
=== Predecessor ===
v2281 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-585825|0xfffffffffff70f9f], Object[null]] destination: B244 -> B357 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B245"
    from_bci -1
    to_bci -1
    predecessors "B243" 
    successors "B246" "B247" 
    xhandlers
    flags 
    probability 4604433045635831900
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2277 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 36]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:171) [bci: 3]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2999 
=== Usages ===
=== Predecessor ===
v2282 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2999  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2999 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j3030 
=== Usages ===
v4466 v4467 
=== Predecessor ===
v2277 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j3030  <|@  <|@
f <@~|@floating>@ <|@
tid v4466 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j2999 
index: - 
=== Succesors ===
=== Usages ===
j3030 v3032 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2999 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3030 <|@
result v245|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v4466 
=== Succesors ===
next: j3031 
=== Usages ===
j3003 v4468 v4469 a3011 v4474 v4470 v4471 v4472 v4473 
=== Predecessor ===
j2999 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4466 #next: j3031  <|@  <|@
f <@~|@floating>@ <|@
tid v4467 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j2999 
index: - 
=== Succesors ===
=== Usages ===
j3031 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2999 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3031 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v4467 
=== Succesors ===
next: v3007 
=== Usages ===
v3004 
=== Predecessor ===
j3030 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4467 #next: v3007  <|@  <|@
f <@~|@floating>@ <|@
tid i2997 <|@
result v246|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i1781 
y: i1663 
=== Succesors ===
=== Usages ===
i3019 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i1781 y: i1663  <|@  <|@
f <@~|@floating>@ <|@
tid i3019 <|@
result v247|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: i32 [-2147483645 - 2147483647] ⇊0000000000000003
=== Inputs ===
x: i2997 
y: i2664 
=== Succesors ===
=== Usages ===
i2998 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2997 y: i2664  <|@  <|@
f <@~|@floating>@ <|@
tid i2998 <|@
result v248|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i3019 
y: i2634 
=== Succesors ===
=== Usages ===
j3002 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i3019 y: i2634  <|@  <|@
f <@~|@floating>@ <|@
tid j3002 <|@
result v249|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i2998 
=== Succesors ===
=== Usages ===
j3003 v4470 v4471 v4472 v4473 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2998  <|@  <|@
f <@~|@floating>@ <|@
tid j3003 <|@
result v250|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: i64
=== Inputs ===
x: j3002 
y: j3030 
=== Succesors ===
=== Usages ===
v3004 v3032 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3002 y: j3030  <|@  <|@
f <@~|@floating>@ <|@
tid v3004 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3031 
y: j3003 
=== Succesors ===
=== Usages ===
v3007 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j3031 y: j3003  <|@  <|@
f <@*|@fixed>@ <|@
tid v3007 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v3004 
=== Succesors ===
trueSuccessor: v3005 
falseSuccessor: v3006 
=== Usages ===
=== Predecessor ===
j3031 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3004 #trueSuccessor: v3005 #falseSuccessor: v3006  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v245|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v246|DWORD = SHL v243|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v247|DWORD = LEA [v246|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v248|DWORD = AND v247|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v249|QWORD = MOVSXD v248|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v250|QWORD = ADD (x: v249|QWORD, y: v245|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v250|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B245 -> B246 falseDestination: B245 -> B247 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B246"
    from_bci -1
    to_bci -1
    predecessors "B245" 
    successors "B248" 
    xhandlers
    flags 
    probability 4574660039549593971
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3005 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: void
=== Inputs ===
=== Succesors ===
next: a3012 
=== Usages ===
=== Predecessor ===
v3007 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a3012  <|@  <|@
f <@~|@floating>@ <|@
tid v2580 <|@
result v251|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.ClassGetHubNode.readClass(Class) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.getComponentType(HotSpotClassSubstitutions.java:120) [bci: 1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 6]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v4379 
=== Succesors ===
=== Usages ===
a3012 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v4379  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3012 <|@
result v252|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?179 
arguments: v2580 i1781 i5 
=== Succesors ===
next: v3015 
=== Usages ===
a3016 
=== Predecessor ===
v3005 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?179 arguments: v2580 i1781 i5 #next: v3015  <|@  <|@
f <@*|@fixed>@ <|@
tid v3015 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3014 
=== Predecessor ===
a3012 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v251|QWORD = UNCOMPRESSPOINTER (input: v229|DWORD, ~baseRegister: -) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@120cc8dc encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v251|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v243|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
stack: vobject:ArrayList:0{modCount=v21|DWORD,size=v21|DWORD,elementData=v22|QWORD[.]} v225|DWORD 
locals: - - 
java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
locals: vobject:ArrayList:0{modCount=v21|DWORD,size=v21|DWORD,elementData=v22|QWORD[.]} vobject:String:1{value=v226|QWORD[.],hash=int[0|0x0]} 
java.lang.String.split(String.java:2368) [bci: 246]
locals: - - v2|DWORD - - - - vobject:ArrayList:0{modCount=v21|DWORD,size=v21|DWORD,elementData=v22|QWORD[.]} - - 
vobject:ArrayList:0{modCount=v21|DWORD,size=v21|DWORD,elementData=v22|QWORD[.]} Ljava/util/ArrayList; v21|DWORD v21|DWORD v22|QWORD[.] 
vobject:String:1{value=v226|QWORD[.],hash=int[0|0x0]} Ljava/lang/String; v226|QWORD[.] int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:9, 7, 246] <|@ <|@
      nr   -1  <|@ instruction v252|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v252|QWORD[.]] destination: B246 -> B248 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B247"
    from_bci -1
    to_bci -1
    predecessors "B245" 
    successors "B248" 
    xhandlers
    flags 
    probability 4604370467374926345
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3006 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3032 
=== Usages ===
=== Predecessor ===
v3007 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3032  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3032 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4466 
value: j3003 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3021 
=== Usages ===
=== Predecessor ===
v3006 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4466 value: j3003 stateAfter: - lastLocationAccess: - #next: v3021  <|@  <|@
f <@~|@floating>@ <|@
tid v4470 <|@
result [v249|QWORD + v245|QWORD * 1 + 192] <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j3002 
index: j3030 
=== Succesors ===
=== Usages ===
v3021 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3002 index: j3030  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3021 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: void
=== Inputs ===
address: v4470 
=== Succesors ===
next: v3023 
=== Usages ===
=== Predecessor ===
v3032 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v4470 #next: v3023  <|@  <|@
f <@~|@floating>@ <|@
tid v4471 <|@
result [v249|QWORD + v245|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j3002 
index: j3030 
=== Succesors ===
=== Usages ===
v3023 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3002 index: j3030  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3023 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: void
=== Inputs ===
address: v4471 
=== Succesors ===
next: v3025 
=== Usages ===
=== Predecessor ===
v3021 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v4471 #next: v3025  <|@  <|@
f <@~|@floating>@ <|@
tid v4472 <|@
result [v249|QWORD + v245|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j3002 
index: j3030 
=== Succesors ===
=== Usages ===
v3025 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3002 index: j3030  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3025 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: void
=== Inputs ===
address: v4472 
=== Succesors ===
next: v3027 
=== Usages ===
=== Predecessor ===
v3023 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v4472 #next: v3027  <|@  <|@
f <@~|@floating>@ <|@
tid v4473 <|@
result [v249|QWORD + v245|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j3002 
index: j3030 
=== Succesors ===
=== Usages ===
v3027 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3002 index: j3030  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3027 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: void
=== Inputs ===
address: v4473 
=== Succesors ===
next: v3033 
=== Usages ===
=== Predecessor ===
v3025 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v4473 #next: v3033  <|@  <|@
f <@~|@floating>@ <|@
tid v4468 <|@
result [v245|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j3030 
index: - 
=== Succesors ===
=== Usages ===
v3033 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3030 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3033 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4468 
value: i1781 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3034 
=== Usages ===
=== Predecessor ===
v3027 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4468 value: i1781 stateAfter: - lastLocationAccess: - #next: v3034  <|@  <|@
f <@~|@floating>@ <|@
tid v4469 <|@
result [v245|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j3030 
index: - 
=== Succesors ===
=== Usages ===
v3034 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3030 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3034 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4469 
value: j2632 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3037 
=== Usages ===
=== Predecessor ===
v3033 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4469 value: j2632 stateAfter: - lastLocationAccess: - #next: v3037  <|@  <|@
f <@~|@floating>@ <|@
tid v4474 <|@
result [v245|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j3030 
index: - 
=== Succesors ===
=== Usages ===
v3037 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3030 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3037 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4474 
value: v4379 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3010 
=== Usages ===
=== Predecessor ===
v3034 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4474 value: v4379 stateAfter: - lastLocationAccess: - #next: v3010  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3010 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: void
=== Inputs ===
=== Succesors ===
next: a3011 
=== Usages ===
=== Predecessor ===
v3037 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a3011  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3011 <|@
result v253|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j3030 
=== Succesors ===
next: v3013 
=== Usages ===
a3016 
=== Predecessor ===
v3010 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j3030 #next: v3013  <|@  <|@
f <@*|@fixed>@ <|@
tid v3013 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3014 
=== Predecessor ===
a3011 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v250|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v249|QWORD + v245|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v249|QWORD + v245|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v249|QWORD + v245|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v249|QWORD + v245|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v245|QWORD + 12], y: v243|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v245|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v245|QWORD + 8], y: v229|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v253|QWORD[.] = MOVE v245|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v253|QWORD[.]] destination: B247 -> B248 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B248"
    from_bci -1
    to_bci -1
    predecessors "B247" "B246" 
    successors "B249" "B250" 
    xhandlers
    flags 
    probability 4604433045635831900
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a3016 <|@
result v254|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v3014 
values: a3011 a3012 
=== Succesors ===
=== Usages ===
v4509 a2343 v4415 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3014 values: a3011 a3012  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3014 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3013 v3015 
=== Succesors ===
next: v4069 
=== Usages ===
a3016 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3013 v3015 #next: v4069  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4069 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v3640 
=== Usages ===
j4070 j4072 
=== Predecessor ===
v3014 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v3640  <|@  <|@
f <@~|@floating>@ <|@
tid v4415 <|@
result [v254|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a3016 
index: - 
=== Succesors ===
=== Usages ===
j4072 j3051 j3049 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3016 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v2292 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 4]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:174) [bci: 19]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4378 
y: i1781 
=== Succesors ===
=== Usages ===
i2324 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i4378 y: i1781  <|@  <|@
f <@~|@floating>@ <|@
tid i2324 <|@
result v255|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v2292 
trueValue: i4378 
falseValue: i1781 
=== Succesors ===
=== Usages ===
j3340 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v2292 trueValue: i4378 falseValue: i1781  <|@  <|@
f <@~|@floating>@ <|@
tid j3340 <|@
result v256|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i2324 
=== Succesors ===
=== Usages ===
j4116 v4509 j3344 v3637 v3752 j4105 j4110 j4113 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2324  <|@  <|@
f <@~|@floating>@ <|@
tid v3637 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3340 
y: j2632 
=== Succesors ===
=== Usages ===
v3640 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3340 y: j2632  <|@  <|@
f <@*|@fixed>@ <|@
tid v3640 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v3637 
=== Succesors ===
trueSuccessor: v3638 
falseSuccessor: v3639 
=== Usages ===
=== Predecessor ===
v4069 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3637 #trueSuccessor: v3638 #falseSuccessor: v3639  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v254|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v243|DWORD, y: v228|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v255|DWORD = CMOVE (falseValue: v243|DWORD, ~trueValue: v228|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v256|QWORD = MOVSXD v255|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v256|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B248 -> B249 falseDestination: B248 -> B250 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B249"
    from_bci -1
    to_bci -1
    predecessors "B248" 
    successors "B264" 
    xhandlers
    flags 
    probability 4599929446008461404
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3638 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3656 
=== Usages ===
=== Predecessor ===
v3640 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3656  <|@  <|@
f <@*|@fixed>@ <|@
tid v3656 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3657 
=== Predecessor ===
v3638 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B249 -> B264 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B250"
    from_bci -1
    to_bci -1
    predecessors "B248" 
    successors "B251" "B252" 
    xhandlers
    flags 
    probability 4599929446008461404
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3639 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3643 
=== Usages ===
=== Predecessor ===
v3640 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3643  <|@  <|@
f <@~|@floating>@ <|@
tid j4072 <|@
result v257|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v4069 
address: v4415 
=== Succesors ===
=== Usages ===
v4551 v4553 v4555 v4557 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v4069 address: v4415  <|@  <|@
f <@~|@floating>@ <|@
tid v4410 <|@
result [v22|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a505 
index: - 
=== Succesors ===
=== Usages ===
j4070 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a505 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j4070 <|@
result v258|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v4069 
address: v4410 
=== Succesors ===
=== Usages ===
v4552 v4554 v4556 v4558 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v4069 address: v4410  <|@  <|@
f <@~|@floating>@ <|@
tid j4105 <|@
result v259|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j3340 
y: j3807 
=== Succesors ===
=== Usages ===
v4106 v4108 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3340 y: j3807  <|@  <|@
f <@~|@floating>@ <|@
tid v4106 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j4105 
y: j2049 
=== Succesors ===
=== Usages ===
v3643 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j4105 y: j2049  <|@  <|@
f <@*|@fixed>@ <|@
tid v3643 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v4106 
=== Succesors ===
trueSuccessor: v3641 
falseSuccessor: v3642 
=== Usages ===
=== Predecessor ===
v3639 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4106 #trueSuccessor: v3641 #falseSuccessor: v3642  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v257|QWORD[.] = LEA [v254|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v258|QWORD[.] = LEA [v22|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v259|QWORD = LEA [v256|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v259|QWORD, y: v259|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B250 -> B251 falseDestination: B250 -> B252 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B251"
    from_bci -1
    to_bci -1
    predecessors "B250" 
    successors "B255" 
    xhandlers
    flags 
    probability 4598364989485822533
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3641 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3652 
=== Usages ===
=== Predecessor ===
v3643 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3652  <|@  <|@
f <@*|@fixed>@ <|@
tid v3652 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3653 
=== Predecessor ===
v3641 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B251 -> B255 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B252"
    from_bci -1
    to_bci -1
    predecessors "B250" 
    successors "B253" 
    xhandlers
    flags 
    probability 4590922246753720412
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3642 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3644 
=== Usages ===
=== Predecessor ===
v3643 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3644  <|@  <|@
f <@*|@fixed>@ <|@
tid v3644 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3645 
=== Predecessor ===
v3642 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B252 -> B253 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B253"
    from_bci -1
    to_bci -1
    predecessors "B252" "B354" 
    successors "B254" "B354" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 1
    probability 4599929446008461404
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j4097 <|@
result v260|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3645 
values: j2049 j4104 
=== Succesors ===
=== Usages ===
v4558 j4104 v4557 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3645 values: j2049 j4104  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3645 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v3644 
=== Succesors ===
next: v4380 
=== Usages ===
v4380 v3648 v3649 j4097 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v3644 #next: v4380  <|@  <|@
f <@~|@floating>@ <|@
tid v4558 <|@
result [v258|QWORD[.] + v260|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j4070 
index: j4097 
=== Succesors ===
=== Usages ===
v4380 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4070 index: j4097  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4380 <|@
result v261|V256_DWORD[........] <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: <n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;>
=== Inputs ===
stateBefore: - 
guard: v3645 
address: v4558 
=== Succesors ===
next: v4238 
=== Usages ===
v4238 
=== Predecessor ===
v3645 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v3645 address: v4558 #next: v4238  <|@  <|@
f <@~|@floating>@ <|@
tid v4557 <|@
result [v257|QWORD[.] + v260|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j4072 
index: j4097 
=== Succesors ===
=== Usages ===
v4238 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4072 index: j4097  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4238 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4557 
value: v4380 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3651 
=== Usages ===
=== Predecessor ===
v4380 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4557 value: v4380 stateAfter: - lastLocationAccess: - #next: v3651  <|@  <|@
f <@~|@floating>@ <|@
tid j4104 <|@
result v262|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j4097 
y: j2577 
=== Succesors ===
=== Usages ===
j4089 j4097 v4108 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j4097 y: j2577  <|@  <|@
f <@~|@floating>@ <|@
tid v4108 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j4105 
y: j4104 
=== Succesors ===
=== Usages ===
v3651 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j4105 y: j4104  <|@  <|@
f <@*|@fixed>@ <|@
tid v3651 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v4108 
=== Succesors ===
trueSuccessor: v3648 
falseSuccessor: v3650 
=== Usages ===
=== Predecessor ===
v4238 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4108 #trueSuccessor: v3648 #falseSuccessor: v3650  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v260|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v261|V256_DWORD[........] = H [v258|QWORD[.] + v260|QWORD * 4] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v257|QWORD[.] + v260|QWORD * 4], input: v261|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v262|QWORD = LEA [v260|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v262|QWORD, y: v259|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B253 -> B254 falseDestination: B253 -> B354 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B254"
    from_bci -1
    to_bci -1
    predecessors "B253" 
    successors "B255" 
    xhandlers
    flags 
    probability 4590922246753720412
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3648 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v3645 
=== Succesors ===
next: v3654 
=== Usages ===
=== Predecessor ===
v3651 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v3645 #next: v3654  <|@  <|@
f <@*|@fixed>@ <|@
tid v3654 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3653 
=== Predecessor ===
v3648 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v262|QWORD] destination: B254 -> B255 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B255"
    from_bci -1
    to_bci -1
    predecessors "B251" "B254" 
    successors "B256" "B257" 
    xhandlers
    flags 
    probability 4599929446008461404
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j4089 <|@
result v263|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3653 
values: j2049 j4104 
=== Succesors ===
=== Usages ===
v4556 j4096 j4081 v4111 v4555 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3653 values: j2049 j4104  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3653 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3652 v3654 
=== Succesors ===
next: v3672 
=== Usages ===
j4089 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3652 v3654 #next: v3672  <|@  <|@
f <@~|@floating>@ <|@
tid j4110 <|@
result v264|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j3340 
y: j3811 
=== Succesors ===
=== Usages ===
v4111 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3340 y: j3811  <|@  <|@
f <@~|@floating>@ <|@
tid v4111 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j4110 
y: j4089 
=== Succesors ===
=== Usages ===
v3672 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j4110 y: j4089  <|@  <|@
f <@*|@fixed>@ <|@
tid v3672 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v4111 
=== Succesors ===
trueSuccessor: v3671 
falseSuccessor: v3670 
=== Usages ===
=== Predecessor ===
v3653 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4111 #trueSuccessor: v3671 #falseSuccessor: v3670  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v263|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v264|QWORD = LEA [v256|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v263|QWORD, y: v264|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B255 -> B256 falseDestination: B255 -> B257 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B256"
    from_bci -1
    to_bci -1
    predecessors "B255" 
    successors "B258" 
    xhandlers
    flags 
    probability 4590922246753720412
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3671 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3675 
=== Usages ===
=== Predecessor ===
v3672 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3675  <|@  <|@
f <@*|@fixed>@ <|@
tid v3675 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3664 
=== Predecessor ===
v3671 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v263|QWORD] destination: B256 -> B258 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B257"
    from_bci -1
    to_bci -1
    predecessors "B255" 
    successors "B258" 
    xhandlers
    flags 
    probability 4598364989485822533
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3670 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4381 
=== Usages ===
v4381 
=== Predecessor ===
v3672 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4381  <|@  <|@
f <@~|@floating>@ <|@
tid v4556 <|@
result [v258|QWORD[.] + v263|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j4070 
index: j4089 
=== Succesors ===
=== Usages ===
v4381 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4070 index: j4089  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4381 <|@
result v265|V128_DWORD[....] <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: <n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;>
=== Inputs ===
stateBefore: - 
guard: v3670 
address: v4556 
=== Succesors ===
next: v4236 
=== Usages ===
v4236 
=== Predecessor ===
v3670 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v3670 address: v4556 #next: v4236  <|@  <|@
f <@~|@floating>@ <|@
tid v4555 <|@
result [v257|QWORD[.] + v263|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j4072 
index: j4089 
=== Succesors ===
=== Usages ===
v4236 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4072 index: j4089  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4236 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4555 
value: v4381 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3663 
=== Usages ===
=== Predecessor ===
v4381 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4555 value: v4381 stateAfter: - lastLocationAccess: - #next: v3663  <|@  <|@
f <@~|@floating>@ <|@
tid j4096 <|@
result v266|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j4089 
y: j3783 
=== Succesors ===
=== Usages ===
j4081 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j4089 y: j3783  <|@  <|@
f <@*|@fixed>@ <|@
tid v3663 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3664 
=== Predecessor ===
v4236 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v265|V128_DWORD[....] = H [v258|QWORD[.] + v263|QWORD * 4] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v257|QWORD[.] + v263|QWORD * 4], input: v265|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v266|QWORD = LEA [v263|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v266|QWORD] destination: B257 -> B258 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B258"
    from_bci -1
    to_bci -1
    predecessors "B257" "B256" 
    successors "B259" "B260" 
    xhandlers
    flags 
    probability 4599929446008461404
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j4081 <|@
result v267|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3664 
values: j4096 j4089 
=== Succesors ===
=== Usages ===
v4554 j4088 j4073 v4114 v4553 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3664 values: j4096 j4089  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3664 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3663 v3675 
=== Succesors ===
next: v3678 
=== Usages ===
j4081 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3663 v3675 #next: v3678  <|@  <|@
f <@~|@floating>@ <|@
tid j4113 <|@
result v268|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j3340 
y: j3815 
=== Succesors ===
=== Usages ===
v4114 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3340 y: j3815  <|@  <|@
f <@~|@floating>@ <|@
tid v4114 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j4113 
y: j4081 
=== Succesors ===
=== Usages ===
v3678 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j4113 y: j4081  <|@  <|@
f <@*|@fixed>@ <|@
tid v3678 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v4114 
=== Succesors ===
trueSuccessor: v3677 
falseSuccessor: v3676 
=== Usages ===
=== Predecessor ===
v3664 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4114 #trueSuccessor: v3677 #falseSuccessor: v3676  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v267|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v268|QWORD = LEA [v256|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v267|QWORD, y: v268|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B258 -> B259 falseDestination: B258 -> B260 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B259"
    from_bci -1
    to_bci -1
    predecessors "B258" 
    successors "B261" 
    xhandlers
    flags 
    probability 4590922246753720412
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3677 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3681 
=== Usages ===
=== Predecessor ===
v3678 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3681  <|@  <|@
f <@*|@fixed>@ <|@
tid v3681 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3667 
=== Predecessor ===
v3677 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v267|QWORD] destination: B259 -> B261 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B260"
    from_bci -1
    to_bci -1
    predecessors "B258" 
    successors "B261" 
    xhandlers
    flags 
    probability 4598364989485822533
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3676 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4382 
=== Usages ===
v4382 
=== Predecessor ===
v3678 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4382  <|@  <|@
f <@~|@floating>@ <|@
tid v4554 <|@
result [v258|QWORD[.] + v267|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j4070 
index: j4081 
=== Succesors ===
=== Usages ===
v4382 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4070 index: j4081  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4382 <|@
result v269|V64_DWORD[..] <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: <n Ljava/lang/Object;,n Ljava/lang/Object;>
=== Inputs ===
stateBefore: - 
guard: v3676 
address: v4554 
=== Succesors ===
next: v4234 
=== Usages ===
v4234 
=== Predecessor ===
v3676 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v3676 address: v4554 #next: v4234  <|@  <|@
f <@~|@floating>@ <|@
tid v4553 <|@
result [v257|QWORD[.] + v267|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j4072 
index: j4081 
=== Succesors ===
=== Usages ===
v4234 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4072 index: j4081  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4234 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4553 
value: v4382 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3666 
=== Usages ===
=== Predecessor ===
v4382 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4553 value: v4382 stateAfter: - lastLocationAccess: - #next: v3666  <|@  <|@
f <@~|@floating>@ <|@
tid j4088 <|@
result v270|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j4081 
y: j3761 
=== Succesors ===
=== Usages ===
j4073 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j4081 y: j3761  <|@  <|@
f <@*|@fixed>@ <|@
tid v3666 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3667 
=== Predecessor ===
v4234 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v269|V64_DWORD[..] = H [v258|QWORD[.] + v267|QWORD * 4] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v257|QWORD[.] + v267|QWORD * 4], input: v269|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v270|QWORD = LEA [v267|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v270|QWORD] destination: B260 -> B261 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B261"
    from_bci -1
    to_bci -1
    predecessors "B260" "B259" 
    successors "B262" "B263" 
    xhandlers
    flags 
    probability 4599929446008461404
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j4073 <|@
result v271|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3667 
values: j4088 j4081 
=== Succesors ===
=== Usages ===
v4552 v4117 v4551 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3667 values: j4088 j4081  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3667 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3666 v3681 
=== Succesors ===
next: v3684 
=== Usages ===
j4073 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3666 v3681 #next: v3684  <|@  <|@
f <@~|@floating>@ <|@
tid j4116 <|@
result v272|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j3340 
y: j1816 
=== Succesors ===
=== Usages ===
v4117 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3340 y: j1816  <|@  <|@
f <@~|@floating>@ <|@
tid v4117 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j4116 
y: j4073 
=== Succesors ===
=== Usages ===
v3684 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j4116 y: j4073  <|@  <|@
f <@*|@fixed>@ <|@
tid v3684 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v4117 
=== Succesors ===
trueSuccessor: v3683 
falseSuccessor: v3682 
=== Usages ===
=== Predecessor ===
v3667 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4117 #trueSuccessor: v3683 #falseSuccessor: v3682  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v271|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v272|QWORD = DEC v256|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v271|QWORD, y: v272|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B261 -> B262 falseDestination: B261 -> B263 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B262"
    from_bci -1
    to_bci -1
    predecessors "B261" 
    successors "B264" 
    xhandlers
    flags 
    probability 4590922246753720412
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3683 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3687 
=== Usages ===
=== Predecessor ===
v3684 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3687  <|@  <|@
f <@*|@fixed>@ <|@
tid v3687 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3657 
=== Predecessor ===
v3683 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B262 -> B264 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B263"
    from_bci -1
    to_bci -1
    predecessors "B261" 
    successors "B264" 
    xhandlers
    flags 
    probability 4598364989485822533
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3682 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a4383 
=== Usages ===
a4383 
=== Predecessor ===
v3684 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a4383  <|@  <|@
f <@~|@floating>@ <|@
tid v4552 <|@
result [v258|QWORD[.] + v271|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j4070 
index: j4073 
=== Succesors ===
=== Usages ===
a4383 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4070 index: j4073  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4383 <|@
result v273|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v3682 
address: v4552 
=== Succesors ===
next: v4232 
=== Usages ===
v4232 
=== Predecessor ===
v3682 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v3682 address: v4552 #next: v4232  <|@  <|@
f <@~|@floating>@ <|@
tid v4551 <|@
result [v257|QWORD[.] + v271|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j4072 
index: j4073 
=== Succesors ===
=== Usages ===
v4232 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4072 index: j4073  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4232 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4551 
value: a4383 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3669 
=== Usages ===
=== Predecessor ===
a4383 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4551 value: a4383 stateAfter: - lastLocationAccess: - #next: v3669  <|@  <|@
f <@*|@fixed>@ <|@
tid v3669 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3657 
=== Predecessor ===
v4232 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v273|DWORD[.] = MOV [v258|QWORD[.] + v271|QWORD * 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v257|QWORD[.] + v271|QWORD * 4], y: v273|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B263 -> B264 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B264"
    from_bci -1
    to_bci -1
    predecessors "B249" "B263" "B262" 
    successors "B265" "B280" 
    xhandlers
    flags 
    probability 4604433045635831900
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3657 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3656 v3669 v3687 
=== Succesors ===
next: v4120 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3656 v3669 v3687 #next: v4120  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4120 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v3694 
=== Usages ===
j4122 
=== Predecessor ===
v3657 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v3694  <|@  <|@
f <@~|@floating>@ <|@
tid j3339 <|@
result v274|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1781 
=== Succesors ===
=== Usages ===
j3344 v3752 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1781  <|@  <|@
f <@~|@floating>@ <|@
tid v3752 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3340 
y: j3339 
=== Succesors ===
=== Usages ===
v3694 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3340 y: j3339  <|@  <|@
f <@*|@fixed>@ <|@
tid v3694 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v3752 
=== Succesors ===
trueSuccessor: v3693 
falseSuccessor: v3692 
=== Usages ===
=== Predecessor ===
v4120 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3752 #trueSuccessor: v3693 #falseSuccessor: v3692  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v274|QWORD = MOVSXD v243|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v274|QWORD, y: v256|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B264 -> B265 falseDestination: B264 -> B280 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B265"
    from_bci -1
    to_bci -1
    predecessors "B264" 
    successors "B266" "B267" 
    xhandlers
    flags 
    probability 4599929446008461404
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3693 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3697 
=== Usages ===
=== Predecessor ===
v3694 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3697  <|@  <|@
f <@~|@floating>@ <|@
tid v4509 <|@
result [v254|QWORD[.] + v256|QWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a3016 
index: j3340 
=== Succesors ===
=== Usages ===
j4122 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3016 index: j3340  <|@  <|@
f <@~|@floating>@ <|@
tid j4122 <|@
result v275|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v4120 
address: v4509 
=== Succesors ===
=== Usages ===
v4559 v4560 v4561 v4562 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v4120 address: v4509  <|@  <|@
f <@~|@floating>@ <|@
tid j3344 <|@
result v276|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j3339 
y: j3340 
=== Succesors ===
=== Usages ===
j4158 j4147 j4152 j4155 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j3339 y: j3340  <|@  <|@
f <@~|@floating>@ <|@
tid j4147 <|@
result v277|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967303 - 4294967287]
=== Inputs ===
x: j3344 
y: j3807 
=== Succesors ===
=== Usages ===
v4148 v4150 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3344 y: j3807  <|@  <|@
f <@~|@floating>@ <|@
tid v4148 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j4147 
y: j2049 
=== Succesors ===
=== Usages ===
v3697 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j4147 y: j2049  <|@  <|@
f <@*|@fixed>@ <|@
tid v3697 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v4148 
=== Succesors ===
trueSuccessor: v3695 
falseSuccessor: v3696 
=== Usages ===
=== Predecessor ===
v3693 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4148 #trueSuccessor: v3695 #falseSuccessor: v3696  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v275|QWORD[.] = LEA [v254|QWORD[.] + v256|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v276|QWORD = SUB (x: v274|QWORD, ~y: v256|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v277|QWORD = LEA [v276|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v277|QWORD, y: v277|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B265 -> B266 falseDestination: B265 -> B267 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B266"
    from_bci -1
    to_bci -1
    predecessors "B265" 
    successors "B270" 
    xhandlers
    flags 
    probability 4598364989485822533
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3695 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3706 
=== Usages ===
=== Predecessor ===
v3697 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3706  <|@  <|@
f <@*|@fixed>@ <|@
tid v3706 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3707 
=== Predecessor ===
v3695 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B266 -> B270 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B267"
    from_bci -1
    to_bci -1
    predecessors "B265" 
    successors "B268" 
    xhandlers
    flags 
    probability 4590922246753720412
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3696 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3698 
=== Usages ===
=== Predecessor ===
v3697 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3698  <|@  <|@
f <@*|@fixed>@ <|@
tid v3698 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3699 
=== Predecessor ===
v3696 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B267 -> B268 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B268"
    from_bci -1
    to_bci -1
    predecessors "B267" "B279" 
    successors "B269" "B279" 
    xhandlers
    flags "llh" 
    loop_index 9
    loop_depth 1
    probability 4599929446008461404
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j4141 <|@
result v278|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3699 
values: j2049 j4146 
=== Succesors ===
=== Usages ===
v4562 j4146 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3699 values: j2049 j4146  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3699 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v3698 
=== Succesors ===
next: v4242 
=== Usages ===
j4141 v3702 v3703 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v3698 #next: v4242  <|@  <|@
f <@~|@floating>@ <|@
tid v4562 <|@
result [v275|QWORD[.] + v278|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j4122 
index: j4141 
=== Succesors ===
=== Usages ===
v4242 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4122 index: j4141  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4242 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4562 
value: v4243 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3705 
=== Usages ===
=== Predecessor ===
v3699 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4562 value: v4243 stateAfter: - lastLocationAccess: - #next: v3705  <|@  <|@
f <@~|@floating>@ <|@
tid j4146 <|@
result v279|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j4141 
y: j2577 
=== Succesors ===
=== Usages ===
j4135 j4141 v4150 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j4141 y: j2577  <|@  <|@
f <@~|@floating>@ <|@
tid v4150 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j4147 
y: j4146 
=== Succesors ===
=== Usages ===
v3705 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j4147 y: j4146  <|@  <|@
f <@*|@fixed>@ <|@
tid v3705 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v4150 
=== Succesors ===
trueSuccessor: v3702 
falseSuccessor: v3704 
=== Usages ===
=== Predecessor ===
v4242 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4150 #trueSuccessor: v3702 #falseSuccessor: v3704  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v278|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v275|QWORD[.] + v278|QWORD * 4], input: v9|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v279|QWORD = LEA [v278|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v279|QWORD, y: v277|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B268 -> B269 falseDestination: B268 -> B279 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B269"
    from_bci -1
    to_bci -1
    predecessors "B268" 
    successors "B270" 
    xhandlers
    flags 
    probability 4590922246753720412
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3702 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v3699 
=== Succesors ===
next: v3708 
=== Usages ===
=== Predecessor ===
v3705 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v3699 #next: v3708  <|@  <|@
f <@*|@fixed>@ <|@
tid v3708 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3707 
=== Predecessor ===
v3702 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v279|QWORD] destination: B269 -> B270 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B270"
    from_bci -1
    to_bci -1
    predecessors "B266" "B269" 
    successors "B271" "B272" 
    xhandlers
    flags 
    probability 4599929446008461404
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j4135 <|@
result v280|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3707 
values: j2049 j4146 
=== Succesors ===
=== Usages ===
v4561 j4140 j4129 v4153 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3707 values: j2049 j4146  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3707 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3706 v3708 
=== Succesors ===
next: v3726 
=== Usages ===
j4135 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3706 v3708 #next: v3726  <|@  <|@
f <@~|@floating>@ <|@
tid j4152 <|@
result v281|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967299 - 4294967291]
=== Inputs ===
x: j3344 
y: j3811 
=== Succesors ===
=== Usages ===
v4153 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3344 y: j3811  <|@  <|@
f <@~|@floating>@ <|@
tid v4153 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j4152 
y: j4135 
=== Succesors ===
=== Usages ===
v3726 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j4152 y: j4135  <|@  <|@
f <@*|@fixed>@ <|@
tid v3726 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v4153 
=== Succesors ===
trueSuccessor: v3725 
falseSuccessor: v3724 
=== Usages ===
=== Predecessor ===
v3707 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4153 #trueSuccessor: v3725 #falseSuccessor: v3724  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v280|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v281|QWORD = LEA [v276|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v280|QWORD, y: v281|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B270 -> B271 falseDestination: B270 -> B272 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B271"
    from_bci -1
    to_bci -1
    predecessors "B270" 
    successors "B273" 
    xhandlers
    flags 
    probability 4590922246753720412
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3725 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3729 
=== Usages ===
=== Predecessor ===
v3726 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3729  <|@  <|@
f <@*|@fixed>@ <|@
tid v3729 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3718 
=== Predecessor ===
v3725 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v280|QWORD] destination: B271 -> B273 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B272"
    from_bci -1
    to_bci -1
    predecessors "B270" 
    successors "B273" 
    xhandlers
    flags 
    probability 4598364989485822533
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3724 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4241 
=== Usages ===
=== Predecessor ===
v3726 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4241  <|@  <|@
f <@~|@floating>@ <|@
tid v4561 <|@
result [v275|QWORD[.] + v280|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j4122 
index: j4135 
=== Succesors ===
=== Usages ===
v4241 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4122 index: j4135  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4241 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4561 
value: v4246 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3717 
=== Usages ===
=== Predecessor ===
v3724 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4561 value: v4246 stateAfter: - lastLocationAccess: - #next: v3717  <|@  <|@
f <@~|@floating>@ <|@
tid j4140 <|@
result v282|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j4135 
y: j3783 
=== Succesors ===
=== Usages ===
j4129 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j4135 y: j3783  <|@  <|@
f <@*|@fixed>@ <|@
tid v3717 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3718 
=== Predecessor ===
v4241 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v275|QWORD[.] + v280|QWORD * 4], input: v8|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v282|QWORD = LEA [v280|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v282|QWORD] destination: B272 -> B273 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B273"
    from_bci -1
    to_bci -1
    predecessors "B272" "B271" 
    successors "B274" "B275" 
    xhandlers
    flags 
    probability 4599929446008461404
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j4129 <|@
result v283|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3718 
values: j4140 j4135 
=== Succesors ===
=== Usages ===
v4560 j4134 j4123 v4156 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3718 values: j4140 j4135  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3718 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3717 v3729 
=== Succesors ===
next: v3732 
=== Usages ===
j4129 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3717 v3729 #next: v3732  <|@  <|@
f <@~|@floating>@ <|@
tid j4155 <|@
result v284|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j3344 
y: j3815 
=== Succesors ===
=== Usages ===
v4156 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3344 y: j3815  <|@  <|@
f <@~|@floating>@ <|@
tid v4156 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j4155 
y: j4129 
=== Succesors ===
=== Usages ===
v3732 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j4155 y: j4129  <|@  <|@
f <@*|@fixed>@ <|@
tid v3732 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v4156 
=== Succesors ===
trueSuccessor: v3731 
falseSuccessor: v3730 
=== Usages ===
=== Predecessor ===
v3718 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4156 #trueSuccessor: v3731 #falseSuccessor: v3730  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v283|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v284|QWORD = LEA [v276|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v283|QWORD, y: v284|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B273 -> B274 falseDestination: B273 -> B275 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B274"
    from_bci -1
    to_bci -1
    predecessors "B273" 
    successors "B276" 
    xhandlers
    flags 
    probability 4590922246753720412
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3731 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3735 
=== Usages ===
=== Predecessor ===
v3732 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3735  <|@  <|@
f <@*|@fixed>@ <|@
tid v3735 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3721 
=== Predecessor ===
v3731 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v283|QWORD] destination: B274 -> B276 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B275"
    from_bci -1
    to_bci -1
    predecessors "B273" 
    successors "B276" 
    xhandlers
    flags 
    probability 4598364989485822533
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3730 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4240 
=== Usages ===
=== Predecessor ===
v3732 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4240  <|@  <|@
f <@~|@floating>@ <|@
tid v4560 <|@
result [v275|QWORD[.] + v283|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j4122 
index: j4129 
=== Succesors ===
=== Usages ===
v4240 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4122 index: j4129  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4240 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4560 
value: v4245 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3720 
=== Usages ===
=== Predecessor ===
v3730 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4560 value: v4245 stateAfter: - lastLocationAccess: - #next: v3720  <|@  <|@
f <@~|@floating>@ <|@
tid j4134 <|@
result v285|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j4129 
y: j3761 
=== Succesors ===
=== Usages ===
j4123 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j4129 y: j3761  <|@  <|@
f <@*|@fixed>@ <|@
tid v3720 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3721 
=== Predecessor ===
v4240 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v275|QWORD[.] + v283|QWORD * 4], input: v7|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v285|QWORD = LEA [v283|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v285|QWORD] destination: B275 -> B276 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B276"
    from_bci -1
    to_bci -1
    predecessors "B275" "B274" 
    successors "B277" "B278" 
    xhandlers
    flags 
    probability 4599929446008461404
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j4123 <|@
result v286|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3721 
values: j4134 j4129 
=== Succesors ===
=== Usages ===
v4559 v4159 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3721 values: j4134 j4129  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3721 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3720 v3735 
=== Succesors ===
next: v3738 
=== Usages ===
j4123 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3720 v3735 #next: v3738  <|@  <|@
f <@~|@floating>@ <|@
tid j4158 <|@
result v287|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j3344 
y: j1816 
=== Succesors ===
=== Usages ===
v4159 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3344 y: j1816  <|@  <|@
f <@~|@floating>@ <|@
tid v4159 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j4158 
y: j4123 
=== Succesors ===
=== Usages ===
v3738 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j4158 y: j4123  <|@  <|@
f <@*|@fixed>@ <|@
tid v3738 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v4159 
=== Succesors ===
trueSuccessor: v3737 
falseSuccessor: v3736 
=== Usages ===
=== Predecessor ===
v3721 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4159 #trueSuccessor: v3737 #falseSuccessor: v3736  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v286|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v287|QWORD = DEC v276|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v286|QWORD, y: v287|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B276 -> B277 falseDestination: B276 -> B278 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B277"
    from_bci -1
    to_bci -1
    predecessors "B276" 
    successors "B281" 
    xhandlers
    flags 
    probability 4590922246753720412
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3737 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3741 
=== Usages ===
=== Predecessor ===
v3738 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3741  <|@  <|@
f <@*|@fixed>@ <|@
tid v3741 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3711 
=== Predecessor ===
v3737 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B277 -> B281 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B278"
    from_bci -1
    to_bci -1
    predecessors "B276" 
    successors "B281" 
    xhandlers
    flags 
    probability 4598364989485822533
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3736 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4239 
=== Usages ===
=== Predecessor ===
v3738 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4239  <|@  <|@
f <@~|@floating>@ <|@
tid v4559 <|@
result [v275|QWORD[.] + v286|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j4122 
index: j4123 
=== Succesors ===
=== Usages ===
v4239 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4122 index: j4123  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4239 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4559 
value: a4244 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3723 
=== Usages ===
=== Predecessor ===
v3736 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4559 value: a4244 stateAfter: - lastLocationAccess: - #next: v3723  <|@  <|@
f <@*|@fixed>@ <|@
tid v3723 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3711 
=== Predecessor ===
v4239 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v275|QWORD[.] + v286|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B278 -> B281 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B279"
    from_bci -1
    to_bci -1
    predecessors "B268" 
    successors "B268" 
    xhandlers
    flags "lle" 
    loop_index 9
    loop_depth 1
    probability 4598364989485822533
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3704 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3703 
=== Usages ===
=== Predecessor ===
v3705 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3703  <|@  <|@
f <@*|@fixed>@ <|@
tid v3703 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v3699 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v3704 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v3699  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v279|QWORD] destination: B279 -> B268 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B280"
    from_bci -1
    to_bci -1
    predecessors "B264" 
    successors "B281" 
    xhandlers
    flags 
    probability 4599929446008461404
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3692 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3710 
=== Usages ===
=== Predecessor ===
v3694 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3710  <|@  <|@
f <@*|@fixed>@ <|@
tid v3710 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3711 
=== Predecessor ===
v3692 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B280 -> B281 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B281"
    from_bci -1
    to_bci -1
    predecessors "B280" "B278" "B277" 
    successors "B282" "B283" 
    xhandlers
    flags 
    probability 4604433045635831900
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3711 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3710 v3723 v3741 
=== Succesors ===
next: v3048 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3710 v3723 v3741 #next: v3048  <|@  <|@
f <@~|@floating>@ <|@
tid v3045 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:154) [bci: 1]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1781 
y: i5 
=== Succesors ===
=== Usages ===
v3048 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1781 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v3048 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:154) [bci: 1]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v3045 
=== Succesors ===
trueSuccessor: v3046 
falseSuccessor: v3047 
=== Usages ===
=== Predecessor ===
v3711 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3045 #trueSuccessor: v3046 #falseSuccessor: v3047  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v243|DWORD, y: v243|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B281 -> B282 falseDestination: B281 -> B283 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B282"
    from_bci -1
    to_bci -1
    predecessors "B281" 
    successors "B286" 
    xhandlers
    flags 
    probability 4599929446008461404
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3046 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:155) [bci: 4]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3072 
=== Usages ===
=== Predecessor ===
v3048 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3072  <|@  <|@
f <@*|@fixed>@ <|@
tid v3072 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3071 
=== Predecessor ===
v3046 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B282 -> B286 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B283"
    from_bci -1
    to_bci -1
    predecessors "B281" 
    successors "B284" 
    xhandlers
    flags 
    probability 4599929446008461404
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3047 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:157) [bci: 5]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: void
=== Inputs ===
=== Succesors ===
next: j3049 
=== Usages ===
=== Predecessor ===
v3048 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j3049  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3049 <|@
result [v254|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToFirstArrayElement(WriteBarrierSnippets.java:376) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:159) [bci: 20]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v4415 
=== Succesors ===
next: j3051 
=== Usages ===
j3050 
=== Predecessor ===
v3047 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v4415 #next: j3051  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3051 <|@
result [v254|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:385) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v4415 
=== Succesors ===
next: v3059 
=== Usages ===
j3055 
=== Predecessor ===
j3049 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v4415 #next: v3059  <|@  <|@
f <@~|@floating>@ <|@
tid i3052 <|@
result v288|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: i32
=== Inputs ===
x: i1781 
y: i19 
=== Succesors ===
=== Usages ===
i3053 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1781 y: i19  <|@  <|@
f <@~|@floating>@ <|@
tid i3053 <|@
result v289|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i3052 
y: i1663 
=== Succesors ===
=== Usages ===
j3054 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i3052 y: i1663  <|@  <|@
f <@~|@floating>@ <|@
tid j3054 <|@
result v290|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 26]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
resultBits: 64
stamp: i64 [-2147483648 - 2147483644] ⇈fffffffffffffffc
=== Inputs ===
value: i3053 
=== Succesors ===
=== Usages ===
j3055 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i3053  <|@  <|@
f <@~|@floating>@ <|@
tid j3055 <|@
result v292|QWORD[.] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 27]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: i64
=== Inputs ===
x: j3051 
y: j3054 
=== Succesors ===
=== Usages ===
j3056 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3051 y: j3054  <|@  <|@
f <@~|@floating>@ <|@
tid j3056 <|@
result v293|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 34]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j3055 
y: i2735 
=== Succesors ===
=== Usages ===
j3057 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j3055 y: i2735  <|@  <|@
f <@~|@floating>@ <|@
tid j3050 <|@
result v294|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:159) [bci: 24]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j3049 
y: i2735 
=== Succesors ===
=== Usages ===
j3057 j3070 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j3049 y: i2735  <|@  <|@
f <@~|@floating>@ <|@
tid j3057 <|@
result v296|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:161) [bci: 41]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: i64 [-36028797018963967 - 36028797018963967]
=== Inputs ===
x: j3056 
y: j3050 
=== Succesors ===
=== Usages ===
j3058 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j3056 y: j3050  <|@  <|@
f <@~|@floating>@ <|@
tid j3058 <|@
result v297|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:161) [bci: 43]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: i64 [-36028797018963966 - 36028797018963968]
=== Inputs ===
x: j3057 
y: j2632 
=== Succesors ===
=== Usages ===
j3061 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3057 y: j2632  <|@  <|@
f <@*|@fixed>@ <|@
tid v3059 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3060 
=== Predecessor ===
j3051 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v288|DWORD = DEC v243|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v289|DWORD = SHL v288|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v290|QWORD = MOVSXD v289|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v291|QWORD[.] = LEA [v254|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v292|QWORD[.] = ADD (x: v291|QWORD[.], y: v290|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v293|QWORD[*] = SHR v292|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v295|QWORD[.] = LEA [v254|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v294|QWORD[*] = SHR v295|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v296|QWORD[*] = SUB (x: v293|QWORD[*], ~y: v294|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v297|QWORD[*] = INC v296|QWORD[*] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v297|QWORD[*]] destination: B283 -> B284 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B284"
    from_bci -1
    to_bci -1
    predecessors "B283" "B353" 
    successors "B285" "B353" 
    xhandlers
    flags "llh" 
    loop_index 10
    loop_depth 1
    probability 4604433045635831900
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3061 <|@
result v298|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3060 
values: j3058 j3062 
=== Succesors ===
=== Usages ===
j3062 v3063 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3060 values: j3058 j3062  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3060 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 2.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v3059 
=== Succesors ===
next: v3066 
=== Usages ===
j3061 v3064 v3069 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v3059 #next: v3066  <|@  <|@
f <@~|@floating>@ <|@
tid v3063 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 55]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3061 
y: j2632 
=== Succesors ===
=== Usages ===
v3066 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3061 y: j2632  <|@  <|@
f <@*|@fixed>@ <|@
tid v3066 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 55]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v3063 
=== Succesors ===
trueSuccessor: v3064 
falseSuccessor: v3065 
=== Usages ===
=== Predecessor ===
v3060 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3063 #trueSuccessor: v3064 #falseSuccessor: v3065  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v298|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v298|QWORD[*] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B284 -> B285 falseDestination: B284 -> B353 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B285"
    from_bci -1
    to_bci -1
    predecessors "B284" 
    successors "B286" 
    xhandlers
    flags 
    probability 4599929446008461404
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3064 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:165) [bci: 76]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v3060 
=== Succesors ===
next: v3073 
=== Usages ===
=== Predecessor ===
v3066 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v3060 #next: v3073  <|@  <|@
f <@*|@fixed>@ <|@
tid v3073 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3071 
=== Predecessor ===
v3064 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B285 -> B286 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B286"
    from_bci -1
    to_bci -1
    predecessors "B282" "B285" 
    successors "B287" "B352" 
    xhandlers
    flags 
    probability 4604433045635831900
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3071 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3072 v3073 
=== Succesors ===
next: a2343 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3072 v3073 #next: a2343  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2343 <|@
result v254|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a3016 
=== Succesors ===
next: v4384 
=== Usages ===
v4408 a1563 v4475 
=== Predecessor ===
v3071 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a3016 #next: v4384  <|@  <|@
f <@~|@floating>@ <|@
tid v4475 <|@
result [v254|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a2343 
index: - 
=== Succesors ===
=== Usages ===
v4384 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2343 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4384 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v4475 
=== Succesors ===
next: v1987 
=== Usages ===
v3249 
=== Predecessor ===
a2343 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4475 #next: v1987  <|@  <|@
f <@~|@floating>@ <|@
tid v3249 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v4384 
y: v3223 
=== Succesors ===
=== Usages ===
v1987 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v4384 y: v3223  <|@  <|@
f <@*|@fixed>@ <|@
tid v1987 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v3249 
=== Succesors ===
trueSuccessor: v1984 
falseSuccessor: v1986 
=== Usages ===
=== Predecessor ===
v4384 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3249 #trueSuccessor: v1984 #falseSuccessor: v1986  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v254|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B286 -> B287 falseDestination: B286 -> B352 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B287"
    from_bci -1
    to_bci -1
    predecessors "B286" 
    successors "B288" "B289" 
    xhandlers
    flags 
    probability 4604433045635831900
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1984 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: j3078 
=== Usages ===
=== Predecessor ===
v1987 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j3078  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3078 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j3093 
=== Usages ===
v4476 v4477 
=== Predecessor ===
v1984 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j3093  <|@  <|@
f <@~|@floating>@ <|@
tid v4476 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j3078 
index: - 
=== Succesors ===
=== Usages ===
j3093 v3095 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3078 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3093 <|@
result v299|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v4476 
=== Succesors ===
next: j3094 
=== Usages ===
j3250 j3099 v4504 
=== Predecessor ===
j3078 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4476 #next: j3094  <|@  <|@
f <@~|@floating>@ <|@
tid v4477 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j3078 
index: - 
=== Succesors ===
=== Usages ===
j3094 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3078 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3094 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v4477 
=== Succesors ===
next: v3086 
=== Usages ===
v3083 
=== Predecessor ===
j3093 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4477 #next: v3086  <|@  <|@
f <@~|@floating>@ <|@
tid j3250 <|@
result v300|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3093 
y: j3225 
=== Succesors ===
=== Usages ===
v3083 v3095 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3093 y: j3225  <|@  <|@
f <@~|@floating>@ <|@
tid v3083 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3094 
y: j3250 
=== Succesors ===
=== Usages ===
v3086 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j3094 y: j3250  <|@  <|@
f <@*|@fixed>@ <|@
tid v3086 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v3083 
=== Succesors ===
trueSuccessor: v3084 
falseSuccessor: v3085 
=== Usages ===
=== Predecessor ===
j3094 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3083 #trueSuccessor: v3084 #falseSuccessor: v3085  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v299|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v300|QWORD = LEA [v299|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v300|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B287 -> B288 falseDestination: B287 -> B289 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B288"
    from_bci -1
    to_bci -1
    predecessors "B287" 
    successors "B290" 
    xhandlers
    flags 
    probability 4574660039549593971
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3084 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a3089 
=== Usages ===
=== Predecessor ===
v3086 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a3089  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3089 <|@
result v301|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?179 
arguments: v2582 i1663 i8 
=== Succesors ===
next: j3090 
=== Usages ===
j3090 
=== Predecessor ===
v3084 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?179 arguments: v2582 i1663 i8 #next: j3090  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3090 <|@
result v301|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a3089 
=== Succesors ===
next: v3100 
=== Usages ===
j3099 
=== Predecessor ===
a3089 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a3089 #next: v3100  <|@  <|@
f <@*|@fixed>@ <|@
tid v3100 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3097 
=== Predecessor ===
j3090 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v18|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
stack: vobject:ArrayList:0{modCount=v21|DWORD,size=v21|DWORD,elementData=v22|QWORD[.]} v225|DWORD 
locals: - - 
java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
locals: vobject:ArrayList:0{modCount=v21|DWORD,size=v21|DWORD,elementData=v22|QWORD[.]} vobject:String:1{value=v226|QWORD[.],hash=int[0|0x0]} 
java.lang.String.split(String.java:2368) [bci: 246]
locals: - - v2|DWORD - - - - vobject:ArrayList:0{modCount=v21|DWORD,size=v21|DWORD,elementData=v22|QWORD[.]} - - 
vobject:ArrayList:0{modCount=v21|DWORD,size=v21|DWORD,elementData=v22|QWORD[.]} Ljava/util/ArrayList; v21|DWORD v21|DWORD v22|QWORD[.] 
vobject:String:1{value=v226|QWORD[.],hash=int[0|0x0]} Ljava/lang/String; v226|QWORD[.] int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:9, 7, 246] <|@ <|@
      nr   -1  <|@ instruction v301|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v301|QWORD[.]] destination: B288 -> B290 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B289"
    from_bci -1
    to_bci -1
    predecessors "B287" 
    successors "B290" 
    xhandlers
    flags 
    probability 4604370467374926345
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3085 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3095 
=== Usages ===
=== Predecessor ===
v3086 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3095  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3095 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4476 
value: j3250 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3092 
=== Usages ===
=== Predecessor ===
v3085 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4476 value: j3250 stateAfter: - lastLocationAccess: - #next: v3092  <|@  <|@
f <@~|@floating>@ <|@
tid v4504 <|@
result [v299|QWORD + 216] <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j3093 
index: - 
=== Succesors ===
=== Usages ===
v3092 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3093 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3092 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v4504 
=== Succesors ===
next: v3098 
=== Usages ===
=== Predecessor ===
v3095 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v4504 #next: v3098  <|@  <|@
f <@*|@fixed>@ <|@
tid v3098 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3097 
=== Predecessor ===
v3092 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v300|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v299|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v299|QWORD] destination: B289 -> B290 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B290"
    from_bci -1
    to_bci -1
    predecessors "B289" "B288" 
    successors "B291" 
    xhandlers
    flags 
    probability 4604433045635831900
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3099 <|@
result v302|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3097 
values: j3093 j3090 
=== Succesors ===
=== Usages ===
v4480 v4479 a2091 v4505 v4506 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3097 values: j3093 j3090  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3097 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3098 v3100 
=== Succesors ===
next: a2091 
=== Usages ===
j3099 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3098 v3100 #next: a2091  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2091 <|@
result v303|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j3099 
=== Succesors ===
next: j3109 
=== Usages ===
a2096 
=== Predecessor ===
v3097 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j3099 #next: j3109  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3109 <|@
result v304|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v4478 
=== Succesors ===
next: v3110 
=== Usages ===
v3110 
=== Predecessor ===
a2091 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4478 #next: v3110  <|@  <|@
f <@~|@floating>@ <|@
tid v4479 <|@
result [v302|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j3099 
index: - 
=== Succesors ===
=== Usages ===
v3110 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3099 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3110 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4479 
value: j3109 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3113 
=== Usages ===
=== Predecessor ===
j3109 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4479 value: j3109 stateAfter: - lastLocationAccess: - #next: v3113  <|@  <|@
f <@~|@floating>@ <|@
tid v4480 <|@
result [v302|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j3099 
index: - 
=== Succesors ===
=== Usages ===
v3113 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3099 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3113 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4480 
value: v3230 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3117 
=== Usages ===
=== Predecessor ===
v3110 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4480 value: v3230 stateAfter: - lastLocationAccess: - #next: v3117  <|@  <|@
f <@~|@floating>@ <|@
tid v4505 <|@
result [v302|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j3099 
index: - 
=== Succesors ===
=== Usages ===
v3117 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3099 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3117 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4505 
value: a2145 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3119 
=== Usages ===
=== Predecessor ===
v3113 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4505 value: a2145 stateAfter: - lastLocationAccess: - #next: v3119  <|@  <|@
f <@~|@floating>@ <|@
tid v4506 <|@
result [v302|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j3099 
index: - 
=== Succesors ===
=== Usages ===
v3119 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3099 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3119 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4506 
value: i5 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a2096 
=== Usages ===
=== Predecessor ===
v3117 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4506 value: i5 stateAfter: - lastLocationAccess: - #next: a2096  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2096 <|@
result v303|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a2091 
=== Succesors ===
next: v2097 
=== Usages ===
a1765 
=== Predecessor ===
v3119 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a2091 #next: v2097  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2097 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v1766 
=== Usages ===
=== Predecessor ===
a2096 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v1766  <|@  <|@
f <@~|@floating>@ <|@
tid v4408 <|@
result [v254|QWORD[.] + v21|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a2343 
index: i503 
=== Succesors ===
=== Usages ===
v1766 j3120 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2343 index: i503  <|@  <|@
f <@~|@floating>@ <|@
tid a1765 <|@
result v305|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:463) [bci: 26]
at java.lang.String.split(String.java:2368) [bci: 246]
op: Compress
stamp: n -
=== Inputs ===
value: a2096 
=== Succesors ===
=== Usages ===
v1766 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2096  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1766 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:463) [bci: 26]
at java.lang.String.split(String.java:2368) [bci: 246]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1980 
address: v4408 
value: a1765 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j3120 
=== Usages ===
=== Predecessor ===
v2097 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1980 address: v4408 value: a1765 stateAfter: - lastLocationAccess: - #next: j3120  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3120 <|@
result [v254|QWORD[.] + v21|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at java.util.ArrayList.add(ArrayList.java:463) [bci: 26]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v4408 
=== Succesors ===
next: v3124 
=== Usages ===
j3121 
=== Predecessor ===
v1766 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v4408 #next: v3124  <|@  <|@
f <@~|@floating>@ <|@
tid j3121 <|@
result v306|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.ArrayList.add(ArrayList.java:463) [bci: 26]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j3120 
y: i2735 
=== Succesors ===
=== Usages ===
v4481 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j3120 y: i2735  <|@  <|@
f <@~|@floating>@ <|@
tid v4481 <|@
result [v306|QWORD[*] + v16|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j3121 
index: j2739 
=== Succesors ===
=== Usages ===
v3124 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3121 index: j2739  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3124 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.ArrayList.add(ArrayList.java:463) [bci: 26]
at java.lang.String.split(String.java:2368) [bci: 246]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4481 
value: i2741 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1559 
=== Usages ===
=== Predecessor ===
j3120 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4481 value: i2741 stateAfter: - lastLocationAccess: - #next: v1559  <|@  <|@
f <@*|@fixed>@ <|@
tid v1559 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1560 
=== Predecessor ===
v3124 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v302|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v303|QWORD[.] = MOVE v302|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v304|QWORD = MOV [v10|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v302|QWORD[*]], y: v304|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v302|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v302|QWORD[*] + 12], y: v227|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v302|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v305|DWORD[.] = COMPRESSPOINTER (input: v303|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@120cc8dc encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v254|QWORD[.] + v21|DWORD * 4 + 16], y: v305|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v307|QWORD[.] = LEA [v254|QWORD[.] + v21|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v306|QWORD[*] = SHR v307|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v306|QWORD[*] + v16|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v254|QWORD[.]] destination: B290 -> B291 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B291"
    from_bci -1
    to_bci -1
    predecessors "B290" "B238" 
    successors "B292" 
    xhandlers
    flags 
    probability 4614149222986594394
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a1563 <|@
result v308|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a! [Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v1560 
values: a2343 a505 
=== Succesors ===
=== Usages ===
?1467 v4402 v4401 v4405 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1560 values: a2343 a505  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1560 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1559 v1561 
=== Succesors ===
next: i4385 
=== Usages ===
a1563 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1559 v1561 #next: i4385  <|@  <|@
f <@~|@floating>@ <|@
tid v4401 <|@
result [v308|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1563 
index: - 
=== Succesors ===
=== Usages ===
i4385 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1563 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4385 <|@
result v309|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.ArrayList.elementData(ArrayList.java:422) [bci: 5]
at java.util.ArrayList.get(ArrayList.java:435) [bci: 7]
at java.lang.String.split(String.java:2373) [bci: 272]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v4401 
=== Succesors ===
next: v77 
=== Usages ===
v1689 j1826 
=== Predecessor ===
v1560 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4401 #next: v77  <|@  <|@
tid ?1467 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a244 
values: i396 i396 a1563 
=== Succesors ===
=== Usages ===
?80 ?688 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a244 values: i396 i396 a1563  <|@  <|@
f <@*|@fixed>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.split(String.java:2373) [bci: 261]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v78 
=== Predecessor ===
i4385 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v308|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v309|DWORD = MOV [v308|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v188|DWORD] destination: B291 -> B292 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B292"
    from_bci -1
    to_bci -1
    predecessors "B291" "B301" 
    successors "B293" "B294" 
    xhandlers
    flags "llh" 
    loop_index 11
    loop_depth 1
    probability 4618652822613964890
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i79 <|@
result v310|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v78 
values: i396 i83 
=== Succesors ===
=== Usages ===
?80 v81 i83 v853 i3130 a3152 v875 v587 j1828 ?1002 v3171 v3137 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v78 values: i396 i83  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 2.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.lang.String.split(String.java:2373) [bci: 261]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v77 
=== Succesors ===
next: v1992 
=== Usages ===
i79 v98 v102 v1991 v1996 v2001 v2006 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v77 #next: v1992  <|@  <|@
tid ?80 <|@
d <@d|@=== Debug Properties ===
bci: 261
code: ResolvedJavaMethodBytecode<String.split(String, int)>
duringCall: false
localsSize: 10
locksSize: 0
rethrowException: false
sourceFile: String.java
sourceLine: 2373
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - - - - a244 i79 - 
virtualObjectMappings: ?1467 
=== Succesors ===
=== Usages ===
v1809 v2443 a3152 a4388 i4389 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - - - - a244 i79 - virtualObjectMappings: ?1467  <|@  <|@
f <@~|@floating>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.split(String.java:2373) [bci: 263]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i79 
y: i8 
=== Succesors ===
=== Usages ===
v1992 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i79 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v1992 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.split(String.java:2373) [bci: 263]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v81 
=== Succesors ===
trueSuccessor: v1991 
falseSuccessor: v1988 
=== Usages ===
=== Predecessor ===
v78 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v81 #trueSuccessor: v1991 #falseSuccessor: v1988  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v310|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v310|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B292 -> B293 falseDestination: B292 -> B294 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B293"
    from_bci -1
    to_bci -1
    predecessors "B292" 
    successors "B351" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1991 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.split(String.java:2373) [bci: 263]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v78 
=== Succesors ===
next: v2444 
=== Usages ===
=== Predecessor ===
v1992 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v78 #next: v2444  <|@  <|@
f <@~|@floating>@ <|@
tid i2445 <|@
result int[-431379|0xfffffffffff96aed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -431379
stableDimension: 0
stamp: i32 [-431379] ⇊00000000fff96aed ⇈00000000fff96aed
stampKind: i32
value: int[-431379|0xfffffffffff96aed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2441 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2444 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2438 
=== Predecessor ===
v1991 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-431379|0xfffffffffff96aed], Object[null]] destination: B293 -> B351 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B294"
    from_bci -1
    to_bci -1
    predecessors "B292" 
    successors "B295" "B350" 
    xhandlers
    flags 
    loop_index 11
    loop_depth 1
    probability 4618652822613964890
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1988 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.split(String.java:2373) [bci: 263]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1997 
=== Usages ===
=== Predecessor ===
v1992 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1997  <|@  <|@
f <@~|@floating>@ <|@
tid i83 <|@
result v311|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.String.split(String.java:2373) [bci: 271]
stamp: i32
=== Inputs ===
x: i79 
y: i19 
=== Succesors ===
=== Usages ===
i3191 i79 v186 v1689 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i79 y: i19  <|@  <|@
f <@~|@floating>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList.rangeCheck(ArrayList.java:656) [bci: 5]
at java.util.ArrayList.get(ArrayList.java:433) [bci: 2]
at java.lang.String.split(String.java:2373) [bci: 272]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i83 
y: i396 
=== Succesors ===
=== Usages ===
v1997 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i83 y: i396  <|@  <|@
f <@*|@fixed>@ <|@
tid v1997 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.rangeCheck(ArrayList.java:656) [bci: 5]
at java.util.ArrayList.get(ArrayList.java:433) [bci: 2]
at java.lang.String.split(String.java:2373) [bci: 272]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v186 
=== Succesors ===
trueSuccessor: v1993 
falseSuccessor: v1996 
=== Usages ===
=== Predecessor ===
v1988 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v186 #trueSuccessor: v1993 #falseSuccessor: v1996  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v311|DWORD = DEC v310|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v188|DWORD, y: v311|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B294 -> B295 falseDestination: B294 -> B350 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B295"
    from_bci -1
    to_bci -1
    predecessors "B294" 
    successors "B296" "B349" 
    xhandlers
    flags 
    loop_index 11
    loop_depth 1
    probability 4618652822613964890
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1993 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.rangeCheck(ArrayList.java:656) [bci: 5]
at java.util.ArrayList.get(ArrayList.java:433) [bci: 2]
at java.lang.String.split(String.java:2373) [bci: 272]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2002 
=== Usages ===
=== Predecessor ===
v1997 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2002  <|@  <|@
f <@~|@floating>@ <|@
tid v1689 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.ArrayList.elementData(ArrayList.java:422) [bci: 5]
at java.util.ArrayList.get(ArrayList.java:435) [bci: 7]
at java.lang.String.split(String.java:2373) [bci: 272]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i83 
y: i4385 
=== Succesors ===
=== Usages ===
v2002 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i83 y: i4385  <|@  <|@
f <@*|@fixed>@ <|@
tid v2002 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.elementData(ArrayList.java:422) [bci: 5]
at java.util.ArrayList.get(ArrayList.java:435) [bci: 7]
at java.lang.String.split(String.java:2373) [bci: 272]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1689 
=== Succesors ===
trueSuccessor: v1998 
falseSuccessor: v2001 
=== Usages ===
=== Predecessor ===
v1993 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1689 #trueSuccessor: v1998 #falseSuccessor: v2001  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v309|DWORD, y: v311|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B295 -> B296 falseDestination: B295 -> B349 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B296"
    from_bci -1
    to_bci -1
    predecessors "B295" 
    successors "B297" "B298" 
    xhandlers
    flags 
    loop_index 11
    loop_depth 1
    probability 4618652822613964890
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1998 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.elementData(ArrayList.java:422) [bci: 5]
at java.util.ArrayList.get(ArrayList.java:435) [bci: 7]
at java.lang.String.split(String.java:2373) [bci: 272]
stamp: void
=== Inputs ===
=== Succesors ===
next: a4386 
=== Usages ===
a4386 
=== Predecessor ===
v2002 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a4386  <|@  <|@
f <@~|@floating>@ <|@
tid j1828 <|@
result v312|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i79 
=== Succesors ===
=== Usages ===
j1829 v1844 j3857 j3849 j3854 v4402 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i79  <|@  <|@
f <@~|@floating>@ <|@
tid v4402 <|@
result [v308|QWORD[.] + v312|QWORD * 4 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times4
stamp: void*
=== Inputs ===
base: a1563 
index: j1828 
=== Succesors ===
=== Usages ===
a4386 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1563 index: j1828  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4386 <|@
result v313|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.ArrayList.elementData(ArrayList.java:422) [bci: 5]
at java.util.ArrayList.get(ArrayList.java:435) [bci: 7]
at java.lang.String.split(String.java:2373) [bci: 272]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v1998 
address: v4402 
=== Succesors ===
next: v2102 
=== Usages ===
v4482 v1699 v4403 
=== Predecessor ===
v1998 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1998 address: v4402 #next: v2102  <|@  <|@
f <@~|@floating>@ <|@
tid v1699 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.split(String.java:2373) [bci: 275]
stamp: void
=== Inputs ===
value: a4386 
=== Succesors ===
=== Usages ===
v2102 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a4386  <|@  <|@
f <@*|@fixed>@ <|@
tid v2102 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 15]
at java.lang.String.split(String.java:2373) [bci: 275]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v1699 
=== Succesors ===
trueSuccessor: v2101 
falseSuccessor: v2100 
=== Usages ===
=== Predecessor ===
a4386 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1699 #trueSuccessor: v2101 #falseSuccessor: v2100  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v312|QWORD = MOVSXD v310|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v313|DWORD[.] = MOV [v308|QWORD[.] + v312|QWORD * 4 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v313|DWORD[.], y: v313|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B296 -> B297 falseDestination: B296 -> B298 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B297"
    from_bci -1
    to_bci -1
    predecessors "B296" 
    successors "B300" 
    xhandlers
    flags 
    loop_index 11
    loop_depth 1
    probability 4603748662894538004
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2101 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 18]
at java.lang.String.split(String.java:2373) [bci: 275]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2538 
=== Usages ===
=== Predecessor ===
v2102 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2538  <|@  <|@
f <@*|@fixed>@ <|@
tid v2538 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.split(String.java:2373) [bci: 275]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2536 
=== Predecessor ===
v2101 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B297 -> B300 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B298"
    from_bci -1
    to_bci -1
    predecessors "B296" 
    successors "B299" "B348" 
    xhandlers
    flags 
    loop_index 11
    loop_depth 1
    probability 4617956142195307192
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:141) [bci: 28]
at java.lang.String.split(String.java:2373) [bci: 275]
stamp: void
=== Inputs ===
=== Succesors ===
next: v4387 
=== Usages ===
=== Predecessor ===
v2102 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4387  <|@  <|@
f <@~|@floating>@ <|@
tid v4482 <|@
result [v313|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a4386 
=== Succesors ===
=== Usages ===
v4387 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a4386  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4387 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.lang.String.split(String.java:2373) [bci: 275]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v4482 
=== Succesors ===
next: v4321 
=== Usages ===
v3255 
=== Predecessor ===
v2100 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4482 #next: v4321  <|@  <|@
f <@~|@floating>@ <|@
tid v3255 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.lang.String.split(String.java:2373) [bci: 275]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v4387 
y: v3230 
=== Succesors ===
=== Usages ===
v4321 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v4387 y: v3230  <|@  <|@
f <@*|@fixed>@ <|@
tid v4321 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.split(String.java:2373) [bci: 275]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v3255 
=== Succesors ===
trueSuccessor: v4320 
falseSuccessor: v2006 
=== Usages ===
=== Predecessor ===
v4387 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3255 #trueSuccessor: v4320 #falseSuccessor: v2006  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v313|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B298 -> B299 falseDestination: B298 -> B348 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B299"
    from_bci -1
    to_bci -1
    predecessors "B298" 
    successors "B300" 
    xhandlers
    flags 
    loop_index 11
    loop_depth 1
    probability 4617956142195307192
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4320 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.split(String.java:2373) [bci: 275]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2547 
=== Usages ===
=== Predecessor ===
v4321 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2547  <|@  <|@
f <@*|@fixed>@ <|@
tid v2547 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.split(String.java:2373) [bci: 275]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2536 
=== Predecessor ===
v4320 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B299 -> B300 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B300"
    from_bci -1
    to_bci -1
    predecessors "B297" "B299" 
    successors "B301" "B302" 
    xhandlers
    flags 
    loop_index 11
    loop_depth 1
    probability 4618652822613964890
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2536 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.split(String.java:2373) [bci: 275]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2538 v2547 
=== Succesors ===
next: a4388 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2538 v2547 #next: a4388  <|@  <|@
f <@~|@floating>@ <|@
tid v4403 <|@
result [v313|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a4386 
=== Succesors ===
=== Usages ===
a4388 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a4386  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4388 <|@
result v314|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at java.lang.String.split(String.java:2373) [bci: 278]
nullCheck: true
stamp: n# [C
=== Inputs ===
stateBefore: ?80 
guard: - 
address: v4403 
=== Succesors ===
next: i4389 
=== Usages ===
v4404 
=== Predecessor ===
v2536 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?80 guard: - address: v4403 #next: i4389  <|@  <|@
f <@~|@floating>@ <|@
tid v4404 <|@
result [v314|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a4388 
=== Succesors ===
=== Usages ===
i4389 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a4388  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4389 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at java.lang.String.split(String.java:2373) [bci: 278]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?80 
guard: - 
address: v4404 
=== Succesors ===
next: v101 
=== Usages ===
v95 
=== Predecessor ===
a4388 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?80 guard: - address: v4404 #next: v101  <|@  <|@
f <@~|@floating>@ <|@
tid v95 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.split(String.java:2373) [bci: 281]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4389 
y: i5 
=== Succesors ===
=== Usages ===
v101 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i4389 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v101 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.split(String.java:2373) [bci: 281]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v95 
=== Succesors ===
trueSuccessor: v96 
falseSuccessor: v98 
=== Usages ===
=== Predecessor ===
i4389 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v95 #trueSuccessor: v96 #falseSuccessor: v98  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.split(String.java:2373) [bci: 261]
locals: - - - - - - - vobject:ArrayList:0{modCount=v188|DWORD,size=v188|DWORD,elementData=v308|QWORD[.]} v310|DWORD - 
vobject:ArrayList:0{modCount=v188|DWORD,size=v188|DWORD,elementData=v308|QWORD[.]} Ljava/util/ArrayList; v188|DWORD v188|DWORD v308|QWORD[.] 
>@ <|@ instruction v314|DWORD[.] = MOV [v313|DWORD[.] * 8 + 12] size: DWORD state [bci:261] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.split(String.java:2373) [bci: 261]
locals: - - - - - - - vobject:ArrayList:0{modCount=v188|DWORD,size=v188|DWORD,elementData=v308|QWORD[.]} v310|DWORD - 
vobject:ArrayList:0{modCount=v188|DWORD,size=v188|DWORD,elementData=v308|QWORD[.]} Ljava/util/ArrayList; v188|DWORD v188|DWORD v308|QWORD[.] 
>@ <|@ instruction CMP [v314|DWORD[.] * 8 + 12] y: 0 size: DWORD state [bci:261] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B300 -> B301 falseDestination: B300 -> B302 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B301"
    from_bci -1
    to_bci -1
    predecessors "B300" 
    successors "B292" 
    xhandlers
    flags "lle" 
    loop_index 11
    loop_depth 1
    probability 4614149222986594394
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.split(String.java:2374) [bci: 284]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1809 
=== Usages ===
=== Predecessor ===
v101 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1809  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1809 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?80 
=== Succesors ===
next: v102 
=== Usages ===
=== Predecessor ===
v96 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?80 #next: v102  <|@  <|@
f <@*|@fixed>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at java.lang.String.split(String.java:2373) [bci: 261]
stamp: void
=== Inputs ===
loopBegin: v78 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1809 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v78  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.split(String.java:2373) [bci: 261]
locals: - - - - - - - vobject:ArrayList:0{modCount=v188|DWORD,size=v188|DWORD,elementData=v308|QWORD[.]} v310|DWORD - 
vobject:ArrayList:0{modCount=v188|DWORD,size=v188|DWORD,elementData=v308|QWORD[.]} Ljava/util/ArrayList; v188|DWORD v188|DWORD v308|QWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:261] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v311|DWORD] destination: B301 -> B292 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B302"
    from_bci -1
    to_bci -1
    predecessors "B300" 
    successors "B303" "B347" 
    xhandlers
    flags 
    probability 4614149222986594394
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.split(String.java:2377) [bci: 290]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v78 
=== Succesors ===
next: v4283 
=== Usages ===
=== Predecessor ===
v101 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v78 #next: v4283  <|@  <|@
f <@~|@floating>@ <|@
tid j1829 <|@
result v315|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j1828 
y: j1816 
=== Succesors ===
=== Usages ===
v1844 v1831 v1838 v3860 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1828 y: j1816  <|@  <|@
f <@~|@floating>@ <|@
tid j1826 <|@
result v316|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i4385 
=== Succesors ===
=== Usages ===
v1831 v1838 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i4385  <|@  <|@
f <@~|@floating>@ <|@
tid v1831 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1829 
y: j1826 
=== Succesors ===
=== Usages ===
v4283 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1829 y: j1826  <|@  <|@
f <@*|@fixed>@ <|@
tid v4283 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1119) [bci: 47]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
at java.lang.String.split(String.java:2378) [bci: 307]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1831 
=== Succesors ===
trueSuccessor: v4282 
falseSuccessor: v4279 
=== Usages ===
=== Predecessor ===
v98 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1831 #trueSuccessor: v4282 #falseSuccessor: v4279  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v315|QWORD = DEC v312|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v316|QWORD = MOV v309|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v316|QWORD, y: v315|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B302 -> B303 falseDestination: B302 -> B347 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B303"
    from_bci -1
    to_bci -1
    predecessors "B302" 
    successors "B304" "B346" 
    xhandlers
    flags 
    probability 4614149222986594394
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4282 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1119) [bci: 47]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
at java.lang.String.split(String.java:2378) [bci: 307]
stamp: void
=== Inputs ===
=== Succesors ===
next: v4299 
=== Usages ===
=== Predecessor ===
v4283 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4299  <|@  <|@
f <@~|@floating>@ <|@
tid v1838 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1829 
y: j1826 
=== Succesors ===
=== Usages ===
v4299 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1829 y: j1826  <|@  <|@
f <@*|@fixed>@ <|@
tid v4299 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1122) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
at java.lang.String.split(String.java:2378) [bci: 307]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1838 
=== Succesors ===
trueSuccessor: v4298 
falseSuccessor: v4295 
=== Usages ===
=== Predecessor ===
v4282 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1838 #trueSuccessor: v4298 #falseSuccessor: v4295  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v316|QWORD, y: v315|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B303 -> B304 falseDestination: B303 -> B346 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B304"
    from_bci -1
    to_bci -1
    predecessors "B303" 
    successors "B305" "B345" 
    xhandlers
    flags 
    probability 4614149222986594394
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4298 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1122) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
at java.lang.String.split(String.java:2378) [bci: 307]
stamp: void
=== Inputs ===
=== Succesors ===
next: v4315 
=== Usages ===
v1843 
=== Predecessor ===
v4299 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4315  <|@  <|@
f <@~|@floating>@ <|@
tid v1844 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1829 
y: j1828 
=== Succesors ===
=== Usages ===
v4315 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1829 y: j1828  <|@  <|@
f <@*|@fixed>@ <|@
tid v4315 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
at java.lang.String.split(String.java:2378) [bci: 307]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1844 
=== Succesors ===
trueSuccessor: v4314 
falseSuccessor: v4311 
=== Usages ===
=== Predecessor ===
v4298 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1844 #trueSuccessor: v4314 #falseSuccessor: v4311  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v312|QWORD, y: v315|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B304 -> B305 falseDestination: B304 -> B345 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B305"
    from_bci -1
    to_bci -1
    predecessors "B304" 
    successors "B306" "B307" 
    xhandlers
    flags 
    probability 4614149222986594394
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4314 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
at java.lang.String.split(String.java:2378) [bci: 307]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2033 
=== Usages ===
v1849 
=== Predecessor ===
v4315 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2033  <|@  <|@
f <@~|@floating>@ <|@
tid v587 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList.subListRangeCheck(ArrayList.java:1011) [bci: 33]
at java.util.ArrayList.subList(ArrayList.java:1004) [bci: 6]
at java.lang.String.split(String.java:2378) [bci: 302]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i396 
y: i79 
=== Succesors ===
=== Usages ===
v2033 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i396 y: i79  <|@  <|@
f <@*|@fixed>@ <|@
tid v2033 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.subListRangeCheck(ArrayList.java:1011) [bci: 33]
at java.util.ArrayList.subList(ArrayList.java:1004) [bci: 6]
at java.lang.String.split(String.java:2378) [bci: 302]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v587 
=== Succesors ===
trueSuccessor: v2032 
falseSuccessor: v2030 
=== Usages ===
=== Predecessor ===
v4314 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v587 #trueSuccessor: v2032 #falseSuccessor: v2030  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v310|DWORD, y: v188|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B305 -> B306 falseDestination: B305 -> B307 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B306"
    from_bci -1
    to_bci -1
    predecessors "B305" 
    successors "B351" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2032 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.subListRangeCheck(ArrayList.java:1011) [bci: 33]
at java.util.ArrayList.subList(ArrayList.java:1004) [bci: 6]
at java.lang.String.split(String.java:2378) [bci: 302]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2439 
=== Usages ===
=== Predecessor ===
v2033 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2439  <|@  <|@
f <@~|@floating>@ <|@
tid i2440 <|@
result int[-438803|0xfffffffffff94ded] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -438803
stableDimension: 0
stamp: i32 [-438803] ⇊00000000fff94ded ⇈00000000fff94ded
stampKind: i32
value: int[-438803|0xfffffffffff94ded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2441 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2439 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2438 
=== Predecessor ===
v2032 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-438803|0xfffffffffff94ded], Object[null]] destination: B306 -> B351 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B307"
    from_bci -1
    to_bci -1
    predecessors "B305" 
    successors "B308" "B311" 
    xhandlers
    flags 
    probability 4614149222986594394
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2030 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.subListRangeCheck(ArrayList.java:1011) [bci: 33]
at java.util.ArrayList.subList(ArrayList.java:1004) [bci: 6]
at java.lang.String.split(String.java:2378) [bci: 302]
stamp: void
=== Inputs ===
=== Succesors ===
next: j3132 
=== Usages ===
=== Predecessor ===
v2033 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j3132  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3132 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.split(String.java:2377) [bci: 292]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j3168 
=== Usages ===
v4483 v4484 
=== Predecessor ===
v2030 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j3168  <|@  <|@
f <@~|@floating>@ <|@
tid v4483 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j3132 
index: - 
=== Succesors ===
=== Usages ===
j3168 v3170 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3132 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3168 <|@
result v317|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.split(String.java:2377) [bci: 292]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v4483 
=== Succesors ===
next: j3169 
=== Usages ===
j3136 v4485 v4486 a3151 v4491 v4487 v4488 v4489 v4490 
=== Predecessor ===
j3132 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4483 #next: j3169  <|@  <|@
f <@~|@floating>@ <|@
tid v4484 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j3132 
index: - 
=== Succesors ===
=== Usages ===
j3169 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3132 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3169 <|@
result v318|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.split(String.java:2377) [bci: 292]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v4484 
=== Succesors ===
next: v3140 
=== Usages ===
v3141 
=== Predecessor ===
j3168 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4484 #next: v3140  <|@  <|@
f <@~|@floating>@ <|@
tid v3137 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.split(String.java:2377) [bci: 292]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i79 
y: i2641 
=== Succesors ===
=== Usages ===
v3140 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i79 y: i2641  <|@  <|@
f <@*|@fixed>@ <|@
tid v3140 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.split(String.java:2377) [bci: 292]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v3137 
=== Succesors ===
trueSuccessor: v3139 
falseSuccessor: v3138 
=== Usages ===
=== Predecessor ===
j3169 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3137 #trueSuccessor: v3139 #falseSuccessor: v3138  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v317|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v318|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v310|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B307 -> B308 falseDestination: B307 -> B311 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B308"
    from_bci -1
    to_bci -1
    predecessors "B307" 
    successors "B309" "B310" 
    xhandlers
    flags 
    probability 4613452542567936696
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3139 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.split(String.java:2377) [bci: 292]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3147 
=== Usages ===
=== Predecessor ===
v3140 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3147  <|@  <|@
f <@~|@floating>@ <|@
tid i3130 <|@
result v319|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.split(String.java:2377) [bci: 292]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i79 
y: i1663 
=== Succesors ===
=== Usages ===
i3159 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i79 y: i1663  <|@  <|@
f <@~|@floating>@ <|@
tid i3159 <|@
result v320|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.split(String.java:2377) [bci: 292]
stamp: i32 [-2147483645 - 2147483647] ⇊0000000000000003
=== Inputs ===
x: i3130 
y: i2664 
=== Succesors ===
=== Usages ===
i3131 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i3130 y: i2664  <|@  <|@
f <@~|@floating>@ <|@
tid i3131 <|@
result v321|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.split(String.java:2377) [bci: 292]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i3159 
y: i2634 
=== Succesors ===
=== Usages ===
j3135 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i3159 y: i2634  <|@  <|@
f <@~|@floating>@ <|@
tid j3135 <|@
result v322|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.split(String.java:2377) [bci: 292]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i3131 
=== Succesors ===
=== Usages ===
j3136 v4487 v4488 v4489 v4490 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i3131  <|@  <|@
f <@~|@floating>@ <|@
tid j3136 <|@
result v323|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.split(String.java:2377) [bci: 292]
stamp: i64
=== Inputs ===
x: j3135 
y: j3168 
=== Succesors ===
=== Usages ===
v3141 v3170 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3135 y: j3168  <|@  <|@
f <@~|@floating>@ <|@
tid v3141 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.split(String.java:2377) [bci: 292]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3169 
y: j3136 
=== Succesors ===
=== Usages ===
v3147 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j3169 y: j3136  <|@  <|@
f <@*|@fixed>@ <|@
tid v3147 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.split(String.java:2377) [bci: 292]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v3141 
=== Succesors ===
trueSuccessor: v3146 
falseSuccessor: v3145 
=== Usages ===
=== Predecessor ===
v3139 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3141 #trueSuccessor: v3146 #falseSuccessor: v3145  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v319|DWORD = SHL v310|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v320|DWORD = LEA [v319|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v321|DWORD = AND v320|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v322|QWORD = MOVSXD v321|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v323|QWORD = ADD (x: v322|QWORD, y: v317|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v323|QWORD, y: v318|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B308 -> B309 falseDestination: B308 -> B310 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B309"
    from_bci -1
    to_bci -1
    predecessors "B308" 
    successors "B312" 
    xhandlers
    flags 
    probability 4583682979831360632
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3146 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.split(String.java:2377) [bci: 292]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3144 
=== Usages ===
=== Predecessor ===
v3147 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3144  <|@  <|@
f <@*|@fixed>@ <|@
tid v3144 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.split(String.java:2377) [bci: 292]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3143 
=== Predecessor ===
v3146 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B309 -> B312 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B310"
    from_bci -1
    to_bci -1
    predecessors "B308" 
    successors "B313" 
    xhandlers
    flags 
    probability 4613389841330257503
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3145 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.split(String.java:2377) [bci: 292]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3170 
=== Usages ===
=== Predecessor ===
v3147 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3170  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3170 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.split(String.java:2377) [bci: 292]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4483 
value: j3136 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3161 
=== Usages ===
=== Predecessor ===
v3145 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4483 value: j3136 stateAfter: - lastLocationAccess: - #next: v3161  <|@  <|@
f <@~|@floating>@ <|@
tid v4487 <|@
result [v322|QWORD + v317|QWORD * 1 + 192] <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j3135 
index: j3168 
=== Succesors ===
=== Usages ===
v3161 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3135 index: j3168  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3161 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.split(String.java:2377) [bci: 292]
stamp: void
=== Inputs ===
address: v4487 
=== Succesors ===
next: v3163 
=== Usages ===
=== Predecessor ===
v3170 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v4487 #next: v3163  <|@  <|@
f <@~|@floating>@ <|@
tid v4488 <|@
result [v322|QWORD + v317|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j3135 
index: j3168 
=== Succesors ===
=== Usages ===
v3163 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3135 index: j3168  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3163 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.split(String.java:2377) [bci: 292]
stamp: void
=== Inputs ===
address: v4488 
=== Succesors ===
next: v3165 
=== Usages ===
=== Predecessor ===
v3161 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v4488 #next: v3165  <|@  <|@
f <@~|@floating>@ <|@
tid v4489 <|@
result [v322|QWORD + v317|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j3135 
index: j3168 
=== Succesors ===
=== Usages ===
v3165 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3135 index: j3168  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3165 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.split(String.java:2377) [bci: 292]
stamp: void
=== Inputs ===
address: v4489 
=== Succesors ===
next: v3167 
=== Usages ===
=== Predecessor ===
v3163 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v4489 #next: v3167  <|@  <|@
f <@~|@floating>@ <|@
tid v4490 <|@
result [v322|QWORD + v317|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j3135 
index: j3168 
=== Succesors ===
=== Usages ===
v3167 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3135 index: j3168  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3167 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.split(String.java:2377) [bci: 292]
stamp: void
=== Inputs ===
address: v4490 
=== Succesors ===
next: v3171 
=== Usages ===
=== Predecessor ===
v3165 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v4490 #next: v3171  <|@  <|@
f <@~|@floating>@ <|@
tid v4485 <|@
result [v317|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j3168 
index: - 
=== Succesors ===
=== Usages ===
v3171 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3168 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3171 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.split(String.java:2377) [bci: 292]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4485 
value: i79 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3172 
=== Usages ===
=== Predecessor ===
v3167 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4485 value: i79 stateAfter: - lastLocationAccess: - #next: v3172  <|@  <|@
f <@~|@floating>@ <|@
tid v4486 <|@
result [v317|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j3168 
index: - 
=== Succesors ===
=== Usages ===
v3172 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3168 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3172 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.split(String.java:2377) [bci: 292]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4486 
value: j2632 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3175 
=== Usages ===
=== Predecessor ===
v3171 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4486 value: j2632 stateAfter: - lastLocationAccess: - #next: v3175  <|@  <|@
f <@~|@floating>@ <|@
tid v4491 <|@
result [v317|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j3168 
index: - 
=== Succesors ===
=== Usages ===
v3175 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3168 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3175 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.split(String.java:2377) [bci: 292]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4491 
value: v3243 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3150 
=== Usages ===
=== Predecessor ===
v3172 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4491 value: v3243 stateAfter: - lastLocationAccess: - #next: v3150  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3150 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.split(String.java:2377) [bci: 292]
stamp: void
=== Inputs ===
=== Succesors ===
next: a3151 
=== Usages ===
=== Predecessor ===
v3175 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a3151  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3151 <|@
result v324|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.split(String.java:2377) [bci: 292]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j3168 
=== Succesors ===
next: v3153 
=== Usages ===
a3156 
=== Predecessor ===
v3150 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j3168 #next: v3153  <|@  <|@
f <@*|@fixed>@ <|@
tid v3153 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.split(String.java:2377) [bci: 292]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3154 
=== Predecessor ===
a3151 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v323|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v322|QWORD + v317|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v322|QWORD + v317|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v322|QWORD + v317|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v322|QWORD + v317|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v317|QWORD + 12], y: v310|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v317|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v317|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v324|QWORD[.] = MOVE v317|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v324|QWORD[.]] destination: B310 -> B313 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B311"
    from_bci -1
    to_bci -1
    predecessors "B307" 
    successors "B312" 
    xhandlers
    flags 
    probability 4599245063267167508
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3138 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.split(String.java:2377) [bci: 292]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3142 
=== Usages ===
=== Predecessor ===
v3140 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3142  <|@  <|@
f <@*|@fixed>@ <|@
tid v3142 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.split(String.java:2377) [bci: 292]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3143 
=== Predecessor ===
v3138 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B311 -> B312 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B312"
    from_bci -1
    to_bci -1
    predecessors "B311" "B309" 
    successors "B313" 
    xhandlers
    flags 
    probability 4599746673168601052
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3143 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.split(String.java:2377) [bci: 292]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3142 v3144 
=== Succesors ===
next: a3152 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3142 v3144 #next: a3152  <|@  <|@
f <@~|@floating>@ <|@
tid v2872 <|@
result v325|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[Ljava/lang/String;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[Ljava/lang/String;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a3152 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3152 <|@
result v326|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.split(String.java:2377) [bci: 292]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?80 
arguments: v2872 i79 i5 
=== Succesors ===
next: v3155 
=== Usages ===
a3156 
=== Predecessor ===
v3143 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?80 arguments: v2872 i79 i5 #next: v3155  <|@  <|@
f <@*|@fixed>@ <|@
tid v3155 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.split(String.java:2377) [bci: 292]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3154 
=== Predecessor ===
a3152 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v325|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/String;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v325|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v310|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.split(String.java:2373) [bci: 261]
locals: - - - - - - - vobject:ArrayList:0{modCount=v188|DWORD,size=v188|DWORD,elementData=v308|QWORD[.]} v310|DWORD - 
vobject:ArrayList:0{modCount=v188|DWORD,size=v188|DWORD,elementData=v308|QWORD[.]} Ljava/util/ArrayList; v188|DWORD v188|DWORD v308|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:261] <|@ <|@
      nr   -1  <|@ instruction v326|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v326|QWORD[.]] destination: B312 -> B313 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B313"
    from_bci -1
    to_bci -1
    predecessors "B310" "B312" 
    successors "B314" "B315" 
    xhandlers
    flags 
    probability 4614149222986594394
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a3156 <|@
result v327|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.split(String.java:2377) [bci: 292]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v3154 
values: a3151 a3152 
=== Succesors ===
=== Usages ===
v4416 a2347 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3154 values: a3151 a3152  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3154 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.split(String.java:2377) [bci: 292]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3153 v3155 
=== Succesors ===
next: v3822 
=== Usages ===
a3156 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3153 v3155 #next: v3822  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3822 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v3355 
=== Usages ===
j3824 
=== Predecessor ===
v3154 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v3355  <|@  <|@
f <@~|@floating>@ <|@
tid v4416 <|@
result [v327|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a3156 
index: - 
=== Succesors ===
=== Usages ===
j3824 j3189 j3187 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3156 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j3824 <|@
result v328|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v3822 
address: v4416 
=== Succesors ===
=== Usages ===
v4520 v4521 v4522 v4523 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v3822 address: v4416  <|@  <|@
f <@~|@floating>@ <|@
tid j3849 <|@
result v329|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j1828 
y: j3807 
=== Succesors ===
=== Usages ===
v3850 v3852 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1828 y: j3807  <|@  <|@
f <@~|@floating>@ <|@
tid v3850 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3849 
y: j2049 
=== Succesors ===
=== Usages ===
v3355 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3849 y: j2049  <|@  <|@
f <@*|@fixed>@ <|@
tid v3355 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v3850 
=== Succesors ===
trueSuccessor: v3353 
falseSuccessor: v3354 
=== Usages ===
=== Predecessor ===
v3822 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3850 #trueSuccessor: v3353 #falseSuccessor: v3354  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v327|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v328|QWORD[.] = LEA [v327|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v329|QWORD = LEA [v312|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v329|QWORD, y: v329|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B313 -> B314 falseDestination: B313 -> B315 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B314"
    from_bci -1
    to_bci -1
    predecessors "B313" 
    successors "B318" 
    xhandlers
    flags 
    probability 4612407521939950148
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3353 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3364 
=== Usages ===
=== Predecessor ===
v3355 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3364  <|@  <|@
f <@*|@fixed>@ <|@
tid v3364 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3365 
=== Predecessor ===
v3353 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B314 -> B318 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B315"
    from_bci -1
    to_bci -1
    predecessors "B313" 
    successors "B316" 
    xhandlers
    flags 
    probability 4605142023731853402
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3354 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3356 
=== Usages ===
=== Predecessor ===
v3355 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3356  <|@  <|@
f <@*|@fixed>@ <|@
tid v3356 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3357 
=== Predecessor ===
v3354 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B315 -> B316 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B316"
    from_bci -1
    to_bci -1
    predecessors "B315" "B344" 
    successors "B317" "B344" 
    xhandlers
    flags "llh" 
    loop_index 12
    loop_depth 1
    probability 4614149222986594394
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3843 <|@
result v330|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3357 
values: j2049 j3848 
=== Succesors ===
=== Usages ===
v4523 j3848 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3357 values: j2049 j3848  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3357 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v3356 
=== Succesors ===
next: v4198 
=== Usages ===
j3843 v3360 v3361 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v3356 #next: v4198  <|@  <|@
f <@~|@floating>@ <|@
tid v4523 <|@
result [v328|QWORD[.] + v330|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j3824 
index: j3843 
=== Succesors ===
=== Usages ===
v4198 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3824 index: j3843  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4198 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4523 
value: v4243 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3363 
=== Usages ===
=== Predecessor ===
v3357 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4523 value: v4243 stateAfter: - lastLocationAccess: - #next: v3363  <|@  <|@
f <@~|@floating>@ <|@
tid j3848 <|@
result v331|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3843 
y: j2577 
=== Succesors ===
=== Usages ===
j3837 j3843 v3852 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3843 y: j2577  <|@  <|@
f <@~|@floating>@ <|@
tid v3852 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3849 
y: j3848 
=== Succesors ===
=== Usages ===
v3363 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3849 y: j3848  <|@  <|@
f <@*|@fixed>@ <|@
tid v3363 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3852 
=== Succesors ===
trueSuccessor: v3360 
falseSuccessor: v3362 
=== Usages ===
=== Predecessor ===
v4198 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3852 #trueSuccessor: v3360 #falseSuccessor: v3362  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v330|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v328|QWORD[.] + v330|QWORD * 4], input: v9|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v331|QWORD = LEA [v330|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v331|QWORD, y: v329|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B316 -> B317 falseDestination: B316 -> B344 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B317"
    from_bci -1
    to_bci -1
    predecessors "B316" 
    successors "B318" 
    xhandlers
    flags 
    probability 4605142023731853402
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3360 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v3357 
=== Succesors ===
next: v3366 
=== Usages ===
=== Predecessor ===
v3363 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v3357 #next: v3366  <|@  <|@
f <@*|@fixed>@ <|@
tid v3366 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3365 
=== Predecessor ===
v3360 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v331|QWORD] destination: B317 -> B318 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B318"
    from_bci -1
    to_bci -1
    predecessors "B314" "B317" 
    successors "B319" "B320" 
    xhandlers
    flags 
    probability 4614149222986594394
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3837 <|@
result v332|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3365 
values: j2049 j3848 
=== Succesors ===
=== Usages ===
v4522 j3842 j3831 v3855 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3365 values: j2049 j3848  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3365 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3364 v3366 
=== Succesors ===
next: v3384 
=== Usages ===
j3837 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3364 v3366 #next: v3384  <|@  <|@
f <@~|@floating>@ <|@
tid j3854 <|@
result v333|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j1828 
y: j3811 
=== Succesors ===
=== Usages ===
v3855 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1828 y: j3811  <|@  <|@
f <@~|@floating>@ <|@
tid v3855 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3854 
y: j3837 
=== Succesors ===
=== Usages ===
v3384 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3854 y: j3837  <|@  <|@
f <@*|@fixed>@ <|@
tid v3384 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3855 
=== Succesors ===
trueSuccessor: v3383 
falseSuccessor: v3382 
=== Usages ===
=== Predecessor ===
v3365 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3855 #trueSuccessor: v3383 #falseSuccessor: v3382  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v332|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v333|QWORD = LEA [v312|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v332|QWORD, y: v333|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B318 -> B319 falseDestination: B318 -> B320 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B319"
    from_bci -1
    to_bci -1
    predecessors "B318" 
    successors "B321" 
    xhandlers
    flags 
    probability 4605142023731853402
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3383 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3387 
=== Usages ===
=== Predecessor ===
v3384 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3387  <|@  <|@
f <@*|@fixed>@ <|@
tid v3387 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3376 
=== Predecessor ===
v3383 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v332|QWORD] destination: B319 -> B321 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B320"
    from_bci -1
    to_bci -1
    predecessors "B318" 
    successors "B321" 
    xhandlers
    flags 
    probability 4612407521939950148
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3382 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4197 
=== Usages ===
=== Predecessor ===
v3384 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4197  <|@  <|@
f <@~|@floating>@ <|@
tid v4522 <|@
result [v328|QWORD[.] + v332|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j3824 
index: j3837 
=== Succesors ===
=== Usages ===
v4197 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3824 index: j3837  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4197 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4522 
value: v4246 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3375 
=== Usages ===
=== Predecessor ===
v3382 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4522 value: v4246 stateAfter: - lastLocationAccess: - #next: v3375  <|@  <|@
f <@~|@floating>@ <|@
tid j3842 <|@
result v334|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3837 
y: j3783 
=== Succesors ===
=== Usages ===
j3831 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3837 y: j3783  <|@  <|@
f <@*|@fixed>@ <|@
tid v3375 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3376 
=== Predecessor ===
v4197 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v328|QWORD[.] + v332|QWORD * 4], input: v8|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v334|QWORD = LEA [v332|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v334|QWORD] destination: B320 -> B321 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B321"
    from_bci -1
    to_bci -1
    predecessors "B320" "B319" 
    successors "B322" "B323" 
    xhandlers
    flags 
    probability 4614149222986594394
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3831 <|@
result v335|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3376 
values: j3842 j3837 
=== Succesors ===
=== Usages ===
v4521 j3836 j3825 v3858 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3376 values: j3842 j3837  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3376 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3375 v3387 
=== Succesors ===
next: v3390 
=== Usages ===
j3831 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3375 v3387 #next: v3390  <|@  <|@
f <@~|@floating>@ <|@
tid j3857 <|@
result v336|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j1828 
y: j3815 
=== Succesors ===
=== Usages ===
v3858 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1828 y: j3815  <|@  <|@
f <@~|@floating>@ <|@
tid v3858 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3857 
y: j3831 
=== Succesors ===
=== Usages ===
v3390 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3857 y: j3831  <|@  <|@
f <@*|@fixed>@ <|@
tid v3390 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3858 
=== Succesors ===
trueSuccessor: v3389 
falseSuccessor: v3388 
=== Usages ===
=== Predecessor ===
v3376 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3858 #trueSuccessor: v3389 #falseSuccessor: v3388  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v335|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v336|QWORD = LEA [v312|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v335|QWORD, y: v336|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B321 -> B322 falseDestination: B321 -> B323 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B322"
    from_bci -1
    to_bci -1
    predecessors "B321" 
    successors "B324" 
    xhandlers
    flags 
    probability 4605142023731853402
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3389 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3393 
=== Usages ===
=== Predecessor ===
v3390 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3393  <|@  <|@
f <@*|@fixed>@ <|@
tid v3393 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3379 
=== Predecessor ===
v3389 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v335|QWORD] destination: B322 -> B324 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B323"
    from_bci -1
    to_bci -1
    predecessors "B321" 
    successors "B324" 
    xhandlers
    flags 
    probability 4612407521939950148
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3388 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4195 
=== Usages ===
=== Predecessor ===
v3390 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4195  <|@  <|@
f <@~|@floating>@ <|@
tid v4521 <|@
result [v328|QWORD[.] + v335|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j3824 
index: j3831 
=== Succesors ===
=== Usages ===
v4195 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3824 index: j3831  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4195 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4521 
value: v4245 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3378 
=== Usages ===
=== Predecessor ===
v3388 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4521 value: v4245 stateAfter: - lastLocationAccess: - #next: v3378  <|@  <|@
f <@~|@floating>@ <|@
tid j3836 <|@
result v337|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3831 
y: j3761 
=== Succesors ===
=== Usages ===
j3825 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3831 y: j3761  <|@  <|@
f <@*|@fixed>@ <|@
tid v3378 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3379 
=== Predecessor ===
v4195 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v328|QWORD[.] + v335|QWORD * 4], input: v7|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v337|QWORD = LEA [v335|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v337|QWORD] destination: B323 -> B324 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B324"
    from_bci -1
    to_bci -1
    predecessors "B323" "B322" 
    successors "B325" "B326" 
    xhandlers
    flags 
    probability 4614149222986594394
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3825 <|@
result v338|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3379 
values: j3836 j3831 
=== Succesors ===
=== Usages ===
v4520 v3860 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3379 values: j3836 j3831  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3379 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3378 v3393 
=== Succesors ===
next: v3396 
=== Usages ===
j3825 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3378 v3393 #next: v3396  <|@  <|@
f <@~|@floating>@ <|@
tid v3860 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1829 
y: j3825 
=== Succesors ===
=== Usages ===
v3396 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1829 y: j3825  <|@  <|@
f <@*|@fixed>@ <|@
tid v3396 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3860 
=== Succesors ===
trueSuccessor: v3395 
falseSuccessor: v3394 
=== Usages ===
=== Predecessor ===
v3379 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3860 #trueSuccessor: v3395 #falseSuccessor: v3394  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v338|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v338|QWORD, y: v315|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B324 -> B325 falseDestination: B324 -> B326 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B325"
    from_bci -1
    to_bci -1
    predecessors "B324" 
    successors "B327" 
    xhandlers
    flags 
    probability 4605142023731853402
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3395 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3399 
=== Usages ===
=== Predecessor ===
v3396 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3399  <|@  <|@
f <@*|@fixed>@ <|@
tid v3399 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3369 
=== Predecessor ===
v3395 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B325 -> B327 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B326"
    from_bci -1
    to_bci -1
    predecessors "B324" 
    successors "B327" 
    xhandlers
    flags 
    probability 4612407521939950148
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3394 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4193 
=== Usages ===
=== Predecessor ===
v3396 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4193  <|@  <|@
f <@~|@floating>@ <|@
tid v4520 <|@
result [v328|QWORD[.] + v338|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j3824 
index: j3825 
=== Succesors ===
=== Usages ===
v4193 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3824 index: j3825  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4193 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4520 
value: a4244 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3381 
=== Usages ===
=== Predecessor ===
v3394 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4520 value: a4244 stateAfter: - lastLocationAccess: - #next: v3381  <|@  <|@
f <@*|@fixed>@ <|@
tid v3381 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3369 
=== Predecessor ===
v4193 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v328|QWORD[.] + v338|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B326 -> B327 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B327"
    from_bci -1
    to_bci -1
    predecessors "B326" "B325" 
    successors "B328" 
    xhandlers
    flags 
    probability 4614149222986594394
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3369 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3381 v3399 
=== Succesors ===
next: j3187 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3381 v3399 #next: j3187  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3187 <|@
result [v327|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToFirstArrayElement(WriteBarrierSnippets.java:376) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:159) [bci: 20]
at java.lang.String.split(String.java:2377) [bci: 292]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v4416 
=== Succesors ===
next: j3189 
=== Usages ===
j3188 
=== Predecessor ===
v3369 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v4416 #next: j3189  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3189 <|@
result [v327|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:385) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at java.lang.String.split(String.java:2377) [bci: 292]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v4416 
=== Succesors ===
next: v3197 
=== Usages ===
j3193 
=== Predecessor ===
j3187 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v4416 #next: v3197  <|@  <|@
f <@~|@floating>@ <|@
tid i3191 <|@
result v339|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at java.lang.String.split(String.java:2377) [bci: 292]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i83 
y: i1663 
=== Succesors ===
=== Usages ===
j3192 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i83 y: i1663  <|@  <|@
f <@~|@floating>@ <|@
tid j3192 <|@
result v340|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 26]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at java.lang.String.split(String.java:2377) [bci: 292]
resultBits: 64
stamp: i64 [-2147483648 - 2147483644] ⇈fffffffffffffffc
=== Inputs ===
value: i3191 
=== Succesors ===
=== Usages ===
j3193 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i3191  <|@  <|@
f <@~|@floating>@ <|@
tid j3193 <|@
result v342|QWORD[.] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 27]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at java.lang.String.split(String.java:2377) [bci: 292]
stamp: i64
=== Inputs ===
x: j3189 
y: j3192 
=== Succesors ===
=== Usages ===
j3194 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3189 y: j3192  <|@  <|@
f <@~|@floating>@ <|@
tid j3194 <|@
result v343|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 34]
at java.lang.String.split(String.java:2377) [bci: 292]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j3193 
y: i2735 
=== Succesors ===
=== Usages ===
j3195 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j3193 y: i2735  <|@  <|@
f <@~|@floating>@ <|@
tid j3188 <|@
result v344|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:159) [bci: 24]
at java.lang.String.split(String.java:2377) [bci: 292]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j3187 
y: i2735 
=== Succesors ===
=== Usages ===
j3195 j3208 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j3187 y: i2735  <|@  <|@
f <@~|@floating>@ <|@
tid j3195 <|@
result v346|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:161) [bci: 41]
at java.lang.String.split(String.java:2377) [bci: 292]
stamp: i64 [-36028797018963967 - 36028797018963967]
=== Inputs ===
x: j3194 
y: j3188 
=== Succesors ===
=== Usages ===
j3196 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j3194 y: j3188  <|@  <|@
f <@~|@floating>@ <|@
tid j3196 <|@
result v347|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:161) [bci: 43]
at java.lang.String.split(String.java:2377) [bci: 292]
stamp: i64 [-36028797018963966 - 36028797018963968]
=== Inputs ===
x: j3195 
y: j2632 
=== Succesors ===
=== Usages ===
j3199 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3195 y: j2632  <|@  <|@
f <@*|@fixed>@ <|@
tid v3197 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at java.lang.String.split(String.java:2377) [bci: 292]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3198 
=== Predecessor ===
j3189 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v339|DWORD = SHL v311|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v340|QWORD = MOVSXD v339|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v341|QWORD[.] = LEA [v327|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v342|QWORD[.] = ADD (x: v341|QWORD[.], y: v340|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v343|QWORD[*] = SHR v342|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v345|QWORD[.] = LEA [v327|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v344|QWORD[*] = SHR v345|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v346|QWORD[*] = SUB (x: v343|QWORD[*], ~y: v344|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v347|QWORD[*] = INC v346|QWORD[*] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v347|QWORD[*]] destination: B327 -> B328 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B328"
    from_bci -1
    to_bci -1
    predecessors "B327" "B343" 
    successors "B329" "B343" 
    xhandlers
    flags "llh" 
    loop_index 13
    loop_depth 1
    probability 4618652822613964890
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3199 <|@
result v348|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.split(String.java:2377) [bci: 292]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3198 
values: j3196 j3200 
=== Succesors ===
=== Usages ===
j3200 v3201 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3198 values: j3196 j3200  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3198 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 2.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at java.lang.String.split(String.java:2377) [bci: 292]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v3197 
=== Succesors ===
next: v3204 
=== Usages ===
j3199 v3202 v3207 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v3197 #next: v3204  <|@  <|@
f <@~|@floating>@ <|@
tid v3201 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 55]
at java.lang.String.split(String.java:2377) [bci: 292]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3199 
y: j2632 
=== Succesors ===
=== Usages ===
v3204 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3199 y: j2632  <|@  <|@
f <@*|@fixed>@ <|@
tid v3204 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 55]
at java.lang.String.split(String.java:2377) [bci: 292]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v3201 
=== Succesors ===
trueSuccessor: v3202 
falseSuccessor: v3203 
=== Usages ===
=== Predecessor ===
v3198 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3201 #trueSuccessor: v3202 #falseSuccessor: v3203  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v348|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v348|QWORD[*] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B328 -> B329 falseDestination: B328 -> B343 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B329"
    from_bci -1
    to_bci -1
    predecessors "B328" 
    successors "B330" 
    xhandlers
    flags 
    probability 4614149222986594394
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3202 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:165) [bci: 76]
at java.lang.String.split(String.java:2377) [bci: 292]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v3198 
=== Succesors ===
next: a2347 
=== Usages ===
=== Predecessor ===
v3204 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v3198 #next: a2347  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2347 <|@
result v327|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.split(String.java:2377) [bci: 292]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a3156 
=== Succesors ===
next: v685 
=== Usages ===
?688 v4406 ?688 v113 
=== Predecessor ===
v3202 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a3156 #next: v685  <|@  <|@
f <@*|@fixed>@ <|@
tid v685 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
at java.lang.String.split(String.java:2378) [bci: 307]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v686 
=== Predecessor ===
a2347 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0], int[-1|0xffffffffffffffff]] destination: B329 -> B330 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B330"
    from_bci -1
    to_bci -1
    predecessors "B329" "B337" 
    successors "B331" "B339" 
    xhandlers
    flags "llh" 
    loop_index 14
    loop_depth 1
    probability 4621950233479046828
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i687 <|@
result v349|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v686 
values: i5 i705 
=== Succesors ===
=== Usages ===
?688 v4405 v4406 i705 i1006 ?1007 v853 v875 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v686 values: i5 i705  <|@  <|@
f <@~|@floating>@ <|@
tid i1006 <|@
result v350|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v686 
values: i19 i687 
=== Succesors ===
=== Usages ===
?1007 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v686 values: i19 i687  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v686 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 3.3074650987822882
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
at java.lang.String.split(String.java:2378) [bci: 307]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v685 
=== Succesors ===
next: v694 
=== Usages ===
i687 v692 v706 i1006 v2042 v2037 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v685 #next: v694  <|@  <|@
f <@~|@floating>@ <|@
tid v853 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.ArrayList$SubList$1.hasNext(ArrayList.java:1109) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
at java.lang.String.split(String.java:2378) [bci: 307]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i79 
y: i687 
=== Succesors ===
=== Usages ===
v2038 v2047 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i79 y: i687  <|@  <|@
f <@~|@floating>@ <|@
tid v875 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1116) [bci: 17]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
at java.lang.String.split(String.java:2378) [bci: 307]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i687 
y: i79 
=== Succesors ===
=== Usages ===
v694 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i687 y: i79  <|@  <|@
f <@*|@fixed>@ <|@
tid v694 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 46]
at java.lang.String.split(String.java:2378) [bci: 307]
stamp: void
trueSuccessorProbability: 0.6976536501116306
=== Inputs ===
condition: v875 
=== Succesors ===
trueSuccessor: v691 
falseSuccessor: v692 
=== Usages ===
=== Predecessor ===
v686 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v875 #trueSuccessor: v691 #falseSuccessor: v692  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v349|DWORD, v350|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v310|DWORD, y: v349|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6976536501116306 condition: > trueDestination: B330 -> B331 falseDestination: B330 -> B339 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B331"
    from_bci -1
    to_bci -1
    predecessors "B330" 
    successors "B332" "B333" 
    xhandlers
    flags 
    loop_index 14
    loop_depth 1
    probability 4619723847182676267
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v691 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 49]
at java.lang.String.split(String.java:2378) [bci: 307]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2038 
=== Usages ===
v1849 v1843 
=== Predecessor ===
v694 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2038  <|@  <|@
f <@*|@fixed>@ <|@
tid v2038 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 56]
at java.lang.String.split(String.java:2378) [bci: 307]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v853 
=== Succesors ===
trueSuccessor: v2037 
falseSuccessor: v2034 
=== Usages ===
=== Predecessor ===
v691 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v853 #trueSuccessor: v2037 #falseSuccessor: v2034  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v349|DWORD, y: v310|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B331 -> B332 falseDestination: B331 -> B333 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B332"
    from_bci -1
    to_bci -1
    predecessors "B331" 
    successors "B342" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2037 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 56]
at java.lang.String.split(String.java:2378) [bci: 307]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v686 
=== Succesors ===
next: v2506 
=== Usages ===
=== Predecessor ===
v2038 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v686 #next: v2506  <|@  <|@
f <@~|@floating>@ <|@
tid i2507 <|@
result int[-439315|0xfffffffffff94bed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -439315
stableDimension: 0
stamp: i32 [-439315] ⇊00000000fff94bed ⇈00000000fff94bed
stampKind: i32
value: int[-439315|0xfffffffffff94bed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2508 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2506 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2505 
=== Predecessor ===
v2037 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-439315|0xfffffffffff94bed]] destination: B332 -> B342 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B333"
    from_bci -1
    to_bci -1
    predecessors "B331" 
    successors "B334" "B335" 
    xhandlers
    flags 
    loop_index 14
    loop_depth 1
    probability 4619723847182676267
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2034 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 56]
at java.lang.String.split(String.java:2378) [bci: 307]
stamp: void
=== Inputs ===
=== Succesors ===
next: a4390 
=== Usages ===
=== Predecessor ===
v2038 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a4390  <|@  <|@
f <@~|@floating>@ <|@
tid v1843 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v4298 v691 
=== Succesors ===
=== Usages ===
a4390 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v4298 v691  <|@  <|@
f <@~|@floating>@ <|@
tid v4405 <|@
result [v308|QWORD[.] + v349|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1563 
index: i687 
=== Succesors ===
=== Usages ===
a4390 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1563 index: i687  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4390 <|@
result v351|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1122) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
at java.lang.String.split(String.java:2378) [bci: 307]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v1843 
address: v4405 
=== Succesors ===
next: v2119 
=== Usages ===
v4492 v1732 v1740 
=== Predecessor ===
v2034 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1843 address: v4405 #next: v2119  <|@  <|@
f <@~|@floating>@ <|@
tid v1732 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
at java.lang.String.split(String.java:2378) [bci: 307]
stamp: void
=== Inputs ===
value: a4390 
=== Succesors ===
=== Usages ===
v2119 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a4390  <|@  <|@
f <@*|@fixed>@ <|@
tid v2119 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 15]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
at java.lang.String.split(String.java:2378) [bci: 307]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v1732 
=== Succesors ===
trueSuccessor: v2118 
falseSuccessor: v2117 
=== Usages ===
=== Predecessor ===
a4390 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1732 #trueSuccessor: v2118 #falseSuccessor: v2117  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v351|DWORD[.] = MOV [v308|QWORD[.] + v349|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v351|DWORD[.], y: v351|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B333 -> B334 falseDestination: B333 -> B335 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B334"
    from_bci -1
    to_bci -1
    predecessors "B333" 
    successors "B337" 
    xhandlers
    flags 
    loop_index 14
    loop_depth 1
    probability 4604605482549507105
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2118 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 18]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
at java.lang.String.split(String.java:2378) [bci: 307]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2554 
=== Usages ===
=== Predecessor ===
v2119 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2554  <|@  <|@
f <@*|@fixed>@ <|@
tid v2554 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
at java.lang.String.split(String.java:2378) [bci: 307]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2552 
=== Predecessor ===
v2118 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B334 -> B337 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B335"
    from_bci -1
    to_bci -1
    predecessors "B333" 
    successors "B336" "B338" 
    xhandlers
    flags 
    loop_index 14
    loop_depth 1
    probability 4618920064307147431
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2117 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:141) [bci: 28]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
at java.lang.String.split(String.java:2378) [bci: 307]
stamp: void
=== Inputs ===
=== Succesors ===
next: v4391 
=== Usages ===
=== Predecessor ===
v2119 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4391  <|@  <|@
f <@~|@floating>@ <|@
tid v4492 <|@
result [v351|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a4390 
=== Succesors ===
=== Usages ===
v4391 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a4390  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4391 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
at java.lang.String.split(String.java:2378) [bci: 307]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v4492 
=== Succesors ===
next: v4329 
=== Usages ===
v3256 
=== Predecessor ===
v2117 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4492 #next: v4329  <|@  <|@
f <@~|@floating>@ <|@
tid v3256 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
at java.lang.String.split(String.java:2378) [bci: 307]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v4391 
y: v3230 
=== Succesors ===
=== Usages ===
v4329 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v4391 y: v3230  <|@  <|@
f <@*|@fixed>@ <|@
tid v4329 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
at java.lang.String.split(String.java:2378) [bci: 307]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v3256 
=== Succesors ===
trueSuccessor: v4328 
falseSuccessor: v2042 
=== Usages ===
=== Predecessor ===
v4391 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3256 #trueSuccessor: v4328 #falseSuccessor: v2042  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v351|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B335 -> B336 falseDestination: B335 -> B338 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B336"
    from_bci -1
    to_bci -1
    predecessors "B335" 
    successors "B337" 
    xhandlers
    flags 
    loop_index 14
    loop_depth 1
    probability 4618920064307147431
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4328 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
at java.lang.String.split(String.java:2378) [bci: 307]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2563 
=== Usages ===
=== Predecessor ===
v4329 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2563  <|@  <|@
f <@*|@fixed>@ <|@
tid v2563 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
at java.lang.String.split(String.java:2378) [bci: 307]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2552 
=== Predecessor ===
v4328 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B336 -> B337 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B337"
    from_bci -1
    to_bci -1
    predecessors "B334" "B336" 
    successors "B330" 
    xhandlers
    flags "lle" 
    loop_index 14
    loop_depth 1
    probability 4619723847182676267
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2552 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
at java.lang.String.split(String.java:2378) [bci: 307]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2554 v2563 
=== Succesors ===
next: v1740 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2554 v2563 #next: v1740  <|@  <|@
f <@~|@floating>@ <|@
tid v1849 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v4314 v691 
=== Succesors ===
=== Usages ===
v1740 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v4314 v691  <|@  <|@
f <@~|@floating>@ <|@
tid v4406 <|@
result [v327|QWORD[.] + v349|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a2347 
index: i687 
=== Succesors ===
=== Usages ===
v1740 j3216 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2347 index: i687  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1740 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
at java.lang.String.split(String.java:2378) [bci: 307]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1849 
address: v4406 
value: a4390 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j3216 
=== Usages ===
=== Predecessor ===
v2552 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1849 address: v4406 value: a4390 stateAfter: - lastLocationAccess: - #next: j3216  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3216 <|@
result [v327|QWORD[.] + v349|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
at java.lang.String.split(String.java:2378) [bci: 307]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v4406 
=== Succesors ===
next: v3220 
=== Usages ===
j3217 
=== Predecessor ===
v1740 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v4406 #next: v3220  <|@  <|@
f <@~|@floating>@ <|@
tid j3217 <|@
result v352|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
at java.lang.String.split(String.java:2378) [bci: 307]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j3216 
y: i2735 
=== Succesors ===
=== Usages ===
v4493 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j3216 y: i2735  <|@  <|@
f <@~|@floating>@ <|@
tid v4493 <|@
result [v352|QWORD[*] + v16|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j3217 
index: j2739 
=== Succesors ===
=== Usages ===
v3220 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3217 index: j2739  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3220 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
at java.lang.String.split(String.java:2378) [bci: 307]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4493 
value: i2741 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v706 
=== Usages ===
=== Predecessor ===
j3216 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4493 value: i2741 stateAfter: - lastLocationAccess: - #next: v706  <|@  <|@
f <@~|@floating>@ <|@
tid i705 <|@
result v354|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 120]
at java.lang.String.split(String.java:2378) [bci: 307]
stamp: i32
=== Inputs ===
x: i687 
y: i8 
=== Succesors ===
=== Usages ===
i687 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i687 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v706 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
at java.lang.String.split(String.java:2378) [bci: 307]
stamp: void
=== Inputs ===
loopBegin: v686 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v3220 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v686  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v327|QWORD[.] + v349|DWORD * 4 + 16], y: v351|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v353|QWORD[.] = LEA [v327|QWORD[.] + v349|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v352|QWORD[*] = SHR v353|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v352|QWORD[*] + v16|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v354|DWORD = INC v349|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v354|DWORD, v349|DWORD] destination: B337 -> B330 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B338"
    from_bci -1
    to_bci -1
    predecessors "B335" 
    successors "B342" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2042 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
at java.lang.String.split(String.java:2378) [bci: 307]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v686 
=== Succesors ===
next: v2511 
=== Usages ===
=== Predecessor ===
v4329 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v686 #next: v2511  <|@  <|@
f <@~|@floating>@ <|@
tid i2512 <|@
result int[-445739|0xfffffffffff932d5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -445739
stableDimension: 0
stamp: i32 [-445739] ⇊00000000fff932d5 ⇈00000000fff932d5
stampKind: i32
value: int[-445739|0xfffffffffff932d5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2508 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2511 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2505 
=== Predecessor ===
v2042 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-445739|0xfffffffffff932d5]] destination: B338 -> B342 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B339"
    from_bci -1
    to_bci -1
    predecessors "B330" 
    successors "B340" "B341" 
    xhandlers
    flags 
    probability 4614149222986594394
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v692 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 126]
at java.lang.String.split(String.java:2378) [bci: 307]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v686 
=== Succesors ===
next: v2047 
=== Usages ===
=== Predecessor ===
v694 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v686 #next: v2047  <|@  <|@
f <@*|@fixed>@ <|@
tid v2047 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 133]
at java.lang.String.split(String.java:2378) [bci: 307]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v853 
=== Succesors ===
trueSuccessor: v2044 
falseSuccessor: v2046 
=== Usages ===
=== Predecessor ===
v692 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v853 #trueSuccessor: v2044 #falseSuccessor: v2046  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v349|DWORD, y: v310|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B339 -> B340 falseDestination: B339 -> B341 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B340"
    from_bci -1
    to_bci -1
    predecessors "B339" 
    successors 
    xhandlers
    flags 
    probability 4614149222986594394
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2044 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 133]
at java.lang.String.split(String.java:2378) [bci: 307]
stamp: void
=== Inputs ===
=== Succesors ===
next: v113 
=== Usages ===
=== Predecessor ===
v2047 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v113  <|@  <|@
f <@*|@fixed>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.split(String.java:2378) [bci: 315]
stamp: void
=== Inputs ===
result: a2347 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2044 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a2347 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v327|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B341"
    from_bci -1
    to_bci -1
    predecessors "B339" 
    successors "B342" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2046 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 133]
at java.lang.String.split(String.java:2378) [bci: 307]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2513 
=== Usages ===
=== Predecessor ===
v2047 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2513  <|@  <|@
f <@~|@floating>@ <|@
tid i2514 <|@
result int[-445971|0xfffffffffff931ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -445971
stableDimension: 0
stamp: i32 [-445971] ⇊00000000fff931ed ⇈00000000fff931ed
stampKind: i32
value: int[-445971|0xfffffffffff931ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2508 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2513 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2505 
=== Predecessor ===
v2046 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-445971|0xfffffffffff931ed]] destination: B341 -> B342 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B342"
    from_bci -1
    to_bci -1
    predecessors "B332" "B338" "B341" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i2508 <|@
result v355|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-445971 - -439315] ⇊00000000fff900c5 ⇈00000000fff97bfd
valueDescription: i32
=== Inputs ===
merge: v2505 
values: i2507 i2512 i2514 
=== Succesors ===
=== Usages ===
v2510 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2505 values: i2507 i2512 i2514  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2505 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2506 v2511 v2513 
=== Succesors ===
next: v2510 
=== Usages ===
i2508 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2506 v2511 v2513 #next: v2510  <|@  <|@
tid ?715 <|@
d <@d|@=== Debug Properties ===
bci: 307
code: ResolvedJavaMethodBytecode<String.split(String, int)>
duringCall: true
localsSize: 10
locksSize: 0
rethrowException: false
sourceFile: String.java
sourceLine: 2378
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - - - - - - - 
=== Succesors ===
=== Usages ===
?688 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - - - - - - -  <|@  <|@
tid a1004 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@41b3f949
hasIdentity: true
objectId: -1
stamp: a!# Ljava/util/ArrayList$SubList$1;
type: HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?688 ?1007 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid a536 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@5d62fdcc
hasIdentity: true
objectId: -1
stamp: a!# Ljava/util/ArrayList$SubList;
type: HotSpotType<Ljava/util/ArrayList$SubList;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?1007 ?1002 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?1007 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a1004 
values: i687 i1006 i396 - - a536 
=== Succesors ===
=== Usages ===
?688 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a1004 values: i687 i1006 i396 - - a536  <|@  <|@
tid ?1002 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a536 
values: i396 - - i79 a244 a244 
=== Succesors ===
=== Usages ===
?688 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a536 values: i396 - - i79 a244 a244  <|@  <|@
tid ?688 <|@
d <@d|@=== Debug Properties ===
bci: 42
code: ResolvedJavaMethodBytecode<AbstractCollection.toArray(Object[])>
duringCall: false
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 182
stackSize: 0
=== Inputs ===
outerFrameState: ?715 
values: - a2347 - a2347 a1004 i687 
virtualObjectMappings: ?1007 ?1002 ?1467 
=== Succesors ===
=== Usages ===
v2510 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?715 values: - a2347 - a2347 a1004 i687 virtualObjectMappings: ?1007 ?1002 ?1467  <|@  <|@
f <@*|@fixed>@ <|@
tid v2510 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?688 
actionAndReason: i2508 
speculation: a2214 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2505 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?688 actionAndReason: i2508 speculation: a2214  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v355|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v355|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - v327|QWORD[.] - v327|QWORD[.] vobject:ArrayList$SubList$1:0{cursor=v349|DWORD,lastRet=v350|DWORD,expectedModCount=v188|DWORD,val$index=int[0|0x0],val$offset=int[0|0x0],this$1=vobject:ArrayList$SubList:1{modCount=v188|DWORD,parentOffset=int[0|0x0],offset=int[0|0x0],size=v310|DWORD,parent=vobject:ArrayList:2{modCount=v188|DWORD,size=v188|DWORD,elementData=v308|QWORD[.]},this$0=vobject:ArrayList:2}} v349|DWORD 
java.lang.String.split(String.java:2378) [bci: 307]
locals: - - - - - - - - - - 
vobject:ArrayList$SubList$1:0{cursor=v349|DWORD,lastRet=v350|DWORD,expectedModCount=v188|DWORD,val$index=int[0|0x0],val$offset=int[0|0x0],this$1=vobject:ArrayList$SubList:1{modCount=v188|DWORD,parentOffset=int[0|0x0],offset=int[0|0x0],size=v310|DWORD,parent=vobject:ArrayList:2{modCount=v188|DWORD,size=v188|DWORD,elementData=v308|QWORD[.]},this$0=vobject:ArrayList:2}} Ljava/util/ArrayList$SubList$1; v349|DWORD v350|DWORD v188|DWORD int[0|0x0] int[0|0x0] vobject:ArrayList$SubList:1{modCount=v188|DWORD,parentOffset=int[0|0x0],offset=int[0|0x0],size=v310|DWORD,parent=vobject:ArrayList:2{modCount=v188|DWORD,size=v188|DWORD,elementData=v308|QWORD[.]},this$0=vobject:ArrayList:2} 
vobject:ArrayList$SubList:1{modCount=v188|DWORD,parentOffset=int[0|0x0],offset=int[0|0x0],size=v310|DWORD,parent=vobject:ArrayList:2{modCount=v188|DWORD,size=v188|DWORD,elementData=v308|QWORD[.]},this$0=vobject:ArrayList:2} Ljava/util/ArrayList$SubList; v188|DWORD int[0|0x0] int[0|0x0] v310|DWORD vobject:ArrayList:2{modCount=v188|DWORD,size=v188|DWORD,elementData=v308|QWORD[.]} vobject:ArrayList:2{modCount=v188|DWORD,size=v188|DWORD,elementData=v308|QWORD[.]} 
vobject:ArrayList:2{modCount=v188|DWORD,size=v188|DWORD,elementData=v308|QWORD[.]} Ljava/util/ArrayList; v188|DWORD v188|DWORD v308|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:42, 307] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B343"
    from_bci -1
    to_bci -1
    predecessors "B328" 
    successors "B328" 
    xhandlers
    flags "lle" 
    loop_index 13
    loop_depth 1
    probability 4614149222986594394
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3203 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 58]
at java.lang.String.split(String.java:2377) [bci: 292]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3206 
=== Usages ===
=== Predecessor ===
v3204 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3206  <|@  <|@
f <@~|@floating>@ <|@
tid j3200 <|@
result v356|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 50]
at java.lang.String.split(String.java:2377) [bci: 292]
stamp: i64
=== Inputs ===
x: j3199 
y: j1816 
=== Succesors ===
=== Usages ===
j3199 j3205 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3199 y: j1816  <|@  <|@
f <@~|@floating>@ <|@
tid j3208 <|@
result v357|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 62]
at java.lang.String.split(String.java:2377) [bci: 292]
stamp: i64 [4682670080 - 36028801701634047] ⇈00ffffffffffffff
=== Inputs ===
x: j3188 
y: j2739 
=== Succesors ===
=== Usages ===
j3205 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3188 y: j2739  <|@  <|@
f <@~|@floating>@ <|@
tid j3205 <|@
result v358|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 65]
at java.lang.String.split(String.java:2377) [bci: 292]
stamp: i64
=== Inputs ===
x: j3200 
y: j3208 
=== Succesors ===
=== Usages ===
v3206 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3200 y: j3208  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3206 <|@
d <@d|@=== Debug Properties ===
kind: boolean
nodeSourcePosition: at org.graalvm.compiler.replacements.nodes.DirectStoreNode.storeBoolean(long, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 70]
at java.lang.String.split(String.java:2377) [bci: 292]
stamp: void
=== Inputs ===
address: j3205 
value: i5 
=== Succesors ===
next: v3207 
=== Usages ===
=== Predecessor ===
v3203 >@ <|@
instruction <@DirectStore|@org.graalvm.compiler.replacements.nodes.DirectStoreNode>@ address: j3205 value: i5 #next: v3207  <|@  <|@
f <@*|@fixed>@ <|@
tid v3207 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at java.lang.String.split(String.java:2377) [bci: 292]
stamp: void
=== Inputs ===
loopBegin: v3198 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v3206 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v3198  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v356|QWORD[*] = DEC v348|QWORD[*] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v357|QWORD[*] = ADD (x: v344|QWORD[*], y: v16|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v358|QWORD[*] = ADD (x: v357|QWORD[*], y: v356|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v358|QWORD[*]], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v356|QWORD[*]] destination: B343 -> B328 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B344"
    from_bci -1
    to_bci -1
    predecessors "B316" 
    successors "B316" 
    xhandlers
    flags "lle" 
    loop_index 12
    loop_depth 1
    probability 4612407521939950148
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3362 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3361 
=== Usages ===
=== Predecessor ===
v3363 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3361  <|@  <|@
f <@*|@fixed>@ <|@
tid v3361 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v3357 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v3362 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v3357  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v331|QWORD] destination: B344 -> B316 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B345"
    from_bci -1
    to_bci -1
    predecessors "B304" 
    successors "B351" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4311 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
at java.lang.String.split(String.java:2378) [bci: 307]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2462 
=== Usages ===
=== Predecessor ===
v4315 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2462  <|@  <|@
f <@~|@floating>@ <|@
tid i2463 <|@
result int[-442907|0xfffffffffff93de5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -442907
stableDimension: 0
stamp: i32 [-442907] ⇊00000000fff93de5 ⇈00000000fff93de5
stampKind: i32
value: int[-442907|0xfffffffffff93de5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2441 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2462 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2438 
=== Predecessor ===
v4311 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-442907|0xfffffffffff93de5], v5|QWORD[.]] destination: B345 -> B351 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B346"
    from_bci -1
    to_bci -1
    predecessors "B303" 
    successors "B351" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4295 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1122) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
at java.lang.String.split(String.java:2378) [bci: 307]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2459 
=== Usages ===
=== Predecessor ===
v4299 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2459  <|@  <|@
f <@~|@floating>@ <|@
tid i2460 <|@
result int[-440603|0xfffffffffff946e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -440603
stableDimension: 0
stamp: i32 [-440603] ⇊00000000fff946e5 ⇈00000000fff946e5
stampKind: i32
value: int[-440603|0xfffffffffff946e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2441 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2459 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2438 
=== Predecessor ===
v4295 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-440603|0xfffffffffff946e5], v5|QWORD[.]] destination: B346 -> B351 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B347"
    from_bci -1
    to_bci -1
    predecessors "B302" 
    successors "B351" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4279 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1119) [bci: 47]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
at java.lang.String.split(String.java:2378) [bci: 307]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2456 
=== Usages ===
=== Predecessor ===
v4283 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2456  <|@  <|@
f <@~|@floating>@ <|@
tid a2458 <|@
result v359|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@1144871021
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@1144871021]
=== Inputs ===
=== Succesors ===
=== Usages ===
a2442 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2457 <|@
result int[-439827|0xfffffffffff949ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -439827
stableDimension: 0
stamp: i32 [-439827] ⇊00000000fff949ed ⇈00000000fff949ed
stampKind: i32
value: int[-439827|0xfffffffffff949ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2441 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2456 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2438 
=== Predecessor ===
v4279 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v359|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1144871021] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-439827|0xfffffffffff949ed], v359|QWORD[.]] destination: B347 -> B351 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B348"
    from_bci -1
    to_bci -1
    predecessors "B298" 
    successors "B351" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2006 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.split(String.java:2373) [bci: 275]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v78 
=== Succesors ===
next: v2450 
=== Usages ===
=== Predecessor ===
v4321 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v78 #next: v2450  <|@  <|@
f <@~|@floating>@ <|@
tid i2451 <|@
result int[-435491|0xfffffffffff95add] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -435491
stableDimension: 0
stamp: i32 [-435491] ⇊00000000fff95add ⇈00000000fff95add
stampKind: i32
value: int[-435491|0xfffffffffff95add]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2441 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2450 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2438 
=== Predecessor ===
v2006 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-435491|0xfffffffffff95add], Object[null]] destination: B348 -> B351 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B349"
    from_bci -1
    to_bci -1
    predecessors "B295" 
    successors "B351" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2001 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.elementData(ArrayList.java:422) [bci: 5]
at java.util.ArrayList.get(ArrayList.java:435) [bci: 7]
at java.lang.String.split(String.java:2373) [bci: 272]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v78 
=== Succesors ===
next: v2448 
=== Usages ===
=== Predecessor ===
v2002 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v78 #next: v2448  <|@  <|@
f <@~|@floating>@ <|@
tid i2449 <|@
result int[-432667|0xfffffffffff965e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -432667
stableDimension: 0
stamp: i32 [-432667] ⇊00000000fff965e5 ⇈00000000fff965e5
stampKind: i32
value: int[-432667|0xfffffffffff965e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2441 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2448 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2438 
=== Predecessor ===
v2001 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-432667|0xfffffffffff965e5], Object[null]] destination: B349 -> B351 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B350"
    from_bci -1
    to_bci -1
    predecessors "B294" 
    successors "B351" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1996 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.rangeCheck(ArrayList.java:656) [bci: 5]
at java.util.ArrayList.get(ArrayList.java:433) [bci: 2]
at java.lang.String.split(String.java:2373) [bci: 272]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v78 
=== Succesors ===
next: v2446 
=== Usages ===
=== Predecessor ===
v1997 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v78 #next: v2446  <|@  <|@
f <@~|@floating>@ <|@
tid i2447 <|@
result int[-431635|0xfffffffffff969ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -431635
stableDimension: 0
stamp: i32 [-431635] ⇊00000000fff969ed ⇈00000000fff969ed
stampKind: i32
value: int[-431635|0xfffffffffff969ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2441 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2446 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2438 
=== Predecessor ===
v1996 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-431635|0xfffffffffff969ed], Object[null]] destination: B350 -> B351 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B351"
    from_bci -1
    to_bci -1
    predecessors "B306" "B293" "B350" "B349" "B348" "B347" "B346" "B345" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i2441 <|@
result v360|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-442907 - -431379] ⇊00000000fff900c5 ⇈00000000fff97ffd
valueDescription: i32
=== Inputs ===
merge: v2438 
values: i2440 i2445 i2447 i2449 i2451 i2457 i2460 i2463 
=== Succesors ===
=== Usages ===
v2443 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2438 values: i2440 i2445 i2447 i2449 i2451 i2457 i2460 i2463  <|@  <|@
f <@~|@floating>@ <|@
tid a2442 <|@
result v361|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/k/d$a;
valueDescription: a -
=== Inputs ===
merge: v2438 
values: a2214 a2214 a2214 a2214 a2214 a2458 a2461 a2461 
=== Succesors ===
=== Usages ===
v2443 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2438 values: a2214 a2214 a2214 a2214 a2214 a2458 a2461 a2461  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2438 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2439 v2444 v2446 v2448 v2450 v2456 v2459 v2462 
=== Succesors ===
next: v2443 
=== Usages ===
i2441 a2442 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2439 v2444 v2446 v2448 v2450 v2456 v2459 v2462 #next: v2443  <|@  <|@
f <@*|@fixed>@ <|@
tid v2443 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?80 
actionAndReason: i2441 
speculation: a2442 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2438 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?80 actionAndReason: i2441 speculation: a2442  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v360|DWORD, v361|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v360|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v361|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.split(String.java:2373) [bci: 261]
locals: - - - - - - - vobject:ArrayList:0{modCount=v188|DWORD,size=v188|DWORD,elementData=v308|QWORD[.]} v310|DWORD - 
vobject:ArrayList:0{modCount=v188|DWORD,size=v188|DWORD,elementData=v308|QWORD[.]} Ljava/util/ArrayList; v188|DWORD v188|DWORD v308|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:261] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B352"
    from_bci -1
    to_bci -1
    predecessors "B286" 
    successors "B357" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1986 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2493 
=== Usages ===
=== Predecessor ===
v1987 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2493  <|@  <|@
f <@~|@floating>@ <|@
tid i2494 <|@
result int[-449852|0xfffffffffff922c4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -449852
stableDimension: 0
stamp: i32 [-449852] ⇊00000000fff922c4 ⇈00000000fff922c4
stampKind: i32
value: int[-449852|0xfffffffffff922c4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2484 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2493 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2481 
=== Predecessor ===
v1986 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-449852|0xfffffffffff922c4], v6|QWORD[.]] destination: B352 -> B357 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B353"
    from_bci -1
    to_bci -1
    predecessors "B284" 
    successors "B284" 
    xhandlers
    flags "lle" 
    loop_index 10
    loop_depth 1
    probability 4599929446008461404
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3065 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 58]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3068 
=== Usages ===
=== Predecessor ===
v3066 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3068  <|@  <|@
f <@~|@floating>@ <|@
tid j3062 <|@
result v362|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 50]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: i64
=== Inputs ===
x: j3061 
y: j1816 
=== Succesors ===
=== Usages ===
j3061 j3067 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3061 y: j1816  <|@  <|@
f <@~|@floating>@ <|@
tid j3070 <|@
result v363|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 62]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: i64 [4682670080 - 36028801701634047] ⇈00ffffffffffffff
=== Inputs ===
x: j3050 
y: j2739 
=== Succesors ===
=== Usages ===
j3067 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3050 y: j2739  <|@  <|@
f <@~|@floating>@ <|@
tid j3067 <|@
result v364|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 65]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: i64
=== Inputs ===
x: j3062 
y: j3070 
=== Succesors ===
=== Usages ===
v3068 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3062 y: j3070  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3068 <|@
d <@d|@=== Debug Properties ===
kind: boolean
nodeSourcePosition: at org.graalvm.compiler.replacements.nodes.DirectStoreNode.storeBoolean(long, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 70]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: void
=== Inputs ===
address: j3067 
value: i5 
=== Succesors ===
next: v3069 
=== Usages ===
=== Predecessor ===
v3065 >@ <|@
instruction <@DirectStore|@org.graalvm.compiler.replacements.nodes.DirectStoreNode>@ address: j3067 value: i5 #next: v3069  <|@  <|@
f <@*|@fixed>@ <|@
tid v3069 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: void
=== Inputs ===
loopBegin: v3060 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v3068 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v3060  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v362|QWORD[*] = DEC v298|QWORD[*] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v363|QWORD[*] = ADD (x: v294|QWORD[*], y: v16|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v364|QWORD[*] = ADD (x: v363|QWORD[*], y: v362|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v364|QWORD[*]], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v362|QWORD[*]] destination: B353 -> B284 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B354"
    from_bci -1
    to_bci -1
    predecessors "B253" 
    successors "B253" 
    xhandlers
    flags "lle" 
    loop_index 8
    loop_depth 1
    probability 4598364989485822533
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3650 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3649 
=== Usages ===
=== Predecessor ===
v3651 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3649  <|@  <|@
f <@*|@fixed>@ <|@
tid v3649 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v3645 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v3650 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v3645  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v262|QWORD] destination: B354 -> B253 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B355"
    from_bci -1
    to_bci -1
    predecessors "B242" 
    successors "B357" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1982 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:463) [bci: 26]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2491 
=== Usages ===
=== Predecessor ===
v1983 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2491  <|@  <|@
f <@~|@floating>@ <|@
tid i2492 <|@
result int[-450331|0xfffffffffff920e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -450331
stableDimension: 0
stamp: i32 [-450331] ⇊00000000fff920e5 ⇈00000000fff920e5
stampKind: i32
value: int[-450331|0xfffffffffff920e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2484 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2491 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2481 
=== Predecessor ===
v1982 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-450331|0xfffffffffff920e5], Object[null]] destination: B355 -> B357 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B356"
    from_bci -1
    to_bci -1
    predecessors "B241" 
    successors "B357" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1978 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:262) [bci: 24]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
at java.lang.String.split(String.java:2368) [bci: 246]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2489 
=== Usages ===
=== Predecessor ===
v1979 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2489  <|@  <|@
f <@~|@floating>@ <|@
tid i2490 <|@
result int[-449299|0xfffffffffff924ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -449299
stableDimension: 0
stamp: i32 [-449299] ⇊00000000fff924ed ⇈00000000fff924ed
stampKind: i32
value: int[-449299|0xfffffffffff924ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2484 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2489 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2481 
=== Predecessor ===
v1978 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-449299|0xfffffffffff924ed], Object[null]] destination: B356 -> B357 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B357"
    from_bci -1
    to_bci -1
    predecessors "B240" "B239" "B356" "B355" "B352" "B244" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i2484 <|@
result v365|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-585825 - -446268] ⇊00000000fff10084 ⇈00000000ffff3fff
valueDescription: i32
=== Inputs ===
merge: v2481 
values: i2483 i2488 i2490 i2492 i2494 i2496 
=== Succesors ===
=== Usages ===
v2486 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2481 values: i2483 i2488 i2490 i2492 i2494 i2496  <|@  <|@
f <@~|@floating>@ <|@
tid a2485 <|@
result v366|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/l/d$a;
valueDescription: a -
=== Inputs ===
merge: v2481 
values: a2467 a2214 a2214 a2214 a2467 a2214 
=== Succesors ===
=== Usages ===
v2486 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2481 values: a2467 a2214 a2214 a2214 a2467 a2214  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2481 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2482 v2487 v2489 v2491 v2493 v2495 
=== Succesors ===
next: v2486 
=== Usages ===
i2484 a2485 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2482 v2487 v2489 v2491 v2493 v2495 #next: v2486  <|@  <|@
f <@*|@fixed>@ <|@
tid v2486 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?179 
actionAndReason: i2484 
speculation: a2485 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2481 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?179 actionAndReason: i2484 speculation: a2485  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v365|DWORD, v366|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v365|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v366|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
stack: vobject:ArrayList:0{modCount=v21|DWORD,size=v21|DWORD,elementData=v22|QWORD[.]} v225|DWORD 
locals: - - 
java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
locals: vobject:ArrayList:0{modCount=v21|DWORD,size=v21|DWORD,elementData=v22|QWORD[.]} vobject:String:1{value=v226|QWORD[.],hash=int[0|0x0]} 
java.lang.String.split(String.java:2368) [bci: 246]
locals: - - v2|DWORD - - - - vobject:ArrayList:0{modCount=v21|DWORD,size=v21|DWORD,elementData=v22|QWORD[.]} - - 
vobject:ArrayList:0{modCount=v21|DWORD,size=v21|DWORD,elementData=v22|QWORD[.]} Ljava/util/ArrayList; v21|DWORD v21|DWORD v22|QWORD[.] 
vobject:String:1{value=v226|QWORD[.],hash=int[0|0x0]} Ljava/lang/String; v226|QWORD[.] int[0|0x0] 
>@ <|@ instruction DEOPT info [bci:9, 7, 246] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B358"
    from_bci -1
    to_bci -1
    predecessors "B213" 
    successors "B213" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 1
    probability 4611922377187438288
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3291 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3290 
=== Usages ===
=== Predecessor ===
v3292 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3290  <|@  <|@
f <@*|@fixed>@ <|@
tid v3290 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v3285 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v3291 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v3285  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v208|QWORD] destination: B358 -> B213 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B359"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B362" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1895 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.split(String.java:2341) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2425 
=== Usages ===
=== Predecessor ===
v1896 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2425  <|@  <|@
f <@~|@floating>@ <|@
tid i2426 <|@
result int[-417811|0xfffffffffff99fed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -417811
stableDimension: 0
stamp: i32 [-417811] ⇊00000000fff99fed ⇈00000000fff99fed
stampKind: i32
value: int[-417811|0xfffffffffff99fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2389 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2425 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2386 
=== Predecessor ===
v1895 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-417811|0xfffffffffff99fed], Object[null]] destination: B359 -> B362 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B360"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B362" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1887 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.split(String.java:2372) [bci: 258]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2420 
=== Usages ===
=== Predecessor ===
v1888 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2420  <|@  <|@
f <@~|@floating>@ <|@
tid a2422 <|@
result v367|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@1154356070
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@1154356070]
=== Inputs ===
=== Succesors ===
=== Usages ===
a2390 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2421 <|@
result int[-460051|0xfffffffffff8faed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -460051
stableDimension: 0
stamp: i32 [-460051] ⇊00000000fff8faed ⇈00000000fff8faed
stampKind: i32
value: int[-460051|0xfffffffffff8faed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2389 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2420 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2386 
=== Predecessor ===
v1887 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v367|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1154356070] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-460051|0xfffffffffff8faed], v367|QWORD[.]] destination: B360 -> B362 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B361"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B362" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1883 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.split(String.java:2337) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2396 
=== Usages ===
=== Predecessor ===
v1884 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2396  <|@  <|@
f <@~|@floating>@ <|@
tid i2397 <|@
result int[-414227|0xfffffffffff9aded] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -414227
stableDimension: 0
stamp: i32 [-414227] ⇊00000000fff9aded ⇈00000000fff9aded
stampKind: i32
value: int[-414227|0xfffffffffff9aded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2389 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2396 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2386 
=== Predecessor ===
v1883 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-414227|0xfffffffffff9aded], Object[null]] destination: B361 -> B362 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B362"
    from_bci -1
    to_bci -1
    predecessors "B2" "B361" "B4" "B6" "B8" "B10" "B12" "B14" "B16" "B18" "B20" "B22" "B25" "B360" "B359" 
    successors 
    xhandlers
    flags 
    probability 2372834053670830080
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i2389 <|@
result v368|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-460051 - -364819] ⇊00000000fff800e5 ⇈00000000fffbfffd
valueDescription: i32
=== Inputs ===
merge: v2386 
values: i2395 i2397 i2399 i2401 i2403 i2405 i2407 i2409 i2411 i2413 i2415 i2417 i2419 i2421 i2426 
=== Succesors ===
=== Usages ===
v2391 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2386 values: i2395 i2397 i2399 i2401 i2403 i2405 i2407 i2409 i2411 i2413 i2415 i2417 i2419 i2421 i2426  <|@  <|@
f <@~|@floating>@ <|@
tid a2390 <|@
result v369|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/k/d$a;
valueDescription: a -
=== Inputs ===
merge: v2386 
values: a2214 a2214 a2214 a2214 a2214 a2214 a2214 a2214 a2214 a2214 a2214 a2214 a2214 a2422 a2214 
=== Succesors ===
=== Usages ===
v2391 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2386 values: a2214 a2214 a2214 a2214 a2214 a2214 a2214 a2214 a2214 a2214 a2214 a2214 a2214 a2422 a2214  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2386 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2394 v2396 v2398 v2400 v2402 v2404 v2406 v2408 v2410 v2412 v2414 v2416 v2418 v2420 v2425 
=== Succesors ===
next: v2391 
=== Usages ===
i2389 a2390 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2394 v2396 v2398 v2400 v2402 v2404 v2406 v2408 v2410 v2412 v2414 v2416 v2418 v2420 v2425 #next: v2391  <|@  <|@
f <@*|@fixed>@ <|@
tid v2391 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?4 
actionAndReason: i2389 
speculation: a2390 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2386 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?4 actionAndReason: i2389 speculation: a2390  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v368|DWORD, v369|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v368|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v369|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.split(String.java:2336) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B361" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7332283d slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.split(String.java:2336) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - - - - - - - 
>@ <|@ instruction v3|DWORD[.] = MOV [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.split(String.java:2336) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - - - - - - - 
>@ <|@ instruction v4|DWORD = MOV [v3|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v7|V64_DWORD[..] = L oc: SIMD<null,null> <|@ <|@
      nr   -1  <|@ instruction v8|V128_DWORD[....] = L oc: SIMD<null,null,null,null> <|@ <|@
      nr   -1  <|@ instruction v9|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null> <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP v4|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B361 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVZX [v3|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v11|DWORD y: 36 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v11|DWORD y: 46 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v11|DWORD y: 40 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v11|DWORD y: 124 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v11|DWORD y: 91 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v11|DWORD y: 41 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v11|DWORD y: 94 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v11|DWORD y: 123 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v11|DWORD y: 42 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v11|DWORD y: 63 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v11|DWORD y: 43 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B360" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B360 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v11|DWORD y: 92 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B359" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v11|DWORD y: 55296 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B26 -> B27 falseDestination: B26 -> B359 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[.] = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.split(String.java:2336) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - - - - - - - 
>@ <|@ instruction v13|DWORD = MOV [v12|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOV v13|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@120cc8dc encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Object[0]{}] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0], int[0|0x0], v19|QWORD[.]] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B169" "B120" 
    successors "B29" "B30" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4614323782818816755
    begin_IR
      LIR
      nr   -1  <|@ instruction [v20|DWORD, v21|DWORD, v22|QWORD[.]] = LABEL numbPhis: 3 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v20|DWORD, y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B184" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4614323782818816755
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = SUB (x: v13|DWORD, ~y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v13|DWORD, y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7686826237895121 condition: > trueDestination: B30 -> B31 falseDestination: B30 -> B184 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B180" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612671861231424105
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOVSXD v20|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOVSXD v23|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = DEC v25|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = ADD (x: v24|QWORD, y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v14|QWORD, y: v27|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B180 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B179" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612671861231424105
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v13|DWORD, y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B32 -> B33 falseDestination: B32 -> B179 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612671861231424105
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v20|DWORD] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B177" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4629327619026861556
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOVZX [v15|QWORD[.] + v28|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v29|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0015918580565381646 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B177 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B177"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B34" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4629313874285517559
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v178|DWORD = INC v28|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v178|DWORD] destination: B177 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B177" 
    successors "B35" "B178" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4629850235763156642
    begin_IR
      LIR
      nr   -1  <|@ instruction [v28|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v13|DWORD, y: v28|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9277482167917486 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B178 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" "B38" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587198128603920715
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v28|DWORD y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.315317887137174 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584979139650404691
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v28|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584979139650404691
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = SUB (x: v28|DWORD, ~y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v30|DWORD, y: v30|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B40 -> B41 falseDestination: B40 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B44" "B49" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584979139650404691
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v20|DWORD, y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.18334585698550698 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B50" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583527021126394577
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v30|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09284041465770032 condition: < trueDestination: B49 -> B50 falseDestination: B49 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582796385657305130
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B48" "B57" 
    successors "B59" "B60" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584251046621639566
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = SUB (x: v13|DWORD, ~y: v30|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v20|DWORD, y: v38|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B58 -> B59 falseDestination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584251046621639566
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v20|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 9.999999999998899E-5 condition: > trueDestination: B60 -> B61 falseDestination: B60 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B64" "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584250187239118245
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v30|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B63 -> B64 falseDestination: B63 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B65" "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583390890656048814
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = SHL v30|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = LEA [v42|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = AND v43|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOVSXD v44|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = ADD (x: v45|QWORD, y: v40|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v46|QWORD, y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B64 -> B65 falseDestination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583313553963572565
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v45|QWORD + v40|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v45|QWORD + v40|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v45|QWORD + v40|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v45|QWORD + v40|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v40|QWORD + 12], y: v30|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v40|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v40|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[.] = MOVE v40|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v47|QWORD[.]] destination: B66 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B66" "B68" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584250187239118245
    begin_IR
      LIR
      nr   -1  <|@ instruction [v49|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v30|DWORD, y: v23|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = CMOVE (falseValue: v30|DWORD, ~trueValue: v23|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = MOVSXD v50|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v51|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B69 -> B70 falseDestination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579746587611747749
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = LEA [v49|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = MOVSXD v20|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = LEA [v15|QWORD[.] + v53|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = LEA [v51|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v55|QWORD, y: v55|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B71 -> B72 falseDestination: B71 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577598346154074172
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B72 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B72" "B75" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579746587611747749
    begin_IR
      LIR
      nr   -1  <|@ instruction [v59|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = LEA [v51|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v59|QWORD, y: v60|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577598346154074172
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v61|V128_WORD = H [v54|QWORD[.] + v59|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v52|QWORD[.] + v59|QWORD * 2], input: v61|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = LEA [v59|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v62|QWORD] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B77" 
    successors "B80" "B81" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579746587611747749
    begin_IR
      LIR
      nr   -1  <|@ instruction [v63|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = LEA [v51|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v63|QWORD, y: v64|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B79 -> B80 falseDestination: B79 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577598346154074172
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v65|V64_WORD = H [v54|QWORD[.] + v63|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v52|QWORD[.] + v63|QWORD * 2], input: v65|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = LEA [v63|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v66|QWORD] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" "B80" 
    successors "B83" "B84" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579746587611747749
    begin_IR
      LIR
      nr   -1  <|@ instruction [v67|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = LEA [v51|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v67|QWORD, y: v68|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B82 -> B83 falseDestination: B82 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577598346154074172
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v69|V32_WORD = H [v54|QWORD[.] + v67|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction J (address: [v52|QWORD[.] + v67|QWORD * 2], input: v69|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD = LEA [v67|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v70|QWORD] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B83" 
    successors "B86" "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579746587611747749
    begin_IR
      LIR
      nr   -1  <|@ instruction [v71|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = DEC v51|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v71|QWORD, y: v72|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B85 -> B86 falseDestination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577598346154074172
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVSX [v54|QWORD[.] + v71|QWORD * 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v52|QWORD[.] + v71|QWORD * 2], y: v73|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B87 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B70" "B87" "B86" 
    successors "B89" "B107" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584250187239118245
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = MOVSXD v30|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v74|QWORD, y: v51|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B88 -> B89 falseDestination: B88 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B108" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579746587611747749
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B107 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B107" "B105" "B104" 
    successors "B109" "B110" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584250187239118245
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v96|QWORD = LEA [v95|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v96|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B108 -> B109 falseDestination: B108 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584164257580811302
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v96|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v95|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v95|QWORD] destination: B110 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" "B109" 
    successors "B112" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584250187239118245
    begin_IR
      LIR
      nr   -1  <|@ instruction [v98|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v99|QWORD[.] = MOVE v98|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v100|QWORD = MOV [v10|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v98|QWORD[*]], y: v100|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v98|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v101|DWORD[.] = COMPRESSPOINTER (input: v49|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@120cc8dc encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v98|QWORD[*] + 12], y: v101|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v98|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v99|QWORD[.]] destination: B111 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B45" "B56" "B111" 
    successors "B113" "B116" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584978709959144030
    begin_IR
      LIR
      nr   -1  <|@ instruction [v102|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v103|DWORD = INC v21|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v19|QWORD[.], y: v22|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.2066504369952622 condition: = trueDestination: B112 -> B113 falseDestination: B112 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B117" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583301761552313477
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v103|DWORD] destination: B116 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" "B114" "B115" 
    successors "B118" "B123" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584978709959144031
    begin_IR
      LIR
      nr   -1  <|@ instruction [v104|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = MOV [v22|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = MOV [v22|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v107|DWORD = SUB (x: v104|DWORD, ~y: v105|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v108|DWORD[.] = COMPRESSPOINTER (input: v102|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@120cc8dc encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v109|DWORD = INC v28|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v107|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7754412955005789 condition: < trueDestination: B117 -> B118 falseDestination: B117 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors "B119" "B122" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583129201465024141
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v106|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B118 -> B119 falseDestination: B118 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B120" "B121" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583129201465024141
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v105|DWORD, y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B119 -> B120 falseDestination: B119 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4583129201465024141
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v22|QWORD[.] + v21|DWORD * 4 + 16], y: v108|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v111|QWORD[.] = LEA [v22|QWORD[.] + v21|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v110|QWORD[*] = SHR v111|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v110|QWORD[*] + v16|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.add(ArrayList.java:464) [bci: 27]
locals: vobject:ArrayList:0{modCount=v103|DWORD,size=v103|DWORD,elementData=v22|QWORD[.]} v102|QWORD[.] 
java.lang.String.split(String.java:2353) [bci: 165]
locals: v0|QWORD[.] - int[0|0x0] v11|DWORD - v28|DWORD int[0|0x0] vobject:ArrayList:0{modCount=v103|DWORD,size=v103|DWORD,elementData=v22|QWORD[.]} - - 
vobject:ArrayList:0{modCount=v103|DWORD,size=v103|DWORD,elementData=v22|QWORD[.]} Ljava/util/ArrayList; v103|DWORD v103|DWORD v22|QWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:27, 165] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v109|DWORD, v103|DWORD, v22|QWORD[.]] destination: B120 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B88" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579746587611747749
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B70 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B90" "B91" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579746587611747749
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = LEA [v49|QWORD[.] + v51|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v76|QWORD = SUB (x: v74|QWORD, ~y: v51|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v77|QWORD = LEA [v76|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v77|QWORD, y: v77|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B89 -> B90 falseDestination: B89 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B94" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577598346154074172
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B90 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B90" "B93" 
    successors "B95" "B96" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579746587611747749
    begin_IR
      LIR
      nr   -1  <|@ instruction [v81|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = LEA [v76|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v81|QWORD, y: v82|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B94 -> B95 falseDestination: B94 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577598346154074172
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v83|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v75|QWORD[.] + v81|QWORD * 2], input: v83|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v84|QWORD = LEA [v81|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v84|QWORD] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" "B95" 
    successors "B98" "B99" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579746587611747749
    begin_IR
      LIR
      nr   -1  <|@ instruction [v85|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v86|QWORD = LEA [v76|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v85|QWORD, y: v86|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B97 -> B98 falseDestination: B97 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B100" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577598346154074172
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v87|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v75|QWORD[.] + v85|QWORD * 2], input: v87|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v88|QWORD = LEA [v85|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v88|QWORD] destination: B99 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" "B98" 
    successors "B101" "B102" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579746587611747749
    begin_IR
      LIR
      nr   -1  <|@ instruction [v89|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v90|QWORD = LEA [v76|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v89|QWORD, y: v90|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B100 -> B101 falseDestination: B100 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B103" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577598346154074172
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v91|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v75|QWORD[.] + v89|QWORD * 2], input: v91|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v92|QWORD = LEA [v89|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v92|QWORD] destination: B102 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B102" "B101" 
    successors "B104" "B105" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579746587611747749
    begin_IR
      LIR
      nr   -1  <|@ instruction [v93|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v94|QWORD = DEC v76|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v93|QWORD, y: v94|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B103 -> B104 falseDestination: B103 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B108" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577598346154074172
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v75|QWORD[.] + v93|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B105 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors "B124" "B174" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4575305213314078916
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = SHR v105|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v113|DWORD = ADD (x: v112|DWORD, y: v105|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v114|DWORD = SUB (x: v113|DWORD, ~y: v104|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v114|DWORD, y: v114|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v115|DWORD = CMOVE (falseValue: v113|DWORD, ~trueValue: v104|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction v116|DWORD = LEA [v115|DWORD - 2147483639] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v116|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B123 -> B124 falseDestination: B123 -> B174 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B125" "B173" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4575305213314078916
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v115|DWORD, y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B124 -> B125 falseDestination: B124 -> B173 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors "B126" "B127" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4575305213314078916
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v115|DWORD, y: v115|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B125 -> B126 falseDestination: B125 -> B127 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B128" "B129" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4575305213314078916
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v117|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v118|DWORD = SHL v115|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v119|DWORD = LEA [v118|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v120|DWORD = AND v119|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v121|QWORD = MOVSXD v120|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v122|QWORD = ADD (x: v121|QWORD, y: v117|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v122|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B127 -> B128 falseDestination: B127 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B130" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4575218661402474956
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v122|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v121|QWORD + v117|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v121|QWORD + v117|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v121|QWORD + v117|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v121|QWORD + v117|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v117|QWORD + 12], y: v115|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v117|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v117|QWORD + 8], y: v106|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v125|QWORD[.] = MOVE v117|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v125|QWORD[.]] destination: B129 -> B130 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B129" "B128" 
    successors "B131" "B132" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4575305213314078916
    begin_IR
      LIR
      nr   -1  <|@ instruction [v126|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v115|DWORD, y: v105|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v127|DWORD = CMOVE (falseValue: v115|DWORD, ~trueValue: v105|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v128|QWORD = MOVSXD v127|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v128|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B130 -> B131 falseDestination: B130 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B130" 
    successors "B133" "B134" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570801613686708420
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v129|QWORD[.] = LEA [v126|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v130|QWORD[.] = LEA [v22|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v131|QWORD = LEA [v128|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v131|QWORD, y: v131|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B132 -> B133 falseDestination: B132 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B137" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4568637815896609427
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B133 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B133" "B136" 
    successors "B138" "B139" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570801613686708420
    begin_IR
      LIR
      nr   -1  <|@ instruction [v135|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v136|QWORD = LEA [v128|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v135|QWORD, y: v136|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B137 -> B138 falseDestination: B137 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B137" 
    successors "B140" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4568637815896609427
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v137|V128_DWORD[....] = H [v130|QWORD[.] + v135|QWORD * 4] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v129|QWORD[.] + v135|QWORD * 4], input: v137|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v138|QWORD = LEA [v135|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v138|QWORD] destination: B139 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B139" "B138" 
    successors "B141" "B142" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570801613686708420
    begin_IR
      LIR
      nr   -1  <|@ instruction [v139|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v140|QWORD = LEA [v128|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v139|QWORD, y: v140|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B140 -> B141 falseDestination: B140 -> B142 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B143" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4568637815896609427
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v141|V64_DWORD[..] = H [v130|QWORD[.] + v139|QWORD * 4] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v129|QWORD[.] + v139|QWORD * 4], input: v141|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v142|QWORD = LEA [v139|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v142|QWORD] destination: B142 -> B143 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B142" "B141" 
    successors "B144" "B145" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570801613686708420
    begin_IR
      LIR
      nr   -1  <|@ instruction [v143|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v144|QWORD = DEC v128|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v143|QWORD, y: v144|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B143 -> B144 falseDestination: B143 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B143" 
    successors "B146" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4568637815896609427
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v145|DWORD[.] = MOV [v130|QWORD[.] + v143|QWORD * 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v129|QWORD[.] + v143|QWORD * 4], y: v145|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B145 -> B146 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B131" "B145" "B144" 
    successors "B147" "B162" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4575305213314078916
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v146|QWORD = MOVSXD v115|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v146|QWORD, y: v128|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B146 -> B147 falseDestination: B146 -> B162 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B162"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B163" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570801613686708420
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B162 -> B163 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B163"
    from_bci -1
    to_bci -1
    predecessors "B162" "B160" "B159" 
    successors "B164" "B165" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4575305213314078916
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v115|DWORD, y: v115|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B163 -> B164 falseDestination: B163 -> B165 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B165"
    from_bci -1
    to_bci -1
    predecessors "B163" 
    successors "B166" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570801613686708420
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v160|DWORD = DEC v115|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v161|DWORD = SHL v160|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v162|QWORD = MOVSXD v161|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v163|QWORD[.] = LEA [v126|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v164|QWORD[.] = ADD (x: v163|QWORD[.], y: v162|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v165|QWORD[*] = SHR v164|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v167|QWORD[.] = LEA [v126|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v166|QWORD[*] = SHR v167|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v168|QWORD[*] = SUB (x: v165|QWORD[*], ~y: v166|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v169|QWORD[*] = INC v168|QWORD[*] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v169|QWORD[*]] destination: B165 -> B166 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B171"
    from_bci -1
    to_bci -1
    predecessors "B166" 
    successors "B166" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 2
    probability 4570801613686708420
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v173|QWORD[*] = DEC v170|QWORD[*] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v174|QWORD[*] = ADD (x: v166|QWORD[*], y: v16|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v175|QWORD[*] = ADD (x: v174|QWORD[*], y: v173|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v175|QWORD[*]], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v173|QWORD[*]] destination: B171 -> B166 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B166"
    from_bci -1
    to_bci -1
    predecessors "B165" "B171" 
    successors "B167" "B171" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 2
    probability 4575305213314078916
    begin_IR
      LIR
      nr   -1  <|@ instruction [v170|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v170|QWORD[*] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B166 -> B167 falseDestination: B166 -> B171 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B114" "B115" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4574614972964921566
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v103|DWORD y: 11 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7308950256495741 condition: < trueDestination: B113 -> B114 falseDestination: B113 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B117" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572471565081160793
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[10|0xa]] destination: B114 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573717372198682453
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v13|DWORD, y: v28|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09242718272553296 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573064156944687980
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v30|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09284041465770032 condition: < trueDestination: B46 -> B47 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572468666011020690
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B48 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B130" 
    successors "B146" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570801613686708420
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B131 -> B146 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B148" "B149" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570801613686708420
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v147|QWORD[.] = LEA [v126|QWORD[.] + v128|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v148|QWORD = SUB (x: v146|QWORD, ~y: v128|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v149|QWORD = LEA [v148|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v149|QWORD, y: v149|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B147 -> B148 falseDestination: B147 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B147" 
    successors "B152" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4568637815896609427
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B148 -> B152 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B148" "B151" 
    successors "B153" "B154" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570801613686708420
    begin_IR
      LIR
      nr   -1  <|@ instruction [v152|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v153|QWORD = LEA [v148|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v152|QWORD, y: v153|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B152 -> B153 falseDestination: B152 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B154"
    from_bci -1
    to_bci -1
    predecessors "B152" 
    successors "B155" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4568637815896609427
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v147|QWORD[.] + v152|QWORD * 4], input: v8|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v154|QWORD = LEA [v152|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v154|QWORD] destination: B154 -> B155 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B155"
    from_bci -1
    to_bci -1
    predecessors "B154" "B153" 
    successors "B156" "B157" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570801613686708420
    begin_IR
      LIR
      nr   -1  <|@ instruction [v155|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v156|QWORD = LEA [v148|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v155|QWORD, y: v156|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B155 -> B156 falseDestination: B155 -> B157 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B157"
    from_bci -1
    to_bci -1
    predecessors "B155" 
    successors "B158" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4568637815896609427
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v147|QWORD[.] + v155|QWORD * 4], input: v7|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v157|QWORD = LEA [v155|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v157|QWORD] destination: B157 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B158"
    from_bci -1
    to_bci -1
    predecessors "B157" "B156" 
    successors "B159" "B160" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570801613686708420
    begin_IR
      LIR
      nr   -1  <|@ instruction [v158|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v159|QWORD = DEC v148|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v158|QWORD, y: v159|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B158 -> B159 falseDestination: B158 -> B160 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B160"
    from_bci -1
    to_bci -1
    predecessors "B158" 
    successors "B163" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4568637815896609427
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v147|QWORD[.] + v158|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B160 -> B163 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B164"
    from_bci -1
    to_bci -1
    predecessors "B163" 
    successors "B168" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570801613686708420
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B164 -> B168 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B168"
    from_bci -1
    to_bci -1
    predecessors "B164" "B167" 
    successors "B169" "B170" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4575305213314078916
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v126|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B168 -> B169 falseDestination: B168 -> B170 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B169"
    from_bci -1
    to_bci -1
    predecessors "B168" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4575305213314078916
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v126|QWORD[.] + v21|DWORD * 4 + 16], y: v108|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v172|QWORD[.] = LEA [v126|QWORD[.] + v21|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v171|QWORD[*] = SHR v172|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v171|QWORD[*] + v16|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.add(ArrayList.java:464) [bci: 27]
locals: vobject:ArrayList:0{modCount=v103|DWORD,size=v103|DWORD,elementData=v126|QWORD[.]} v102|QWORD[.] 
java.lang.String.split(String.java:2353) [bci: 165]
locals: v0|QWORD[.] - int[0|0x0] v11|DWORD - v28|DWORD int[0|0x0] vobject:ArrayList:0{modCount=v103|DWORD,size=v103|DWORD,elementData=v126|QWORD[.]} - - 
vobject:ArrayList:0{modCount=v103|DWORD,size=v103|DWORD,elementData=v126|QWORD[.]} Ljava/util/ArrayList; v103|DWORD v103|DWORD v126|QWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:27, 165] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v109|DWORD, v103|DWORD, v126|QWORD[.]] destination: B169 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B167"
    from_bci -1
    to_bci -1
    predecessors "B166" 
    successors "B168" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570801613686708420
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B167 -> B168 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570739388357006757
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B176"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B74" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4577598346154074172
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v58|QWORD] destination: B176 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" "B176" 
    successors "B75" "B176" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4579746587611747749
    begin_IR
      LIR
      nr   -1  <|@ instruction [v56|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v57|V256_WORD = H [v54|QWORD[.] + v56|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v52|QWORD[.] + v56|QWORD * 2], input: v57|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = LEA [v56|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v58|QWORD, y: v55|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B74 -> B75 falseDestination: B74 -> B176 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B92" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570739388357006757
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v78|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B91 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B92" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 2
    probability 4577598346154074172
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v80|QWORD] destination: B106 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" "B106" 
    successors "B93" "B106" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 2
    probability 4579746587611747749
    begin_IR
      LIR
      nr   -1  <|@ instruction [v79|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v75|QWORD[.] + v79|QWORD * 2], input: v78|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v80|QWORD = LEA [v79|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v80|QWORD, y: v77|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B92 -> B93 falseDestination: B92 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570739388357006757
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v58|QWORD] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B94" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570739388357006757
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v80|QWORD] destination: B93 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B108" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570739388357006757
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B104 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570739388357006757
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v81|QWORD] destination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B100" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570739388357006757
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v85|QWORD] destination: B98 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B103" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570739388357006757
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v89|QWORD] destination: B101 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570739388357006757
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v59|QWORD] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570739388357006757
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v63|QWORD] destination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570739388357006757
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v67|QWORD] destination: B83 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570739388357006757
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B86 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B68" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569020795190867894
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B65" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569639488730677885
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v377|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v377|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v30|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.substring(String.java:1969) [bci: 65]
locals: v0|QWORD[.] v20|DWORD - v30|DWORD 
java.lang.String.split(String.java:2353) [bci: 162]
stack: vobject:ArrayList:0{modCount=v21|DWORD,size=v21|DWORD,elementData=v22|QWORD[.]} 
locals: v0|QWORD[.] - int[0|0x0] v11|DWORD - v28|DWORD int[0|0x0] vobject:ArrayList:0{modCount=v21|DWORD,size=v21|DWORD,elementData=v22|QWORD[.]} - - 
vobject:ArrayList:0{modCount=v21|DWORD,size=v21|DWORD,elementData=v22|QWORD[.]} Ljava/util/ArrayList; v21|DWORD v21|DWORD v22|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:65, 162] <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v48|QWORD[.]] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4567991506279028027
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569182488146362606
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v20|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B51 -> B52 falseDestination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569182488146362606
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = LEA [v32|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v33|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B53 -> B54 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569112127490162104
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v33|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v32|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v32|QWORD] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" "B54" 
    successors "B112" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569182488146362606
    begin_IR
      LIR
      nr   -1  <|@ instruction [v35|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = MOVE v35|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOV [v10|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v35|QWORD[*]], y: v37|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v35|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v35|QWORD[*] + 12] y: -559030611 size: DWORD c: NarrowOop[char[0]{}] <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v35|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v36|QWORD[.]] destination: B56 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B117" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566216454433985046
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v103|DWORD] destination: B115 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B156"
    from_bci -1
    to_bci -1
    predecessors "B155" 
    successors "B158" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561794414431967428
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v155|QWORD] destination: B156 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B153"
    from_bci -1
    to_bci -1
    predecessors "B152" 
    successors "B155" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561794414431967428
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v152|QWORD] destination: B153 -> B155 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B159"
    from_bci -1
    to_bci -1
    predecessors "B158" 
    successors "B163" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561794414431967428
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B159 -> B163 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B143" 
    successors "B146" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561794414431967428
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B144 -> B146 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B147" 
    successors "B150" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561794414431967428
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B149 -> B150 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B161"
    from_bci -1
    to_bci -1
    predecessors "B150" 
    successors "B150" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 2
    probability 4568637815896609427
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v151|QWORD] destination: B161 -> B150 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B149" "B161" 
    successors "B151" "B161" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 2
    probability 4570801613686708420
    begin_IR
      LIR
      nr   -1  <|@ instruction [v150|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v147|QWORD[.] + v150|QWORD * 4], input: v9|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v151|QWORD = LEA [v150|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v151|QWORD, y: v149|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B150 -> B151 falseDestination: B150 -> B161 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B135" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561794414431967428
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B134 -> B135 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B172"
    from_bci -1
    to_bci -1
    predecessors "B135" 
    successors "B135" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 2
    probability 4568637815896609427
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v134|QWORD] destination: B172 -> B135 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" "B172" 
    successors "B136" "B172" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 2
    probability 4570801613686708420
    begin_IR
      LIR
      nr   -1  <|@ instruction [v132|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v133|V256_DWORD[........] = H [v130|QWORD[.] + v132|QWORD * 4] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v129|QWORD[.] + v132|QWORD * 4], input: v133|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v134|QWORD = LEA [v132|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v134|QWORD, y: v131|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B135 -> B136 falseDestination: B135 -> B172 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B137" 
    successors "B140" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561794414431967428
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v135|QWORD] destination: B138 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B143" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561794414431967428
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v139|QWORD] destination: B141 -> B143 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B150" 
    successors "B152" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561794414431967428
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v151|QWORD] destination: B151 -> B152 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B135" 
    successors "B137" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561794414431967428
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v134|QWORD] destination: B136 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B112" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4558364945303527242
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v0|QWORD[.]] destination: B45 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B51" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4557903150740909772
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B47 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4554135121775845323
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v381|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v381|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.substring(String.java:1969) [bci: 65]
locals: v0|QWORD[.] v20|DWORD - v30|DWORD 
java.lang.String.split(String.java:2353) [bci: 162]
stack: vobject:ArrayList:0{modCount=v21|DWORD,size=v21|DWORD,elementData=v22|QWORD[.]} 
locals: v0|QWORD[.] - int[0|0x0] v11|DWORD - v28|DWORD int[0|0x0] vobject:ArrayList:0{modCount=v21|DWORD,size=v21|DWORD,elementData=v22|QWORD[.]} - - 
vobject:ArrayList:0{modCount=v21|DWORD,size=v21|DWORD,elementData=v22|QWORD[.]} Ljava/util/ArrayList; v21|DWORD v21|DWORD v22|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:65, 162] <|@ <|@
      nr   -1  <|@ instruction v97|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v97|QWORD[.]] destination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B68" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4553585171962680886
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B65 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B130" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4545167746732113395
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v123|QWORD = UNCOMPRESSPOINTER (input: v106|DWORD, ~baseRegister: -) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@120cc8dc encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v123|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v115|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
stack: vobject:ArrayList:0{modCount=v21|DWORD,size=v21|DWORD,elementData=v22|QWORD[.]} v104|DWORD 
locals: - - 
java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
locals: vobject:ArrayList:0{modCount=v21|DWORD,size=v21|DWORD,elementData=v22|QWORD[.]} v102|QWORD[.] 
java.lang.String.split(String.java:2353) [bci: 165]
locals: v0|QWORD[.] - int[0|0x0] v11|DWORD - v28|DWORD int[0|0x0] vobject:ArrayList:0{modCount=v21|DWORD,size=v21|DWORD,elementData=v22|QWORD[.]} - - 
vobject:ArrayList:0{modCount=v21|DWORD,size=v21|DWORD,elementData=v22|QWORD[.]} Ljava/util/ArrayList; v21|DWORD v21|DWORD v22|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:9, 7, 165] <|@ <|@
      nr   -1  <|@ instruction v124|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v124|QWORD[.]] destination: B128 -> B130 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4539627389128383186
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v382|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v382|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.substring(String.java:1969) [bci: 65]
locals: v0|QWORD[.] v20|DWORD - int[0|0x0] 
java.lang.String.split(String.java:2353) [bci: 162]
stack: vobject:ArrayList:0{modCount=v21|DWORD,size=v21|DWORD,elementData=v22|QWORD[.]} 
locals: v0|QWORD[.] - int[0|0x0] v11|DWORD - v28|DWORD int[0|0x0] vobject:ArrayList:0{modCount=v21|DWORD,size=v21|DWORD,elementData=v22|QWORD[.]} - - 
vobject:ArrayList:0{modCount=v21|DWORD,size=v21|DWORD,elementData=v22|QWORD[.]} Ljava/util/ArrayList; v21|DWORD v21|DWORD v22|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:65, 162] <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v34|QWORD[.]] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B178"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B185" 
    xhandlers
    flags 
    probability 4612561903300672132
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B178 -> B185 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B185"
    from_bci -1
    to_bci -1
    predecessors "B37" "B178" "B184" 
    successors "B186" 
    xhandlers
    flags 
    probability 4614248496590463470
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B185 -> B186 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B186"
    from_bci -1
    to_bci -1
    predecessors "B185" 
    successors "B187" "B191" 
    xhandlers
    flags 
    probability 4614248496590463470
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v20|DWORD, y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.013959872667270279 condition: = trueDestination: B186 -> B187 falseDestination: B186 -> B191 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B191"
    from_bci -1
    to_bci -1
    predecessors "B186" 
    successors "B192" "B193" 
    xhandlers
    flags 
    probability 4614149855044251816
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v23|DWORD, y: v23|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B191 -> B192 falseDestination: B191 -> B193 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B193"
    from_bci -1
    to_bci -1
    predecessors "B191" 
    successors "B194" "B201" 
    xhandlers
    flags 
    probability 4614149855044251816
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v188|DWORD = INC v21|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v23|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09284041465770032 condition: < trueDestination: B193 -> B194 falseDestination: B193 -> B201 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B201"
    from_bci -1
    to_bci -1
    predecessors "B193" 
    successors "B202" "B204" 
    xhandlers
    flags 
    probability 4613502995374236003
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v20|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 9.999999999998899E-5 condition: > trueDestination: B201 -> B202 falseDestination: B201 -> B204 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B204"
    from_bci -1
    to_bci -1
    predecessors "B201" 
    successors "B205" "B208" 
    xhandlers
    flags 
    probability 4613502363316578581
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v191|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v192|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v23|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B204 -> B205 falseDestination: B204 -> B208 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B205"
    from_bci -1
    to_bci -1
    predecessors "B204" 
    successors "B206" "B207" 
    xhandlers
    flags 
    probability 4612870368864922464
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v193|DWORD = SHL v23|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v194|DWORD = LEA [v193|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v195|DWORD = AND v194|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v196|QWORD = MOVSXD v195|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v197|QWORD = ADD (x: v196|QWORD, y: v191|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v197|QWORD, y: v192|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B205 -> B206 falseDestination: B205 -> B207 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B207"
    from_bci -1
    to_bci -1
    predecessors "B205" 
    successors "B210" 
    xhandlers
    flags 
    probability 4612813489364273413
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v197|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v196|QWORD + v191|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v196|QWORD + v191|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v196|QWORD + v191|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v196|QWORD + v191|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v191|QWORD + 12], y: v23|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v191|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v191|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v198|QWORD[.] = MOVE v191|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v198|QWORD[.]] destination: B207 -> B210 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B210"
    from_bci -1
    to_bci -1
    predecessors "B207" "B209" 
    successors "B211" "B212" 
    xhandlers
    flags 
    probability 4613502363316578581
    begin_IR
      LIR
      nr   -1  <|@ instruction [v200|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v201|QWORD[.] = LEA [v200|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v202|QWORD = MOVSXD v20|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v203|QWORD[.] = LEA [v15|QWORD[.] + v202|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v204|QWORD = MOVSXD v23|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v205|QWORD = LEA [v204|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v205|QWORD, y: v205|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B210 -> B211 falseDestination: B210 -> B212 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B211"
    from_bci -1
    to_bci -1
    predecessors "B210" 
    successors "B215" 
    xhandlers
    flags 
    probability 4611922377187438288
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B211 -> B215 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B215"
    from_bci -1
    to_bci -1
    predecessors "B211" "B214" 
    successors "B216" "B217" 
    xhandlers
    flags 
    probability 4613502363316578581
    begin_IR
      LIR
      nr   -1  <|@ instruction [v209|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v210|QWORD = LEA [v204|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v209|QWORD, y: v210|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B215 -> B216 falseDestination: B215 -> B217 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B217"
    from_bci -1
    to_bci -1
    predecessors "B215" 
    successors "B218" 
    xhandlers
    flags 
    probability 4611922377187438288
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v211|V128_WORD = H [v203|QWORD[.] + v209|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v201|QWORD[.] + v209|QWORD * 2], input: v211|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v212|QWORD = LEA [v209|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v212|QWORD] destination: B217 -> B218 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B218"
    from_bci -1
    to_bci -1
    predecessors "B217" "B216" 
    successors "B219" "B220" 
    xhandlers
    flags 
    probability 4613502363316578581
    begin_IR
      LIR
      nr   -1  <|@ instruction [v213|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v214|QWORD = LEA [v204|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v213|QWORD, y: v214|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B218 -> B219 falseDestination: B218 -> B220 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B220"
    from_bci -1
    to_bci -1
    predecessors "B218" 
    successors "B221" 
    xhandlers
    flags 
    probability 4611922377187438288
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v215|V64_WORD = H [v203|QWORD[.] + v213|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v201|QWORD[.] + v213|QWORD * 2], input: v215|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v216|QWORD = LEA [v213|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v216|QWORD] destination: B220 -> B221 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B221"
    from_bci -1
    to_bci -1
    predecessors "B220" "B219" 
    successors "B222" "B223" 
    xhandlers
    flags 
    probability 4613502363316578581
    begin_IR
      LIR
      nr   -1  <|@ instruction [v217|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v218|QWORD = LEA [v204|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v217|QWORD, y: v218|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B221 -> B222 falseDestination: B221 -> B223 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B223"
    from_bci -1
    to_bci -1
    predecessors "B221" 
    successors "B224" 
    xhandlers
    flags 
    probability 4611922377187438288
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v219|V32_WORD = H [v203|QWORD[.] + v217|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction J (address: [v201|QWORD[.] + v217|QWORD * 2], input: v219|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v220|QWORD = LEA [v217|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v220|QWORD] destination: B223 -> B224 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B224"
    from_bci -1
    to_bci -1
    predecessors "B223" "B222" 
    successors "B225" "B226" 
    xhandlers
    flags 
    probability 4613502363316578581
    begin_IR
      LIR
      nr   -1  <|@ instruction [v221|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v222|QWORD = DEC v204|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v221|QWORD, y: v222|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B224 -> B225 falseDestination: B224 -> B226 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B226"
    from_bci -1
    to_bci -1
    predecessors "B224" 
    successors "B227" 
    xhandlers
    flags 
    probability 4611922377187438288
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v223|DWORD = MOVSX [v203|QWORD[.] + v221|QWORD * 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v201|QWORD[.] + v221|QWORD * 2], y: v223|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B226 -> B227 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B227"
    from_bci -1
    to_bci -1
    predecessors "B226" "B225" 
    successors "B228" "B231" 
    xhandlers
    flags 
    probability 4613502363316578581
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v224|DWORD[.] = COMPRESSPOINTER (input: v200|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@120cc8dc encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v19|QWORD[.], y: v22|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.2066504369952622 condition: = trueDestination: B227 -> B228 falseDestination: B227 -> B231 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B231"
    from_bci -1
    to_bci -1
    predecessors "B227" 
    successors "B232" 
    xhandlers
    flags 
    probability 4612196344020445404
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v188|DWORD, v200|QWORD[.], v224|DWORD[.]] destination: B231 -> B232 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B232"
    from_bci -1
    to_bci -1
    predecessors "B200" "B198" "B199" "B231" "B229" "B230" 
    successors "B233" "B241" 
    xhandlers
    flags 
    probability 4614149222986594394
    begin_IR
      LIR
      nr   -1  <|@ instruction [v225|DWORD, v226|QWORD[.], v227|DWORD[.]] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v228|DWORD = MOV [v22|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v229|DWORD = MOV [v22|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v230|DWORD = SUB (x: v225|DWORD, ~y: v228|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v230|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7754412955005789 condition: < trueDestination: B232 -> B233 falseDestination: B232 -> B241 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B233"
    from_bci -1
    to_bci -1
    predecessors "B232" 
    successors "B234" "B240" 
    xhandlers
    flags 
    probability 4612584766463955523
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v229|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B233 -> B234 falseDestination: B233 -> B240 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B234"
    from_bci -1
    to_bci -1
    predecessors "B233" 
    successors "B235" "B239" 
    xhandlers
    flags 
    probability 4612584766463955523
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v228|DWORD, y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B234 -> B235 falseDestination: B234 -> B239 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B235"
    from_bci -1
    to_bci -1
    predecessors "B234" 
    successors "B236" "B237" 
    xhandlers
    flags 
    probability 4612584766463955523
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v231|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v232|QWORD = LEA [v231|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v232|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B235 -> B236 falseDestination: B235 -> B237 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B237"
    from_bci -1
    to_bci -1
    predecessors "B235" 
    successors "B238" 
    xhandlers
    flags 
    probability 4612530742987316142
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v232|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v231|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v231|QWORD] destination: B237 -> B238 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B238"
    from_bci -1
    to_bci -1
    predecessors "B237" "B236" 
    successors "B291" 
    xhandlers
    flags 
    probability 4612584766463955523
    begin_IR
      LIR
      nr   -1  <|@ instruction [v234|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v235|QWORD[.] = MOVE v234|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v236|QWORD = MOV [v10|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v234|QWORD[*]], y: v236|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v234|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v234|QWORD[*] + 12], y: v227|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v234|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v237|DWORD[.] = COMPRESSPOINTER (input: v235|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@120cc8dc encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v22|QWORD[.] + v21|DWORD * 4 + 16], y: v237|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v239|QWORD[.] = LEA [v22|QWORD[.] + v21|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v238|QWORD[*] = SHR v239|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v238|QWORD[*] + v16|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v22|QWORD[.]] destination: B238 -> B291 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B291"
    from_bci -1
    to_bci -1
    predecessors "B290" "B238" 
    successors "B292" 
    xhandlers
    flags 
    probability 4614149222986594394
    begin_IR
      LIR
      nr   -1  <|@ instruction [v308|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v309|DWORD = MOV [v308|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v188|DWORD] destination: B291 -> B292 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B294"
    from_bci -1
    to_bci -1
    predecessors "B292" 
    successors "B295" "B350" 
    xhandlers
    flags 
    loop_index 11
    loop_depth 1
    probability 4618652822613964890
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v311|DWORD = DEC v310|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v188|DWORD, y: v311|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B294 -> B295 falseDestination: B294 -> B350 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B295"
    from_bci -1
    to_bci -1
    predecessors "B294" 
    successors "B296" "B349" 
    xhandlers
    flags 
    loop_index 11
    loop_depth 1
    probability 4618652822613964890
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v309|DWORD, y: v311|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B295 -> B296 falseDestination: B295 -> B349 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B296"
    from_bci -1
    to_bci -1
    predecessors "B295" 
    successors "B297" "B298" 
    xhandlers
    flags 
    loop_index 11
    loop_depth 1
    probability 4618652822613964890
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v312|QWORD = MOVSXD v310|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v313|DWORD[.] = MOV [v308|QWORD[.] + v312|QWORD * 4 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v313|DWORD[.], y: v313|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B296 -> B297 falseDestination: B296 -> B298 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B298"
    from_bci -1
    to_bci -1
    predecessors "B296" 
    successors "B299" "B348" 
    xhandlers
    flags 
    loop_index 11
    loop_depth 1
    probability 4617956142195307192
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v313|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B298 -> B299 falseDestination: B298 -> B348 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B299"
    from_bci -1
    to_bci -1
    predecessors "B298" 
    successors "B300" 
    xhandlers
    flags 
    loop_index 11
    loop_depth 1
    probability 4617956142195307192
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B299 -> B300 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B300"
    from_bci -1
    to_bci -1
    predecessors "B297" "B299" 
    successors "B301" "B302" 
    xhandlers
    flags 
    loop_index 11
    loop_depth 1
    probability 4618652822613964890
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.split(String.java:2373) [bci: 261]
locals: - - - - - - - vobject:ArrayList:0{modCount=v188|DWORD,size=v188|DWORD,elementData=v308|QWORD[.]} v310|DWORD - 
vobject:ArrayList:0{modCount=v188|DWORD,size=v188|DWORD,elementData=v308|QWORD[.]} Ljava/util/ArrayList; v188|DWORD v188|DWORD v308|QWORD[.] 
>@ <|@ instruction v314|DWORD[.] = MOV [v313|DWORD[.] * 8 + 12] size: DWORD state [bci:261] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.split(String.java:2373) [bci: 261]
locals: - - - - - - - vobject:ArrayList:0{modCount=v188|DWORD,size=v188|DWORD,elementData=v308|QWORD[.]} v310|DWORD - 
vobject:ArrayList:0{modCount=v188|DWORD,size=v188|DWORD,elementData=v308|QWORD[.]} Ljava/util/ArrayList; v188|DWORD v188|DWORD v308|QWORD[.] 
>@ <|@ instruction CMP [v314|DWORD[.] * 8 + 12] y: 0 size: DWORD state [bci:261] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B300 -> B301 falseDestination: B300 -> B302 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B301"
    from_bci -1
    to_bci -1
    predecessors "B300" 
    successors "B292" 
    xhandlers
    flags "lle" 
    loop_index 11
    loop_depth 1
    probability 4614149222986594394
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.split(String.java:2373) [bci: 261]
locals: - - - - - - - vobject:ArrayList:0{modCount=v188|DWORD,size=v188|DWORD,elementData=v308|QWORD[.]} v310|DWORD - 
vobject:ArrayList:0{modCount=v188|DWORD,size=v188|DWORD,elementData=v308|QWORD[.]} Ljava/util/ArrayList; v188|DWORD v188|DWORD v308|QWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:261] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v311|DWORD] destination: B301 -> B292 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B292"
    from_bci -1
    to_bci -1
    predecessors "B291" "B301" 
    successors "B293" "B294" 
    xhandlers
    flags "llh" 
    loop_index 11
    loop_depth 1
    probability 4618652822613964890
    begin_IR
      LIR
      nr   -1  <|@ instruction [v310|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v310|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B292 -> B293 falseDestination: B292 -> B294 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B297"
    from_bci -1
    to_bci -1
    predecessors "B296" 
    successors "B300" 
    xhandlers
    flags 
    loop_index 11
    loop_depth 1
    probability 4603748662894538004
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B297 -> B300 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B302"
    from_bci -1
    to_bci -1
    predecessors "B300" 
    successors "B303" "B347" 
    xhandlers
    flags 
    probability 4614149222986594394
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v315|QWORD = DEC v312|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v316|QWORD = MOV v309|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v316|QWORD, y: v315|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B302 -> B303 falseDestination: B302 -> B347 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B303"
    from_bci -1
    to_bci -1
    predecessors "B302" 
    successors "B304" "B346" 
    xhandlers
    flags 
    probability 4614149222986594394
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v316|QWORD, y: v315|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B303 -> B304 falseDestination: B303 -> B346 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B304"
    from_bci -1
    to_bci -1
    predecessors "B303" 
    successors "B305" "B345" 
    xhandlers
    flags 
    probability 4614149222986594394
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v312|QWORD, y: v315|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B304 -> B305 falseDestination: B304 -> B345 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B305"
    from_bci -1
    to_bci -1
    predecessors "B304" 
    successors "B306" "B307" 
    xhandlers
    flags 
    probability 4614149222986594394
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v310|DWORD, y: v188|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B305 -> B306 falseDestination: B305 -> B307 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B307"
    from_bci -1
    to_bci -1
    predecessors "B305" 
    successors "B308" "B311" 
    xhandlers
    flags 
    probability 4614149222986594394
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v317|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v318|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v310|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B307 -> B308 falseDestination: B307 -> B311 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B308"
    from_bci -1
    to_bci -1
    predecessors "B307" 
    successors "B309" "B310" 
    xhandlers
    flags 
    probability 4613452542567936696
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v319|DWORD = SHL v310|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v320|DWORD = LEA [v319|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v321|DWORD = AND v320|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v322|QWORD = MOVSXD v321|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v323|QWORD = ADD (x: v322|QWORD, y: v317|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v323|QWORD, y: v318|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B308 -> B309 falseDestination: B308 -> B310 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B310"
    from_bci -1
    to_bci -1
    predecessors "B308" 
    successors "B313" 
    xhandlers
    flags 
    probability 4613389841330257503
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v323|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v322|QWORD + v317|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v322|QWORD + v317|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v322|QWORD + v317|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v322|QWORD + v317|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v317|QWORD + 12], y: v310|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v317|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v317|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v324|QWORD[.] = MOVE v317|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v324|QWORD[.]] destination: B310 -> B313 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B313"
    from_bci -1
    to_bci -1
    predecessors "B310" "B312" 
    successors "B314" "B315" 
    xhandlers
    flags 
    probability 4614149222986594394
    begin_IR
      LIR
      nr   -1  <|@ instruction [v327|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v328|QWORD[.] = LEA [v327|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v329|QWORD = LEA [v312|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v329|QWORD, y: v329|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B313 -> B314 falseDestination: B313 -> B315 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B314"
    from_bci -1
    to_bci -1
    predecessors "B313" 
    successors "B318" 
    xhandlers
    flags 
    probability 4612407521939950148
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B314 -> B318 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B318"
    from_bci -1
    to_bci -1
    predecessors "B314" "B317" 
    successors "B319" "B320" 
    xhandlers
    flags 
    probability 4614149222986594394
    begin_IR
      LIR
      nr   -1  <|@ instruction [v332|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v333|QWORD = LEA [v312|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v332|QWORD, y: v333|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B318 -> B319 falseDestination: B318 -> B320 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B320"
    from_bci -1
    to_bci -1
    predecessors "B318" 
    successors "B321" 
    xhandlers
    flags 
    probability 4612407521939950148
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v328|QWORD[.] + v332|QWORD * 4], input: v8|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v334|QWORD = LEA [v332|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v334|QWORD] destination: B320 -> B321 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B321"
    from_bci -1
    to_bci -1
    predecessors "B320" "B319" 
    successors "B322" "B323" 
    xhandlers
    flags 
    probability 4614149222986594394
    begin_IR
      LIR
      nr   -1  <|@ instruction [v335|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v336|QWORD = LEA [v312|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v335|QWORD, y: v336|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B321 -> B322 falseDestination: B321 -> B323 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B323"
    from_bci -1
    to_bci -1
    predecessors "B321" 
    successors "B324" 
    xhandlers
    flags 
    probability 4612407521939950148
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v328|QWORD[.] + v335|QWORD * 4], input: v7|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v337|QWORD = LEA [v335|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v337|QWORD] destination: B323 -> B324 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B324"
    from_bci -1
    to_bci -1
    predecessors "B323" "B322" 
    successors "B325" "B326" 
    xhandlers
    flags 
    probability 4614149222986594394
    begin_IR
      LIR
      nr   -1  <|@ instruction [v338|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v338|QWORD, y: v315|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B324 -> B325 falseDestination: B324 -> B326 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B326"
    from_bci -1
    to_bci -1
    predecessors "B324" 
    successors "B327" 
    xhandlers
    flags 
    probability 4612407521939950148
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v328|QWORD[.] + v338|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B326 -> B327 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B327"
    from_bci -1
    to_bci -1
    predecessors "B326" "B325" 
    successors "B328" 
    xhandlers
    flags 
    probability 4614149222986594394
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v339|DWORD = SHL v311|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v340|QWORD = MOVSXD v339|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v341|QWORD[.] = LEA [v327|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v342|QWORD[.] = ADD (x: v341|QWORD[.], y: v340|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v343|QWORD[*] = SHR v342|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v345|QWORD[.] = LEA [v327|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v344|QWORD[*] = SHR v345|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v346|QWORD[*] = SUB (x: v343|QWORD[*], ~y: v344|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v347|QWORD[*] = INC v346|QWORD[*] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v347|QWORD[*]] destination: B327 -> B328 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B343"
    from_bci -1
    to_bci -1
    predecessors "B328" 
    successors "B328" 
    xhandlers
    flags "lle" 
    loop_index 13
    loop_depth 1
    probability 4614149222986594394
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v356|QWORD[*] = DEC v348|QWORD[*] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v357|QWORD[*] = ADD (x: v344|QWORD[*], y: v16|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v358|QWORD[*] = ADD (x: v357|QWORD[*], y: v356|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v358|QWORD[*]], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v356|QWORD[*]] destination: B343 -> B328 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B328"
    from_bci -1
    to_bci -1
    predecessors "B327" "B343" 
    successors "B329" "B343" 
    xhandlers
    flags "llh" 
    loop_index 13
    loop_depth 1
    probability 4618652822613964890
    begin_IR
      LIR
      nr   -1  <|@ instruction [v348|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v348|QWORD[*] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B328 -> B329 falseDestination: B328 -> B343 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B329"
    from_bci -1
    to_bci -1
    predecessors "B328" 
    successors "B330" 
    xhandlers
    flags 
    probability 4614149222986594394
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0], int[-1|0xffffffffffffffff]] destination: B329 -> B330 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B331"
    from_bci -1
    to_bci -1
    predecessors "B330" 
    successors "B332" "B333" 
    xhandlers
    flags 
    loop_index 14
    loop_depth 1
    probability 4619723847182676267
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v349|DWORD, y: v310|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B331 -> B332 falseDestination: B331 -> B333 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B333"
    from_bci -1
    to_bci -1
    predecessors "B331" 
    successors "B334" "B335" 
    xhandlers
    flags 
    loop_index 14
    loop_depth 1
    probability 4619723847182676267
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v351|DWORD[.] = MOV [v308|QWORD[.] + v349|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v351|DWORD[.], y: v351|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B333 -> B334 falseDestination: B333 -> B335 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B335"
    from_bci -1
    to_bci -1
    predecessors "B333" 
    successors "B336" "B338" 
    xhandlers
    flags 
    loop_index 14
    loop_depth 1
    probability 4618920064307147431
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v351|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B335 -> B336 falseDestination: B335 -> B338 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B336"
    from_bci -1
    to_bci -1
    predecessors "B335" 
    successors "B337" 
    xhandlers
    flags 
    loop_index 14
    loop_depth 1
    probability 4618920064307147431
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B336 -> B337 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B337"
    from_bci -1
    to_bci -1
    predecessors "B334" "B336" 
    successors "B330" 
    xhandlers
    flags "lle" 
    loop_index 14
    loop_depth 1
    probability 4619723847182676267
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v327|QWORD[.] + v349|DWORD * 4 + 16], y: v351|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v353|QWORD[.] = LEA [v327|QWORD[.] + v349|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v352|QWORD[*] = SHR v353|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v352|QWORD[*] + v16|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v354|DWORD = INC v349|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v354|DWORD, v349|DWORD] destination: B337 -> B330 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B330"
    from_bci -1
    to_bci -1
    predecessors "B329" "B337" 
    successors "B331" "B339" 
    xhandlers
    flags "llh" 
    loop_index 14
    loop_depth 1
    probability 4621950233479046828
    begin_IR
      LIR
      nr   -1  <|@ instruction [v349|DWORD, v350|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v310|DWORD, y: v349|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6976536501116306 condition: > trueDestination: B330 -> B331 falseDestination: B330 -> B339 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B334"
    from_bci -1
    to_bci -1
    predecessors "B333" 
    successors "B337" 
    xhandlers
    flags 
    loop_index 14
    loop_depth 1
    probability 4604605482549507105
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B334 -> B337 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B339"
    from_bci -1
    to_bci -1
    predecessors "B330" 
    successors "B340" "B341" 
    xhandlers
    flags 
    probability 4614149222986594394
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v349|DWORD, y: v310|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B339 -> B340 falseDestination: B339 -> B341 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B340"
    from_bci -1
    to_bci -1
    predecessors "B339" 
    successors 
    xhandlers
    flags 
    probability 4614149222986594394
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v327|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B315"
    from_bci -1
    to_bci -1
    predecessors "B313" 
    successors "B316" 
    xhandlers
    flags 
    probability 4605142023731853402
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B315 -> B316 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B344"
    from_bci -1
    to_bci -1
    predecessors "B316" 
    successors "B316" 
    xhandlers
    flags "lle" 
    loop_index 12
    loop_depth 1
    probability 4612407521939950148
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v331|QWORD] destination: B344 -> B316 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B316"
    from_bci -1
    to_bci -1
    predecessors "B315" "B344" 
    successors "B317" "B344" 
    xhandlers
    flags "llh" 
    loop_index 12
    loop_depth 1
    probability 4614149222986594394
    begin_IR
      LIR
      nr   -1  <|@ instruction [v330|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v328|QWORD[.] + v330|QWORD * 4], input: v9|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v331|QWORD = LEA [v330|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v331|QWORD, y: v329|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B316 -> B317 falseDestination: B316 -> B344 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B319"
    from_bci -1
    to_bci -1
    predecessors "B318" 
    successors "B321" 
    xhandlers
    flags 
    probability 4605142023731853402
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v332|QWORD] destination: B319 -> B321 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B322"
    from_bci -1
    to_bci -1
    predecessors "B321" 
    successors "B324" 
    xhandlers
    flags 
    probability 4605142023731853402
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v335|QWORD] destination: B322 -> B324 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B325"
    from_bci -1
    to_bci -1
    predecessors "B324" 
    successors "B327" 
    xhandlers
    flags 
    probability 4605142023731853402
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B325 -> B327 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B317"
    from_bci -1
    to_bci -1
    predecessors "B316" 
    successors "B318" 
    xhandlers
    flags 
    probability 4605142023731853402
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v331|QWORD] destination: B317 -> B318 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B184"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B185" 
    xhandlers
    flags 
    probability 4604782905894847016
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B184 -> B185 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B222"
    from_bci -1
    to_bci -1
    predecessors "B221" 
    successors "B224" 
    xhandlers
    flags 
    probability 4604495164061837589
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v217|QWORD] destination: B222 -> B224 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B225"
    from_bci -1
    to_bci -1
    predecessors "B224" 
    successors "B227" 
    xhandlers
    flags 
    probability 4604495164061837589
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B225 -> B227 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B219"
    from_bci -1
    to_bci -1
    predecessors "B218" 
    successors "B221" 
    xhandlers
    flags 
    probability 4604495164061837589
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v213|QWORD] destination: B219 -> B221 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B212"
    from_bci -1
    to_bci -1
    predecessors "B210" 
    successors "B213" 
    xhandlers
    flags 
    probability 4604495164061837589
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B212 -> B213 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B358"
    from_bci -1
    to_bci -1
    predecessors "B213" 
    successors "B213" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 1
    probability 4611922377187438288
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v208|QWORD] destination: B358 -> B213 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B213"
    from_bci -1
    to_bci -1
    predecessors "B212" "B358" 
    successors "B214" "B358" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 1
    probability 4613502363316578581
    begin_IR
      LIR
      nr   -1  <|@ instruction [v206|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v207|V256_WORD = H [v203|QWORD[.] + v206|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v201|QWORD[.] + v206|QWORD * 2], input: v207|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v208|QWORD = LEA [v206|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v208|QWORD, y: v205|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B213 -> B214 falseDestination: B213 -> B358 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B216"
    from_bci -1
    to_bci -1
    predecessors "B215" 
    successors "B218" 
    xhandlers
    flags 
    probability 4604495164061837589
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v209|QWORD] destination: B216 -> B218 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B214"
    from_bci -1
    to_bci -1
    predecessors "B213" 
    successors "B215" 
    xhandlers
    flags 
    probability 4604495164061837589
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v208|QWORD] destination: B214 -> B215 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B241"
    from_bci -1
    to_bci -1
    predecessors "B232" 
    successors "B242" "B356" 
    xhandlers
    flags 
    probability 4604433045635831900
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v240|DWORD = SHR v228|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v241|DWORD = ADD (x: v240|DWORD, y: v228|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v242|DWORD = SUB (x: v241|DWORD, ~y: v225|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v242|DWORD, y: v242|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v243|DWORD = CMOVE (falseValue: v241|DWORD, ~trueValue: v225|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction v244|DWORD = LEA [v243|DWORD - 2147483639] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v244|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B241 -> B242 falseDestination: B241 -> B356 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B242"
    from_bci -1
    to_bci -1
    predecessors "B241" 
    successors "B243" "B355" 
    xhandlers
    flags 
    probability 4604433045635831900
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v243|DWORD, y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B242 -> B243 falseDestination: B242 -> B355 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B243"
    from_bci -1
    to_bci -1
    predecessors "B242" 
    successors "B244" "B245" 
    xhandlers
    flags 
    probability 4604433045635831900
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v243|DWORD, y: v243|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B243 -> B244 falseDestination: B243 -> B245 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B245"
    from_bci -1
    to_bci -1
    predecessors "B243" 
    successors "B246" "B247" 
    xhandlers
    flags 
    probability 4604433045635831900
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v245|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v246|DWORD = SHL v243|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v247|DWORD = LEA [v246|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v248|DWORD = AND v247|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v249|QWORD = MOVSXD v248|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v250|QWORD = ADD (x: v249|QWORD, y: v245|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v250|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B245 -> B246 falseDestination: B245 -> B247 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B247"
    from_bci -1
    to_bci -1
    predecessors "B245" 
    successors "B248" 
    xhandlers
    flags 
    probability 4604370467374926345
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v250|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v249|QWORD + v245|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v249|QWORD + v245|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v249|QWORD + v245|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v249|QWORD + v245|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v245|QWORD + 12], y: v243|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v245|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v245|QWORD + 8], y: v229|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v253|QWORD[.] = MOVE v245|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v253|QWORD[.]] destination: B247 -> B248 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B248"
    from_bci -1
    to_bci -1
    predecessors "B247" "B246" 
    successors "B249" "B250" 
    xhandlers
    flags 
    probability 4604433045635831900
    begin_IR
      LIR
      nr   -1  <|@ instruction [v254|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v243|DWORD, y: v228|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v255|DWORD = CMOVE (falseValue: v243|DWORD, ~trueValue: v228|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v256|QWORD = MOVSXD v255|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v256|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B248 -> B249 falseDestination: B248 -> B250 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B250"
    from_bci -1
    to_bci -1
    predecessors "B248" 
    successors "B251" "B252" 
    xhandlers
    flags 
    probability 4599929446008461404
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v257|QWORD[.] = LEA [v254|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v258|QWORD[.] = LEA [v22|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v259|QWORD = LEA [v256|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v259|QWORD, y: v259|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B250 -> B251 falseDestination: B250 -> B252 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B251"
    from_bci -1
    to_bci -1
    predecessors "B250" 
    successors "B255" 
    xhandlers
    flags 
    probability 4598364989485822533
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B251 -> B255 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B255"
    from_bci -1
    to_bci -1
    predecessors "B251" "B254" 
    successors "B256" "B257" 
    xhandlers
    flags 
    probability 4599929446008461404
    begin_IR
      LIR
      nr   -1  <|@ instruction [v263|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v264|QWORD = LEA [v256|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v263|QWORD, y: v264|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B255 -> B256 falseDestination: B255 -> B257 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B257"
    from_bci -1
    to_bci -1
    predecessors "B255" 
    successors "B258" 
    xhandlers
    flags 
    probability 4598364989485822533
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v265|V128_DWORD[....] = H [v258|QWORD[.] + v263|QWORD * 4] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v257|QWORD[.] + v263|QWORD * 4], input: v265|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v266|QWORD = LEA [v263|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v266|QWORD] destination: B257 -> B258 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B258"
    from_bci -1
    to_bci -1
    predecessors "B257" "B256" 
    successors "B259" "B260" 
    xhandlers
    flags 
    probability 4599929446008461404
    begin_IR
      LIR
      nr   -1  <|@ instruction [v267|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v268|QWORD = LEA [v256|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v267|QWORD, y: v268|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B258 -> B259 falseDestination: B258 -> B260 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B260"
    from_bci -1
    to_bci -1
    predecessors "B258" 
    successors "B261" 
    xhandlers
    flags 
    probability 4598364989485822533
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v269|V64_DWORD[..] = H [v258|QWORD[.] + v267|QWORD * 4] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v257|QWORD[.] + v267|QWORD * 4], input: v269|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v270|QWORD = LEA [v267|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v270|QWORD] destination: B260 -> B261 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B261"
    from_bci -1
    to_bci -1
    predecessors "B260" "B259" 
    successors "B262" "B263" 
    xhandlers
    flags 
    probability 4599929446008461404
    begin_IR
      LIR
      nr   -1  <|@ instruction [v271|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v272|QWORD = DEC v256|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v271|QWORD, y: v272|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B261 -> B262 falseDestination: B261 -> B263 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B263"
    from_bci -1
    to_bci -1
    predecessors "B261" 
    successors "B264" 
    xhandlers
    flags 
    probability 4598364989485822533
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v273|DWORD[.] = MOV [v258|QWORD[.] + v271|QWORD * 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v257|QWORD[.] + v271|QWORD * 4], y: v273|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B263 -> B264 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B264"
    from_bci -1
    to_bci -1
    predecessors "B249" "B263" "B262" 
    successors "B265" "B280" 
    xhandlers
    flags 
    probability 4604433045635831900
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v274|QWORD = MOVSXD v243|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v274|QWORD, y: v256|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B264 -> B265 falseDestination: B264 -> B280 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B280"
    from_bci -1
    to_bci -1
    predecessors "B264" 
    successors "B281" 
    xhandlers
    flags 
    probability 4599929446008461404
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B280 -> B281 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B281"
    from_bci -1
    to_bci -1
    predecessors "B280" "B278" "B277" 
    successors "B282" "B283" 
    xhandlers
    flags 
    probability 4604433045635831900
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v243|DWORD, y: v243|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B281 -> B282 falseDestination: B281 -> B283 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B283"
    from_bci -1
    to_bci -1
    predecessors "B281" 
    successors "B284" 
    xhandlers
    flags 
    probability 4599929446008461404
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v288|DWORD = DEC v243|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v289|DWORD = SHL v288|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v290|QWORD = MOVSXD v289|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v291|QWORD[.] = LEA [v254|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v292|QWORD[.] = ADD (x: v291|QWORD[.], y: v290|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v293|QWORD[*] = SHR v292|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v295|QWORD[.] = LEA [v254|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v294|QWORD[*] = SHR v295|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v296|QWORD[*] = SUB (x: v293|QWORD[*], ~y: v294|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v297|QWORD[*] = INC v296|QWORD[*] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v297|QWORD[*]] destination: B283 -> B284 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B353"
    from_bci -1
    to_bci -1
    predecessors "B284" 
    successors "B284" 
    xhandlers
    flags "lle" 
    loop_index 10
    loop_depth 1
    probability 4599929446008461404
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v362|QWORD[*] = DEC v298|QWORD[*] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v363|QWORD[*] = ADD (x: v294|QWORD[*], y: v16|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v364|QWORD[*] = ADD (x: v363|QWORD[*], y: v362|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v364|QWORD[*]], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v362|QWORD[*]] destination: B353 -> B284 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B284"
    from_bci -1
    to_bci -1
    predecessors "B283" "B353" 
    successors "B285" "B353" 
    xhandlers
    flags "llh" 
    loop_index 10
    loop_depth 1
    probability 4604433045635831900
    begin_IR
      LIR
      nr   -1  <|@ instruction [v298|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v298|QWORD[*] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B284 -> B285 falseDestination: B284 -> B353 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B228"
    from_bci -1
    to_bci -1
    predecessors "B227" 
    successors "B229" "B230" 
    xhandlers
    flags 
    probability 4603399296729809126
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v188|DWORD y: 11 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7308950256495741 condition: < trueDestination: B228 -> B229 falseDestination: B228 -> B230 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B229"
    from_bci -1
    to_bci -1
    predecessors "B228" 
    successors "B232" 
    xhandlers
    flags 
    probability 4601308123973474700
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[10|0xa], v200|QWORD[.], v224|DWORD[.]] destination: B229 -> B232 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B249"
    from_bci -1
    to_bci -1
    predecessors "B248" 
    successors "B264" 
    xhandlers
    flags 
    probability 4599929446008461404
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B249 -> B264 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B265"
    from_bci -1
    to_bci -1
    predecessors "B264" 
    successors "B266" "B267" 
    xhandlers
    flags 
    probability 4599929446008461404
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v275|QWORD[.] = LEA [v254|QWORD[.] + v256|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v276|QWORD = SUB (x: v274|QWORD, ~y: v256|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v277|QWORD = LEA [v276|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v277|QWORD, y: v277|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B265 -> B266 falseDestination: B265 -> B267 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B266"
    from_bci -1
    to_bci -1
    predecessors "B265" 
    successors "B270" 
    xhandlers
    flags 
    probability 4598364989485822533
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B266 -> B270 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B270"
    from_bci -1
    to_bci -1
    predecessors "B266" "B269" 
    successors "B271" "B272" 
    xhandlers
    flags 
    probability 4599929446008461404
    begin_IR
      LIR
      nr   -1  <|@ instruction [v280|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v281|QWORD = LEA [v276|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v280|QWORD, y: v281|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B270 -> B271 falseDestination: B270 -> B272 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B272"
    from_bci -1
    to_bci -1
    predecessors "B270" 
    successors "B273" 
    xhandlers
    flags 
    probability 4598364989485822533
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v275|QWORD[.] + v280|QWORD * 4], input: v8|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v282|QWORD = LEA [v280|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v282|QWORD] destination: B272 -> B273 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B273"
    from_bci -1
    to_bci -1
    predecessors "B272" "B271" 
    successors "B274" "B275" 
    xhandlers
    flags 
    probability 4599929446008461404
    begin_IR
      LIR
      nr   -1  <|@ instruction [v283|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v284|QWORD = LEA [v276|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v283|QWORD, y: v284|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B273 -> B274 falseDestination: B273 -> B275 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B275"
    from_bci -1
    to_bci -1
    predecessors "B273" 
    successors "B276" 
    xhandlers
    flags 
    probability 4598364989485822533
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v275|QWORD[.] + v283|QWORD * 4], input: v7|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v285|QWORD = LEA [v283|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v285|QWORD] destination: B275 -> B276 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B276"
    from_bci -1
    to_bci -1
    predecessors "B275" "B274" 
    successors "B277" "B278" 
    xhandlers
    flags 
    probability 4599929446008461404
    begin_IR
      LIR
      nr   -1  <|@ instruction [v286|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v287|QWORD = DEC v276|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v286|QWORD, y: v287|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B276 -> B277 falseDestination: B276 -> B278 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B278"
    from_bci -1
    to_bci -1
    predecessors "B276" 
    successors "B281" 
    xhandlers
    flags 
    probability 4598364989485822533
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v275|QWORD[.] + v286|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B278 -> B281 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B282"
    from_bci -1
    to_bci -1
    predecessors "B281" 
    successors "B286" 
    xhandlers
    flags 
    probability 4599929446008461404
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B282 -> B286 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B286"
    from_bci -1
    to_bci -1
    predecessors "B282" "B285" 
    successors "B287" "B352" 
    xhandlers
    flags 
    probability 4604433045635831900
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v254|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B286 -> B287 falseDestination: B286 -> B352 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B287"
    from_bci -1
    to_bci -1
    predecessors "B286" 
    successors "B288" "B289" 
    xhandlers
    flags 
    probability 4604433045635831900
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v299|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v300|QWORD = LEA [v299|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v300|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B287 -> B288 falseDestination: B287 -> B289 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B289"
    from_bci -1
    to_bci -1
    predecessors "B287" 
    successors "B290" 
    xhandlers
    flags 
    probability 4604370467374926345
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v300|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v299|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v299|QWORD] destination: B289 -> B290 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B290"
    from_bci -1
    to_bci -1
    predecessors "B289" "B288" 
    successors "B291" 
    xhandlers
    flags 
    probability 4604433045635831900
    begin_IR
      LIR
      nr   -1  <|@ instruction [v302|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v303|QWORD[.] = MOVE v302|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v304|QWORD = MOV [v10|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v302|QWORD[*]], y: v304|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v302|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v302|QWORD[*] + 12], y: v227|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v302|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v305|DWORD[.] = COMPRESSPOINTER (input: v303|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@120cc8dc encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v254|QWORD[.] + v21|DWORD * 4 + 16], y: v305|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v307|QWORD[.] = LEA [v254|QWORD[.] + v21|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v306|QWORD[*] = SHR v307|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v306|QWORD[*] + v16|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v254|QWORD[.]] destination: B290 -> B291 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B285"
    from_bci -1
    to_bci -1
    predecessors "B284" 
    successors "B286" 
    xhandlers
    flags 
    probability 4599929446008461404
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B285 -> B286 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B311"
    from_bci -1
    to_bci -1
    predecessors "B307" 
    successors "B312" 
    xhandlers
    flags 
    probability 4599245063267167508
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B311 -> B312 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B312"
    from_bci -1
    to_bci -1
    predecessors "B311" "B309" 
    successors "B313" 
    xhandlers
    flags 
    probability 4599746673168601052
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v325|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/String;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v325|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v310|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.split(String.java:2373) [bci: 261]
locals: - - - - - - - vobject:ArrayList:0{modCount=v188|DWORD,size=v188|DWORD,elementData=v308|QWORD[.]} v310|DWORD - 
vobject:ArrayList:0{modCount=v188|DWORD,size=v188|DWORD,elementData=v308|QWORD[.]} Ljava/util/ArrayList; v188|DWORD v188|DWORD v308|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:261] <|@ <|@
      nr   -1  <|@ instruction v326|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v326|QWORD[.]] destination: B312 -> B313 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B194"
    from_bci -1
    to_bci -1
    predecessors "B193" 
    successors "B195" "B196" 
    xhandlers
    flags 
    probability 4598846497278032421
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v20|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B194 -> B195 falseDestination: B194 -> B196 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B196"
    from_bci -1
    to_bci -1
    predecessors "B194" 
    successors "B197" "B200" 
    xhandlers
    flags 
    probability 4598846497278032421
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v189|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[0]{}] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v19|QWORD[.], y: v22|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.2066504369952622 condition: = trueDestination: B196 -> B197 falseDestination: B196 -> B200 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B200"
    from_bci -1
    to_bci -1
    predecessors "B196" 
    successors "B232" 
    xhandlers
    flags 
    probability 4597378993675054365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v188|DWORD, v189|QWORD[.], NarrowOop[char[0]{}]] destination: B200 -> B232 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B208"
    from_bci -1
    to_bci -1
    predecessors "B204" 
    successors "B209" 
    xhandlers
    flags 
    probability 4598727575531154857
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B208 -> B209 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B209"
    from_bci -1
    to_bci -1
    predecessors "B208" "B206" 
    successors "B210" 
    xhandlers
    flags 
    probability 4599182611536347262
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v376|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v376|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v23|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.split(String.java:2351) [bci: 132]
stack: int[-1|0xffffffffffffffff] 
locals: v0|QWORD[.] - int[0|0x0] v11|DWORD v20|DWORD - int[0|0x0] vobject:ArrayList:0{modCount=v21|DWORD,size=v21|DWORD,elementData=v22|QWORD[.]} - - 
vobject:ArrayList:0{modCount=v21|DWORD,size=v21|DWORD,elementData=v22|QWORD[.]} Ljava/util/ArrayList; v21|DWORD v21|DWORD v22|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:132] <|@ <|@
      nr   -1  <|@ instruction v199|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v199|QWORD[.]] destination: B209 -> B210 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B230"
    from_bci -1
    to_bci -1
    predecessors "B228" 
    successors "B232" 
    xhandlers
    flags 
    probability 4594791320917528704
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v188|DWORD, v200|QWORD[.], v224|DWORD[.]] destination: B230 -> B232 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B256"
    from_bci -1
    to_bci -1
    predecessors "B255" 
    successors "B258" 
    xhandlers
    flags 
    probability 4590922246753720412
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v263|QWORD] destination: B256 -> B258 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B262"
    from_bci -1
    to_bci -1
    predecessors "B261" 
    successors "B264" 
    xhandlers
    flags 
    probability 4590922246753720412
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B262 -> B264 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B259"
    from_bci -1
    to_bci -1
    predecessors "B258" 
    successors "B261" 
    xhandlers
    flags 
    probability 4590922246753720412
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v267|QWORD] destination: B259 -> B261 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B252"
    from_bci -1
    to_bci -1
    predecessors "B250" 
    successors "B253" 
    xhandlers
    flags 
    probability 4590922246753720412
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B252 -> B253 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B354"
    from_bci -1
    to_bci -1
    predecessors "B253" 
    successors "B253" 
    xhandlers
    flags "lle" 
    loop_index 8
    loop_depth 1
    probability 4598364989485822533
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v262|QWORD] destination: B354 -> B253 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B253"
    from_bci -1
    to_bci -1
    predecessors "B252" "B354" 
    successors "B254" "B354" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 1
    probability 4599929446008461404
    begin_IR
      LIR
      nr   -1  <|@ instruction [v260|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v261|V256_DWORD[........] = H [v258|QWORD[.] + v260|QWORD * 4] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v257|QWORD[.] + v260|QWORD * 4], input: v261|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v262|QWORD = LEA [v260|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v262|QWORD, y: v259|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B253 -> B254 falseDestination: B253 -> B354 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B274"
    from_bci -1
    to_bci -1
    predecessors "B273" 
    successors "B276" 
    xhandlers
    flags 
    probability 4590922246753720412
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v283|QWORD] destination: B274 -> B276 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B254"
    from_bci -1
    to_bci -1
    predecessors "B253" 
    successors "B255" 
    xhandlers
    flags 
    probability 4590922246753720412
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v262|QWORD] destination: B254 -> B255 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B277"
    from_bci -1
    to_bci -1
    predecessors "B276" 
    successors "B281" 
    xhandlers
    flags 
    probability 4590922246753720412
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B277 -> B281 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B267"
    from_bci -1
    to_bci -1
    predecessors "B265" 
    successors "B268" 
    xhandlers
    flags 
    probability 4590922246753720412
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B267 -> B268 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B279"
    from_bci -1
    to_bci -1
    predecessors "B268" 
    successors "B268" 
    xhandlers
    flags "lle" 
    loop_index 9
    loop_depth 1
    probability 4598364989485822533
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v279|QWORD] destination: B279 -> B268 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B268"
    from_bci -1
    to_bci -1
    predecessors "B267" "B279" 
    successors "B269" "B279" 
    xhandlers
    flags "llh" 
    loop_index 9
    loop_depth 1
    probability 4599929446008461404
    begin_IR
      LIR
      nr   -1  <|@ instruction [v278|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v275|QWORD[.] + v278|QWORD * 4], input: v9|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v279|QWORD = LEA [v278|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v279|QWORD, y: v277|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B268 -> B269 falseDestination: B268 -> B279 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B271"
    from_bci -1
    to_bci -1
    predecessors "B270" 
    successors "B273" 
    xhandlers
    flags 
    probability 4590922246753720412
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v280|QWORD] destination: B271 -> B273 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B269"
    from_bci -1
    to_bci -1
    predecessors "B268" 
    successors "B270" 
    xhandlers
    flags 
    probability 4590922246753720412
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v279|QWORD] destination: B269 -> B270 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B197"
    from_bci -1
    to_bci -1
    predecessors "B196" 
    successors "B198" "B199" 
    xhandlers
    flags 
    probability 4588715946378730674
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v188|DWORD y: 11 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7308950256495741 condition: < trueDestination: B197 -> B198 falseDestination: B197 -> B199 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B198"
    from_bci -1
    to_bci -1
    predecessors "B197" 
    successors "B232" 
    xhandlers
    flags 
    probability 4586413719592755138
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[10|0xa], v189|QWORD[.], NarrowOop[char[0]{}]] destination: B198 -> B232 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B187"
    from_bci -1
    to_bci -1
    predecessors "B186" 
    successors "B188" "B189" 
    xhandlers
    flags 
    probability 4586473879993340259
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v182|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v183|QWORD = LEA [v182|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v183|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B187 -> B188 falseDestination: B187 -> B189 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B189"
    from_bci -1
    to_bci -1
    predecessors "B187" 
    successors "B190" 
    xhandlers
    flags 
    probability 4586410749403764801
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v183|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v182|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v182|QWORD] destination: B189 -> B190 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B190"
    from_bci -1
    to_bci -1
    predecessors "B189" "B188" 
    successors 
    xhandlers
    flags 
    probability 4586473879993340259
    begin_IR
      LIR
      nr   -1  <|@ instruction [v185|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v186|QWORD[.] = MOVE v185|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v185|QWORD[*] + 12] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v185|QWORD[*]] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v185|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v187|DWORD[.] = COMPRESSPOINTER (input: v0|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@120cc8dc encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v185|QWORD[*] + 16], y: v187|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v186|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B309"
    from_bci -1
    to_bci -1
    predecessors "B308" 
    successors "B312" 
    xhandlers
    flags 
    probability 4583682979831360632
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B309 -> B312 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B206"
    from_bci -1
    to_bci -1
    predecessors "B205" 
    successors "B209" 
    xhandlers
    flags 
    probability 4582937797491502414
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B206 -> B209 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B236"
    from_bci -1
    to_bci -1
    predecessors "B235" 
    successors "B238" 
    xhandlers
    flags 
    probability 4582572226418264729
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v379|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v379|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
stack: vobject:ArrayList:0{modCount=v21|DWORD,size=v21|DWORD,elementData=v22|QWORD[.]} v225|DWORD 
locals: - - 
java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
locals: vobject:ArrayList:0{modCount=v21|DWORD,size=v21|DWORD,elementData=v22|QWORD[.]} vobject:String:1{value=v226|QWORD[.],hash=int[0|0x0]} 
java.lang.String.split(String.java:2368) [bci: 246]
locals: - - v2|DWORD - - - - vobject:ArrayList:0{modCount=v21|DWORD,size=v21|DWORD,elementData=v22|QWORD[.]} - - 
vobject:ArrayList:0{modCount=v21|DWORD,size=v21|DWORD,elementData=v22|QWORD[.]} Ljava/util/ArrayList; v21|DWORD v21|DWORD v22|QWORD[.] 
vobject:String:1{value=v226|QWORD[.],hash=int[0|0x0]} Ljava/lang/String; v226|QWORD[.] int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:9, 7, 246] <|@ <|@
      nr   -1  <|@ instruction v233|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v233|QWORD[.]] destination: B236 -> B238 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B199"
    from_bci -1
    to_bci -1
    predecessors "B197" 
    successors "B232" 
    xhandlers
    flags 
    probability 4580261674980375008
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v188|DWORD, v189|QWORD[.], NarrowOop[char[0]{}]] destination: B199 -> B232 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B185" 
    xhandlers
    flags 
    probability 4580029577595117535
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B37 -> B185 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B246"
    from_bci -1
    to_bci -1
    predecessors "B245" 
    successors "B248" 
    xhandlers
    flags 
    probability 4574660039549593971
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v251|QWORD = UNCOMPRESSPOINTER (input: v229|DWORD, ~baseRegister: -) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@120cc8dc encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v251|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v243|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
stack: vobject:ArrayList:0{modCount=v21|DWORD,size=v21|DWORD,elementData=v22|QWORD[.]} v225|DWORD 
locals: - - 
java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
locals: vobject:ArrayList:0{modCount=v21|DWORD,size=v21|DWORD,elementData=v22|QWORD[.]} vobject:String:1{value=v226|QWORD[.],hash=int[0|0x0]} 
java.lang.String.split(String.java:2368) [bci: 246]
locals: - - v2|DWORD - - - - vobject:ArrayList:0{modCount=v21|DWORD,size=v21|DWORD,elementData=v22|QWORD[.]} - - 
vobject:ArrayList:0{modCount=v21|DWORD,size=v21|DWORD,elementData=v22|QWORD[.]} Ljava/util/ArrayList; v21|DWORD v21|DWORD v22|QWORD[.] 
vobject:String:1{value=v226|QWORD[.],hash=int[0|0x0]} Ljava/lang/String; v226|QWORD[.] int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:9, 7, 246] <|@ <|@
      nr   -1  <|@ instruction v252|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v252|QWORD[.]] destination: B246 -> B248 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B288"
    from_bci -1
    to_bci -1
    predecessors "B287" 
    successors "B290" 
    xhandlers
    flags 
    probability 4574660039549593971
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v378|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v378|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
stack: vobject:ArrayList:0{modCount=v21|DWORD,size=v21|DWORD,elementData=v22|QWORD[.]} v225|DWORD 
locals: - - 
java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
locals: vobject:ArrayList:0{modCount=v21|DWORD,size=v21|DWORD,elementData=v22|QWORD[.]} vobject:String:1{value=v226|QWORD[.],hash=int[0|0x0]} 
java.lang.String.split(String.java:2368) [bci: 246]
locals: - - v2|DWORD - - - - vobject:ArrayList:0{modCount=v21|DWORD,size=v21|DWORD,elementData=v22|QWORD[.]} - - 
vobject:ArrayList:0{modCount=v21|DWORD,size=v21|DWORD,elementData=v22|QWORD[.]} Ljava/util/ArrayList; v21|DWORD v21|DWORD v22|QWORD[.] 
vobject:String:1{value=v226|QWORD[.],hash=int[0|0x0]} Ljava/lang/String; v226|QWORD[.] int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:9, 7, 246] <|@ <|@
      nr   -1  <|@ instruction v301|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v301|QWORD[.]] destination: B288 -> B290 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B188"
    from_bci -1
    to_bci -1
    predecessors "B187" 
    successors "B190" 
    xhandlers
    flags 
    probability 4556716339109859626
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v380|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v380|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.split(String.java:2351) [bci: 132]
stack: int[-1|0xffffffffffffffff] 
locals: v0|QWORD[.] - int[0|0x0] v11|DWORD v20|DWORD - int[0|0x0] vobject:ArrayList:0{modCount=v21|DWORD,size=v21|DWORD,elementData=v22|QWORD[.]} - - 
vobject:ArrayList:0{modCount=v21|DWORD,size=v21|DWORD,elementData=v22|QWORD[.]} Ljava/util/ArrayList; v21|DWORD v21|DWORD v22|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:132] <|@ <|@
      nr   -1  <|@ instruction v184|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v184|QWORD[.]] destination: B188 -> B190 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B202"
    from_bci -1
    to_bci -1
    predecessors "B201" 
    successors "B203" 
    xhandlers
    flags 
    probability 4553813439973800263
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-575841|0xfffffffffff7369f]] destination: B202 -> B203 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B203"
    from_bci -1
    to_bci -1
    predecessors "B192" "B195" "B202" 
    successors 
    xhandlers
    flags 
    probability 4553813439973800263
    begin_IR
      LIR
      nr   -1  <|@ instruction [v190|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v190|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.split(String.java:2351) [bci: 132]
stack: int[-1|0xffffffffffffffff] 
locals: v0|QWORD[.] - int[0|0x0] v11|DWORD v20|DWORD - int[0|0x0] vobject:ArrayList:0{modCount=v21|DWORD,size=v21|DWORD,elementData=v22|QWORD[.]} - - 
vobject:ArrayList:0{modCount=v21|DWORD,size=v21|DWORD,elementData=v22|QWORD[.]} Ljava/util/ArrayList; v21|DWORD v21|DWORD v22|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:132] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" 
    xhandlers
    flags 
    probability 4524150487867272957
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-553569|0xfffffffffff78d9f]] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B59" "B61" 
    successors 
    xhandlers
    flags 
    probability 4524150487867272957
    begin_IR
      LIR
      nr   -1  <|@ instruction [v39|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v39|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.substring(String.java:1969) [bci: 65]
locals: v0|QWORD[.] v20|DWORD - v30|DWORD 
java.lang.String.split(String.java:2353) [bci: 162]
stack: vobject:ArrayList:0{modCount=v21|DWORD,size=v21|DWORD,elementData=v22|QWORD[.]} 
locals: v0|QWORD[.] - int[0|0x0] v11|DWORD - v28|DWORD int[0|0x0] vobject:ArrayList:0{modCount=v21|DWORD,size=v21|DWORD,elementData=v22|QWORD[.]} - - 
vobject:ArrayList:0{modCount=v21|DWORD,size=v21|DWORD,elementData=v22|QWORD[.]} Ljava/util/ArrayList; v21|DWORD v21|DWORD v22|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:65, 162] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B192"
    from_bci -1
    to_bci -1
    predecessors "B191" 
    successors "B203" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-430867|0xfffffffffff96ced]] destination: B192 -> B203 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B362" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-390163|0xfffffffffffa0bed], Object[null]] destination: B2 -> B362 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B362"
    from_bci -1
    to_bci -1
    predecessors "B2" "B361" "B4" "B6" "B8" "B10" "B12" "B14" "B16" "B18" "B20" "B22" "B25" "B360" "B359" 
    successors 
    xhandlers
    flags 
    probability 2372834053670830080
    begin_IR
      LIR
      nr   -1  <|@ instruction [v368|DWORD, v369|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v368|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v369|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.split(String.java:2336) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B346"
    from_bci -1
    to_bci -1
    predecessors "B303" 
    successors "B351" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v370|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1976730038] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-440603|0xfffffffffff946e5], v370|QWORD[.]] destination: B346 -> B351 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B351"
    from_bci -1
    to_bci -1
    predecessors "B306" "B293" "B350" "B349" "B348" "B347" "B346" "B345" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      LIR
      nr   -1  <|@ instruction [v360|DWORD, v361|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v360|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v361|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.split(String.java:2373) [bci: 261]
locals: - - - - - - - vobject:ArrayList:0{modCount=v188|DWORD,size=v188|DWORD,elementData=v308|QWORD[.]} v310|DWORD - 
vobject:ArrayList:0{modCount=v188|DWORD,size=v188|DWORD,elementData=v308|QWORD[.]} Ljava/util/ArrayList; v188|DWORD v188|DWORD v308|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:261] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B361"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B362" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-414227|0xfffffffffff9aded], Object[null]] destination: B361 -> B362 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B293"
    from_bci -1
    to_bci -1
    predecessors "B292" 
    successors "B351" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-431379|0xfffffffffff96aed], Object[null]] destination: B293 -> B351 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B350"
    from_bci -1
    to_bci -1
    predecessors "B294" 
    successors "B351" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-431635|0xfffffffffff969ed], Object[null]] destination: B350 -> B351 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B239"
    from_bci -1
    to_bci -1
    predecessors "B234" 
    successors "B357" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-447003|0xfffffffffff92de5], Object[null]] destination: B239 -> B357 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B357"
    from_bci -1
    to_bci -1
    predecessors "B240" "B239" "B356" "B355" "B352" "B244" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr   -1  <|@ instruction [v365|DWORD, v366|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v365|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v366|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
stack: vobject:ArrayList:0{modCount=v21|DWORD,size=v21|DWORD,elementData=v22|QWORD[.]} v225|DWORD 
locals: - - 
java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
locals: vobject:ArrayList:0{modCount=v21|DWORD,size=v21|DWORD,elementData=v22|QWORD[.]} vobject:String:1{value=v226|QWORD[.],hash=int[0|0x0]} 
java.lang.String.split(String.java:2368) [bci: 246]
locals: - - v2|DWORD - - - - vobject:ArrayList:0{modCount=v21|DWORD,size=v21|DWORD,elementData=v22|QWORD[.]} - - 
vobject:ArrayList:0{modCount=v21|DWORD,size=v21|DWORD,elementData=v22|QWORD[.]} Ljava/util/ArrayList; v21|DWORD v21|DWORD v22|QWORD[.] 
vobject:String:1{value=v226|QWORD[.],hash=int[0|0x0]} Ljava/lang/String; v226|QWORD[.] int[0|0x0] 
>@ <|@ instruction DEOPT info [bci:9, 7, 246] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B240"
    from_bci -1
    to_bci -1
    predecessors "B233" 
    successors "B357" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v373|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@358913875] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-446268|0xfffffffffff930c4], v373|QWORD[.]] destination: B240 -> B357 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B362" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-390675|0xfffffffffffa09ed], Object[null]] destination: B8 -> B362 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B175" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-563809|0xfffffffffff7659f], Object[null]] destination: B126 -> B175 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B175"
    from_bci -1
    to_bci -1
    predecessors "B122" "B121" "B174" "B173" "B170" "B126" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr   -1  <|@ instruction [v176|DWORD, v177|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v176|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v177|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
stack: vobject:ArrayList:0{modCount=v21|DWORD,size=v21|DWORD,elementData=v22|QWORD[.]} v104|DWORD 
locals: - - 
java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
locals: vobject:ArrayList:0{modCount=v21|DWORD,size=v21|DWORD,elementData=v22|QWORD[.]} v102|QWORD[.] 
java.lang.String.split(String.java:2353) [bci: 165]
locals: v0|QWORD[.] - int[0|0x0] v11|DWORD - v28|DWORD int[0|0x0] vobject:ArrayList:0{modCount=v21|DWORD,size=v21|DWORD,elementData=v22|QWORD[.]} - - 
vobject:ArrayList:0{modCount=v21|DWORD,size=v21|DWORD,elementData=v22|QWORD[.]} Ljava/util/ArrayList; v21|DWORD v21|DWORD v22|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:9, 7, 165] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B179"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B181" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B179 -> B181 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B181"
    from_bci -1
    to_bci -1
    predecessors "B180" "B179" 
    successors "B182" 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B181 -> B182 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B182"
    from_bci -1
    to_bci -1
    predecessors "B181" 
    successors "B183" 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v179|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@180539890] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-421147|0xfffffffffff992e5], v179|QWORD[.]] destination: B182 -> B183 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B183"
    from_bci -1
    to_bci -1
    predecessors "B29" "B182" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v180|DWORD, v181|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v180|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v181|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.split(String.java:2351) [bci: 125]
locals: v0|QWORD[.] - int[0|0x0] v11|DWORD v20|DWORD - int[0|0x0] vobject:ArrayList:0{modCount=v21|DWORD,size=v21|DWORD,elementData=v22|QWORD[.]} - - 
vobject:ArrayList:0{modCount=v21|DWORD,size=v21|DWORD,elementData=v22|QWORD[.]} Ljava/util/ArrayList; v21|DWORD v21|DWORD v22|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:125] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B362" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-393747|0xfffffffffff9fded], Object[null]] destination: B20 -> B362 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B362" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-394259|0xfffffffffff9fbed], Object[null]] destination: B18 -> B362 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B347"
    from_bci -1
    to_bci -1
    predecessors "B302" 
    successors "B351" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v359|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1144871021] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-439827|0xfffffffffff949ed], v359|QWORD[.]] destination: B347 -> B351 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B362" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-393235|0xfffffffffff9ffed], Object[null]] destination: B14 -> B362 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B341"
    from_bci -1
    to_bci -1
    predecessors "B339" 
    successors "B342" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-445971|0xfffffffffff931ed]] destination: B341 -> B342 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B342"
    from_bci -1
    to_bci -1
    predecessors "B332" "B338" "B341" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v355|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v355|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - v327|QWORD[.] - v327|QWORD[.] vobject:ArrayList$SubList$1:0{cursor=v349|DWORD,lastRet=v350|DWORD,expectedModCount=v188|DWORD,val$index=int[0|0x0],val$offset=int[0|0x0],this$1=vobject:ArrayList$SubList:1{modCount=v188|DWORD,parentOffset=int[0|0x0],offset=int[0|0x0],size=v310|DWORD,parent=vobject:ArrayList:2{modCount=v188|DWORD,size=v188|DWORD,elementData=v308|QWORD[.]},this$0=vobject:ArrayList:2}} v349|DWORD 
java.lang.String.split(String.java:2378) [bci: 307]
locals: - - - - - - - - - - 
vobject:ArrayList$SubList$1:0{cursor=v349|DWORD,lastRet=v350|DWORD,expectedModCount=v188|DWORD,val$index=int[0|0x0],val$offset=int[0|0x0],this$1=vobject:ArrayList$SubList:1{modCount=v188|DWORD,parentOffset=int[0|0x0],offset=int[0|0x0],size=v310|DWORD,parent=vobject:ArrayList:2{modCount=v188|DWORD,size=v188|DWORD,elementData=v308|QWORD[.]},this$0=vobject:ArrayList:2}} Ljava/util/ArrayList$SubList$1; v349|DWORD v350|DWORD v188|DWORD int[0|0x0] int[0|0x0] vobject:ArrayList$SubList:1{modCount=v188|DWORD,parentOffset=int[0|0x0],offset=int[0|0x0],size=v310|DWORD,parent=vobject:ArrayList:2{modCount=v188|DWORD,size=v188|DWORD,elementData=v308|QWORD[.]},this$0=vobject:ArrayList:2} 
vobject:ArrayList$SubList:1{modCount=v188|DWORD,parentOffset=int[0|0x0],offset=int[0|0x0],size=v310|DWORD,parent=vobject:ArrayList:2{modCount=v188|DWORD,size=v188|DWORD,elementData=v308|QWORD[.]},this$0=vobject:ArrayList:2} Ljava/util/ArrayList$SubList; v188|DWORD int[0|0x0] int[0|0x0] v310|DWORD vobject:ArrayList:2{modCount=v188|DWORD,size=v188|DWORD,elementData=v308|QWORD[.]} vobject:ArrayList:2{modCount=v188|DWORD,size=v188|DWORD,elementData=v308|QWORD[.]} 
vobject:ArrayList:2{modCount=v188|DWORD,size=v188|DWORD,elementData=v308|QWORD[.]} Ljava/util/ArrayList; v188|DWORD v188|DWORD v308|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:42, 307] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B362" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-392723|0xfffffffffffa01ed], Object[null]] destination: B16 -> B362 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B244"
    from_bci -1
    to_bci -1
    predecessors "B243" 
    successors "B357" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-585825|0xfffffffffff70f9f], Object[null]] destination: B244 -> B357 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B170"
    from_bci -1
    to_bci -1
    predecessors "B168" 
    successors "B175" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v374|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@358913875] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-427836|0xfffffffffff978c4], v374|QWORD[.]] destination: B170 -> B175 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B362" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-392211|0xfffffffffffa03ed], Object[null]] destination: B10 -> B362 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B332"
    from_bci -1
    to_bci -1
    predecessors "B331" 
    successors "B342" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-439315|0xfffffffffff94bed]] destination: B332 -> B342 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B352"
    from_bci -1
    to_bci -1
    predecessors "B286" 
    successors "B357" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v372|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@358913875] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-449852|0xfffffffffff922c4], v372|QWORD[.]] destination: B352 -> B357 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B356"
    from_bci -1
    to_bci -1
    predecessors "B241" 
    successors "B357" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-449299|0xfffffffffff924ed], Object[null]] destination: B356 -> B357 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B355"
    from_bci -1
    to_bci -1
    predecessors "B242" 
    successors "B357" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-450331|0xfffffffffff920e5], Object[null]] destination: B355 -> B357 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B348"
    from_bci -1
    to_bci -1
    predecessors "B298" 
    successors "B351" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-435491|0xfffffffffff95add], Object[null]] destination: B348 -> B351 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B180"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B181" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B180 -> B181 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B174"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B175" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-427283|0xfffffffffff97aed], Object[null]] destination: B174 -> B175 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B360"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B362" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v367|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1154356070] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-460051|0xfffffffffff8faed], v367|QWORD[.]] destination: B360 -> B362 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B349"
    from_bci -1
    to_bci -1
    predecessors "B295" 
    successors "B351" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-432667|0xfffffffffff965e5], Object[null]] destination: B349 -> B351 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B362" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-417555|0xfffffffffff9a0ed], Object[null]] destination: B25 -> B362 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -430099 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.substring(String.java:1969) [bci: 65]
locals: v0|QWORD[.] v20|DWORD - int[0|0x0] 
java.lang.String.split(String.java:2353) [bci: 162]
stack: vobject:ArrayList:0{modCount=v21|DWORD,size=v21|DWORD,elementData=v22|QWORD[.]} 
locals: v0|QWORD[.] - int[0|0x0] v11|DWORD - v28|DWORD int[0|0x0] vobject:ArrayList:0{modCount=v21|DWORD,size=v21|DWORD,elementData=v22|QWORD[.]} - - 
vobject:ArrayList:0{modCount=v21|DWORD,size=v21|DWORD,elementData=v22|QWORD[.]} Ljava/util/ArrayList; v21|DWORD v21|DWORD v22|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:65, 162] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B362" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-389651|0xfffffffffffa0ded], Object[null]] destination: B4 -> B362 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-423443|0xfffffffffff989ed]] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B39" "B41" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v31|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v31|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.indexOf(String.java:1558) [bci: 37]
locals: - v11|DWORD - v13|DWORD v15|QWORD[.] v28|DWORD 
java.lang.String.split(String.java:2351) [bci: 129]
locals: v0|QWORD[.] - int[0|0x0] v11|DWORD v20|DWORD - int[0|0x0] vobject:ArrayList:0{modCount=v21|DWORD,size=v21|DWORD,elementData=v22|QWORD[.]} - - 
vobject:ArrayList:0{modCount=v21|DWORD,size=v21|DWORD,elementData=v22|QWORD[.]} Ljava/util/ArrayList; v21|DWORD v21|DWORD v22|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37, 129] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B175" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v375|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@358913875] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-424252|0xfffffffffff986c4], v375|QWORD[.]] destination: B122 -> B175 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B362" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-391699|0xfffffffffffa05ed], Object[null]] destination: B12 -> B362 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-430355|0xfffffffffff96eed]] destination: B59 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B195"
    from_bci -1
    to_bci -1
    predecessors "B194" 
    successors "B203" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-452627|0xfffffffffff917ed]] destination: B195 -> B203 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B173"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors "B175" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-428315|0xfffffffffff976e5], Object[null]] destination: B173 -> B175 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-423187|0xfffffffffff98aed]] destination: B39 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B306"
    from_bci -1
    to_bci -1
    predecessors "B305" 
    successors "B351" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-438803|0xfffffffffff94ded], Object[null]] destination: B306 -> B351 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B338"
    from_bci -1
    to_bci -1
    predecessors "B335" 
    successors "B342" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-445739|0xfffffffffff932d5]] destination: B338 -> B342 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B345"
    from_bci -1
    to_bci -1
    predecessors "B304" 
    successors "B351" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v371|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1976730038] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-442907|0xfffffffffff93de5], v371|QWORD[.]] destination: B345 -> B351 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B362" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-391187|0xfffffffffffa07ed], Object[null]] destination: B6 -> B362 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B175" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-424987|0xfffffffffff983e5], Object[null]] destination: B121 -> B175 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B359"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B362" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-417811|0xfffffffffff99fed], Object[null]] destination: B359 -> B362 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B183" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-420371|0xfffffffffff995ed], Object[null]] destination: B29 -> B183 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B362" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-364819|0xfffffffffffa6eed], Object[null]] destination: B22 -> B362 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_3      
     2: aload_1       
     3: getfield      #1          // value:char[]
     6: arraylength   
     7: iconst_1      
     8: if_icmpne     27
    11: ldc           #87         // ".$|()[{^?*+\"
    13: aload_1       
    14: iconst_0      
    15: invokevirtual #73         // charAt:(int)char
    18: dup           
    19: istore_3      
    20: invokevirtual #74         // indexOf:(int)int
    23: iconst_m1     
    24: if_icmpeq     87
    27: aload_1       
    28: invokevirtual #61         // length:()int
    31: iconst_2      
    32: if_icmpne     316
    35: aload_1       
    36: iconst_0      
    37: invokevirtual #73         // charAt:(int)char
    40: bipush        92
    42: if_icmpne     316
    45: aload_1       
    46: iconst_1      
    47: invokevirtual #73         // charAt:(int)char
    50: dup           
    51: istore_3      
    52: bipush        48
    54: isub          
    55: bipush        57
    57: iload_3       
    58: isub          
    59: ior           
    60: ifge          316
    63: iload_3       
    64: bipush        97
    66: isub          
    67: bipush        122
    69: iload_3       
    70: isub          
    71: ior           
    72: ifge          316
    75: iload_3       
    76: bipush        65
    78: isub          
    79: bipush        90
    81: iload_3       
    82: isub          
    83: ior           
    84: ifge          316
    87: iload_3       
    88: ldc           #90         // 55296
    90: if_icmplt     99
    93: iload_3       
    94: ldc           #91         // 57343
    96: if_icmple     316
    99: iconst_0      
   100: istore        4
   102: iconst_0      
   103: istore        5
   105: iload_2       
   106: ifle          113
   109: iconst_1      
   110: goto          114
   113: iconst_0      
   114: istore        6
   116: new           #92         // java.util.ArrayList
   119: dup           
   120: invokespecial #75         // java.util.ArrayList.<init>:()void
   123: astore        7
   125: aload_0       
   126: iload_3       
   127: iload         4
   129: invokevirtual #49         // indexOf:(int, int)int
   132: dup           
   133: istore        5
   135: iconst_m1     
   136: if_icmpeq     205
   139: iload         6
   141: ifeq          155
   144: aload         7
   146: invokevirtual #76         // java.util.ArrayList.size:()int
   149: iload_2       
   150: iconst_1      
   151: isub          
   152: if_icmpge     178
   155: aload         7
   157: aload_0       
   158: iload         4
   160: iload         5
   162: invokevirtual #60         // substring:(int, int)java.lang.String
   165: invokevirtual #77         // java.util.ArrayList.add:(java.lang.Object)boolean
   168: pop           
   169: iload         5
   171: iconst_1      
   172: iadd          
   173: istore        4
   175: goto          125
   178: aload         7
   180: aload_0       
   181: iload         4
   183: aload_0       
   184: getfield      #1          // value:char[]
   187: arraylength   
   188: invokevirtual #60         // substring:(int, int)java.lang.String
   191: invokevirtual #77         // java.util.ArrayList.add:(java.lang.Object)boolean
   194: pop           
   195: aload_0       
   196: getfield      #1          // value:char[]
   199: arraylength   
   200: istore        4
   202: goto          205
   205: iload         4
   207: ifne          219
   210: iconst_1      
   211: anewarray     #43         // java.lang.String
   214: dup           
   215: iconst_0      
   216: aload_0       
   217: aastore       
   218: areturn       
   219: iload         6
   221: ifeq          233
   224: aload         7
   226: invokevirtual #76         // java.util.ArrayList.size:()int
   229: iload_2       
   230: if_icmpge     250
   233: aload         7
   235: aload_0       
   236: iload         4
   238: aload_0       
   239: getfield      #1          // value:char[]
   242: arraylength   
   243: invokevirtual #60         // substring:(int, int)java.lang.String
   246: invokevirtual #77         // java.util.ArrayList.add:(java.lang.Object)boolean
   249: pop           
   250: aload         7
   252: invokevirtual #76         // java.util.ArrayList.size:()int
   255: istore        8
   257: iload_2       
   258: ifne          290
   261: iload         8
   263: ifle          290
   266: aload         7
   268: iload         8
   270: iconst_1      
   271: isub          
   272: invokevirtual #78         // java.util.ArrayList.get:(int)java.lang.Object
   275: checkcast     #43         // java.lang.String
   278: invokevirtual #61         // length:()int
   281: ifne          290
   284: iinc          
   287: goto          261
   290: iload         8
   292: anewarray     #43         // java.lang.String
   295: astore        9
   297: aload         7
   299: iconst_0      
   300: iload         8
   302: invokevirtual #79         // java.util.ArrayList.subList:(int, int)java.util.List
   305: aload         9
   307: invokeinterface#80, 2      // java.util.List.toArray:(java.lang.Object[])java.lang.Object[]
   312: checkcast     #99         // java.lang.String[]
   315: areturn       
   316: aload_1       
   317: invokestatic  #67         // java.util.regex.Pattern.compile:(java.lang.String)java.util.regex.Pattern
   320: aload_0       
   321: iload_2       
   322: invokevirtual #81         // java.util.regex.Pattern.split:(java.lang.CharSequence, int)java.lang.String[]
   325: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B361" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7332283d slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction r14|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction stack:36|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr   14  <|@ st <@st|@reference-map: [rdx:0, r13:0, stack:96]
live-base-pointers: []
java.lang.String.split(String.java:2336) [bci: 0]
locals: r13|QWORD[.] rdx|QWORD[.] r14|DWORD - - - - - - - 
>@ <|@ instruction rsi|DWORD[.] = MOV [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   16  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r13:0, stack:96]
live-base-pointers: []
java.lang.String.split(String.java:2336) [bci: 0]
locals: r13|QWORD[.] rdx|QWORD[.] r14|DWORD - - - - - - - 
>@ <|@ instruction rcx|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   18  <|@ instruction xmm0|V64_DWORD[..] = L oc: SIMD<null,null> <|@ <|@
      nr   20  <|@ instruction xmm1|V128_DWORD[....] = L oc: SIMD<null,null,null,null> <|@ <|@
      nr   22  <|@ instruction xmm2|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null> <|@ <|@
      nr   24  <|@ instruction r10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   26  <|@ instruction CMP rcx|DWORD y: 1 size: DWORD <|@ <|@
      nr   28  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B361 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction r11|DWORD = MOVZX [rsi|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   34  <|@ instruction stack:40|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction CMP r11|DWORD y: 36 size: DWORD <|@ <|@
      nr   38  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction CMP r11|DWORD y: 46 size: DWORD <|@ <|@
      nr   52  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction CMP r11|DWORD y: 40 size: DWORD <|@ <|@
      nr   66  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   78  <|@ instruction CMP r11|DWORD y: 124 size: DWORD <|@ <|@
      nr   80  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   92  <|@ instruction CMP r11|DWORD y: 91 size: DWORD <|@ <|@
      nr   94  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  106  <|@ instruction CMP r11|DWORD y: 41 size: DWORD <|@ <|@
      nr  108  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  120  <|@ instruction CMP r11|DWORD y: 94 size: DWORD <|@ <|@
      nr  122  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  134  <|@ instruction CMP r11|DWORD y: 123 size: DWORD <|@ <|@
      nr  136  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  148  <|@ instruction CMP r11|DWORD y: 42 size: DWORD <|@ <|@
      nr  150  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  162  <|@ instruction CMP r11|DWORD y: 63 size: DWORD <|@ <|@
      nr  164  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  176  <|@ instruction CMP r11|DWORD y: 43 size: DWORD <|@ <|@
      nr  178  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B360" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  190  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  192  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B360 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  196  <|@ instruction CMP r11|DWORD y: 92 size: DWORD <|@ <|@
      nr  198  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B359" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  210  <|@ instruction CMP r11|DWORD y: 55296 size: DWORD <|@ <|@
      nr  212  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B26 -> B27 falseDestination: B26 -> B359 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  216  <|@ instruction rsi|DWORD[.] = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  218  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r13:0, stack:96]
live-base-pointers: []
java.lang.String.split(String.java:2336) [bci: 0]
locals: r13|QWORD[.] rdx|QWORD[.] r14|DWORD - - - - - - - 
>@ <|@ instruction r8|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  220  <|@ instruction stack:44|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  222  <|@ instruction r9|QWORD = MOV r8|DWORD size: DWORD <|@ <|@
      nr  224  <|@ instruction stack:56|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  226  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@120cc8dc encoding: base: 0 shift: 3 <|@ <|@
      nr  228  <|@ instruction stack:64|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction rbx|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  232  <|@ instruction stack:72|QWORD = MOVE rbx|QWORD moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction rdi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Object[0]{}] <|@ <|@
      nr  236  <|@ instruction stack:80|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction stack:88|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction stack:92|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  242  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  244  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B169" "B120" 
    successors "B29" "B30" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4614323782818816755
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL numbPhis: 3 align: true label: ? <|@ <|@
      nr  248  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  250  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B184" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4614323782818816755
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  266  <|@ instruction rdx|DWORD = SUB (x: r8|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  268  <|@ instruction CMP (x: r8|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  270  <|@ instruction BRANCH trueDestinationProbability: 0.7686826237895121 condition: > trueDestination: B30 -> B31 falseDestination: B30 -> B184 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B180" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612671861231424105
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  274  <|@ instruction r14|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  276  <|@ instruction r13|QWORD = MOVSXD rdx|DWORD size: QWORD <|@ <|@
      nr  278  <|@ instruction r13|QWORD = DEC r13|QWORD size: QWORD <|@ <|@
      nr  280  <|@ instruction r14|QWORD = ADD (x: r14|QWORD, y: r13|QWORD) size: QWORD <|@ <|@
      nr  282  <|@ instruction CMP (x: r9|QWORD, y: r14|QWORD) size: QWORD <|@ <|@
      nr  284  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B180 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B179" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612671861231424105
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  288  <|@ instruction CMP (x: r8|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  290  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B32 -> B33 falseDestination: B32 -> B179 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612671861231424105
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  294  <|@ instruction r13|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  296  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B177" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4629327619026861556
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  306  <|@ instruction r14|DWORD = MOVZX [rsi|QWORD[.] + r13|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  308  <|@ instruction CMP (x: r14|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  310  <|@ instruction BRANCH trueDestinationProbability: 0.0015918580565381646 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B177 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B177"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B34" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4629313874285517559
    begin_IR
      LIR
      nr 1720  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1722  <|@ instruction r13|DWORD = INC r13|DWORD size: DWORD <|@ <|@
      nr 1724  <|@ instruction JUMP ~[] destination: B177 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B177" 
    successors "B35" "B178" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4629850235763156642
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  300  <|@ instruction CMP (x: r8|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  302  <|@ instruction BRANCH trueDestinationProbability: 0.9277482167917486 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B178 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" "B38" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587198128603920715
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  314  <|@ instruction CMP r13|DWORD y: -1 size: DWORD <|@ <|@
      nr  316  <|@ instruction BRANCH trueDestinationProbability: 0.315317887137174 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584979139650404691
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  328  <|@ instruction CMP (x: r13|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  330  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584979139650404691
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  346  <|@ instruction r14|DWORD = SUB (x: r13|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  348  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  350  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B40 -> B41 falseDestination: B40 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B44" "B49" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584979139650404691
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  374  <|@ instruction stack:100|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  376  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  378  <|@ instruction BRANCH trueDestinationProbability: 0.18334585698550698 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B50" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583527021126394577
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  426  <|@ instruction CMP r14|DWORD y: 1 size: DWORD <|@ <|@
      nr  428  <|@ instruction BRANCH trueDestinationProbability: 0.09284041465770032 condition: < trueDestination: B49 -> B50 falseDestination: B49 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582796385657305130
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  522  <|@ instruction stack:96|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  524  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B48" "B57" 
    successors "B59" "B60" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584251046621639566
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  528  <|@ instruction r13|DWORD = SUB (x: r8|DWORD, ~y: r14|DWORD) size: DWORD <|@ <|@
      nr  530  <|@ instruction CMP (x: r10|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  532  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B58 -> B59 falseDestination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584251046621639566
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  548  <|@ instruction CMP (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  550  <|@ instruction BRANCH trueDestinationProbability: 9.999999999998899E-5 condition: > trueDestination: B60 -> B61 falseDestination: B60 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B64" "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584250187239118245
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  574  <|@ instruction r13|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  576  <|@ instruction r10|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  578  <|@ instruction CMP r14|DWORD y: 16777215 size: DWORD <|@ <|@
      nr  580  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B63 -> B64 falseDestination: B63 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B65" "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583390890656048814
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  584  <|@ instruction r11|DWORD = SHL r14|DWORD size: DWORD <|@ <|@
      nr  586  <|@ instruction r11|DWORD = LEA [r11|DWORD + 23] size: DWORD <|@ <|@
      nr  588  <|@ instruction r11|DWORD = AND r11|DWORD y: -8 size: DWORD <|@ <|@
      nr  590  <|@ instruction r11|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  592  <|@ instruction r8|QWORD = ADD (x: r11|QWORD, y: r13|QWORD) size: QWORD <|@ <|@
      nr  594  <|@ instruction CMP (x: r8|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  596  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B64 -> B65 falseDestination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583313553963572565
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  606  <|@ instruction MOV (x: [r15|QWORD + 96], y: r8|QWORD) size: QWORD <|@ <|@
      nr  608  <|@ instruction AMD64PREFETCH ~[r11|QWORD + r13|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  610  <|@ instruction AMD64PREFETCH ~[r11|QWORD + r13|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  612  <|@ instruction AMD64PREFETCH ~[r11|QWORD + r13|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  614  <|@ instruction AMD64PREFETCH ~[r11|QWORD + r13|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  616  <|@ instruction MOV (x: [r13|QWORD + 12], y: r14|DWORD) size: DWORD <|@ <|@
      nr  618  <|@ instruction MOV [r13|QWORD] y: 1 size: QWORD <|@ <|@
      nr  620  <|@ instruction MOV [r13|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr  622  <|@ instruction r13|QWORD[.] = MOVE r13|QWORD moveKind: QWORD <|@ <|@
      nr  624  <|@ instruction rax|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction r13|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  628  <|@ instruction JUMP ~[] destination: B66 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B66" "B68" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584250187239118245
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  652  <|@ instruction CMP (x: r14|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  654  <|@ instruction rsi|DWORD = CMOVE (falseValue: r14|DWORD, ~trueValue: r13|DWORD) condition: > <|@ <|@
      nr  656  <|@ instruction rsi|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr  658  <|@ instruction CMP rsi|QWORD y: 1 size: QWORD <|@ <|@
      nr  660  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B69 -> B70 falseDestination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579746587611747749
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  670  <|@ instruction r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  672  <|@ instruction rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  674  <|@ instruction rcx|QWORD = MOVSXD stack:100|DWORD size: QWORD <|@ <|@
      nr  676  <|@ instruction rcx|QWORD[.] = LEA [r13|QWORD[.] + rcx|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  678  <|@ instruction r10|QWORD = LEA [rsi|QWORD - 16] size: QWORD <|@ <|@
      nr  680  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  682  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B71 -> B72 falseDestination: B71 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577598346154074172
    begin_IR
      LIR
      nr  684  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  686  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  688  <|@ instruction JUMP ~[] destination: B72 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B72" "B75" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579746587611747749
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  714  <|@ instruction r10|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr  716  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  718  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577598346154074172
    begin_IR
      LIR
      nr  724  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  726  <|@ instruction xmm0|V128_WORD = H [rcx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr  728  <|@ instruction J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  730  <|@ instruction r10|QWORD = LEA [r11|QWORD + 8] size: QWORD <|@ <|@
      nr  732  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  734  <|@ instruction JUMP ~[] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B77" 
    successors "B80" "B81" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579746587611747749
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  738  <|@ instruction r10|QWORD = LEA [rsi|QWORD - 4] size: QWORD <|@ <|@
      nr  740  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  742  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B79 -> B80 falseDestination: B79 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577598346154074172
    begin_IR
      LIR
      nr  748  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  750  <|@ instruction xmm0|V64_WORD = H [rcx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr  752  <|@ instruction J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  754  <|@ instruction r10|QWORD = LEA [r11|QWORD + 4] size: QWORD <|@ <|@
      nr  756  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  758  <|@ instruction JUMP ~[] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" "B80" 
    successors "B83" "B84" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579746587611747749
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  762  <|@ instruction r10|QWORD = LEA [rsi|QWORD - 2] size: QWORD <|@ <|@
      nr  764  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  766  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B82 -> B83 falseDestination: B82 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577598346154074172
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  774  <|@ instruction xmm0|V32_WORD = H [rcx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr  776  <|@ instruction J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  778  <|@ instruction r10|QWORD = LEA [r11|QWORD + 2] size: QWORD <|@ <|@
      nr  780  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  782  <|@ instruction JUMP ~[] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B83" 
    successors "B86" "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579746587611747749
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  786  <|@ instruction r10|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr  788  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  790  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B85 -> B86 falseDestination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577598346154074172
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  798  <|@ instruction rcx|DWORD = MOVSX [rcx|QWORD[.] + r11|QWORD * 2] size: DWORD <|@ <|@
      nr  800  <|@ instruction MOV (x: [rdx|QWORD[.] + r11|QWORD * 2], y: rcx|DWORD) size: WORD <|@ <|@
      nr  802  <|@ instruction JUMP ~[] destination: B87 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B70" "B87" "B86" 
    successors "B89" "B107" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584250187239118245
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  806  <|@ instruction rdx|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr  808  <|@ instruction CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  810  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B88 -> B89 falseDestination: B88 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B108" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579746587611747749
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  948  <|@ instruction JUMP ~[] destination: B107 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B107" "B105" "B104" 
    successors "B109" "B110" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584250187239118245
    begin_IR
      LIR
      nr  950  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  952  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  954  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr  956  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  958  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B108 -> B109 falseDestination: B108 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584164257580811302
    begin_IR
      LIR
      nr  988  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  990  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  992  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0 <|@ <|@
      nr  994  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  996  <|@ instruction r10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  998  <|@ instruction JUMP ~[] destination: B110 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" "B109" 
    successors "B112" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584250187239118245
    begin_IR
      LIR
      nr 1000  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1002  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1004  <|@ instruction rcx|QWORD = MOV [r10|QWORD + 168] size: QWORD <|@ <|@
      nr 1006  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD <|@ <|@
      nr 1008  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr 1010  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@120cc8dc encoding: base: 0 shift: 3 <|@ <|@
      nr 1012  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr 1014  <|@ instruction MOV (x: [rsi|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr 1016  <|@ instruction r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1018  <|@ instruction rdi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1020  <|@ instruction JUMP ~[] destination: B111 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B45" "B56" "B111" 
    successors "B113" "B116" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584978709959144030
    begin_IR
      LIR
      nr 1022  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1024  <|@ instruction r11|DWORD = INC stack:92|DWORD size: DWORD <|@ <|@
      nr 1026  <|@ instruction CMP (x: rdi|QWORD[.], y: stack:88|QWORD[.]) size: QWORD <|@ <|@
      nr 1028  <|@ instruction BRANCH trueDestinationProbability: 0.2066504369952622 condition: = trueDestination: B112 -> B113 falseDestination: B112 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B117" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583301761552313477
    begin_IR
      LIR
      nr 1052  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1054  <|@ instruction r9|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1056  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1058  <|@ instruction JUMP ~[] destination: B116 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" "B114" "B115" 
    successors "B118" "B123" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584978709959144031
    begin_IR
      LIR
      nr 1060  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1062  <|@ instruction rbx|DWORD = MOV [r8|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1064  <|@ instruction rcx|DWORD = MOV [r8|QWORD[.] + 8] size: DWORD <|@ <|@
      nr 1066  <|@ instruction rsi|DWORD = SUB (x: r9|DWORD, ~y: rbx|DWORD) size: DWORD <|@ <|@
      nr 1068  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: r14|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@120cc8dc encoding: base: 0 shift: 3 <|@ <|@
      nr 1070  <|@ instruction rbp|DWORD = INC stack:96|DWORD size: DWORD <|@ <|@
      nr 1072  <|@ instruction CMP rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr 1074  <|@ instruction BRANCH trueDestinationProbability: 0.7754412955005789 condition: < trueDestination: B117 -> B118 falseDestination: B117 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors "B119" "B122" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583129201465024141
    begin_IR
      LIR
      nr 1076  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1078  <|@ instruction CMP rcx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr 1080  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B118 -> B119 falseDestination: B118 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B120" "B121" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583129201465024141
    begin_IR
      LIR
      nr 1082  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1084  <|@ instruction CMP (x: rbx|DWORD, y: stack:92|DWORD) size: DWORD <|@ <|@
      nr 1086  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B119 -> B120 falseDestination: B119 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4583129201465024141
    begin_IR
      LIR
      nr 1088  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1090  <|@ instruction rdx|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 1092  <|@ instruction rbx|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr 1094  <|@ instruction MOV (x: [r8|QWORD[.] + rdx|DWORD * 4 + 16], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr 1096  <|@ instruction rsi|QWORD[.] = LEA [r8|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr 1098  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1100  <|@ instruction MOVB (x: [rsi|QWORD[*] + rbx|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 1102  <|@ st <@st|@reference-map: [r8:0, r13:0, r14:0, stack:48, stack:64, stack:96]
live-base-pointers: []
java.util.ArrayList.add(ArrayList.java:464) [bci: 27]
locals: vobject:ArrayList:0{modCount=r11|DWORD,size=r11|DWORD,elementData=r8|QWORD[.]} r14|QWORD[.] 
java.lang.String.split(String.java:2353) [bci: 165]
locals: stack:32|QWORD[.] - int[0|0x0] stack:40|DWORD - stack:96|DWORD int[0|0x0] vobject:ArrayList:0{modCount=r11|DWORD,size=r11|DWORD,elementData=r8|QWORD[.]} - - 
vobject:ArrayList:0{modCount=r11|DWORD,size=r11|DWORD,elementData=r8|QWORD[.]} Ljava/util/ArrayList; r11|DWORD r11|DWORD r8|QWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:27, 165] <|@ <|@
      nr 1104  <|@ instruction stack:88|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1106  <|@ instruction stack:92|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1108  <|@ instruction r10|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1110  <|@ instruction rsi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1112  <|@ instruction r9|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr 1114  <|@ instruction r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1116  <|@ instruction r11|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1118  <|@ instruction JUMP ~[] destination: B120 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B88" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579746587611747749
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  664  <|@ instruction r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  666  <|@ instruction JUMP ~[] destination: B70 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B90" "B91" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579746587611747749
    begin_IR
      LIR
      nr  812  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  814  <|@ instruction rcx|QWORD[.] = LEA [rax|QWORD[.] + rsi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  816  <|@ instruction rdx|QWORD = SUB (x: rdx|QWORD, ~y: rsi|QWORD) size: QWORD <|@ <|@
      nr  818  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 16] size: QWORD <|@ <|@
      nr  820  <|@ instruction TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  822  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B89 -> B90 falseDestination: B89 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B94" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577598346154074172
    begin_IR
      LIR
      nr  824  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  826  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  828  <|@ instruction JUMP ~[] destination: B90 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B90" "B93" 
    successors "B95" "B96" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579746587611747749
    begin_IR
      LIR
      nr  852  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  854  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  856  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  858  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B94 -> B95 falseDestination: B94 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577598346154074172
    begin_IR
      LIR
      nr  864  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  866  <|@ instruction xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr  868  <|@ instruction J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  870  <|@ instruction rsi|QWORD = LEA [r10|QWORD + 8] size: QWORD <|@ <|@
      nr  872  <|@ instruction r10|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  874  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" "B95" 
    successors "B98" "B99" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579746587611747749
    begin_IR
      LIR
      nr  876  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  878  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 4] size: QWORD <|@ <|@
      nr  880  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  882  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B97 -> B98 falseDestination: B97 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B100" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577598346154074172
    begin_IR
      LIR
      nr  888  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  890  <|@ instruction xmm0|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  892  <|@ instruction J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  894  <|@ instruction rsi|QWORD = LEA [r10|QWORD + 4] size: QWORD <|@ <|@
      nr  896  <|@ instruction r10|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  898  <|@ instruction JUMP ~[] destination: B99 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" "B98" 
    successors "B101" "B102" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579746587611747749
    begin_IR
      LIR
      nr  900  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  902  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 2] size: QWORD <|@ <|@
      nr  904  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  906  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B100 -> B101 falseDestination: B100 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B103" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577598346154074172
    begin_IR
      LIR
      nr  912  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  914  <|@ instruction xmm0|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr  916  <|@ instruction J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  918  <|@ instruction rsi|QWORD = LEA [r10|QWORD + 2] size: QWORD <|@ <|@
      nr  920  <|@ instruction r10|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  922  <|@ instruction JUMP ~[] destination: B102 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B102" "B101" 
    successors "B104" "B105" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579746587611747749
    begin_IR
      LIR
      nr  924  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  926  <|@ instruction rdx|QWORD = DEC rdx|QWORD size: QWORD <|@ <|@
      nr  928  <|@ instruction CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  930  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B103 -> B104 falseDestination: B103 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B108" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577598346154074172
    begin_IR
      LIR
      nr  936  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  938  <|@ instruction MOV (x: [rcx|QWORD[.] + r10|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr  940  <|@ instruction JUMP ~[] destination: B105 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors "B124" "B174" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4575305213314078916
    begin_IR
      LIR
      nr 1164  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1166  <|@ instruction stack:112|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1168  <|@ instruction rdx|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 1170  <|@ instruction rsi|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr 1172  <|@ instruction r14|DWORD = SHR rbx|DWORD size: DWORD <|@ <|@
      nr 1174  <|@ instruction r14|DWORD = ADD (x: r14|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr 1176  <|@ instruction r10|DWORD = SUB (x: r14|DWORD, ~y: r9|DWORD) size: DWORD <|@ <|@
      nr 1178  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 1180  <|@ instruction r14|DWORD = CMOVE (falseValue: r14|DWORD, ~trueValue: r9|DWORD) condition: < <|@ <|@
      nr 1182  <|@ instruction r10|DWORD = LEA [r14|DWORD - 2147483639] size: DWORD <|@ <|@
      nr 1184  <|@ instruction CMP r10|DWORD y: 1 size: DWORD <|@ <|@
      nr 1186  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B123 -> B124 falseDestination: B123 -> B174 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B125" "B173" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4575305213314078916
    begin_IR
      LIR
      nr 1188  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1190  <|@ instruction CMP (x: r14|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1192  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B124 -> B125 falseDestination: B124 -> B173 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors "B126" "B127" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4575305213314078916
    begin_IR
      LIR
      nr 1194  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1196  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr 1198  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B125 -> B126 falseDestination: B125 -> B127 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B128" "B129" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4575305213314078916
    begin_IR
      LIR
      nr 1216  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1218  <|@ instruction stack:116|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1220  <|@ instruction r10|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr 1222  <|@ instruction rdi|DWORD = SHL r14|DWORD y: 2 size: DWORD <|@ <|@
      nr 1224  <|@ instruction rdi|DWORD = LEA [rdi|DWORD + 23] size: DWORD <|@ <|@
      nr 1226  <|@ instruction rdi|DWORD = AND rdi|DWORD y: -8 size: DWORD <|@ <|@
      nr 1228  <|@ instruction rdi|QWORD = MOVSXD rdi|DWORD size: QWORD <|@ <|@
      nr 1230  <|@ instruction r13|QWORD = ADD (x: rdi|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1232  <|@ instruction CMP (x: r13|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr 1234  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B127 -> B128 falseDestination: B127 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B130" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4575218661402474956
    begin_IR
      LIR
      nr 1276  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1278  <|@ instruction MOV (x: [r15|QWORD + 96], y: r13|QWORD) size: QWORD <|@ <|@
      nr 1280  <|@ instruction AMD64PREFETCH ~[rdi|QWORD + r10|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr 1282  <|@ instruction AMD64PREFETCH ~[rdi|QWORD + r10|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr 1284  <|@ instruction AMD64PREFETCH ~[rdi|QWORD + r10|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr 1286  <|@ instruction AMD64PREFETCH ~[rdi|QWORD + r10|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr 1288  <|@ instruction MOV (x: [r10|QWORD + 12], y: r14|DWORD) size: DWORD <|@ <|@
      nr 1290  <|@ instruction MOV [r10|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1292  <|@ instruction MOV (x: [r10|QWORD + 8], y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1294  <|@ instruction r10|QWORD[.] = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 1296  <|@ instruction rcx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1298  <|@ instruction JUMP ~[] destination: B129 -> B130 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B129" "B128" 
    successors "B131" "B132" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4575305213314078916
    begin_IR
      LIR
      nr 1300  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1302  <|@ instruction CMP (x: r14|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr 1304  <|@ instruction r10|DWORD = CMOVE (falseValue: r14|DWORD, ~trueValue: rbx|DWORD) condition: > <|@ <|@
      nr 1306  <|@ instruction r10|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr 1308  <|@ instruction CMP r10|QWORD y: 1 size: QWORD <|@ <|@
      nr 1310  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B130 -> B131 falseDestination: B130 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B130" 
    successors "B133" "B134" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570801613686708420
    begin_IR
      LIR
      nr 1316  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1318  <|@ instruction rbx|QWORD[.] = LEA [rcx|QWORD[.] + 16] size: QWORD <|@ <|@
      nr 1320  <|@ instruction rdi|QWORD[.] = LEA [r8|QWORD[.] + 16] size: QWORD <|@ <|@
      nr 1322  <|@ instruction r13|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr 1324  <|@ instruction TEST (x: r13|QWORD, y: r13|QWORD) size: QWORD <|@ <|@
      nr 1326  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B132 -> B133 falseDestination: B132 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B137" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4568637815896609427
    begin_IR
      LIR
      nr 1328  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1330  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1332  <|@ instruction JUMP ~[] destination: B133 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B133" "B136" 
    successors "B138" "B139" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570801613686708420
    begin_IR
      LIR
      nr 1356  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1358  <|@ instruction r13|QWORD = LEA [r10|QWORD - 4] size: QWORD <|@ <|@
      nr 1360  <|@ instruction CMP (x: r11|QWORD, y: r13|QWORD) size: QWORD <|@ <|@
      nr 1362  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B137 -> B138 falseDestination: B137 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B137" 
    successors "B140" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4568637815896609427
    begin_IR
      LIR
      nr 1368  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1370  <|@ instruction xmm0|V128_DWORD[....] = H [rdi|QWORD[.] + r11|QWORD * 4] nZ: XMM oh: VMOVDQU <|@ <|@
      nr 1372  <|@ instruction J (address: [rbx|QWORD[.] + r11|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr 1374  <|@ instruction r11|QWORD = LEA [r11|QWORD + 4] size: QWORD <|@ <|@
      nr 1376  <|@ instruction JUMP ~[] destination: B139 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B139" "B138" 
    successors "B141" "B142" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570801613686708420
    begin_IR
      LIR
      nr 1378  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1380  <|@ instruction r13|QWORD = LEA [r10|QWORD - 2] size: QWORD <|@ <|@
      nr 1382  <|@ instruction CMP (x: r11|QWORD, y: r13|QWORD) size: QWORD <|@ <|@
      nr 1384  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B140 -> B141 falseDestination: B140 -> B142 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B143" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4568637815896609427
    begin_IR
      LIR
      nr 1390  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1392  <|@ instruction xmm0|V64_DWORD[..] = H [rdi|QWORD[.] + r11|QWORD * 4] nZ: XMM oh: VMOVQ <|@ <|@
      nr 1394  <|@ instruction J (address: [rbx|QWORD[.] + r11|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr 1396  <|@ instruction r11|QWORD = LEA [r11|QWORD + 2] size: QWORD <|@ <|@
      nr 1398  <|@ instruction JUMP ~[] destination: B142 -> B143 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B142" "B141" 
    successors "B144" "B145" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570801613686708420
    begin_IR
      LIR
      nr 1400  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1402  <|@ instruction r13|QWORD = DEC r10|QWORD size: QWORD <|@ <|@
      nr 1404  <|@ instruction CMP (x: r11|QWORD, y: r13|QWORD) size: QWORD <|@ <|@
      nr 1406  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B143 -> B144 falseDestination: B143 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B143" 
    successors "B146" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4568637815896609427
    begin_IR
      LIR
      nr 1412  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1414  <|@ instruction rdi|DWORD[.] = MOV [rdi|QWORD[.] + r11|QWORD * 4] size: DWORD <|@ <|@
      nr 1416  <|@ instruction MOV (x: [rbx|QWORD[.] + r11|QWORD * 4], y: rdi|DWORD[.]) size: DWORD <|@ <|@
      nr 1418  <|@ instruction JUMP ~[] destination: B145 -> B146 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B131" "B145" "B144" 
    successors "B147" "B162" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4575305213314078916
    begin_IR
      LIR
      nr 1420  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1422  <|@ instruction r11|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr 1424  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1426  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B146 -> B147 falseDestination: B146 -> B162 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B162"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B163" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570801613686708420
    begin_IR
      LIR
      nr 1544  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1546  <|@ instruction xmm2|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null> <|@ <|@
      nr 1548  <|@ instruction xmm1|V128_DWORD[....] = L oc: SIMD<null,null,null,null> <|@ <|@
      nr 1550  <|@ instruction xmm0|V64_DWORD[..] = L oc: SIMD<null,null> <|@ <|@
      nr 1552  <|@ instruction JUMP ~[] destination: B162 -> B163 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B163"
    from_bci -1
    to_bci -1
    predecessors "B162" "B160" "B159" 
    successors "B164" "B165" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4575305213314078916
    begin_IR
      LIR
      nr 1554  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1556  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr 1558  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B163 -> B164 falseDestination: B163 -> B165 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B165"
    from_bci -1
    to_bci -1
    predecessors "B163" 
    successors "B166" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570801613686708420
    begin_IR
      LIR
      nr 1564  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1566  <|@ instruction r14|DWORD = DEC r14|DWORD size: DWORD <|@ <|@
      nr 1568  <|@ instruction r14|DWORD = SHL r14|DWORD y: 2 size: DWORD <|@ <|@
      nr 1570  <|@ instruction r10|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr 1572  <|@ instruction r11|QWORD[.] = LEA [rcx|QWORD[.] + 16] size: QWORD <|@ <|@
      nr 1574  <|@ instruction r11|QWORD[.] = ADD (x: r11|QWORD[.], y: r10|QWORD) size: QWORD <|@ <|@
      nr 1576  <|@ instruction r11|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1578  <|@ instruction r10|QWORD[.] = LEA [rcx|QWORD[.] + 16] size: QWORD <|@ <|@
      nr 1580  <|@ instruction r10|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1582  <|@ instruction r11|QWORD[*] = SUB (x: r11|QWORD[*], ~y: r10|QWORD[*]) size: QWORD <|@ <|@
      nr 1584  <|@ instruction r11|QWORD[*] = INC r11|QWORD[*] size: QWORD <|@ <|@
      nr 1586  <|@ instruction JUMP ~[] destination: B165 -> B166 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B171"
    from_bci -1
    to_bci -1
    predecessors "B166" 
    successors "B166" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 2
    probability 4570801613686708420
    begin_IR
      LIR
      nr 1660  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 1662  <|@ instruction r11|QWORD[*] = DEC r11|QWORD[*] size: QWORD <|@ <|@
      nr 1664  <|@ instruction rbx|QWORD[*] = ADD (x: r10|QWORD[*], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1666  <|@ instruction rbx|QWORD[*] = ADD (x: rbx|QWORD[*], y: r11|QWORD[*]) size: QWORD <|@ <|@
      nr 1668  <|@ instruction MOVB (x: [rbx|QWORD[*]], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 1670  <|@ instruction JUMP ~[] destination: B171 -> B166 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B166"
    from_bci -1
    to_bci -1
    predecessors "B165" "B171" 
    successors "B167" "B171" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 2
    probability 4575305213314078916
    begin_IR
      LIR
      nr 1588  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1590  <|@ instruction CMP r11|QWORD[*] y: 1 size: QWORD <|@ <|@
      nr 1592  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B166 -> B167 falseDestination: B166 -> B171 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B114" "B115" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4574614972964921566
    begin_IR
      LIR
      nr 1030  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1032  <|@ instruction CMP r11|DWORD y: 11 size: DWORD <|@ <|@
      nr 1034  <|@ instruction BRANCH trueDestinationProbability: 0.7308950256495741 condition: < trueDestination: B113 -> B114 falseDestination: B113 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B117" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572471565081160793
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1038  <|@ instruction r9|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr 1040  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1042  <|@ instruction JUMP ~[] destination: B114 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573717372198682453
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  382  <|@ instruction CMP (x: r8|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  384  <|@ instruction BRANCH trueDestinationProbability: 0.09242718272553296 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573064156944687980
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  402  <|@ instruction CMP r14|DWORD y: 1 size: DWORD <|@ <|@
      nr  404  <|@ instruction BRANCH trueDestinationProbability: 0.09284041465770032 condition: < trueDestination: B46 -> B47 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572468666011020690
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  420  <|@ instruction stack:96|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  422  <|@ instruction JUMP ~[] destination: B48 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B130" 
    successors "B146" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570801613686708420
    begin_IR
      LIR
      nr 1312  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1314  <|@ instruction JUMP ~[] destination: B131 -> B146 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B148" "B149" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570801613686708420
    begin_IR
      LIR
      nr 1428  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1430  <|@ instruction rbx|QWORD[.] = LEA [rcx|QWORD[.] + r10|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr 1432  <|@ instruction r11|QWORD = SUB (x: r11|QWORD, ~y: r10|QWORD) size: QWORD <|@ <|@
      nr 1434  <|@ instruction r10|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr 1436  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1438  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B147 -> B148 falseDestination: B147 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B147" 
    successors "B152" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4568637815896609427
    begin_IR
      LIR
      nr 1440  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1442  <|@ instruction rdi|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1444  <|@ instruction xmm2|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null> <|@ <|@
      nr 1446  <|@ instruction JUMP ~[] destination: B148 -> B152 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B148" "B151" 
    successors "B153" "B154" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570801613686708420
    begin_IR
      LIR
      nr 1470  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1472  <|@ instruction r10|QWORD = LEA [r11|QWORD - 4] size: QWORD <|@ <|@
      nr 1474  <|@ instruction CMP (x: rdi|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1476  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B152 -> B153 falseDestination: B152 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B154"
    from_bci -1
    to_bci -1
    predecessors "B152" 
    successors "B155" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4568637815896609427
    begin_IR
      LIR
      nr 1484  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1486  <|@ instruction xmm1|V128_DWORD[....] = L oc: SIMD<null,null,null,null> <|@ <|@
      nr 1488  <|@ instruction J (address: [rbx|QWORD[.] + rdi|QWORD * 4], input: xmm1|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr 1490  <|@ instruction r10|QWORD = LEA [rdi|QWORD + 4] size: QWORD <|@ <|@
      nr 1492  <|@ instruction rdi|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 1494  <|@ instruction JUMP ~[] destination: B154 -> B155 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B155"
    from_bci -1
    to_bci -1
    predecessors "B154" "B153" 
    successors "B156" "B157" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570801613686708420
    begin_IR
      LIR
      nr 1496  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1498  <|@ instruction r10|QWORD = LEA [r11|QWORD - 2] size: QWORD <|@ <|@
      nr 1500  <|@ instruction CMP (x: rdi|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1502  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B155 -> B156 falseDestination: B155 -> B157 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B157"
    from_bci -1
    to_bci -1
    predecessors "B155" 
    successors "B158" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4568637815896609427
    begin_IR
      LIR
      nr 1510  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1512  <|@ instruction xmm0|V64_DWORD[..] = L oc: SIMD<null,null> <|@ <|@
      nr 1514  <|@ instruction J (address: [rbx|QWORD[.] + rdi|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr 1516  <|@ instruction r10|QWORD = LEA [rdi|QWORD + 2] size: QWORD <|@ <|@
      nr 1518  <|@ instruction rdi|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 1520  <|@ instruction JUMP ~[] destination: B157 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B158"
    from_bci -1
    to_bci -1
    predecessors "B157" "B156" 
    successors "B159" "B160" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570801613686708420
    begin_IR
      LIR
      nr 1522  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1524  <|@ instruction r11|QWORD = DEC r11|QWORD size: QWORD <|@ <|@
      nr 1526  <|@ instruction CMP (x: rdi|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr 1528  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B158 -> B159 falseDestination: B158 -> B160 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B160"
    from_bci -1
    to_bci -1
    predecessors "B158" 
    successors "B163" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4568637815896609427
    begin_IR
      LIR
      nr 1534  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1536  <|@ instruction MOV (x: [rbx|QWORD[.] + rdi|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr 1538  <|@ instruction JUMP ~[] destination: B160 -> B163 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B164"
    from_bci -1
    to_bci -1
    predecessors "B163" 
    successors "B168" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570801613686708420
    begin_IR
      LIR
      nr 1560  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1562  <|@ instruction JUMP ~[] destination: B164 -> B168 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B168"
    from_bci -1
    to_bci -1
    predecessors "B164" "B167" 
    successors "B169" "B170" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4575305213314078916
    begin_IR
      LIR
      nr 1598  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1600  <|@ instruction CMP [rcx|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr 1602  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B168 -> B169 falseDestination: B168 -> B170 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B169"
    from_bci -1
    to_bci -1
    predecessors "B168" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4575305213314078916
    begin_IR
      LIR
      nr 1604  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1606  <|@ instruction r11|DWORD = MOVE stack:116|DWORD moveKind: DWORD <|@ <|@
      nr 1608  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|DWORD * 4 + 16], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr 1610  <|@ instruction rdx|QWORD[.] = LEA [rcx|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr 1612  <|@ instruction rdx|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1614  <|@ instruction MOVB (x: [rdx|QWORD[*] + rsi|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 1616  <|@ st <@st|@reference-map: [rcx:0, stack:16, stack:48, stack:64, stack:96]
live-base-pointers: []
java.util.ArrayList.add(ArrayList.java:464) [bci: 27]
locals: vobject:ArrayList:0{modCount=r11|DWORD,size=r11|DWORD,elementData=rcx|QWORD[.]} stack:112|QWORD[.] 
java.lang.String.split(String.java:2353) [bci: 165]
locals: stack:32|QWORD[.] - int[0|0x0] stack:40|DWORD - stack:96|DWORD int[0|0x0] vobject:ArrayList:0{modCount=r11|DWORD,size=r11|DWORD,elementData=rcx|QWORD[.]} - - 
vobject:ArrayList:0{modCount=r11|DWORD,size=r11|DWORD,elementData=rcx|QWORD[.]} Ljava/util/ArrayList; r11|DWORD r11|DWORD rcx|QWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:27, 165] <|@ <|@
      nr 1618  <|@ instruction stack:88|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1620  <|@ instruction stack:92|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1622  <|@ instruction r10|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1624  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1626  <|@ instruction r9|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr 1628  <|@ instruction r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1630  <|@ instruction r11|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1632  <|@ instruction JUMP ~[] destination: B169 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B167"
    from_bci -1
    to_bci -1
    predecessors "B166" 
    successors "B168" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570801613686708420
    begin_IR
      LIR
      nr 1594  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1596  <|@ instruction JUMP ~[] destination: B167 -> B168 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570739388357006757
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  692  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  694  <|@ instruction JUMP ~[] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B176"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B74" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4577598346154074172
    begin_IR
      LIR
      nr 1716  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 1718  <|@ instruction JUMP ~[] destination: B176 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" "B176" 
    successors "B75" "B176" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4579746587611747749
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  698  <|@ instruction xmm0|V256_WORD = H [rcx|QWORD[.] + r11|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr  700  <|@ instruction J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  702  <|@ instruction r11|QWORD = LEA [r11|QWORD + 16] size: QWORD <|@ <|@
      nr  704  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  706  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B74 -> B75 falseDestination: B74 -> B176 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B92" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570739388357006757
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  832  <|@ instruction xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr  834  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  836  <|@ instruction JUMP ~[] destination: B91 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B92" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 2
    probability 4577598346154074172
    begin_IR
      LIR
      nr  942  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  944  <|@ instruction JUMP ~[] destination: B106 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" "B106" 
    successors "B93" "B106" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 2
    probability 4579746587611747749
    begin_IR
      LIR
      nr  838  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  840  <|@ instruction J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  842  <|@ instruction r10|QWORD = LEA [r10|QWORD + 16] size: QWORD <|@ <|@
      nr  844  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  846  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B92 -> B93 falseDestination: B92 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570739388357006757
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  710  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B94" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570739388357006757
    begin_IR
      LIR
      nr  848  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  850  <|@ instruction JUMP ~[] destination: B93 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B108" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570739388357006757
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  934  <|@ instruction JUMP ~[] destination: B104 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570739388357006757
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  862  <|@ instruction JUMP ~[] destination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B100" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570739388357006757
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  886  <|@ instruction JUMP ~[] destination: B98 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B103" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570739388357006757
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  910  <|@ instruction JUMP ~[] destination: B101 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570739388357006757
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  722  <|@ instruction JUMP ~[] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570739388357006757
    begin_IR
      LIR
      nr  744  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  746  <|@ instruction JUMP ~[] destination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570739388357006757
    begin_IR
      LIR
      nr  768  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  770  <|@ instruction JUMP ~[] destination: B83 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570739388357006757
    begin_IR
      LIR
      nr  792  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  794  <|@ instruction JUMP ~[] destination: B86 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B68" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569020795190867894
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  632  <|@ instruction r13|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  634  <|@ instruction JUMP ~[] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B65" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569639488730677885
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  638  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr  640  <|@ instruction rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  642  <|@ instruction rdx|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  644  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  646  <|@ st <@st|@reference-map: [stack:40, stack:48, stack:64, stack:96]
live-base-pointers: []
java.lang.String.substring(String.java:1969) [bci: 65]
locals: stack:32|QWORD[.] stack:100|DWORD - r14|DWORD 
java.lang.String.split(String.java:2353) [bci: 162]
stack: vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]} 
locals: stack:32|QWORD[.] - int[0|0x0] stack:40|DWORD - stack:96|DWORD int[0|0x0] vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]} - - 
vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]} Ljava/util/ArrayList; stack:92|DWORD stack:92|DWORD stack:88|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:65, 162] <|@ <|@
      nr  648  <|@ instruction JUMP ~[] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4567991506279028027
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  432  <|@ instruction stack:96|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  434  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  436  <|@ instruction r11|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  438  <|@ instruction r10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  440  <|@ instruction JUMP ~[] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569182488146362606
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  444  <|@ instruction CMP (x: r11|DWORD, y: stack:44|DWORD) size: DWORD <|@ <|@
      nr  446  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B51 -> B52 falseDestination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569182488146362606
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  462  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  464  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr  466  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  468  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B53 -> B54 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569112127490162104
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  492  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  494  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0 <|@ <|@
      nr  496  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  498  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" "B54" 
    successors "B112" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569182488146362606
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  502  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  504  <|@ instruction rcx|QWORD = MOV [r10|QWORD + 168] size: QWORD <|@ <|@
      nr  506  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  508  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  510  <|@ instruction MOV [rsi|QWORD[*] + 12] y: -559030611 size: DWORD c: NarrowOop[char[0]{}] <|@ <|@
      nr  512  <|@ instruction MOV (x: [rsi|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  514  <|@ instruction r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  516  <|@ instruction rdi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  518  <|@ instruction JUMP ~[] destination: B56 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B117" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566216454433985046
    begin_IR
      LIR
      nr 1044  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1046  <|@ instruction r9|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1048  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1050  <|@ instruction JUMP ~[] destination: B115 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B156"
    from_bci -1
    to_bci -1
    predecessors "B155" 
    successors "B158" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561794414431967428
    begin_IR
      LIR
      nr 1504  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1506  <|@ instruction xmm0|V64_DWORD[..] = L oc: SIMD<null,null> <|@ <|@
      nr 1508  <|@ instruction JUMP ~[] destination: B156 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B153"
    from_bci -1
    to_bci -1
    predecessors "B152" 
    successors "B155" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561794414431967428
    begin_IR
      LIR
      nr 1478  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1480  <|@ instruction xmm1|V128_DWORD[....] = L oc: SIMD<null,null,null,null> <|@ <|@
      nr 1482  <|@ instruction JUMP ~[] destination: B153 -> B155 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B159"
    from_bci -1
    to_bci -1
    predecessors "B158" 
    successors "B163" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561794414431967428
    begin_IR
      LIR
      nr 1530  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1532  <|@ instruction JUMP ~[] destination: B159 -> B163 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B143" 
    successors "B146" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561794414431967428
    begin_IR
      LIR
      nr 1408  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1410  <|@ instruction JUMP ~[] destination: B144 -> B146 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B147" 
    successors "B150" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561794414431967428
    begin_IR
      LIR
      nr 1448  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1450  <|@ instruction rdi|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1452  <|@ instruction xmm2|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null> <|@ <|@
      nr 1454  <|@ instruction JUMP ~[] destination: B149 -> B150 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B161"
    from_bci -1
    to_bci -1
    predecessors "B150" 
    successors "B150" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 2
    probability 4568637815896609427
    begin_IR
      LIR
      nr 1540  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 1542  <|@ instruction JUMP ~[] destination: B161 -> B150 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B149" "B161" 
    successors "B151" "B161" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 2
    probability 4570801613686708420
    begin_IR
      LIR
      nr 1456  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1458  <|@ instruction J (address: [rbx|QWORD[.] + rdi|QWORD * 4], input: xmm2|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr 1460  <|@ instruction rdi|QWORD = LEA [rdi|QWORD + 8] size: QWORD <|@ <|@
      nr 1462  <|@ instruction CMP (x: rdi|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1464  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B150 -> B151 falseDestination: B150 -> B161 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B135" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561794414431967428
    begin_IR
      LIR
      nr 1334  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1336  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1338  <|@ instruction JUMP ~[] destination: B134 -> B135 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B172"
    from_bci -1
    to_bci -1
    predecessors "B135" 
    successors "B135" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 2
    probability 4568637815896609427
    begin_IR
      LIR
      nr 1672  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 1674  <|@ instruction JUMP ~[] destination: B172 -> B135 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" "B172" 
    successors "B136" "B172" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 2
    probability 4570801613686708420
    begin_IR
      LIR
      nr 1340  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1342  <|@ instruction xmm0|V256_DWORD[........] = H [rdi|QWORD[.] + r11|QWORD * 4] nZ: YMM oh: VMOVDQU <|@ <|@
      nr 1344  <|@ instruction J (address: [rbx|QWORD[.] + r11|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr 1346  <|@ instruction r11|QWORD = LEA [r11|QWORD + 8] size: QWORD <|@ <|@
      nr 1348  <|@ instruction CMP (x: r11|QWORD, y: r13|QWORD) size: QWORD <|@ <|@
      nr 1350  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B135 -> B136 falseDestination: B135 -> B172 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B137" 
    successors "B140" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561794414431967428
    begin_IR
      LIR
      nr 1364  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1366  <|@ instruction JUMP ~[] destination: B138 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B143" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561794414431967428
    begin_IR
      LIR
      nr 1386  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1388  <|@ instruction JUMP ~[] destination: B141 -> B143 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B150" 
    successors "B152" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561794414431967428
    begin_IR
      LIR
      nr 1466  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1468  <|@ instruction JUMP ~[] destination: B151 -> B152 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B135" 
    successors "B137" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561794414431967428
    begin_IR
      LIR
      nr 1352  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1354  <|@ instruction JUMP ~[] destination: B136 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B112" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4558364945303527242
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  388  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  390  <|@ instruction stack:96|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  392  <|@ instruction rdi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  394  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  396  <|@ instruction r10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  398  <|@ instruction JUMP ~[] destination: B45 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B51" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4557903150740909772
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  408  <|@ instruction stack:96|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  410  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  412  <|@ instruction r11|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction r10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  416  <|@ instruction JUMP ~[] destination: B47 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4554135121775845323
    begin_IR
      LIR
      nr  960  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  962  <|@ instruction stack:112|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  964  <|@ instruction stack:104|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  966  <|@ instruction r10|DWORD = MOVE stack:100|DWORD moveKind: DWORD <|@ <|@
      nr  968  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  970  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  972  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  974  <|@ instruction r14|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  976  <|@ st <@st|@reference-map: [stack:16, stack:40, stack:48, stack:64, stack:96]
live-base-pointers: []
java.lang.String.substring(String.java:1969) [bci: 65]
locals: stack:32|QWORD[.] r14|DWORD - stack:104|DWORD 
java.lang.String.split(String.java:2353) [bci: 162]
stack: vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]} 
locals: stack:32|QWORD[.] - int[0|0x0] stack:40|DWORD - stack:96|DWORD int[0|0x0] vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]} - - 
vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]} Ljava/util/ArrayList; stack:92|DWORD stack:92|DWORD stack:88|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:65, 162] <|@ <|@
      nr  978  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  980  <|@ instruction rax|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  982  <|@ instruction r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  984  <|@ instruction r10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  986  <|@ instruction JUMP ~[] destination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B68" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4553585171962680886
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  600  <|@ instruction r13|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  602  <|@ instruction JUMP ~[] destination: B65 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B130" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4545167746732113395
    begin_IR
      LIR
      nr 1236  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1238  <|@ instruction r13|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1240  <|@ instruction stack:120|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1242  <|@ instruction stack:124|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1244  <|@ instruction stack:104|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1246  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: -) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@120cc8dc encoding: base: 0 shift: 3 <|@ <|@
      nr 1248  <|@ instruction rsi|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr 1250  <|@ instruction rdx|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr 1252  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1254  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:40, stack:48, stack:64, stack:96]
live-base-pointers: []
java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
stack: vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]} stack:104|DWORD 
locals: - - 
java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
locals: vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]} stack:112|QWORD[.] 
java.lang.String.split(String.java:2353) [bci: 165]
locals: stack:32|QWORD[.] - int[0|0x0] stack:40|DWORD - stack:96|DWORD int[0|0x0] vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]} - - 
vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]} Ljava/util/ArrayList; stack:92|DWORD stack:92|DWORD stack:88|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:9, 7, 165] <|@ <|@
      nr 1256  <|@ instruction rcx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1258  <|@ instruction rbp|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1260  <|@ instruction rax|DWORD[.] = MOVE stack:120|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1262  <|@ instruction rbx|DWORD = MOVE stack:124|DWORD moveKind: DWORD <|@ <|@
      nr 1264  <|@ instruction r9|DWORD = MOVE stack:104|DWORD moveKind: DWORD <|@ <|@
      nr 1266  <|@ instruction r11|DWORD = MOVE stack:116|DWORD moveKind: DWORD <|@ <|@
      nr 1268  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1270  <|@ instruction rdx|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 1272  <|@ instruction rsi|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr 1274  <|@ instruction JUMP ~[] destination: B128 -> B130 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4539627389128383186
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  472  <|@ instruction r14|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  474  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  476  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  478  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  480  <|@ st <@st|@reference-map: [stack:40, stack:48, stack:64, stack:96]
live-base-pointers: []
java.lang.String.substring(String.java:1969) [bci: 65]
locals: stack:32|QWORD[.] r14|DWORD - int[0|0x0] 
java.lang.String.split(String.java:2353) [bci: 162]
stack: vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]} 
locals: stack:32|QWORD[.] - int[0|0x0] stack:40|DWORD - stack:96|DWORD int[0|0x0] vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]} - - 
vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]} Ljava/util/ArrayList; stack:92|DWORD stack:92|DWORD stack:88|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:65, 162] <|@ <|@
      nr  482  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  484  <|@ instruction r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction r10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  488  <|@ instruction JUMP ~[] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B178"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B185" 
    xhandlers
    flags 
    probability 4612561903300672132
    begin_IR
      LIR
      nr 1726  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1728  <|@ instruction r13|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1730  <|@ instruction r14|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1732  <|@ instruction JUMP ~[] destination: B178 -> B185 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B185"
    from_bci -1
    to_bci -1
    predecessors "B37" "B178" "B184" 
    successors "B186" 
    xhandlers
    flags 
    probability 4614248496590463470
    begin_IR
      LIR
      nr 1780  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1782  <|@ instruction JUMP ~[] destination: B185 -> B186 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B186"
    from_bci -1
    to_bci -1
    predecessors "B185" 
    successors "B187" "B191" 
    xhandlers
    flags 
    probability 4614248496590463470
    begin_IR
      LIR
      nr 1784  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1786  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr 1788  <|@ instruction BRANCH trueDestinationProbability: 0.013959872667270279 condition: = trueDestination: B186 -> B187 falseDestination: B186 -> B191 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B191"
    from_bci -1
    to_bci -1
    predecessors "B186" 
    successors "B192" "B193" 
    xhandlers
    flags 
    probability 4614149855044251816
    begin_IR
      LIR
      nr 1846  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1848  <|@ instruction TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr 1850  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B191 -> B192 falseDestination: B191 -> B193 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B193"
    from_bci -1
    to_bci -1
    predecessors "B191" 
    successors "B194" "B201" 
    xhandlers
    flags 
    probability 4614149855044251816
    begin_IR
      LIR
      nr 1860  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1862  <|@ instruction rdx|DWORD = INC stack:92|DWORD size: DWORD <|@ <|@
      nr 1864  <|@ instruction stack:100|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1866  <|@ instruction CMP r13|DWORD y: 1 size: DWORD <|@ <|@
      nr 1868  <|@ instruction BRANCH trueDestinationProbability: 0.09284041465770032 condition: < trueDestination: B193 -> B194 falseDestination: B193 -> B201 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B201"
    from_bci -1
    to_bci -1
    predecessors "B193" 
    successors "B202" "B204" 
    xhandlers
    flags 
    probability 4613502995374236003
    begin_IR
      LIR
      nr 1936  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1938  <|@ instruction CMP (x: r14|DWORD, y: stack:44|DWORD) size: DWORD <|@ <|@
      nr 1940  <|@ instruction BRANCH trueDestinationProbability: 9.999999999998899E-5 condition: > trueDestination: B201 -> B202 falseDestination: B201 -> B204 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B204"
    from_bci -1
    to_bci -1
    predecessors "B201" 
    successors "B205" "B208" 
    xhandlers
    flags 
    probability 4613502363316578581
    begin_IR
      LIR
      nr 1958  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1960  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr 1962  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr 1964  <|@ instruction CMP r13|DWORD y: 16777215 size: DWORD <|@ <|@
      nr 1966  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B204 -> B205 falseDestination: B204 -> B208 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B205"
    from_bci -1
    to_bci -1
    predecessors "B204" 
    successors "B206" "B207" 
    xhandlers
    flags 
    probability 4612870368864922464
    begin_IR
      LIR
      nr 1968  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1970  <|@ instruction r10|DWORD = SHL r13|DWORD size: DWORD <|@ <|@
      nr 1972  <|@ instruction r10|DWORD = LEA [r10|DWORD + 23] size: DWORD <|@ <|@
      nr 1974  <|@ instruction r10|DWORD = AND r10|DWORD y: -8 size: DWORD <|@ <|@
      nr 1976  <|@ instruction r10|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr 1978  <|@ instruction r11|QWORD = ADD (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1980  <|@ instruction CMP (x: r11|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr 1982  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B205 -> B206 falseDestination: B205 -> B207 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B207"
    from_bci -1
    to_bci -1
    predecessors "B205" 
    successors "B210" 
    xhandlers
    flags 
    probability 4612813489364273413
    begin_IR
      LIR
      nr 1988  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1990  <|@ instruction MOV (x: [r15|QWORD + 96], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1992  <|@ instruction AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr 1994  <|@ instruction AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr 1996  <|@ instruction AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr 1998  <|@ instruction AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr 2000  <|@ instruction MOV (x: [rsi|QWORD + 12], y: r13|DWORD) size: DWORD <|@ <|@
      nr 2002  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr 2004  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr 2006  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 2008  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2010  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2012  <|@ instruction JUMP ~[] destination: B207 -> B210 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B210"
    from_bci -1
    to_bci -1
    predecessors "B207" "B209" 
    successors "B211" "B212" 
    xhandlers
    flags 
    probability 4613502363316578581
    begin_IR
      LIR
      nr 2032  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2034  <|@ instruction rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr 2036  <|@ instruction rcx|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr 2038  <|@ instruction rsi|QWORD[.] = LEA [rsi|QWORD[.] + rcx|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr 2040  <|@ instruction rcx|QWORD = MOVSXD r13|DWORD size: QWORD <|@ <|@
      nr 2042  <|@ instruction r10|QWORD = LEA [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr 2044  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 2046  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B210 -> B211 falseDestination: B210 -> B212 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B211"
    from_bci -1
    to_bci -1
    predecessors "B210" 
    successors "B215" 
    xhandlers
    flags 
    probability 4611922377187438288
    begin_IR
      LIR
      nr 2048  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2050  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 2052  <|@ instruction JUMP ~[] destination: B211 -> B215 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B215"
    from_bci -1
    to_bci -1
    predecessors "B211" "B214" 
    successors "B216" "B217" 
    xhandlers
    flags 
    probability 4613502363316578581
    begin_IR
      LIR
      nr 2076  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2078  <|@ instruction r10|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr 2080  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 2082  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B215 -> B216 falseDestination: B215 -> B217 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B217"
    from_bci -1
    to_bci -1
    predecessors "B215" 
    successors "B218" 
    xhandlers
    flags 
    probability 4611922377187438288
    begin_IR
      LIR
      nr 2088  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2090  <|@ instruction xmm0|V128_WORD = H [rsi|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr 2092  <|@ instruction J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr 2094  <|@ instruction r10|QWORD = LEA [r11|QWORD + 8] size: QWORD <|@ <|@
      nr 2096  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 2098  <|@ instruction JUMP ~[] destination: B217 -> B218 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B218"
    from_bci -1
    to_bci -1
    predecessors "B217" "B216" 
    successors "B219" "B220" 
    xhandlers
    flags 
    probability 4613502363316578581
    begin_IR
      LIR
      nr 2100  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2102  <|@ instruction r10|QWORD = LEA [rcx|QWORD - 4] size: QWORD <|@ <|@
      nr 2104  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 2106  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B218 -> B219 falseDestination: B218 -> B220 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B220"
    from_bci -1
    to_bci -1
    predecessors "B218" 
    successors "B221" 
    xhandlers
    flags 
    probability 4611922377187438288
    begin_IR
      LIR
      nr 2112  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2114  <|@ instruction xmm0|V64_WORD = H [rsi|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr 2116  <|@ instruction J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr 2118  <|@ instruction r10|QWORD = LEA [r11|QWORD + 4] size: QWORD <|@ <|@
      nr 2120  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 2122  <|@ instruction JUMP ~[] destination: B220 -> B221 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B221"
    from_bci -1
    to_bci -1
    predecessors "B220" "B219" 
    successors "B222" "B223" 
    xhandlers
    flags 
    probability 4613502363316578581
    begin_IR
      LIR
      nr 2124  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2126  <|@ instruction r10|QWORD = LEA [rcx|QWORD - 2] size: QWORD <|@ <|@
      nr 2128  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 2130  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B221 -> B222 falseDestination: B221 -> B223 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B223"
    from_bci -1
    to_bci -1
    predecessors "B221" 
    successors "B224" 
    xhandlers
    flags 
    probability 4611922377187438288
    begin_IR
      LIR
      nr 2136  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2138  <|@ instruction xmm0|V32_WORD = H [rsi|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr 2140  <|@ instruction J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr 2142  <|@ instruction r10|QWORD = LEA [r11|QWORD + 2] size: QWORD <|@ <|@
      nr 2144  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 2146  <|@ instruction JUMP ~[] destination: B223 -> B224 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B224"
    from_bci -1
    to_bci -1
    predecessors "B223" "B222" 
    successors "B225" "B226" 
    xhandlers
    flags 
    probability 4613502363316578581
    begin_IR
      LIR
      nr 2148  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2150  <|@ instruction rcx|QWORD = DEC rcx|QWORD size: QWORD <|@ <|@
      nr 2152  <|@ instruction CMP (x: r11|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr 2154  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B224 -> B225 falseDestination: B224 -> B226 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B226"
    from_bci -1
    to_bci -1
    predecessors "B224" 
    successors "B227" 
    xhandlers
    flags 
    probability 4611922377187438288
    begin_IR
      LIR
      nr 2162  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2164  <|@ instruction rsi|DWORD = MOVSX [rsi|QWORD[.] + r11|QWORD * 2] size: DWORD <|@ <|@
      nr 2166  <|@ instruction MOV (x: [rdx|QWORD[.] + r11|QWORD * 2], y: rsi|DWORD) size: WORD <|@ <|@
      nr 2168  <|@ instruction rdi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2170  <|@ instruction JUMP ~[] destination: B226 -> B227 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B227"
    from_bci -1
    to_bci -1
    predecessors "B226" "B225" 
    successors "B228" "B231" 
    xhandlers
    flags 
    probability 4613502363316578581
    begin_IR
      LIR
      nr 2172  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2174  <|@ instruction rsi|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@120cc8dc encoding: base: 0 shift: 3 <|@ <|@
      nr 2176  <|@ instruction CMP (x: rdi|QWORD[.], y: stack:88|QWORD[.]) size: QWORD <|@ <|@
      nr 2178  <|@ instruction BRANCH trueDestinationProbability: 0.2066504369952622 condition: = trueDestination: B227 -> B228 falseDestination: B227 -> B231 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B231"
    from_bci -1
    to_bci -1
    predecessors "B227" 
    successors "B232" 
    xhandlers
    flags 
    probability 4612196344020445404
    begin_IR
      LIR
      nr 2206  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2208  <|@ instruction r14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2210  <|@ instruction r13|DWORD = MOVE stack:100|DWORD moveKind: DWORD <|@ <|@
      nr 2212  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2214  <|@ instruction JUMP ~[] destination: B231 -> B232 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B232"
    from_bci -1
    to_bci -1
    predecessors "B200" "B198" "B199" "B231" "B229" "B230" 
    successors "B233" "B241" 
    xhandlers
    flags 
    probability 4614149222986594394
    begin_IR
      LIR
      nr 2216  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr 2218  <|@ instruction stack:40|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 2220  <|@ instruction r10|DWORD = MOV [r8|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 2222  <|@ instruction r11|DWORD = MOV [r8|QWORD[.] + 8] size: DWORD <|@ <|@
      nr 2224  <|@ instruction rdx|DWORD = SUB (x: r13|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr 2226  <|@ instruction CMP rdx|DWORD y: 1 size: DWORD <|@ <|@
      nr 2228  <|@ instruction BRANCH trueDestinationProbability: 0.7754412955005789 condition: < trueDestination: B232 -> B233 falseDestination: B232 -> B241 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B233"
    from_bci -1
    to_bci -1
    predecessors "B232" 
    successors "B234" "B240" 
    xhandlers
    flags 
    probability 4612584766463955523
    begin_IR
      LIR
      nr 2230  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2232  <|@ instruction CMP r11|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr 2234  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B233 -> B234 falseDestination: B233 -> B240 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B234"
    from_bci -1
    to_bci -1
    predecessors "B233" 
    successors "B235" "B239" 
    xhandlers
    flags 
    probability 4612584766463955523
    begin_IR
      LIR
      nr 2236  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2238  <|@ instruction CMP (x: r10|DWORD, y: stack:92|DWORD) size: DWORD <|@ <|@
      nr 2240  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B234 -> B235 falseDestination: B234 -> B239 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B235"
    from_bci -1
    to_bci -1
    predecessors "B234" 
    successors "B236" "B237" 
    xhandlers
    flags 
    probability 4612584766463955523
    begin_IR
      LIR
      nr 2242  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2244  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr 2246  <|@ instruction rcx|QWORD = LEA [rdx|QWORD + 24] size: QWORD <|@ <|@
      nr 2248  <|@ instruction CMP (x: rcx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr 2250  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B235 -> B236 falseDestination: B235 -> B237 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B237"
    from_bci -1
    to_bci -1
    predecessors "B235" 
    successors "B238" 
    xhandlers
    flags 
    probability 4612530742987316142
    begin_IR
      LIR
      nr 2278  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2280  <|@ instruction MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD <|@ <|@
      nr 2282  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + 216] instr: 0 <|@ <|@
      nr 2284  <|@ instruction rdx|QWORD[*] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr 2286  <|@ instruction r9|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 2288  <|@ instruction rbx|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr 2290  <|@ instruction r10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr 2292  <|@ instruction JUMP ~[] destination: B237 -> B238 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B238"
    from_bci -1
    to_bci -1
    predecessors "B237" "B236" 
    successors "B291" 
    xhandlers
    flags 
    probability 4612584766463955523
    begin_IR
      LIR
      nr 2294  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2296  <|@ instruction rcx|QWORD[.] = MOVE rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr 2298  <|@ instruction r10|QWORD = MOV [r10|QWORD + 168] size: QWORD <|@ <|@
      nr 2300  <|@ instruction MOV (x: [rdx|QWORD[*]], y: r10|QWORD) size: QWORD <|@ <|@
      nr 2302  <|@ instruction MOV [rdx|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr 2304  <|@ instruction MOV (x: [rdx|QWORD[*] + 12], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr 2306  <|@ instruction MOV (x: [rdx|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr 2308  <|@ instruction rcx|DWORD[.] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@120cc8dc encoding: base: 0 shift: 3 <|@ <|@
      nr 2310  <|@ instruction MOV (x: [r8|QWORD[.] + r9|DWORD * 4 + 16], y: rcx|DWORD[.]) size: DWORD <|@ <|@
      nr 2312  <|@ instruction rsi|QWORD[.] = LEA [r8|QWORD[.] + r9|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr 2314  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 2316  <|@ instruction MOVB (x: [rsi|QWORD[*] + rbx|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 2318  <|@ instruction r13|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2320  <|@ instruction xmm2|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null> <|@ <|@
      nr 2322  <|@ instruction xmm1|V128_DWORD[....] = L oc: SIMD<null,null,null,null> <|@ <|@
      nr 2324  <|@ instruction xmm0|V64_DWORD[..] = L oc: SIMD<null,null> <|@ <|@
      nr 2326  <|@ instruction JUMP ~[] destination: B238 -> B291 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B291"
    from_bci -1
    to_bci -1
    predecessors "B290" "B238" 
    successors "B292" 
    xhandlers
    flags 
    probability 4614149222986594394
    begin_IR
      LIR
      nr 2864  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2866  <|@ instruction rsi|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 2868  <|@ instruction r14|DWORD = MOVE stack:100|DWORD moveKind: DWORD <|@ <|@
      nr 2870  <|@ instruction rdx|DWORD = MOVE stack:100|DWORD moveKind: DWORD <|@ <|@
      nr 2872  <|@ instruction JUMP ~[] destination: B291 -> B292 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B294"
    from_bci -1
    to_bci -1
    predecessors "B292" 
    successors "B295" "B350" 
    xhandlers
    flags 
    loop_index 11
    loop_depth 1
    probability 4618652822613964890
    begin_IR
      LIR
      nr 2892  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 2894  <|@ instruction r10|DWORD = DEC r14|DWORD size: DWORD <|@ <|@
      nr 2896  <|@ instruction CMP (x: rdx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 2898  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B294 -> B295 falseDestination: B294 -> B350 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B295"
    from_bci -1
    to_bci -1
    predecessors "B294" 
    successors "B296" "B349" 
    xhandlers
    flags 
    loop_index 11
    loop_depth 1
    probability 4618652822613964890
    begin_IR
      LIR
      nr 2900  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2902  <|@ instruction CMP (x: rsi|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 2904  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B295 -> B296 falseDestination: B295 -> B349 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B296"
    from_bci -1
    to_bci -1
    predecessors "B295" 
    successors "B297" "B298" 
    xhandlers
    flags 
    loop_index 11
    loop_depth 1
    probability 4618652822613964890
    begin_IR
      LIR
      nr 2906  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2908  <|@ instruction r11|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr 2910  <|@ instruction rcx|DWORD[.] = MOV [r13|QWORD[.] + r11|QWORD * 4 + 12] size: DWORD <|@ <|@
      nr 2912  <|@ instruction TEST (x: rcx|DWORD[.], y: rcx|DWORD[.]) size: DWORD <|@ <|@
      nr 2914  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B296 -> B297 falseDestination: B296 -> B298 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B298"
    from_bci -1
    to_bci -1
    predecessors "B296" 
    successors "B299" "B348" 
    xhandlers
    flags 
    loop_index 11
    loop_depth 1
    probability 4617956142195307192
    begin_IR
      LIR
      nr 2920  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2922  <|@ instruction CMP [rcx|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr 2924  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B298 -> B299 falseDestination: B298 -> B348 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B299"
    from_bci -1
    to_bci -1
    predecessors "B298" 
    successors "B300" 
    xhandlers
    flags 
    loop_index 11
    loop_depth 1
    probability 4617956142195307192
    begin_IR
      LIR
      nr 2926  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2928  <|@ instruction JUMP ~[] destination: B299 -> B300 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B300"
    from_bci -1
    to_bci -1
    predecessors "B297" "B299" 
    successors "B301" "B302" 
    xhandlers
    flags 
    loop_index 11
    loop_depth 1
    probability 4618652822613964890
    begin_IR
      LIR
      nr 2930  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2932  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
java.lang.String.split(String.java:2373) [bci: 261]
locals: - - - - - - - vobject:ArrayList:0{modCount=rdx|DWORD,size=rdx|DWORD,elementData=r13|QWORD[.]} r14|DWORD - 
vobject:ArrayList:0{modCount=rdx|DWORD,size=rdx|DWORD,elementData=r13|QWORD[.]} Ljava/util/ArrayList; rdx|DWORD rdx|DWORD r13|QWORD[.] 
>@ <|@ instruction rcx|DWORD[.] = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD state [bci:261] <|@ <|@
      nr 2934  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
java.lang.String.split(String.java:2373) [bci: 261]
locals: - - - - - - - vobject:ArrayList:0{modCount=rdx|DWORD,size=rdx|DWORD,elementData=r13|QWORD[.]} r14|DWORD - 
vobject:ArrayList:0{modCount=rdx|DWORD,size=rdx|DWORD,elementData=r13|QWORD[.]} Ljava/util/ArrayList; rdx|DWORD rdx|DWORD r13|QWORD[.] 
>@ <|@ instruction CMP [rcx|DWORD[.] * 8 + 12] y: 0 size: DWORD state [bci:261] <|@ <|@
      nr 2936  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B300 -> B301 falseDestination: B300 -> B302 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B301"
    from_bci -1
    to_bci -1
    predecessors "B300" 
    successors "B292" 
    xhandlers
    flags "lle" 
    loop_index 11
    loop_depth 1
    probability 4614149222986594394
    begin_IR
      LIR
      nr 2938  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2940  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
java.lang.String.split(String.java:2373) [bci: 261]
locals: - - - - - - - vobject:ArrayList:0{modCount=rdx|DWORD,size=rdx|DWORD,elementData=r13|QWORD[.]} r14|DWORD - 
vobject:ArrayList:0{modCount=rdx|DWORD,size=rdx|DWORD,elementData=r13|QWORD[.]} Ljava/util/ArrayList; rdx|DWORD rdx|DWORD r13|QWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:261] <|@ <|@
      nr 2942  <|@ instruction r14|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 2944  <|@ instruction JUMP ~[] destination: B301 -> B292 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B292"
    from_bci -1
    to_bci -1
    predecessors "B291" "B301" 
    successors "B293" "B294" 
    xhandlers
    flags "llh" 
    loop_index 11
    loop_depth 1
    probability 4618652822613964890
    begin_IR
      LIR
      nr 2874  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2876  <|@ instruction CMP r14|DWORD y: 1 size: DWORD <|@ <|@
      nr 2878  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B292 -> B293 falseDestination: B292 -> B294 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B297"
    from_bci -1
    to_bci -1
    predecessors "B296" 
    successors "B300" 
    xhandlers
    flags 
    loop_index 11
    loop_depth 1
    probability 4603748662894538004
    begin_IR
      LIR
      nr 2916  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2918  <|@ instruction JUMP ~[] destination: B297 -> B300 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B302"
    from_bci -1
    to_bci -1
    predecessors "B300" 
    successors "B303" "B347" 
    xhandlers
    flags 
    probability 4614149222986594394
    begin_IR
      LIR
      nr 2946  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2948  <|@ instruction r8|QWORD = DEC r11|QWORD size: QWORD <|@ <|@
      nr 2950  <|@ instruction rsi|QWORD = MOV rsi|DWORD size: DWORD <|@ <|@
      nr 2952  <|@ instruction CMP (x: rsi|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr 2954  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B302 -> B303 falseDestination: B302 -> B347 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B303"
    from_bci -1
    to_bci -1
    predecessors "B302" 
    successors "B304" "B346" 
    xhandlers
    flags 
    probability 4614149222986594394
    begin_IR
      LIR
      nr 2956  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2958  <|@ instruction CMP (x: rsi|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr 2960  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B303 -> B304 falseDestination: B303 -> B346 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B304"
    from_bci -1
    to_bci -1
    predecessors "B303" 
    successors "B305" "B345" 
    xhandlers
    flags 
    probability 4614149222986594394
    begin_IR
      LIR
      nr 2962  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2964  <|@ instruction CMP (x: r11|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr 2966  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B304 -> B305 falseDestination: B304 -> B345 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B305"
    from_bci -1
    to_bci -1
    predecessors "B304" 
    successors "B306" "B307" 
    xhandlers
    flags 
    probability 4614149222986594394
    begin_IR
      LIR
      nr 2968  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2970  <|@ instruction CMP (x: r14|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr 2972  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B305 -> B306 falseDestination: B305 -> B307 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B307"
    from_bci -1
    to_bci -1
    predecessors "B305" 
    successors "B308" "B311" 
    xhandlers
    flags 
    probability 4614149222986594394
    begin_IR
      LIR
      nr 2986  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2988  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr 2990  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr 2992  <|@ instruction CMP r14|DWORD y: 16777215 size: DWORD <|@ <|@
      nr 2994  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B307 -> B308 falseDestination: B307 -> B311 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B308"
    from_bci -1
    to_bci -1
    predecessors "B307" 
    successors "B309" "B310" 
    xhandlers
    flags 
    probability 4613452542567936696
    begin_IR
      LIR
      nr 2996  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2998  <|@ instruction r9|DWORD = SHL r14|DWORD y: 2 size: DWORD <|@ <|@
      nr 3000  <|@ instruction r9|DWORD = LEA [r9|DWORD + 23] size: DWORD <|@ <|@
      nr 3002  <|@ instruction r9|DWORD = AND r9|DWORD y: -8 size: DWORD <|@ <|@
      nr 3004  <|@ instruction r9|QWORD = MOVSXD r9|DWORD size: QWORD <|@ <|@
      nr 3006  <|@ instruction rdi|QWORD = ADD (x: r9|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 3008  <|@ instruction CMP (x: rdi|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr 3010  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B308 -> B309 falseDestination: B308 -> B310 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B310"
    from_bci -1
    to_bci -1
    predecessors "B308" 
    successors "B313" 
    xhandlers
    flags 
    probability 4613389841330257503
    begin_IR
      LIR
      nr 3020  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3022  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdi|QWORD) size: QWORD <|@ <|@
      nr 3024  <|@ instruction AMD64PREFETCH ~[r9|QWORD + rsi|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr 3026  <|@ instruction AMD64PREFETCH ~[r9|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr 3028  <|@ instruction AMD64PREFETCH ~[r9|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr 3030  <|@ instruction AMD64PREFETCH ~[r9|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr 3032  <|@ instruction MOV (x: [rsi|QWORD + 12], y: r14|DWORD) size: DWORD <|@ <|@
      nr 3034  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr 3036  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr 3038  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 3040  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3042  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 3044  <|@ instruction stack:96|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr 3046  <|@ instruction stack:64|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3048  <|@ instruction r14|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr 3050  <|@ instruction r13|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr 3052  <|@ instruction JUMP ~[] destination: B310 -> B313 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B313"
    from_bci -1
    to_bci -1
    predecessors "B310" "B312" 
    successors "B314" "B315" 
    xhandlers
    flags 
    probability 4614149222986594394
    begin_IR
      LIR
      nr 3080  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 3082  <|@ instruction rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr 3084  <|@ instruction rdx|QWORD = LEA [r13|QWORD - 8] size: QWORD <|@ <|@
      nr 3086  <|@ instruction TEST (x: rdx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr 3088  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B313 -> B314 falseDestination: B313 -> B315 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B314"
    from_bci -1
    to_bci -1
    predecessors "B313" 
    successors "B318" 
    xhandlers
    flags 
    probability 4612407521939950148
    begin_IR
      LIR
      nr 3090  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3092  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 3094  <|@ instruction JUMP ~[] destination: B314 -> B318 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B318"
    from_bci -1
    to_bci -1
    predecessors "B314" "B317" 
    successors "B319" "B320" 
    xhandlers
    flags 
    probability 4614149222986594394
    begin_IR
      LIR
      nr 3118  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 3120  <|@ instruction rdx|QWORD = LEA [r13|QWORD - 4] size: QWORD <|@ <|@
      nr 3122  <|@ instruction CMP (x: rcx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr 3124  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B318 -> B319 falseDestination: B318 -> B320 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B320"
    from_bci -1
    to_bci -1
    predecessors "B318" 
    successors "B321" 
    xhandlers
    flags 
    probability 4612407521939950148
    begin_IR
      LIR
      nr 3130  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3132  <|@ instruction xmm1|V128_DWORD[....] = L oc: SIMD<null,null,null,null> <|@ <|@
      nr 3134  <|@ instruction J (address: [rsi|QWORD[.] + rcx|QWORD * 4], input: xmm1|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr 3136  <|@ instruction rdx|QWORD = LEA [rcx|QWORD + 4] size: QWORD <|@ <|@
      nr 3138  <|@ instruction rcx|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr 3140  <|@ instruction JUMP ~[] destination: B320 -> B321 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B321"
    from_bci -1
    to_bci -1
    predecessors "B320" "B319" 
    successors "B322" "B323" 
    xhandlers
    flags 
    probability 4614149222986594394
    begin_IR
      LIR
      nr 3142  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 3144  <|@ instruction rdx|QWORD = LEA [r13|QWORD - 2] size: QWORD <|@ <|@
      nr 3146  <|@ instruction CMP (x: rcx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr 3148  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B321 -> B322 falseDestination: B321 -> B323 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B323"
    from_bci -1
    to_bci -1
    predecessors "B321" 
    successors "B324" 
    xhandlers
    flags 
    probability 4612407521939950148
    begin_IR
      LIR
      nr 3154  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3156  <|@ instruction xmm0|V64_DWORD[..] = L oc: SIMD<null,null> <|@ <|@
      nr 3158  <|@ instruction J (address: [rsi|QWORD[.] + rcx|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr 3160  <|@ instruction rdx|QWORD = LEA [rcx|QWORD + 2] size: QWORD <|@ <|@
      nr 3162  <|@ instruction rcx|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr 3164  <|@ instruction JUMP ~[] destination: B323 -> B324 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B324"
    from_bci -1
    to_bci -1
    predecessors "B323" "B322" 
    successors "B325" "B326" 
    xhandlers
    flags 
    probability 4614149222986594394
    begin_IR
      LIR
      nr 3166  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 3168  <|@ instruction CMP (x: rcx|QWORD, y: r14|QWORD) size: QWORD <|@ <|@
      nr 3170  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B324 -> B325 falseDestination: B324 -> B326 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B326"
    from_bci -1
    to_bci -1
    predecessors "B324" 
    successors "B327" 
    xhandlers
    flags 
    probability 4612407521939950148
    begin_IR
      LIR
      nr 3178  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3180  <|@ instruction MOV (x: [rsi|QWORD[.] + rcx|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr 3182  <|@ instruction r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 3184  <|@ instruction JUMP ~[] destination: B326 -> B327 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B327"
    from_bci -1
    to_bci -1
    predecessors "B326" "B325" 
    successors "B328" 
    xhandlers
    flags 
    probability 4614149222986594394
    begin_IR
      LIR
      nr 3186  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3188  <|@ instruction r10|DWORD = SHL r10|DWORD y: 2 size: DWORD <|@ <|@
      nr 3190  <|@ instruction rsi|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr 3192  <|@ instruction rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr 3194  <|@ instruction rdx|QWORD[.] = ADD (x: rdx|QWORD[.], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 3196  <|@ instruction rdx|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 3198  <|@ instruction rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr 3200  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 3202  <|@ instruction rdx|QWORD[*] = SUB (x: rdx|QWORD[*], ~y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr 3204  <|@ instruction rdx|QWORD[*] = INC rdx|QWORD[*] size: QWORD <|@ <|@
      nr 3206  <|@ instruction rbx|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr 3208  <|@ instruction JUMP ~[] destination: B327 -> B328 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B343"
    from_bci -1
    to_bci -1
    predecessors "B328" 
    successors "B328" 
    xhandlers
    flags "lle" 
    loop_index 13
    loop_depth 1
    probability 4614149222986594394
    begin_IR
      LIR
      nr 3316  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 3318  <|@ instruction rdx|QWORD[*] = DEC rdx|QWORD[*] size: QWORD <|@ <|@
      nr 3320  <|@ instruction rcx|QWORD[*] = ADD (x: rsi|QWORD[*], y: rbx|QWORD) size: QWORD <|@ <|@
      nr 3322  <|@ instruction rcx|QWORD[*] = ADD (x: rcx|QWORD[*], y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr 3324  <|@ instruction MOVB (x: [rcx|QWORD[*]], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 3326  <|@ instruction JUMP ~[] destination: B343 -> B328 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B328"
    from_bci -1
    to_bci -1
    predecessors "B327" "B343" 
    successors "B329" "B343" 
    xhandlers
    flags "llh" 
    loop_index 13
    loop_depth 1
    probability 4618652822613964890
    begin_IR
      LIR
      nr 3210  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 3212  <|@ instruction CMP rdx|QWORD[*] y: 1 size: QWORD <|@ <|@
      nr 3214  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B328 -> B329 falseDestination: B328 -> B343 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B329"
    from_bci -1
    to_bci -1
    predecessors "B328" 
    successors "B330" 
    xhandlers
    flags 
    probability 4614149222986594394
    begin_IR
      LIR
      nr 3216  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3218  <|@ instruction r9|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr 3220  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 3222  <|@ instruction r11|DWORD = MOVE stack:96|DWORD moveKind: DWORD <|@ <|@
      nr 3224  <|@ instruction r8|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3226  <|@ instruction JUMP ~[] destination: B329 -> B330 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B331"
    from_bci -1
    to_bci -1
    predecessors "B330" 
    successors "B332" "B333" 
    xhandlers
    flags 
    loop_index 14
    loop_depth 1
    probability 4619723847182676267
    begin_IR
      LIR
      nr 3234  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 3236  <|@ instruction CMP (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr 3238  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B331 -> B332 falseDestination: B331 -> B333 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B333"
    from_bci -1
    to_bci -1
    predecessors "B331" 
    successors "B334" "B335" 
    xhandlers
    flags 
    loop_index 14
    loop_depth 1
    probability 4619723847182676267
    begin_IR
      LIR
      nr 3246  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3248  <|@ instruction rsi|DWORD[.] = MOV [r8|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 3250  <|@ instruction TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr 3252  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B333 -> B334 falseDestination: B333 -> B335 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B335"
    from_bci -1
    to_bci -1
    predecessors "B333" 
    successors "B336" "B338" 
    xhandlers
    flags 
    loop_index 14
    loop_depth 1
    probability 4618920064307147431
    begin_IR
      LIR
      nr 3258  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3260  <|@ instruction CMP [rsi|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr 3262  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B335 -> B336 falseDestination: B335 -> B338 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B336"
    from_bci -1
    to_bci -1
    predecessors "B335" 
    successors "B337" 
    xhandlers
    flags 
    loop_index 14
    loop_depth 1
    probability 4618920064307147431
    begin_IR
      LIR
      nr 3264  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3266  <|@ instruction JUMP ~[] destination: B336 -> B337 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B337"
    from_bci -1
    to_bci -1
    predecessors "B334" "B336" 
    successors "B330" 
    xhandlers
    flags "lle" 
    loop_index 14
    loop_depth 1
    probability 4619723847182676267
    begin_IR
      LIR
      nr 3268  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3270  <|@ instruction MOV (x: [rax|QWORD[.] + r10|DWORD * 4 + 16], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr 3272  <|@ instruction rsi|QWORD[.] = LEA [rax|QWORD[.] + r10|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr 3274  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 3276  <|@ instruction MOVB (x: [rsi|QWORD[*] + rbx|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 3278  <|@ instruction rsi|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr 3280  <|@ instruction r9|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 3282  <|@ instruction r10|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr 3284  <|@ instruction JUMP ~[] destination: B337 -> B330 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B330"
    from_bci -1
    to_bci -1
    predecessors "B329" "B337" 
    successors "B331" "B339" 
    xhandlers
    flags "llh" 
    loop_index 14
    loop_depth 1
    probability 4621950233479046828
    begin_IR
      LIR
      nr 3228  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 3230  <|@ instruction CMP (x: r11|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 3232  <|@ instruction BRANCH trueDestinationProbability: 0.6976536501116306 condition: > trueDestination: B330 -> B331 falseDestination: B330 -> B339 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B334"
    from_bci -1
    to_bci -1
    predecessors "B333" 
    successors "B337" 
    xhandlers
    flags 
    loop_index 14
    loop_depth 1
    probability 4604605482549507105
    begin_IR
      LIR
      nr 3254  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3256  <|@ instruction JUMP ~[] destination: B334 -> B337 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B339"
    from_bci -1
    to_bci -1
    predecessors "B330" 
    successors "B340" "B341" 
    xhandlers
    flags 
    probability 4614149222986594394
    begin_IR
      LIR
      nr 3292  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3294  <|@ instruction CMP (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr 3296  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B339 -> B340 falseDestination: B339 -> B341 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B340"
    from_bci -1
    to_bci -1
    predecessors "B339" 
    successors 
    xhandlers
    flags 
    probability 4614149222986594394
    begin_IR
      LIR
      nr 3298  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3300  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B315"
    from_bci -1
    to_bci -1
    predecessors "B313" 
    successors "B316" 
    xhandlers
    flags 
    probability 4605142023731853402
    begin_IR
      LIR
      nr 3096  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3098  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 3100  <|@ instruction xmm2|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null> <|@ <|@
      nr 3102  <|@ instruction JUMP ~[] destination: B315 -> B316 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B344"
    from_bci -1
    to_bci -1
    predecessors "B316" 
    successors "B316" 
    xhandlers
    flags "lle" 
    loop_index 12
    loop_depth 1
    probability 4612407521939950148
    begin_IR
      LIR
      nr 3328  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 3330  <|@ instruction JUMP ~[] destination: B344 -> B316 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B316"
    from_bci -1
    to_bci -1
    predecessors "B315" "B344" 
    successors "B317" "B344" 
    xhandlers
    flags "llh" 
    loop_index 12
    loop_depth 1
    probability 4614149222986594394
    begin_IR
      LIR
      nr 3104  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 3106  <|@ instruction J (address: [rsi|QWORD[.] + rcx|QWORD * 4], input: xmm2|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr 3108  <|@ instruction rcx|QWORD = LEA [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr 3110  <|@ instruction CMP (x: rcx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr 3112  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B316 -> B317 falseDestination: B316 -> B344 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B319"
    from_bci -1
    to_bci -1
    predecessors "B318" 
    successors "B321" 
    xhandlers
    flags 
    probability 4605142023731853402
    begin_IR
      LIR
      nr 3126  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3128  <|@ instruction JUMP ~[] destination: B319 -> B321 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B322"
    from_bci -1
    to_bci -1
    predecessors "B321" 
    successors "B324" 
    xhandlers
    flags 
    probability 4605142023731853402
    begin_IR
      LIR
      nr 3150  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3152  <|@ instruction JUMP ~[] destination: B322 -> B324 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B325"
    from_bci -1
    to_bci -1
    predecessors "B324" 
    successors "B327" 
    xhandlers
    flags 
    probability 4605142023731853402
    begin_IR
      LIR
      nr 3172  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3174  <|@ instruction r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 3176  <|@ instruction JUMP ~[] destination: B325 -> B327 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B317"
    from_bci -1
    to_bci -1
    predecessors "B316" 
    successors "B318" 
    xhandlers
    flags 
    probability 4605142023731853402
    begin_IR
      LIR
      nr 3114  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3116  <|@ instruction JUMP ~[] destination: B317 -> B318 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B184"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B185" 
    xhandlers
    flags 
    probability 4604782905894847016
    begin_IR
      LIR
      nr 1772  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1774  <|@ instruction r13|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1776  <|@ instruction r14|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1778  <|@ instruction JUMP ~[] destination: B184 -> B185 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B222"
    from_bci -1
    to_bci -1
    predecessors "B221" 
    successors "B224" 
    xhandlers
    flags 
    probability 4604495164061837589
    begin_IR
      LIR
      nr 2132  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2134  <|@ instruction JUMP ~[] destination: B222 -> B224 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B225"
    from_bci -1
    to_bci -1
    predecessors "B224" 
    successors "B227" 
    xhandlers
    flags 
    probability 4604495164061837589
    begin_IR
      LIR
      nr 2156  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2158  <|@ instruction rdi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2160  <|@ instruction JUMP ~[] destination: B225 -> B227 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B219"
    from_bci -1
    to_bci -1
    predecessors "B218" 
    successors "B221" 
    xhandlers
    flags 
    probability 4604495164061837589
    begin_IR
      LIR
      nr 2108  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2110  <|@ instruction JUMP ~[] destination: B219 -> B221 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B212"
    from_bci -1
    to_bci -1
    predecessors "B210" 
    successors "B213" 
    xhandlers
    flags 
    probability 4604495164061837589
    begin_IR
      LIR
      nr 2054  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2056  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 2058  <|@ instruction JUMP ~[] destination: B212 -> B213 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B358"
    from_bci -1
    to_bci -1
    predecessors "B213" 
    successors "B213" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 1
    probability 4611922377187438288
    begin_IR
      LIR
      nr 3476  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 3478  <|@ instruction JUMP ~[] destination: B358 -> B213 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B213"
    from_bci -1
    to_bci -1
    predecessors "B212" "B358" 
    successors "B214" "B358" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 1
    probability 4613502363316578581
    begin_IR
      LIR
      nr 2060  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2062  <|@ instruction xmm0|V256_WORD = H [rsi|QWORD[.] + r11|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr 2064  <|@ instruction J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr 2066  <|@ instruction r11|QWORD = LEA [r11|QWORD + 16] size: QWORD <|@ <|@
      nr 2068  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 2070  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B213 -> B214 falseDestination: B213 -> B358 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B216"
    from_bci -1
    to_bci -1
    predecessors "B215" 
    successors "B218" 
    xhandlers
    flags 
    probability 4604495164061837589
    begin_IR
      LIR
      nr 2084  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2086  <|@ instruction JUMP ~[] destination: B216 -> B218 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B214"
    from_bci -1
    to_bci -1
    predecessors "B213" 
    successors "B215" 
    xhandlers
    flags 
    probability 4604495164061837589
    begin_IR
      LIR
      nr 2072  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2074  <|@ instruction JUMP ~[] destination: B214 -> B215 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B241"
    from_bci -1
    to_bci -1
    predecessors "B232" 
    successors "B242" "B356" 
    xhandlers
    flags 
    probability 4604433045635831900
    begin_IR
      LIR
      nr 2348  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2350  <|@ instruction r9|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 2352  <|@ instruction rbx|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr 2354  <|@ instruction rdi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr 2356  <|@ instruction rdx|DWORD = SHR r10|DWORD size: DWORD <|@ <|@
      nr 2358  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 2360  <|@ instruction rcx|DWORD = SUB (x: rdx|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr 2362  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr 2364  <|@ instruction rdx|DWORD = CMOVE (falseValue: rdx|DWORD, ~trueValue: r13|DWORD) condition: < <|@ <|@
      nr 2366  <|@ instruction rcx|DWORD = LEA [rdx|DWORD - 2147483639] size: DWORD <|@ <|@
      nr 2368  <|@ instruction CMP rcx|DWORD y: 1 size: DWORD <|@ <|@
      nr 2370  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B241 -> B242 falseDestination: B241 -> B356 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B242"
    from_bci -1
    to_bci -1
    predecessors "B241" 
    successors "B243" "B355" 
    xhandlers
    flags 
    probability 4604433045635831900
    begin_IR
      LIR
      nr 2372  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2374  <|@ instruction CMP (x: rdx|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 2376  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B242 -> B243 falseDestination: B242 -> B355 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B243"
    from_bci -1
    to_bci -1
    predecessors "B242" 
    successors "B244" "B245" 
    xhandlers
    flags 
    probability 4604433045635831900
    begin_IR
      LIR
      nr 2378  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2380  <|@ instruction TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr 2382  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B243 -> B244 falseDestination: B243 -> B245 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B245"
    from_bci -1
    to_bci -1
    predecessors "B243" 
    successors "B246" "B247" 
    xhandlers
    flags 
    probability 4604433045635831900
    begin_IR
      LIR
      nr 2392  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2394  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr 2396  <|@ instruction rax|DWORD = SHL rdx|DWORD y: 2 size: DWORD <|@ <|@
      nr 2398  <|@ instruction rax|DWORD = LEA [rax|DWORD + 23] size: DWORD <|@ <|@
      nr 2400  <|@ instruction rax|DWORD = AND rax|DWORD y: -8 size: DWORD <|@ <|@
      nr 2402  <|@ instruction rax|QWORD = MOVSXD rax|DWORD size: QWORD <|@ <|@
      nr 2404  <|@ instruction rbp|QWORD = ADD (x: rax|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr 2406  <|@ instruction CMP (x: rbp|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr 2408  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B245 -> B246 falseDestination: B245 -> B247 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B247"
    from_bci -1
    to_bci -1
    predecessors "B245" 
    successors "B248" 
    xhandlers
    flags 
    probability 4604370467374926345
    begin_IR
      LIR
      nr 2450  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2452  <|@ instruction MOV (x: [r15|QWORD + 96], y: rbp|QWORD) size: QWORD <|@ <|@
      nr 2454  <|@ instruction AMD64PREFETCH ~[rax|QWORD + rcx|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr 2456  <|@ instruction AMD64PREFETCH ~[rax|QWORD + rcx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr 2458  <|@ instruction AMD64PREFETCH ~[rax|QWORD + rcx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr 2460  <|@ instruction AMD64PREFETCH ~[rax|QWORD + rcx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr 2462  <|@ instruction MOV (x: [rcx|QWORD + 12], y: rdx|DWORD) size: DWORD <|@ <|@
      nr 2464  <|@ instruction MOV [rcx|QWORD] y: 1 size: QWORD <|@ <|@
      nr 2466  <|@ instruction MOV (x: [rcx|QWORD + 8], y: r11|DWORD) size: DWORD <|@ <|@
      nr 2468  <|@ instruction rcx|QWORD[.] = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr 2470  <|@ instruction r11|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2472  <|@ instruction JUMP ~[] destination: B247 -> B248 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B248"
    from_bci -1
    to_bci -1
    predecessors "B247" "B246" 
    successors "B249" "B250" 
    xhandlers
    flags 
    probability 4604433045635831900
    begin_IR
      LIR
      nr 2474  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2476  <|@ instruction CMP (x: rdx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 2478  <|@ instruction rcx|DWORD = CMOVE (falseValue: rdx|DWORD, ~trueValue: r10|DWORD) condition: > <|@ <|@
      nr 2480  <|@ instruction rcx|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr 2482  <|@ instruction CMP rcx|QWORD y: 1 size: QWORD <|@ <|@
      nr 2484  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B248 -> B249 falseDestination: B248 -> B250 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B250"
    from_bci -1
    to_bci -1
    predecessors "B248" 
    successors "B251" "B252" 
    xhandlers
    flags 
    probability 4599929446008461404
    begin_IR
      LIR
      nr 2490  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2492  <|@ instruction r10|QWORD[.] = LEA [r11|QWORD[.] + 16] size: QWORD <|@ <|@
      nr 2494  <|@ instruction rax|QWORD[.] = LEA [r8|QWORD[.] + 16] size: QWORD <|@ <|@
      nr 2496  <|@ instruction rbp|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr 2498  <|@ instruction TEST (x: rbp|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr 2500  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B250 -> B251 falseDestination: B250 -> B252 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B251"
    from_bci -1
    to_bci -1
    predecessors "B250" 
    successors "B255" 
    xhandlers
    flags 
    probability 4598364989485822533
    begin_IR
      LIR
      nr 2502  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2504  <|@ instruction r13|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 2506  <|@ instruction JUMP ~[] destination: B251 -> B255 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B255"
    from_bci -1
    to_bci -1
    predecessors "B251" "B254" 
    successors "B256" "B257" 
    xhandlers
    flags 
    probability 4599929446008461404
    begin_IR
      LIR
      nr 2530  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2532  <|@ instruction rbp|QWORD = LEA [rcx|QWORD - 4] size: QWORD <|@ <|@
      nr 2534  <|@ instruction CMP (x: r13|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr 2536  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B255 -> B256 falseDestination: B255 -> B257 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B257"
    from_bci -1
    to_bci -1
    predecessors "B255" 
    successors "B258" 
    xhandlers
    flags 
    probability 4598364989485822533
    begin_IR
      LIR
      nr 2542  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2544  <|@ instruction xmm0|V128_DWORD[....] = H [rax|QWORD[.] + r13|QWORD * 4] nZ: XMM oh: VMOVDQU <|@ <|@
      nr 2546  <|@ instruction J (address: [r10|QWORD[.] + r13|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr 2548  <|@ instruction rbp|QWORD = LEA [r13|QWORD + 4] size: QWORD <|@ <|@
      nr 2550  <|@ instruction r13|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr 2552  <|@ instruction JUMP ~[] destination: B257 -> B258 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B258"
    from_bci -1
    to_bci -1
    predecessors "B257" "B256" 
    successors "B259" "B260" 
    xhandlers
    flags 
    probability 4599929446008461404
    begin_IR
      LIR
      nr 2554  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2556  <|@ instruction rbp|QWORD = LEA [rcx|QWORD - 2] size: QWORD <|@ <|@
      nr 2558  <|@ instruction CMP (x: r13|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr 2560  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B258 -> B259 falseDestination: B258 -> B260 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B260"
    from_bci -1
    to_bci -1
    predecessors "B258" 
    successors "B261" 
    xhandlers
    flags 
    probability 4598364989485822533
    begin_IR
      LIR
      nr 2566  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2568  <|@ instruction xmm0|V64_DWORD[..] = H [rax|QWORD[.] + r13|QWORD * 4] nZ: XMM oh: VMOVQ <|@ <|@
      nr 2570  <|@ instruction J (address: [r10|QWORD[.] + r13|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr 2572  <|@ instruction rbp|QWORD = LEA [r13|QWORD + 2] size: QWORD <|@ <|@
      nr 2574  <|@ instruction r13|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr 2576  <|@ instruction JUMP ~[] destination: B260 -> B261 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B261"
    from_bci -1
    to_bci -1
    predecessors "B260" "B259" 
    successors "B262" "B263" 
    xhandlers
    flags 
    probability 4599929446008461404
    begin_IR
      LIR
      nr 2578  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2580  <|@ instruction rbp|QWORD = DEC rcx|QWORD size: QWORD <|@ <|@
      nr 2582  <|@ instruction CMP (x: r13|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr 2584  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B261 -> B262 falseDestination: B261 -> B263 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B263"
    from_bci -1
    to_bci -1
    predecessors "B261" 
    successors "B264" 
    xhandlers
    flags 
    probability 4598364989485822533
    begin_IR
      LIR
      nr 2590  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2592  <|@ instruction rax|DWORD[.] = MOV [rax|QWORD[.] + r13|QWORD * 4] size: DWORD <|@ <|@
      nr 2594  <|@ instruction MOV (x: [r10|QWORD[.] + r13|QWORD * 4], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr 2596  <|@ instruction JUMP ~[] destination: B263 -> B264 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B264"
    from_bci -1
    to_bci -1
    predecessors "B249" "B263" "B262" 
    successors "B265" "B280" 
    xhandlers
    flags 
    probability 4604433045635831900
    begin_IR
      LIR
      nr 2598  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2600  <|@ instruction r10|QWORD = MOVSXD rdx|DWORD size: QWORD <|@ <|@
      nr 2602  <|@ instruction CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr 2604  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B264 -> B265 falseDestination: B264 -> B280 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B280"
    from_bci -1
    to_bci -1
    predecessors "B264" 
    successors "B281" 
    xhandlers
    flags 
    probability 4599929446008461404
    begin_IR
      LIR
      nr 2722  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2724  <|@ instruction xmm2|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null> <|@ <|@
      nr 2726  <|@ instruction xmm1|V128_DWORD[....] = L oc: SIMD<null,null,null,null> <|@ <|@
      nr 2728  <|@ instruction xmm0|V64_DWORD[..] = L oc: SIMD<null,null> <|@ <|@
      nr 2730  <|@ instruction JUMP ~[] destination: B280 -> B281 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B281"
    from_bci -1
    to_bci -1
    predecessors "B280" "B278" "B277" 
    successors "B282" "B283" 
    xhandlers
    flags 
    probability 4604433045635831900
    begin_IR
      LIR
      nr 2732  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2734  <|@ instruction TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr 2736  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B281 -> B282 falseDestination: B281 -> B283 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B283"
    from_bci -1
    to_bci -1
    predecessors "B281" 
    successors "B284" 
    xhandlers
    flags 
    probability 4599929446008461404
    begin_IR
      LIR
      nr 2742  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2744  <|@ instruction rdx|DWORD = DEC rdx|DWORD size: DWORD <|@ <|@
      nr 2746  <|@ instruction rdx|DWORD = SHL rdx|DWORD y: 2 size: DWORD <|@ <|@
      nr 2748  <|@ instruction rdx|QWORD = MOVSXD rdx|DWORD size: QWORD <|@ <|@
      nr 2750  <|@ instruction rcx|QWORD[.] = LEA [r11|QWORD[.] + 16] size: QWORD <|@ <|@
      nr 2752  <|@ instruction rcx|QWORD[.] = ADD (x: rcx|QWORD[.], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 2754  <|@ instruction rcx|QWORD[*] = SHR rcx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 2756  <|@ instruction rdx|QWORD[.] = LEA [r11|QWORD[.] + 16] size: QWORD <|@ <|@
      nr 2758  <|@ instruction rdx|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 2760  <|@ instruction rcx|QWORD[*] = SUB (x: rcx|QWORD[*], ~y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr 2762  <|@ instruction rcx|QWORD[*] = INC rcx|QWORD[*] size: QWORD <|@ <|@
      nr 2764  <|@ instruction JUMP ~[] destination: B283 -> B284 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B353"
    from_bci -1
    to_bci -1
    predecessors "B284" 
    successors "B284" 
    xhandlers
    flags "lle" 
    loop_index 10
    loop_depth 1
    probability 4599929446008461404
    begin_IR
      LIR
      nr 3436  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 3438  <|@ instruction rcx|QWORD[*] = DEC rcx|QWORD[*] size: QWORD <|@ <|@
      nr 3440  <|@ instruction r10|QWORD[*] = ADD (x: rdx|QWORD[*], y: rbx|QWORD) size: QWORD <|@ <|@
      nr 3442  <|@ instruction r10|QWORD[*] = ADD (x: r10|QWORD[*], y: rcx|QWORD[*]) size: QWORD <|@ <|@
      nr 3444  <|@ instruction MOVB (x: [r10|QWORD[*]], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 3446  <|@ instruction JUMP ~[] destination: B353 -> B284 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B284"
    from_bci -1
    to_bci -1
    predecessors "B283" "B353" 
    successors "B285" "B353" 
    xhandlers
    flags "llh" 
    loop_index 10
    loop_depth 1
    probability 4604433045635831900
    begin_IR
      LIR
      nr 2766  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2768  <|@ instruction CMP rcx|QWORD[*] y: 1 size: QWORD <|@ <|@
      nr 2770  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B284 -> B285 falseDestination: B284 -> B353 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B228"
    from_bci -1
    to_bci -1
    predecessors "B227" 
    successors "B229" "B230" 
    xhandlers
    flags 
    probability 4603399296729809126
    begin_IR
      LIR
      nr 2180  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2182  <|@ instruction CMP stack:100|DWORD y: 11 size: DWORD <|@ <|@
      nr 2184  <|@ instruction BRANCH trueDestinationProbability: 0.7308950256495741 condition: < trueDestination: B228 -> B229 falseDestination: B228 -> B230 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B229"
    from_bci -1
    to_bci -1
    predecessors "B228" 
    successors "B232" 
    xhandlers
    flags 
    probability 4601308123973474700
    begin_IR
      LIR
      nr 2186  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2188  <|@ instruction r14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2190  <|@ instruction r13|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr 2192  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2194  <|@ instruction JUMP ~[] destination: B229 -> B232 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B249"
    from_bci -1
    to_bci -1
    predecessors "B248" 
    successors "B264" 
    xhandlers
    flags 
    probability 4599929446008461404
    begin_IR
      LIR
      nr 2486  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2488  <|@ instruction JUMP ~[] destination: B249 -> B264 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B265"
    from_bci -1
    to_bci -1
    predecessors "B264" 
    successors "B266" "B267" 
    xhandlers
    flags 
    probability 4599929446008461404
    begin_IR
      LIR
      nr 2606  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2608  <|@ instruction rax|QWORD[.] = LEA [r11|QWORD[.] + rcx|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr 2610  <|@ instruction r10|QWORD = SUB (x: r10|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr 2612  <|@ instruction rcx|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr 2614  <|@ instruction TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr 2616  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B265 -> B266 falseDestination: B265 -> B267 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B266"
    from_bci -1
    to_bci -1
    predecessors "B265" 
    successors "B270" 
    xhandlers
    flags 
    probability 4598364989485822533
    begin_IR
      LIR
      nr 2618  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2620  <|@ instruction rbp|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 2622  <|@ instruction xmm2|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null> <|@ <|@
      nr 2624  <|@ instruction JUMP ~[] destination: B266 -> B270 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B270"
    from_bci -1
    to_bci -1
    predecessors "B266" "B269" 
    successors "B271" "B272" 
    xhandlers
    flags 
    probability 4599929446008461404
    begin_IR
      LIR
      nr 2648  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2650  <|@ instruction rcx|QWORD = LEA [r10|QWORD - 4] size: QWORD <|@ <|@
      nr 2652  <|@ instruction CMP (x: rbp|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr 2654  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B270 -> B271 falseDestination: B270 -> B272 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B272"
    from_bci -1
    to_bci -1
    predecessors "B270" 
    successors "B273" 
    xhandlers
    flags 
    probability 4598364989485822533
    begin_IR
      LIR
      nr 2662  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2664  <|@ instruction xmm1|V128_DWORD[....] = L oc: SIMD<null,null,null,null> <|@ <|@
      nr 2666  <|@ instruction J (address: [rax|QWORD[.] + rbp|QWORD * 4], input: xmm1|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr 2668  <|@ instruction rcx|QWORD = LEA [rbp|QWORD + 4] size: QWORD <|@ <|@
      nr 2670  <|@ instruction rbp|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr 2672  <|@ instruction JUMP ~[] destination: B272 -> B273 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B273"
    from_bci -1
    to_bci -1
    predecessors "B272" "B271" 
    successors "B274" "B275" 
    xhandlers
    flags 
    probability 4599929446008461404
    begin_IR
      LIR
      nr 2674  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2676  <|@ instruction rcx|QWORD = LEA [r10|QWORD - 2] size: QWORD <|@ <|@
      nr 2678  <|@ instruction CMP (x: rbp|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr 2680  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B273 -> B274 falseDestination: B273 -> B275 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B275"
    from_bci -1
    to_bci -1
    predecessors "B273" 
    successors "B276" 
    xhandlers
    flags 
    probability 4598364989485822533
    begin_IR
      LIR
      nr 2688  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2690  <|@ instruction xmm0|V64_DWORD[..] = L oc: SIMD<null,null> <|@ <|@
      nr 2692  <|@ instruction J (address: [rax|QWORD[.] + rbp|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr 2694  <|@ instruction rcx|QWORD = LEA [rbp|QWORD + 2] size: QWORD <|@ <|@
      nr 2696  <|@ instruction rbp|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr 2698  <|@ instruction JUMP ~[] destination: B275 -> B276 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B276"
    from_bci -1
    to_bci -1
    predecessors "B275" "B274" 
    successors "B277" "B278" 
    xhandlers
    flags 
    probability 4599929446008461404
    begin_IR
      LIR
      nr 2700  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2702  <|@ instruction r10|QWORD = DEC r10|QWORD size: QWORD <|@ <|@
      nr 2704  <|@ instruction CMP (x: rbp|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 2706  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B276 -> B277 falseDestination: B276 -> B278 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B278"
    from_bci -1
    to_bci -1
    predecessors "B276" 
    successors "B281" 
    xhandlers
    flags 
    probability 4598364989485822533
    begin_IR
      LIR
      nr 2712  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2714  <|@ instruction MOV (x: [rax|QWORD[.] + rbp|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr 2716  <|@ instruction JUMP ~[] destination: B278 -> B281 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B282"
    from_bci -1
    to_bci -1
    predecessors "B281" 
    successors "B286" 
    xhandlers
    flags 
    probability 4599929446008461404
    begin_IR
      LIR
      nr 2738  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2740  <|@ instruction JUMP ~[] destination: B282 -> B286 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B286"
    from_bci -1
    to_bci -1
    predecessors "B282" "B285" 
    successors "B287" "B352" 
    xhandlers
    flags 
    probability 4604433045635831900
    begin_IR
      LIR
      nr 2776  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2778  <|@ instruction CMP [r11|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr 2780  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B286 -> B287 falseDestination: B286 -> B352 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B287"
    from_bci -1
    to_bci -1
    predecessors "B286" 
    successors "B288" "B289" 
    xhandlers
    flags 
    probability 4604433045635831900
    begin_IR
      LIR
      nr 2782  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2784  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr 2786  <|@ instruction rcx|QWORD = LEA [rdx|QWORD + 24] size: QWORD <|@ <|@
      nr 2788  <|@ instruction CMP (x: rcx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr 2790  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B287 -> B288 falseDestination: B287 -> B289 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B289"
    from_bci -1
    to_bci -1
    predecessors "B287" 
    successors "B290" 
    xhandlers
    flags 
    probability 4604370467374926345
    begin_IR
      LIR
      nr 2826  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2828  <|@ instruction MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD <|@ <|@
      nr 2830  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + 216] instr: 0 <|@ <|@
      nr 2832  <|@ instruction rdx|QWORD[*] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr 2834  <|@ instruction JUMP ~[] destination: B289 -> B290 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B290"
    from_bci -1
    to_bci -1
    predecessors "B289" "B288" 
    successors "B291" 
    xhandlers
    flags 
    probability 4604433045635831900
    begin_IR
      LIR
      nr 2836  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2838  <|@ instruction rcx|QWORD[.] = MOVE rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr 2840  <|@ instruction r10|QWORD = MOV [rdi|QWORD + 168] size: QWORD <|@ <|@
      nr 2842  <|@ instruction MOV (x: [rdx|QWORD[*]], y: r10|QWORD) size: QWORD <|@ <|@
      nr 2844  <|@ instruction MOV [rdx|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr 2846  <|@ instruction MOV (x: [rdx|QWORD[*] + 12], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr 2848  <|@ instruction MOV (x: [rdx|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr 2850  <|@ instruction rcx|DWORD[.] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@120cc8dc encoding: base: 0 shift: 3 <|@ <|@
      nr 2852  <|@ instruction MOV (x: [r11|QWORD[.] + r9|DWORD * 4 + 16], y: rcx|DWORD[.]) size: DWORD <|@ <|@
      nr 2854  <|@ instruction rsi|QWORD[.] = LEA [r11|QWORD[.] + r9|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr 2856  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 2858  <|@ instruction MOVB (x: [rsi|QWORD[*] + rbx|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 2860  <|@ instruction r13|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2862  <|@ instruction JUMP ~[] destination: B290 -> B291 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B285"
    from_bci -1
    to_bci -1
    predecessors "B284" 
    successors "B286" 
    xhandlers
    flags 
    probability 4599929446008461404
    begin_IR
      LIR
      nr 2772  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2774  <|@ instruction JUMP ~[] destination: B285 -> B286 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B311"
    from_bci -1
    to_bci -1
    predecessors "B307" 
    successors "B312" 
    xhandlers
    flags 
    probability 4599245063267167508
    begin_IR
      LIR
      nr 3054  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3056  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 3058  <|@ instruction stack:64|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3060  <|@ instruction JUMP ~[] destination: B311 -> B312 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B312"
    from_bci -1
    to_bci -1
    predecessors "B311" "B309" 
    successors "B313" 
    xhandlers
    flags 
    probability 4599746673168601052
    begin_IR
      LIR
      nr 3062  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3064  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/String;, resolved>} <|@ <|@
      nr 3066  <|@ instruction rdx|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr 3068  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 3070  <|@ instruction stack:96|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr 3072  <|@ instruction r13|QWORD = MOVE r11|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 3074  <|@ instruction r14|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr 3076  <|@ st <@st|@reference-map: [stack:64]
live-base-pointers: []
java.lang.String.split(String.java:2373) [bci: 261]
locals: - - - - - - - vobject:ArrayList:0{modCount=stack:100|DWORD,size=stack:100|DWORD,elementData=stack:64|QWORD[.]} stack:96|DWORD - 
vobject:ArrayList:0{modCount=stack:100|DWORD,size=stack:100|DWORD,elementData=stack:64|QWORD[.]} Ljava/util/ArrayList; stack:100|DWORD stack:100|DWORD stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:261] <|@ <|@
      nr 3078  <|@ instruction JUMP ~[] destination: B312 -> B313 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B194"
    from_bci -1
    to_bci -1
    predecessors "B193" 
    successors "B195" "B196" 
    xhandlers
    flags 
    probability 4598846497278032421
    begin_IR
      LIR
      nr 1870  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1872  <|@ instruction CMP (x: r14|DWORD, y: stack:44|DWORD) size: DWORD <|@ <|@
      nr 1874  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B194 -> B195 falseDestination: B194 -> B196 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B196"
    from_bci -1
    to_bci -1
    predecessors "B194" 
    successors "B197" "B200" 
    xhandlers
    flags 
    probability 4598846497278032421
    begin_IR
      LIR
      nr 1884  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1886  <|@ instruction rdi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1888  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[0]{}] <|@ <|@
      nr 1890  <|@ instruction CMP (x: rdi|QWORD[.], y: stack:88|QWORD[.]) size: QWORD <|@ <|@
      nr 1892  <|@ instruction BRANCH trueDestinationProbability: 0.2066504369952622 condition: = trueDestination: B196 -> B197 falseDestination: B196 -> B200 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B200"
    from_bci -1
    to_bci -1
    predecessors "B196" 
    successors "B232" 
    xhandlers
    flags 
    probability 4597378993675054365
    begin_IR
      LIR
      nr 1924  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1926  <|@ instruction rsi|DWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: NarrowOop[char[0]{}] <|@ <|@
      nr 1928  <|@ instruction r14|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1930  <|@ instruction r13|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1932  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1934  <|@ instruction JUMP ~[] destination: B200 -> B232 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B208"
    from_bci -1
    to_bci -1
    predecessors "B204" 
    successors "B209" 
    xhandlers
    flags 
    probability 4598727575531154857
    begin_IR
      LIR
      nr 2014  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2016  <|@ instruction JUMP ~[] destination: B208 -> B209 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B209"
    from_bci -1
    to_bci -1
    predecessors "B208" "B206" 
    successors "B210" 
    xhandlers
    flags 
    probability 4599182611536347262
    begin_IR
      LIR
      nr 2018  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2020  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr 2022  <|@ instruction rdx|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 2024  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 2026  <|@ st <@st|@reference-map: [stack:40, stack:48, stack:64, stack:96]
live-base-pointers: []
java.lang.String.split(String.java:2351) [bci: 132]
stack: int[-1|0xffffffffffffffff] 
locals: stack:32|QWORD[.] - int[0|0x0] stack:40|DWORD r14|DWORD - int[0|0x0] vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]} - - 
vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]} Ljava/util/ArrayList; stack:92|DWORD stack:92|DWORD stack:88|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:132] <|@ <|@
      nr 2028  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2030  <|@ instruction JUMP ~[] destination: B209 -> B210 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B230"
    from_bci -1
    to_bci -1
    predecessors "B228" 
    successors "B232" 
    xhandlers
    flags 
    probability 4594791320917528704
    begin_IR
      LIR
      nr 2196  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2198  <|@ instruction r14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2200  <|@ instruction r13|DWORD = MOVE stack:100|DWORD moveKind: DWORD <|@ <|@
      nr 2202  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2204  <|@ instruction JUMP ~[] destination: B230 -> B232 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B256"
    from_bci -1
    to_bci -1
    predecessors "B255" 
    successors "B258" 
    xhandlers
    flags 
    probability 4590922246753720412
    begin_IR
      LIR
      nr 2538  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2540  <|@ instruction JUMP ~[] destination: B256 -> B258 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B262"
    from_bci -1
    to_bci -1
    predecessors "B261" 
    successors "B264" 
    xhandlers
    flags 
    probability 4590922246753720412
    begin_IR
      LIR
      nr 2586  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2588  <|@ instruction JUMP ~[] destination: B262 -> B264 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B259"
    from_bci -1
    to_bci -1
    predecessors "B258" 
    successors "B261" 
    xhandlers
    flags 
    probability 4590922246753720412
    begin_IR
      LIR
      nr 2562  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2564  <|@ instruction JUMP ~[] destination: B259 -> B261 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B252"
    from_bci -1
    to_bci -1
    predecessors "B250" 
    successors "B253" 
    xhandlers
    flags 
    probability 4590922246753720412
    begin_IR
      LIR
      nr 2508  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2510  <|@ instruction r13|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 2512  <|@ instruction JUMP ~[] destination: B252 -> B253 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B354"
    from_bci -1
    to_bci -1
    predecessors "B253" 
    successors "B253" 
    xhandlers
    flags "lle" 
    loop_index 8
    loop_depth 1
    probability 4598364989485822533
    begin_IR
      LIR
      nr 3448  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 3450  <|@ instruction JUMP ~[] destination: B354 -> B253 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B253"
    from_bci -1
    to_bci -1
    predecessors "B252" "B354" 
    successors "B254" "B354" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 1
    probability 4599929446008461404
    begin_IR
      LIR
      nr 2514  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2516  <|@ instruction xmm0|V256_DWORD[........] = H [rax|QWORD[.] + r13|QWORD * 4] nZ: YMM oh: VMOVDQU <|@ <|@
      nr 2518  <|@ instruction J (address: [r10|QWORD[.] + r13|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr 2520  <|@ instruction r13|QWORD = LEA [r13|QWORD + 8] size: QWORD <|@ <|@
      nr 2522  <|@ instruction CMP (x: r13|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr 2524  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B253 -> B254 falseDestination: B253 -> B354 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B274"
    from_bci -1
    to_bci -1
    predecessors "B273" 
    successors "B276" 
    xhandlers
    flags 
    probability 4590922246753720412
    begin_IR
      LIR
      nr 2682  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2684  <|@ instruction xmm0|V64_DWORD[..] = L oc: SIMD<null,null> <|@ <|@
      nr 2686  <|@ instruction JUMP ~[] destination: B274 -> B276 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B254"
    from_bci -1
    to_bci -1
    predecessors "B253" 
    successors "B255" 
    xhandlers
    flags 
    probability 4590922246753720412
    begin_IR
      LIR
      nr 2526  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2528  <|@ instruction JUMP ~[] destination: B254 -> B255 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B277"
    from_bci -1
    to_bci -1
    predecessors "B276" 
    successors "B281" 
    xhandlers
    flags 
    probability 4590922246753720412
    begin_IR
      LIR
      nr 2708  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2710  <|@ instruction JUMP ~[] destination: B277 -> B281 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B267"
    from_bci -1
    to_bci -1
    predecessors "B265" 
    successors "B268" 
    xhandlers
    flags 
    probability 4590922246753720412
    begin_IR
      LIR
      nr 2626  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2628  <|@ instruction rbp|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 2630  <|@ instruction xmm2|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null> <|@ <|@
      nr 2632  <|@ instruction JUMP ~[] destination: B267 -> B268 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B279"
    from_bci -1
    to_bci -1
    predecessors "B268" 
    successors "B268" 
    xhandlers
    flags "lle" 
    loop_index 9
    loop_depth 1
    probability 4598364989485822533
    begin_IR
      LIR
      nr 2718  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 2720  <|@ instruction JUMP ~[] destination: B279 -> B268 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B268"
    from_bci -1
    to_bci -1
    predecessors "B267" "B279" 
    successors "B269" "B279" 
    xhandlers
    flags "llh" 
    loop_index 9
    loop_depth 1
    probability 4599929446008461404
    begin_IR
      LIR
      nr 2634  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2636  <|@ instruction J (address: [rax|QWORD[.] + rbp|QWORD * 4], input: xmm2|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr 2638  <|@ instruction rbp|QWORD = LEA [rbp|QWORD + 8] size: QWORD <|@ <|@
      nr 2640  <|@ instruction CMP (x: rbp|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr 2642  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B268 -> B269 falseDestination: B268 -> B279 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B271"
    from_bci -1
    to_bci -1
    predecessors "B270" 
    successors "B273" 
    xhandlers
    flags 
    probability 4590922246753720412
    begin_IR
      LIR
      nr 2656  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2658  <|@ instruction xmm1|V128_DWORD[....] = L oc: SIMD<null,null,null,null> <|@ <|@
      nr 2660  <|@ instruction JUMP ~[] destination: B271 -> B273 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B269"
    from_bci -1
    to_bci -1
    predecessors "B268" 
    successors "B270" 
    xhandlers
    flags 
    probability 4590922246753720412
    begin_IR
      LIR
      nr 2644  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2646  <|@ instruction JUMP ~[] destination: B269 -> B270 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B197"
    from_bci -1
    to_bci -1
    predecessors "B196" 
    successors "B198" "B199" 
    xhandlers
    flags 
    probability 4588715946378730674
    begin_IR
      LIR
      nr 1894  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1896  <|@ instruction CMP stack:100|DWORD y: 11 size: DWORD <|@ <|@
      nr 1898  <|@ instruction BRANCH trueDestinationProbability: 0.7308950256495741 condition: < trueDestination: B197 -> B198 falseDestination: B197 -> B199 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B198"
    from_bci -1
    to_bci -1
    predecessors "B197" 
    successors "B232" 
    xhandlers
    flags 
    probability 4586413719592755138
    begin_IR
      LIR
      nr 1900  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1902  <|@ instruction rsi|DWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: NarrowOop[char[0]{}] <|@ <|@
      nr 1904  <|@ instruction r14|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1906  <|@ instruction r13|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr 1908  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1910  <|@ instruction JUMP ~[] destination: B198 -> B232 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B187"
    from_bci -1
    to_bci -1
    predecessors "B186" 
    successors "B188" "B189" 
    xhandlers
    flags 
    probability 4586473879993340259
    begin_IR
      LIR
      nr 1790  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1792  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr 1794  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr 1796  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr 1798  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B187 -> B188 falseDestination: B187 -> B189 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B189"
    from_bci -1
    to_bci -1
    predecessors "B187" 
    successors "B190" 
    xhandlers
    flags 
    probability 4586410749403764801
    begin_IR
      LIR
      nr 1816  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1818  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1820  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 0 <|@ <|@
      nr 1822  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr 1824  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1826  <|@ instruction JUMP ~[] destination: B189 -> B190 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B190"
    from_bci -1
    to_bci -1
    predecessors "B189" "B188" 
    successors 
    xhandlers
    flags 
    probability 4586473879993340259
    begin_IR
      LIR
      nr 1828  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1830  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1832  <|@ instruction MOV [rax|QWORD[*] + 12] y: 1 size: DWORD <|@ <|@
      nr 1834  <|@ instruction MOV [rax|QWORD[*]] y: 1 size: QWORD <|@ <|@
      nr 1836  <|@ instruction MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr 1838  <|@ instruction r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@120cc8dc encoding: base: 0 shift: 3 <|@ <|@
      nr 1840  <|@ instruction MOV (x: [rax|QWORD[*] + 16], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr 1842  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1844  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B309"
    from_bci -1
    to_bci -1
    predecessors "B308" 
    successors "B312" 
    xhandlers
    flags 
    probability 4583682979831360632
    begin_IR
      LIR
      nr 3012  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3014  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 3016  <|@ instruction stack:64|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3018  <|@ instruction JUMP ~[] destination: B309 -> B312 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B206"
    from_bci -1
    to_bci -1
    predecessors "B205" 
    successors "B209" 
    xhandlers
    flags 
    probability 4582937797491502414
    begin_IR
      LIR
      nr 1984  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1986  <|@ instruction JUMP ~[] destination: B206 -> B209 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B236"
    from_bci -1
    to_bci -1
    predecessors "B235" 
    successors "B238" 
    xhandlers
    flags 
    probability 4582572226418264729
    begin_IR
      LIR
      nr 2252  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2254  <|@ instruction r13|DWORD[.] = MOVE rsi|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2256  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 2258  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr 2260  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 2262  <|@ st <@st|@reference-map: [r13:0, r14:0, stack:40]
live-base-pointers: []
java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
stack: vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]} stack:40|DWORD 
locals: - - 
java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
locals: vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]} vobject:String:1{value=r14|QWORD[.],hash=int[0|0x0]} 
java.lang.String.split(String.java:2368) [bci: 246]
locals: - - stack:36|DWORD - - - - vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]} - - 
vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]} Ljava/util/ArrayList; stack:92|DWORD stack:92|DWORD stack:88|QWORD[.] 
vobject:String:1{value=r14|QWORD[.],hash=int[0|0x0]} Ljava/lang/String; r14|QWORD[.] int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:9, 7, 246] <|@ <|@
      nr 2264  <|@ instruction rdx|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2266  <|@ instruction rsi|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2268  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2270  <|@ instruction r9|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 2272  <|@ instruction rbx|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr 2274  <|@ instruction r10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr 2276  <|@ instruction JUMP ~[] destination: B236 -> B238 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B199"
    from_bci -1
    to_bci -1
    predecessors "B197" 
    successors "B232" 
    xhandlers
    flags 
    probability 4580261674980375008
    begin_IR
      LIR
      nr 1912  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1914  <|@ instruction rsi|DWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: NarrowOop[char[0]{}] <|@ <|@
      nr 1916  <|@ instruction r14|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1918  <|@ instruction r13|DWORD = MOVE stack:100|DWORD moveKind: DWORD <|@ <|@
      nr 1920  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1922  <|@ instruction JUMP ~[] destination: B199 -> B232 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B185" 
    xhandlers
    flags 
    probability 4580029577595117535
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  320  <|@ instruction r13|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  322  <|@ instruction r14|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  324  <|@ instruction JUMP ~[] destination: B37 -> B185 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B246"
    from_bci -1
    to_bci -1
    predecessors "B245" 
    successors "B248" 
    xhandlers
    flags 
    probability 4574660039549593971
    begin_IR
      LIR
      nr 2410  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2412  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 2414  <|@ instruction r13|DWORD[.] = MOVE rsi|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2416  <|@ instruction r11|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: -) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@120cc8dc encoding: base: 0 shift: 3 <|@ <|@
      nr 2418  <|@ instruction rsi|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr 2420  <|@ instruction r11|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 2422  <|@ instruction rdx|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 2424  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 2426  <|@ instruction stack:96|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 2428  <|@ st <@st|@reference-map: [r13:0, r14:0, stack:40]
live-base-pointers: []
java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
stack: vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]} stack:40|DWORD 
locals: - - 
java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
locals: vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]} vobject:String:1{value=r14|QWORD[.],hash=int[0|0x0]} 
java.lang.String.split(String.java:2368) [bci: 246]
locals: - - stack:36|DWORD - - - - vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]} - - 
vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]} Ljava/util/ArrayList; stack:92|DWORD stack:92|DWORD stack:88|QWORD[.] 
vobject:String:1{value=r14|QWORD[.],hash=int[0|0x0]} Ljava/lang/String; r14|QWORD[.] int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:9, 7, 246] <|@ <|@
      nr 2430  <|@ instruction r11|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2432  <|@ instruction rdx|DWORD = MOVE stack:96|DWORD moveKind: DWORD <|@ <|@
      nr 2434  <|@ instruction r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 2436  <|@ instruction rsi|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2438  <|@ instruction r13|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 2440  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2442  <|@ instruction r9|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 2444  <|@ instruction rbx|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr 2446  <|@ instruction rdi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr 2448  <|@ instruction JUMP ~[] destination: B246 -> B248 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B288"
    from_bci -1
    to_bci -1
    predecessors "B287" 
    successors "B290" 
    xhandlers
    flags 
    probability 4574660039549593971
    begin_IR
      LIR
      nr 2792  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2794  <|@ instruction stack:64|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2796  <|@ instruction r13|DWORD[.] = MOVE rsi|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2798  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 2800  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr 2802  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 2804  <|@ st <@st|@reference-map: [r13:0, r14:0, stack:40, stack:64]
live-base-pointers: []
java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
stack: vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]} stack:40|DWORD 
locals: - - 
java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
locals: vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]} vobject:String:1{value=r14|QWORD[.],hash=int[0|0x0]} 
java.lang.String.split(String.java:2368) [bci: 246]
locals: - - stack:36|DWORD - - - - vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]} - - 
vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]} Ljava/util/ArrayList; stack:92|DWORD stack:92|DWORD stack:88|QWORD[.] 
vobject:String:1{value=r14|QWORD[.],hash=int[0|0x0]} Ljava/lang/String; r14|QWORD[.] int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:9, 7, 246] <|@ <|@
      nr 2806  <|@ instruction rdx|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2808  <|@ instruction r11|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2810  <|@ instruction rsi|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2812  <|@ instruction r9|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 2814  <|@ instruction rbx|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr 2816  <|@ instruction rdi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr 2818  <|@ instruction xmm2|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null> <|@ <|@
      nr 2820  <|@ instruction xmm1|V128_DWORD[....] = L oc: SIMD<null,null,null,null> <|@ <|@
      nr 2822  <|@ instruction xmm0|V64_DWORD[..] = L oc: SIMD<null,null> <|@ <|@
      nr 2824  <|@ instruction JUMP ~[] destination: B288 -> B290 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B188"
    from_bci -1
    to_bci -1
    predecessors "B187" 
    successors "B190" 
    xhandlers
    flags 
    probability 4556716339109859626
    begin_IR
      LIR
      nr 1800  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1802  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1804  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1806  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr 1808  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1810  <|@ st <@st|@reference-map: [r13:0, stack:40]
live-base-pointers: []
java.lang.String.split(String.java:2351) [bci: 132]
stack: int[-1|0xffffffffffffffff] 
locals: r13|QWORD[.] - int[0|0x0] stack:40|DWORD r14|DWORD - int[0|0x0] vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]} - - 
vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]} Ljava/util/ArrayList; stack:92|DWORD stack:92|DWORD stack:88|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:132] <|@ <|@
      nr 1812  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1814  <|@ instruction JUMP ~[] destination: B188 -> B190 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B202"
    from_bci -1
    to_bci -1
    predecessors "B201" 
    successors "B203" 
    xhandlers
    flags 
    probability 4553813439973800263
    begin_IR
      LIR
      nr 1942  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1944  <|@ instruction r10|DWORD = MOVE input: int[-575841|0xfffffffffff7369f] <|@ <|@
      nr 1946  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1948  <|@ instruction JUMP ~[] destination: B202 -> B203 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B203"
    from_bci -1
    to_bci -1
    predecessors "B192" "B195" "B202" 
    successors 
    xhandlers
    flags 
    probability 4553813439973800263
    begin_IR
      LIR
      nr 1950  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1952  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1954  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1956  <|@ st <@st|@reference-map: [r13:0, stack:40]
live-base-pointers: []
java.lang.String.split(String.java:2351) [bci: 132]
stack: int[-1|0xffffffffffffffff] 
locals: r13|QWORD[.] - int[0|0x0] stack:40|DWORD r14|DWORD - int[0|0x0] vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]} - - 
vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]} Ljava/util/ArrayList; stack:92|DWORD stack:92|DWORD stack:88|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:132] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" 
    xhandlers
    flags 
    probability 4524150487867272957
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  554  <|@ instruction stack:104|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  556  <|@ instruction r14|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  558  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  560  <|@ instruction r10|DWORD = MOVE input: int[-553569|0xfffffffffff78d9f] <|@ <|@
      nr  562  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B59" "B61" 
    successors 
    xhandlers
    flags 
    probability 4524150487867272957
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  566  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  568  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  570  <|@ st <@st|@reference-map: [r13:0, stack:40]
live-base-pointers: []
java.lang.String.substring(String.java:1969) [bci: 65]
locals: r13|QWORD[.] r14|DWORD - stack:104|DWORD 
java.lang.String.split(String.java:2353) [bci: 162]
stack: vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]} 
locals: r13|QWORD[.] - int[0|0x0] stack:40|DWORD - stack:96|DWORD int[0|0x0] vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]} - - 
vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]} Ljava/util/ArrayList; stack:92|DWORD stack:92|DWORD stack:88|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:65, 162] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B192"
    from_bci -1
    to_bci -1
    predecessors "B191" 
    successors "B203" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1852  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1854  <|@ instruction r10|DWORD = MOVE input: int[-430867|0xfffffffffff96ced] <|@ <|@
      nr 1856  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1858  <|@ instruction JUMP ~[] destination: B192 -> B203 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B362" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   42  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   44  <|@ instruction r10|DWORD = MOVE input: int[-390163|0xfffffffffffa0bed] <|@ <|@
      nr   46  <|@ instruction JUMP ~[] destination: B2 -> B362 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B362"
    from_bci -1
    to_bci -1
    predecessors "B2" "B361" "B4" "B6" "B8" "B10" "B12" "B14" "B16" "B18" "B20" "B22" "B25" "B360" "B359" 
    successors 
    xhandlers
    flags 
    probability 2372834053670830080
    begin_IR
      LIR
      nr 3508  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 3510  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 3512  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr 3514  <|@ st <@st|@reference-map: [rdx:0, r13:0]
live-base-pointers: []
java.lang.String.split(String.java:2336) [bci: 0]
locals: r13|QWORD[.] rdx|QWORD[.] r14|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B346"
    from_bci -1
    to_bci -1
    predecessors "B303" 
    successors "B351" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 3348  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3350  <|@ instruction r11|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr 3352  <|@ instruction r8|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3354  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1976730038] <|@ <|@
      nr 3356  <|@ instruction r9|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3358  <|@ instruction r10|DWORD = MOVE input: int[-440603|0xfffffffffff946e5] <|@ <|@
      nr 3360  <|@ instruction rdx|DWORD = MOVE stack:100|DWORD moveKind: DWORD <|@ <|@
      nr 3362  <|@ instruction JUMP ~[] destination: B346 -> B351 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B351"
    from_bci -1
    to_bci -1
    predecessors "B306" "B293" "B350" "B349" "B348" "B347" "B346" "B345" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      LIR
      nr 3416  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 3418  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 3420  <|@ instruction MOV (x: [r15|QWORD + 680], y: r9|QWORD[.]) size: QWORD <|@ <|@
      nr 3422  <|@ st <@st|@reference-map: [r8:0]
live-base-pointers: []
java.lang.String.split(String.java:2373) [bci: 261]
locals: - - - - - - - vobject:ArrayList:0{modCount=rdx|DWORD,size=rdx|DWORD,elementData=r8|QWORD[.]} r11|DWORD - 
vobject:ArrayList:0{modCount=rdx|DWORD,size=rdx|DWORD,elementData=r8|QWORD[.]} Ljava/util/ArrayList; rdx|DWORD rdx|DWORD r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:261] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B361"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B362" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 3500  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3502  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 3504  <|@ instruction r10|DWORD = MOVE input: int[-414227|0xfffffffffff9aded] <|@ <|@
      nr 3506  <|@ instruction JUMP ~[] destination: B361 -> B362 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B293"
    from_bci -1
    to_bci -1
    predecessors "B292" 
    successors "B351" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2880  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2882  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 2884  <|@ instruction r10|DWORD = MOVE input: int[-431379|0xfffffffffff96aed] <|@ <|@
      nr 2886  <|@ instruction r11|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr 2888  <|@ instruction r8|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2890  <|@ instruction JUMP ~[] destination: B293 -> B351 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B350"
    from_bci -1
    to_bci -1
    predecessors "B294" 
    successors "B351" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 3404  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3406  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 3408  <|@ instruction r10|DWORD = MOVE input: int[-431635|0xfffffffffff969ed] <|@ <|@
      nr 3410  <|@ instruction r11|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr 3412  <|@ instruction r8|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3414  <|@ instruction JUMP ~[] destination: B350 -> B351 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B239"
    from_bci -1
    to_bci -1
    predecessors "B234" 
    successors "B357" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2328  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2330  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 2332  <|@ instruction r10|DWORD = MOVE input: int[-447003|0xfffffffffff92de5] <|@ <|@
      nr 2334  <|@ instruction JUMP ~[] destination: B239 -> B357 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B357"
    from_bci -1
    to_bci -1
    predecessors "B240" "B239" "B356" "B355" "B352" "B244" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr 3468  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 3470  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 3472  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr 3474  <|@ st <@st|@reference-map: [r14:0, stack:40]
live-base-pointers: []
java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
stack: vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]} r13|DWORD 
locals: - - 
java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
locals: vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]} vobject:String:1{value=r14|QWORD[.],hash=int[0|0x0]} 
java.lang.String.split(String.java:2368) [bci: 246]
locals: - - stack:36|DWORD - - - - vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]} - - 
vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]} Ljava/util/ArrayList; stack:92|DWORD stack:92|DWORD stack:88|QWORD[.] 
vobject:String:1{value=r14|QWORD[.],hash=int[0|0x0]} Ljava/lang/String; r14|QWORD[.] int[0|0x0] 
>@ <|@ instruction DEOPT info [bci:9, 7, 246] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B240"
    from_bci -1
    to_bci -1
    predecessors "B233" 
    successors "B357" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2336  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2338  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@358913875] <|@ <|@
      nr 2340  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2342  <|@ instruction r10|DWORD = MOVE input: int[-446268|0xfffffffffff930c4] <|@ <|@
      nr 2344  <|@ instruction r13|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 2346  <|@ instruction JUMP ~[] destination: B240 -> B357 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B362" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   84  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   86  <|@ instruction r10|DWORD = MOVE input: int[-390675|0xfffffffffffa09ed] <|@ <|@
      nr   88  <|@ instruction JUMP ~[] destination: B8 -> B362 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B175" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1200  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1202  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1204  <|@ instruction r10|DWORD = MOVE input: int[-563809|0xfffffffffff7659f] <|@ <|@
      nr 1206  <|@ instruction r14|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1208  <|@ instruction rbx|DWORD = MOVE stack:96|DWORD moveKind: DWORD <|@ <|@
      nr 1210  <|@ instruction rcx|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1212  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1214  <|@ instruction JUMP ~[] destination: B126 -> B175 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B175"
    from_bci -1
    to_bci -1
    predecessors "B122" "B121" "B174" "B173" "B170" "B126" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr 1708  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 1710  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1712  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr 1714  <|@ st <@st|@reference-map: [r8:0, r13:0, r14:0]
live-base-pointers: []
java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
stack: vobject:ArrayList:0{modCount=rdx|DWORD,size=rdx|DWORD,elementData=r8|QWORD[.]} r9|DWORD 
locals: - - 
java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
locals: vobject:ArrayList:0{modCount=rdx|DWORD,size=rdx|DWORD,elementData=r8|QWORD[.]} r14|QWORD[.] 
java.lang.String.split(String.java:2353) [bci: 165]
locals: r13|QWORD[.] - int[0|0x0] rcx|DWORD - rbx|DWORD int[0|0x0] vobject:ArrayList:0{modCount=rdx|DWORD,size=rdx|DWORD,elementData=r8|QWORD[.]} - - 
vobject:ArrayList:0{modCount=rdx|DWORD,size=rdx|DWORD,elementData=r8|QWORD[.]} Ljava/util/ArrayList; rdx|DWORD rdx|DWORD r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:9, 7, 165] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B179"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B181" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1734  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1736  <|@ instruction r14|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1738  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1740  <|@ instruction JUMP ~[] destination: B179 -> B181 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B181"
    from_bci -1
    to_bci -1
    predecessors "B180" "B179" 
    successors "B182" 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1750  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1752  <|@ instruction JUMP ~[] destination: B181 -> B182 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B182"
    from_bci -1
    to_bci -1
    predecessors "B181" 
    successors "B183" 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1754  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1756  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@180539890] <|@ <|@
      nr 1758  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1760  <|@ instruction r10|DWORD = MOVE input: int[-421147|0xfffffffffff992e5] <|@ <|@
      nr 1762  <|@ instruction JUMP ~[] destination: B182 -> B183 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B183"
    from_bci -1
    to_bci -1
    predecessors "B29" "B182" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1764  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 1766  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1768  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr 1770  <|@ st <@st|@reference-map: [r13:0, stack:40]
live-base-pointers: []
java.lang.String.split(String.java:2351) [bci: 125]
locals: r13|QWORD[.] - int[0|0x0] stack:40|DWORD r14|DWORD - int[0|0x0] vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]} - - 
vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]} Ljava/util/ArrayList; stack:92|DWORD stack:92|DWORD stack:88|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:125] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B362" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  168  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  170  <|@ instruction r10|DWORD = MOVE input: int[-393747|0xfffffffffff9fded] <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B20 -> B362 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B362" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  154  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  156  <|@ instruction r10|DWORD = MOVE input: int[-394259|0xfffffffffff9fbed] <|@ <|@
      nr  158  <|@ instruction JUMP ~[] destination: B18 -> B362 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B347"
    from_bci -1
    to_bci -1
    predecessors "B302" 
    successors "B351" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 3364  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3366  <|@ instruction r11|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr 3368  <|@ instruction r8|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3370  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1144871021] <|@ <|@
      nr 3372  <|@ instruction r9|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3374  <|@ instruction r10|DWORD = MOVE input: int[-439827|0xfffffffffff949ed] <|@ <|@
      nr 3376  <|@ instruction rdx|DWORD = MOVE stack:100|DWORD moveKind: DWORD <|@ <|@
      nr 3378  <|@ instruction JUMP ~[] destination: B347 -> B351 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B362" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  126  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  128  <|@ instruction r10|DWORD = MOVE input: int[-393235|0xfffffffffff9ffed] <|@ <|@
      nr  130  <|@ instruction JUMP ~[] destination: B14 -> B362 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B341"
    from_bci -1
    to_bci -1
    predecessors "B339" 
    successors "B342" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 3302  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3304  <|@ instruction rcx|DWORD = MOVE input: int[-445971|0xfffffffffff931ed] <|@ <|@
      nr 3306  <|@ instruction JUMP ~[] destination: B341 -> B342 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B342"
    from_bci -1
    to_bci -1
    predecessors "B332" "B338" "B341" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 3308  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 3310  <|@ instruction MOV (x: [r15|QWORD + 668], y: rcx|DWORD) size: DWORD <|@ <|@
      nr 3312  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 3314  <|@ st <@st|@reference-map: [rax:0, r8:0]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - rax|QWORD[.] - rax|QWORD[.] vobject:ArrayList$SubList$1:0{cursor=r10|DWORD,lastRet=r9|DWORD,expectedModCount=stack:100|DWORD,val$index=int[0|0x0],val$offset=int[0|0x0],this$1=vobject:ArrayList$SubList:1{modCount=stack:100|DWORD,parentOffset=int[0|0x0],offset=int[0|0x0],size=r11|DWORD,parent=vobject:ArrayList:2{modCount=stack:100|DWORD,size=stack:100|DWORD,elementData=r8|QWORD[.]},this$0=vobject:ArrayList:2}} r10|DWORD 
java.lang.String.split(String.java:2378) [bci: 307]
locals: - - - - - - - - - - 
vobject:ArrayList$SubList$1:0{cursor=r10|DWORD,lastRet=r9|DWORD,expectedModCount=stack:100|DWORD,val$index=int[0|0x0],val$offset=int[0|0x0],this$1=vobject:ArrayList$SubList:1{modCount=stack:100|DWORD,parentOffset=int[0|0x0],offset=int[0|0x0],size=r11|DWORD,parent=vobject:ArrayList:2{modCount=stack:100|DWORD,size=stack:100|DWORD,elementData=r8|QWORD[.]},this$0=vobject:ArrayList:2}} Ljava/util/ArrayList$SubList$1; r10|DWORD r9|DWORD stack:100|DWORD int[0|0x0] int[0|0x0] vobject:ArrayList$SubList:1{modCount=stack:100|DWORD,parentOffset=int[0|0x0],offset=int[0|0x0],size=r11|DWORD,parent=vobject:ArrayList:2{modCount=stack:100|DWORD,size=stack:100|DWORD,elementData=r8|QWORD[.]},this$0=vobject:ArrayList:2} 
vobject:ArrayList$SubList:1{modCount=stack:100|DWORD,parentOffset=int[0|0x0],offset=int[0|0x0],size=r11|DWORD,parent=vobject:ArrayList:2{modCount=stack:100|DWORD,size=stack:100|DWORD,elementData=r8|QWORD[.]},this$0=vobject:ArrayList:2} Ljava/util/ArrayList$SubList; stack:100|DWORD int[0|0x0] int[0|0x0] r11|DWORD vobject:ArrayList:2{modCount=stack:100|DWORD,size=stack:100|DWORD,elementData=r8|QWORD[.]} vobject:ArrayList:2{modCount=stack:100|DWORD,size=stack:100|DWORD,elementData=r8|QWORD[.]} 
vobject:ArrayList:2{modCount=stack:100|DWORD,size=stack:100|DWORD,elementData=r8|QWORD[.]} Ljava/util/ArrayList; stack:100|DWORD stack:100|DWORD r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:42, 307] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B362" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  140  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  142  <|@ instruction r10|DWORD = MOVE input: int[-392723|0xfffffffffffa01ed] <|@ <|@
      nr  144  <|@ instruction JUMP ~[] destination: B16 -> B362 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B244"
    from_bci -1
    to_bci -1
    predecessors "B243" 
    successors "B357" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2384  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2386  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 2388  <|@ instruction r10|DWORD = MOVE input: int[-585825|0xfffffffffff70f9f] <|@ <|@
      nr 2390  <|@ instruction JUMP ~[] destination: B244 -> B357 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B170"
    from_bci -1
    to_bci -1
    predecessors "B168" 
    successors "B175" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1634  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1636  <|@ instruction stack:104|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1638  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1640  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@358913875] <|@ <|@
      nr 1642  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1644  <|@ instruction r10|DWORD = MOVE input: int[-427836|0xfffffffffff978c4] <|@ <|@
      nr 1646  <|@ instruction r9|DWORD = MOVE stack:104|DWORD moveKind: DWORD <|@ <|@
      nr 1648  <|@ instruction r14|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1650  <|@ instruction rbx|DWORD = MOVE stack:96|DWORD moveKind: DWORD <|@ <|@
      nr 1652  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1654  <|@ instruction rdx|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 1656  <|@ instruction rcx|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1658  <|@ instruction JUMP ~[] destination: B170 -> B175 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B362" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   98  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  100  <|@ instruction r10|DWORD = MOVE input: int[-392211|0xfffffffffffa03ed] <|@ <|@
      nr  102  <|@ instruction JUMP ~[] destination: B10 -> B362 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B332"
    from_bci -1
    to_bci -1
    predecessors "B331" 
    successors "B342" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 3240  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3242  <|@ instruction rcx|DWORD = MOVE input: int[-439315|0xfffffffffff94bed] <|@ <|@
      nr 3244  <|@ instruction JUMP ~[] destination: B332 -> B342 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B352"
    from_bci -1
    to_bci -1
    predecessors "B286" 
    successors "B357" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 3424  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3426  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@358913875] <|@ <|@
      nr 3428  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3430  <|@ instruction r10|DWORD = MOVE input: int[-449852|0xfffffffffff922c4] <|@ <|@
      nr 3432  <|@ instruction r13|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 3434  <|@ instruction JUMP ~[] destination: B352 -> B357 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B356"
    from_bci -1
    to_bci -1
    predecessors "B241" 
    successors "B357" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 3460  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3462  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 3464  <|@ instruction r10|DWORD = MOVE input: int[-449299|0xfffffffffff924ed] <|@ <|@
      nr 3466  <|@ instruction JUMP ~[] destination: B356 -> B357 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B355"
    from_bci -1
    to_bci -1
    predecessors "B242" 
    successors "B357" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 3452  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3454  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 3456  <|@ instruction r10|DWORD = MOVE input: int[-450331|0xfffffffffff920e5] <|@ <|@
      nr 3458  <|@ instruction JUMP ~[] destination: B355 -> B357 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B348"
    from_bci -1
    to_bci -1
    predecessors "B298" 
    successors "B351" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 3380  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3382  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 3384  <|@ instruction r10|DWORD = MOVE input: int[-435491|0xfffffffffff95add] <|@ <|@
      nr 3386  <|@ instruction r11|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr 3388  <|@ instruction r8|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3390  <|@ instruction JUMP ~[] destination: B348 -> B351 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B180"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B181" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1742  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1744  <|@ instruction r14|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1746  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1748  <|@ instruction JUMP ~[] destination: B180 -> B181 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B174"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B175" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1692  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1694  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1696  <|@ instruction r10|DWORD = MOVE input: int[-427283|0xfffffffffff97aed] <|@ <|@
      nr 1698  <|@ instruction r14|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1700  <|@ instruction rbx|DWORD = MOVE stack:96|DWORD moveKind: DWORD <|@ <|@
      nr 1702  <|@ instruction rcx|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1704  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1706  <|@ instruction JUMP ~[] destination: B174 -> B175 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B360"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B362" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 3488  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3490  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1154356070] <|@ <|@
      nr 3492  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3494  <|@ instruction r10|DWORD = MOVE input: int[-460051|0xfffffffffff8faed] <|@ <|@
      nr 3496  <|@ instruction r14|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 3498  <|@ instruction JUMP ~[] destination: B360 -> B362 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B349"
    from_bci -1
    to_bci -1
    predecessors "B295" 
    successors "B351" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 3392  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3394  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 3396  <|@ instruction r10|DWORD = MOVE input: int[-432667|0xfffffffffff965e5] <|@ <|@
      nr 3398  <|@ instruction r11|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr 3400  <|@ instruction r8|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3402  <|@ instruction JUMP ~[] destination: B349 -> B351 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B362" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  202  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  204  <|@ instruction r10|DWORD = MOVE input: int[-417555|0xfffffffffff9a0ed] <|@ <|@
      nr  206  <|@ instruction JUMP ~[] destination: B25 -> B362 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  450  <|@ instruction r14|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  452  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  454  <|@ instruction MOV [r15|QWORD + 668] y: -430099 size: DWORD <|@ <|@
      nr  456  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  458  <|@ st <@st|@reference-map: [r13:0, stack:40]
live-base-pointers: []
java.lang.String.substring(String.java:1969) [bci: 65]
locals: r13|QWORD[.] r14|DWORD - int[0|0x0] 
java.lang.String.split(String.java:2353) [bci: 162]
stack: vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]} 
locals: r13|QWORD[.] - int[0|0x0] stack:40|DWORD - stack:96|DWORD int[0|0x0] vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]} - - 
vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]} Ljava/util/ArrayList; stack:92|DWORD stack:92|DWORD stack:88|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:65, 162] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B362" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   56  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   58  <|@ instruction r10|DWORD = MOVE input: int[-389651|0xfffffffffffa0ded] <|@ <|@
      nr   60  <|@ instruction JUMP ~[] destination: B4 -> B362 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  354  <|@ instruction stack:96|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  356  <|@ instruction r14|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  358  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction r10|DWORD = MOVE input: int[-423443|0xfffffffffff989ed] <|@ <|@
      nr  362  <|@ instruction JUMP ~[] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B39" "B41" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  366  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  368  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  370  <|@ st <@st|@reference-map: [rsi:0, r13:0, stack:40]
live-base-pointers: []
java.lang.String.indexOf(String.java:1558) [bci: 37]
locals: - stack:40|DWORD - r8|DWORD rsi|QWORD[.] stack:96|DWORD 
java.lang.String.split(String.java:2351) [bci: 129]
locals: r13|QWORD[.] - int[0|0x0] stack:40|DWORD r14|DWORD - int[0|0x0] vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]} - - 
vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]} Ljava/util/ArrayList; stack:92|DWORD stack:92|DWORD stack:88|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37, 129] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B175" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1136  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1138  <|@ instruction stack:104|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1140  <|@ instruction stack:112|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1142  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1144  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@358913875] <|@ <|@
      nr 1146  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1148  <|@ instruction r10|DWORD = MOVE input: int[-424252|0xfffffffffff986c4] <|@ <|@
      nr 1150  <|@ instruction r9|DWORD = MOVE stack:104|DWORD moveKind: DWORD <|@ <|@
      nr 1152  <|@ instruction r14|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1154  <|@ instruction rbx|DWORD = MOVE stack:96|DWORD moveKind: DWORD <|@ <|@
      nr 1156  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1158  <|@ instruction rdx|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 1160  <|@ instruction rcx|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1162  <|@ instruction JUMP ~[] destination: B122 -> B175 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B362" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  112  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  114  <|@ instruction r10|DWORD = MOVE input: int[-391699|0xfffffffffffa05ed] <|@ <|@
      nr  116  <|@ instruction JUMP ~[] destination: B12 -> B362 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  536  <|@ instruction stack:104|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  538  <|@ instruction r14|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  540  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  542  <|@ instruction r10|DWORD = MOVE input: int[-430355|0xfffffffffff96eed] <|@ <|@
      nr  544  <|@ instruction JUMP ~[] destination: B59 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B195"
    from_bci -1
    to_bci -1
    predecessors "B194" 
    successors "B203" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1876  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1878  <|@ instruction r10|DWORD = MOVE input: int[-452627|0xfffffffffff917ed] <|@ <|@
      nr 1880  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1882  <|@ instruction JUMP ~[] destination: B195 -> B203 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B173"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors "B175" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1676  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1678  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1680  <|@ instruction r10|DWORD = MOVE input: int[-428315|0xfffffffffff976e5] <|@ <|@
      nr 1682  <|@ instruction r14|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1684  <|@ instruction rbx|DWORD = MOVE stack:96|DWORD moveKind: DWORD <|@ <|@
      nr 1686  <|@ instruction rcx|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1688  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1690  <|@ instruction JUMP ~[] destination: B173 -> B175 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  334  <|@ instruction stack:96|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  336  <|@ instruction r14|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  338  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  340  <|@ instruction r10|DWORD = MOVE input: int[-423187|0xfffffffffff98aed] <|@ <|@
      nr  342  <|@ instruction JUMP ~[] destination: B39 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B306"
    from_bci -1
    to_bci -1
    predecessors "B305" 
    successors "B351" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2974  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2976  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 2978  <|@ instruction r10|DWORD = MOVE input: int[-438803|0xfffffffffff94ded] <|@ <|@
      nr 2980  <|@ instruction r11|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr 2982  <|@ instruction r8|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2984  <|@ instruction JUMP ~[] destination: B306 -> B351 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B338"
    from_bci -1
    to_bci -1
    predecessors "B335" 
    successors "B342" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 3286  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3288  <|@ instruction rcx|DWORD = MOVE input: int[-445739|0xfffffffffff932d5] <|@ <|@
      nr 3290  <|@ instruction JUMP ~[] destination: B338 -> B342 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B345"
    from_bci -1
    to_bci -1
    predecessors "B304" 
    successors "B351" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 3332  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3334  <|@ instruction r11|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr 3336  <|@ instruction r8|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3338  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1976730038] <|@ <|@
      nr 3340  <|@ instruction r9|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3342  <|@ instruction r10|DWORD = MOVE input: int[-442907|0xfffffffffff93de5] <|@ <|@
      nr 3344  <|@ instruction rdx|DWORD = MOVE stack:100|DWORD moveKind: DWORD <|@ <|@
      nr 3346  <|@ instruction JUMP ~[] destination: B345 -> B351 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B362" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   72  <|@ instruction r10|DWORD = MOVE input: int[-391187|0xfffffffffffa07ed] <|@ <|@
      nr   74  <|@ instruction JUMP ~[] destination: B6 -> B362 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B175" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1120  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1122  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1124  <|@ instruction r10|DWORD = MOVE input: int[-424987|0xfffffffffff983e5] <|@ <|@
      nr 1126  <|@ instruction rbx|DWORD = MOVE stack:96|DWORD moveKind: DWORD <|@ <|@
      nr 1128  <|@ instruction rdx|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 1130  <|@ instruction rcx|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1132  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1134  <|@ instruction JUMP ~[] destination: B121 -> B175 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B359"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B362" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 3480  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3482  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 3484  <|@ instruction r10|DWORD = MOVE input: int[-417811|0xfffffffffff99fed] <|@ <|@
      nr 3486  <|@ instruction JUMP ~[] destination: B359 -> B362 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B183" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  254  <|@ instruction r14|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  256  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  258  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  260  <|@ instruction r10|DWORD = MOVE input: int[-420371|0xfffffffffff995ed] <|@ <|@
      nr  262  <|@ instruction JUMP ~[] destination: B29 -> B183 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B362" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  182  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  184  <|@ instruction r10|DWORD = MOVE input: int[-364819|0xfffffffffffa6eed] <|@ <|@
      nr  186  <|@ instruction JUMP ~[] destination: B22 -> B362 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_3      
     2: aload_1       
     3: getfield      #1          // value:char[]
     6: arraylength   
     7: iconst_1      
     8: if_icmpne     27
    11: ldc           #87         // ".$|()[{^?*+\"
    13: aload_1       
    14: iconst_0      
    15: invokevirtual #73         // charAt:(int)char
    18: dup           
    19: istore_3      
    20: invokevirtual #74         // indexOf:(int)int
    23: iconst_m1     
    24: if_icmpeq     87
    27: aload_1       
    28: invokevirtual #61         // length:()int
    31: iconst_2      
    32: if_icmpne     316
    35: aload_1       
    36: iconst_0      
    37: invokevirtual #73         // charAt:(int)char
    40: bipush        92
    42: if_icmpne     316
    45: aload_1       
    46: iconst_1      
    47: invokevirtual #73         // charAt:(int)char
    50: dup           
    51: istore_3      
    52: bipush        48
    54: isub          
    55: bipush        57
    57: iload_3       
    58: isub          
    59: ior           
    60: ifge          316
    63: iload_3       
    64: bipush        97
    66: isub          
    67: bipush        122
    69: iload_3       
    70: isub          
    71: ior           
    72: ifge          316
    75: iload_3       
    76: bipush        65
    78: isub          
    79: bipush        90
    81: iload_3       
    82: isub          
    83: ior           
    84: ifge          316
    87: iload_3       
    88: ldc           #90         // 55296
    90: if_icmplt     99
    93: iload_3       
    94: ldc           #91         // 57343
    96: if_icmple     316
    99: iconst_0      
   100: istore        4
   102: iconst_0      
   103: istore        5
   105: iload_2       
   106: ifle          113
   109: iconst_1      
   110: goto          114
   113: iconst_0      
   114: istore        6
   116: new           #92         // java.util.ArrayList
   119: dup           
   120: invokespecial #75         // java.util.ArrayList.<init>:()void
   123: astore        7
   125: aload_0       
   126: iload_3       
   127: iload         4
   129: invokevirtual #49         // indexOf:(int, int)int
   132: dup           
   133: istore        5
   135: iconst_m1     
   136: if_icmpeq     205
   139: iload         6
   141: ifeq          155
   144: aload         7
   146: invokevirtual #76         // java.util.ArrayList.size:()int
   149: iload_2       
   150: iconst_1      
   151: isub          
   152: if_icmpge     178
   155: aload         7
   157: aload_0       
   158: iload         4
   160: iload         5
   162: invokevirtual #60         // substring:(int, int)java.lang.String
   165: invokevirtual #77         // java.util.ArrayList.add:(java.lang.Object)boolean
   168: pop           
   169: iload         5
   171: iconst_1      
   172: iadd          
   173: istore        4
   175: goto          125
   178: aload         7
   180: aload_0       
   181: iload         4
   183: aload_0       
   184: getfield      #1          // value:char[]
   187: arraylength   
   188: invokevirtual #60         // substring:(int, int)java.lang.String
   191: invokevirtual #77         // java.util.ArrayList.add:(java.lang.Object)boolean
   194: pop           
   195: aload_0       
   196: getfield      #1          // value:char[]
   199: arraylength   
   200: istore        4
   202: goto          205
   205: iload         4
   207: ifne          219
   210: iconst_1      
   211: anewarray     #43         // java.lang.String
   214: dup           
   215: iconst_0      
   216: aload_0       
   217: aastore       
   218: areturn       
   219: iload         6
   221: ifeq          233
   224: aload         7
   226: invokevirtual #76         // java.util.ArrayList.size:()int
   229: iload_2       
   230: if_icmpge     250
   233: aload         7
   235: aload_0       
   236: iload         4
   238: aload_0       
   239: getfield      #1          // value:char[]
   242: arraylength   
   243: invokevirtual #60         // substring:(int, int)java.lang.String
   246: invokevirtual #77         // java.util.ArrayList.add:(java.lang.Object)boolean
   249: pop           
   250: aload         7
   252: invokevirtual #76         // java.util.ArrayList.size:()int
   255: istore        8
   257: iload_2       
   258: ifne          290
   261: iload         8
   263: ifle          290
   266: aload         7
   268: iload         8
   270: iconst_1      
   271: isub          
   272: invokevirtual #78         // java.util.ArrayList.get:(int)java.lang.Object
   275: checkcast     #43         // java.lang.String
   278: invokevirtual #61         // length:()int
   281: ifne          290
   284: iinc          
   287: goto          261
   290: iload         8
   292: anewarray     #43         // java.lang.String
   295: astore        9
   297: aload         7
   299: iconst_0      
   300: iload         8
   302: invokevirtual #79         // java.util.ArrayList.subList:(int, int)java.util.List
   305: aload         9
   307: invokeinterface#80, 2      // java.util.List.toArray:(java.lang.Object[])java.lang.Object[]
   312: checkcast     #99         // java.lang.String[]
   315: areturn       
   316: aload_1       
   317: invokestatic  #67         // java.util.regex.Pattern.compile:(java.lang.String)java.util.regex.Pattern
   320: aload_0       
   321: iload_2       
   322: invokevirtual #81         // java.util.regex.Pattern.split:(java.lang.CharSequence, int)java.lang.String[]
   325: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B361" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7332283d slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction r14|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction stack:36|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr   14  <|@ st <@st|@reference-map: [rdx:0, r13:0, stack:96]
live-base-pointers: []
java.lang.String.split(String.java:2336) [bci: 0]
locals: r13|QWORD[.] rdx|QWORD[.] r14|DWORD - - - - - - - 
>@ <|@ instruction rsi|DWORD[.] = MOV [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   16  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r13:0, stack:96]
live-base-pointers: []
java.lang.String.split(String.java:2336) [bci: 0]
locals: r13|QWORD[.] rdx|QWORD[.] r14|DWORD - - - - - - - 
>@ <|@ instruction rcx|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   18  <|@ instruction xmm0|V64_DWORD[..] = L oc: SIMD<null,null> <|@ <|@
      nr   20  <|@ instruction xmm1|V128_DWORD[....] = L oc: SIMD<null,null,null,null> <|@ <|@
      nr   22  <|@ instruction xmm2|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null> <|@ <|@
      nr   24  <|@ instruction r10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   26  <|@ instruction CMP rcx|DWORD y: 1 size: DWORD <|@ <|@
      nr   28  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B361 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction r11|DWORD = MOVZX [rsi|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   34  <|@ instruction stack:40|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction CMP r11|DWORD y: 36 size: DWORD <|@ <|@
      nr   38  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction CMP r11|DWORD y: 46 size: DWORD <|@ <|@
      nr   52  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction CMP r11|DWORD y: 40 size: DWORD <|@ <|@
      nr   66  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   78  <|@ instruction CMP r11|DWORD y: 124 size: DWORD <|@ <|@
      nr   80  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   92  <|@ instruction CMP r11|DWORD y: 91 size: DWORD <|@ <|@
      nr   94  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  106  <|@ instruction CMP r11|DWORD y: 41 size: DWORD <|@ <|@
      nr  108  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  120  <|@ instruction CMP r11|DWORD y: 94 size: DWORD <|@ <|@
      nr  122  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  134  <|@ instruction CMP r11|DWORD y: 123 size: DWORD <|@ <|@
      nr  136  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  148  <|@ instruction CMP r11|DWORD y: 42 size: DWORD <|@ <|@
      nr  150  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  162  <|@ instruction CMP r11|DWORD y: 63 size: DWORD <|@ <|@
      nr  164  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  176  <|@ instruction CMP r11|DWORD y: 43 size: DWORD <|@ <|@
      nr  178  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B360" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  190  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  192  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B360 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  196  <|@ instruction CMP r11|DWORD y: 92 size: DWORD <|@ <|@
      nr  198  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B359" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  210  <|@ instruction CMP r11|DWORD y: 55296 size: DWORD <|@ <|@
      nr  212  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B26 -> B27 falseDestination: B26 -> B359 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  216  <|@ instruction rsi|DWORD[.] = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  218  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r13:0, stack:96]
live-base-pointers: []
java.lang.String.split(String.java:2336) [bci: 0]
locals: r13|QWORD[.] rdx|QWORD[.] r14|DWORD - - - - - - - 
>@ <|@ instruction r8|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  220  <|@ instruction stack:44|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  222  <|@ instruction r9|QWORD = MOV r8|DWORD size: DWORD <|@ <|@
      nr  224  <|@ instruction stack:56|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  226  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@120cc8dc encoding: base: 0 shift: 3 <|@ <|@
      nr  228  <|@ instruction stack:64|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction rbx|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  232  <|@ instruction stack:72|QWORD = MOVE rbx|QWORD moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction rdi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Object[0]{}] <|@ <|@
      nr  236  <|@ instruction stack:80|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction stack:88|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction stack:92|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  242  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  244  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B169" "B120" 
    successors "B29" "B30" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4614323782818816755
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL numbPhis: 3 align: true label: ? <|@ <|@
      nr  248  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  250  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B185" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4614323782818816755
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  266  <|@ instruction rdx|DWORD = SUB (x: r8|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  268  <|@ instruction CMP (x: r8|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  270  <|@ instruction BRANCH trueDestinationProbability: 0.7686826237895121 condition: > trueDestination: B30 -> B31 falseDestination: B30 -> B185 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B181" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612671861231424105
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  274  <|@ instruction r14|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  276  <|@ instruction r13|QWORD = MOVSXD rdx|DWORD size: QWORD <|@ <|@
      nr  278  <|@ instruction r13|QWORD = DEC r13|QWORD size: QWORD <|@ <|@
      nr  280  <|@ instruction r14|QWORD = ADD (x: r14|QWORD, y: r13|QWORD) size: QWORD <|@ <|@
      nr  282  <|@ instruction CMP (x: r9|QWORD, y: r14|QWORD) size: QWORD <|@ <|@
      nr  284  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B181 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B181" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612671861231424105
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  288  <|@ instruction CMP (x: r8|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  290  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B32 -> B33 falseDestination: B32 -> B181 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612671861231424105
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  294  <|@ instruction r13|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  296  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B177" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4629327619026861556
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  306  <|@ instruction r14|DWORD = MOVZX [rsi|QWORD[.] + r13|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  308  <|@ instruction CMP (x: r14|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  310  <|@ instruction BRANCH trueDestinationProbability: 0.0015918580565381646 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B177 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B177"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B34" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4629313874285517559
    begin_IR
      LIR
      nr 1720  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1722  <|@ instruction r13|DWORD = INC r13|DWORD size: DWORD <|@ <|@
      nr 1724  <|@ instruction JUMP ~[] destination: B177 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B177" 
    successors "B35" "B185" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4629850235763156642
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  300  <|@ instruction CMP (x: r8|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  302  <|@ instruction BRANCH trueDestinationProbability: 0.9277482167917486 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B185 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B185" "B38" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587198128603920715
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  314  <|@ instruction CMP r13|DWORD y: -1 size: DWORD <|@ <|@
      nr  316  <|@ instruction BRANCH trueDestinationProbability: 0.315317887137174 condition: = trueDestination: B36 -> B185 falseDestination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584979139650404691
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  328  <|@ instruction CMP (x: r13|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  330  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584979139650404691
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  346  <|@ instruction r14|DWORD = SUB (x: r13|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  348  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  350  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B40 -> B41 falseDestination: B40 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B44" "B49" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584979139650404691
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  374  <|@ instruction stack:100|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  376  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  378  <|@ instruction BRANCH trueDestinationProbability: 0.18334585698550698 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B51" "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583527021126394577
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  426  <|@ instruction CMP r14|DWORD y: 1 size: DWORD <|@ <|@
      nr  428  <|@ instruction BRANCH trueDestinationProbability: 0.09284041465770032 condition: < trueDestination: B49 -> B51 falseDestination: B49 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B46" "B49" 
    successors "B59" "B60" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584251046621639566
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  420  <|@ instruction stack:96|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  528  <|@ instruction r13|DWORD = SUB (x: r8|DWORD, ~y: r14|DWORD) size: DWORD <|@ <|@
      nr  530  <|@ instruction CMP (x: r10|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  532  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B58 -> B59 falseDestination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584251046621639566
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  548  <|@ instruction CMP (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  550  <|@ instruction BRANCH trueDestinationProbability: 9.999999999998899E-5 condition: > trueDestination: B60 -> B61 falseDestination: B60 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B64" "B68" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584250187239118245
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  574  <|@ instruction r13|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  576  <|@ instruction r10|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  578  <|@ instruction CMP r14|DWORD y: 16777215 size: DWORD <|@ <|@
      nr  580  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B63 -> B64 falseDestination: B63 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B68" "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583390890656048814
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  584  <|@ instruction r11|DWORD = SHL r14|DWORD size: DWORD <|@ <|@
      nr  586  <|@ instruction r11|DWORD = LEA [r11|DWORD + 23] size: DWORD <|@ <|@
      nr  588  <|@ instruction r11|DWORD = AND r11|DWORD y: -8 size: DWORD <|@ <|@
      nr  590  <|@ instruction r11|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  592  <|@ instruction r8|QWORD = ADD (x: r11|QWORD, y: r13|QWORD) size: QWORD <|@ <|@
      nr  594  <|@ instruction CMP (x: r8|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  596  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B64 -> B68 falseDestination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583313553963572565
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  606  <|@ instruction MOV (x: [r15|QWORD + 96], y: r8|QWORD) size: QWORD <|@ <|@
      nr  608  <|@ instruction AMD64PREFETCH ~[r11|QWORD + r13|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  610  <|@ instruction AMD64PREFETCH ~[r11|QWORD + r13|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  612  <|@ instruction AMD64PREFETCH ~[r11|QWORD + r13|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  614  <|@ instruction AMD64PREFETCH ~[r11|QWORD + r13|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  616  <|@ instruction MOV (x: [r13|QWORD + 12], y: r14|DWORD) size: DWORD <|@ <|@
      nr  618  <|@ instruction MOV [r13|QWORD] y: 1 size: QWORD <|@ <|@
      nr  620  <|@ instruction MOV [r13|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr  622  <|@ instruction r13|QWORD[.] = MOVE r13|QWORD moveKind: QWORD <|@ <|@
      nr  624  <|@ instruction rax|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction r13|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  628  <|@ instruction JUMP ~[] destination: B66 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B66" "B68" 
    successors "B88" "B71" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584250187239118245
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  652  <|@ instruction CMP (x: r14|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  654  <|@ instruction rsi|DWORD = CMOVE (falseValue: r14|DWORD, ~trueValue: r13|DWORD) condition: > <|@ <|@
      nr  656  <|@ instruction rsi|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr  658  <|@ instruction CMP rsi|QWORD y: 1 size: QWORD <|@ <|@
      nr  664  <|@ instruction r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  660  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B69 -> B88 falseDestination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B76" "B74" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579746587611747749
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  672  <|@ instruction rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  674  <|@ instruction rcx|QWORD = MOVSXD stack:100|DWORD size: QWORD <|@ <|@
      nr  676  <|@ instruction rcx|QWORD[.] = LEA [r13|QWORD[.] + rcx|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  678  <|@ instruction r10|QWORD = LEA [rsi|QWORD - 16] size: QWORD <|@ <|@
      nr  680  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  686  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  682  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B71 -> B76 falseDestination: B71 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B71" "B74" 
    successors "B79" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579746587611747749
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  714  <|@ instruction r10|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr  716  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  718  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B76 -> B79 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577598346154074172
    begin_IR
      LIR
      nr  724  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  726  <|@ instruction xmm0|V128_WORD = H [rcx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr  728  <|@ instruction J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  730  <|@ instruction r10|QWORD = LEA [r11|QWORD + 8] size: QWORD <|@ <|@
      nr  732  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  734  <|@ instruction JUMP ~[] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B76" 
    successors "B82" "B81" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579746587611747749
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  738  <|@ instruction r10|QWORD = LEA [rsi|QWORD - 4] size: QWORD <|@ <|@
      nr  740  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  742  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B79 -> B82 falseDestination: B79 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577598346154074172
    begin_IR
      LIR
      nr  748  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  750  <|@ instruction xmm0|V64_WORD = H [rcx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr  752  <|@ instruction J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  754  <|@ instruction r10|QWORD = LEA [r11|QWORD + 4] size: QWORD <|@ <|@
      nr  756  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  758  <|@ instruction JUMP ~[] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" "B79" 
    successors "B85" "B84" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579746587611747749
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  762  <|@ instruction r10|QWORD = LEA [rsi|QWORD - 2] size: QWORD <|@ <|@
      nr  764  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  766  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B82 -> B85 falseDestination: B82 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577598346154074172
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  774  <|@ instruction xmm0|V32_WORD = H [rcx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr  776  <|@ instruction J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  778  <|@ instruction r10|QWORD = LEA [r11|QWORD + 2] size: QWORD <|@ <|@
      nr  780  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  782  <|@ instruction JUMP ~[] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B82" 
    successors "B88" "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579746587611747749
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  786  <|@ instruction r10|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr  788  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  790  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B85 -> B88 falseDestination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577598346154074172
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  798  <|@ instruction rcx|DWORD = MOVSX [rcx|QWORD[.] + r11|QWORD * 2] size: DWORD <|@ <|@
      nr  800  <|@ instruction MOV (x: [rdx|QWORD[.] + r11|QWORD * 2], y: rcx|DWORD) size: WORD <|@ <|@
      nr  802  <|@ instruction JUMP ~[] destination: B87 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B69" "B87" "B85" 
    successors "B89" "B108" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584250187239118245
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  806  <|@ instruction rdx|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr  808  <|@ instruction CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  810  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B88 -> B89 falseDestination: B88 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B88" "B105" "B103" 
    successors "B109" "B110" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584250187239118245
    begin_IR
      LIR
      nr  950  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  952  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  954  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr  956  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  958  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B108 -> B109 falseDestination: B108 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584164257580811302
    begin_IR
      LIR
      nr  988  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  990  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  992  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0 <|@ <|@
      nr  994  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  998  <|@ instruction JUMP ~[] destination: B110 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" "B109" 
    successors "B112" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584250187239118245
    begin_IR
      LIR
      nr 1000  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  996  <|@ instruction r10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr 1002  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1004  <|@ instruction rcx|QWORD = MOV [r10|QWORD + 168] size: QWORD <|@ <|@
      nr 1006  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD <|@ <|@
      nr 1008  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr 1010  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@120cc8dc encoding: base: 0 shift: 3 <|@ <|@
      nr 1012  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr 1014  <|@ instruction MOV (x: [rsi|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr 1016  <|@ instruction r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1018  <|@ instruction rdi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1020  <|@ instruction JUMP ~[] destination: B111 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B45" "B56" "B111" 
    successors "B113" "B116" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584978709959144030
    begin_IR
      LIR
      nr 1022  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1024  <|@ instruction r11|DWORD = INC stack:92|DWORD size: DWORD <|@ <|@
      nr 1026  <|@ instruction CMP (x: rdi|QWORD[.], y: stack:88|QWORD[.]) size: QWORD <|@ <|@
      nr 1028  <|@ instruction BRANCH trueDestinationProbability: 0.2066504369952622 condition: = trueDestination: B112 -> B113 falseDestination: B112 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B117" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583301761552313477
    begin_IR
      LIR
      nr 1052  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1054  <|@ instruction r9|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1058  <|@ instruction JUMP ~[] destination: B116 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" "B114" "B115" 
    successors "B118" "B123" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584978709959144031
    begin_IR
      LIR
      nr 1060  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1056  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1062  <|@ instruction rbx|DWORD = MOV [r8|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1064  <|@ instruction rcx|DWORD = MOV [r8|QWORD[.] + 8] size: DWORD <|@ <|@
      nr 1066  <|@ instruction rsi|DWORD = SUB (x: r9|DWORD, ~y: rbx|DWORD) size: DWORD <|@ <|@
      nr 1068  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: r14|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@120cc8dc encoding: base: 0 shift: 3 <|@ <|@
      nr 1070  <|@ instruction rbp|DWORD = INC stack:96|DWORD size: DWORD <|@ <|@
      nr 1072  <|@ instruction CMP rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr 1074  <|@ instruction BRANCH trueDestinationProbability: 0.7754412955005789 condition: < trueDestination: B117 -> B118 falseDestination: B117 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors "B119" "B122" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583129201465024141
    begin_IR
      LIR
      nr 1076  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1078  <|@ instruction CMP rcx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr 1080  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B118 -> B119 falseDestination: B118 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B120" "B121" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583129201465024141
    begin_IR
      LIR
      nr 1082  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1084  <|@ instruction CMP (x: rbx|DWORD, y: stack:92|DWORD) size: DWORD <|@ <|@
      nr 1086  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B119 -> B120 falseDestination: B119 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4583129201465024141
    begin_IR
      LIR
      nr 1088  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1090  <|@ instruction rdx|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 1092  <|@ instruction rbx|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr 1094  <|@ instruction MOV (x: [r8|QWORD[.] + rdx|DWORD * 4 + 16], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr 1096  <|@ instruction rsi|QWORD[.] = LEA [r8|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr 1098  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1100  <|@ instruction MOVB (x: [rsi|QWORD[*] + rbx|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 1102  <|@ st <@st|@reference-map: [r8:0, r13:0, r14:0, stack:48, stack:64, stack:96]
live-base-pointers: []
java.util.ArrayList.add(ArrayList.java:464) [bci: 27]
locals: vobject:ArrayList:0{modCount=r11|DWORD,size=r11|DWORD,elementData=r8|QWORD[.]} r14|QWORD[.] 
java.lang.String.split(String.java:2353) [bci: 165]
locals: stack:32|QWORD[.] - int[0|0x0] stack:40|DWORD - stack:96|DWORD int[0|0x0] vobject:ArrayList:0{modCount=r11|DWORD,size=r11|DWORD,elementData=r8|QWORD[.]} - - 
vobject:ArrayList:0{modCount=r11|DWORD,size=r11|DWORD,elementData=r8|QWORD[.]} Ljava/util/ArrayList; r11|DWORD r11|DWORD r8|QWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:27, 165] <|@ <|@
      nr 1104  <|@ instruction stack:88|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1106  <|@ instruction stack:92|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1108  <|@ instruction r10|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1110  <|@ instruction rsi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1112  <|@ instruction r9|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr 1114  <|@ instruction r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1116  <|@ instruction r11|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1118  <|@ instruction JUMP ~[] destination: B120 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B90" "B91" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579746587611747749
    begin_IR
      LIR
      nr  812  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  814  <|@ instruction rcx|QWORD[.] = LEA [rax|QWORD[.] + rsi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  816  <|@ instruction rdx|QWORD = SUB (x: rdx|QWORD, ~y: rsi|QWORD) size: QWORD <|@ <|@
      nr  818  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 16] size: QWORD <|@ <|@
      nr  820  <|@ instruction TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  822  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B89 -> B90 falseDestination: B89 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B94" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577598346154074172
    begin_IR
      LIR
      nr  824  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  826  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  828  <|@ instruction JUMP ~[] destination: B90 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B90" "B92" 
    successors "B97" "B96" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579746587611747749
    begin_IR
      LIR
      nr  852  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  854  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  856  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  858  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B94 -> B97 falseDestination: B94 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577598346154074172
    begin_IR
      LIR
      nr  864  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  866  <|@ instruction xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr  868  <|@ instruction J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  870  <|@ instruction rsi|QWORD = LEA [r10|QWORD + 8] size: QWORD <|@ <|@
      nr  872  <|@ instruction r10|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  874  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" "B94" 
    successors "B100" "B99" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579746587611747749
    begin_IR
      LIR
      nr  876  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  878  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 4] size: QWORD <|@ <|@
      nr  880  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  882  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B97 -> B100 falseDestination: B97 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B100" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577598346154074172
    begin_IR
      LIR
      nr  888  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  890  <|@ instruction xmm0|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  892  <|@ instruction J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  894  <|@ instruction rsi|QWORD = LEA [r10|QWORD + 4] size: QWORD <|@ <|@
      nr  896  <|@ instruction r10|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  898  <|@ instruction JUMP ~[] destination: B99 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" "B97" 
    successors "B103" "B102" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579746587611747749
    begin_IR
      LIR
      nr  900  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  902  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 2] size: QWORD <|@ <|@
      nr  904  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  906  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B100 -> B103 falseDestination: B100 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B103" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577598346154074172
    begin_IR
      LIR
      nr  912  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  914  <|@ instruction xmm0|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr  916  <|@ instruction J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  918  <|@ instruction rsi|QWORD = LEA [r10|QWORD + 2] size: QWORD <|@ <|@
      nr  920  <|@ instruction r10|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  922  <|@ instruction JUMP ~[] destination: B102 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B102" "B100" 
    successors "B108" "B105" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579746587611747749
    begin_IR
      LIR
      nr  924  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  926  <|@ instruction rdx|QWORD = DEC rdx|QWORD size: QWORD <|@ <|@
      nr  928  <|@ instruction CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  930  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B103 -> B108 falseDestination: B103 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B108" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577598346154074172
    begin_IR
      LIR
      nr  936  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  938  <|@ instruction MOV (x: [rcx|QWORD[.] + r10|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr  940  <|@ instruction JUMP ~[] destination: B105 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors "B124" "B174" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4575305213314078916
    begin_IR
      LIR
      nr 1164  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1166  <|@ instruction stack:112|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1168  <|@ instruction rdx|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 1170  <|@ instruction rsi|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr 1172  <|@ instruction r14|DWORD = SHR rbx|DWORD size: DWORD <|@ <|@
      nr 1174  <|@ instruction r14|DWORD = ADD (x: r14|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr 1176  <|@ instruction r10|DWORD = SUB (x: r14|DWORD, ~y: r9|DWORD) size: DWORD <|@ <|@
      nr 1178  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 1180  <|@ instruction r14|DWORD = CMOVE (falseValue: r14|DWORD, ~trueValue: r9|DWORD) condition: < <|@ <|@
      nr 1182  <|@ instruction r10|DWORD = LEA [r14|DWORD - 2147483639] size: DWORD <|@ <|@
      nr 1184  <|@ instruction CMP r10|DWORD y: 1 size: DWORD <|@ <|@
      nr 1186  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B123 -> B124 falseDestination: B123 -> B174 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B125" "B173" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4575305213314078916
    begin_IR
      LIR
      nr 1188  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1190  <|@ instruction CMP (x: r14|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1192  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B124 -> B125 falseDestination: B124 -> B173 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors "B126" "B127" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4575305213314078916
    begin_IR
      LIR
      nr 1194  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1196  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr 1198  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B125 -> B126 falseDestination: B125 -> B127 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B128" "B129" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4575305213314078916
    begin_IR
      LIR
      nr 1216  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1218  <|@ instruction stack:116|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1220  <|@ instruction r10|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr 1222  <|@ instruction rdi|DWORD = SHL r14|DWORD y: 2 size: DWORD <|@ <|@
      nr 1224  <|@ instruction rdi|DWORD = LEA [rdi|DWORD + 23] size: DWORD <|@ <|@
      nr 1226  <|@ instruction rdi|DWORD = AND rdi|DWORD y: -8 size: DWORD <|@ <|@
      nr 1228  <|@ instruction rdi|QWORD = MOVSXD rdi|DWORD size: QWORD <|@ <|@
      nr 1230  <|@ instruction r13|QWORD = ADD (x: rdi|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1232  <|@ instruction CMP (x: r13|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr 1234  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B127 -> B128 falseDestination: B127 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B130" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4575218661402474956
    begin_IR
      LIR
      nr 1276  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1278  <|@ instruction MOV (x: [r15|QWORD + 96], y: r13|QWORD) size: QWORD <|@ <|@
      nr 1280  <|@ instruction AMD64PREFETCH ~[rdi|QWORD + r10|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr 1282  <|@ instruction AMD64PREFETCH ~[rdi|QWORD + r10|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr 1284  <|@ instruction AMD64PREFETCH ~[rdi|QWORD + r10|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr 1286  <|@ instruction AMD64PREFETCH ~[rdi|QWORD + r10|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr 1288  <|@ instruction MOV (x: [r10|QWORD + 12], y: r14|DWORD) size: DWORD <|@ <|@
      nr 1290  <|@ instruction MOV [r10|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1292  <|@ instruction MOV (x: [r10|QWORD + 8], y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1294  <|@ instruction r10|QWORD[.] = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 1296  <|@ instruction rcx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1298  <|@ instruction JUMP ~[] destination: B129 -> B130 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B129" "B128" 
    successors "B146" "B132" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4575305213314078916
    begin_IR
      LIR
      nr 1300  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1302  <|@ instruction CMP (x: r14|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr 1304  <|@ instruction r10|DWORD = CMOVE (falseValue: r14|DWORD, ~trueValue: rbx|DWORD) condition: > <|@ <|@
      nr 1306  <|@ instruction r10|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr 1308  <|@ instruction CMP r10|QWORD y: 1 size: QWORD <|@ <|@
      nr 1310  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B130 -> B146 falseDestination: B130 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B130" 
    successors "B137" "B135" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570801613686708420
    begin_IR
      LIR
      nr 1316  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1318  <|@ instruction rbx|QWORD[.] = LEA [rcx|QWORD[.] + 16] size: QWORD <|@ <|@
      nr 1320  <|@ instruction rdi|QWORD[.] = LEA [r8|QWORD[.] + 16] size: QWORD <|@ <|@
      nr 1322  <|@ instruction r13|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr 1324  <|@ instruction TEST (x: r13|QWORD, y: r13|QWORD) size: QWORD <|@ <|@
      nr 1330  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1326  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B132 -> B137 falseDestination: B132 -> B135 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B132" "B135" 
    successors "B140" "B139" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570801613686708420
    begin_IR
      LIR
      nr 1356  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1358  <|@ instruction r13|QWORD = LEA [r10|QWORD - 4] size: QWORD <|@ <|@
      nr 1360  <|@ instruction CMP (x: r11|QWORD, y: r13|QWORD) size: QWORD <|@ <|@
      nr 1362  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B137 -> B140 falseDestination: B137 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B137" 
    successors "B140" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4568637815896609427
    begin_IR
      LIR
      nr 1368  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1370  <|@ instruction xmm0|V128_DWORD[....] = H [rdi|QWORD[.] + r11|QWORD * 4] nZ: XMM oh: VMOVDQU <|@ <|@
      nr 1372  <|@ instruction J (address: [rbx|QWORD[.] + r11|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr 1374  <|@ instruction r11|QWORD = LEA [r11|QWORD + 4] size: QWORD <|@ <|@
      nr 1376  <|@ instruction JUMP ~[] destination: B139 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B139" "B137" 
    successors "B143" "B142" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570801613686708420
    begin_IR
      LIR
      nr 1378  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1380  <|@ instruction r13|QWORD = LEA [r10|QWORD - 2] size: QWORD <|@ <|@
      nr 1382  <|@ instruction CMP (x: r11|QWORD, y: r13|QWORD) size: QWORD <|@ <|@
      nr 1384  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B140 -> B143 falseDestination: B140 -> B142 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B143" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4568637815896609427
    begin_IR
      LIR
      nr 1390  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1392  <|@ instruction xmm0|V64_DWORD[..] = H [rdi|QWORD[.] + r11|QWORD * 4] nZ: XMM oh: VMOVQ <|@ <|@
      nr 1394  <|@ instruction J (address: [rbx|QWORD[.] + r11|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr 1396  <|@ instruction r11|QWORD = LEA [r11|QWORD + 2] size: QWORD <|@ <|@
      nr 1398  <|@ instruction JUMP ~[] destination: B142 -> B143 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B142" "B140" 
    successors "B146" "B145" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570801613686708420
    begin_IR
      LIR
      nr 1400  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1402  <|@ instruction r13|QWORD = DEC r10|QWORD size: QWORD <|@ <|@
      nr 1404  <|@ instruction CMP (x: r11|QWORD, y: r13|QWORD) size: QWORD <|@ <|@
      nr 1406  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B143 -> B146 falseDestination: B143 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B143" 
    successors "B146" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4568637815896609427
    begin_IR
      LIR
      nr 1412  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1414  <|@ instruction rdi|DWORD[.] = MOV [rdi|QWORD[.] + r11|QWORD * 4] size: DWORD <|@ <|@
      nr 1416  <|@ instruction MOV (x: [rbx|QWORD[.] + r11|QWORD * 4], y: rdi|DWORD[.]) size: DWORD <|@ <|@
      nr 1418  <|@ instruction JUMP ~[] destination: B145 -> B146 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B130" "B145" "B143" 
    successors "B147" "B162" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4575305213314078916
    begin_IR
      LIR
      nr 1420  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1422  <|@ instruction r11|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr 1424  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1426  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B146 -> B147 falseDestination: B146 -> B162 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B162"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B163" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570801613686708420
    begin_IR
      LIR
      nr 1544  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1546  <|@ instruction xmm2|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null> <|@ <|@
      nr 1548  <|@ instruction xmm1|V128_DWORD[....] = L oc: SIMD<null,null,null,null> <|@ <|@
      nr 1550  <|@ instruction xmm0|V64_DWORD[..] = L oc: SIMD<null,null> <|@ <|@
      nr 1552  <|@ instruction JUMP ~[] destination: B162 -> B163 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B163"
    from_bci -1
    to_bci -1
    predecessors "B162" "B160" "B158" 
    successors "B168" "B165" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4575305213314078916
    begin_IR
      LIR
      nr 1554  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1556  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr 1558  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B163 -> B168 falseDestination: B163 -> B165 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B165"
    from_bci -1
    to_bci -1
    predecessors "B163" 
    successors "B166" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570801613686708420
    begin_IR
      LIR
      nr 1564  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1566  <|@ instruction r14|DWORD = DEC r14|DWORD size: DWORD <|@ <|@
      nr 1568  <|@ instruction r14|DWORD = SHL r14|DWORD y: 2 size: DWORD <|@ <|@
      nr 1570  <|@ instruction r10|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr 1572  <|@ instruction r11|QWORD[.] = LEA [rcx|QWORD[.] + 16] size: QWORD <|@ <|@
      nr 1574  <|@ instruction r11|QWORD[.] = ADD (x: r11|QWORD[.], y: r10|QWORD) size: QWORD <|@ <|@
      nr 1576  <|@ instruction r11|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1578  <|@ instruction r10|QWORD[.] = LEA [rcx|QWORD[.] + 16] size: QWORD <|@ <|@
      nr 1580  <|@ instruction r10|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1582  <|@ instruction r11|QWORD[*] = SUB (x: r11|QWORD[*], ~y: r10|QWORD[*]) size: QWORD <|@ <|@
      nr 1584  <|@ instruction r11|QWORD[*] = INC r11|QWORD[*] size: QWORD <|@ <|@
      nr 1586  <|@ instruction JUMP ~[] destination: B165 -> B166 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B171"
    from_bci -1
    to_bci -1
    predecessors "B166" 
    successors "B166" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 2
    probability 4570801613686708420
    begin_IR
      LIR
      nr 1660  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 1662  <|@ instruction r11|QWORD[*] = DEC r11|QWORD[*] size: QWORD <|@ <|@
      nr 1664  <|@ instruction rbx|QWORD[*] = ADD (x: r10|QWORD[*], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1666  <|@ instruction rbx|QWORD[*] = ADD (x: rbx|QWORD[*], y: r11|QWORD[*]) size: QWORD <|@ <|@
      nr 1668  <|@ instruction MOVB (x: [rbx|QWORD[*]], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 1670  <|@ instruction JUMP ~[] destination: B171 -> B166 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B166"
    from_bci -1
    to_bci -1
    predecessors "B165" "B171" 
    successors "B168" "B171" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 2
    probability 4575305213314078916
    begin_IR
      LIR
      nr 1588  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1590  <|@ instruction CMP r11|QWORD[*] y: 1 size: QWORD <|@ <|@
      nr 1592  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B166 -> B168 falseDestination: B166 -> B171 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B114" "B115" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4574614972964921566
    begin_IR
      LIR
      nr 1030  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1032  <|@ instruction CMP r11|DWORD y: 11 size: DWORD <|@ <|@
      nr 1034  <|@ instruction BRANCH trueDestinationProbability: 0.7308950256495741 condition: < trueDestination: B113 -> B114 falseDestination: B113 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B117" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572471565081160793
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1038  <|@ instruction r9|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr 1042  <|@ instruction JUMP ~[] destination: B114 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573717372198682453
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  382  <|@ instruction CMP (x: r8|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  384  <|@ instruction BRANCH trueDestinationProbability: 0.09242718272553296 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B51" "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573064156944687980
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  402  <|@ instruction CMP r14|DWORD y: 1 size: DWORD <|@ <|@
      nr  404  <|@ instruction BRANCH trueDestinationProbability: 0.09284041465770032 condition: < trueDestination: B46 -> B51 falseDestination: B46 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B152" "B150" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570801613686708420
    begin_IR
      LIR
      nr 1428  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1430  <|@ instruction rbx|QWORD[.] = LEA [rcx|QWORD[.] + r10|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr 1432  <|@ instruction r11|QWORD = SUB (x: r11|QWORD, ~y: r10|QWORD) size: QWORD <|@ <|@
      nr 1434  <|@ instruction r10|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr 1436  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1442  <|@ instruction rdi|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1444  <|@ instruction xmm2|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null> <|@ <|@
      nr 1438  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B147 -> B152 falseDestination: B147 -> B150 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B147" "B150" 
    successors "B155" "B154" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570801613686708420
    begin_IR
      LIR
      nr 1470  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1472  <|@ instruction r10|QWORD = LEA [r11|QWORD - 4] size: QWORD <|@ <|@
      nr 1474  <|@ instruction CMP (x: rdi|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1480  <|@ instruction xmm1|V128_DWORD[....] = L oc: SIMD<null,null,null,null> <|@ <|@
      nr 1476  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B152 -> B155 falseDestination: B152 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B154"
    from_bci -1
    to_bci -1
    predecessors "B152" 
    successors "B155" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4568637815896609427
    begin_IR
      LIR
      nr 1484  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1488  <|@ instruction J (address: [rbx|QWORD[.] + rdi|QWORD * 4], input: xmm1|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr 1490  <|@ instruction r10|QWORD = LEA [rdi|QWORD + 4] size: QWORD <|@ <|@
      nr 1492  <|@ instruction rdi|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 1494  <|@ instruction JUMP ~[] destination: B154 -> B155 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B155"
    from_bci -1
    to_bci -1
    predecessors "B154" "B152" 
    successors "B158" "B157" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570801613686708420
    begin_IR
      LIR
      nr 1496  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1498  <|@ instruction r10|QWORD = LEA [r11|QWORD - 2] size: QWORD <|@ <|@
      nr 1500  <|@ instruction CMP (x: rdi|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1506  <|@ instruction xmm0|V64_DWORD[..] = L oc: SIMD<null,null> <|@ <|@
      nr 1502  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B155 -> B158 falseDestination: B155 -> B157 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B157"
    from_bci -1
    to_bci -1
    predecessors "B155" 
    successors "B158" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4568637815896609427
    begin_IR
      LIR
      nr 1510  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1514  <|@ instruction J (address: [rbx|QWORD[.] + rdi|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr 1516  <|@ instruction r10|QWORD = LEA [rdi|QWORD + 2] size: QWORD <|@ <|@
      nr 1518  <|@ instruction rdi|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 1520  <|@ instruction JUMP ~[] destination: B157 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B158"
    from_bci -1
    to_bci -1
    predecessors "B157" "B155" 
    successors "B163" "B160" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570801613686708420
    begin_IR
      LIR
      nr 1522  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1524  <|@ instruction r11|QWORD = DEC r11|QWORD size: QWORD <|@ <|@
      nr 1526  <|@ instruction CMP (x: rdi|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr 1528  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B158 -> B163 falseDestination: B158 -> B160 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B160"
    from_bci -1
    to_bci -1
    predecessors "B158" 
    successors "B163" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4568637815896609427
    begin_IR
      LIR
      nr 1534  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1536  <|@ instruction MOV (x: [rbx|QWORD[.] + rdi|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr 1538  <|@ instruction JUMP ~[] destination: B160 -> B163 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B168"
    from_bci -1
    to_bci -1
    predecessors "B163" "B166" 
    successors "B169" "B170" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4575305213314078916
    begin_IR
      LIR
      nr 1598  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1600  <|@ instruction CMP [rcx|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr 1602  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B168 -> B169 falseDestination: B168 -> B170 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B169"
    from_bci -1
    to_bci -1
    predecessors "B168" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4575305213314078916
    begin_IR
      LIR
      nr 1604  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1606  <|@ instruction r11|DWORD = MOVE stack:116|DWORD moveKind: DWORD <|@ <|@
      nr 1608  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|DWORD * 4 + 16], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr 1610  <|@ instruction rdx|QWORD[.] = LEA [rcx|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr 1612  <|@ instruction rdx|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1614  <|@ instruction MOVB (x: [rdx|QWORD[*] + rsi|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 1616  <|@ st <@st|@reference-map: [rcx:0, stack:16, stack:48, stack:64, stack:96]
live-base-pointers: []
java.util.ArrayList.add(ArrayList.java:464) [bci: 27]
locals: vobject:ArrayList:0{modCount=r11|DWORD,size=r11|DWORD,elementData=rcx|QWORD[.]} stack:112|QWORD[.] 
java.lang.String.split(String.java:2353) [bci: 165]
locals: stack:32|QWORD[.] - int[0|0x0] stack:40|DWORD - stack:96|DWORD int[0|0x0] vobject:ArrayList:0{modCount=r11|DWORD,size=r11|DWORD,elementData=rcx|QWORD[.]} - - 
vobject:ArrayList:0{modCount=r11|DWORD,size=r11|DWORD,elementData=rcx|QWORD[.]} Ljava/util/ArrayList; r11|DWORD r11|DWORD rcx|QWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:27, 165] <|@ <|@
      nr 1618  <|@ instruction stack:88|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1620  <|@ instruction stack:92|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1622  <|@ instruction r10|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1624  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1626  <|@ instruction r9|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr 1628  <|@ instruction r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1630  <|@ instruction r11|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1632  <|@ instruction JUMP ~[] destination: B169 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B71" "B74" 
    successors "B76" "B74" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4579746587611747749
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  698  <|@ instruction xmm0|V256_WORD = H [rcx|QWORD[.] + r11|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr  700  <|@ instruction J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  702  <|@ instruction r11|QWORD = LEA [r11|QWORD + 16] size: QWORD <|@ <|@
      nr  704  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  706  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B74 -> B76 falseDestination: B74 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B92" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570739388357006757
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  832  <|@ instruction xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr  834  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  836  <|@ instruction JUMP ~[] destination: B91 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" "B92" 
    successors "B94" "B92" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 2
    probability 4579746587611747749
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  840  <|@ instruction J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  842  <|@ instruction r10|QWORD = LEA [r10|QWORD + 16] size: QWORD <|@ <|@
      nr  844  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  846  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B92 -> B94 falseDestination: B92 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B63" "B64" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569639488730677885
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  632  <|@ instruction r13|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  638  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr  640  <|@ instruction rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  642  <|@ instruction rdx|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  644  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  646  <|@ st <@st|@reference-map: [stack:40, stack:48, stack:64, stack:96]
live-base-pointers: []
java.lang.String.substring(String.java:1969) [bci: 65]
locals: stack:32|QWORD[.] stack:100|DWORD - r14|DWORD 
java.lang.String.split(String.java:2353) [bci: 162]
stack: vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]} 
locals: stack:32|QWORD[.] - int[0|0x0] stack:40|DWORD - stack:96|DWORD int[0|0x0] vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]} - - 
vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]} Ljava/util/ArrayList; stack:92|DWORD stack:92|DWORD stack:88|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:65, 162] <|@ <|@
      nr  648  <|@ instruction JUMP ~[] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B46" "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569182488146362606
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  408  <|@ instruction stack:96|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  410  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  412  <|@ instruction r11|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction r10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  444  <|@ instruction CMP (x: r11|DWORD, y: stack:44|DWORD) size: DWORD <|@ <|@
      nr  446  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B51 -> B52 falseDestination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569182488146362606
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  462  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  464  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr  466  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  468  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B53 -> B54 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569112127490162104
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  492  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  494  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0 <|@ <|@
      nr  496  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  498  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" "B54" 
    successors "B112" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569182488146362606
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  502  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  504  <|@ instruction rcx|QWORD = MOV [r10|QWORD + 168] size: QWORD <|@ <|@
      nr  506  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  508  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  510  <|@ instruction MOV [rsi|QWORD[*] + 12] y: -559030611 size: DWORD c: NarrowOop[char[0]{}] <|@ <|@
      nr  512  <|@ instruction MOV (x: [rsi|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  514  <|@ instruction r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  516  <|@ instruction rdi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  518  <|@ instruction JUMP ~[] destination: B56 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B117" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566216454433985046
    begin_IR
      LIR
      nr 1044  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1046  <|@ instruction r9|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1050  <|@ instruction JUMP ~[] destination: B115 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B147" "B150" 
    successors "B152" "B150" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 2
    probability 4570801613686708420
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 1458  <|@ instruction J (address: [rbx|QWORD[.] + rdi|QWORD * 4], input: xmm2|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr 1460  <|@ instruction rdi|QWORD = LEA [rdi|QWORD + 8] size: QWORD <|@ <|@
      nr 1462  <|@ instruction CMP (x: rdi|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1464  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B150 -> B152 falseDestination: B150 -> B150 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B132" "B135" 
    successors "B137" "B135" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 2
    probability 4570801613686708420
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 1342  <|@ instruction xmm0|V256_DWORD[........] = H [rdi|QWORD[.] + r11|QWORD * 4] nZ: YMM oh: VMOVDQU <|@ <|@
      nr 1344  <|@ instruction J (address: [rbx|QWORD[.] + r11|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr 1346  <|@ instruction r11|QWORD = LEA [r11|QWORD + 8] size: QWORD <|@ <|@
      nr 1348  <|@ instruction CMP (x: r11|QWORD, y: r13|QWORD) size: QWORD <|@ <|@
      nr 1350  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B135 -> B137 falseDestination: B135 -> B135 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B112" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4558364945303527242
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  388  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  390  <|@ instruction stack:96|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  392  <|@ instruction rdi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  394  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  396  <|@ instruction r10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  398  <|@ instruction JUMP ~[] destination: B45 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4554135121775845323
    begin_IR
      LIR
      nr  960  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  962  <|@ instruction stack:112|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  964  <|@ instruction stack:104|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  966  <|@ instruction r10|DWORD = MOVE stack:100|DWORD moveKind: DWORD <|@ <|@
      nr  968  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  970  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  972  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  974  <|@ instruction r14|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  976  <|@ st <@st|@reference-map: [stack:16, stack:40, stack:48, stack:64, stack:96]
live-base-pointers: []
java.lang.String.substring(String.java:1969) [bci: 65]
locals: stack:32|QWORD[.] r14|DWORD - stack:104|DWORD 
java.lang.String.split(String.java:2353) [bci: 162]
stack: vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]} 
locals: stack:32|QWORD[.] - int[0|0x0] stack:40|DWORD - stack:96|DWORD int[0|0x0] vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]} - - 
vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]} Ljava/util/ArrayList; stack:92|DWORD stack:92|DWORD stack:88|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:65, 162] <|@ <|@
      nr  978  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  980  <|@ instruction rax|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  982  <|@ instruction r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  986  <|@ instruction JUMP ~[] destination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B130" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4545167746732113395
    begin_IR
      LIR
      nr 1236  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1238  <|@ instruction r13|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1240  <|@ instruction stack:120|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1242  <|@ instruction stack:124|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1244  <|@ instruction stack:104|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1246  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: -) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@120cc8dc encoding: base: 0 shift: 3 <|@ <|@
      nr 1248  <|@ instruction rsi|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr 1250  <|@ instruction rdx|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr 1252  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1254  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:40, stack:48, stack:64, stack:96]
live-base-pointers: []
java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
stack: vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]} stack:104|DWORD 
locals: - - 
java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
locals: vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]} stack:112|QWORD[.] 
java.lang.String.split(String.java:2353) [bci: 165]
locals: stack:32|QWORD[.] - int[0|0x0] stack:40|DWORD - stack:96|DWORD int[0|0x0] vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]} - - 
vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]} Ljava/util/ArrayList; stack:92|DWORD stack:92|DWORD stack:88|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:9, 7, 165] <|@ <|@
      nr 1256  <|@ instruction rcx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1258  <|@ instruction rbp|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1260  <|@ instruction rax|DWORD[.] = MOVE stack:120|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1262  <|@ instruction rbx|DWORD = MOVE stack:124|DWORD moveKind: DWORD <|@ <|@
      nr 1264  <|@ instruction r9|DWORD = MOVE stack:104|DWORD moveKind: DWORD <|@ <|@
      nr 1266  <|@ instruction r11|DWORD = MOVE stack:116|DWORD moveKind: DWORD <|@ <|@
      nr 1268  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1270  <|@ instruction rdx|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 1272  <|@ instruction rsi|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr 1274  <|@ instruction JUMP ~[] destination: B128 -> B130 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4539627389128383186
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  472  <|@ instruction r14|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  474  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  476  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  478  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  480  <|@ st <@st|@reference-map: [stack:40, stack:48, stack:64, stack:96]
live-base-pointers: []
java.lang.String.substring(String.java:1969) [bci: 65]
locals: stack:32|QWORD[.] r14|DWORD - int[0|0x0] 
java.lang.String.split(String.java:2353) [bci: 162]
stack: vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]} 
locals: stack:32|QWORD[.] - int[0|0x0] stack:40|DWORD - stack:96|DWORD int[0|0x0] vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]} - - 
vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]} Ljava/util/ArrayList; stack:92|DWORD stack:92|DWORD stack:88|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:65, 162] <|@ <|@
      nr  482  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  484  <|@ instruction r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction r10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  488  <|@ instruction JUMP ~[] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B185"
    from_bci -1
    to_bci -1
    predecessors "B36" "B34" "B30" 
    successors "B186" 
    xhandlers
    flags 
    probability 4614248496590463470
    begin_IR
      LIR
      nr 1780  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  320  <|@ instruction r13|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  322  <|@ instruction r14|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1782  <|@ instruction JUMP ~[] destination: B185 -> B186 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B186"
    from_bci -1
    to_bci -1
    predecessors "B185" 
    successors "B187" "B191" 
    xhandlers
    flags 
    probability 4614248496590463470
    begin_IR
      LIR
      nr 1784  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1786  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr 1788  <|@ instruction BRANCH trueDestinationProbability: 0.013959872667270279 condition: = trueDestination: B186 -> B187 falseDestination: B186 -> B191 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B191"
    from_bci -1
    to_bci -1
    predecessors "B186" 
    successors "B192" "B193" 
    xhandlers
    flags 
    probability 4614149855044251816
    begin_IR
      LIR
      nr 1846  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1848  <|@ instruction TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr 1850  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B191 -> B192 falseDestination: B191 -> B193 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B193"
    from_bci -1
    to_bci -1
    predecessors "B191" 
    successors "B194" "B201" 
    xhandlers
    flags 
    probability 4614149855044251816
    begin_IR
      LIR
      nr 1860  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1862  <|@ instruction rdx|DWORD = INC stack:92|DWORD size: DWORD <|@ <|@
      nr 1864  <|@ instruction stack:100|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1866  <|@ instruction CMP r13|DWORD y: 1 size: DWORD <|@ <|@
      nr 1868  <|@ instruction BRANCH trueDestinationProbability: 0.09284041465770032 condition: < trueDestination: B193 -> B194 falseDestination: B193 -> B201 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B201"
    from_bci -1
    to_bci -1
    predecessors "B193" 
    successors "B202" "B204" 
    xhandlers
    flags 
    probability 4613502995374236003
    begin_IR
      LIR
      nr 1936  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1938  <|@ instruction CMP (x: r14|DWORD, y: stack:44|DWORD) size: DWORD <|@ <|@
      nr 1940  <|@ instruction BRANCH trueDestinationProbability: 9.999999999998899E-5 condition: > trueDestination: B201 -> B202 falseDestination: B201 -> B204 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B204"
    from_bci -1
    to_bci -1
    predecessors "B201" 
    successors "B205" "B209" 
    xhandlers
    flags 
    probability 4613502363316578581
    begin_IR
      LIR
      nr 1958  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1960  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr 1962  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr 1964  <|@ instruction CMP r13|DWORD y: 16777215 size: DWORD <|@ <|@
      nr 1966  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B204 -> B205 falseDestination: B204 -> B209 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B205"
    from_bci -1
    to_bci -1
    predecessors "B204" 
    successors "B209" "B207" 
    xhandlers
    flags 
    probability 4612870368864922464
    begin_IR
      LIR
      nr 1968  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1970  <|@ instruction r10|DWORD = SHL r13|DWORD size: DWORD <|@ <|@
      nr 1972  <|@ instruction r10|DWORD = LEA [r10|DWORD + 23] size: DWORD <|@ <|@
      nr 1974  <|@ instruction r10|DWORD = AND r10|DWORD y: -8 size: DWORD <|@ <|@
      nr 1976  <|@ instruction r10|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr 1978  <|@ instruction r11|QWORD = ADD (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1980  <|@ instruction CMP (x: r11|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr 1982  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B205 -> B209 falseDestination: B205 -> B207 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B207"
    from_bci -1
    to_bci -1
    predecessors "B205" 
    successors "B210" 
    xhandlers
    flags 
    probability 4612813489364273413
    begin_IR
      LIR
      nr 1988  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1990  <|@ instruction MOV (x: [r15|QWORD + 96], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1992  <|@ instruction AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr 1994  <|@ instruction AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr 1996  <|@ instruction AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr 1998  <|@ instruction AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr 2000  <|@ instruction MOV (x: [rsi|QWORD + 12], y: r13|DWORD) size: DWORD <|@ <|@
      nr 2002  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr 2004  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr 2006  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 2008  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2012  <|@ instruction JUMP ~[] destination: B207 -> B210 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B210"
    from_bci -1
    to_bci -1
    predecessors "B207" "B209" 
    successors "B215" "B213" 
    xhandlers
    flags 
    probability 4613502363316578581
    begin_IR
      LIR
      nr 2032  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2010  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2034  <|@ instruction rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr 2036  <|@ instruction rcx|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr 2038  <|@ instruction rsi|QWORD[.] = LEA [rsi|QWORD[.] + rcx|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr 2040  <|@ instruction rcx|QWORD = MOVSXD r13|DWORD size: QWORD <|@ <|@
      nr 2042  <|@ instruction r10|QWORD = LEA [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr 2044  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 2050  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 2046  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B210 -> B215 falseDestination: B210 -> B213 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B215"
    from_bci -1
    to_bci -1
    predecessors "B210" "B213" 
    successors "B218" "B217" 
    xhandlers
    flags 
    probability 4613502363316578581
    begin_IR
      LIR
      nr 2076  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2078  <|@ instruction r10|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr 2080  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 2082  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B215 -> B218 falseDestination: B215 -> B217 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B217"
    from_bci -1
    to_bci -1
    predecessors "B215" 
    successors "B218" 
    xhandlers
    flags 
    probability 4611922377187438288
    begin_IR
      LIR
      nr 2088  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2090  <|@ instruction xmm0|V128_WORD = H [rsi|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr 2092  <|@ instruction J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr 2094  <|@ instruction r10|QWORD = LEA [r11|QWORD + 8] size: QWORD <|@ <|@
      nr 2096  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 2098  <|@ instruction JUMP ~[] destination: B217 -> B218 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B218"
    from_bci -1
    to_bci -1
    predecessors "B217" "B215" 
    successors "B221" "B220" 
    xhandlers
    flags 
    probability 4613502363316578581
    begin_IR
      LIR
      nr 2100  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2102  <|@ instruction r10|QWORD = LEA [rcx|QWORD - 4] size: QWORD <|@ <|@
      nr 2104  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 2106  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B218 -> B221 falseDestination: B218 -> B220 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B220"
    from_bci -1
    to_bci -1
    predecessors "B218" 
    successors "B221" 
    xhandlers
    flags 
    probability 4611922377187438288
    begin_IR
      LIR
      nr 2112  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2114  <|@ instruction xmm0|V64_WORD = H [rsi|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr 2116  <|@ instruction J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr 2118  <|@ instruction r10|QWORD = LEA [r11|QWORD + 4] size: QWORD <|@ <|@
      nr 2120  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 2122  <|@ instruction JUMP ~[] destination: B220 -> B221 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B221"
    from_bci -1
    to_bci -1
    predecessors "B220" "B218" 
    successors "B224" "B223" 
    xhandlers
    flags 
    probability 4613502363316578581
    begin_IR
      LIR
      nr 2124  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2126  <|@ instruction r10|QWORD = LEA [rcx|QWORD - 2] size: QWORD <|@ <|@
      nr 2128  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 2130  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B221 -> B224 falseDestination: B221 -> B223 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B223"
    from_bci -1
    to_bci -1
    predecessors "B221" 
    successors "B224" 
    xhandlers
    flags 
    probability 4611922377187438288
    begin_IR
      LIR
      nr 2136  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2138  <|@ instruction xmm0|V32_WORD = H [rsi|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr 2140  <|@ instruction J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr 2142  <|@ instruction r10|QWORD = LEA [r11|QWORD + 2] size: QWORD <|@ <|@
      nr 2144  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 2146  <|@ instruction JUMP ~[] destination: B223 -> B224 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B224"
    from_bci -1
    to_bci -1
    predecessors "B223" "B221" 
    successors "B227" "B226" 
    xhandlers
    flags 
    probability 4613502363316578581
    begin_IR
      LIR
      nr 2148  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2150  <|@ instruction rcx|QWORD = DEC rcx|QWORD size: QWORD <|@ <|@
      nr 2152  <|@ instruction CMP (x: r11|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr 2154  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B224 -> B227 falseDestination: B224 -> B226 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B226"
    from_bci -1
    to_bci -1
    predecessors "B224" 
    successors "B227" 
    xhandlers
    flags 
    probability 4611922377187438288
    begin_IR
      LIR
      nr 2162  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2164  <|@ instruction rsi|DWORD = MOVSX [rsi|QWORD[.] + r11|QWORD * 2] size: DWORD <|@ <|@
      nr 2166  <|@ instruction MOV (x: [rdx|QWORD[.] + r11|QWORD * 2], y: rsi|DWORD) size: WORD <|@ <|@
      nr 2170  <|@ instruction JUMP ~[] destination: B226 -> B227 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B227"
    from_bci -1
    to_bci -1
    predecessors "B226" "B224" 
    successors "B228" "B231" 
    xhandlers
    flags 
    probability 4613502363316578581
    begin_IR
      LIR
      nr 2172  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2168  <|@ instruction rdi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2174  <|@ instruction rsi|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@120cc8dc encoding: base: 0 shift: 3 <|@ <|@
      nr 2176  <|@ instruction CMP (x: rdi|QWORD[.], y: stack:88|QWORD[.]) size: QWORD <|@ <|@
      nr 2178  <|@ instruction BRANCH trueDestinationProbability: 0.2066504369952622 condition: = trueDestination: B227 -> B228 falseDestination: B227 -> B231 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B231"
    from_bci -1
    to_bci -1
    predecessors "B227" 
    successors "B232" 
    xhandlers
    flags 
    probability 4612196344020445404
    begin_IR
      LIR
      nr 2206  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2208  <|@ instruction r14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2210  <|@ instruction r13|DWORD = MOVE stack:100|DWORD moveKind: DWORD <|@ <|@
      nr 2214  <|@ instruction JUMP ~[] destination: B231 -> B232 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B232"
    from_bci -1
    to_bci -1
    predecessors "B200" "B198" "B199" "B231" "B229" "B230" 
    successors "B233" "B241" 
    xhandlers
    flags 
    probability 4614149222986594394
    begin_IR
      LIR
      nr 2216  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr 1932  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2218  <|@ instruction stack:40|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 2220  <|@ instruction r10|DWORD = MOV [r8|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 2222  <|@ instruction r11|DWORD = MOV [r8|QWORD[.] + 8] size: DWORD <|@ <|@
      nr 2224  <|@ instruction rdx|DWORD = SUB (x: r13|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr 2226  <|@ instruction CMP rdx|DWORD y: 1 size: DWORD <|@ <|@
      nr 2228  <|@ instruction BRANCH trueDestinationProbability: 0.7754412955005789 condition: < trueDestination: B232 -> B233 falseDestination: B232 -> B241 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B233"
    from_bci -1
    to_bci -1
    predecessors "B232" 
    successors "B234" "B240" 
    xhandlers
    flags 
    probability 4612584766463955523
    begin_IR
      LIR
      nr 2230  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2232  <|@ instruction CMP r11|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr 2234  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B233 -> B234 falseDestination: B233 -> B240 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B234"
    from_bci -1
    to_bci -1
    predecessors "B233" 
    successors "B235" "B239" 
    xhandlers
    flags 
    probability 4612584766463955523
    begin_IR
      LIR
      nr 2236  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2238  <|@ instruction CMP (x: r10|DWORD, y: stack:92|DWORD) size: DWORD <|@ <|@
      nr 2240  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B234 -> B235 falseDestination: B234 -> B239 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B235"
    from_bci -1
    to_bci -1
    predecessors "B234" 
    successors "B236" "B237" 
    xhandlers
    flags 
    probability 4612584766463955523
    begin_IR
      LIR
      nr 2242  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2244  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr 2246  <|@ instruction rcx|QWORD = LEA [rdx|QWORD + 24] size: QWORD <|@ <|@
      nr 2248  <|@ instruction CMP (x: rcx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr 2250  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B235 -> B236 falseDestination: B235 -> B237 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B237"
    from_bci -1
    to_bci -1
    predecessors "B235" 
    successors "B238" 
    xhandlers
    flags 
    probability 4612530742987316142
    begin_IR
      LIR
      nr 2278  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2280  <|@ instruction MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD <|@ <|@
      nr 2282  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + 216] instr: 0 <|@ <|@
      nr 2284  <|@ instruction rdx|QWORD[*] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr 2292  <|@ instruction JUMP ~[] destination: B237 -> B238 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B238"
    from_bci -1
    to_bci -1
    predecessors "B237" "B236" 
    successors "B291" 
    xhandlers
    flags 
    probability 4612584766463955523
    begin_IR
      LIR
      nr 2294  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2286  <|@ instruction r9|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 2288  <|@ instruction rbx|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr 2290  <|@ instruction r10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr 2296  <|@ instruction rcx|QWORD[.] = MOVE rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr 2298  <|@ instruction r10|QWORD = MOV [r10|QWORD + 168] size: QWORD <|@ <|@
      nr 2300  <|@ instruction MOV (x: [rdx|QWORD[*]], y: r10|QWORD) size: QWORD <|@ <|@
      nr 2302  <|@ instruction MOV [rdx|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr 2304  <|@ instruction MOV (x: [rdx|QWORD[*] + 12], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr 2306  <|@ instruction MOV (x: [rdx|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr 2308  <|@ instruction rcx|DWORD[.] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@120cc8dc encoding: base: 0 shift: 3 <|@ <|@
      nr 2310  <|@ instruction MOV (x: [r8|QWORD[.] + r9|DWORD * 4 + 16], y: rcx|DWORD[.]) size: DWORD <|@ <|@
      nr 2312  <|@ instruction rsi|QWORD[.] = LEA [r8|QWORD[.] + r9|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr 2314  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 2316  <|@ instruction MOVB (x: [rsi|QWORD[*] + rbx|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 2318  <|@ instruction r13|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2320  <|@ instruction xmm2|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null> <|@ <|@
      nr 2322  <|@ instruction xmm1|V128_DWORD[....] = L oc: SIMD<null,null,null,null> <|@ <|@
      nr 2324  <|@ instruction xmm0|V64_DWORD[..] = L oc: SIMD<null,null> <|@ <|@
      nr 2326  <|@ instruction JUMP ~[] destination: B238 -> B291 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B291"
    from_bci -1
    to_bci -1
    predecessors "B290" "B238" 
    successors "B292" 
    xhandlers
    flags 
    probability 4614149222986594394
    begin_IR
      LIR
      nr 2864  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2866  <|@ instruction rsi|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 2868  <|@ instruction r14|DWORD = MOVE stack:100|DWORD moveKind: DWORD <|@ <|@
      nr 2870  <|@ instruction rdx|DWORD = MOVE stack:100|DWORD moveKind: DWORD <|@ <|@
      nr 2872  <|@ instruction JUMP ~[] destination: B291 -> B292 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B294"
    from_bci -1
    to_bci -1
    predecessors "B292" 
    successors "B295" "B350" 
    xhandlers
    flags 
    loop_index 11
    loop_depth 1
    probability 4618652822613964890
    begin_IR
      LIR
      nr 2892  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 2894  <|@ instruction r10|DWORD = DEC r14|DWORD size: DWORD <|@ <|@
      nr 2896  <|@ instruction CMP (x: rdx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 2898  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B294 -> B295 falseDestination: B294 -> B350 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B295"
    from_bci -1
    to_bci -1
    predecessors "B294" 
    successors "B296" "B349" 
    xhandlers
    flags 
    loop_index 11
    loop_depth 1
    probability 4618652822613964890
    begin_IR
      LIR
      nr 2900  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2902  <|@ instruction CMP (x: rsi|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 2904  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B295 -> B296 falseDestination: B295 -> B349 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B296"
    from_bci -1
    to_bci -1
    predecessors "B295" 
    successors "B300" "B298" 
    xhandlers
    flags 
    loop_index 11
    loop_depth 1
    probability 4618652822613964890
    begin_IR
      LIR
      nr 2906  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2908  <|@ instruction r11|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr 2910  <|@ instruction rcx|DWORD[.] = MOV [r13|QWORD[.] + r11|QWORD * 4 + 12] size: DWORD <|@ <|@
      nr 2912  <|@ instruction TEST (x: rcx|DWORD[.], y: rcx|DWORD[.]) size: DWORD <|@ <|@
      nr 2914  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B296 -> B300 falseDestination: B296 -> B298 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B298"
    from_bci -1
    to_bci -1
    predecessors "B296" 
    successors "B300" "B348" 
    xhandlers
    flags 
    loop_index 11
    loop_depth 1
    probability 4617956142195307192
    begin_IR
      LIR
      nr 2920  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2922  <|@ instruction CMP [rcx|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr 2924  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B298 -> B300 falseDestination: B298 -> B348 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B300"
    from_bci -1
    to_bci -1
    predecessors "B296" "B298" 
    successors "B301" "B302" 
    xhandlers
    flags 
    loop_index 11
    loop_depth 1
    probability 4618652822613964890
    begin_IR
      LIR
      nr 2930  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2932  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
java.lang.String.split(String.java:2373) [bci: 261]
locals: - - - - - - - vobject:ArrayList:0{modCount=rdx|DWORD,size=rdx|DWORD,elementData=r13|QWORD[.]} r14|DWORD - 
vobject:ArrayList:0{modCount=rdx|DWORD,size=rdx|DWORD,elementData=r13|QWORD[.]} Ljava/util/ArrayList; rdx|DWORD rdx|DWORD r13|QWORD[.] 
>@ <|@ instruction rcx|DWORD[.] = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD state [bci:261] <|@ <|@
      nr 2934  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
java.lang.String.split(String.java:2373) [bci: 261]
locals: - - - - - - - vobject:ArrayList:0{modCount=rdx|DWORD,size=rdx|DWORD,elementData=r13|QWORD[.]} r14|DWORD - 
vobject:ArrayList:0{modCount=rdx|DWORD,size=rdx|DWORD,elementData=r13|QWORD[.]} Ljava/util/ArrayList; rdx|DWORD rdx|DWORD r13|QWORD[.] 
>@ <|@ instruction CMP [rcx|DWORD[.] * 8 + 12] y: 0 size: DWORD state [bci:261] <|@ <|@
      nr 2936  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B300 -> B301 falseDestination: B300 -> B302 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B301"
    from_bci -1
    to_bci -1
    predecessors "B300" 
    successors "B292" 
    xhandlers
    flags "lle" 
    loop_index 11
    loop_depth 1
    probability 4614149222986594394
    begin_IR
      LIR
      nr 2938  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2940  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
java.lang.String.split(String.java:2373) [bci: 261]
locals: - - - - - - - vobject:ArrayList:0{modCount=rdx|DWORD,size=rdx|DWORD,elementData=r13|QWORD[.]} r14|DWORD - 
vobject:ArrayList:0{modCount=rdx|DWORD,size=rdx|DWORD,elementData=r13|QWORD[.]} Ljava/util/ArrayList; rdx|DWORD rdx|DWORD r13|QWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:261] <|@ <|@
      nr 2942  <|@ instruction r14|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 2944  <|@ instruction JUMP ~[] destination: B301 -> B292 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B292"
    from_bci -1
    to_bci -1
    predecessors "B291" "B301" 
    successors "B293" "B294" 
    xhandlers
    flags "llh" 
    loop_index 11
    loop_depth 1
    probability 4618652822613964890
    begin_IR
      LIR
      nr 2874  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2876  <|@ instruction CMP r14|DWORD y: 1 size: DWORD <|@ <|@
      nr 2878  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B292 -> B293 falseDestination: B292 -> B294 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B302"
    from_bci -1
    to_bci -1
    predecessors "B300" 
    successors "B303" "B347" 
    xhandlers
    flags 
    probability 4614149222986594394
    begin_IR
      LIR
      nr 2946  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2948  <|@ instruction r8|QWORD = DEC r11|QWORD size: QWORD <|@ <|@
      nr 2950  <|@ instruction rsi|QWORD = MOV rsi|DWORD size: DWORD <|@ <|@
      nr 2952  <|@ instruction CMP (x: rsi|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr 2954  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B302 -> B303 falseDestination: B302 -> B347 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B303"
    from_bci -1
    to_bci -1
    predecessors "B302" 
    successors "B304" "B346" 
    xhandlers
    flags 
    probability 4614149222986594394
    begin_IR
      LIR
      nr 2956  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2958  <|@ instruction CMP (x: rsi|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr 2960  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B303 -> B304 falseDestination: B303 -> B346 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B304"
    from_bci -1
    to_bci -1
    predecessors "B303" 
    successors "B305" "B345" 
    xhandlers
    flags 
    probability 4614149222986594394
    begin_IR
      LIR
      nr 2962  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2964  <|@ instruction CMP (x: r11|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr 2966  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B304 -> B305 falseDestination: B304 -> B345 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B305"
    from_bci -1
    to_bci -1
    predecessors "B304" 
    successors "B306" "B307" 
    xhandlers
    flags 
    probability 4614149222986594394
    begin_IR
      LIR
      nr 2968  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2970  <|@ instruction CMP (x: r14|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr 2972  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B305 -> B306 falseDestination: B305 -> B307 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B307"
    from_bci -1
    to_bci -1
    predecessors "B305" 
    successors "B308" "B312" 
    xhandlers
    flags 
    probability 4614149222986594394
    begin_IR
      LIR
      nr 2986  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2988  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr 2990  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr 2992  <|@ instruction CMP r14|DWORD y: 16777215 size: DWORD <|@ <|@
      nr 2994  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B307 -> B308 falseDestination: B307 -> B312 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B308"
    from_bci -1
    to_bci -1
    predecessors "B307" 
    successors "B312" "B310" 
    xhandlers
    flags 
    probability 4613452542567936696
    begin_IR
      LIR
      nr 2996  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2998  <|@ instruction r9|DWORD = SHL r14|DWORD y: 2 size: DWORD <|@ <|@
      nr 3000  <|@ instruction r9|DWORD = LEA [r9|DWORD + 23] size: DWORD <|@ <|@
      nr 3002  <|@ instruction r9|DWORD = AND r9|DWORD y: -8 size: DWORD <|@ <|@
      nr 3004  <|@ instruction r9|QWORD = MOVSXD r9|DWORD size: QWORD <|@ <|@
      nr 3006  <|@ instruction rdi|QWORD = ADD (x: r9|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 3008  <|@ instruction CMP (x: rdi|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr 3010  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B308 -> B312 falseDestination: B308 -> B310 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B310"
    from_bci -1
    to_bci -1
    predecessors "B308" 
    successors "B313" 
    xhandlers
    flags 
    probability 4613389841330257503
    begin_IR
      LIR
      nr 3020  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3022  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdi|QWORD) size: QWORD <|@ <|@
      nr 3024  <|@ instruction AMD64PREFETCH ~[r9|QWORD + rsi|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr 3026  <|@ instruction AMD64PREFETCH ~[r9|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr 3028  <|@ instruction AMD64PREFETCH ~[r9|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr 3030  <|@ instruction AMD64PREFETCH ~[r9|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr 3032  <|@ instruction MOV (x: [rsi|QWORD + 12], y: r14|DWORD) size: DWORD <|@ <|@
      nr 3034  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr 3036  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr 3038  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 3040  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3042  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 3044  <|@ instruction stack:96|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr 3046  <|@ instruction stack:64|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3048  <|@ instruction r14|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr 3050  <|@ instruction r13|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr 3052  <|@ instruction JUMP ~[] destination: B310 -> B313 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B313"
    from_bci -1
    to_bci -1
    predecessors "B310" "B312" 
    successors "B318" "B315" 
    xhandlers
    flags 
    probability 4614149222986594394
    begin_IR
      LIR
      nr 3080  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 3082  <|@ instruction rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr 3084  <|@ instruction rdx|QWORD = LEA [r13|QWORD - 8] size: QWORD <|@ <|@
      nr 3086  <|@ instruction TEST (x: rdx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr 3092  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 3088  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B313 -> B318 falseDestination: B313 -> B315 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B318"
    from_bci -1
    to_bci -1
    predecessors "B313" "B316" 
    successors "B321" "B320" 
    xhandlers
    flags 
    probability 4614149222986594394
    begin_IR
      LIR
      nr 3118  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 3120  <|@ instruction rdx|QWORD = LEA [r13|QWORD - 4] size: QWORD <|@ <|@
      nr 3122  <|@ instruction CMP (x: rcx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr 3124  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B318 -> B321 falseDestination: B318 -> B320 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B320"
    from_bci -1
    to_bci -1
    predecessors "B318" 
    successors "B321" 
    xhandlers
    flags 
    probability 4612407521939950148
    begin_IR
      LIR
      nr 3130  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3132  <|@ instruction xmm1|V128_DWORD[....] = L oc: SIMD<null,null,null,null> <|@ <|@
      nr 3134  <|@ instruction J (address: [rsi|QWORD[.] + rcx|QWORD * 4], input: xmm1|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr 3136  <|@ instruction rdx|QWORD = LEA [rcx|QWORD + 4] size: QWORD <|@ <|@
      nr 3138  <|@ instruction rcx|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr 3140  <|@ instruction JUMP ~[] destination: B320 -> B321 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B321"
    from_bci -1
    to_bci -1
    predecessors "B320" "B318" 
    successors "B324" "B323" 
    xhandlers
    flags 
    probability 4614149222986594394
    begin_IR
      LIR
      nr 3142  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 3144  <|@ instruction rdx|QWORD = LEA [r13|QWORD - 2] size: QWORD <|@ <|@
      nr 3146  <|@ instruction CMP (x: rcx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr 3148  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B321 -> B324 falseDestination: B321 -> B323 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B323"
    from_bci -1
    to_bci -1
    predecessors "B321" 
    successors "B324" 
    xhandlers
    flags 
    probability 4612407521939950148
    begin_IR
      LIR
      nr 3154  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3156  <|@ instruction xmm0|V64_DWORD[..] = L oc: SIMD<null,null> <|@ <|@
      nr 3158  <|@ instruction J (address: [rsi|QWORD[.] + rcx|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr 3160  <|@ instruction rdx|QWORD = LEA [rcx|QWORD + 2] size: QWORD <|@ <|@
      nr 3162  <|@ instruction rcx|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr 3164  <|@ instruction JUMP ~[] destination: B323 -> B324 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B324"
    from_bci -1
    to_bci -1
    predecessors "B323" "B321" 
    successors "B327" "B326" 
    xhandlers
    flags 
    probability 4614149222986594394
    begin_IR
      LIR
      nr 3166  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 3168  <|@ instruction CMP (x: rcx|QWORD, y: r14|QWORD) size: QWORD <|@ <|@
      nr 3170  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B324 -> B327 falseDestination: B324 -> B326 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B326"
    from_bci -1
    to_bci -1
    predecessors "B324" 
    successors "B327" 
    xhandlers
    flags 
    probability 4612407521939950148
    begin_IR
      LIR
      nr 3178  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3180  <|@ instruction MOV (x: [rsi|QWORD[.] + rcx|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr 3184  <|@ instruction JUMP ~[] destination: B326 -> B327 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B327"
    from_bci -1
    to_bci -1
    predecessors "B326" "B324" 
    successors "B328" 
    xhandlers
    flags 
    probability 4614149222986594394
    begin_IR
      LIR
      nr 3186  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3182  <|@ instruction r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 3188  <|@ instruction r10|DWORD = SHL r10|DWORD y: 2 size: DWORD <|@ <|@
      nr 3190  <|@ instruction rsi|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr 3192  <|@ instruction rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr 3194  <|@ instruction rdx|QWORD[.] = ADD (x: rdx|QWORD[.], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 3196  <|@ instruction rdx|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 3198  <|@ instruction rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr 3200  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 3202  <|@ instruction rdx|QWORD[*] = SUB (x: rdx|QWORD[*], ~y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr 3204  <|@ instruction rdx|QWORD[*] = INC rdx|QWORD[*] size: QWORD <|@ <|@
      nr 3206  <|@ instruction rbx|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr 3208  <|@ instruction JUMP ~[] destination: B327 -> B328 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B343"
    from_bci -1
    to_bci -1
    predecessors "B328" 
    successors "B328" 
    xhandlers
    flags "lle" 
    loop_index 13
    loop_depth 1
    probability 4614149222986594394
    begin_IR
      LIR
      nr 3316  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 3318  <|@ instruction rdx|QWORD[*] = DEC rdx|QWORD[*] size: QWORD <|@ <|@
      nr 3320  <|@ instruction rcx|QWORD[*] = ADD (x: rsi|QWORD[*], y: rbx|QWORD) size: QWORD <|@ <|@
      nr 3322  <|@ instruction rcx|QWORD[*] = ADD (x: rcx|QWORD[*], y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr 3324  <|@ instruction MOVB (x: [rcx|QWORD[*]], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 3326  <|@ instruction JUMP ~[] destination: B343 -> B328 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B328"
    from_bci -1
    to_bci -1
    predecessors "B327" "B343" 
    successors "B329" "B343" 
    xhandlers
    flags "llh" 
    loop_index 13
    loop_depth 1
    probability 4618652822613964890
    begin_IR
      LIR
      nr 3210  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 3212  <|@ instruction CMP rdx|QWORD[*] y: 1 size: QWORD <|@ <|@
      nr 3214  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B328 -> B329 falseDestination: B328 -> B343 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B329"
    from_bci -1
    to_bci -1
    predecessors "B328" 
    successors "B330" 
    xhandlers
    flags 
    probability 4614149222986594394
    begin_IR
      LIR
      nr 3216  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3218  <|@ instruction r9|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr 3220  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 3222  <|@ instruction r11|DWORD = MOVE stack:96|DWORD moveKind: DWORD <|@ <|@
      nr 3224  <|@ instruction r8|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3226  <|@ instruction JUMP ~[] destination: B329 -> B330 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B331"
    from_bci -1
    to_bci -1
    predecessors "B330" 
    successors "B332" "B333" 
    xhandlers
    flags 
    loop_index 14
    loop_depth 1
    probability 4619723847182676267
    begin_IR
      LIR
      nr 3234  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 3236  <|@ instruction CMP (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr 3238  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B331 -> B332 falseDestination: B331 -> B333 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B333"
    from_bci -1
    to_bci -1
    predecessors "B331" 
    successors "B337" "B335" 
    xhandlers
    flags 
    loop_index 14
    loop_depth 1
    probability 4619723847182676267
    begin_IR
      LIR
      nr 3246  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3248  <|@ instruction rsi|DWORD[.] = MOV [r8|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 3250  <|@ instruction TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr 3252  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B333 -> B337 falseDestination: B333 -> B335 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B335"
    from_bci -1
    to_bci -1
    predecessors "B333" 
    successors "B337" "B338" 
    xhandlers
    flags 
    loop_index 14
    loop_depth 1
    probability 4618920064307147431
    begin_IR
      LIR
      nr 3258  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3260  <|@ instruction CMP [rsi|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr 3262  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B335 -> B337 falseDestination: B335 -> B338 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B337"
    from_bci -1
    to_bci -1
    predecessors "B333" "B335" 
    successors "B330" 
    xhandlers
    flags "lle" 
    loop_index 14
    loop_depth 1
    probability 4619723847182676267
    begin_IR
      LIR
      nr 3268  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3270  <|@ instruction MOV (x: [rax|QWORD[.] + r10|DWORD * 4 + 16], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr 3272  <|@ instruction rsi|QWORD[.] = LEA [rax|QWORD[.] + r10|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr 3274  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 3276  <|@ instruction MOVB (x: [rsi|QWORD[*] + rbx|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 3278  <|@ instruction rsi|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr 3280  <|@ instruction r9|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 3282  <|@ instruction r10|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr 3284  <|@ instruction JUMP ~[] destination: B337 -> B330 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B330"
    from_bci -1
    to_bci -1
    predecessors "B329" "B337" 
    successors "B331" "B339" 
    xhandlers
    flags "llh" 
    loop_index 14
    loop_depth 1
    probability 4621950233479046828
    begin_IR
      LIR
      nr 3228  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 3230  <|@ instruction CMP (x: r11|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 3232  <|@ instruction BRANCH trueDestinationProbability: 0.6976536501116306 condition: > trueDestination: B330 -> B331 falseDestination: B330 -> B339 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B339"
    from_bci -1
    to_bci -1
    predecessors "B330" 
    successors "B340" "B341" 
    xhandlers
    flags 
    probability 4614149222986594394
    begin_IR
      LIR
      nr 3292  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3294  <|@ instruction CMP (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr 3296  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B339 -> B340 falseDestination: B339 -> B341 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B340"
    from_bci -1
    to_bci -1
    predecessors "B339" 
    successors 
    xhandlers
    flags 
    probability 4614149222986594394
    begin_IR
      LIR
      nr 3298  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3300  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B315"
    from_bci -1
    to_bci -1
    predecessors "B313" 
    successors "B316" 
    xhandlers
    flags 
    probability 4605142023731853402
    begin_IR
      LIR
      nr 3096  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3100  <|@ instruction xmm2|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null> <|@ <|@
      nr 3102  <|@ instruction JUMP ~[] destination: B315 -> B316 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B316"
    from_bci -1
    to_bci -1
    predecessors "B315" "B316" 
    successors "B318" "B316" 
    xhandlers
    flags "llh" 
    loop_index 12
    loop_depth 1
    probability 4614149222986594394
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 3106  <|@ instruction J (address: [rsi|QWORD[.] + rcx|QWORD * 4], input: xmm2|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr 3108  <|@ instruction rcx|QWORD = LEA [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr 3110  <|@ instruction CMP (x: rcx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr 3112  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B316 -> B318 falseDestination: B316 -> B316 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B213"
    from_bci -1
    to_bci -1
    predecessors "B210" "B213" 
    successors "B215" "B213" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 1
    probability 4613502363316578581
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 2062  <|@ instruction xmm0|V256_WORD = H [rsi|QWORD[.] + r11|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr 2064  <|@ instruction J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr 2066  <|@ instruction r11|QWORD = LEA [r11|QWORD + 16] size: QWORD <|@ <|@
      nr 2068  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 2070  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B213 -> B215 falseDestination: B213 -> B213 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B241"
    from_bci -1
    to_bci -1
    predecessors "B232" 
    successors "B242" "B356" 
    xhandlers
    flags 
    probability 4604433045635831900
    begin_IR
      LIR
      nr 2348  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2350  <|@ instruction r9|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 2352  <|@ instruction rbx|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr 2354  <|@ instruction rdi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr 2356  <|@ instruction rdx|DWORD = SHR r10|DWORD size: DWORD <|@ <|@
      nr 2358  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 2360  <|@ instruction rcx|DWORD = SUB (x: rdx|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr 2362  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr 2364  <|@ instruction rdx|DWORD = CMOVE (falseValue: rdx|DWORD, ~trueValue: r13|DWORD) condition: < <|@ <|@
      nr 2366  <|@ instruction rcx|DWORD = LEA [rdx|DWORD - 2147483639] size: DWORD <|@ <|@
      nr 2368  <|@ instruction CMP rcx|DWORD y: 1 size: DWORD <|@ <|@
      nr 2370  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B241 -> B242 falseDestination: B241 -> B356 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B242"
    from_bci -1
    to_bci -1
    predecessors "B241" 
    successors "B243" "B355" 
    xhandlers
    flags 
    probability 4604433045635831900
    begin_IR
      LIR
      nr 2372  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2374  <|@ instruction CMP (x: rdx|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 2376  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B242 -> B243 falseDestination: B242 -> B355 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B243"
    from_bci -1
    to_bci -1
    predecessors "B242" 
    successors "B244" "B245" 
    xhandlers
    flags 
    probability 4604433045635831900
    begin_IR
      LIR
      nr 2378  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2380  <|@ instruction TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr 2382  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B243 -> B244 falseDestination: B243 -> B245 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B245"
    from_bci -1
    to_bci -1
    predecessors "B243" 
    successors "B246" "B247" 
    xhandlers
    flags 
    probability 4604433045635831900
    begin_IR
      LIR
      nr 2392  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2394  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr 2396  <|@ instruction rax|DWORD = SHL rdx|DWORD y: 2 size: DWORD <|@ <|@
      nr 2398  <|@ instruction rax|DWORD = LEA [rax|DWORD + 23] size: DWORD <|@ <|@
      nr 2400  <|@ instruction rax|DWORD = AND rax|DWORD y: -8 size: DWORD <|@ <|@
      nr 2402  <|@ instruction rax|QWORD = MOVSXD rax|DWORD size: QWORD <|@ <|@
      nr 2404  <|@ instruction rbp|QWORD = ADD (x: rax|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr 2406  <|@ instruction CMP (x: rbp|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr 2408  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B245 -> B246 falseDestination: B245 -> B247 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B247"
    from_bci -1
    to_bci -1
    predecessors "B245" 
    successors "B248" 
    xhandlers
    flags 
    probability 4604370467374926345
    begin_IR
      LIR
      nr 2450  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2452  <|@ instruction MOV (x: [r15|QWORD + 96], y: rbp|QWORD) size: QWORD <|@ <|@
      nr 2454  <|@ instruction AMD64PREFETCH ~[rax|QWORD + rcx|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr 2456  <|@ instruction AMD64PREFETCH ~[rax|QWORD + rcx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr 2458  <|@ instruction AMD64PREFETCH ~[rax|QWORD + rcx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr 2460  <|@ instruction AMD64PREFETCH ~[rax|QWORD + rcx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr 2462  <|@ instruction MOV (x: [rcx|QWORD + 12], y: rdx|DWORD) size: DWORD <|@ <|@
      nr 2464  <|@ instruction MOV [rcx|QWORD] y: 1 size: QWORD <|@ <|@
      nr 2466  <|@ instruction MOV (x: [rcx|QWORD + 8], y: r11|DWORD) size: DWORD <|@ <|@
      nr 2468  <|@ instruction rcx|QWORD[.] = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr 2470  <|@ instruction r11|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2472  <|@ instruction JUMP ~[] destination: B247 -> B248 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B248"
    from_bci -1
    to_bci -1
    predecessors "B247" "B246" 
    successors "B264" "B250" 
    xhandlers
    flags 
    probability 4604433045635831900
    begin_IR
      LIR
      nr 2474  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2476  <|@ instruction CMP (x: rdx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 2478  <|@ instruction rcx|DWORD = CMOVE (falseValue: rdx|DWORD, ~trueValue: r10|DWORD) condition: > <|@ <|@
      nr 2480  <|@ instruction rcx|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr 2482  <|@ instruction CMP rcx|QWORD y: 1 size: QWORD <|@ <|@
      nr 2484  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B248 -> B264 falseDestination: B248 -> B250 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B250"
    from_bci -1
    to_bci -1
    predecessors "B248" 
    successors "B255" "B253" 
    xhandlers
    flags 
    probability 4599929446008461404
    begin_IR
      LIR
      nr 2490  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2492  <|@ instruction r10|QWORD[.] = LEA [r11|QWORD[.] + 16] size: QWORD <|@ <|@
      nr 2494  <|@ instruction rax|QWORD[.] = LEA [r8|QWORD[.] + 16] size: QWORD <|@ <|@
      nr 2496  <|@ instruction rbp|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr 2498  <|@ instruction TEST (x: rbp|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr 2504  <|@ instruction r13|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 2500  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B250 -> B255 falseDestination: B250 -> B253 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B255"
    from_bci -1
    to_bci -1
    predecessors "B250" "B253" 
    successors "B258" "B257" 
    xhandlers
    flags 
    probability 4599929446008461404
    begin_IR
      LIR
      nr 2530  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2532  <|@ instruction rbp|QWORD = LEA [rcx|QWORD - 4] size: QWORD <|@ <|@
      nr 2534  <|@ instruction CMP (x: r13|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr 2536  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B255 -> B258 falseDestination: B255 -> B257 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B257"
    from_bci -1
    to_bci -1
    predecessors "B255" 
    successors "B258" 
    xhandlers
    flags 
    probability 4598364989485822533
    begin_IR
      LIR
      nr 2542  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2544  <|@ instruction xmm0|V128_DWORD[....] = H [rax|QWORD[.] + r13|QWORD * 4] nZ: XMM oh: VMOVDQU <|@ <|@
      nr 2546  <|@ instruction J (address: [r10|QWORD[.] + r13|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr 2548  <|@ instruction rbp|QWORD = LEA [r13|QWORD + 4] size: QWORD <|@ <|@
      nr 2550  <|@ instruction r13|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr 2552  <|@ instruction JUMP ~[] destination: B257 -> B258 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B258"
    from_bci -1
    to_bci -1
    predecessors "B257" "B255" 
    successors "B261" "B260" 
    xhandlers
    flags 
    probability 4599929446008461404
    begin_IR
      LIR
      nr 2554  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2556  <|@ instruction rbp|QWORD = LEA [rcx|QWORD - 2] size: QWORD <|@ <|@
      nr 2558  <|@ instruction CMP (x: r13|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr 2560  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B258 -> B261 falseDestination: B258 -> B260 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B260"
    from_bci -1
    to_bci -1
    predecessors "B258" 
    successors "B261" 
    xhandlers
    flags 
    probability 4598364989485822533
    begin_IR
      LIR
      nr 2566  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2568  <|@ instruction xmm0|V64_DWORD[..] = H [rax|QWORD[.] + r13|QWORD * 4] nZ: XMM oh: VMOVQ <|@ <|@
      nr 2570  <|@ instruction J (address: [r10|QWORD[.] + r13|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr 2572  <|@ instruction rbp|QWORD = LEA [r13|QWORD + 2] size: QWORD <|@ <|@
      nr 2574  <|@ instruction r13|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr 2576  <|@ instruction JUMP ~[] destination: B260 -> B261 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B261"
    from_bci -1
    to_bci -1
    predecessors "B260" "B258" 
    successors "B264" "B263" 
    xhandlers
    flags 
    probability 4599929446008461404
    begin_IR
      LIR
      nr 2578  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2580  <|@ instruction rbp|QWORD = DEC rcx|QWORD size: QWORD <|@ <|@
      nr 2582  <|@ instruction CMP (x: r13|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr 2584  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B261 -> B264 falseDestination: B261 -> B263 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B263"
    from_bci -1
    to_bci -1
    predecessors "B261" 
    successors "B264" 
    xhandlers
    flags 
    probability 4598364989485822533
    begin_IR
      LIR
      nr 2590  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2592  <|@ instruction rax|DWORD[.] = MOV [rax|QWORD[.] + r13|QWORD * 4] size: DWORD <|@ <|@
      nr 2594  <|@ instruction MOV (x: [r10|QWORD[.] + r13|QWORD * 4], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr 2596  <|@ instruction JUMP ~[] destination: B263 -> B264 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B264"
    from_bci -1
    to_bci -1
    predecessors "B248" "B263" "B261" 
    successors "B265" "B280" 
    xhandlers
    flags 
    probability 4604433045635831900
    begin_IR
      LIR
      nr 2598  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2600  <|@ instruction r10|QWORD = MOVSXD rdx|DWORD size: QWORD <|@ <|@
      nr 2602  <|@ instruction CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr 2604  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B264 -> B265 falseDestination: B264 -> B280 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B280"
    from_bci -1
    to_bci -1
    predecessors "B264" 
    successors "B281" 
    xhandlers
    flags 
    probability 4599929446008461404
    begin_IR
      LIR
      nr 2722  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2724  <|@ instruction xmm2|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null> <|@ <|@
      nr 2726  <|@ instruction xmm1|V128_DWORD[....] = L oc: SIMD<null,null,null,null> <|@ <|@
      nr 2728  <|@ instruction xmm0|V64_DWORD[..] = L oc: SIMD<null,null> <|@ <|@
      nr 2730  <|@ instruction JUMP ~[] destination: B280 -> B281 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B281"
    from_bci -1
    to_bci -1
    predecessors "B280" "B278" "B276" 
    successors "B286" "B283" 
    xhandlers
    flags 
    probability 4604433045635831900
    begin_IR
      LIR
      nr 2732  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2734  <|@ instruction TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr 2736  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B281 -> B286 falseDestination: B281 -> B283 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B283"
    from_bci -1
    to_bci -1
    predecessors "B281" 
    successors "B284" 
    xhandlers
    flags 
    probability 4599929446008461404
    begin_IR
      LIR
      nr 2742  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2744  <|@ instruction rdx|DWORD = DEC rdx|DWORD size: DWORD <|@ <|@
      nr 2746  <|@ instruction rdx|DWORD = SHL rdx|DWORD y: 2 size: DWORD <|@ <|@
      nr 2748  <|@ instruction rdx|QWORD = MOVSXD rdx|DWORD size: QWORD <|@ <|@
      nr 2750  <|@ instruction rcx|QWORD[.] = LEA [r11|QWORD[.] + 16] size: QWORD <|@ <|@
      nr 2752  <|@ instruction rcx|QWORD[.] = ADD (x: rcx|QWORD[.], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 2754  <|@ instruction rcx|QWORD[*] = SHR rcx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 2756  <|@ instruction rdx|QWORD[.] = LEA [r11|QWORD[.] + 16] size: QWORD <|@ <|@
      nr 2758  <|@ instruction rdx|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 2760  <|@ instruction rcx|QWORD[*] = SUB (x: rcx|QWORD[*], ~y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr 2762  <|@ instruction rcx|QWORD[*] = INC rcx|QWORD[*] size: QWORD <|@ <|@
      nr 2764  <|@ instruction JUMP ~[] destination: B283 -> B284 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B353"
    from_bci -1
    to_bci -1
    predecessors "B284" 
    successors "B284" 
    xhandlers
    flags "lle" 
    loop_index 10
    loop_depth 1
    probability 4599929446008461404
    begin_IR
      LIR
      nr 3436  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 3438  <|@ instruction rcx|QWORD[*] = DEC rcx|QWORD[*] size: QWORD <|@ <|@
      nr 3440  <|@ instruction r10|QWORD[*] = ADD (x: rdx|QWORD[*], y: rbx|QWORD) size: QWORD <|@ <|@
      nr 3442  <|@ instruction r10|QWORD[*] = ADD (x: r10|QWORD[*], y: rcx|QWORD[*]) size: QWORD <|@ <|@
      nr 3444  <|@ instruction MOVB (x: [r10|QWORD[*]], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 3446  <|@ instruction JUMP ~[] destination: B353 -> B284 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B284"
    from_bci -1
    to_bci -1
    predecessors "B283" "B353" 
    successors "B286" "B353" 
    xhandlers
    flags "llh" 
    loop_index 10
    loop_depth 1
    probability 4604433045635831900
    begin_IR
      LIR
      nr 2766  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2768  <|@ instruction CMP rcx|QWORD[*] y: 1 size: QWORD <|@ <|@
      nr 2770  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B284 -> B286 falseDestination: B284 -> B353 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B228"
    from_bci -1
    to_bci -1
    predecessors "B227" 
    successors "B229" "B230" 
    xhandlers
    flags 
    probability 4603399296729809126
    begin_IR
      LIR
      nr 2180  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2182  <|@ instruction CMP stack:100|DWORD y: 11 size: DWORD <|@ <|@
      nr 2188  <|@ instruction r14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2184  <|@ instruction BRANCH trueDestinationProbability: 0.7308950256495741 condition: < trueDestination: B228 -> B229 falseDestination: B228 -> B230 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B229"
    from_bci -1
    to_bci -1
    predecessors "B228" 
    successors "B232" 
    xhandlers
    flags 
    probability 4601308123973474700
    begin_IR
      LIR
      nr 2186  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2190  <|@ instruction r13|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr 2194  <|@ instruction JUMP ~[] destination: B229 -> B232 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B265"
    from_bci -1
    to_bci -1
    predecessors "B264" 
    successors "B270" "B268" 
    xhandlers
    flags 
    probability 4599929446008461404
    begin_IR
      LIR
      nr 2606  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2608  <|@ instruction rax|QWORD[.] = LEA [r11|QWORD[.] + rcx|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr 2610  <|@ instruction r10|QWORD = SUB (x: r10|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr 2612  <|@ instruction rcx|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr 2614  <|@ instruction TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr 2620  <|@ instruction rbp|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 2622  <|@ instruction xmm2|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null> <|@ <|@
      nr 2616  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B265 -> B270 falseDestination: B265 -> B268 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B270"
    from_bci -1
    to_bci -1
    predecessors "B265" "B268" 
    successors "B273" "B272" 
    xhandlers
    flags 
    probability 4599929446008461404
    begin_IR
      LIR
      nr 2648  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2650  <|@ instruction rcx|QWORD = LEA [r10|QWORD - 4] size: QWORD <|@ <|@
      nr 2652  <|@ instruction CMP (x: rbp|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr 2658  <|@ instruction xmm1|V128_DWORD[....] = L oc: SIMD<null,null,null,null> <|@ <|@
      nr 2654  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B270 -> B273 falseDestination: B270 -> B272 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B272"
    from_bci -1
    to_bci -1
    predecessors "B270" 
    successors "B273" 
    xhandlers
    flags 
    probability 4598364989485822533
    begin_IR
      LIR
      nr 2662  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2666  <|@ instruction J (address: [rax|QWORD[.] + rbp|QWORD * 4], input: xmm1|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr 2668  <|@ instruction rcx|QWORD = LEA [rbp|QWORD + 4] size: QWORD <|@ <|@
      nr 2670  <|@ instruction rbp|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr 2672  <|@ instruction JUMP ~[] destination: B272 -> B273 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B273"
    from_bci -1
    to_bci -1
    predecessors "B272" "B270" 
    successors "B276" "B275" 
    xhandlers
    flags 
    probability 4599929446008461404
    begin_IR
      LIR
      nr 2674  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2676  <|@ instruction rcx|QWORD = LEA [r10|QWORD - 2] size: QWORD <|@ <|@
      nr 2678  <|@ instruction CMP (x: rbp|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr 2684  <|@ instruction xmm0|V64_DWORD[..] = L oc: SIMD<null,null> <|@ <|@
      nr 2680  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B273 -> B276 falseDestination: B273 -> B275 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B275"
    from_bci -1
    to_bci -1
    predecessors "B273" 
    successors "B276" 
    xhandlers
    flags 
    probability 4598364989485822533
    begin_IR
      LIR
      nr 2688  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2692  <|@ instruction J (address: [rax|QWORD[.] + rbp|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr 2694  <|@ instruction rcx|QWORD = LEA [rbp|QWORD + 2] size: QWORD <|@ <|@
      nr 2696  <|@ instruction rbp|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr 2698  <|@ instruction JUMP ~[] destination: B275 -> B276 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B276"
    from_bci -1
    to_bci -1
    predecessors "B275" "B273" 
    successors "B281" "B278" 
    xhandlers
    flags 
    probability 4599929446008461404
    begin_IR
      LIR
      nr 2700  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2702  <|@ instruction r10|QWORD = DEC r10|QWORD size: QWORD <|@ <|@
      nr 2704  <|@ instruction CMP (x: rbp|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 2706  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B276 -> B281 falseDestination: B276 -> B278 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B278"
    from_bci -1
    to_bci -1
    predecessors "B276" 
    successors "B281" 
    xhandlers
    flags 
    probability 4598364989485822533
    begin_IR
      LIR
      nr 2712  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2714  <|@ instruction MOV (x: [rax|QWORD[.] + rbp|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr 2716  <|@ instruction JUMP ~[] destination: B278 -> B281 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B286"
    from_bci -1
    to_bci -1
    predecessors "B281" "B284" 
    successors "B287" "B352" 
    xhandlers
    flags 
    probability 4604433045635831900
    begin_IR
      LIR
      nr 2776  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2778  <|@ instruction CMP [r11|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr 2780  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B286 -> B287 falseDestination: B286 -> B352 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B287"
    from_bci -1
    to_bci -1
    predecessors "B286" 
    successors "B288" "B289" 
    xhandlers
    flags 
    probability 4604433045635831900
    begin_IR
      LIR
      nr 2782  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2784  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr 2786  <|@ instruction rcx|QWORD = LEA [rdx|QWORD + 24] size: QWORD <|@ <|@
      nr 2788  <|@ instruction CMP (x: rcx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr 2790  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B287 -> B288 falseDestination: B287 -> B289 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B289"
    from_bci -1
    to_bci -1
    predecessors "B287" 
    successors "B290" 
    xhandlers
    flags 
    probability 4604370467374926345
    begin_IR
      LIR
      nr 2826  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2828  <|@ instruction MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD <|@ <|@
      nr 2830  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + 216] instr: 0 <|@ <|@
      nr 2832  <|@ instruction rdx|QWORD[*] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr 2834  <|@ instruction JUMP ~[] destination: B289 -> B290 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B290"
    from_bci -1
    to_bci -1
    predecessors "B289" "B288" 
    successors "B291" 
    xhandlers
    flags 
    probability 4604433045635831900
    begin_IR
      LIR
      nr 2836  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2838  <|@ instruction rcx|QWORD[.] = MOVE rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr 2840  <|@ instruction r10|QWORD = MOV [rdi|QWORD + 168] size: QWORD <|@ <|@
      nr 2842  <|@ instruction MOV (x: [rdx|QWORD[*]], y: r10|QWORD) size: QWORD <|@ <|@
      nr 2844  <|@ instruction MOV [rdx|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr 2846  <|@ instruction MOV (x: [rdx|QWORD[*] + 12], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr 2848  <|@ instruction MOV (x: [rdx|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr 2850  <|@ instruction rcx|DWORD[.] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@120cc8dc encoding: base: 0 shift: 3 <|@ <|@
      nr 2852  <|@ instruction MOV (x: [r11|QWORD[.] + r9|DWORD * 4 + 16], y: rcx|DWORD[.]) size: DWORD <|@ <|@
      nr 2854  <|@ instruction rsi|QWORD[.] = LEA [r11|QWORD[.] + r9|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr 2856  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 2858  <|@ instruction MOVB (x: [rsi|QWORD[*] + rbx|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 2860  <|@ instruction r13|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2862  <|@ instruction JUMP ~[] destination: B290 -> B291 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B312"
    from_bci -1
    to_bci -1
    predecessors "B307" "B308" 
    successors "B313" 
    xhandlers
    flags 
    probability 4599746673168601052
    begin_IR
      LIR
      nr 3062  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3056  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 3058  <|@ instruction stack:64|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3064  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/String;, resolved>} <|@ <|@
      nr 3066  <|@ instruction rdx|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr 3068  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 3070  <|@ instruction stack:96|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr 3072  <|@ instruction r13|QWORD = MOVE r11|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 3074  <|@ instruction r14|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr 3076  <|@ st <@st|@reference-map: [stack:64]
live-base-pointers: []
java.lang.String.split(String.java:2373) [bci: 261]
locals: - - - - - - - vobject:ArrayList:0{modCount=stack:100|DWORD,size=stack:100|DWORD,elementData=stack:64|QWORD[.]} stack:96|DWORD - 
vobject:ArrayList:0{modCount=stack:100|DWORD,size=stack:100|DWORD,elementData=stack:64|QWORD[.]} Ljava/util/ArrayList; stack:100|DWORD stack:100|DWORD stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:261] <|@ <|@
      nr 3078  <|@ instruction JUMP ~[] destination: B312 -> B313 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B194"
    from_bci -1
    to_bci -1
    predecessors "B193" 
    successors "B195" "B196" 
    xhandlers
    flags 
    probability 4598846497278032421
    begin_IR
      LIR
      nr 1870  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1872  <|@ instruction CMP (x: r14|DWORD, y: stack:44|DWORD) size: DWORD <|@ <|@
      nr 1874  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B194 -> B195 falseDestination: B194 -> B196 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B196"
    from_bci -1
    to_bci -1
    predecessors "B194" 
    successors "B197" "B200" 
    xhandlers
    flags 
    probability 4598846497278032421
    begin_IR
      LIR
      nr 1884  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1886  <|@ instruction rdi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1888  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[0]{}] <|@ <|@
      nr 1890  <|@ instruction CMP (x: rdi|QWORD[.], y: stack:88|QWORD[.]) size: QWORD <|@ <|@
      nr 1892  <|@ instruction BRANCH trueDestinationProbability: 0.2066504369952622 condition: = trueDestination: B196 -> B197 falseDestination: B196 -> B200 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B200"
    from_bci -1
    to_bci -1
    predecessors "B196" 
    successors "B232" 
    xhandlers
    flags 
    probability 4597378993675054365
    begin_IR
      LIR
      nr 1924  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1926  <|@ instruction rsi|DWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: NarrowOop[char[0]{}] <|@ <|@
      nr 1928  <|@ instruction r14|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1930  <|@ instruction r13|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1934  <|@ instruction JUMP ~[] destination: B200 -> B232 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B209"
    from_bci -1
    to_bci -1
    predecessors "B204" "B205" 
    successors "B210" 
    xhandlers
    flags 
    probability 4599182611536347262
    begin_IR
      LIR
      nr 2018  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2020  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr 2022  <|@ instruction rdx|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 2024  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 2026  <|@ st <@st|@reference-map: [stack:40, stack:48, stack:64, stack:96]
live-base-pointers: []
java.lang.String.split(String.java:2351) [bci: 132]
stack: int[-1|0xffffffffffffffff] 
locals: stack:32|QWORD[.] - int[0|0x0] stack:40|DWORD r14|DWORD - int[0|0x0] vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]} - - 
vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]} Ljava/util/ArrayList; stack:92|DWORD stack:92|DWORD stack:88|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:132] <|@ <|@
      nr 2030  <|@ instruction JUMP ~[] destination: B209 -> B210 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B230"
    from_bci -1
    to_bci -1
    predecessors "B228" 
    successors "B232" 
    xhandlers
    flags 
    probability 4594791320917528704
    begin_IR
      LIR
      nr 2196  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2200  <|@ instruction r13|DWORD = MOVE stack:100|DWORD moveKind: DWORD <|@ <|@
      nr 2204  <|@ instruction JUMP ~[] destination: B230 -> B232 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B253"
    from_bci -1
    to_bci -1
    predecessors "B250" "B253" 
    successors "B255" "B253" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 1
    probability 4599929446008461404
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 2516  <|@ instruction xmm0|V256_DWORD[........] = H [rax|QWORD[.] + r13|QWORD * 4] nZ: YMM oh: VMOVDQU <|@ <|@
      nr 2518  <|@ instruction J (address: [r10|QWORD[.] + r13|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr 2520  <|@ instruction r13|QWORD = LEA [r13|QWORD + 8] size: QWORD <|@ <|@
      nr 2522  <|@ instruction CMP (x: r13|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr 2524  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B253 -> B255 falseDestination: B253 -> B253 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B268"
    from_bci -1
    to_bci -1
    predecessors "B265" "B268" 
    successors "B270" "B268" 
    xhandlers
    flags "llh" 
    loop_index 9
    loop_depth 1
    probability 4599929446008461404
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 2636  <|@ instruction J (address: [rax|QWORD[.] + rbp|QWORD * 4], input: xmm2|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr 2638  <|@ instruction rbp|QWORD = LEA [rbp|QWORD + 8] size: QWORD <|@ <|@
      nr 2640  <|@ instruction CMP (x: rbp|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr 2642  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B268 -> B270 falseDestination: B268 -> B268 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B197"
    from_bci -1
    to_bci -1
    predecessors "B196" 
    successors "B198" "B199" 
    xhandlers
    flags 
    probability 4588715946378730674
    begin_IR
      LIR
      nr 1894  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1896  <|@ instruction CMP stack:100|DWORD y: 11 size: DWORD <|@ <|@
      nr 1902  <|@ instruction rsi|DWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: NarrowOop[char[0]{}] <|@ <|@
      nr 1904  <|@ instruction r14|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1898  <|@ instruction BRANCH trueDestinationProbability: 0.7308950256495741 condition: < trueDestination: B197 -> B198 falseDestination: B197 -> B199 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B198"
    from_bci -1
    to_bci -1
    predecessors "B197" 
    successors "B232" 
    xhandlers
    flags 
    probability 4586413719592755138
    begin_IR
      LIR
      nr 1900  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1906  <|@ instruction r13|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr 1910  <|@ instruction JUMP ~[] destination: B198 -> B232 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B187"
    from_bci -1
    to_bci -1
    predecessors "B186" 
    successors "B188" "B189" 
    xhandlers
    flags 
    probability 4586473879993340259
    begin_IR
      LIR
      nr 1790  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1792  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr 1794  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr 1796  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr 1798  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B187 -> B188 falseDestination: B187 -> B189 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B189"
    from_bci -1
    to_bci -1
    predecessors "B187" 
    successors "B190" 
    xhandlers
    flags 
    probability 4586410749403764801
    begin_IR
      LIR
      nr 1816  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1818  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1820  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 0 <|@ <|@
      nr 1822  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr 1824  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1826  <|@ instruction JUMP ~[] destination: B189 -> B190 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B190"
    from_bci -1
    to_bci -1
    predecessors "B189" "B188" 
    successors 
    xhandlers
    flags 
    probability 4586473879993340259
    begin_IR
      LIR
      nr 1828  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1830  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1832  <|@ instruction MOV [rax|QWORD[*] + 12] y: 1 size: DWORD <|@ <|@
      nr 1834  <|@ instruction MOV [rax|QWORD[*]] y: 1 size: QWORD <|@ <|@
      nr 1836  <|@ instruction MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr 1838  <|@ instruction r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@120cc8dc encoding: base: 0 shift: 3 <|@ <|@
      nr 1840  <|@ instruction MOV (x: [rax|QWORD[*] + 16], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr 1842  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1844  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B236"
    from_bci -1
    to_bci -1
    predecessors "B235" 
    successors "B238" 
    xhandlers
    flags 
    probability 4582572226418264729
    begin_IR
      LIR
      nr 2252  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2254  <|@ instruction r13|DWORD[.] = MOVE rsi|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2256  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 2258  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr 2260  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 2262  <|@ st <@st|@reference-map: [r13:0, r14:0, stack:40]
live-base-pointers: []
java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
stack: vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]} stack:40|DWORD 
locals: - - 
java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
locals: vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]} vobject:String:1{value=r14|QWORD[.],hash=int[0|0x0]} 
java.lang.String.split(String.java:2368) [bci: 246]
locals: - - stack:36|DWORD - - - - vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]} - - 
vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]} Ljava/util/ArrayList; stack:92|DWORD stack:92|DWORD stack:88|QWORD[.] 
vobject:String:1{value=r14|QWORD[.],hash=int[0|0x0]} Ljava/lang/String; r14|QWORD[.] int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:9, 7, 246] <|@ <|@
      nr 2264  <|@ instruction rdx|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2266  <|@ instruction rsi|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2268  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2276  <|@ instruction JUMP ~[] destination: B236 -> B238 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B199"
    from_bci -1
    to_bci -1
    predecessors "B197" 
    successors "B232" 
    xhandlers
    flags 
    probability 4580261674980375008
    begin_IR
      LIR
      nr 1912  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1918  <|@ instruction r13|DWORD = MOVE stack:100|DWORD moveKind: DWORD <|@ <|@
      nr 1922  <|@ instruction JUMP ~[] destination: B199 -> B232 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B246"
    from_bci -1
    to_bci -1
    predecessors "B245" 
    successors "B248" 
    xhandlers
    flags 
    probability 4574660039549593971
    begin_IR
      LIR
      nr 2410  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2412  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 2414  <|@ instruction r13|DWORD[.] = MOVE rsi|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2416  <|@ instruction r11|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: -) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@120cc8dc encoding: base: 0 shift: 3 <|@ <|@
      nr 2418  <|@ instruction rsi|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr 2420  <|@ instruction r11|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 2424  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 2426  <|@ instruction stack:96|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 2428  <|@ st <@st|@reference-map: [r13:0, r14:0, stack:40]
live-base-pointers: []
java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
stack: vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]} stack:40|DWORD 
locals: - - 
java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
locals: vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]} vobject:String:1{value=r14|QWORD[.],hash=int[0|0x0]} 
java.lang.String.split(String.java:2368) [bci: 246]
locals: - - stack:36|DWORD - - - - vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]} - - 
vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]} Ljava/util/ArrayList; stack:92|DWORD stack:92|DWORD stack:88|QWORD[.] 
vobject:String:1{value=r14|QWORD[.],hash=int[0|0x0]} Ljava/lang/String; r14|QWORD[.] int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:9, 7, 246] <|@ <|@
      nr 2430  <|@ instruction r11|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2432  <|@ instruction rdx|DWORD = MOVE stack:96|DWORD moveKind: DWORD <|@ <|@
      nr 2434  <|@ instruction r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 2436  <|@ instruction rsi|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2438  <|@ instruction r13|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 2440  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2442  <|@ instruction r9|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 2444  <|@ instruction rbx|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr 2446  <|@ instruction rdi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr 2448  <|@ instruction JUMP ~[] destination: B246 -> B248 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B288"
    from_bci -1
    to_bci -1
    predecessors "B287" 
    successors "B290" 
    xhandlers
    flags 
    probability 4574660039549593971
    begin_IR
      LIR
      nr 2792  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2794  <|@ instruction stack:64|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2796  <|@ instruction r13|DWORD[.] = MOVE rsi|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2798  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 2800  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr 2802  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 2804  <|@ st <@st|@reference-map: [r13:0, r14:0, stack:40, stack:64]
live-base-pointers: []
java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
stack: vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]} stack:40|DWORD 
locals: - - 
java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
locals: vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]} vobject:String:1{value=r14|QWORD[.],hash=int[0|0x0]} 
java.lang.String.split(String.java:2368) [bci: 246]
locals: - - stack:36|DWORD - - - - vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]} - - 
vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]} Ljava/util/ArrayList; stack:92|DWORD stack:92|DWORD stack:88|QWORD[.] 
vobject:String:1{value=r14|QWORD[.],hash=int[0|0x0]} Ljava/lang/String; r14|QWORD[.] int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:9, 7, 246] <|@ <|@
      nr 2806  <|@ instruction rdx|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2808  <|@ instruction r11|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2810  <|@ instruction rsi|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2812  <|@ instruction r9|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 2814  <|@ instruction rbx|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr 2816  <|@ instruction rdi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr 2818  <|@ instruction xmm2|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null> <|@ <|@
      nr 2820  <|@ instruction xmm1|V128_DWORD[....] = L oc: SIMD<null,null,null,null> <|@ <|@
      nr 2822  <|@ instruction xmm0|V64_DWORD[..] = L oc: SIMD<null,null> <|@ <|@
      nr 2824  <|@ instruction JUMP ~[] destination: B288 -> B290 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B188"
    from_bci -1
    to_bci -1
    predecessors "B187" 
    successors "B190" 
    xhandlers
    flags 
    probability 4556716339109859626
    begin_IR
      LIR
      nr 1800  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1802  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1804  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1806  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr 1808  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1810  <|@ st <@st|@reference-map: [r13:0, stack:40]
live-base-pointers: []
java.lang.String.split(String.java:2351) [bci: 132]
stack: int[-1|0xffffffffffffffff] 
locals: r13|QWORD[.] - int[0|0x0] stack:40|DWORD r14|DWORD - int[0|0x0] vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]} - - 
vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]} Ljava/util/ArrayList; stack:92|DWORD stack:92|DWORD stack:88|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:132] <|@ <|@
      nr 1812  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1814  <|@ instruction JUMP ~[] destination: B188 -> B190 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B202"
    from_bci -1
    to_bci -1
    predecessors "B201" 
    successors "B203" 
    xhandlers
    flags 
    probability 4553813439973800263
    begin_IR
      LIR
      nr 1942  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1944  <|@ instruction r10|DWORD = MOVE input: int[-575841|0xfffffffffff7369f] <|@ <|@
      nr 1948  <|@ instruction JUMP ~[] destination: B202 -> B203 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B203"
    from_bci -1
    to_bci -1
    predecessors "B192" "B195" "B202" 
    successors 
    xhandlers
    flags 
    probability 4553813439973800263
    begin_IR
      LIR
      nr 1950  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1856  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1952  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1954  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1956  <|@ st <@st|@reference-map: [r13:0, stack:40]
live-base-pointers: []
java.lang.String.split(String.java:2351) [bci: 132]
stack: int[-1|0xffffffffffffffff] 
locals: r13|QWORD[.] - int[0|0x0] stack:40|DWORD r14|DWORD - int[0|0x0] vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]} - - 
vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]} Ljava/util/ArrayList; stack:92|DWORD stack:92|DWORD stack:88|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:132] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" 
    xhandlers
    flags 
    probability 4524150487867272957
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  554  <|@ instruction stack:104|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  556  <|@ instruction r14|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  558  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  560  <|@ instruction r10|DWORD = MOVE input: int[-553569|0xfffffffffff78d9f] <|@ <|@
      nr  562  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B59" "B61" 
    successors 
    xhandlers
    flags 
    probability 4524150487867272957
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  566  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  568  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  570  <|@ st <@st|@reference-map: [r13:0, stack:40]
live-base-pointers: []
java.lang.String.substring(String.java:1969) [bci: 65]
locals: r13|QWORD[.] r14|DWORD - stack:104|DWORD 
java.lang.String.split(String.java:2353) [bci: 162]
stack: vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]} 
locals: r13|QWORD[.] - int[0|0x0] stack:40|DWORD - stack:96|DWORD int[0|0x0] vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]} - - 
vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]} Ljava/util/ArrayList; stack:92|DWORD stack:92|DWORD stack:88|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:65, 162] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B192"
    from_bci -1
    to_bci -1
    predecessors "B191" 
    successors "B203" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1852  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1854  <|@ instruction r10|DWORD = MOVE input: int[-430867|0xfffffffffff96ced] <|@ <|@
      nr 1858  <|@ instruction JUMP ~[] destination: B192 -> B203 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B362" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   42  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   44  <|@ instruction r10|DWORD = MOVE input: int[-390163|0xfffffffffffa0bed] <|@ <|@
      nr   46  <|@ instruction JUMP ~[] destination: B2 -> B362 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B362"
    from_bci -1
    to_bci -1
    predecessors "B2" "B361" "B4" "B6" "B8" "B10" "B12" "B14" "B16" "B18" "B20" "B22" "B25" "B360" "B359" 
    successors 
    xhandlers
    flags 
    probability 2372834053670830080
    begin_IR
      LIR
      nr 3508  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 3510  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 3512  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr 3514  <|@ st <@st|@reference-map: [rdx:0, r13:0]
live-base-pointers: []
java.lang.String.split(String.java:2336) [bci: 0]
locals: r13|QWORD[.] rdx|QWORD[.] r14|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B346"
    from_bci -1
    to_bci -1
    predecessors "B303" 
    successors "B351" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 3348  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3350  <|@ instruction r11|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr 3352  <|@ instruction r8|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3354  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1976730038] <|@ <|@
      nr 3356  <|@ instruction r9|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3358  <|@ instruction r10|DWORD = MOVE input: int[-440603|0xfffffffffff946e5] <|@ <|@
      nr 3362  <|@ instruction JUMP ~[] destination: B346 -> B351 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B351"
    from_bci -1
    to_bci -1
    predecessors "B306" "B293" "B350" "B349" "B348" "B347" "B346" "B345" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      LIR
      nr 3416  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 3418  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 3420  <|@ instruction MOV (x: [r15|QWORD + 680], y: r9|QWORD[.]) size: QWORD <|@ <|@
      nr 3422  <|@ st <@st|@reference-map: [r8:0]
live-base-pointers: []
java.lang.String.split(String.java:2373) [bci: 261]
locals: - - - - - - - vobject:ArrayList:0{modCount=rdx|DWORD,size=rdx|DWORD,elementData=r8|QWORD[.]} r11|DWORD - 
vobject:ArrayList:0{modCount=rdx|DWORD,size=rdx|DWORD,elementData=r8|QWORD[.]} Ljava/util/ArrayList; rdx|DWORD rdx|DWORD r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:261] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B361"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B362" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 3500  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3502  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 3504  <|@ instruction r10|DWORD = MOVE input: int[-414227|0xfffffffffff9aded] <|@ <|@
      nr 3506  <|@ instruction JUMP ~[] destination: B361 -> B362 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B293"
    from_bci -1
    to_bci -1
    predecessors "B292" 
    successors "B351" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2880  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2882  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 2884  <|@ instruction r10|DWORD = MOVE input: int[-431379|0xfffffffffff96aed] <|@ <|@
      nr 2886  <|@ instruction r11|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr 2888  <|@ instruction r8|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2890  <|@ instruction JUMP ~[] destination: B293 -> B351 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B350"
    from_bci -1
    to_bci -1
    predecessors "B294" 
    successors "B351" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 3404  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3406  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 3408  <|@ instruction r10|DWORD = MOVE input: int[-431635|0xfffffffffff969ed] <|@ <|@
      nr 3410  <|@ instruction r11|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr 3412  <|@ instruction r8|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3414  <|@ instruction JUMP ~[] destination: B350 -> B351 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B239"
    from_bci -1
    to_bci -1
    predecessors "B234" 
    successors "B357" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2328  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2330  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 2332  <|@ instruction r10|DWORD = MOVE input: int[-447003|0xfffffffffff92de5] <|@ <|@
      nr 2334  <|@ instruction JUMP ~[] destination: B239 -> B357 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B357"
    from_bci -1
    to_bci -1
    predecessors "B240" "B239" "B356" "B355" "B352" "B244" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr 3468  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 3470  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 3472  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr 3474  <|@ st <@st|@reference-map: [r14:0, stack:40]
live-base-pointers: []
java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
stack: vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]} r13|DWORD 
locals: - - 
java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
locals: vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]} vobject:String:1{value=r14|QWORD[.],hash=int[0|0x0]} 
java.lang.String.split(String.java:2368) [bci: 246]
locals: - - stack:36|DWORD - - - - vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]} - - 
vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]} Ljava/util/ArrayList; stack:92|DWORD stack:92|DWORD stack:88|QWORD[.] 
vobject:String:1{value=r14|QWORD[.],hash=int[0|0x0]} Ljava/lang/String; r14|QWORD[.] int[0|0x0] 
>@ <|@ instruction DEOPT info [bci:9, 7, 246] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B240"
    from_bci -1
    to_bci -1
    predecessors "B233" 
    successors "B357" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2336  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2338  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@358913875] <|@ <|@
      nr 2340  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2342  <|@ instruction r10|DWORD = MOVE input: int[-446268|0xfffffffffff930c4] <|@ <|@
      nr 2346  <|@ instruction JUMP ~[] destination: B240 -> B357 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B362" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   84  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   86  <|@ instruction r10|DWORD = MOVE input: int[-390675|0xfffffffffffa09ed] <|@ <|@
      nr   88  <|@ instruction JUMP ~[] destination: B8 -> B362 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B175" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1200  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1202  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1204  <|@ instruction r10|DWORD = MOVE input: int[-563809|0xfffffffffff7659f] <|@ <|@
      nr 1206  <|@ instruction r14|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1208  <|@ instruction rbx|DWORD = MOVE stack:96|DWORD moveKind: DWORD <|@ <|@
      nr 1210  <|@ instruction rcx|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1212  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1214  <|@ instruction JUMP ~[] destination: B126 -> B175 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B175"
    from_bci -1
    to_bci -1
    predecessors "B122" "B121" "B174" "B173" "B170" "B126" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr 1708  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 1710  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1712  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr 1714  <|@ st <@st|@reference-map: [r8:0, r13:0, r14:0]
live-base-pointers: []
java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
stack: vobject:ArrayList:0{modCount=rdx|DWORD,size=rdx|DWORD,elementData=r8|QWORD[.]} r9|DWORD 
locals: - - 
java.util.ArrayList.add(ArrayList.java:462) [bci: 7]
locals: vobject:ArrayList:0{modCount=rdx|DWORD,size=rdx|DWORD,elementData=r8|QWORD[.]} r14|QWORD[.] 
java.lang.String.split(String.java:2353) [bci: 165]
locals: r13|QWORD[.] - int[0|0x0] rcx|DWORD - rbx|DWORD int[0|0x0] vobject:ArrayList:0{modCount=rdx|DWORD,size=rdx|DWORD,elementData=r8|QWORD[.]} - - 
vobject:ArrayList:0{modCount=rdx|DWORD,size=rdx|DWORD,elementData=r8|QWORD[.]} Ljava/util/ArrayList; rdx|DWORD rdx|DWORD r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:9, 7, 165] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B181"
    from_bci -1
    to_bci -1
    predecessors "B31" "B32" 
    successors "B182" 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1750  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1744  <|@ instruction r14|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1746  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1752  <|@ instruction JUMP ~[] destination: B181 -> B182 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B182"
    from_bci -1
    to_bci -1
    predecessors "B181" 
    successors "B183" 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1754  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1756  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@180539890] <|@ <|@
      nr 1758  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1760  <|@ instruction r10|DWORD = MOVE input: int[-421147|0xfffffffffff992e5] <|@ <|@
      nr 1762  <|@ instruction JUMP ~[] destination: B182 -> B183 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B183"
    from_bci -1
    to_bci -1
    predecessors "B29" "B182" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1764  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 1766  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1768  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr 1770  <|@ st <@st|@reference-map: [r13:0, stack:40]
live-base-pointers: []
java.lang.String.split(String.java:2351) [bci: 125]
locals: r13|QWORD[.] - int[0|0x0] stack:40|DWORD r14|DWORD - int[0|0x0] vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]} - - 
vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]} Ljava/util/ArrayList; stack:92|DWORD stack:92|DWORD stack:88|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:125] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B362" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  168  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  170  <|@ instruction r10|DWORD = MOVE input: int[-393747|0xfffffffffff9fded] <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B20 -> B362 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B362" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  154  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  156  <|@ instruction r10|DWORD = MOVE input: int[-394259|0xfffffffffff9fbed] <|@ <|@
      nr  158  <|@ instruction JUMP ~[] destination: B18 -> B362 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B347"
    from_bci -1
    to_bci -1
    predecessors "B302" 
    successors "B351" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 3364  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3366  <|@ instruction r11|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr 3368  <|@ instruction r8|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3370  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1144871021] <|@ <|@
      nr 3372  <|@ instruction r9|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3374  <|@ instruction r10|DWORD = MOVE input: int[-439827|0xfffffffffff949ed] <|@ <|@
      nr 3378  <|@ instruction JUMP ~[] destination: B347 -> B351 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B362" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  126  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  128  <|@ instruction r10|DWORD = MOVE input: int[-393235|0xfffffffffff9ffed] <|@ <|@
      nr  130  <|@ instruction JUMP ~[] destination: B14 -> B362 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B341"
    from_bci -1
    to_bci -1
    predecessors "B339" 
    successors "B342" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 3302  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3304  <|@ instruction rcx|DWORD = MOVE input: int[-445971|0xfffffffffff931ed] <|@ <|@
      nr 3306  <|@ instruction JUMP ~[] destination: B341 -> B342 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B342"
    from_bci -1
    to_bci -1
    predecessors "B332" "B338" "B341" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 3308  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 3310  <|@ instruction MOV (x: [r15|QWORD + 668], y: rcx|DWORD) size: DWORD <|@ <|@
      nr 3312  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 3314  <|@ st <@st|@reference-map: [rax:0, r8:0]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - rax|QWORD[.] - rax|QWORD[.] vobject:ArrayList$SubList$1:0{cursor=r10|DWORD,lastRet=r9|DWORD,expectedModCount=stack:100|DWORD,val$index=int[0|0x0],val$offset=int[0|0x0],this$1=vobject:ArrayList$SubList:1{modCount=stack:100|DWORD,parentOffset=int[0|0x0],offset=int[0|0x0],size=r11|DWORD,parent=vobject:ArrayList:2{modCount=stack:100|DWORD,size=stack:100|DWORD,elementData=r8|QWORD[.]},this$0=vobject:ArrayList:2}} r10|DWORD 
java.lang.String.split(String.java:2378) [bci: 307]
locals: - - - - - - - - - - 
vobject:ArrayList$SubList$1:0{cursor=r10|DWORD,lastRet=r9|DWORD,expectedModCount=stack:100|DWORD,val$index=int[0|0x0],val$offset=int[0|0x0],this$1=vobject:ArrayList$SubList:1{modCount=stack:100|DWORD,parentOffset=int[0|0x0],offset=int[0|0x0],size=r11|DWORD,parent=vobject:ArrayList:2{modCount=stack:100|DWORD,size=stack:100|DWORD,elementData=r8|QWORD[.]},this$0=vobject:ArrayList:2}} Ljava/util/ArrayList$SubList$1; r10|DWORD r9|DWORD stack:100|DWORD int[0|0x0] int[0|0x0] vobject:ArrayList$SubList:1{modCount=stack:100|DWORD,parentOffset=int[0|0x0],offset=int[0|0x0],size=r11|DWORD,parent=vobject:ArrayList:2{modCount=stack:100|DWORD,size=stack:100|DWORD,elementData=r8|QWORD[.]},this$0=vobject:ArrayList:2} 
vobject:ArrayList$SubList:1{modCount=stack:100|DWORD,parentOffset=int[0|0x0],offset=int[0|0x0],size=r11|DWORD,parent=vobject:ArrayList:2{modCount=stack:100|DWORD,size=stack:100|DWORD,elementData=r8|QWORD[.]},this$0=vobject:ArrayList:2} Ljava/util/ArrayList$SubList; stack:100|DWORD int[0|0x0] int[0|0x0] r11|DWORD vobject:ArrayList:2{modCount=stack:100|DWORD,size=stack:100|DWORD,elementData=r8|QWORD[.]} vobject:ArrayList:2{modCount=stack:100|DWORD,size=stack:100|DWORD,elementData=r8|QWORD[.]} 
vobject:ArrayList:2{modCount=stack:100|DWORD,size=stack:100|DWORD,elementData=r8|QWORD[.]} Ljava/util/ArrayList; stack:100|DWORD stack:100|DWORD r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:42, 307] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B362" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  140  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  142  <|@ instruction r10|DWORD = MOVE input: int[-392723|0xfffffffffffa01ed] <|@ <|@
      nr  144  <|@ instruction JUMP ~[] destination: B16 -> B362 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B244"
    from_bci -1
    to_bci -1
    predecessors "B243" 
    successors "B357" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2384  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2386  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 2388  <|@ instruction r10|DWORD = MOVE input: int[-585825|0xfffffffffff70f9f] <|@ <|@
      nr 2390  <|@ instruction JUMP ~[] destination: B244 -> B357 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B170"
    from_bci -1
    to_bci -1
    predecessors "B168" 
    successors "B175" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1634  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1636  <|@ instruction stack:104|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1638  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1640  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@358913875] <|@ <|@
      nr 1642  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1644  <|@ instruction r10|DWORD = MOVE input: int[-427836|0xfffffffffff978c4] <|@ <|@
      nr 1648  <|@ instruction r14|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1650  <|@ instruction rbx|DWORD = MOVE stack:96|DWORD moveKind: DWORD <|@ <|@
      nr 1652  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1654  <|@ instruction rdx|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 1656  <|@ instruction rcx|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1658  <|@ instruction JUMP ~[] destination: B170 -> B175 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B362" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   98  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  100  <|@ instruction r10|DWORD = MOVE input: int[-392211|0xfffffffffffa03ed] <|@ <|@
      nr  102  <|@ instruction JUMP ~[] destination: B10 -> B362 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B332"
    from_bci -1
    to_bci -1
    predecessors "B331" 
    successors "B342" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 3240  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3242  <|@ instruction rcx|DWORD = MOVE input: int[-439315|0xfffffffffff94bed] <|@ <|@
      nr 3244  <|@ instruction JUMP ~[] destination: B332 -> B342 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B352"
    from_bci -1
    to_bci -1
    predecessors "B286" 
    successors "B357" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 3424  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3426  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@358913875] <|@ <|@
      nr 3428  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3430  <|@ instruction r10|DWORD = MOVE input: int[-449852|0xfffffffffff922c4] <|@ <|@
      nr 3432  <|@ instruction r13|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 3434  <|@ instruction JUMP ~[] destination: B352 -> B357 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B356"
    from_bci -1
    to_bci -1
    predecessors "B241" 
    successors "B357" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 3460  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3462  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 3464  <|@ instruction r10|DWORD = MOVE input: int[-449299|0xfffffffffff924ed] <|@ <|@
      nr 3466  <|@ instruction JUMP ~[] destination: B356 -> B357 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B355"
    from_bci -1
    to_bci -1
    predecessors "B242" 
    successors "B357" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 3452  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3454  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 3456  <|@ instruction r10|DWORD = MOVE input: int[-450331|0xfffffffffff920e5] <|@ <|@
      nr 3458  <|@ instruction JUMP ~[] destination: B355 -> B357 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B348"
    from_bci -1
    to_bci -1
    predecessors "B298" 
    successors "B351" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 3380  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3382  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 3384  <|@ instruction r10|DWORD = MOVE input: int[-435491|0xfffffffffff95add] <|@ <|@
      nr 3386  <|@ instruction r11|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr 3388  <|@ instruction r8|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3390  <|@ instruction JUMP ~[] destination: B348 -> B351 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B174"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B175" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1692  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1694  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1696  <|@ instruction r10|DWORD = MOVE input: int[-427283|0xfffffffffff97aed] <|@ <|@
      nr 1698  <|@ instruction r14|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1700  <|@ instruction rbx|DWORD = MOVE stack:96|DWORD moveKind: DWORD <|@ <|@
      nr 1702  <|@ instruction rcx|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1704  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1706  <|@ instruction JUMP ~[] destination: B174 -> B175 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B360"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B362" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 3488  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3490  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1154356070] <|@ <|@
      nr 3492  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3494  <|@ instruction r10|DWORD = MOVE input: int[-460051|0xfffffffffff8faed] <|@ <|@
      nr 3498  <|@ instruction JUMP ~[] destination: B360 -> B362 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B349"
    from_bci -1
    to_bci -1
    predecessors "B295" 
    successors "B351" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 3392  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3394  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 3396  <|@ instruction r10|DWORD = MOVE input: int[-432667|0xfffffffffff965e5] <|@ <|@
      nr 3398  <|@ instruction r11|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr 3400  <|@ instruction r8|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3402  <|@ instruction JUMP ~[] destination: B349 -> B351 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B362" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  202  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  204  <|@ instruction r10|DWORD = MOVE input: int[-417555|0xfffffffffff9a0ed] <|@ <|@
      nr  206  <|@ instruction JUMP ~[] destination: B25 -> B362 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  450  <|@ instruction r14|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  452  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  454  <|@ instruction MOV [r15|QWORD + 668] y: -430099 size: DWORD <|@ <|@
      nr  456  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  458  <|@ st <@st|@reference-map: [r13:0, stack:40]
live-base-pointers: []
java.lang.String.substring(String.java:1969) [bci: 65]
locals: r13|QWORD[.] r14|DWORD - int[0|0x0] 
java.lang.String.split(String.java:2353) [bci: 162]
stack: vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]} 
locals: r13|QWORD[.] - int[0|0x0] stack:40|DWORD - stack:96|DWORD int[0|0x0] vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]} - - 
vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]} Ljava/util/ArrayList; stack:92|DWORD stack:92|DWORD stack:88|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:65, 162] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B362" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   56  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   58  <|@ instruction r10|DWORD = MOVE input: int[-389651|0xfffffffffffa0ded] <|@ <|@
      nr   60  <|@ instruction JUMP ~[] destination: B4 -> B362 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  354  <|@ instruction stack:96|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  356  <|@ instruction r14|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  358  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction r10|DWORD = MOVE input: int[-423443|0xfffffffffff989ed] <|@ <|@
      nr  362  <|@ instruction JUMP ~[] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B39" "B41" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  366  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  368  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  370  <|@ st <@st|@reference-map: [rsi:0, r13:0, stack:40]
live-base-pointers: []
java.lang.String.indexOf(String.java:1558) [bci: 37]
locals: - stack:40|DWORD - r8|DWORD rsi|QWORD[.] stack:96|DWORD 
java.lang.String.split(String.java:2351) [bci: 129]
locals: r13|QWORD[.] - int[0|0x0] stack:40|DWORD r14|DWORD - int[0|0x0] vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]} - - 
vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]} Ljava/util/ArrayList; stack:92|DWORD stack:92|DWORD stack:88|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37, 129] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B175" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1136  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1138  <|@ instruction stack:104|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1140  <|@ instruction stack:112|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1142  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1144  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@358913875] <|@ <|@
      nr 1146  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1148  <|@ instruction r10|DWORD = MOVE input: int[-424252|0xfffffffffff986c4] <|@ <|@
      nr 1154  <|@ instruction rbx|DWORD = MOVE stack:96|DWORD moveKind: DWORD <|@ <|@
      nr 1158  <|@ instruction rdx|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 1160  <|@ instruction rcx|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1162  <|@ instruction JUMP ~[] destination: B122 -> B175 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B362" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  112  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  114  <|@ instruction r10|DWORD = MOVE input: int[-391699|0xfffffffffffa05ed] <|@ <|@
      nr  116  <|@ instruction JUMP ~[] destination: B12 -> B362 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  536  <|@ instruction stack:104|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  538  <|@ instruction r14|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  540  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  542  <|@ instruction r10|DWORD = MOVE input: int[-430355|0xfffffffffff96eed] <|@ <|@
      nr  544  <|@ instruction JUMP ~[] destination: B59 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B195"
    from_bci -1
    to_bci -1
    predecessors "B194" 
    successors "B203" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1876  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1878  <|@ instruction r10|DWORD = MOVE input: int[-452627|0xfffffffffff917ed] <|@ <|@
      nr 1882  <|@ instruction JUMP ~[] destination: B195 -> B203 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B173"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors "B175" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1676  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1678  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1680  <|@ instruction r10|DWORD = MOVE input: int[-428315|0xfffffffffff976e5] <|@ <|@
      nr 1682  <|@ instruction r14|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1684  <|@ instruction rbx|DWORD = MOVE stack:96|DWORD moveKind: DWORD <|@ <|@
      nr 1686  <|@ instruction rcx|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1688  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1690  <|@ instruction JUMP ~[] destination: B173 -> B175 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  334  <|@ instruction stack:96|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  336  <|@ instruction r14|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  338  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  340  <|@ instruction r10|DWORD = MOVE input: int[-423187|0xfffffffffff98aed] <|@ <|@
      nr  342  <|@ instruction JUMP ~[] destination: B39 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B306"
    from_bci -1
    to_bci -1
    predecessors "B305" 
    successors "B351" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2974  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2976  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 2978  <|@ instruction r10|DWORD = MOVE input: int[-438803|0xfffffffffff94ded] <|@ <|@
      nr 2980  <|@ instruction r11|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr 2982  <|@ instruction r8|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2984  <|@ instruction JUMP ~[] destination: B306 -> B351 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B338"
    from_bci -1
    to_bci -1
    predecessors "B335" 
    successors "B342" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 3286  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3288  <|@ instruction rcx|DWORD = MOVE input: int[-445739|0xfffffffffff932d5] <|@ <|@
      nr 3290  <|@ instruction JUMP ~[] destination: B338 -> B342 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B345"
    from_bci -1
    to_bci -1
    predecessors "B304" 
    successors "B351" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 3332  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3334  <|@ instruction r11|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr 3336  <|@ instruction r8|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3338  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1976730038] <|@ <|@
      nr 3340  <|@ instruction r9|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3342  <|@ instruction r10|DWORD = MOVE input: int[-442907|0xfffffffffff93de5] <|@ <|@
      nr 3346  <|@ instruction JUMP ~[] destination: B345 -> B351 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B362" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   72  <|@ instruction r10|DWORD = MOVE input: int[-391187|0xfffffffffffa07ed] <|@ <|@
      nr   74  <|@ instruction JUMP ~[] destination: B6 -> B362 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B175" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1120  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1122  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1124  <|@ instruction r10|DWORD = MOVE input: int[-424987|0xfffffffffff983e5] <|@ <|@
      nr 1126  <|@ instruction rbx|DWORD = MOVE stack:96|DWORD moveKind: DWORD <|@ <|@
      nr 1128  <|@ instruction rdx|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 1130  <|@ instruction rcx|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1132  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1134  <|@ instruction JUMP ~[] destination: B121 -> B175 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B359"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B362" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 3480  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3482  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 3484  <|@ instruction r10|DWORD = MOVE input: int[-417811|0xfffffffffff99fed] <|@ <|@
      nr 3486  <|@ instruction JUMP ~[] destination: B359 -> B362 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B183" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  254  <|@ instruction r14|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  256  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  258  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  260  <|@ instruction r10|DWORD = MOVE input: int[-420371|0xfffffffffff995ed] <|@ <|@
      nr  262  <|@ instruction JUMP ~[] destination: B29 -> B183 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B362" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  182  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  184  <|@ instruction r10|DWORD = MOVE input: int[-364819|0xfffffffffffa6eed] <|@ <|@
      nr  186  <|@ instruction JUMP ~[] destination: B22 -> B362 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_3      
     2: aload_1       
     3: getfield      #1          // value:char[]
     6: arraylength   
     7: iconst_1      
     8: if_icmpne     27
    11: ldc           #87         // ".$|()[{^?*+\"
    13: aload_1       
    14: iconst_0      
    15: invokevirtual #73         // charAt:(int)char
    18: dup           
    19: istore_3      
    20: invokevirtual #74         // indexOf:(int)int
    23: iconst_m1     
    24: if_icmpeq     87
    27: aload_1       
    28: invokevirtual #61         // length:()int
    31: iconst_2      
    32: if_icmpne     316
    35: aload_1       
    36: iconst_0      
    37: invokevirtual #73         // charAt:(int)char
    40: bipush        92
    42: if_icmpne     316
    45: aload_1       
    46: iconst_1      
    47: invokevirtual #73         // charAt:(int)char
    50: dup           
    51: istore_3      
    52: bipush        48
    54: isub          
    55: bipush        57
    57: iload_3       
    58: isub          
    59: ior           
    60: ifge          316
    63: iload_3       
    64: bipush        97
    66: isub          
    67: bipush        122
    69: iload_3       
    70: isub          
    71: ior           
    72: ifge          316
    75: iload_3       
    76: bipush        65
    78: isub          
    79: bipush        90
    81: iload_3       
    82: isub          
    83: ior           
    84: ifge          316
    87: iload_3       
    88: ldc           #90         // 55296
    90: if_icmplt     99
    93: iload_3       
    94: ldc           #91         // 57343
    96: if_icmple     316
    99: iconst_0      
   100: istore        4
   102: iconst_0      
   103: istore        5
   105: iload_2       
   106: ifle          113
   109: iconst_1      
   110: goto          114
   113: iconst_0      
   114: istore        6
   116: new           #92         // java.util.ArrayList
   119: dup           
   120: invokespecial #75         // java.util.ArrayList.<init>:()void
   123: astore        7
   125: aload_0       
   126: iload_3       
   127: iload         4
   129: invokevirtual #49         // indexOf:(int, int)int
   132: dup           
   133: istore        5
   135: iconst_m1     
   136: if_icmpeq     205
   139: iload         6
   141: ifeq          155
   144: aload         7
   146: invokevirtual #76         // java.util.ArrayList.size:()int
   149: iload_2       
   150: iconst_1      
   151: isub          
   152: if_icmpge     178
   155: aload         7
   157: aload_0       
   158: iload         4
   160: iload         5
   162: invokevirtual #60         // substring:(int, int)java.lang.String
   165: invokevirtual #77         // java.util.ArrayList.add:(java.lang.Object)boolean
   168: pop           
   169: iload         5
   171: iconst_1      
   172: iadd          
   173: istore        4
   175: goto          125
   178: aload         7
   180: aload_0       
   181: iload         4
   183: aload_0       
   184: getfield      #1          // value:char[]
   187: arraylength   
   188: invokevirtual #60         // substring:(int, int)java.lang.String
   191: invokevirtual #77         // java.util.ArrayList.add:(java.lang.Object)boolean
   194: pop           
   195: aload_0       
   196: getfield      #1          // value:char[]
   199: arraylength   
   200: istore        4
   202: goto          205
   205: iload         4
   207: ifne          219
   210: iconst_1      
   211: anewarray     #43         // java.lang.String
   214: dup           
   215: iconst_0      
   216: aload_0       
   217: aastore       
   218: areturn       
   219: iload         6
   221: ifeq          233
   224: aload         7
   226: invokevirtual #76         // java.util.ArrayList.size:()int
   229: iload_2       
   230: if_icmpge     250
   233: aload         7
   235: aload_0       
   236: iload         4
   238: aload_0       
   239: getfield      #1          // value:char[]
   242: arraylength   
   243: invokevirtual #60         // substring:(int, int)java.lang.String
   246: invokevirtual #77         // java.util.ArrayList.add:(java.lang.Object)boolean
   249: pop           
   250: aload         7
   252: invokevirtual #76         // java.util.ArrayList.size:()int
   255: istore        8
   257: iload_2       
   258: ifne          290
   261: iload         8
   263: ifle          290
   266: aload         7
   268: iload         8
   270: iconst_1      
   271: isub          
   272: invokevirtual #78         // java.util.ArrayList.get:(int)java.lang.Object
   275: checkcast     #43         // java.lang.String
   278: invokevirtual #61         // length:()int
   281: ifne          290
   284: iinc          
   287: goto          261
   290: iload         8
   292: anewarray     #43         // java.lang.String
   295: astore        9
   297: aload         7
   299: iconst_0      
   300: iload         8
   302: invokevirtual #79         // java.util.ArrayList.subList:(int, int)java.util.List
   305: aload         9
   307: invokeinterface#80, 2      // java.util.List.toArray:(java.lang.Object[])java.lang.Object[]
   312: checkcast     #99         // java.lang.String[]
   315: areturn       
   316: aload_1       
   317: invokestatic  #67         // java.util.regex.Pattern.compile:(java.lang.String)java.util.regex.Pattern
   320: aload_0       
   321: iload_2       
   322: invokevirtual #81         // java.util.regex.Pattern.split:(java.lang.CharSequence, int)java.lang.String[]
   325: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0   <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7332283d slotKind: QWORD  <||@
  Comment 48 6 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 51 8 stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 56 10 r14|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 59 12 stack:36|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 64 14 rsi|DWORD[.] = MOV [rdx|QWORD[.] + 12] size: DWORD state [bci:0]  <||@
  Comment 64 [rdx:0, r13:0, stack:96]at java.lang.String.split(String.java:2336) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3  |4  |5  |6  |7  |8  |9 
     locals:  |r13|QWORD[.]  |rdx|QWORD[.]  |r14|DWORD  |-  |-  |-  |-  |-  |-  |-   <||@
  Comment 64 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 67 16 rcx|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 67 [rdx:0, rsi:0, r13:0, stack:96]at java.lang.String.split(String.java:2336) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3  |4  |5  |6  |7  |8  |9 
     locals:  |r13|QWORD[.]  |rdx|QWORD[.]  |r14|DWORD  |-  |-  |-  |-  |-  |-  |-   <||@
  Comment 67 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 74 18 xmm0|V64_DWORD[..] = L oc: SIMD<null,null>  <||@
  Comment 78 20 xmm1|V128_DWORD[....] = L oc: SIMD<null,null,null,null>  <||@
  Comment 82 22 xmm2|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null>  <||@
  Comment 86 24 r10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 86 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 96 26 CMP rcx|DWORD y: 1 size: DWORD  <||@
  Comment 99 28 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B361  <||@
  Comment 105 block B1 null  <||@
  Comment 105 30 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 105 32 r11|DWORD = MOVZX [rsi|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 114 34 stack:40|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 119 36 CMP r11|DWORD y: 36 size: DWORD  <||@
  Comment 123 38 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3  <||@
  Comment 129 block B3 null  <||@
  Comment 129 48 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 129 50 CMP r11|DWORD y: 46 size: DWORD  <||@
  Comment 133 52 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5  <||@
  Comment 139 block B5 null  <||@
  Comment 139 62 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 139 64 CMP r11|DWORD y: 40 size: DWORD  <||@
  Comment 143 66 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7  <||@
  Comment 149 block B7 null  <||@
  Comment 149 76 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 149 78 CMP r11|DWORD y: 124 size: DWORD  <||@
  Comment 153 80 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9  <||@
  Comment 159 block B9 null  <||@
  Comment 159 90 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 159 92 CMP r11|DWORD y: 91 size: DWORD  <||@
  Comment 163 94 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11  <||@
  Comment 169 block B11 null  <||@
  Comment 169 104 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 169 106 CMP r11|DWORD y: 41 size: DWORD  <||@
  Comment 173 108 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13  <||@
  Comment 179 block B13 null  <||@
  Comment 179 118 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 179 120 CMP r11|DWORD y: 94 size: DWORD  <||@
  Comment 183 122 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15  <||@
  Comment 189 block B15 null  <||@
  Comment 189 132 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 189 134 CMP r11|DWORD y: 123 size: DWORD  <||@
  Comment 193 136 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17  <||@
  Comment 199 block B17 null  <||@
  Comment 199 146 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 199 148 CMP r11|DWORD y: 42 size: DWORD  <||@
  Comment 203 150 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19  <||@
  Comment 209 block B19 null  <||@
  Comment 209 160 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 209 162 CMP r11|DWORD y: 63 size: DWORD  <||@
  Comment 213 164 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21  <||@
  Comment 219 block B21 null  <||@
  Comment 219 174 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 219 176 CMP r11|DWORD y: 43 size: DWORD  <||@
  Comment 223 178 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23  <||@
  Comment 229 block B23 null  <||@
  Comment 229 188 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 229 190 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 232 192 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B360  <||@
  Comment 238 block B24 null  <||@
  Comment 238 194 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 238 196 CMP r11|DWORD y: 92 size: DWORD  <||@
  Comment 242 198 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26  <||@
  Comment 248 block B26 null  <||@
  Comment 248 208 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 248 210 CMP r11|DWORD y: 55296 size: DWORD  <||@
  Comment 255 212 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B26 -> B27 falseDestination: B26 -> B359  <||@
  Comment 261 block B27 null  <||@
  Comment 261 214 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 261 216 rsi|DWORD[.] = MOV [r13|QWORD[.] + 12] size: DWORD  <||@
  Comment 265 218 r8|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 265 [rdx:0, rsi:0, r13:0, stack:96]at java.lang.String.split(String.java:2336) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3  |4  |5  |6  |7  |8  |9 
     locals:  |r13|QWORD[.]  |rdx|QWORD[.]  |r14|DWORD  |-  |-  |-  |-  |-  |-  |-   <||@
  Comment 265 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 273 220 stack:44|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 278 222 r9|QWORD = MOV r8|DWORD size: DWORD  <||@
  Comment 281 224 stack:56|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 286 226 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@120cc8dc encoding: base: 0 shift: 3  <||@
  Comment 290 228 stack:64|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 295 230 rbx|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 305 232 stack:72|QWORD = MOVE rbx|QWORD moveKind: QWORD  <||@
  Comment 310 234 rdi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Object[0]{}]  <||@
  Comment 310 {Object[Object[0]{}]}  <||@
  Comment 320 236 stack:80|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 325 238 stack:88|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 330 240 stack:92|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 338 242 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 344 244 JUMP ~[] destination: B27 -> B28  <||@
  Comment 344 block B28 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 344 246 [] = LABEL numbPhis: 3 align: true label: ?  <||@
  Comment 352 248 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 355 250 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30  <||@
  Comment 361 block B30 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 361 264 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 361 266 rdx|DWORD = SUB (x: r8|DWORD, ~y: r10|DWORD) size: DWORD  <||@
  Comment 367 268 CMP (x: r8|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 370 270 BRANCH trueDestinationProbability: 0.7686826237895121 condition: > trueDestination: B30 -> B31 falseDestination: B30 -> B185  <||@
  Comment 376 block B31 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 376 272 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 376 274 r14|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 379 276 r13|QWORD = MOVSXD rdx|DWORD size: QWORD  <||@
  Comment 382 278 r13|QWORD = DEC r13|QWORD size: QWORD  <||@
  Comment 385 280 r14|QWORD = ADD (x: r14|QWORD, y: r13|QWORD) size: QWORD  <||@
  Comment 388 282 CMP (x: r9|QWORD, y: r14|QWORD) size: QWORD  <||@
  Comment 391 284 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B181  <||@
  Comment 397 block B32 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 397 286 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 397 288 CMP (x: r8|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 400 290 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B32 -> B33 falseDestination: B32 -> B181  <||@
  Comment 406 block B33 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 406 292 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 406 294 r13|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 409 296 JUMP ~[] destination: B33 -> B34  <||@
  Comment 414 block B35 loop 1 depth 2 outer 0 header:290|LoopBegin  <||@
  Comment 414 304 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 416 306 r14|DWORD = MOVZX [rsi|QWORD[.] + r13|DWORD * 2 + 16] size: DWORD  <||@
  Comment 422 308 CMP (x: r14|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 425 310 BRANCH trueDestinationProbability: 0.0015918580565381646 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B177  <||@
  Comment 431 block B177 loop 1 depth 2 outer 0 header:290|LoopBegin  <||@
  Comment 431 1720 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 431 1722 r13|DWORD = INC r13|DWORD size: DWORD  <||@
  Comment 434 1724 JUMP ~[] destination: B177 -> B34  <||@
  Comment 434 block B34 loop 1 depth 2 outer 0 header:290|LoopBegin  <||@
  Comment 434 298 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 434 300 CMP (x: r8|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 437 302 BRANCH trueDestinationProbability: 0.9277482167917486 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B185  <||@
  Comment 444 block B36 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 444 312 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 444 314 CMP r13|DWORD y: -1 size: DWORD  <||@
  Comment 448 316 BRANCH trueDestinationProbability: 0.315317887137174 condition: = trueDestination: B36 -> B185 falseDestination: B36 -> B38  <||@
  Comment 454 block B38 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 454 326 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 454 328 CMP (x: r13|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 457 330 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40  <||@
  Comment 463 block B40 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 463 344 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 463 346 r14|DWORD = SUB (x: r13|DWORD, ~y: r10|DWORD) size: DWORD  <||@
  Comment 469 348 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 472 350 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B40 -> B41 falseDestination: B40 -> B43  <||@
  Comment 478 block B43 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 478 372 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 478 374 stack:100|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 483 376 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 486 378 BRANCH trueDestinationProbability: 0.18334585698550698 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B49  <||@
  Comment 492 block B49 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 492 424 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 492 426 CMP r14|DWORD y: 1 size: DWORD  <||@
  Comment 496 428 BRANCH trueDestinationProbability: 0.09284041465770032 condition: < trueDestination: B49 -> B51 falseDestination: B49 -> B58  <||@
  Comment 502 block B58 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 502 526 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 502 420 stack:96|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 507 528 r13|DWORD = SUB (x: r8|DWORD, ~y: r14|DWORD) size: DWORD  <||@
  Comment 513 530 CMP (x: r10|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 516 532 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B58 -> B59 falseDestination: B58 -> B60  <||@
  Comment 522 block B60 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 522 546 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 522 548 CMP (x: r10|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 525 550 BRANCH trueDestinationProbability: 9.999999999998899E-5 condition: > trueDestination: B60 -> B61 falseDestination: B60 -> B63  <||@
  Comment 531 block B63 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 531 572 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 531 574 r13|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 535 576 r10|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 539 578 CMP r14|DWORD y: 16777215 size: DWORD  <||@
  Comment 546 580 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B63 -> B64 falseDestination: B63 -> B68  <||@
  Comment 552 block B64 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 552 582 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 552 584 r11|DWORD = SHL r14|DWORD size: DWORD  <||@
  Comment 558 586 r11|DWORD = LEA [r11|DWORD + 23] size: DWORD  <||@
  Comment 562 588 r11|DWORD = AND r11|DWORD y: -8 size: DWORD  <||@
  Comment 566 590 r11|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 569 592 r8|QWORD = ADD (x: r11|QWORD, y: r13|QWORD) size: QWORD  <||@
  Comment 575 594 CMP (x: r8|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 578 596 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B64 -> B68 falseDestination: B64 -> B66  <||@
  Comment 584 block B66 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 584 604 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 584 606 MOV (x: [r15|QWORD + 96], y: r8|QWORD) size: QWORD  <||@
  Comment 588 608 AMD64PREFETCH ~[r11|QWORD + r13|QWORD * 1 + 192] instr: 0  <||@
  Comment 597 610 AMD64PREFETCH ~[r11|QWORD + r13|QWORD * 1 + 256] instr: 0  <||@
  Comment 606 612 AMD64PREFETCH ~[r11|QWORD + r13|QWORD * 1 + 320] instr: 0  <||@
  Comment 615 614 AMD64PREFETCH ~[r11|QWORD + r13|QWORD * 1 + 384] instr: 0  <||@
  Comment 624 616 MOV (x: [r13|QWORD + 12], y: r14|DWORD) size: DWORD  <||@
  Comment 628 618 MOV [r13|QWORD] y: 1 size: QWORD  <||@
  Comment 636 620 MOV [r13|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 636 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 644 622 r13|QWORD[.] = MOVE r13|QWORD moveKind: QWORD  <||@
  Comment 644 624 rax|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 647 626 r13|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 650 628 JUMP ~[] destination: B66 -> B69  <||@
  Comment 650 block B69 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 650 650 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 650 652 CMP (x: r14|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 653 654 rsi|DWORD = CMOVE (falseValue: r14|DWORD, ~trueValue: r13|DWORD) condition: >  <||@
  Comment 660 656 rsi|QWORD = MOVSXD rsi|DWORD size: QWORD  <||@
  Comment 663 658 CMP rsi|QWORD y: 1 size: QWORD  <||@
  Comment 667 664 r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 672 660 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B69 -> B88 falseDestination: B69 -> B71  <||@
  Comment 678 block B71 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 678 668 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 678 672 rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 682 674 rcx|QWORD = MOVSXD stack:100|DWORD size: QWORD  <||@
  Comment 687 676 rcx|QWORD[.] = LEA [r13|QWORD[.] + rcx|QWORD * 2 + 16] size: QWORD  <||@
  Comment 692 678 r10|QWORD = LEA [rsi|QWORD - 16] size: QWORD  <||@
  Comment 696 680 TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 699 686 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 706 682 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B71 -> B76 falseDestination: B71 -> B74  <||@
  Comment 712 block B76 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 712 712 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 712 714 r10|QWORD = LEA [rsi|QWORD - 8] size: QWORD  <||@
  Comment 716 716 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 719 718 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B76 -> B79 falseDestination: B76 -> B78  <||@
  Comment 725 block B78 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 725 724 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 725 726 xmm0|V128_WORD = H [rcx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVDQU  <||@
  Comment 731 728 J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 737 730 r10|QWORD = LEA [r11|QWORD + 8] size: QWORD  <||@
  Comment 741 732 r11|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 744 734 JUMP ~[] destination: B78 -> B79  <||@
  Comment 744 block B79 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 744 736 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 744 738 r10|QWORD = LEA [rsi|QWORD - 4] size: QWORD  <||@
  Comment 748 740 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 751 742 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B79 -> B82 falseDestination: B79 -> B81  <||@
  Comment 757 block B81 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 757 748 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 757 750 xmm0|V64_WORD = H [rcx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVQ  <||@
  Comment 763 752 J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 769 754 r10|QWORD = LEA [r11|QWORD + 4] size: QWORD  <||@
  Comment 773 756 r11|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 776 758 JUMP ~[] destination: B81 -> B82  <||@
  Comment 776 block B82 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 776 760 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 776 762 r10|QWORD = LEA [rsi|QWORD - 2] size: QWORD  <||@
  Comment 780 764 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 783 766 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B82 -> B85 falseDestination: B82 -> B84  <||@
  Comment 789 block B84 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 789 772 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 789 774 xmm0|V32_WORD = H [rcx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVD  <||@
  Comment 795 776 J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 801 778 r10|QWORD = LEA [r11|QWORD + 2] size: QWORD  <||@
  Comment 805 780 r11|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 808 782 JUMP ~[] destination: B84 -> B85  <||@
  Comment 808 block B85 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 808 784 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 808 786 r10|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 814 788 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 817 790 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B85 -> B88 falseDestination: B85 -> B87  <||@
  Comment 823 block B87 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 823 796 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 823 798 rcx|DWORD = MOVSX [rcx|QWORD[.] + r11|QWORD * 2] size: DWORD  <||@
  Comment 828 800 MOV (x: [rdx|QWORD[.] + r11|QWORD * 2], y: rcx|DWORD) size: WORD  <||@
  Comment 833 802 JUMP ~[] destination: B87 -> B88  <||@
  Comment 833 block B88 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 833 804 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 833 806 rdx|QWORD = MOVSXD r14|DWORD size: QWORD  <||@
  Comment 836 808 CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 839 810 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B88 -> B89 falseDestination: B88 -> B108  <||@
  Comment 845 block B108 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 845 950 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 845 952 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 849 954 rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD  <||@
  Comment 853 956 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 857 958 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B108 -> B109 falseDestination: B108 -> B110  <||@
  Comment 863 block B110 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 863 988 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 863 990 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 867 992 AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0  <||@
  Comment 874 994 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 874 998 JUMP ~[] destination: B110 -> B111  <||@
  Comment 874 block B111 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 874 1000 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 874 996 r10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 874 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 884 1002 rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 887 1004 rcx|QWORD = MOV [r10|QWORD + 168] size: QWORD  <||@
  Comment 894 1006 MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD  <||@
  Comment 897 1008 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 897 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 904 1010 rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@120cc8dc encoding: base: 0 shift: 3  <||@
  Comment 908 1012 MOV (x: [rsi|QWORD[*] + 12], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 911 1014 MOV (x: [rsi|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 915 1016 r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 918 1018 rdi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 923 1020 JUMP ~[] destination: B111 -> B112  <||@
  Comment 923 block B112 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 923 1022 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 923 1024 r11|DWORD = INC stack:92|DWORD size: DWORD  <||@
  Comment 931 1026 CMP (x: rdi|QWORD[.], y: stack:88|QWORD[.]) size: QWORD  <||@
  Comment 936 1028 BRANCH trueDestinationProbability: 0.2066504369952622 condition: = trueDestination: B112 -> B113 falseDestination: B112 -> B116  <||@
  Comment 942 block B116 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 942 1052 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 942 1054 r9|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 945 1058 JUMP ~[] destination: B116 -> B117  <||@
  Comment 945 block B117 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 945 1060 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 945 1056 r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 950 1062 rbx|DWORD = MOV [r8|QWORD[.] + 12] size: DWORD  <||@
  Comment 954 1064 rcx|DWORD = MOV [r8|QWORD[.] + 8] size: DWORD  <||@
  Comment 958 1066 rsi|DWORD = SUB (x: r9|DWORD, ~y: rbx|DWORD) size: DWORD  <||@
  Comment 963 1068 rax|DWORD[.] = COMPRESSPOINTER (input: r14|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@120cc8dc encoding: base: 0 shift: 3  <||@
  Comment 970 1070 rbp|DWORD = INC stack:96|DWORD size: DWORD  <||@
  Comment 976 1072 CMP rsi|DWORD y: 1 size: DWORD  <||@
  Comment 979 1074 BRANCH trueDestinationProbability: 0.7754412955005789 condition: < trueDestination: B117 -> B118 falseDestination: B117 -> B123  <||@
  Comment 985 block B118 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 985 1076 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 985 1078 CMP rcx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}  <||@
  Comment 985 {meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}}  <||@
  Comment 991 1080 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B118 -> B119 falseDestination: B118 -> B122  <||@
  Comment 997 block B119 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 997 1082 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 997 1084 CMP (x: rbx|DWORD, y: stack:92|DWORD) size: DWORD  <||@
  Comment 1001 1086 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B119 -> B120 falseDestination: B119 -> B121  <||@
  Comment 1007 block B120 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 1007 1088 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1007 1090 rdx|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 1011 1092 rbx|QWORD = MOVE stack:72|QWORD moveKind: QWORD  <||@
  Comment 1016 1094 MOV (x: [r8|QWORD[.] + rdx|DWORD * 4 + 16], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 1021 1096 rsi|QWORD[.] = LEA [r8|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD  <||@
  Comment 1026 1098 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1030 1100 MOVB (x: [rsi|QWORD[*] + rbx|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1034 1102 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:27, 165]  <||@
  Comment 1034 [r8:0, r13:0, r14:0, stack:48, stack:64, stack:96]at java.util.ArrayList.add(ArrayList.java:464) [bci: 27, duringCall: false, rethrow: false]
              |0                                                                               |1            
     locals:  |vobject:ArrayList:0{modCount=r11|DWORD,size=r11|DWORD,elementData=r8|QWORD[.]}  |r14|QWORD[.] 
  at java.lang.String.split(String.java:2353) [bci: 165, duringCall: true, rethrow: false]
              |0                  |1  |2           |3               |4  |5               |6           |7                                                                               |8  |9 
     locals:  |stack:32|QWORD[.]  |-  |int[0|0x0]  |stack:40|DWORD  |-  |stack:96|DWORD  |int[0|0x0]  |vobject:ArrayList:0{modCount=r11|DWORD,size=r11|DWORD,elementData=r8|QWORD[.]}  |-  |-   <||@
  Comment 1034 {infopoint: SAFEPOINT}  <||@
  Comment 1034 11  <||@
  Comment 1040 1104 stack:88|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1045 1106 stack:92|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1050 1108 r10|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 1053 1110 rsi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1056 1112 r9|QWORD = MOVE stack:56|QWORD moveKind: QWORD  <||@
  Comment 1061 1114 r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1066 1116 r11|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1071 1118 JUMP ~[] destination: B120 -> B28  <||@
  Comment 1076 block B89 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 1076 812 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1076 814 rcx|QWORD[.] = LEA [rax|QWORD[.] + rsi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 1081 816 rdx|QWORD = SUB (x: rdx|QWORD, ~y: rsi|QWORD) size: QWORD  <||@
  Comment 1084 818 rsi|QWORD = LEA [rdx|QWORD - 16] size: QWORD  <||@
  Comment 1088 820 TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1091 822 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B89 -> B90 falseDestination: B89 -> B91  <||@
  Comment 1097 block B90 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 1097 824 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1097 826 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1104 828 JUMP ~[] destination: B90 -> B94  <||@
  Comment 1104 block B94 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 1104 852 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1104 854 rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD  <||@
  Comment 1108 856 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1111 858 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B94 -> B97 falseDestination: B94 -> B96  <||@
  Comment 1117 block B96 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 1117 864 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1117 866 xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 1121 868 J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 1127 870 rsi|QWORD = LEA [r10|QWORD + 8] size: QWORD  <||@
  Comment 1131 872 r10|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1134 874 JUMP ~[] destination: B96 -> B97  <||@
  Comment 1134 block B97 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 1134 876 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1134 878 rsi|QWORD = LEA [rdx|QWORD - 4] size: QWORD  <||@
  Comment 1138 880 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1141 882 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B97 -> B100 falseDestination: B97 -> B99  <||@
  Comment 1147 block B99 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 1147 888 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1147 890 xmm0|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 1151 892 J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 1157 894 rsi|QWORD = LEA [r10|QWORD + 4] size: QWORD  <||@
  Comment 1161 896 r10|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1164 898 JUMP ~[] destination: B99 -> B100  <||@
  Comment 1164 block B100 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 1164 900 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1164 902 rsi|QWORD = LEA [rdx|QWORD - 2] size: QWORD  <||@
  Comment 1168 904 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1171 906 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B100 -> B103 falseDestination: B100 -> B102  <||@
  Comment 1177 block B102 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 1177 912 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1177 914 xmm0|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 1181 916 J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 1187 918 rsi|QWORD = LEA [r10|QWORD + 2] size: QWORD  <||@
  Comment 1191 920 r10|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1194 922 JUMP ~[] destination: B102 -> B103  <||@
  Comment 1194 block B103 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 1194 924 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1194 926 rdx|QWORD = DEC rdx|QWORD size: QWORD  <||@
  Comment 1197 928 CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1200 930 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B103 -> B108 falseDestination: B103 -> B105  <||@
  Comment 1206 block B105 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 1206 936 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1206 938 MOV (x: [rcx|QWORD[.] + r10|QWORD * 2], y: r12|ILLEGAL) size: WORD  <||@
  Comment 1211 940 JUMP ~[] destination: B105 -> B108  <||@
  Comment 1216 block B123 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 1216 1164 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1216 1166 stack:112|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 1221 1168 rdx|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 1225 1170 rsi|QWORD = MOVE stack:72|QWORD moveKind: QWORD  <||@
  Comment 1230 1172 r14|DWORD = SHR rbx|DWORD size: DWORD  <||@
  Comment 1236 1174 r14|DWORD = ADD (x: r14|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 1239 1176 r10|DWORD = SUB (x: r14|DWORD, ~y: r9|DWORD) size: DWORD  <||@
  Comment 1245 1178 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 1248 1180 r14|DWORD = CMOVE (falseValue: r14|DWORD, ~trueValue: r9|DWORD) condition: <  <||@
  Comment 1252 1182 r10|DWORD = LEA [r14|DWORD - 2147483639] size: DWORD  <||@
  Comment 1259 1184 CMP r10|DWORD y: 1 size: DWORD  <||@
  Comment 1263 1186 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B123 -> B124 falseDestination: B123 -> B174  <||@
  Comment 1269 block B124 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 1269 1188 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1269 1190 CMP (x: r14|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 1272 1192 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B124 -> B125 falseDestination: B124 -> B173  <||@
  Comment 1278 block B125 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 1278 1194 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1278 1196 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 1281 1198 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B125 -> B126 falseDestination: B125 -> B127  <||@
  Comment 1287 block B127 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 1287 1216 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1287 1218 stack:116|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1292 1220 r10|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 1296 1222 rdi|DWORD = SHL r14|DWORD y: 2 size: DWORD  <||@
  Comment 1302 1224 rdi|DWORD = LEA [rdi|DWORD + 23] size: DWORD  <||@
  Comment 1305 1226 rdi|DWORD = AND rdi|DWORD y: -8 size: DWORD  <||@
  Comment 1308 1228 rdi|QWORD = MOVSXD rdi|DWORD size: QWORD  <||@
  Comment 1311 1230 r13|QWORD = ADD (x: rdi|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1317 1232 CMP (x: r13|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 1321 1234 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B127 -> B128 falseDestination: B127 -> B129  <||@
  Comment 1327 block B129 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 1327 1276 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1327 1278 MOV (x: [r15|QWORD + 96], y: r13|QWORD) size: QWORD  <||@
  Comment 1331 1280 AMD64PREFETCH ~[rdi|QWORD + r10|QWORD * 1 + 192] instr: 0  <||@
  Comment 1340 1282 AMD64PREFETCH ~[rdi|QWORD + r10|QWORD * 1 + 256] instr: 0  <||@
  Comment 1349 1284 AMD64PREFETCH ~[rdi|QWORD + r10|QWORD * 1 + 320] instr: 0  <||@
  Comment 1358 1286 AMD64PREFETCH ~[rdi|QWORD + r10|QWORD * 1 + 384] instr: 0  <||@
  Comment 1367 1288 MOV (x: [r10|QWORD + 12], y: r14|DWORD) size: DWORD  <||@
  Comment 1371 1290 MOV [r10|QWORD] y: 1 size: QWORD  <||@
  Comment 1378 1292 MOV (x: [r10|QWORD + 8], y: rcx|DWORD) size: DWORD  <||@
  Comment 1382 1294 r10|QWORD[.] = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 1382 1296 rcx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1385 1298 JUMP ~[] destination: B129 -> B130  <||@
  Comment 1385 block B130 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 1385 1300 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1385 1302 CMP (x: r14|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 1388 1304 r10|DWORD = CMOVE (falseValue: r14|DWORD, ~trueValue: rbx|DWORD) condition: >  <||@
  Comment 1395 1306 r10|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 1398 1308 CMP r10|QWORD y: 1 size: QWORD  <||@
  Comment 1402 1310 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B130 -> B146 falseDestination: B130 -> B132  <||@
  Comment 1408 block B132 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 1408 1316 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1408 1318 rbx|QWORD[.] = LEA [rcx|QWORD[.] + 16] size: QWORD  <||@
  Comment 1412 1320 rdi|QWORD[.] = LEA [r8|QWORD[.] + 16] size: QWORD  <||@
  Comment 1416 1322 r13|QWORD = LEA [r10|QWORD - 8] size: QWORD  <||@
  Comment 1420 1324 TEST (x: r13|QWORD, y: r13|QWORD) size: QWORD  <||@
  Comment 1423 1330 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1430 1326 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B132 -> B137 falseDestination: B132 -> B135  <||@
  Comment 1436 block B137 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 1436 1356 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1436 1358 r13|QWORD = LEA [r10|QWORD - 4] size: QWORD  <||@
  Comment 1440 1360 CMP (x: r11|QWORD, y: r13|QWORD) size: QWORD  <||@
  Comment 1443 1362 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B137 -> B140 falseDestination: B137 -> B139  <||@
  Comment 1449 block B139 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 1449 1368 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1449 1370 xmm0|V128_DWORD[....] = H [rdi|QWORD[.] + r11|QWORD * 4] nZ: XMM oh: VMOVDQU  <||@
  Comment 1455 1372 J (address: [rbx|QWORD[.] + r11|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU  <||@
  Comment 1461 1374 r11|QWORD = LEA [r11|QWORD + 4] size: QWORD  <||@
  Comment 1465 1376 JUMP ~[] destination: B139 -> B140  <||@
  Comment 1465 block B140 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 1465 1378 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1465 1380 r13|QWORD = LEA [r10|QWORD - 2] size: QWORD  <||@
  Comment 1469 1382 CMP (x: r11|QWORD, y: r13|QWORD) size: QWORD  <||@
  Comment 1472 1384 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B140 -> B143 falseDestination: B140 -> B142  <||@
  Comment 1478 block B142 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 1478 1390 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1478 1392 xmm0|V64_DWORD[..] = H [rdi|QWORD[.] + r11|QWORD * 4] nZ: XMM oh: VMOVQ  <||@
  Comment 1484 1394 J (address: [rbx|QWORD[.] + r11|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ  <||@
  Comment 1490 1396 r11|QWORD = LEA [r11|QWORD + 2] size: QWORD  <||@
  Comment 1494 1398 JUMP ~[] destination: B142 -> B143  <||@
  Comment 1494 block B143 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 1494 1400 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1494 1402 r13|QWORD = DEC r10|QWORD size: QWORD  <||@
  Comment 1500 1404 CMP (x: r11|QWORD, y: r13|QWORD) size: QWORD  <||@
  Comment 1503 1406 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B143 -> B146 falseDestination: B143 -> B145  <||@
  Comment 1509 block B145 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 1509 1412 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1509 1414 rdi|DWORD[.] = MOV [rdi|QWORD[.] + r11|QWORD * 4] size: DWORD  <||@
  Comment 1513 1416 MOV (x: [rbx|QWORD[.] + r11|QWORD * 4], y: rdi|DWORD[.]) size: DWORD  <||@
  Comment 1517 1418 JUMP ~[] destination: B145 -> B146  <||@
  Comment 1517 block B146 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 1517 1420 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1517 1422 r11|QWORD = MOVSXD r14|DWORD size: QWORD  <||@
  Comment 1520 1424 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1523 1426 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B146 -> B147 falseDestination: B146 -> B162  <||@
  Comment 1529 block B162 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 1529 1544 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1529 1546 xmm2|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null>  <||@
  Comment 1533 1548 xmm1|V128_DWORD[....] = L oc: SIMD<null,null,null,null>  <||@
  Comment 1537 1550 xmm0|V64_DWORD[..] = L oc: SIMD<null,null>  <||@
  Comment 1541 1552 JUMP ~[] destination: B162 -> B163  <||@
  Comment 1541 block B163 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 1541 1554 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1541 1556 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 1544 1558 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B163 -> B168 falseDestination: B163 -> B165  <||@
  Comment 1550 block B165 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 1550 1564 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1550 1566 r14|DWORD = DEC r14|DWORD size: DWORD  <||@
  Comment 1553 1568 r14|DWORD = SHL r14|DWORD y: 2 size: DWORD  <||@
  Comment 1557 1570 r10|QWORD = MOVSXD r14|DWORD size: QWORD  <||@
  Comment 1560 1572 r11|QWORD[.] = LEA [rcx|QWORD[.] + 16] size: QWORD  <||@
  Comment 1564 1574 r11|QWORD[.] = ADD (x: r11|QWORD[.], y: r10|QWORD) size: QWORD  <||@
  Comment 1567 1576 r11|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1571 1578 r10|QWORD[.] = LEA [rcx|QWORD[.] + 16] size: QWORD  <||@
  Comment 1575 1580 r10|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1579 1582 r11|QWORD[*] = SUB (x: r11|QWORD[*], ~y: r10|QWORD[*]) size: QWORD  <||@
  Comment 1582 1584 r11|QWORD[*] = INC r11|QWORD[*] size: QWORD  <||@
  Comment 1585 1586 JUMP ~[] destination: B165 -> B166  <||@
  Comment 1590 block B171 loop 6 depth 2 outer 0 header:2820|LoopBegin  <||@
  Comment 1590 1660 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1600 1662 r11|QWORD[*] = DEC r11|QWORD[*] size: QWORD  <||@
  Comment 1603 1664 rbx|QWORD[*] = ADD (x: r10|QWORD[*], y: rsi|QWORD) size: QWORD  <||@
  Comment 1609 1666 rbx|QWORD[*] = ADD (x: rbx|QWORD[*], y: r11|QWORD[*]) size: QWORD  <||@
  Comment 1612 1668 MOVB (x: [rbx|QWORD[*]], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1615 1670 JUMP ~[] destination: B171 -> B166  <||@
  Comment 1615 block B166 loop 6 depth 2 outer 0 header:2820|LoopBegin  <||@
  Comment 1615 1588 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1615 1590 CMP r11|QWORD[*] y: 1 size: QWORD  <||@
  Comment 1619 1592 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B166 -> B168 falseDestination: B166 -> B171  <||@
  Comment 1627 block B113 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 1627 1030 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1627 1032 CMP r11|DWORD y: 11 size: DWORD  <||@
  Comment 1631 1034 BRANCH trueDestinationProbability: 0.7308950256495741 condition: < trueDestination: B113 -> B114 falseDestination: B113 -> B115  <||@
  Comment 1637 block B114 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 1637 1036 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1637 1038 r9|DWORD = MOVE input: int[10|0xa]  <||@
  Comment 1643 1042 JUMP ~[] destination: B114 -> B117  <||@
  Comment 1648 block B44 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 1648 380 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1648 382 CMP (x: r8|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 1651 384 BRANCH trueDestinationProbability: 0.09242718272553296 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46  <||@
  Comment 1657 block B46 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 1657 400 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1657 402 CMP r14|DWORD y: 1 size: DWORD  <||@
  Comment 1661 404 BRANCH trueDestinationProbability: 0.09284041465770032 condition: < trueDestination: B46 -> B51 falseDestination: B46 -> B58  <||@
  Comment 1672 block B147 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 1672 1428 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1672 1430 rbx|QWORD[.] = LEA [rcx|QWORD[.] + r10|QWORD * 4 + 16] size: QWORD  <||@
  Comment 1677 1432 r11|QWORD = SUB (x: r11|QWORD, ~y: r10|QWORD) size: QWORD  <||@
  Comment 1680 1434 r10|QWORD = LEA [r11|QWORD - 8] size: QWORD  <||@
  Comment 1684 1436 TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1687 1442 rdi|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1694 1444 xmm2|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null>  <||@
  Comment 1698 1438 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B147 -> B152 falseDestination: B147 -> B150  <||@
  Comment 1704 block B152 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 1704 1470 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1704 1472 r10|QWORD = LEA [r11|QWORD - 4] size: QWORD  <||@
  Comment 1708 1474 CMP (x: rdi|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1711 1480 xmm1|V128_DWORD[....] = L oc: SIMD<null,null,null,null>  <||@
  Comment 1715 1476 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B152 -> B155 falseDestination: B152 -> B154  <||@
  Comment 1721 block B154 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 1721 1484 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1721 1488 J (address: [rbx|QWORD[.] + rdi|QWORD * 4], input: xmm1|V128_DWORD[....]) nZ: XMM oh: VMOVDQU  <||@
  Comment 1726 1490 r10|QWORD = LEA [rdi|QWORD + 4] size: QWORD  <||@
  Comment 1730 1492 rdi|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 1733 1494 JUMP ~[] destination: B154 -> B155  <||@
  Comment 1733 block B155 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 1733 1496 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1733 1498 r10|QWORD = LEA [r11|QWORD - 2] size: QWORD  <||@
  Comment 1737 1500 CMP (x: rdi|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1740 1506 xmm0|V64_DWORD[..] = L oc: SIMD<null,null>  <||@
  Comment 1744 1502 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B155 -> B158 falseDestination: B155 -> B157  <||@
  Comment 1750 block B157 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 1750 1510 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1750 1514 J (address: [rbx|QWORD[.] + rdi|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ  <||@
  Comment 1756 1516 r10|QWORD = LEA [rdi|QWORD + 2] size: QWORD  <||@
  Comment 1760 1518 rdi|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 1763 1520 JUMP ~[] destination: B157 -> B158  <||@
  Comment 1763 block B158 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 1763 1522 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1763 1524 r11|QWORD = DEC r11|QWORD size: QWORD  <||@
  Comment 1766 1526 CMP (x: rdi|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 1769 1528 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B158 -> B163 falseDestination: B158 -> B160  <||@
  Comment 1775 block B160 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 1775 1534 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1775 1536 MOV (x: [rbx|QWORD[.] + rdi|QWORD * 4], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 1779 1538 JUMP ~[] destination: B160 -> B163  <||@
  Comment 1784 block B168 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 1784 1598 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1784 1600 CMP [rcx|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}  <||@
  Comment 1784 {meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}}  <||@
  Comment 1791 1602 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B168 -> B169 falseDestination: B168 -> B170  <||@
  Comment 1797 block B169 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 1797 1604 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1797 1606 r11|DWORD = MOVE stack:116|DWORD moveKind: DWORD  <||@
  Comment 1802 1608 MOV (x: [rcx|QWORD[.] + rdx|DWORD * 4 + 16], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 1806 1610 rdx|QWORD[.] = LEA [rcx|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD  <||@
  Comment 1811 1612 rdx|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1815 1614 MOVB (x: [rdx|QWORD[*] + rsi|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1819 1616 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:27, 165]  <||@
  Comment 1819 [rcx:0, stack:16, stack:48, stack:64, stack:96]at java.util.ArrayList.add(ArrayList.java:464) [bci: 27, duringCall: false, rethrow: false]
              |0                                                                                |1                  
     locals:  |vobject:ArrayList:0{modCount=r11|DWORD,size=r11|DWORD,elementData=rcx|QWORD[.]}  |stack:112|QWORD[.] 
  at java.lang.String.split(String.java:2353) [bci: 165, duringCall: true, rethrow: false]
              |0                  |1  |2           |3               |4  |5               |6           |7                                                                                |8  |9 
     locals:  |stack:32|QWORD[.]  |-  |int[0|0x0]  |stack:40|DWORD  |-  |stack:96|DWORD  |int[0|0x0]  |vobject:ArrayList:0{modCount=r11|DWORD,size=r11|DWORD,elementData=rcx|QWORD[.]}  |-  |-   <||@
  Comment 1819 {infopoint: SAFEPOINT}  <||@
  Comment 1819 11  <||@
  Comment 1825 1618 stack:88|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1830 1620 stack:92|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1835 1622 r10|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 1838 1624 rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1843 1626 r9|QWORD = MOVE stack:56|QWORD moveKind: QWORD  <||@
  Comment 1848 1628 r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1853 1630 r11|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1858 1632 JUMP ~[] destination: B169 -> B28  <||@
  Comment 1863 block B74 loop 2 depth 2 outer 0 header:3411|LoopBegin  <||@
  Comment 1863 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1872 698 xmm0|V256_WORD = H [rcx|QWORD[.] + r11|QWORD * 2] nZ: YMM oh: VMOVDQU  <||@
  Comment 1878 700 J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1884 702 r11|QWORD = LEA [r11|QWORD + 16] size: QWORD  <||@
  Comment 1888 704 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1891 706 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B74 -> B76 falseDestination: B74 -> B74  <||@
  Comment 1898 block B91 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 1898 830 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1898 832 xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 1902 834 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1909 836 JUMP ~[] destination: B91 -> B92  <||@
  Comment 1909 block B92 loop 3 depth 2 outer 0 header:3474|LoopBegin  <||@
  Comment 1909 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1920 840 J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1926 842 r10|QWORD = LEA [r10|QWORD + 16] size: QWORD  <||@
  Comment 1930 844 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1933 846 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B92 -> B94 falseDestination: B92 -> B92  <||@
  Comment 1940 block B68 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 1940 636 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1940 632 r13|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 1943 638 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 1943 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 1953 640 rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 1956 642 rdx|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1959 644 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1964 646 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:65, 162]  <||@
  Comment 1964 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1969 [stack:40, stack:48, stack:64, stack:96]at java.lang.String.substring(String.java:1969) [bci: 65, duringCall: false, rethrow: false]
              |0                  |1                |2  |3         
     locals:  |stack:32|QWORD[.]  |stack:100|DWORD  |-  |r14|DWORD 
  at java.lang.String.split(String.java:2353) [bci: 162, duringCall: true, rethrow: false]
              |0                                                                                               |1  |2           |3               |4  |5               |6           |7                                                                                               |8  |9 
     locals:  |stack:32|QWORD[.]                                                                               |-  |int[0|0x0]  |stack:40|DWORD  |-  |stack:96|DWORD  |int[0|0x0]  |vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]}  |-  |- 
     stack:   |vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]}  |   |            |                |   |                |            |                                                                                                |   |    <||@
  Comment 1970 648 JUMP ~[] destination: B68 -> B69  <||@
  Comment 1975 block B51 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 1975 442 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1975 408 stack:96|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 1980 410 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1983 412 r11|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1986 414 r10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 1986 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 1996 444 CMP (x: r11|DWORD, y: stack:44|DWORD) size: DWORD  <||@
  Comment 2001 446 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B51 -> B52 falseDestination: B51 -> B53  <||@
  Comment 2007 block B53 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 2007 460 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2007 462 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 2011 464 rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD  <||@
  Comment 2015 466 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 2019 468 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B53 -> B54 falseDestination: B53 -> B55  <||@
  Comment 2025 block B55 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 2025 490 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2025 492 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 2029 494 AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0  <||@
  Comment 2036 496 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 2036 498 JUMP ~[] destination: B55 -> B56  <||@
  Comment 2036 block B56 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 2036 500 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2036 502 rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 2039 504 rcx|QWORD = MOV [r10|QWORD + 168] size: QWORD  <||@
  Comment 2046 506 MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD  <||@
  Comment 2049 508 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 2049 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 2056 510 MOV [rsi|QWORD[*] + 12] y: -559030611 size: DWORD c: NarrowOop[char[0]{}]  <||@
  Comment 2056 {NarrowOop[char[0]{}]}  <||@
  Comment 2063 512 MOV (x: [rsi|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 2067 514 r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2070 516 rdi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 2075 518 JUMP ~[] destination: B56 -> B112  <||@
  Comment 2080 block B115 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 2080 1044 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2080 1046 r9|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2083 1050 JUMP ~[] destination: B115 -> B117  <||@
  Comment 2088 block B150 loop 5 depth 2 outer 0 header:3591|LoopBegin  <||@
  Comment 2088 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 2096 1458 J (address: [rbx|QWORD[.] + rdi|QWORD * 4], input: xmm2|V256_DWORD[........]) nZ: YMM oh: VMOVDQU  <||@
  Comment 2101 1460 rdi|QWORD = LEA [rdi|QWORD + 8] size: QWORD  <||@
  Comment 2105 1462 CMP (x: rdi|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 2108 1464 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B150 -> B152 falseDestination: B150 -> B150  <||@
  Comment 2115 block B135 loop 4 depth 2 outer 0 header:3537|LoopBegin  <||@
  Comment 2115 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 2128 1342 xmm0|V256_DWORD[........] = H [rdi|QWORD[.] + r11|QWORD * 4] nZ: YMM oh: VMOVDQU  <||@
  Comment 2134 1344 J (address: [rbx|QWORD[.] + r11|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU  <||@
  Comment 2140 1346 r11|QWORD = LEA [r11|QWORD + 8] size: QWORD  <||@
  Comment 2144 1348 CMP (x: r11|QWORD, y: r13|QWORD) size: QWORD  <||@
  Comment 2147 1350 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B135 -> B137 falseDestination: B135 -> B135  <||@
  Comment 2154 block B45 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 2154 386 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2154 388 r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2159 390 stack:96|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 2164 392 rdi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 2169 394 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2172 396 r10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 2172 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 2182 398 JUMP ~[] destination: B45 -> B112  <||@
  Comment 2187 block B109 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 2187 960 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2187 962 stack:112|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2192 964 stack:104|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 2197 966 r10|DWORD = MOVE stack:100|DWORD moveKind: DWORD  <||@
  Comment 2202 968 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 2202 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 2212 970 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 2217 972 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2222 974 r14|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2225 976 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:65, 162]  <||@
  Comment 2225 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 2230 [stack:16, stack:40, stack:48, stack:64, stack:96]at java.lang.String.substring(String.java:1969) [bci: 65, duringCall: false, rethrow: false]
              |0                  |1          |2  |3               
     locals:  |stack:32|QWORD[.]  |r14|DWORD  |-  |stack:104|DWORD 
  at java.lang.String.split(String.java:2353) [bci: 162, duringCall: true, rethrow: false]
              |0                                                                                               |1  |2           |3               |4  |5               |6           |7                                                                                               |8  |9 
     locals:  |stack:32|QWORD[.]                                                                               |-  |int[0|0x0]  |stack:40|DWORD  |-  |stack:96|DWORD  |int[0|0x0]  |vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]}  |-  |- 
     stack:   |vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]}  |   |            |                |   |                |            |                                                                                                |   |    <||@
  Comment 2231 978 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2234 980 rax|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 2239 982 r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2244 986 JUMP ~[] destination: B109 -> B111  <||@
  Comment 2249 block B128 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 2249 1236 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2249 1238 r13|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 2252 1240 stack:120|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD  <||@
  Comment 2256 1242 stack:124|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 2260 1244 stack:104|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 2265 1246 rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: -) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@120cc8dc encoding: base: 0 shift: 3  <||@
  Comment 2269 1248 rsi|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 2272 1250 rdx|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 2275 1252 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2280 1254 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:9, 7, 165]  <||@
  Comment 2280 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 2285 [stack:8, stack:16, stack:40, stack:48, stack:64, stack:96]at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9, duringCall: false, rethrow: false]
              |0                                                                                               |1               
     locals:  |-                                                                                               |-               
     stack:   |vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]}  |stack:104|DWORD 
  at java.util.ArrayList.add(ArrayList.java:462) [bci: 7, duringCall: true, rethrow: false]
              |0                                                                                               |1                  
     locals:  |vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]}  |stack:112|QWORD[.] 
  at java.lang.String.split(String.java:2353) [bci: 165, duringCall: true, rethrow: false]
              |0                  |1  |2           |3               |4  |5               |6           |7                                                                                               |8  |9 
     locals:  |stack:32|QWORD[.]  |-  |int[0|0x0]  |stack:40|DWORD  |-  |stack:96|DWORD  |int[0|0x0]  |vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]}  |-  |-   <||@
  Comment 2286 1256 rcx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2289 1258 rbp|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 2292 1260 rax|DWORD[.] = MOVE stack:120|DWORD[.] moveKind: DWORD  <||@
  Comment 2296 1262 rbx|DWORD = MOVE stack:124|DWORD moveKind: DWORD  <||@
  Comment 2300 1264 r9|DWORD = MOVE stack:104|DWORD moveKind: DWORD  <||@
  Comment 2305 1266 r11|DWORD = MOVE stack:116|DWORD moveKind: DWORD  <||@
  Comment 2310 1268 r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 2315 1270 rdx|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 2319 1272 rsi|QWORD = MOVE stack:72|QWORD moveKind: QWORD  <||@
  Comment 2324 1274 JUMP ~[] destination: B128 -> B130  <||@
  Comment 2329 block B54 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 2329 470 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2329 472 r14|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2332 474 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 2332 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 2342 476 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 2347 478 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2352 480 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:65, 162]  <||@
  Comment 2352 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 2357 [stack:40, stack:48, stack:64, stack:96]at java.lang.String.substring(String.java:1969) [bci: 65, duringCall: false, rethrow: false]
              |0                  |1          |2  |3          
     locals:  |stack:32|QWORD[.]  |r14|DWORD  |-  |int[0|0x0] 
  at java.lang.String.split(String.java:2353) [bci: 162, duringCall: true, rethrow: false]
              |0                                                                                               |1  |2           |3               |4  |5               |6           |7                                                                                               |8  |9 
     locals:  |stack:32|QWORD[.]                                                                               |-  |int[0|0x0]  |stack:40|DWORD  |-  |stack:96|DWORD  |int[0|0x0]  |vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]}  |-  |- 
     stack:   |vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]}  |   |            |                |   |                |            |                                                                                                |   |    <||@
  Comment 2358 482 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2361 484 r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2366 486 r10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 2366 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 2376 488 JUMP ~[] destination: B54 -> B56  <||@
  Comment 2381 block B185 null  <||@
  Comment 2381 1780 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2381 320 r13|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 2384 322 r14|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2387 1782 JUMP ~[] destination: B185 -> B186  <||@
  Comment 2387 block B186 null  <||@
  Comment 2387 1784 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2387 1786 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 2390 1788 BRANCH trueDestinationProbability: 0.013959872667270279 condition: = trueDestination: B186 -> B187 falseDestination: B186 -> B191  <||@
  Comment 2396 block B191 null  <||@
  Comment 2396 1846 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2396 1848 TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 2399 1850 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B191 -> B192 falseDestination: B191 -> B193  <||@
  Comment 2405 block B193 null  <||@
  Comment 2405 1860 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2405 1862 rdx|DWORD = INC stack:92|DWORD size: DWORD  <||@
  Comment 2411 1864 stack:100|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 2415 1866 CMP r13|DWORD y: 1 size: DWORD  <||@
  Comment 2419 1868 BRANCH trueDestinationProbability: 0.09284041465770032 condition: < trueDestination: B193 -> B194 falseDestination: B193 -> B201  <||@
  Comment 2425 block B201 null  <||@
  Comment 2425 1936 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2425 1938 CMP (x: r14|DWORD, y: stack:44|DWORD) size: DWORD  <||@
  Comment 2430 1940 BRANCH trueDestinationProbability: 9.999999999998899E-5 condition: > trueDestination: B201 -> B202 falseDestination: B201 -> B204  <||@
  Comment 2436 block B204 null  <||@
  Comment 2436 1958 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2436 1960 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 2440 1962 rcx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 2444 1964 CMP r13|DWORD y: 16777215 size: DWORD  <||@
  Comment 2451 1966 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B204 -> B205 falseDestination: B204 -> B209  <||@
  Comment 2457 block B205 null  <||@
  Comment 2457 1968 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2457 1970 r10|DWORD = SHL r13|DWORD size: DWORD  <||@
  Comment 2463 1972 r10|DWORD = LEA [r10|DWORD + 23] size: DWORD  <||@
  Comment 2467 1974 r10|DWORD = AND r10|DWORD y: -8 size: DWORD  <||@
  Comment 2471 1976 r10|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 2474 1978 r11|QWORD = ADD (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 2480 1980 CMP (x: r11|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 2483 1982 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B205 -> B209 falseDestination: B205 -> B207  <||@
  Comment 2489 block B207 null  <||@
  Comment 2489 1988 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2489 1990 MOV (x: [r15|QWORD + 96], y: r11|QWORD) size: QWORD  <||@
  Comment 2493 1992 AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 192] instr: 0  <||@
  Comment 2502 1994 AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 256] instr: 0  <||@
  Comment 2511 1996 AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 320] instr: 0  <||@
  Comment 2520 1998 AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 384] instr: 0  <||@
  Comment 2529 2000 MOV (x: [rsi|QWORD + 12], y: r13|DWORD) size: DWORD  <||@
  Comment 2533 2002 MOV [rsi|QWORD] y: 1 size: QWORD  <||@
  Comment 2540 2004 MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 2540 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 2547 2006 rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 2547 2008 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2550 2012 JUMP ~[] destination: B207 -> B210  <||@
  Comment 2550 block B210 null  <||@
  Comment 2550 2032 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2550 2010 rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2555 2034 rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 2559 2036 rcx|QWORD = MOVSXD r14|DWORD size: QWORD  <||@
  Comment 2562 2038 rsi|QWORD[.] = LEA [rsi|QWORD[.] + rcx|QWORD * 2 + 16] size: QWORD  <||@
  Comment 2567 2040 rcx|QWORD = MOVSXD r13|DWORD size: QWORD  <||@
  Comment 2570 2042 r10|QWORD = LEA [rcx|QWORD - 16] size: QWORD  <||@
  Comment 2574 2044 TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 2577 2050 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2584 2046 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B210 -> B215 falseDestination: B210 -> B213  <||@
  Comment 2590 block B215 null  <||@
  Comment 2590 2076 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2590 2078 r10|QWORD = LEA [rcx|QWORD - 8] size: QWORD  <||@
  Comment 2594 2080 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 2597 2082 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B215 -> B218 falseDestination: B215 -> B217  <||@
  Comment 2603 block B217 null  <||@
  Comment 2603 2088 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2603 2090 xmm0|V128_WORD = H [rsi|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVDQU  <||@
  Comment 2609 2092 J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 2615 2094 r10|QWORD = LEA [r11|QWORD + 8] size: QWORD  <||@
  Comment 2619 2096 r11|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 2622 2098 JUMP ~[] destination: B217 -> B218  <||@
  Comment 2622 block B218 null  <||@
  Comment 2622 2100 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2622 2102 r10|QWORD = LEA [rcx|QWORD - 4] size: QWORD  <||@
  Comment 2626 2104 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 2629 2106 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B218 -> B221 falseDestination: B218 -> B220  <||@
  Comment 2635 block B220 null  <||@
  Comment 2635 2112 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2635 2114 xmm0|V64_WORD = H [rsi|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVQ  <||@
  Comment 2641 2116 J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 2647 2118 r10|QWORD = LEA [r11|QWORD + 4] size: QWORD  <||@
  Comment 2651 2120 r11|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 2654 2122 JUMP ~[] destination: B220 -> B221  <||@
  Comment 2654 block B221 null  <||@
  Comment 2654 2124 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2654 2126 r10|QWORD = LEA [rcx|QWORD - 2] size: QWORD  <||@
  Comment 2658 2128 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 2661 2130 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B221 -> B224 falseDestination: B221 -> B223  <||@
  Comment 2667 block B223 null  <||@
  Comment 2667 2136 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2667 2138 xmm0|V32_WORD = H [rsi|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVD  <||@
  Comment 2673 2140 J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 2679 2142 r10|QWORD = LEA [r11|QWORD + 2] size: QWORD  <||@
  Comment 2683 2144 r11|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 2686 2146 JUMP ~[] destination: B223 -> B224  <||@
  Comment 2686 block B224 null  <||@
  Comment 2686 2148 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2686 2150 rcx|QWORD = DEC rcx|QWORD size: QWORD  <||@
  Comment 2689 2152 CMP (x: r11|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 2692 2154 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B224 -> B227 falseDestination: B224 -> B226  <||@
  Comment 2698 block B226 null  <||@
  Comment 2698 2162 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2698 2164 rsi|DWORD = MOVSX [rsi|QWORD[.] + r11|QWORD * 2] size: DWORD  <||@
  Comment 2703 2166 MOV (x: [rdx|QWORD[.] + r11|QWORD * 2], y: rsi|DWORD) size: WORD  <||@
  Comment 2708 2170 JUMP ~[] destination: B226 -> B227  <||@
  Comment 2708 block B227 null  <||@
  Comment 2708 2172 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2708 2168 rdi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 2713 2174 rsi|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@120cc8dc encoding: base: 0 shift: 3  <||@
  Comment 2720 2176 CMP (x: rdi|QWORD[.], y: stack:88|QWORD[.]) size: QWORD  <||@
  Comment 2725 2178 BRANCH trueDestinationProbability: 0.2066504369952622 condition: = trueDestination: B227 -> B228 falseDestination: B227 -> B231  <||@
  Comment 2731 block B231 null  <||@
  Comment 2731 2206 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2731 2208 r14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2734 2210 r13|DWORD = MOVE stack:100|DWORD moveKind: DWORD  <||@
  Comment 2739 2214 JUMP ~[] destination: B231 -> B232  <||@
  Comment 2739 block B232 null  <||@
  Comment 2739 2216 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 2739 1932 r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 2744 2218 stack:40|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 2749 2220 r10|DWORD = MOV [r8|QWORD[.] + 12] size: DWORD  <||@
  Comment 2753 2222 r11|DWORD = MOV [r8|QWORD[.] + 8] size: DWORD  <||@
  Comment 2757 2224 rdx|DWORD = SUB (x: r13|DWORD, ~y: r10|DWORD) size: DWORD  <||@
  Comment 2763 2226 CMP rdx|DWORD y: 1 size: DWORD  <||@
  Comment 2766 2228 BRANCH trueDestinationProbability: 0.7754412955005789 condition: < trueDestination: B232 -> B233 falseDestination: B232 -> B241  <||@
  Comment 2772 block B233 null  <||@
  Comment 2772 2230 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2772 2232 CMP r11|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}  <||@
  Comment 2772 {meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}}  <||@
  Comment 2779 2234 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B233 -> B234 falseDestination: B233 -> B240  <||@
  Comment 2785 block B234 null  <||@
  Comment 2785 2236 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2785 2238 CMP (x: r10|DWORD, y: stack:92|DWORD) size: DWORD  <||@
  Comment 2790 2240 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B234 -> B235 falseDestination: B234 -> B239  <||@
  Comment 2796 block B235 null  <||@
  Comment 2796 2242 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2796 2244 rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 2800 2246 rcx|QWORD = LEA [rdx|QWORD + 24] size: QWORD  <||@
  Comment 2804 2248 CMP (x: rcx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 2808 2250 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B235 -> B236 falseDestination: B235 -> B237  <||@
  Comment 2814 block B237 null  <||@
  Comment 2814 2278 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2814 2280 MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD  <||@
  Comment 2818 2282 AMD64PREFETCH ~[rdx|QWORD + 216] instr: 0  <||@
  Comment 2825 2284 rdx|QWORD[*] = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 2825 2292 JUMP ~[] destination: B237 -> B238  <||@
  Comment 2825 block B238 null  <||@
  Comment 2825 2294 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2825 2286 r9|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 2830 2288 rbx|QWORD = MOVE stack:72|QWORD moveKind: QWORD  <||@
  Comment 2835 2290 r10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 2835 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 2845 2296 rcx|QWORD[.] = MOVE rdx|QWORD[*] moveKind: QWORD  <||@
  Comment 2848 2298 r10|QWORD = MOV [r10|QWORD + 168] size: QWORD  <||@
  Comment 2855 2300 MOV (x: [rdx|QWORD[*]], y: r10|QWORD) size: QWORD  <||@
  Comment 2858 2302 MOV [rdx|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 2858 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 2865 2304 MOV (x: [rdx|QWORD[*] + 12], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 2868 2306 MOV (x: [rdx|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 2872 2308 rcx|DWORD[.] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@120cc8dc encoding: base: 0 shift: 3  <||@
  Comment 2876 2310 MOV (x: [r8|QWORD[.] + r9|DWORD * 4 + 16], y: rcx|DWORD[.]) size: DWORD  <||@
  Comment 2881 2312 rsi|QWORD[.] = LEA [r8|QWORD[.] + r9|DWORD * 4 + 16] size: QWORD  <||@
  Comment 2886 2314 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 2890 2316 MOVB (x: [rsi|QWORD[*] + rbx|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 2894 2318 r13|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2897 2320 xmm2|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null>  <||@
  Comment 2901 2322 xmm1|V128_DWORD[....] = L oc: SIMD<null,null,null,null>  <||@
  Comment 2905 2324 xmm0|V64_DWORD[..] = L oc: SIMD<null,null>  <||@
  Comment 2909 2326 JUMP ~[] destination: B238 -> B291  <||@
  Comment 2909 block B291 null  <||@
  Comment 2909 2864 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2909 2866 rsi|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD  <||@
  Comment 2913 2868 r14|DWORD = MOVE stack:100|DWORD moveKind: DWORD  <||@
  Comment 2918 2870 rdx|DWORD = MOVE stack:100|DWORD moveKind: DWORD  <||@
  Comment 2922 2872 JUMP ~[] destination: B291 -> B292  <||@
  Comment 2927 block B294 loop 11 depth 1 header:78|LoopBegin  <||@
  Comment 2927 2892 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 2928 2894 r10|DWORD = DEC r14|DWORD size: DWORD  <||@
  Comment 2934 2896 CMP (x: rdx|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 2937 2898 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B294 -> B295 falseDestination: B294 -> B350  <||@
  Comment 2943 block B295 loop 11 depth 1 header:78|LoopBegin  <||@
  Comment 2943 2900 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2943 2902 CMP (x: rsi|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 2946 2904 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B295 -> B296 falseDestination: B295 -> B349  <||@
  Comment 2952 block B296 loop 11 depth 1 header:78|LoopBegin  <||@
  Comment 2952 2906 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2952 2908 r11|QWORD = MOVSXD r14|DWORD size: QWORD  <||@
  Comment 2955 2910 rcx|DWORD[.] = MOV [r13|QWORD[.] + r11|QWORD * 4 + 12] size: DWORD  <||@
  Comment 2960 2912 TEST (x: rcx|DWORD[.], y: rcx|DWORD[.]) size: DWORD  <||@
  Comment 2962 2914 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B296 -> B300 falseDestination: B296 -> B298  <||@
  Comment 2968 block B298 loop 11 depth 1 header:78|LoopBegin  <||@
  Comment 2968 2920 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2968 2922 CMP [rcx|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 2968 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 2979 2924 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B298 -> B300 falseDestination: B298 -> B348  <||@
  Comment 2985 block B300 loop 11 depth 1 header:78|LoopBegin  <||@
  Comment 2985 2930 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2985 2932 rcx|DWORD[.] = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD state [bci:261]  <||@
  Comment 2985 [r13:0]at java.lang.String.split(String.java:2373) [bci: 261, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7                                                                                |8          |9 
     locals:  |-  |-  |-  |-  |-  |-  |-  |vobject:ArrayList:0{modCount=rdx|DWORD,size=rdx|DWORD,elementData=r13|QWORD[.]}  |r14|DWORD  |-   <||@
  Comment 2985 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2992 2934 CMP [rcx|DWORD[.] * 8 + 12] y: 0 size: DWORD state [bci:261]  <||@
  Comment 2992 [r13:0]at java.lang.String.split(String.java:2373) [bci: 261, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7                                                                                |8          |9 
     locals:  |-  |-  |-  |-  |-  |-  |-  |vobject:ArrayList:0{modCount=rdx|DWORD,size=rdx|DWORD,elementData=r13|QWORD[.]}  |r14|DWORD  |-   <||@
  Comment 2992 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 3000 2936 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B300 -> B301 falseDestination: B300 -> B302  <||@
  Comment 3006 block B301 loop 11 depth 1 header:78|LoopBegin  <||@
  Comment 3006 2938 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3006 2940 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:261]  <||@
  Comment 3006 [r13:0]at java.lang.String.split(String.java:2373) [bci: 261, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7                                                                                |8          |9 
     locals:  |-  |-  |-  |-  |-  |-  |-  |vobject:ArrayList:0{modCount=rdx|DWORD,size=rdx|DWORD,elementData=r13|QWORD[.]}  |r14|DWORD  |-   <||@
  Comment 3006 {infopoint: SAFEPOINT}  <||@
  Comment 3006 11  <||@
  Comment 3012 2942 r14|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 3015 2944 JUMP ~[] destination: B301 -> B292  <||@
  Comment 3015 block B292 loop 11 depth 1 header:78|LoopBegin  <||@
  Comment 3015 2874 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3015 2876 CMP r14|DWORD y: 1 size: DWORD  <||@
  Comment 3019 2878 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B292 -> B293 falseDestination: B292 -> B294  <||@
  Comment 3026 block B302 null  <||@
  Comment 3026 2946 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3026 2948 r8|QWORD = DEC r11|QWORD size: QWORD  <||@
  Comment 3032 2950 rsi|QWORD = MOV rsi|DWORD size: DWORD  <||@
  Comment 3034 2952 CMP (x: rsi|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 3037 2954 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B302 -> B303 falseDestination: B302 -> B347  <||@
  Comment 3043 block B303 null  <||@
  Comment 3043 2956 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3043 2958 CMP (x: rsi|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 3046 2960 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B303 -> B304 falseDestination: B303 -> B346  <||@
  Comment 3052 block B304 null  <||@
  Comment 3052 2962 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3052 2964 CMP (x: r11|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 3055 2966 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B304 -> B305 falseDestination: B304 -> B345  <||@
  Comment 3061 block B305 null  <||@
  Comment 3061 2968 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3061 2970 CMP (x: r14|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 3064 2972 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B305 -> B306 falseDestination: B305 -> B307  <||@
  Comment 3070 block B307 null  <||@
  Comment 3070 2986 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3070 2988 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 3074 2990 rcx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 3078 2992 CMP r14|DWORD y: 16777215 size: DWORD  <||@
  Comment 3085 2994 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B307 -> B308 falseDestination: B307 -> B312  <||@
  Comment 3091 block B308 null  <||@
  Comment 3091 2996 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3091 2998 r9|DWORD = SHL r14|DWORD y: 2 size: DWORD  <||@
  Comment 3098 3000 r9|DWORD = LEA [r9|DWORD + 23] size: DWORD  <||@
  Comment 3102 3002 r9|DWORD = AND r9|DWORD y: -8 size: DWORD  <||@
  Comment 3106 3004 r9|QWORD = MOVSXD r9|DWORD size: QWORD  <||@
  Comment 3109 3006 rdi|QWORD = ADD (x: r9|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 3115 3008 CMP (x: rdi|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 3118 3010 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B308 -> B312 falseDestination: B308 -> B310  <||@
  Comment 3124 block B310 null  <||@
  Comment 3124 3020 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3124 3022 MOV (x: [r15|QWORD + 96], y: rdi|QWORD) size: QWORD  <||@
  Comment 3128 3024 AMD64PREFETCH ~[r9|QWORD + rsi|QWORD * 1 + 192] instr: 0  <||@
  Comment 3137 3026 AMD64PREFETCH ~[r9|QWORD + rsi|QWORD * 1 + 256] instr: 0  <||@
  Comment 3146 3028 AMD64PREFETCH ~[r9|QWORD + rsi|QWORD * 1 + 320] instr: 0  <||@
  Comment 3155 3030 AMD64PREFETCH ~[r9|QWORD + rsi|QWORD * 1 + 384] instr: 0  <||@
  Comment 3164 3032 MOV (x: [rsi|QWORD + 12], y: r14|DWORD) size: DWORD  <||@
  Comment 3168 3034 MOV [rsi|QWORD] y: 1 size: QWORD  <||@
  Comment 3175 3036 MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 3175 {meta{HotSpotType<[Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 3182 3038 rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 3182 3040 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 3185 3042 stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 3190 3044 stack:96|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 3195 3046 stack:64|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 3200 3048 r14|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 3203 3050 r13|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 3206 3052 JUMP ~[] destination: B310 -> B313  <||@
  Comment 3206 block B313 null  <||@
  Comment 3206 3080 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3206 3082 rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 3210 3084 rdx|QWORD = LEA [r13|QWORD - 8] size: QWORD  <||@
  Comment 3214 3086 TEST (x: rdx|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 3217 3092 rcx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 3224 3088 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B313 -> B318 falseDestination: B313 -> B315  <||@
  Comment 3230 block B318 null  <||@
  Comment 3230 3118 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3230 3120 rdx|QWORD = LEA [r13|QWORD - 4] size: QWORD  <||@
  Comment 3234 3122 CMP (x: rcx|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 3237 3124 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B318 -> B321 falseDestination: B318 -> B320  <||@
  Comment 3243 block B320 null  <||@
  Comment 3243 3130 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3243 3132 xmm1|V128_DWORD[....] = L oc: SIMD<null,null,null,null>  <||@
  Comment 3247 3134 J (address: [rsi|QWORD[.] + rcx|QWORD * 4], input: xmm1|V128_DWORD[....]) nZ: XMM oh: VMOVDQU  <||@
  Comment 3252 3136 rdx|QWORD = LEA [rcx|QWORD + 4] size: QWORD  <||@
  Comment 3256 3138 rcx|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 3259 3140 JUMP ~[] destination: B320 -> B321  <||@
  Comment 3259 block B321 null  <||@
  Comment 3259 3142 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3259 3144 rdx|QWORD = LEA [r13|QWORD - 2] size: QWORD  <||@
  Comment 3263 3146 CMP (x: rcx|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 3266 3148 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B321 -> B324 falseDestination: B321 -> B323  <||@
  Comment 3272 block B323 null  <||@
  Comment 3272 3154 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3272 3156 xmm0|V64_DWORD[..] = L oc: SIMD<null,null>  <||@
  Comment 3276 3158 J (address: [rsi|QWORD[.] + rcx|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ  <||@
  Comment 3282 3160 rdx|QWORD = LEA [rcx|QWORD + 2] size: QWORD  <||@
  Comment 3286 3162 rcx|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 3289 3164 JUMP ~[] destination: B323 -> B324  <||@
  Comment 3289 block B324 null  <||@
  Comment 3289 3166 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3289 3168 CMP (x: rcx|QWORD, y: r14|QWORD) size: QWORD  <||@
  Comment 3292 3170 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B324 -> B327 falseDestination: B324 -> B326  <||@
  Comment 3298 block B326 null  <||@
  Comment 3298 3178 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3298 3180 MOV (x: [rsi|QWORD[.] + rcx|QWORD * 4], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 3302 3184 JUMP ~[] destination: B326 -> B327  <||@
  Comment 3302 block B327 null  <||@
  Comment 3302 3186 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3302 3182 r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 3307 3188 r10|DWORD = SHL r10|DWORD y: 2 size: DWORD  <||@
  Comment 3311 3190 rsi|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 3314 3192 rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 3318 3194 rdx|QWORD[.] = ADD (x: rdx|QWORD[.], y: rsi|QWORD) size: QWORD  <||@
  Comment 3321 3196 rdx|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD  <||@
  Comment 3325 3198 rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 3329 3200 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 3333 3202 rdx|QWORD[*] = SUB (x: rdx|QWORD[*], ~y: rsi|QWORD[*]) size: QWORD  <||@
  Comment 3336 3204 rdx|QWORD[*] = INC rdx|QWORD[*] size: QWORD  <||@
  Comment 3339 3206 rbx|QWORD = MOVE stack:72|QWORD moveKind: QWORD  <||@
  Comment 3344 3208 JUMP ~[] destination: B327 -> B328  <||@
  Comment 3349 block B343 loop 13 depth 1 header:3198|LoopBegin  <||@
  Comment 3349 3316 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 3360 3318 rdx|QWORD[*] = DEC rdx|QWORD[*] size: QWORD  <||@
  Comment 3363 3320 rcx|QWORD[*] = ADD (x: rsi|QWORD[*], y: rbx|QWORD) size: QWORD  <||@
  Comment 3369 3322 rcx|QWORD[*] = ADD (x: rcx|QWORD[*], y: rdx|QWORD[*]) size: QWORD  <||@
  Comment 3372 3324 MOVB (x: [rcx|QWORD[*]], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 3375 3326 JUMP ~[] destination: B343 -> B328  <||@
  Comment 3375 block B328 loop 13 depth 1 header:3198|LoopBegin  <||@
  Comment 3375 3210 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3375 3212 CMP rdx|QWORD[*] y: 1 size: QWORD  <||@
  Comment 3379 3214 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B328 -> B329 falseDestination: B328 -> B343  <||@
  Comment 3381 block B329 null  <||@
  Comment 3381 3216 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3381 3218 r9|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 3387 3220 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 3393 3222 r11|DWORD = MOVE stack:96|DWORD moveKind: DWORD  <||@
  Comment 3398 3224 r8|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 3403 3226 JUMP ~[] destination: B329 -> B330  <||@
  Comment 3408 block B331 loop 14 depth 1 header:686|LoopBegin  <||@
  Comment 3408 3234 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 3408 3236 CMP (x: r10|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 3411 3238 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B331 -> B332 falseDestination: B331 -> B333  <||@
  Comment 3417 block B333 loop 14 depth 1 header:686|LoopBegin  <||@
  Comment 3417 3246 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3417 3248 rsi|DWORD[.] = MOV [r8|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD  <||@
  Comment 3422 3250 TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 3424 3252 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B333 -> B337 falseDestination: B333 -> B335  <||@
  Comment 3430 block B335 loop 14 depth 1 header:686|LoopBegin  <||@
  Comment 3430 3258 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3430 3260 CMP [rsi|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 3430 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 3441 3262 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B335 -> B337 falseDestination: B335 -> B338  <||@
  Comment 3447 block B337 loop 14 depth 1 header:686|LoopBegin  <||@
  Comment 3447 3268 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3447 3270 MOV (x: [rax|QWORD[.] + r10|DWORD * 4 + 16], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 3452 3272 rsi|QWORD[.] = LEA [rax|QWORD[.] + r10|DWORD * 4 + 16] size: QWORD  <||@
  Comment 3457 3274 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 3461 3276 MOVB (x: [rsi|QWORD[*] + rbx|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 3465 3278 rsi|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 3470 3280 r9|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 3473 3282 r10|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 3476 3284 JUMP ~[] destination: B337 -> B330  <||@
  Comment 3476 block B330 loop 14 depth 1 header:686|LoopBegin  <||@
  Comment 3476 3228 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 3476 3230 CMP (x: r11|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 3479 3232 BRANCH trueDestinationProbability: 0.6976536501116306 condition: > trueDestination: B330 -> B331 falseDestination: B330 -> B339  <||@
  Comment 3481 block B339 null  <||@
  Comment 3481 3292 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3481 3294 CMP (x: r10|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 3484 3296 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B339 -> B340 falseDestination: B339 -> B341  <||@
  Comment 3490 block B340 null  <||@
  Comment 3490 3298 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3490 3300 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 3499 12  <||@
  Comment 3509 block B315 null  <||@
  Comment 3509 3096 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3509 3100 xmm2|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null>  <||@
  Comment 3513 3102 JUMP ~[] destination: B315 -> B316  <||@
  Comment 3513 block B316 loop 12 depth 1 header:3357|LoopBegin  <||@
  Comment 3513 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 3520 3106 J (address: [rsi|QWORD[.] + rcx|QWORD * 4], input: xmm2|V256_DWORD[........]) nZ: YMM oh: VMOVDQU  <||@
  Comment 3525 3108 rcx|QWORD = LEA [rcx|QWORD + 8] size: QWORD  <||@
  Comment 3529 3110 CMP (x: rcx|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 3532 3112 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B316 -> B318 falseDestination: B316 -> B316  <||@
  Comment 3539 block B213 loop 7 depth 1 header:3285|LoopBegin  <||@
  Comment 3539 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 3552 2062 xmm0|V256_WORD = H [rsi|QWORD[.] + r11|QWORD * 2] nZ: YMM oh: VMOVDQU  <||@
  Comment 3558 2064 J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 3564 2066 r11|QWORD = LEA [r11|QWORD + 16] size: QWORD  <||@
  Comment 3568 2068 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 3571 2070 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B213 -> B215 falseDestination: B213 -> B213  <||@
  Comment 3578 block B241 null  <||@
  Comment 3578 2348 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3578 2350 r9|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 3583 2352 rbx|QWORD = MOVE stack:72|QWORD moveKind: QWORD  <||@
  Comment 3588 2354 rdi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 3588 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 3598 2356 rdx|DWORD = SHR r10|DWORD size: DWORD  <||@
  Comment 3603 2358 rdx|DWORD = ADD (x: rdx|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 3606 2360 rcx|DWORD = SUB (x: rdx|DWORD, ~y: r13|DWORD) size: DWORD  <||@
  Comment 3611 2362 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 3613 2364 rdx|DWORD = CMOVE (falseValue: rdx|DWORD, ~trueValue: r13|DWORD) condition: <  <||@
  Comment 3617 2366 rcx|DWORD = LEA [rdx|DWORD - 2147483639] size: DWORD  <||@
  Comment 3623 2368 CMP rcx|DWORD y: 1 size: DWORD  <||@
  Comment 3626 2370 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B241 -> B242 falseDestination: B241 -> B356  <||@
  Comment 3632 block B242 null  <||@
  Comment 3632 2372 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3632 2374 CMP (x: rdx|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 3635 2376 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B242 -> B243 falseDestination: B242 -> B355  <||@
  Comment 3641 block B243 null  <||@
  Comment 3641 2378 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3641 2380 TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 3643 2382 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B243 -> B244 falseDestination: B243 -> B245  <||@
  Comment 3649 block B245 null  <||@
  Comment 3649 2392 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3649 2394 rcx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 3653 2396 rax|DWORD = SHL rdx|DWORD y: 2 size: DWORD  <||@
  Comment 3658 2398 rax|DWORD = LEA [rax|DWORD + 23] size: DWORD  <||@
  Comment 3661 2400 rax|DWORD = AND rax|DWORD y: -8 size: DWORD  <||@
  Comment 3664 2402 rax|QWORD = MOVSXD rax|DWORD size: QWORD  <||@
  Comment 3667 2404 rbp|QWORD = ADD (x: rax|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 3673 2406 CMP (x: rbp|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 3677 2408 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B245 -> B246 falseDestination: B245 -> B247  <||@
  Comment 3683 block B247 null  <||@
  Comment 3683 2450 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3683 2452 MOV (x: [r15|QWORD + 96], y: rbp|QWORD) size: QWORD  <||@
  Comment 3687 2454 AMD64PREFETCH ~[rax|QWORD + rcx|QWORD * 1 + 192] instr: 0  <||@
  Comment 3695 2456 AMD64PREFETCH ~[rax|QWORD + rcx|QWORD * 1 + 256] instr: 0  <||@
  Comment 3703 2458 AMD64PREFETCH ~[rax|QWORD + rcx|QWORD * 1 + 320] instr: 0  <||@
  Comment 3711 2460 AMD64PREFETCH ~[rax|QWORD + rcx|QWORD * 1 + 384] instr: 0  <||@
  Comment 3719 2462 MOV (x: [rcx|QWORD + 12], y: rdx|DWORD) size: DWORD  <||@
  Comment 3722 2464 MOV [rcx|QWORD] y: 1 size: QWORD  <||@
  Comment 3729 2466 MOV (x: [rcx|QWORD + 8], y: r11|DWORD) size: DWORD  <||@
  Comment 3733 2468 rcx|QWORD[.] = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 3733 2470 r11|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 3736 2472 JUMP ~[] destination: B247 -> B248  <||@
  Comment 3736 block B248 null  <||@
  Comment 3736 2474 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3736 2476 CMP (x: rdx|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 3739 2478 rcx|DWORD = CMOVE (falseValue: rdx|DWORD, ~trueValue: r10|DWORD) condition: >  <||@
  Comment 3745 2480 rcx|QWORD = MOVSXD rcx|DWORD size: QWORD  <||@
  Comment 3748 2482 CMP rcx|QWORD y: 1 size: QWORD  <||@
  Comment 3752 2484 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B248 -> B264 falseDestination: B248 -> B250  <||@
  Comment 3758 block B250 null  <||@
  Comment 3758 2490 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3758 2492 r10|QWORD[.] = LEA [r11|QWORD[.] + 16] size: QWORD  <||@
  Comment 3762 2494 rax|QWORD[.] = LEA [r8|QWORD[.] + 16] size: QWORD  <||@
  Comment 3766 2496 rbp|QWORD = LEA [rcx|QWORD - 8] size: QWORD  <||@
  Comment 3770 2498 TEST (x: rbp|QWORD, y: rbp|QWORD) size: QWORD  <||@
  Comment 3773 2504 r13|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 3780 2500 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B250 -> B255 falseDestination: B250 -> B253  <||@
  Comment 3786 block B255 null  <||@
  Comment 3786 2530 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3786 2532 rbp|QWORD = LEA [rcx|QWORD - 4] size: QWORD  <||@
  Comment 3790 2534 CMP (x: r13|QWORD, y: rbp|QWORD) size: QWORD  <||@
  Comment 3793 2536 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B255 -> B258 falseDestination: B255 -> B257  <||@
  Comment 3799 block B257 null  <||@
  Comment 3799 2542 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3799 2544 xmm0|V128_DWORD[....] = H [rax|QWORD[.] + r13|QWORD * 4] nZ: XMM oh: VMOVDQU  <||@
  Comment 3805 2546 J (address: [r10|QWORD[.] + r13|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU  <||@
  Comment 3811 2548 rbp|QWORD = LEA [r13|QWORD + 4] size: QWORD  <||@
  Comment 3815 2550 r13|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 3818 2552 JUMP ~[] destination: B257 -> B258  <||@
  Comment 3818 block B258 null  <||@
  Comment 3818 2554 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3818 2556 rbp|QWORD = LEA [rcx|QWORD - 2] size: QWORD  <||@
  Comment 3822 2558 CMP (x: r13|QWORD, y: rbp|QWORD) size: QWORD  <||@
  Comment 3825 2560 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B258 -> B261 falseDestination: B258 -> B260  <||@
  Comment 3831 block B260 null  <||@
  Comment 3831 2566 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3831 2568 xmm0|V64_DWORD[..] = H [rax|QWORD[.] + r13|QWORD * 4] nZ: XMM oh: VMOVQ  <||@
  Comment 3837 2570 J (address: [r10|QWORD[.] + r13|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ  <||@
  Comment 3843 2572 rbp|QWORD = LEA [r13|QWORD + 2] size: QWORD  <||@
  Comment 3847 2574 r13|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 3850 2576 JUMP ~[] destination: B260 -> B261  <||@
  Comment 3850 block B261 null  <||@
  Comment 3850 2578 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3850 2580 rbp|QWORD = DEC rcx|QWORD size: QWORD  <||@
  Comment 3856 2582 CMP (x: r13|QWORD, y: rbp|QWORD) size: QWORD  <||@
  Comment 3859 2584 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B261 -> B264 falseDestination: B261 -> B263  <||@
  Comment 3865 block B263 null  <||@
  Comment 3865 2590 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3865 2592 rax|DWORD[.] = MOV [rax|QWORD[.] + r13|QWORD * 4] size: DWORD  <||@
  Comment 3869 2594 MOV (x: [r10|QWORD[.] + r13|QWORD * 4], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 3873 2596 JUMP ~[] destination: B263 -> B264  <||@
  Comment 3873 block B264 null  <||@
  Comment 3873 2598 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3873 2600 r10|QWORD = MOVSXD rdx|DWORD size: QWORD  <||@
  Comment 3876 2602 CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 3879 2604 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B264 -> B265 falseDestination: B264 -> B280  <||@
  Comment 3885 block B280 null  <||@
  Comment 3885 2722 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3885 2724 xmm2|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null>  <||@
  Comment 3889 2726 xmm1|V128_DWORD[....] = L oc: SIMD<null,null,null,null>  <||@
  Comment 3893 2728 xmm0|V64_DWORD[..] = L oc: SIMD<null,null>  <||@
  Comment 3897 2730 JUMP ~[] destination: B280 -> B281  <||@
  Comment 3897 block B281 null  <||@
  Comment 3897 2732 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3897 2734 TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 3899 2736 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B281 -> B286 falseDestination: B281 -> B283  <||@
  Comment 3905 block B283 null  <||@
  Comment 3905 2742 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3905 2744 rdx|DWORD = DEC rdx|DWORD size: DWORD  <||@
  Comment 3907 2746 rdx|DWORD = SHL rdx|DWORD y: 2 size: DWORD  <||@
  Comment 3910 2748 rdx|QWORD = MOVSXD rdx|DWORD size: QWORD  <||@
  Comment 3913 2750 rcx|QWORD[.] = LEA [r11|QWORD[.] + 16] size: QWORD  <||@
  Comment 3917 2752 rcx|QWORD[.] = ADD (x: rcx|QWORD[.], y: rdx|QWORD) size: QWORD  <||@
  Comment 3920 2754 rcx|QWORD[*] = SHR rcx|QWORD[.] y: 9 size: QWORD  <||@
  Comment 3924 2756 rdx|QWORD[.] = LEA [r11|QWORD[.] + 16] size: QWORD  <||@
  Comment 3928 2758 rdx|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD  <||@
  Comment 3932 2760 rcx|QWORD[*] = SUB (x: rcx|QWORD[*], ~y: rdx|QWORD[*]) size: QWORD  <||@
  Comment 3935 2762 rcx|QWORD[*] = INC rcx|QWORD[*] size: QWORD  <||@
  Comment 3938 2764 JUMP ~[] destination: B283 -> B284  <||@
  Comment 3943 block B353 loop 10 depth 1 header:3060|LoopBegin  <||@
  Comment 3943 3436 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 3952 3438 rcx|QWORD[*] = DEC rcx|QWORD[*] size: QWORD  <||@
  Comment 3955 3440 r10|QWORD[*] = ADD (x: rdx|QWORD[*], y: rbx|QWORD) size: QWORD  <||@
  Comment 3961 3442 r10|QWORD[*] = ADD (x: r10|QWORD[*], y: rcx|QWORD[*]) size: QWORD  <||@
  Comment 3964 3444 MOVB (x: [r10|QWORD[*]], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 3967 3446 JUMP ~[] destination: B353 -> B284  <||@
  Comment 3967 block B284 loop 10 depth 1 header:3060|LoopBegin  <||@
  Comment 3967 2766 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3967 2768 CMP rcx|QWORD[*] y: 1 size: QWORD  <||@
  Comment 3971 2770 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B284 -> B286 falseDestination: B284 -> B353  <||@
  Comment 3979 block B228 null  <||@
  Comment 3979 2180 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3979 2182 CMP stack:100|DWORD y: 11 size: DWORD  <||@
  Comment 3984 2188 r14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 3987 2184 BRANCH trueDestinationProbability: 0.7308950256495741 condition: < trueDestination: B228 -> B229 falseDestination: B228 -> B230  <||@
  Comment 3993 block B229 null  <||@
  Comment 3993 2186 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3993 2190 r13|DWORD = MOVE input: int[10|0xa]  <||@
  Comment 3999 2194 JUMP ~[] destination: B229 -> B232  <||@
  Comment 4004 block B265 null  <||@
  Comment 4004 2606 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4004 2608 rax|QWORD[.] = LEA [r11|QWORD[.] + rcx|QWORD * 4 + 16] size: QWORD  <||@
  Comment 4009 2610 r10|QWORD = SUB (x: r10|QWORD, ~y: rcx|QWORD) size: QWORD  <||@
  Comment 4012 2612 rcx|QWORD = LEA [r10|QWORD - 8] size: QWORD  <||@
  Comment 4016 2614 TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 4019 2620 rbp|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 4026 2622 xmm2|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null>  <||@
  Comment 4030 2616 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B265 -> B270 falseDestination: B265 -> B268  <||@
  Comment 4036 block B270 null  <||@
  Comment 4036 2648 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 4036 2650 rcx|QWORD = LEA [r10|QWORD - 4] size: QWORD  <||@
  Comment 4040 2652 CMP (x: rbp|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 4043 2658 xmm1|V128_DWORD[....] = L oc: SIMD<null,null,null,null>  <||@
  Comment 4047 2654 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B270 -> B273 falseDestination: B270 -> B272  <||@
  Comment 4053 block B272 null  <||@
  Comment 4053 2662 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4053 2666 J (address: [rax|QWORD[.] + rbp|QWORD * 4], input: xmm1|V128_DWORD[....]) nZ: XMM oh: VMOVDQU  <||@
  Comment 4058 2668 rcx|QWORD = LEA [rbp|QWORD + 4] size: QWORD  <||@
  Comment 4062 2670 rbp|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 4065 2672 JUMP ~[] destination: B272 -> B273  <||@
  Comment 4065 block B273 null  <||@
  Comment 4065 2674 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 4065 2676 rcx|QWORD = LEA [r10|QWORD - 2] size: QWORD  <||@
  Comment 4069 2678 CMP (x: rbp|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 4072 2684 xmm0|V64_DWORD[..] = L oc: SIMD<null,null>  <||@
  Comment 4076 2680 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B273 -> B276 falseDestination: B273 -> B275  <||@
  Comment 4082 block B275 null  <||@
  Comment 4082 2688 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4082 2692 J (address: [rax|QWORD[.] + rbp|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ  <||@
  Comment 4088 2694 rcx|QWORD = LEA [rbp|QWORD + 2] size: QWORD  <||@
  Comment 4092 2696 rbp|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 4095 2698 JUMP ~[] destination: B275 -> B276  <||@
  Comment 4095 block B276 null  <||@
  Comment 4095 2700 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 4095 2702 r10|QWORD = DEC r10|QWORD size: QWORD  <||@
  Comment 4098 2704 CMP (x: rbp|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 4101 2706 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B276 -> B281 falseDestination: B276 -> B278  <||@
  Comment 4107 block B278 null  <||@
  Comment 4107 2712 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4107 2714 MOV (x: [rax|QWORD[.] + rbp|QWORD * 4], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 4111 2716 JUMP ~[] destination: B278 -> B281  <||@
  Comment 4116 block B286 null  <||@
  Comment 4116 2776 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4116 2778 CMP [r11|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}  <||@
  Comment 4116 {meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}}  <||@
  Comment 4124 2780 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B286 -> B287 falseDestination: B286 -> B352  <||@
  Comment 4130 block B287 null  <||@
  Comment 4130 2782 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4130 2784 rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 4134 2786 rcx|QWORD = LEA [rdx|QWORD + 24] size: QWORD  <||@
  Comment 4138 2788 CMP (x: rcx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 4142 2790 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B287 -> B288 falseDestination: B287 -> B289  <||@
  Comment 4148 block B289 null  <||@
  Comment 4148 2826 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4148 2828 MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD  <||@
  Comment 4152 2830 AMD64PREFETCH ~[rdx|QWORD + 216] instr: 0  <||@
  Comment 4159 2832 rdx|QWORD[*] = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 4159 2834 JUMP ~[] destination: B289 -> B290  <||@
  Comment 4159 block B290 null  <||@
  Comment 4159 2836 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 4159 2838 rcx|QWORD[.] = MOVE rdx|QWORD[*] moveKind: QWORD  <||@
  Comment 4162 2840 r10|QWORD = MOV [rdi|QWORD + 168] size: QWORD  <||@
  Comment 4169 2842 MOV (x: [rdx|QWORD[*]], y: r10|QWORD) size: QWORD  <||@
  Comment 4172 2844 MOV [rdx|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 4172 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 4179 2846 MOV (x: [rdx|QWORD[*] + 12], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 4182 2848 MOV (x: [rdx|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 4186 2850 rcx|DWORD[.] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@120cc8dc encoding: base: 0 shift: 3  <||@
  Comment 4190 2852 MOV (x: [r11|QWORD[.] + r9|DWORD * 4 + 16], y: rcx|DWORD[.]) size: DWORD  <||@
  Comment 4195 2854 rsi|QWORD[.] = LEA [r11|QWORD[.] + r9|DWORD * 4 + 16] size: QWORD  <||@
  Comment 4200 2856 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 4204 2858 MOVB (x: [rsi|QWORD[*] + rbx|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 4208 2860 r13|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 4211 2862 JUMP ~[] destination: B290 -> B291  <||@
  Comment 4216 block B312 null  <||@
  Comment 4216 3062 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4216 3056 stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 4221 3058 stack:64|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 4226 3064 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/String;, resolved>}  <||@
  Comment 4226 {meta{HotSpotType<[Ljava/lang/String;, resolved>}}  <||@
  Comment 4236 3066 rdx|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 4239 3068 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 4244 3070 stack:96|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 4249 3072 r13|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 4252 3074 r14|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 4255 3076 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:261]  <||@
  Comment 4255 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 4260 [stack:64]at java.lang.String.split(String.java:2373) [bci: 261, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7                                                                                                 |8               |9 
     locals:  |-  |-  |-  |-  |-  |-  |-  |vobject:ArrayList:0{modCount=stack:100|DWORD,size=stack:100|DWORD,elementData=stack:64|QWORD[.]}  |stack:96|DWORD  |-   <||@
  Comment 4261 3078 JUMP ~[] destination: B312 -> B313  <||@
  Comment 4266 block B194 null  <||@
  Comment 4266 1870 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4266 1872 CMP (x: r14|DWORD, y: stack:44|DWORD) size: DWORD  <||@
  Comment 4271 1874 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B194 -> B195 falseDestination: B194 -> B196  <||@
  Comment 4277 block B196 null  <||@
  Comment 4277 1884 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4277 1886 rdi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 4282 1888 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[0]{}]  <||@
  Comment 4282 {Object[char[0]{}]}  <||@
  Comment 4292 1890 CMP (x: rdi|QWORD[.], y: stack:88|QWORD[.]) size: QWORD  <||@
  Comment 4297 1892 BRANCH trueDestinationProbability: 0.2066504369952622 condition: = trueDestination: B196 -> B197 falseDestination: B196 -> B200  <||@
  Comment 4303 block B200 null  <||@
  Comment 4303 1924 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4303 1926 rsi|DWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: NarrowOop[char[0]{}]  <||@
  Comment 4303 {NarrowOop[char[0]{}]}  <||@
  Comment 4308 1928 r14|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 4311 1930 r13|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 4314 1934 JUMP ~[] destination: B200 -> B232  <||@
  Comment 4319 block B209 null  <||@
  Comment 4319 2018 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4319 2020 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 4319 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 4329 2022 rdx|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 4332 2024 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 4337 2026 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:132]  <||@
  Comment 4337 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 4342 [stack:40, stack:48, stack:64, stack:96]at java.lang.String.split(String.java:2351) [bci: 132, duringCall: false, rethrow: false]
              |0                           |1  |2           |3               |4          |5  |6           |7                                                                                               |8  |9 
     locals:  |stack:32|QWORD[.]           |-  |int[0|0x0]  |stack:40|DWORD  |r14|DWORD  |-  |int[0|0x0]  |vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]}  |-  |- 
     stack:   |int[-1|0xffffffffffffffff]  |   |            |                |           |   |            |                                                                                                |   |    <||@
  Comment 4343 2030 JUMP ~[] destination: B209 -> B210  <||@
  Comment 4348 block B230 null  <||@
  Comment 4348 2196 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4348 2200 r13|DWORD = MOVE stack:100|DWORD moveKind: DWORD  <||@
  Comment 4353 2204 JUMP ~[] destination: B230 -> B232  <||@
  Comment 4358 block B253 loop 8 depth 1 header:3645|LoopBegin  <||@
  Comment 4358 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 4368 2516 xmm0|V256_DWORD[........] = H [rax|QWORD[.] + r13|QWORD * 4] nZ: YMM oh: VMOVDQU  <||@
  Comment 4374 2518 J (address: [r10|QWORD[.] + r13|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU  <||@
  Comment 4380 2520 r13|QWORD = LEA [r13|QWORD + 8] size: QWORD  <||@
  Comment 4384 2522 CMP (x: r13|QWORD, y: rbp|QWORD) size: QWORD  <||@
  Comment 4387 2524 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B253 -> B255 falseDestination: B253 -> B253  <||@
  Comment 4394 block B268 loop 9 depth 1 header:3699|LoopBegin  <||@
  Comment 4394 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 4400 2636 J (address: [rax|QWORD[.] + rbp|QWORD * 4], input: xmm2|V256_DWORD[........]) nZ: YMM oh: VMOVDQU  <||@
  Comment 4405 2638 rbp|QWORD = LEA [rbp|QWORD + 8] size: QWORD  <||@
  Comment 4409 2640 CMP (x: rbp|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 4412 2642 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B268 -> B270 falseDestination: B268 -> B268  <||@
  Comment 4419 block B197 null  <||@
  Comment 4419 1894 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4419 1896 CMP stack:100|DWORD y: 11 size: DWORD  <||@
  Comment 4424 1902 rsi|DWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: NarrowOop[char[0]{}]  <||@
  Comment 4424 {NarrowOop[char[0]{}]}  <||@
  Comment 4429 1904 r14|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 4432 1898 BRANCH trueDestinationProbability: 0.7308950256495741 condition: < trueDestination: B197 -> B198 falseDestination: B197 -> B199  <||@
  Comment 4438 block B198 null  <||@
  Comment 4438 1900 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4438 1906 r13|DWORD = MOVE input: int[10|0xa]  <||@
  Comment 4444 1910 JUMP ~[] destination: B198 -> B232  <||@
  Comment 4449 block B187 null  <||@
  Comment 4449 1790 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4449 1792 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 4453 1794 rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD  <||@
  Comment 4457 1796 CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 4461 1798 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B187 -> B188 falseDestination: B187 -> B189  <||@
  Comment 4467 block B189 null  <||@
  Comment 4467 1816 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4467 1818 MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD  <||@
  Comment 4471 1820 AMD64PREFETCH ~[rax|QWORD + 216] instr: 0  <||@
  Comment 4478 1822 rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 4478 1824 r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 4483 1826 JUMP ~[] destination: B189 -> B190  <||@
  Comment 4483 block B190 null  <||@
  Comment 4483 1828 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 4483 1830 rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD  <||@
  Comment 4486 1832 MOV [rax|QWORD[*] + 12] y: 1 size: DWORD  <||@
  Comment 4493 1834 MOV [rax|QWORD[*]] y: 1 size: QWORD  <||@
  Comment 4500 1836 MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 4500 {meta{HotSpotType<[Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 4507 1838 r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@120cc8dc encoding: base: 0 shift: 3  <||@
  Comment 4511 1840 MOV (x: [rax|QWORD[*] + 16], y: r13|DWORD[.]) size: DWORD  <||@
  Comment 4515 1842 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 4518 1844 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 4527 12  <||@
  Comment 4537 block B236 null  <||@
  Comment 4537 2252 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4537 2254 r13|DWORD[.] = MOVE rsi|DWORD[.] moveKind: DWORD  <||@
  Comment 4540 2256 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 4540 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 4550 2258 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 4555 2260 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 4560 2262 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:9, 7, 246]  <||@
  Comment 4560 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 4565 [r13:0, r14:0, stack:40]at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9, duringCall: false, rethrow: false]
              |0                                                                                               |1              
     locals:  |-                                                                                               |-              
     stack:   |vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]}  |stack:40|DWORD 
  at java.util.ArrayList.add(ArrayList.java:462) [bci: 7, duringCall: true, rethrow: false]
              |0                                                                                               |1                                                    
     locals:  |vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]}  |vobject:String:1{value=r14|QWORD[.],hash=int[0|0x0]} 
  at java.lang.String.split(String.java:2368) [bci: 246, duringCall: true, rethrow: false]
              |0  |1  |2               |3  |4  |5  |6  |7                                                                                               |8  |9 
     locals:  |-  |-  |stack:36|DWORD  |-  |-  |-  |-  |vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]}  |-  |-   <||@
  Comment 4566 2264 rdx|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 4569 2266 rsi|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD  <||@
  Comment 4572 2268 r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 4577 2276 JUMP ~[] destination: B236 -> B238  <||@
  Comment 4582 block B199 null  <||@
  Comment 4582 1912 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4582 1918 r13|DWORD = MOVE stack:100|DWORD moveKind: DWORD  <||@
  Comment 4587 1922 JUMP ~[] destination: B199 -> B232  <||@
  Comment 4592 block B246 null  <||@
  Comment 4592 2410 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4592 2412 stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 4597 2414 r13|DWORD[.] = MOVE rsi|DWORD[.] moveKind: DWORD  <||@
  Comment 4600 2416 r11|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: -) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@120cc8dc encoding: base: 0 shift: 3  <||@
  Comment 4604 2418 rsi|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 4607 2420 r11|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 4610 2424 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 4615 2426 stack:96|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 4620 2428 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:9, 7, 246]  <||@
  Comment 4620 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 4625 [r13:0, r14:0, stack:40]at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9, duringCall: false, rethrow: false]
              |0                                                                                               |1              
     locals:  |-                                                                                               |-              
     stack:   |vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]}  |stack:40|DWORD 
  at java.util.ArrayList.add(ArrayList.java:462) [bci: 7, duringCall: true, rethrow: false]
              |0                                                                                               |1                                                    
     locals:  |vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]}  |vobject:String:1{value=r14|QWORD[.],hash=int[0|0x0]} 
  at java.lang.String.split(String.java:2368) [bci: 246, duringCall: true, rethrow: false]
              |0  |1  |2               |3  |4  |5  |6  |7                                                                                               |8  |9 
     locals:  |-  |-  |stack:36|DWORD  |-  |-  |-  |-  |vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]}  |-  |-   <||@
  Comment 4626 2430 r11|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 4629 2432 rdx|DWORD = MOVE stack:96|DWORD moveKind: DWORD  <||@
  Comment 4633 2434 r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 4638 2436 rsi|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD  <||@
  Comment 4641 2438 r13|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 4646 2440 r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 4651 2442 r9|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 4656 2444 rbx|QWORD = MOVE stack:72|QWORD moveKind: QWORD  <||@
  Comment 4661 2446 rdi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 4661 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 4671 2448 JUMP ~[] destination: B246 -> B248  <||@
  Comment 4676 block B288 null  <||@
  Comment 4676 2792 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4676 2794 stack:64|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 4681 2796 r13|DWORD[.] = MOVE rsi|DWORD[.] moveKind: DWORD  <||@
  Comment 4684 2798 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 4684 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 4694 2800 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 4699 2802 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 4704 2804 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:9, 7, 246]  <||@
  Comment 4704 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 4709 [r13:0, r14:0, stack:40, stack:64]at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9, duringCall: false, rethrow: false]
              |0                                                                                               |1              
     locals:  |-                                                                                               |-              
     stack:   |vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]}  |stack:40|DWORD 
  at java.util.ArrayList.add(ArrayList.java:462) [bci: 7, duringCall: true, rethrow: false]
              |0                                                                                               |1                                                    
     locals:  |vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]}  |vobject:String:1{value=r14|QWORD[.],hash=int[0|0x0]} 
  at java.lang.String.split(String.java:2368) [bci: 246, duringCall: true, rethrow: false]
              |0  |1  |2               |3  |4  |5  |6  |7                                                                                               |8  |9 
     locals:  |-  |-  |stack:36|DWORD  |-  |-  |-  |-  |vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]}  |-  |-   <||@
  Comment 4710 2806 rdx|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 4713 2808 r11|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 4718 2810 rsi|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD  <||@
  Comment 4721 2812 r9|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 4726 2814 rbx|QWORD = MOVE stack:72|QWORD moveKind: QWORD  <||@
  Comment 4731 2816 rdi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 4731 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 4741 2818 xmm2|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null>  <||@
  Comment 4745 2820 xmm1|V128_DWORD[....] = L oc: SIMD<null,null,null,null>  <||@
  Comment 4749 2822 xmm0|V64_DWORD[..] = L oc: SIMD<null,null>  <||@
  Comment 4753 2824 JUMP ~[] destination: B288 -> B290  <||@
  Comment 4758 block B188 null  <||@
  Comment 4758 1800 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4758 1802 r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 4763 1804 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 4763 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 4773 1806 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 4778 1808 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 4783 1810 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:132]  <||@
  Comment 4783 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 4788 [r13:0, stack:40]at java.lang.String.split(String.java:2351) [bci: 132, duringCall: false, rethrow: false]
              |0                           |1  |2           |3               |4          |5  |6           |7                                                                                               |8  |9 
     locals:  |r13|QWORD[.]                |-  |int[0|0x0]  |stack:40|DWORD  |r14|DWORD  |-  |int[0|0x0]  |vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]}  |-  |- 
     stack:   |int[-1|0xffffffffffffffff]  |   |            |                |           |   |            |                                                                                                |   |    <||@
  Comment 4789 1812 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 4789 1814 JUMP ~[] destination: B188 -> B190  <||@
  Comment 4794 block B202 null  <||@
  Comment 4794 1942 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4794 1944 r10|DWORD = MOVE input: int[-575841|0xfffffffffff7369f]  <||@
  Comment 4800 1948 JUMP ~[] destination: B202 -> B203  <||@
  Comment 4800 block B203 null  <||@
  Comment 4800 1950 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 4800 1856 r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 4805 1952 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 4812 1954 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 4819 1956 DEOPT info [bci:132]  <||@
  Comment 4819 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 4824 [r13:0, stack:40]at java.lang.String.split(String.java:2351) [bci: 132, duringCall: false, rethrow: false]
              |0                           |1  |2           |3               |4          |5  |6           |7                                                                                               |8  |9 
     locals:  |r13|QWORD[.]                |-  |int[0|0x0]  |stack:40|DWORD  |r14|DWORD  |-  |int[0|0x0]  |vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]}  |-  |- 
     stack:   |int[-1|0xffffffffffffffff]  |   |            |                |           |   |            |                                                                                                |   |    <||@
  Comment 4825 block B61 null  <||@
  Comment 4825 552 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4825 554 stack:104|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 4830 556 r14|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 4833 558 r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 4838 560 r10|DWORD = MOVE input: int[-553569|0xfffffffffff78d9f]  <||@
  Comment 4844 562 JUMP ~[] destination: B61 -> B62  <||@
  Comment 4844 block B62 null  <||@
  Comment 4844 564 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 4844 566 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 4851 568 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 4858 570 DEOPT info [bci:65, 162]  <||@
  Comment 4858 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 4863 [r13:0, stack:40]at java.lang.String.substring(String.java:1969) [bci: 65, duringCall: false, rethrow: false]
              |0             |1          |2  |3               
     locals:  |r13|QWORD[.]  |r14|DWORD  |-  |stack:104|DWORD 
  at java.lang.String.split(String.java:2353) [bci: 162, duringCall: true, rethrow: false]
              |0                                                                                               |1  |2           |3               |4  |5               |6           |7                                                                                               |8  |9 
     locals:  |r13|QWORD[.]                                                                                    |-  |int[0|0x0]  |stack:40|DWORD  |-  |stack:96|DWORD  |int[0|0x0]  |vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]}  |-  |- 
     stack:   |vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]}  |   |            |                |   |                |            |                                                                                                |   |    <||@
  Comment 4864 block B192 null  <||@
  Comment 4864 1852 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4864 1854 r10|DWORD = MOVE input: int[-430867|0xfffffffffff96ced]  <||@
  Comment 4870 1858 JUMP ~[] destination: B192 -> B203  <||@
  Comment 4872 block B2 null  <||@
  Comment 4872 40 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4872 42 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 4882 44 r10|DWORD = MOVE input: int[-390163|0xfffffffffffa0bed]  <||@
  Comment 4888 46 JUMP ~[] destination: B2 -> B362  <||@
  Comment 4888 block B362 null  <||@
  Comment 4888 3508 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 4888 3510 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 4895 3512 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 4902 3514 DEOPT info [bci:0]  <||@
  Comment 4902 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 4907 [rdx:0, r13:0]at java.lang.String.split(String.java:2336) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3  |4  |5  |6  |7  |8  |9 
     locals:  |r13|QWORD[.]  |rdx|QWORD[.]  |r14|DWORD  |-  |-  |-  |-  |-  |-  |-   <||@
  Comment 4908 block B346 null  <||@
  Comment 4908 3348 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4908 3350 r11|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 4911 3352 r8|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 4914 3354 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1976730038]  <||@
  Comment 4914 {Object[d.a@1976730038]}  <||@
  Comment 4924 3356 r9|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 4927 3358 r10|DWORD = MOVE input: int[-440603|0xfffffffffff946e5]  <||@
  Comment 4933 3362 JUMP ~[] destination: B346 -> B351  <||@
  Comment 4933 block B351 null  <||@
  Comment 4933 3416 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 4933 3418 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 4940 3420 MOV (x: [r15|QWORD + 680], y: r9|QWORD[.]) size: QWORD  <||@
  Comment 4947 3422 DEOPT info [bci:261]  <||@
  Comment 4947 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 4952 [r8:0]at java.lang.String.split(String.java:2373) [bci: 261, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7                                                                               |8          |9 
     locals:  |-  |-  |-  |-  |-  |-  |-  |vobject:ArrayList:0{modCount=rdx|DWORD,size=rdx|DWORD,elementData=r8|QWORD[.]}  |r11|DWORD  |-   <||@
  Comment 4953 block B361 null  <||@
  Comment 4953 3500 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4953 3502 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 4963 3504 r10|DWORD = MOVE input: int[-414227|0xfffffffffff9aded]  <||@
  Comment 4969 3506 JUMP ~[] destination: B361 -> B362  <||@
  Comment 4971 block B293 null  <||@
  Comment 4971 2880 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4971 2882 r9|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 4981 2884 r10|DWORD = MOVE input: int[-431379|0xfffffffffff96aed]  <||@
  Comment 4987 2886 r11|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 4990 2888 r8|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 4993 2890 JUMP ~[] destination: B293 -> B351  <||@
  Comment 4995 block B350 null  <||@
  Comment 4995 3404 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4995 3406 r9|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 5005 3408 r10|DWORD = MOVE input: int[-431635|0xfffffffffff969ed]  <||@
  Comment 5011 3410 r11|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 5014 3412 r8|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 5017 3414 JUMP ~[] destination: B350 -> B351  <||@
  Comment 5019 block B239 null  <||@
  Comment 5019 2328 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5019 2330 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 5029 2332 r10|DWORD = MOVE input: int[-447003|0xfffffffffff92de5]  <||@
  Comment 5035 2334 JUMP ~[] destination: B239 -> B357  <||@
  Comment 5035 block B357 null  <||@
  Comment 5035 3468 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 5035 3470 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 5042 3472 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 5049 3474 DEOPT info [bci:9, 7, 246]  <||@
  Comment 5049 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 5054 [r14:0, stack:40]at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9, duringCall: false, rethrow: false]
              |0                                                                                               |1         
     locals:  |-                                                                                               |-         
     stack:   |vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]}  |r13|DWORD 
  at java.util.ArrayList.add(ArrayList.java:462) [bci: 7, duringCall: true, rethrow: false]
              |0                                                                                               |1                                                    
     locals:  |vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]}  |vobject:String:1{value=r14|QWORD[.],hash=int[0|0x0]} 
  at java.lang.String.split(String.java:2368) [bci: 246, duringCall: true, rethrow: false]
              |0  |1  |2               |3  |4  |5  |6  |7                                                                                               |8  |9 
     locals:  |-  |-  |stack:36|DWORD  |-  |-  |-  |-  |vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]}  |-  |-   <||@
  Comment 5055 block B240 null  <||@
  Comment 5055 2336 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5055 2338 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@358913875]  <||@
  Comment 5055 {Object[d.a@358913875]}  <||@
  Comment 5065 2340 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 5068 2342 r10|DWORD = MOVE input: int[-446268|0xfffffffffff930c4]  <||@
  Comment 5074 2346 JUMP ~[] destination: B240 -> B357  <||@
  Comment 5076 block B8 null  <||@
  Comment 5076 82 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5076 84 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 5086 86 r10|DWORD = MOVE input: int[-390675|0xfffffffffffa09ed]  <||@
  Comment 5092 88 JUMP ~[] destination: B8 -> B362  <||@
  Comment 5097 block B126 null  <||@
  Comment 5097 1200 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5097 1202 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 5107 1204 r10|DWORD = MOVE input: int[-563809|0xfffffffffff7659f]  <||@
  Comment 5113 1206 r14|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 5118 1208 rbx|DWORD = MOVE stack:96|DWORD moveKind: DWORD  <||@
  Comment 5122 1210 rcx|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 5126 1212 r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 5131 1214 JUMP ~[] destination: B126 -> B175  <||@
  Comment 5131 block B175 null  <||@
  Comment 5131 1708 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 5131 1710 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 5138 1712 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 5145 1714 DEOPT info [bci:9, 7, 165]  <||@
  Comment 5145 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 5150 [r8:0, r13:0, r14:0]at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9, duringCall: false, rethrow: false]
              |0                                                                               |1        
     locals:  |-                                                                               |-        
     stack:   |vobject:ArrayList:0{modCount=rdx|DWORD,size=rdx|DWORD,elementData=r8|QWORD[.]}  |r9|DWORD 
  at java.util.ArrayList.add(ArrayList.java:462) [bci: 7, duringCall: true, rethrow: false]
              |0                                                                               |1            
     locals:  |vobject:ArrayList:0{modCount=rdx|DWORD,size=rdx|DWORD,elementData=r8|QWORD[.]}  |r14|QWORD[.] 
  at java.lang.String.split(String.java:2353) [bci: 165, duringCall: true, rethrow: false]
              |0             |1  |2           |3          |4  |5          |6           |7                                                                               |8  |9 
     locals:  |r13|QWORD[.]  |-  |int[0|0x0]  |rcx|DWORD  |-  |rbx|DWORD  |int[0|0x0]  |vobject:ArrayList:0{modCount=rdx|DWORD,size=rdx|DWORD,elementData=r8|QWORD[.]}  |-  |-   <||@
  Comment 5151 block B181 null  <||@
  Comment 5151 1750 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5151 1744 r14|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 5154 1746 r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 5159 1752 JUMP ~[] destination: B181 -> B182  <||@
  Comment 5159 block B182 null  <||@
  Comment 5159 1754 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5159 1756 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@180539890]  <||@
  Comment 5159 {Object[d.a@180539890]}  <||@
  Comment 5169 1758 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 5172 1760 r10|DWORD = MOVE input: int[-421147|0xfffffffffff992e5]  <||@
  Comment 5178 1762 JUMP ~[] destination: B182 -> B183  <||@
  Comment 5178 block B183 null  <||@
  Comment 5178 1764 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 5178 1766 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 5185 1768 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 5192 1770 DEOPT info [bci:125]  <||@
  Comment 5192 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 5197 [r13:0, stack:40]at java.lang.String.split(String.java:2351) [bci: 125, duringCall: false, rethrow: false]
              |0             |1  |2           |3               |4          |5  |6           |7                                                                                               |8  |9 
     locals:  |r13|QWORD[.]  |-  |int[0|0x0]  |stack:40|DWORD  |r14|DWORD  |-  |int[0|0x0]  |vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]}  |-  |-   <||@
  Comment 5198 block B20 null  <||@
  Comment 5198 166 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5198 168 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 5208 170 r10|DWORD = MOVE input: int[-393747|0xfffffffffff9fded]  <||@
  Comment 5214 172 JUMP ~[] destination: B20 -> B362  <||@
  Comment 5219 block B18 null  <||@
  Comment 5219 152 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5219 154 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 5229 156 r10|DWORD = MOVE input: int[-394259|0xfffffffffff9fbed]  <||@
  Comment 5235 158 JUMP ~[] destination: B18 -> B362  <||@
  Comment 5240 block B347 null  <||@
  Comment 5240 3364 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5240 3366 r11|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 5243 3368 r8|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 5246 3370 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1144871021]  <||@
  Comment 5246 {Object[d.a@1144871021]}  <||@
  Comment 5256 3372 r9|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 5259 3374 r10|DWORD = MOVE input: int[-439827|0xfffffffffff949ed]  <||@
  Comment 5265 3378 JUMP ~[] destination: B347 -> B351  <||@
  Comment 5270 block B14 null  <||@
  Comment 5270 124 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5270 126 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 5280 128 r10|DWORD = MOVE input: int[-393235|0xfffffffffff9ffed]  <||@
  Comment 5286 130 JUMP ~[] destination: B14 -> B362  <||@
  Comment 5291 block B341 null  <||@
  Comment 5291 3302 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5291 3304 rcx|DWORD = MOVE input: int[-445971|0xfffffffffff931ed]  <||@
  Comment 5296 3306 JUMP ~[] destination: B341 -> B342  <||@
  Comment 5296 block B342 null  <||@
  Comment 5296 3308 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 5296 3310 MOV (x: [r15|QWORD + 668], y: rcx|DWORD) size: DWORD  <||@
  Comment 5303 3312 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 5310 3314 DEOPT info [bci:42, 307]  <||@
  Comment 5310 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 5315 [rax:0, r8:0]at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42, duringCall: false, rethrow: false]
              |0  |1             |2  |3             |4                                                                                                                                                                                                                                                                                                                                                                                                |5         
     locals:  |-  |rax|QWORD[.]  |-  |rax|QWORD[.]  |vobject:ArrayList$SubList$1:0{cursor=r10|DWORD,lastRet=r9|DWORD,expectedModCount=stack:100|DWORD,val$index=int[0|0x0],val$offset=int[0|0x0],this$1=vobject:ArrayList$SubList:1{modCount=stack:100|DWORD,parentOffset=int[0|0x0],offset=int[0|0x0],size=r11|DWORD,parent=vobject:ArrayList:2{modCount=stack:100|DWORD,size=stack:100|DWORD,elementData=r8|QWORD[.]},this$0=vobject:ArrayList:2}}  |r10|DWORD 
  at java.lang.String.split(String.java:2378) [bci: 307, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7  |8  |9 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-   <||@
  Comment 5316 block B16 null  <||@
  Comment 5316 138 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5316 140 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 5326 142 r10|DWORD = MOVE input: int[-392723|0xfffffffffffa01ed]  <||@
  Comment 5332 144 JUMP ~[] destination: B16 -> B362  <||@
  Comment 5337 block B244 null  <||@
  Comment 5337 2384 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5337 2386 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 5347 2388 r10|DWORD = MOVE input: int[-585825|0xfffffffffff70f9f]  <||@
  Comment 5353 2390 JUMP ~[] destination: B244 -> B357  <||@
  Comment 5358 block B170 null  <||@
  Comment 5358 1634 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5358 1636 stack:104|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 5363 1638 r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 5368 1640 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@358913875]  <||@
  Comment 5368 {Object[d.a@358913875]}  <||@
  Comment 5378 1642 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 5381 1644 r10|DWORD = MOVE input: int[-427836|0xfffffffffff978c4]  <||@
  Comment 5387 1648 r14|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 5392 1650 rbx|DWORD = MOVE stack:96|DWORD moveKind: DWORD  <||@
  Comment 5396 1652 r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 5401 1654 rdx|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 5405 1656 rcx|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 5409 1658 JUMP ~[] destination: B170 -> B175  <||@
  Comment 5414 block B10 null  <||@
  Comment 5414 96 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5414 98 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 5424 100 r10|DWORD = MOVE input: int[-392211|0xfffffffffffa03ed]  <||@
  Comment 5430 102 JUMP ~[] destination: B10 -> B362  <||@
  Comment 5435 block B332 null  <||@
  Comment 5435 3240 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5435 3242 rcx|DWORD = MOVE input: int[-439315|0xfffffffffff94bed]  <||@
  Comment 5440 3244 JUMP ~[] destination: B332 -> B342  <||@
  Comment 5445 block B352 null  <||@
  Comment 5445 3424 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5445 3426 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@358913875]  <||@
  Comment 5445 {Object[d.a@358913875]}  <||@
  Comment 5455 3428 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 5458 3430 r10|DWORD = MOVE input: int[-449852|0xfffffffffff922c4]  <||@
  Comment 5464 3432 r13|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 5469 3434 JUMP ~[] destination: B352 -> B357  <||@
  Comment 5474 block B356 null  <||@
  Comment 5474 3460 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5474 3462 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 5484 3464 r10|DWORD = MOVE input: int[-449299|0xfffffffffff924ed]  <||@
  Comment 5490 3466 JUMP ~[] destination: B356 -> B357  <||@
  Comment 5495 block B355 null  <||@
  Comment 5495 3452 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5495 3454 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 5505 3456 r10|DWORD = MOVE input: int[-450331|0xfffffffffff920e5]  <||@
  Comment 5511 3458 JUMP ~[] destination: B355 -> B357  <||@
  Comment 5516 block B348 null  <||@
  Comment 5516 3380 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5516 3382 r9|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 5526 3384 r10|DWORD = MOVE input: int[-435491|0xfffffffffff95add]  <||@
  Comment 5532 3386 r11|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 5535 3388 r8|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 5538 3390 JUMP ~[] destination: B348 -> B351  <||@
  Comment 5543 block B174 null  <||@
  Comment 5543 1692 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5543 1694 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 5553 1696 r10|DWORD = MOVE input: int[-427283|0xfffffffffff97aed]  <||@
  Comment 5559 1698 r14|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 5564 1700 rbx|DWORD = MOVE stack:96|DWORD moveKind: DWORD  <||@
  Comment 5568 1702 rcx|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 5572 1704 r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 5577 1706 JUMP ~[] destination: B174 -> B175  <||@
  Comment 5582 block B360 null  <||@
  Comment 5582 3488 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5582 3490 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1154356070]  <||@
  Comment 5582 {Object[d.a@1154356070]}  <||@
  Comment 5592 3492 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 5595 3494 r10|DWORD = MOVE input: int[-460051|0xfffffffffff8faed]  <||@
  Comment 5601 3498 JUMP ~[] destination: B360 -> B362  <||@
  Comment 5606 block B349 null  <||@
  Comment 5606 3392 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5606 3394 r9|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 5616 3396 r10|DWORD = MOVE input: int[-432667|0xfffffffffff965e5]  <||@
  Comment 5622 3398 r11|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 5625 3400 r8|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 5628 3402 JUMP ~[] destination: B349 -> B351  <||@
  Comment 5633 block B25 null  <||@
  Comment 5633 200 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5633 202 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 5643 204 r10|DWORD = MOVE input: int[-417555|0xfffffffffff9a0ed]  <||@
  Comment 5649 206 JUMP ~[] destination: B25 -> B362  <||@
  Comment 5654 block B52 null  <||@
  Comment 5654 448 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5654 450 r14|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 5657 452 r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 5662 454 MOV [r15|QWORD + 668] y: -430099 size: DWORD  <||@
  Comment 5673 456 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 5680 458 DEOPT info [bci:65, 162]  <||@
  Comment 5680 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 5685 [r13:0, stack:40]at java.lang.String.substring(String.java:1969) [bci: 65, duringCall: false, rethrow: false]
              |0             |1          |2  |3          
     locals:  |r13|QWORD[.]  |r14|DWORD  |-  |int[0|0x0] 
  at java.lang.String.split(String.java:2353) [bci: 162, duringCall: true, rethrow: false]
              |0                                                                                               |1  |2           |3               |4  |5               |6           |7                                                                                               |8  |9 
     locals:  |r13|QWORD[.]                                                                                    |-  |int[0|0x0]  |stack:40|DWORD  |-  |stack:96|DWORD  |int[0|0x0]  |vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]}  |-  |- 
     stack:   |vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]}  |   |            |                |   |                |            |                                                                                                |   |    <||@
  Comment 5686 block B4 null  <||@
  Comment 5686 54 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5686 56 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 5696 58 r10|DWORD = MOVE input: int[-389651|0xfffffffffffa0ded]  <||@
  Comment 5702 60 JUMP ~[] destination: B4 -> B362  <||@
  Comment 5707 block B41 null  <||@
  Comment 5707 352 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5707 354 stack:96|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 5712 356 r14|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 5715 358 r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 5720 360 r10|DWORD = MOVE input: int[-423443|0xfffffffffff989ed]  <||@
  Comment 5726 362 JUMP ~[] destination: B41 -> B42  <||@
  Comment 5726 block B42 null  <||@
  Comment 5726 364 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 5726 366 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 5733 368 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 5740 370 DEOPT info [bci:37, 129]  <||@
  Comment 5740 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 5745 [rsi:0, r13:0, stack:40]at java.lang.String.indexOf(String.java:1558) [bci: 37, duringCall: false, rethrow: false]
              |0  |1               |2  |3         |4             |5              
     locals:  |-  |stack:40|DWORD  |-  |r8|DWORD  |rsi|QWORD[.]  |stack:96|DWORD 
  at java.lang.String.split(String.java:2351) [bci: 129, duringCall: true, rethrow: false]
              |0             |1  |2           |3               |4          |5  |6           |7                                                                                               |8  |9 
     locals:  |r13|QWORD[.]  |-  |int[0|0x0]  |stack:40|DWORD  |r14|DWORD  |-  |int[0|0x0]  |vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]}  |-  |-   <||@
  Comment 5746 block B122 null  <||@
  Comment 5746 1136 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5746 1138 stack:104|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 5751 1140 stack:112|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 5756 1142 r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 5761 1144 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@358913875]  <||@
  Comment 5761 {Object[d.a@358913875]}  <||@
  Comment 5771 1146 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 5774 1148 r10|DWORD = MOVE input: int[-424252|0xfffffffffff986c4]  <||@
  Comment 5780 1154 rbx|DWORD = MOVE stack:96|DWORD moveKind: DWORD  <||@
  Comment 5784 1158 rdx|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 5788 1160 rcx|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 5792 1162 JUMP ~[] destination: B122 -> B175  <||@
  Comment 5797 block B12 null  <||@
  Comment 5797 110 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5797 112 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 5807 114 r10|DWORD = MOVE input: int[-391699|0xfffffffffffa05ed]  <||@
  Comment 5813 116 JUMP ~[] destination: B12 -> B362  <||@
  Comment 5818 block B59 null  <||@
  Comment 5818 534 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5818 536 stack:104|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 5823 538 r14|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 5826 540 r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 5831 542 r10|DWORD = MOVE input: int[-430355|0xfffffffffff96eed]  <||@
  Comment 5837 544 JUMP ~[] destination: B59 -> B62  <||@
  Comment 5842 block B195 null  <||@
  Comment 5842 1876 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5842 1878 r10|DWORD = MOVE input: int[-452627|0xfffffffffff917ed]  <||@
  Comment 5848 1882 JUMP ~[] destination: B195 -> B203  <||@
  Comment 5853 block B173 null  <||@
  Comment 5853 1676 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5853 1678 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 5863 1680 r10|DWORD = MOVE input: int[-428315|0xfffffffffff976e5]  <||@
  Comment 5869 1682 r14|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 5874 1684 rbx|DWORD = MOVE stack:96|DWORD moveKind: DWORD  <||@
  Comment 5878 1686 rcx|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 5882 1688 r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 5887 1690 JUMP ~[] destination: B173 -> B175  <||@
  Comment 5892 block B39 null  <||@
  Comment 5892 332 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5892 334 stack:96|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 5897 336 r14|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 5900 338 r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 5905 340 r10|DWORD = MOVE input: int[-423187|0xfffffffffff98aed]  <||@
  Comment 5911 342 JUMP ~[] destination: B39 -> B42  <||@
  Comment 5916 block B306 null  <||@
  Comment 5916 2974 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5916 2976 r9|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 5926 2978 r10|DWORD = MOVE input: int[-438803|0xfffffffffff94ded]  <||@
  Comment 5932 2980 r11|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 5935 2982 r8|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 5938 2984 JUMP ~[] destination: B306 -> B351  <||@
  Comment 5943 block B338 null  <||@
  Comment 5943 3286 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5943 3288 rcx|DWORD = MOVE input: int[-445739|0xfffffffffff932d5]  <||@
  Comment 5948 3290 JUMP ~[] destination: B338 -> B342  <||@
  Comment 5953 block B345 null  <||@
  Comment 5953 3332 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5953 3334 r11|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 5956 3336 r8|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 5959 3338 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1976730038]  <||@
  Comment 5959 {Object[d.a@1976730038]}  <||@
  Comment 5969 3340 r9|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 5972 3342 r10|DWORD = MOVE input: int[-442907|0xfffffffffff93de5]  <||@
  Comment 5978 3346 JUMP ~[] destination: B345 -> B351  <||@
  Comment 5983 block B6 null  <||@
  Comment 5983 68 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5983 70 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 5993 72 r10|DWORD = MOVE input: int[-391187|0xfffffffffffa07ed]  <||@
  Comment 5999 74 JUMP ~[] destination: B6 -> B362  <||@
  Comment 6004 block B121 null  <||@
  Comment 6004 1120 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6004 1122 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 6014 1124 r10|DWORD = MOVE input: int[-424987|0xfffffffffff983e5]  <||@
  Comment 6020 1126 rbx|DWORD = MOVE stack:96|DWORD moveKind: DWORD  <||@
  Comment 6024 1128 rdx|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 6028 1130 rcx|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 6032 1132 r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 6037 1134 JUMP ~[] destination: B121 -> B175  <||@
  Comment 6042 block B359 null  <||@
  Comment 6042 3480 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6042 3482 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 6052 3484 r10|DWORD = MOVE input: int[-417811|0xfffffffffff99fed]  <||@
  Comment 6058 3486 JUMP ~[] destination: B359 -> B362  <||@
  Comment 6063 block B29 null  <||@
  Comment 6063 252 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6063 254 r14|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 6066 256 r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 6071 258 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 6081 260 r10|DWORD = MOVE input: int[-420371|0xfffffffffff995ed]  <||@
  Comment 6087 262 JUMP ~[] destination: B29 -> B183  <||@
  Comment 6092 block B22 null  <||@
  Comment 6092 180 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6092 182 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 6102 184 r10|DWORD = MOVE input: int[-364819|0xfffffffffffa6eed]  <||@
  Comment 6108 186 JUMP ~[] destination: B22 -> B362  <||@
  Comment 6113 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 6113 4  <||@
  Comment 6119 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 6119 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-9641[java.lang.String.split(String, int)]"
  method "HotSpotCompilation-9641[java.lang.String.split(String, int)]"
  date 1527005217843
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 107c000a0   <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7332283d slotKind: QWORD  <||@
  Comment 48 6 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 51 8 stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 56 10 r14|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 59 12 stack:36|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 64 14 rsi|DWORD[.] = MOV [rdx|QWORD[.] + 12] size: DWORD state [bci:0]  <||@
  Comment 64 [rdx:0, r13:0, stack:96]at java.lang.String.split(String.java:2336) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3  |4  |5  |6  |7  |8  |9 
     locals:  |r13|QWORD[.]  |rdx|QWORD[.]  |r14|DWORD  |-  |-  |-  |-  |-  |-  |-   <||@
  Comment 64 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 67 16 rcx|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 67 [rdx:0, rsi:0, r13:0, stack:96]at java.lang.String.split(String.java:2336) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3  |4  |5  |6  |7  |8  |9 
     locals:  |r13|QWORD[.]  |rdx|QWORD[.]  |r14|DWORD  |-  |-  |-  |-  |-  |-  |-   <||@
  Comment 67 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 74 18 xmm0|V64_DWORD[..] = L oc: SIMD<null,null>  <||@
  Comment 78 20 xmm1|V128_DWORD[....] = L oc: SIMD<null,null,null,null>  <||@
  Comment 82 22 xmm2|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null>  <||@
  Comment 86 24 r10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 86 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 96 26 CMP rcx|DWORD y: 1 size: DWORD  <||@
  Comment 99 28 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B361  <||@
  Comment 105 block B1 null  <||@
  Comment 105 30 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 105 32 r11|DWORD = MOVZX [rsi|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 114 34 stack:40|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 119 36 CMP r11|DWORD y: 36 size: DWORD  <||@
  Comment 123 38 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3  <||@
  Comment 129 block B3 null  <||@
  Comment 129 48 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 129 50 CMP r11|DWORD y: 46 size: DWORD  <||@
  Comment 133 52 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5  <||@
  Comment 139 block B5 null  <||@
  Comment 139 62 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 139 64 CMP r11|DWORD y: 40 size: DWORD  <||@
  Comment 143 66 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7  <||@
  Comment 149 block B7 null  <||@
  Comment 149 76 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 149 78 CMP r11|DWORD y: 124 size: DWORD  <||@
  Comment 153 80 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9  <||@
  Comment 159 block B9 null  <||@
  Comment 159 90 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 159 92 CMP r11|DWORD y: 91 size: DWORD  <||@
  Comment 163 94 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11  <||@
  Comment 169 block B11 null  <||@
  Comment 169 104 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 169 106 CMP r11|DWORD y: 41 size: DWORD  <||@
  Comment 173 108 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13  <||@
  Comment 179 block B13 null  <||@
  Comment 179 118 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 179 120 CMP r11|DWORD y: 94 size: DWORD  <||@
  Comment 183 122 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15  <||@
  Comment 189 block B15 null  <||@
  Comment 189 132 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 189 134 CMP r11|DWORD y: 123 size: DWORD  <||@
  Comment 193 136 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17  <||@
  Comment 199 block B17 null  <||@
  Comment 199 146 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 199 148 CMP r11|DWORD y: 42 size: DWORD  <||@
  Comment 203 150 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19  <||@
  Comment 209 block B19 null  <||@
  Comment 209 160 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 209 162 CMP r11|DWORD y: 63 size: DWORD  <||@
  Comment 213 164 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21  <||@
  Comment 219 block B21 null  <||@
  Comment 219 174 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 219 176 CMP r11|DWORD y: 43 size: DWORD  <||@
  Comment 223 178 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23  <||@
  Comment 229 block B23 null  <||@
  Comment 229 188 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 229 190 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 232 192 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B360  <||@
  Comment 238 block B24 null  <||@
  Comment 238 194 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 238 196 CMP r11|DWORD y: 92 size: DWORD  <||@
  Comment 242 198 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26  <||@
  Comment 248 block B26 null  <||@
  Comment 248 208 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 248 210 CMP r11|DWORD y: 55296 size: DWORD  <||@
  Comment 255 212 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B26 -> B27 falseDestination: B26 -> B359  <||@
  Comment 261 block B27 null  <||@
  Comment 261 214 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 261 216 rsi|DWORD[.] = MOV [r13|QWORD[.] + 12] size: DWORD  <||@
  Comment 265 218 r8|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 265 [rdx:0, rsi:0, r13:0, stack:96]at java.lang.String.split(String.java:2336) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3  |4  |5  |6  |7  |8  |9 
     locals:  |r13|QWORD[.]  |rdx|QWORD[.]  |r14|DWORD  |-  |-  |-  |-  |-  |-  |-   <||@
  Comment 265 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 273 220 stack:44|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 278 222 r9|QWORD = MOV r8|DWORD size: DWORD  <||@
  Comment 281 224 stack:56|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 286 226 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@120cc8dc encoding: base: 0 shift: 3  <||@
  Comment 290 228 stack:64|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 295 230 rbx|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 305 232 stack:72|QWORD = MOVE rbx|QWORD moveKind: QWORD  <||@
  Comment 310 234 rdi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Object[0]{}]  <||@
  Comment 310 {Object[Object[0]{}]}  <||@
  Comment 320 236 stack:80|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 325 238 stack:88|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 330 240 stack:92|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 338 242 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 344 244 JUMP ~[] destination: B27 -> B28  <||@
  Comment 344 block B28 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 344 246 [] = LABEL numbPhis: 3 align: true label: ?  <||@
  Comment 352 248 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 355 250 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30  <||@
  Comment 361 block B30 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 361 264 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 361 266 rdx|DWORD = SUB (x: r8|DWORD, ~y: r10|DWORD) size: DWORD  <||@
  Comment 367 268 CMP (x: r8|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 370 270 BRANCH trueDestinationProbability: 0.7686826237895121 condition: > trueDestination: B30 -> B31 falseDestination: B30 -> B185  <||@
  Comment 376 block B31 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 376 272 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 376 274 r14|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 379 276 r13|QWORD = MOVSXD rdx|DWORD size: QWORD  <||@
  Comment 382 278 r13|QWORD = DEC r13|QWORD size: QWORD  <||@
  Comment 385 280 r14|QWORD = ADD (x: r14|QWORD, y: r13|QWORD) size: QWORD  <||@
  Comment 388 282 CMP (x: r9|QWORD, y: r14|QWORD) size: QWORD  <||@
  Comment 391 284 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B181  <||@
  Comment 397 block B32 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 397 286 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 397 288 CMP (x: r8|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 400 290 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B32 -> B33 falseDestination: B32 -> B181  <||@
  Comment 406 block B33 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 406 292 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 406 294 r13|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 409 296 JUMP ~[] destination: B33 -> B34  <||@
  Comment 414 block B35 loop 1 depth 2 outer 0 header:290|LoopBegin  <||@
  Comment 414 304 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 416 306 r14|DWORD = MOVZX [rsi|QWORD[.] + r13|DWORD * 2 + 16] size: DWORD  <||@
  Comment 422 308 CMP (x: r14|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 425 310 BRANCH trueDestinationProbability: 0.0015918580565381646 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B177  <||@
  Comment 431 block B177 loop 1 depth 2 outer 0 header:290|LoopBegin  <||@
  Comment 431 1720 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 431 1722 r13|DWORD = INC r13|DWORD size: DWORD  <||@
  Comment 434 1724 JUMP ~[] destination: B177 -> B34  <||@
  Comment 434 block B34 loop 1 depth 2 outer 0 header:290|LoopBegin  <||@
  Comment 434 298 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 434 300 CMP (x: r8|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 437 302 BRANCH trueDestinationProbability: 0.9277482167917486 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B185  <||@
  Comment 444 block B36 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 444 312 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 444 314 CMP r13|DWORD y: -1 size: DWORD  <||@
  Comment 448 316 BRANCH trueDestinationProbability: 0.315317887137174 condition: = trueDestination: B36 -> B185 falseDestination: B36 -> B38  <||@
  Comment 454 block B38 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 454 326 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 454 328 CMP (x: r13|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 457 330 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40  <||@
  Comment 463 block B40 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 463 344 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 463 346 r14|DWORD = SUB (x: r13|DWORD, ~y: r10|DWORD) size: DWORD  <||@
  Comment 469 348 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 472 350 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B40 -> B41 falseDestination: B40 -> B43  <||@
  Comment 478 block B43 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 478 372 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 478 374 stack:100|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 483 376 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 486 378 BRANCH trueDestinationProbability: 0.18334585698550698 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B49  <||@
  Comment 492 block B49 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 492 424 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 492 426 CMP r14|DWORD y: 1 size: DWORD  <||@
  Comment 496 428 BRANCH trueDestinationProbability: 0.09284041465770032 condition: < trueDestination: B49 -> B51 falseDestination: B49 -> B58  <||@
  Comment 502 block B58 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 502 526 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 502 420 stack:96|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 507 528 r13|DWORD = SUB (x: r8|DWORD, ~y: r14|DWORD) size: DWORD  <||@
  Comment 513 530 CMP (x: r10|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 516 532 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B58 -> B59 falseDestination: B58 -> B60  <||@
  Comment 522 block B60 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 522 546 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 522 548 CMP (x: r10|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 525 550 BRANCH trueDestinationProbability: 9.999999999998899E-5 condition: > trueDestination: B60 -> B61 falseDestination: B60 -> B63  <||@
  Comment 531 block B63 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 531 572 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 531 574 r13|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 535 576 r10|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 539 578 CMP r14|DWORD y: 16777215 size: DWORD  <||@
  Comment 546 580 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B63 -> B64 falseDestination: B63 -> B68  <||@
  Comment 552 block B64 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 552 582 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 552 584 r11|DWORD = SHL r14|DWORD size: DWORD  <||@
  Comment 558 586 r11|DWORD = LEA [r11|DWORD + 23] size: DWORD  <||@
  Comment 562 588 r11|DWORD = AND r11|DWORD y: -8 size: DWORD  <||@
  Comment 566 590 r11|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 569 592 r8|QWORD = ADD (x: r11|QWORD, y: r13|QWORD) size: QWORD  <||@
  Comment 575 594 CMP (x: r8|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 578 596 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B64 -> B68 falseDestination: B64 -> B66  <||@
  Comment 584 block B66 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 584 604 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 584 606 MOV (x: [r15|QWORD + 96], y: r8|QWORD) size: QWORD  <||@
  Comment 588 608 AMD64PREFETCH ~[r11|QWORD + r13|QWORD * 1 + 192] instr: 0  <||@
  Comment 597 610 AMD64PREFETCH ~[r11|QWORD + r13|QWORD * 1 + 256] instr: 0  <||@
  Comment 606 612 AMD64PREFETCH ~[r11|QWORD + r13|QWORD * 1 + 320] instr: 0  <||@
  Comment 615 614 AMD64PREFETCH ~[r11|QWORD + r13|QWORD * 1 + 384] instr: 0  <||@
  Comment 624 616 MOV (x: [r13|QWORD + 12], y: r14|DWORD) size: DWORD  <||@
  Comment 628 618 MOV [r13|QWORD] y: 1 size: QWORD  <||@
  Comment 636 620 MOV [r13|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 636 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 644 622 r13|QWORD[.] = MOVE r13|QWORD moveKind: QWORD  <||@
  Comment 644 624 rax|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 647 626 r13|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 650 628 JUMP ~[] destination: B66 -> B69  <||@
  Comment 650 block B69 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 650 650 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 650 652 CMP (x: r14|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 653 654 rsi|DWORD = CMOVE (falseValue: r14|DWORD, ~trueValue: r13|DWORD) condition: >  <||@
  Comment 660 656 rsi|QWORD = MOVSXD rsi|DWORD size: QWORD  <||@
  Comment 663 658 CMP rsi|QWORD y: 1 size: QWORD  <||@
  Comment 667 664 r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 672 660 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B69 -> B88 falseDestination: B69 -> B71  <||@
  Comment 678 block B71 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 678 668 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 678 672 rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 682 674 rcx|QWORD = MOVSXD stack:100|DWORD size: QWORD  <||@
  Comment 687 676 rcx|QWORD[.] = LEA [r13|QWORD[.] + rcx|QWORD * 2 + 16] size: QWORD  <||@
  Comment 692 678 r10|QWORD = LEA [rsi|QWORD - 16] size: QWORD  <||@
  Comment 696 680 TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 699 686 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 706 682 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B71 -> B76 falseDestination: B71 -> B74  <||@
  Comment 712 block B76 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 712 712 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 712 714 r10|QWORD = LEA [rsi|QWORD - 8] size: QWORD  <||@
  Comment 716 716 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 719 718 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B76 -> B79 falseDestination: B76 -> B78  <||@
  Comment 725 block B78 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 725 724 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 725 726 xmm0|V128_WORD = H [rcx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVDQU  <||@
  Comment 731 728 J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 737 730 r10|QWORD = LEA [r11|QWORD + 8] size: QWORD  <||@
  Comment 741 732 r11|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 744 734 JUMP ~[] destination: B78 -> B79  <||@
  Comment 744 block B79 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 744 736 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 744 738 r10|QWORD = LEA [rsi|QWORD - 4] size: QWORD  <||@
  Comment 748 740 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 751 742 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B79 -> B82 falseDestination: B79 -> B81  <||@
  Comment 757 block B81 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 757 748 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 757 750 xmm0|V64_WORD = H [rcx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVQ  <||@
  Comment 763 752 J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 769 754 r10|QWORD = LEA [r11|QWORD + 4] size: QWORD  <||@
  Comment 773 756 r11|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 776 758 JUMP ~[] destination: B81 -> B82  <||@
  Comment 776 block B82 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 776 760 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 776 762 r10|QWORD = LEA [rsi|QWORD - 2] size: QWORD  <||@
  Comment 780 764 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 783 766 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B82 -> B85 falseDestination: B82 -> B84  <||@
  Comment 789 block B84 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 789 772 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 789 774 xmm0|V32_WORD = H [rcx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVD  <||@
  Comment 795 776 J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 801 778 r10|QWORD = LEA [r11|QWORD + 2] size: QWORD  <||@
  Comment 805 780 r11|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 808 782 JUMP ~[] destination: B84 -> B85  <||@
  Comment 808 block B85 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 808 784 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 808 786 r10|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 814 788 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 817 790 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B85 -> B88 falseDestination: B85 -> B87  <||@
  Comment 823 block B87 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 823 796 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 823 798 rcx|DWORD = MOVSX [rcx|QWORD[.] + r11|QWORD * 2] size: DWORD  <||@
  Comment 828 800 MOV (x: [rdx|QWORD[.] + r11|QWORD * 2], y: rcx|DWORD) size: WORD  <||@
  Comment 833 802 JUMP ~[] destination: B87 -> B88  <||@
  Comment 833 block B88 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 833 804 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 833 806 rdx|QWORD = MOVSXD r14|DWORD size: QWORD  <||@
  Comment 836 808 CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 839 810 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B88 -> B89 falseDestination: B88 -> B108  <||@
  Comment 845 block B108 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 845 950 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 845 952 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 849 954 rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD  <||@
  Comment 853 956 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 857 958 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B108 -> B109 falseDestination: B108 -> B110  <||@
  Comment 863 block B110 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 863 988 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 863 990 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 867 992 AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0  <||@
  Comment 874 994 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 874 998 JUMP ~[] destination: B110 -> B111  <||@
  Comment 874 block B111 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 874 1000 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 874 996 r10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 874 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 884 1002 rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 887 1004 rcx|QWORD = MOV [r10|QWORD + 168] size: QWORD  <||@
  Comment 894 1006 MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD  <||@
  Comment 897 1008 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 897 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 904 1010 rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@120cc8dc encoding: base: 0 shift: 3  <||@
  Comment 908 1012 MOV (x: [rsi|QWORD[*] + 12], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 911 1014 MOV (x: [rsi|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 915 1016 r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 918 1018 rdi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 923 1020 JUMP ~[] destination: B111 -> B112  <||@
  Comment 923 block B112 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 923 1022 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 923 1024 r11|DWORD = INC stack:92|DWORD size: DWORD  <||@
  Comment 931 1026 CMP (x: rdi|QWORD[.], y: stack:88|QWORD[.]) size: QWORD  <||@
  Comment 936 1028 BRANCH trueDestinationProbability: 0.2066504369952622 condition: = trueDestination: B112 -> B113 falseDestination: B112 -> B116  <||@
  Comment 942 block B116 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 942 1052 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 942 1054 r9|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 945 1058 JUMP ~[] destination: B116 -> B117  <||@
  Comment 945 block B117 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 945 1060 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 945 1056 r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 950 1062 rbx|DWORD = MOV [r8|QWORD[.] + 12] size: DWORD  <||@
  Comment 954 1064 rcx|DWORD = MOV [r8|QWORD[.] + 8] size: DWORD  <||@
  Comment 958 1066 rsi|DWORD = SUB (x: r9|DWORD, ~y: rbx|DWORD) size: DWORD  <||@
  Comment 963 1068 rax|DWORD[.] = COMPRESSPOINTER (input: r14|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@120cc8dc encoding: base: 0 shift: 3  <||@
  Comment 970 1070 rbp|DWORD = INC stack:96|DWORD size: DWORD  <||@
  Comment 976 1072 CMP rsi|DWORD y: 1 size: DWORD  <||@
  Comment 979 1074 BRANCH trueDestinationProbability: 0.7754412955005789 condition: < trueDestination: B117 -> B118 falseDestination: B117 -> B123  <||@
  Comment 985 block B118 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 985 1076 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 985 1078 CMP rcx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}  <||@
  Comment 985 {meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}}  <||@
  Comment 991 1080 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B118 -> B119 falseDestination: B118 -> B122  <||@
  Comment 997 block B119 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 997 1082 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 997 1084 CMP (x: rbx|DWORD, y: stack:92|DWORD) size: DWORD  <||@
  Comment 1001 1086 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B119 -> B120 falseDestination: B119 -> B121  <||@
  Comment 1007 block B120 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 1007 1088 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1007 1090 rdx|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 1011 1092 rbx|QWORD = MOVE stack:72|QWORD moveKind: QWORD  <||@
  Comment 1016 1094 MOV (x: [r8|QWORD[.] + rdx|DWORD * 4 + 16], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 1021 1096 rsi|QWORD[.] = LEA [r8|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD  <||@
  Comment 1026 1098 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1030 1100 MOVB (x: [rsi|QWORD[*] + rbx|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1034 1102 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:27, 165]  <||@
  Comment 1034 [r8:0, r13:0, r14:0, stack:48, stack:64, stack:96]at java.util.ArrayList.add(ArrayList.java:464) [bci: 27, duringCall: false, rethrow: false]
              |0                                                                               |1            
     locals:  |vobject:ArrayList:0{modCount=r11|DWORD,size=r11|DWORD,elementData=r8|QWORD[.]}  |r14|QWORD[.] 
  at java.lang.String.split(String.java:2353) [bci: 165, duringCall: true, rethrow: false]
              |0                  |1  |2           |3               |4  |5               |6           |7                                                                               |8  |9 
     locals:  |stack:32|QWORD[.]  |-  |int[0|0x0]  |stack:40|DWORD  |-  |stack:96|DWORD  |int[0|0x0]  |vobject:ArrayList:0{modCount=r11|DWORD,size=r11|DWORD,elementData=r8|QWORD[.]}  |-  |-   <||@
  Comment 1034 {infopoint: SAFEPOINT}  <||@
  Comment 1034 11  <||@
  Comment 1040 1104 stack:88|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1045 1106 stack:92|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1050 1108 r10|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 1053 1110 rsi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1056 1112 r9|QWORD = MOVE stack:56|QWORD moveKind: QWORD  <||@
  Comment 1061 1114 r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1066 1116 r11|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1071 1118 JUMP ~[] destination: B120 -> B28  <||@
  Comment 1076 block B89 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 1076 812 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1076 814 rcx|QWORD[.] = LEA [rax|QWORD[.] + rsi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 1081 816 rdx|QWORD = SUB (x: rdx|QWORD, ~y: rsi|QWORD) size: QWORD  <||@
  Comment 1084 818 rsi|QWORD = LEA [rdx|QWORD - 16] size: QWORD  <||@
  Comment 1088 820 TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1091 822 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B89 -> B90 falseDestination: B89 -> B91  <||@
  Comment 1097 block B90 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 1097 824 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1097 826 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1104 828 JUMP ~[] destination: B90 -> B94  <||@
  Comment 1104 block B94 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 1104 852 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1104 854 rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD  <||@
  Comment 1108 856 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1111 858 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B94 -> B97 falseDestination: B94 -> B96  <||@
  Comment 1117 block B96 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 1117 864 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1117 866 xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 1121 868 J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 1127 870 rsi|QWORD = LEA [r10|QWORD + 8] size: QWORD  <||@
  Comment 1131 872 r10|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1134 874 JUMP ~[] destination: B96 -> B97  <||@
  Comment 1134 block B97 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 1134 876 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1134 878 rsi|QWORD = LEA [rdx|QWORD - 4] size: QWORD  <||@
  Comment 1138 880 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1141 882 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B97 -> B100 falseDestination: B97 -> B99  <||@
  Comment 1147 block B99 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 1147 888 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1147 890 xmm0|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 1151 892 J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 1157 894 rsi|QWORD = LEA [r10|QWORD + 4] size: QWORD  <||@
  Comment 1161 896 r10|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1164 898 JUMP ~[] destination: B99 -> B100  <||@
  Comment 1164 block B100 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 1164 900 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1164 902 rsi|QWORD = LEA [rdx|QWORD - 2] size: QWORD  <||@
  Comment 1168 904 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1171 906 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B100 -> B103 falseDestination: B100 -> B102  <||@
  Comment 1177 block B102 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 1177 912 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1177 914 xmm0|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 1181 916 J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 1187 918 rsi|QWORD = LEA [r10|QWORD + 2] size: QWORD  <||@
  Comment 1191 920 r10|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1194 922 JUMP ~[] destination: B102 -> B103  <||@
  Comment 1194 block B103 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 1194 924 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1194 926 rdx|QWORD = DEC rdx|QWORD size: QWORD  <||@
  Comment 1197 928 CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1200 930 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B103 -> B108 falseDestination: B103 -> B105  <||@
  Comment 1206 block B105 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 1206 936 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1206 938 MOV (x: [rcx|QWORD[.] + r10|QWORD * 2], y: r12|ILLEGAL) size: WORD  <||@
  Comment 1211 940 JUMP ~[] destination: B105 -> B108  <||@
  Comment 1216 block B123 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 1216 1164 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1216 1166 stack:112|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 1221 1168 rdx|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 1225 1170 rsi|QWORD = MOVE stack:72|QWORD moveKind: QWORD  <||@
  Comment 1230 1172 r14|DWORD = SHR rbx|DWORD size: DWORD  <||@
  Comment 1236 1174 r14|DWORD = ADD (x: r14|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 1239 1176 r10|DWORD = SUB (x: r14|DWORD, ~y: r9|DWORD) size: DWORD  <||@
  Comment 1245 1178 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 1248 1180 r14|DWORD = CMOVE (falseValue: r14|DWORD, ~trueValue: r9|DWORD) condition: <  <||@
  Comment 1252 1182 r10|DWORD = LEA [r14|DWORD - 2147483639] size: DWORD  <||@
  Comment 1259 1184 CMP r10|DWORD y: 1 size: DWORD  <||@
  Comment 1263 1186 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B123 -> B124 falseDestination: B123 -> B174  <||@
  Comment 1269 block B124 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 1269 1188 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1269 1190 CMP (x: r14|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 1272 1192 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B124 -> B125 falseDestination: B124 -> B173  <||@
  Comment 1278 block B125 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 1278 1194 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1278 1196 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 1281 1198 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B125 -> B126 falseDestination: B125 -> B127  <||@
  Comment 1287 block B127 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 1287 1216 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1287 1218 stack:116|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1292 1220 r10|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 1296 1222 rdi|DWORD = SHL r14|DWORD y: 2 size: DWORD  <||@
  Comment 1302 1224 rdi|DWORD = LEA [rdi|DWORD + 23] size: DWORD  <||@
  Comment 1305 1226 rdi|DWORD = AND rdi|DWORD y: -8 size: DWORD  <||@
  Comment 1308 1228 rdi|QWORD = MOVSXD rdi|DWORD size: QWORD  <||@
  Comment 1311 1230 r13|QWORD = ADD (x: rdi|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1317 1232 CMP (x: r13|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 1321 1234 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B127 -> B128 falseDestination: B127 -> B129  <||@
  Comment 1327 block B129 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 1327 1276 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1327 1278 MOV (x: [r15|QWORD + 96], y: r13|QWORD) size: QWORD  <||@
  Comment 1331 1280 AMD64PREFETCH ~[rdi|QWORD + r10|QWORD * 1 + 192] instr: 0  <||@
  Comment 1340 1282 AMD64PREFETCH ~[rdi|QWORD + r10|QWORD * 1 + 256] instr: 0  <||@
  Comment 1349 1284 AMD64PREFETCH ~[rdi|QWORD + r10|QWORD * 1 + 320] instr: 0  <||@
  Comment 1358 1286 AMD64PREFETCH ~[rdi|QWORD + r10|QWORD * 1 + 384] instr: 0  <||@
  Comment 1367 1288 MOV (x: [r10|QWORD + 12], y: r14|DWORD) size: DWORD  <||@
  Comment 1371 1290 MOV [r10|QWORD] y: 1 size: QWORD  <||@
  Comment 1378 1292 MOV (x: [r10|QWORD + 8], y: rcx|DWORD) size: DWORD  <||@
  Comment 1382 1294 r10|QWORD[.] = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 1382 1296 rcx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1385 1298 JUMP ~[] destination: B129 -> B130  <||@
  Comment 1385 block B130 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 1385 1300 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1385 1302 CMP (x: r14|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 1388 1304 r10|DWORD = CMOVE (falseValue: r14|DWORD, ~trueValue: rbx|DWORD) condition: >  <||@
  Comment 1395 1306 r10|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 1398 1308 CMP r10|QWORD y: 1 size: QWORD  <||@
  Comment 1402 1310 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B130 -> B146 falseDestination: B130 -> B132  <||@
  Comment 1408 block B132 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 1408 1316 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1408 1318 rbx|QWORD[.] = LEA [rcx|QWORD[.] + 16] size: QWORD  <||@
  Comment 1412 1320 rdi|QWORD[.] = LEA [r8|QWORD[.] + 16] size: QWORD  <||@
  Comment 1416 1322 r13|QWORD = LEA [r10|QWORD - 8] size: QWORD  <||@
  Comment 1420 1324 TEST (x: r13|QWORD, y: r13|QWORD) size: QWORD  <||@
  Comment 1423 1330 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1430 1326 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B132 -> B137 falseDestination: B132 -> B135  <||@
  Comment 1436 block B137 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 1436 1356 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1436 1358 r13|QWORD = LEA [r10|QWORD - 4] size: QWORD  <||@
  Comment 1440 1360 CMP (x: r11|QWORD, y: r13|QWORD) size: QWORD  <||@
  Comment 1443 1362 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B137 -> B140 falseDestination: B137 -> B139  <||@
  Comment 1449 block B139 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 1449 1368 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1449 1370 xmm0|V128_DWORD[....] = H [rdi|QWORD[.] + r11|QWORD * 4] nZ: XMM oh: VMOVDQU  <||@
  Comment 1455 1372 J (address: [rbx|QWORD[.] + r11|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU  <||@
  Comment 1461 1374 r11|QWORD = LEA [r11|QWORD + 4] size: QWORD  <||@
  Comment 1465 1376 JUMP ~[] destination: B139 -> B140  <||@
  Comment 1465 block B140 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 1465 1378 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1465 1380 r13|QWORD = LEA [r10|QWORD - 2] size: QWORD  <||@
  Comment 1469 1382 CMP (x: r11|QWORD, y: r13|QWORD) size: QWORD  <||@
  Comment 1472 1384 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B140 -> B143 falseDestination: B140 -> B142  <||@
  Comment 1478 block B142 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 1478 1390 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1478 1392 xmm0|V64_DWORD[..] = H [rdi|QWORD[.] + r11|QWORD * 4] nZ: XMM oh: VMOVQ  <||@
  Comment 1484 1394 J (address: [rbx|QWORD[.] + r11|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ  <||@
  Comment 1490 1396 r11|QWORD = LEA [r11|QWORD + 2] size: QWORD  <||@
  Comment 1494 1398 JUMP ~[] destination: B142 -> B143  <||@
  Comment 1494 block B143 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 1494 1400 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1494 1402 r13|QWORD = DEC r10|QWORD size: QWORD  <||@
  Comment 1500 1404 CMP (x: r11|QWORD, y: r13|QWORD) size: QWORD  <||@
  Comment 1503 1406 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B143 -> B146 falseDestination: B143 -> B145  <||@
  Comment 1509 block B145 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 1509 1412 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1509 1414 rdi|DWORD[.] = MOV [rdi|QWORD[.] + r11|QWORD * 4] size: DWORD  <||@
  Comment 1513 1416 MOV (x: [rbx|QWORD[.] + r11|QWORD * 4], y: rdi|DWORD[.]) size: DWORD  <||@
  Comment 1517 1418 JUMP ~[] destination: B145 -> B146  <||@
  Comment 1517 block B146 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 1517 1420 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1517 1422 r11|QWORD = MOVSXD r14|DWORD size: QWORD  <||@
  Comment 1520 1424 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1523 1426 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B146 -> B147 falseDestination: B146 -> B162  <||@
  Comment 1529 block B162 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 1529 1544 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1529 1546 xmm2|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null>  <||@
  Comment 1533 1548 xmm1|V128_DWORD[....] = L oc: SIMD<null,null,null,null>  <||@
  Comment 1537 1550 xmm0|V64_DWORD[..] = L oc: SIMD<null,null>  <||@
  Comment 1541 1552 JUMP ~[] destination: B162 -> B163  <||@
  Comment 1541 block B163 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 1541 1554 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1541 1556 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 1544 1558 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B163 -> B168 falseDestination: B163 -> B165  <||@
  Comment 1550 block B165 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 1550 1564 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1550 1566 r14|DWORD = DEC r14|DWORD size: DWORD  <||@
  Comment 1553 1568 r14|DWORD = SHL r14|DWORD y: 2 size: DWORD  <||@
  Comment 1557 1570 r10|QWORD = MOVSXD r14|DWORD size: QWORD  <||@
  Comment 1560 1572 r11|QWORD[.] = LEA [rcx|QWORD[.] + 16] size: QWORD  <||@
  Comment 1564 1574 r11|QWORD[.] = ADD (x: r11|QWORD[.], y: r10|QWORD) size: QWORD  <||@
  Comment 1567 1576 r11|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1571 1578 r10|QWORD[.] = LEA [rcx|QWORD[.] + 16] size: QWORD  <||@
  Comment 1575 1580 r10|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1579 1582 r11|QWORD[*] = SUB (x: r11|QWORD[*], ~y: r10|QWORD[*]) size: QWORD  <||@
  Comment 1582 1584 r11|QWORD[*] = INC r11|QWORD[*] size: QWORD  <||@
  Comment 1585 1586 JUMP ~[] destination: B165 -> B166  <||@
  Comment 1590 block B171 loop 6 depth 2 outer 0 header:2820|LoopBegin  <||@
  Comment 1590 1660 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1600 1662 r11|QWORD[*] = DEC r11|QWORD[*] size: QWORD  <||@
  Comment 1603 1664 rbx|QWORD[*] = ADD (x: r10|QWORD[*], y: rsi|QWORD) size: QWORD  <||@
  Comment 1609 1666 rbx|QWORD[*] = ADD (x: rbx|QWORD[*], y: r11|QWORD[*]) size: QWORD  <||@
  Comment 1612 1668 MOVB (x: [rbx|QWORD[*]], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1615 1670 JUMP ~[] destination: B171 -> B166  <||@
  Comment 1615 block B166 loop 6 depth 2 outer 0 header:2820|LoopBegin  <||@
  Comment 1615 1588 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1615 1590 CMP r11|QWORD[*] y: 1 size: QWORD  <||@
  Comment 1619 1592 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B166 -> B168 falseDestination: B166 -> B171  <||@
  Comment 1627 block B113 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 1627 1030 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1627 1032 CMP r11|DWORD y: 11 size: DWORD  <||@
  Comment 1631 1034 BRANCH trueDestinationProbability: 0.7308950256495741 condition: < trueDestination: B113 -> B114 falseDestination: B113 -> B115  <||@
  Comment 1637 block B114 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 1637 1036 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1637 1038 r9|DWORD = MOVE input: int[10|0xa]  <||@
  Comment 1643 1042 JUMP ~[] destination: B114 -> B117  <||@
  Comment 1648 block B44 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 1648 380 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1648 382 CMP (x: r8|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 1651 384 BRANCH trueDestinationProbability: 0.09242718272553296 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46  <||@
  Comment 1657 block B46 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 1657 400 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1657 402 CMP r14|DWORD y: 1 size: DWORD  <||@
  Comment 1661 404 BRANCH trueDestinationProbability: 0.09284041465770032 condition: < trueDestination: B46 -> B51 falseDestination: B46 -> B58  <||@
  Comment 1672 block B147 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 1672 1428 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1672 1430 rbx|QWORD[.] = LEA [rcx|QWORD[.] + r10|QWORD * 4 + 16] size: QWORD  <||@
  Comment 1677 1432 r11|QWORD = SUB (x: r11|QWORD, ~y: r10|QWORD) size: QWORD  <||@
  Comment 1680 1434 r10|QWORD = LEA [r11|QWORD - 8] size: QWORD  <||@
  Comment 1684 1436 TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1687 1442 rdi|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1694 1444 xmm2|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null>  <||@
  Comment 1698 1438 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B147 -> B152 falseDestination: B147 -> B150  <||@
  Comment 1704 block B152 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 1704 1470 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1704 1472 r10|QWORD = LEA [r11|QWORD - 4] size: QWORD  <||@
  Comment 1708 1474 CMP (x: rdi|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1711 1480 xmm1|V128_DWORD[....] = L oc: SIMD<null,null,null,null>  <||@
  Comment 1715 1476 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B152 -> B155 falseDestination: B152 -> B154  <||@
  Comment 1721 block B154 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 1721 1484 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1721 1488 J (address: [rbx|QWORD[.] + rdi|QWORD * 4], input: xmm1|V128_DWORD[....]) nZ: XMM oh: VMOVDQU  <||@
  Comment 1726 1490 r10|QWORD = LEA [rdi|QWORD + 4] size: QWORD  <||@
  Comment 1730 1492 rdi|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 1733 1494 JUMP ~[] destination: B154 -> B155  <||@
  Comment 1733 block B155 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 1733 1496 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1733 1498 r10|QWORD = LEA [r11|QWORD - 2] size: QWORD  <||@
  Comment 1737 1500 CMP (x: rdi|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1740 1506 xmm0|V64_DWORD[..] = L oc: SIMD<null,null>  <||@
  Comment 1744 1502 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B155 -> B158 falseDestination: B155 -> B157  <||@
  Comment 1750 block B157 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 1750 1510 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1750 1514 J (address: [rbx|QWORD[.] + rdi|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ  <||@
  Comment 1756 1516 r10|QWORD = LEA [rdi|QWORD + 2] size: QWORD  <||@
  Comment 1760 1518 rdi|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 1763 1520 JUMP ~[] destination: B157 -> B158  <||@
  Comment 1763 block B158 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 1763 1522 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1763 1524 r11|QWORD = DEC r11|QWORD size: QWORD  <||@
  Comment 1766 1526 CMP (x: rdi|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 1769 1528 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B158 -> B163 falseDestination: B158 -> B160  <||@
  Comment 1775 block B160 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 1775 1534 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1775 1536 MOV (x: [rbx|QWORD[.] + rdi|QWORD * 4], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 1779 1538 JUMP ~[] destination: B160 -> B163  <||@
  Comment 1784 block B168 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 1784 1598 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1784 1600 CMP [rcx|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}  <||@
  Comment 1784 {meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}}  <||@
  Comment 1791 1602 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B168 -> B169 falseDestination: B168 -> B170  <||@
  Comment 1797 block B169 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 1797 1604 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1797 1606 r11|DWORD = MOVE stack:116|DWORD moveKind: DWORD  <||@
  Comment 1802 1608 MOV (x: [rcx|QWORD[.] + rdx|DWORD * 4 + 16], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 1806 1610 rdx|QWORD[.] = LEA [rcx|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD  <||@
  Comment 1811 1612 rdx|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1815 1614 MOVB (x: [rdx|QWORD[*] + rsi|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1819 1616 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:27, 165]  <||@
  Comment 1819 [rcx:0, stack:16, stack:48, stack:64, stack:96]at java.util.ArrayList.add(ArrayList.java:464) [bci: 27, duringCall: false, rethrow: false]
              |0                                                                                |1                  
     locals:  |vobject:ArrayList:0{modCount=r11|DWORD,size=r11|DWORD,elementData=rcx|QWORD[.]}  |stack:112|QWORD[.] 
  at java.lang.String.split(String.java:2353) [bci: 165, duringCall: true, rethrow: false]
              |0                  |1  |2           |3               |4  |5               |6           |7                                                                                |8  |9 
     locals:  |stack:32|QWORD[.]  |-  |int[0|0x0]  |stack:40|DWORD  |-  |stack:96|DWORD  |int[0|0x0]  |vobject:ArrayList:0{modCount=r11|DWORD,size=r11|DWORD,elementData=rcx|QWORD[.]}  |-  |-   <||@
  Comment 1819 {infopoint: SAFEPOINT}  <||@
  Comment 1819 11  <||@
  Comment 1825 1618 stack:88|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1830 1620 stack:92|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1835 1622 r10|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 1838 1624 rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1843 1626 r9|QWORD = MOVE stack:56|QWORD moveKind: QWORD  <||@
  Comment 1848 1628 r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1853 1630 r11|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1858 1632 JUMP ~[] destination: B169 -> B28  <||@
  Comment 1863 block B74 loop 2 depth 2 outer 0 header:3411|LoopBegin  <||@
  Comment 1863 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1872 698 xmm0|V256_WORD = H [rcx|QWORD[.] + r11|QWORD * 2] nZ: YMM oh: VMOVDQU  <||@
  Comment 1878 700 J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1884 702 r11|QWORD = LEA [r11|QWORD + 16] size: QWORD  <||@
  Comment 1888 704 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1891 706 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B74 -> B76 falseDestination: B74 -> B74  <||@
  Comment 1898 block B91 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 1898 830 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1898 832 xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 1902 834 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1909 836 JUMP ~[] destination: B91 -> B92  <||@
  Comment 1909 block B92 loop 3 depth 2 outer 0 header:3474|LoopBegin  <||@
  Comment 1909 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1920 840 J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1926 842 r10|QWORD = LEA [r10|QWORD + 16] size: QWORD  <||@
  Comment 1930 844 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1933 846 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B92 -> B94 falseDestination: B92 -> B92  <||@
  Comment 1940 block B68 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 1940 636 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1940 632 r13|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 1943 638 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 1943 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 1953 640 rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 1956 642 rdx|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1959 644 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1964 646 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:65, 162]  <||@
  Comment 1964 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1969 [stack:40, stack:48, stack:64, stack:96]at java.lang.String.substring(String.java:1969) [bci: 65, duringCall: false, rethrow: false]
              |0                  |1                |2  |3         
     locals:  |stack:32|QWORD[.]  |stack:100|DWORD  |-  |r14|DWORD 
  at java.lang.String.split(String.java:2353) [bci: 162, duringCall: true, rethrow: false]
              |0                                                                                               |1  |2           |3               |4  |5               |6           |7                                                                                               |8  |9 
     locals:  |stack:32|QWORD[.]                                                                               |-  |int[0|0x0]  |stack:40|DWORD  |-  |stack:96|DWORD  |int[0|0x0]  |vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]}  |-  |- 
     stack:   |vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]}  |   |            |                |   |                |            |                                                                                                |   |    <||@
  Comment 1970 648 JUMP ~[] destination: B68 -> B69  <||@
  Comment 1975 block B51 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 1975 442 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1975 408 stack:96|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 1980 410 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1983 412 r11|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1986 414 r10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 1986 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 1996 444 CMP (x: r11|DWORD, y: stack:44|DWORD) size: DWORD  <||@
  Comment 2001 446 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B51 -> B52 falseDestination: B51 -> B53  <||@
  Comment 2007 block B53 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 2007 460 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2007 462 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 2011 464 rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD  <||@
  Comment 2015 466 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 2019 468 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B53 -> B54 falseDestination: B53 -> B55  <||@
  Comment 2025 block B55 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 2025 490 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2025 492 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 2029 494 AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0  <||@
  Comment 2036 496 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 2036 498 JUMP ~[] destination: B55 -> B56  <||@
  Comment 2036 block B56 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 2036 500 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2036 502 rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 2039 504 rcx|QWORD = MOV [r10|QWORD + 168] size: QWORD  <||@
  Comment 2046 506 MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD  <||@
  Comment 2049 508 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 2049 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 2056 510 MOV [rsi|QWORD[*] + 12] y: -559030611 size: DWORD c: NarrowOop[char[0]{}]  <||@
  Comment 2056 {NarrowOop[char[0]{}]}  <||@
  Comment 2063 512 MOV (x: [rsi|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 2067 514 r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2070 516 rdi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 2075 518 JUMP ~[] destination: B56 -> B112  <||@
  Comment 2080 block B115 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 2080 1044 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2080 1046 r9|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2083 1050 JUMP ~[] destination: B115 -> B117  <||@
  Comment 2088 block B150 loop 5 depth 2 outer 0 header:3591|LoopBegin  <||@
  Comment 2088 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 2096 1458 J (address: [rbx|QWORD[.] + rdi|QWORD * 4], input: xmm2|V256_DWORD[........]) nZ: YMM oh: VMOVDQU  <||@
  Comment 2101 1460 rdi|QWORD = LEA [rdi|QWORD + 8] size: QWORD  <||@
  Comment 2105 1462 CMP (x: rdi|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 2108 1464 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B150 -> B152 falseDestination: B150 -> B150  <||@
  Comment 2115 block B135 loop 4 depth 2 outer 0 header:3537|LoopBegin  <||@
  Comment 2115 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 2128 1342 xmm0|V256_DWORD[........] = H [rdi|QWORD[.] + r11|QWORD * 4] nZ: YMM oh: VMOVDQU  <||@
  Comment 2134 1344 J (address: [rbx|QWORD[.] + r11|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU  <||@
  Comment 2140 1346 r11|QWORD = LEA [r11|QWORD + 8] size: QWORD  <||@
  Comment 2144 1348 CMP (x: r11|QWORD, y: r13|QWORD) size: QWORD  <||@
  Comment 2147 1350 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B135 -> B137 falseDestination: B135 -> B135  <||@
  Comment 2154 block B45 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 2154 386 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2154 388 r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2159 390 stack:96|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 2164 392 rdi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 2169 394 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2172 396 r10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 2172 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 2182 398 JUMP ~[] destination: B45 -> B112  <||@
  Comment 2187 block B109 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 2187 960 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2187 962 stack:112|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2192 964 stack:104|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 2197 966 r10|DWORD = MOVE stack:100|DWORD moveKind: DWORD  <||@
  Comment 2202 968 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 2202 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 2212 970 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 2217 972 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2222 974 r14|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2225 976 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:65, 162]  <||@
  Comment 2225 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 2230 [stack:16, stack:40, stack:48, stack:64, stack:96]at java.lang.String.substring(String.java:1969) [bci: 65, duringCall: false, rethrow: false]
              |0                  |1          |2  |3               
     locals:  |stack:32|QWORD[.]  |r14|DWORD  |-  |stack:104|DWORD 
  at java.lang.String.split(String.java:2353) [bci: 162, duringCall: true, rethrow: false]
              |0                                                                                               |1  |2           |3               |4  |5               |6           |7                                                                                               |8  |9 
     locals:  |stack:32|QWORD[.]                                                                               |-  |int[0|0x0]  |stack:40|DWORD  |-  |stack:96|DWORD  |int[0|0x0]  |vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]}  |-  |- 
     stack:   |vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]}  |   |            |                |   |                |            |                                                                                                |   |    <||@
  Comment 2231 978 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2234 980 rax|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 2239 982 r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2244 986 JUMP ~[] destination: B109 -> B111  <||@
  Comment 2249 block B128 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 2249 1236 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2249 1238 r13|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 2252 1240 stack:120|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD  <||@
  Comment 2256 1242 stack:124|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 2260 1244 stack:104|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 2265 1246 rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: -) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@120cc8dc encoding: base: 0 shift: 3  <||@
  Comment 2269 1248 rsi|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 2272 1250 rdx|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 2275 1252 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2280 1254 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:9, 7, 165]  <||@
  Comment 2280 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 2285 [stack:8, stack:16, stack:40, stack:48, stack:64, stack:96]at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9, duringCall: false, rethrow: false]
              |0                                                                                               |1               
     locals:  |-                                                                                               |-               
     stack:   |vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]}  |stack:104|DWORD 
  at java.util.ArrayList.add(ArrayList.java:462) [bci: 7, duringCall: true, rethrow: false]
              |0                                                                                               |1                  
     locals:  |vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]}  |stack:112|QWORD[.] 
  at java.lang.String.split(String.java:2353) [bci: 165, duringCall: true, rethrow: false]
              |0                  |1  |2           |3               |4  |5               |6           |7                                                                                               |8  |9 
     locals:  |stack:32|QWORD[.]  |-  |int[0|0x0]  |stack:40|DWORD  |-  |stack:96|DWORD  |int[0|0x0]  |vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]}  |-  |-   <||@
  Comment 2286 1256 rcx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2289 1258 rbp|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 2292 1260 rax|DWORD[.] = MOVE stack:120|DWORD[.] moveKind: DWORD  <||@
  Comment 2296 1262 rbx|DWORD = MOVE stack:124|DWORD moveKind: DWORD  <||@
  Comment 2300 1264 r9|DWORD = MOVE stack:104|DWORD moveKind: DWORD  <||@
  Comment 2305 1266 r11|DWORD = MOVE stack:116|DWORD moveKind: DWORD  <||@
  Comment 2310 1268 r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 2315 1270 rdx|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 2319 1272 rsi|QWORD = MOVE stack:72|QWORD moveKind: QWORD  <||@
  Comment 2324 1274 JUMP ~[] destination: B128 -> B130  <||@
  Comment 2329 block B54 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 2329 470 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2329 472 r14|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2332 474 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 2332 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 2342 476 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 2347 478 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2352 480 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:65, 162]  <||@
  Comment 2352 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 2357 [stack:40, stack:48, stack:64, stack:96]at java.lang.String.substring(String.java:1969) [bci: 65, duringCall: false, rethrow: false]
              |0                  |1          |2  |3          
     locals:  |stack:32|QWORD[.]  |r14|DWORD  |-  |int[0|0x0] 
  at java.lang.String.split(String.java:2353) [bci: 162, duringCall: true, rethrow: false]
              |0                                                                                               |1  |2           |3               |4  |5               |6           |7                                                                                               |8  |9 
     locals:  |stack:32|QWORD[.]                                                                               |-  |int[0|0x0]  |stack:40|DWORD  |-  |stack:96|DWORD  |int[0|0x0]  |vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]}  |-  |- 
     stack:   |vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]}  |   |            |                |   |                |            |                                                                                                |   |    <||@
  Comment 2358 482 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2361 484 r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2366 486 r10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 2366 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 2376 488 JUMP ~[] destination: B54 -> B56  <||@
  Comment 2381 block B185 null  <||@
  Comment 2381 1780 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2381 320 r13|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 2384 322 r14|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2387 1782 JUMP ~[] destination: B185 -> B186  <||@
  Comment 2387 block B186 null  <||@
  Comment 2387 1784 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2387 1786 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 2390 1788 BRANCH trueDestinationProbability: 0.013959872667270279 condition: = trueDestination: B186 -> B187 falseDestination: B186 -> B191  <||@
  Comment 2396 block B191 null  <||@
  Comment 2396 1846 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2396 1848 TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 2399 1850 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B191 -> B192 falseDestination: B191 -> B193  <||@
  Comment 2405 block B193 null  <||@
  Comment 2405 1860 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2405 1862 rdx|DWORD = INC stack:92|DWORD size: DWORD  <||@
  Comment 2411 1864 stack:100|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 2415 1866 CMP r13|DWORD y: 1 size: DWORD  <||@
  Comment 2419 1868 BRANCH trueDestinationProbability: 0.09284041465770032 condition: < trueDestination: B193 -> B194 falseDestination: B193 -> B201  <||@
  Comment 2425 block B201 null  <||@
  Comment 2425 1936 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2425 1938 CMP (x: r14|DWORD, y: stack:44|DWORD) size: DWORD  <||@
  Comment 2430 1940 BRANCH trueDestinationProbability: 9.999999999998899E-5 condition: > trueDestination: B201 -> B202 falseDestination: B201 -> B204  <||@
  Comment 2436 block B204 null  <||@
  Comment 2436 1958 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2436 1960 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 2440 1962 rcx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 2444 1964 CMP r13|DWORD y: 16777215 size: DWORD  <||@
  Comment 2451 1966 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B204 -> B205 falseDestination: B204 -> B209  <||@
  Comment 2457 block B205 null  <||@
  Comment 2457 1968 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2457 1970 r10|DWORD = SHL r13|DWORD size: DWORD  <||@
  Comment 2463 1972 r10|DWORD = LEA [r10|DWORD + 23] size: DWORD  <||@
  Comment 2467 1974 r10|DWORD = AND r10|DWORD y: -8 size: DWORD  <||@
  Comment 2471 1976 r10|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 2474 1978 r11|QWORD = ADD (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 2480 1980 CMP (x: r11|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 2483 1982 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B205 -> B209 falseDestination: B205 -> B207  <||@
  Comment 2489 block B207 null  <||@
  Comment 2489 1988 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2489 1990 MOV (x: [r15|QWORD + 96], y: r11|QWORD) size: QWORD  <||@
  Comment 2493 1992 AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 192] instr: 0  <||@
  Comment 2502 1994 AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 256] instr: 0  <||@
  Comment 2511 1996 AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 320] instr: 0  <||@
  Comment 2520 1998 AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 384] instr: 0  <||@
  Comment 2529 2000 MOV (x: [rsi|QWORD + 12], y: r13|DWORD) size: DWORD  <||@
  Comment 2533 2002 MOV [rsi|QWORD] y: 1 size: QWORD  <||@
  Comment 2540 2004 MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 2540 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 2547 2006 rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 2547 2008 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2550 2012 JUMP ~[] destination: B207 -> B210  <||@
  Comment 2550 block B210 null  <||@
  Comment 2550 2032 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2550 2010 rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2555 2034 rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 2559 2036 rcx|QWORD = MOVSXD r14|DWORD size: QWORD  <||@
  Comment 2562 2038 rsi|QWORD[.] = LEA [rsi|QWORD[.] + rcx|QWORD * 2 + 16] size: QWORD  <||@
  Comment 2567 2040 rcx|QWORD = MOVSXD r13|DWORD size: QWORD  <||@
  Comment 2570 2042 r10|QWORD = LEA [rcx|QWORD - 16] size: QWORD  <||@
  Comment 2574 2044 TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 2577 2050 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2584 2046 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B210 -> B215 falseDestination: B210 -> B213  <||@
  Comment 2590 block B215 null  <||@
  Comment 2590 2076 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2590 2078 r10|QWORD = LEA [rcx|QWORD - 8] size: QWORD  <||@
  Comment 2594 2080 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 2597 2082 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B215 -> B218 falseDestination: B215 -> B217  <||@
  Comment 2603 block B217 null  <||@
  Comment 2603 2088 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2603 2090 xmm0|V128_WORD = H [rsi|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVDQU  <||@
  Comment 2609 2092 J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 2615 2094 r10|QWORD = LEA [r11|QWORD + 8] size: QWORD  <||@
  Comment 2619 2096 r11|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 2622 2098 JUMP ~[] destination: B217 -> B218  <||@
  Comment 2622 block B218 null  <||@
  Comment 2622 2100 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2622 2102 r10|QWORD = LEA [rcx|QWORD - 4] size: QWORD  <||@
  Comment 2626 2104 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 2629 2106 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B218 -> B221 falseDestination: B218 -> B220  <||@
  Comment 2635 block B220 null  <||@
  Comment 2635 2112 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2635 2114 xmm0|V64_WORD = H [rsi|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVQ  <||@
  Comment 2641 2116 J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 2647 2118 r10|QWORD = LEA [r11|QWORD + 4] size: QWORD  <||@
  Comment 2651 2120 r11|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 2654 2122 JUMP ~[] destination: B220 -> B221  <||@
  Comment 2654 block B221 null  <||@
  Comment 2654 2124 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2654 2126 r10|QWORD = LEA [rcx|QWORD - 2] size: QWORD  <||@
  Comment 2658 2128 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 2661 2130 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B221 -> B224 falseDestination: B221 -> B223  <||@
  Comment 2667 block B223 null  <||@
  Comment 2667 2136 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2667 2138 xmm0|V32_WORD = H [rsi|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVD  <||@
  Comment 2673 2140 J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 2679 2142 r10|QWORD = LEA [r11|QWORD + 2] size: QWORD  <||@
  Comment 2683 2144 r11|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 2686 2146 JUMP ~[] destination: B223 -> B224  <||@
  Comment 2686 block B224 null  <||@
  Comment 2686 2148 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2686 2150 rcx|QWORD = DEC rcx|QWORD size: QWORD  <||@
  Comment 2689 2152 CMP (x: r11|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 2692 2154 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B224 -> B227 falseDestination: B224 -> B226  <||@
  Comment 2698 block B226 null  <||@
  Comment 2698 2162 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2698 2164 rsi|DWORD = MOVSX [rsi|QWORD[.] + r11|QWORD * 2] size: DWORD  <||@
  Comment 2703 2166 MOV (x: [rdx|QWORD[.] + r11|QWORD * 2], y: rsi|DWORD) size: WORD  <||@
  Comment 2708 2170 JUMP ~[] destination: B226 -> B227  <||@
  Comment 2708 block B227 null  <||@
  Comment 2708 2172 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2708 2168 rdi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 2713 2174 rsi|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@120cc8dc encoding: base: 0 shift: 3  <||@
  Comment 2720 2176 CMP (x: rdi|QWORD[.], y: stack:88|QWORD[.]) size: QWORD  <||@
  Comment 2725 2178 BRANCH trueDestinationProbability: 0.2066504369952622 condition: = trueDestination: B227 -> B228 falseDestination: B227 -> B231  <||@
  Comment 2731 block B231 null  <||@
  Comment 2731 2206 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2731 2208 r14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2734 2210 r13|DWORD = MOVE stack:100|DWORD moveKind: DWORD  <||@
  Comment 2739 2214 JUMP ~[] destination: B231 -> B232  <||@
  Comment 2739 block B232 null  <||@
  Comment 2739 2216 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 2739 1932 r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 2744 2218 stack:40|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 2749 2220 r10|DWORD = MOV [r8|QWORD[.] + 12] size: DWORD  <||@
  Comment 2753 2222 r11|DWORD = MOV [r8|QWORD[.] + 8] size: DWORD  <||@
  Comment 2757 2224 rdx|DWORD = SUB (x: r13|DWORD, ~y: r10|DWORD) size: DWORD  <||@
  Comment 2763 2226 CMP rdx|DWORD y: 1 size: DWORD  <||@
  Comment 2766 2228 BRANCH trueDestinationProbability: 0.7754412955005789 condition: < trueDestination: B232 -> B233 falseDestination: B232 -> B241  <||@
  Comment 2772 block B233 null  <||@
  Comment 2772 2230 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2772 2232 CMP r11|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}  <||@
  Comment 2772 {meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}}  <||@
  Comment 2779 2234 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B233 -> B234 falseDestination: B233 -> B240  <||@
  Comment 2785 block B234 null  <||@
  Comment 2785 2236 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2785 2238 CMP (x: r10|DWORD, y: stack:92|DWORD) size: DWORD  <||@
  Comment 2790 2240 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B234 -> B235 falseDestination: B234 -> B239  <||@
  Comment 2796 block B235 null  <||@
  Comment 2796 2242 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2796 2244 rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 2800 2246 rcx|QWORD = LEA [rdx|QWORD + 24] size: QWORD  <||@
  Comment 2804 2248 CMP (x: rcx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 2808 2250 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B235 -> B236 falseDestination: B235 -> B237  <||@
  Comment 2814 block B237 null  <||@
  Comment 2814 2278 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2814 2280 MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD  <||@
  Comment 2818 2282 AMD64PREFETCH ~[rdx|QWORD + 216] instr: 0  <||@
  Comment 2825 2284 rdx|QWORD[*] = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 2825 2292 JUMP ~[] destination: B237 -> B238  <||@
  Comment 2825 block B238 null  <||@
  Comment 2825 2294 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2825 2286 r9|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 2830 2288 rbx|QWORD = MOVE stack:72|QWORD moveKind: QWORD  <||@
  Comment 2835 2290 r10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 2835 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 2845 2296 rcx|QWORD[.] = MOVE rdx|QWORD[*] moveKind: QWORD  <||@
  Comment 2848 2298 r10|QWORD = MOV [r10|QWORD + 168] size: QWORD  <||@
  Comment 2855 2300 MOV (x: [rdx|QWORD[*]], y: r10|QWORD) size: QWORD  <||@
  Comment 2858 2302 MOV [rdx|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 2858 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 2865 2304 MOV (x: [rdx|QWORD[*] + 12], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 2868 2306 MOV (x: [rdx|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 2872 2308 rcx|DWORD[.] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@120cc8dc encoding: base: 0 shift: 3  <||@
  Comment 2876 2310 MOV (x: [r8|QWORD[.] + r9|DWORD * 4 + 16], y: rcx|DWORD[.]) size: DWORD  <||@
  Comment 2881 2312 rsi|QWORD[.] = LEA [r8|QWORD[.] + r9|DWORD * 4 + 16] size: QWORD  <||@
  Comment 2886 2314 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 2890 2316 MOVB (x: [rsi|QWORD[*] + rbx|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 2894 2318 r13|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2897 2320 xmm2|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null>  <||@
  Comment 2901 2322 xmm1|V128_DWORD[....] = L oc: SIMD<null,null,null,null>  <||@
  Comment 2905 2324 xmm0|V64_DWORD[..] = L oc: SIMD<null,null>  <||@
  Comment 2909 2326 JUMP ~[] destination: B238 -> B291  <||@
  Comment 2909 block B291 null  <||@
  Comment 2909 2864 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2909 2866 rsi|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD  <||@
  Comment 2913 2868 r14|DWORD = MOVE stack:100|DWORD moveKind: DWORD  <||@
  Comment 2918 2870 rdx|DWORD = MOVE stack:100|DWORD moveKind: DWORD  <||@
  Comment 2922 2872 JUMP ~[] destination: B291 -> B292  <||@
  Comment 2927 block B294 loop 11 depth 1 header:78|LoopBegin  <||@
  Comment 2927 2892 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 2928 2894 r10|DWORD = DEC r14|DWORD size: DWORD  <||@
  Comment 2934 2896 CMP (x: rdx|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 2937 2898 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B294 -> B295 falseDestination: B294 -> B350  <||@
  Comment 2943 block B295 loop 11 depth 1 header:78|LoopBegin  <||@
  Comment 2943 2900 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2943 2902 CMP (x: rsi|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 2946 2904 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B295 -> B296 falseDestination: B295 -> B349  <||@
  Comment 2952 block B296 loop 11 depth 1 header:78|LoopBegin  <||@
  Comment 2952 2906 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2952 2908 r11|QWORD = MOVSXD r14|DWORD size: QWORD  <||@
  Comment 2955 2910 rcx|DWORD[.] = MOV [r13|QWORD[.] + r11|QWORD * 4 + 12] size: DWORD  <||@
  Comment 2960 2912 TEST (x: rcx|DWORD[.], y: rcx|DWORD[.]) size: DWORD  <||@
  Comment 2962 2914 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B296 -> B300 falseDestination: B296 -> B298  <||@
  Comment 2968 block B298 loop 11 depth 1 header:78|LoopBegin  <||@
  Comment 2968 2920 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2968 2922 CMP [rcx|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 2968 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 2979 2924 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B298 -> B300 falseDestination: B298 -> B348  <||@
  Comment 2985 block B300 loop 11 depth 1 header:78|LoopBegin  <||@
  Comment 2985 2930 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2985 2932 rcx|DWORD[.] = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD state [bci:261]  <||@
  Comment 2985 [r13:0]at java.lang.String.split(String.java:2373) [bci: 261, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7                                                                                |8          |9 
     locals:  |-  |-  |-  |-  |-  |-  |-  |vobject:ArrayList:0{modCount=rdx|DWORD,size=rdx|DWORD,elementData=r13|QWORD[.]}  |r14|DWORD  |-   <||@
  Comment 2985 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2992 2934 CMP [rcx|DWORD[.] * 8 + 12] y: 0 size: DWORD state [bci:261]  <||@
  Comment 2992 [r13:0]at java.lang.String.split(String.java:2373) [bci: 261, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7                                                                                |8          |9 
     locals:  |-  |-  |-  |-  |-  |-  |-  |vobject:ArrayList:0{modCount=rdx|DWORD,size=rdx|DWORD,elementData=r13|QWORD[.]}  |r14|DWORD  |-   <||@
  Comment 2992 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 3000 2936 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B300 -> B301 falseDestination: B300 -> B302  <||@
  Comment 3006 block B301 loop 11 depth 1 header:78|LoopBegin  <||@
  Comment 3006 2938 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3006 2940 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:261]  <||@
  Comment 3006 [r13:0]at java.lang.String.split(String.java:2373) [bci: 261, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7                                                                                |8          |9 
     locals:  |-  |-  |-  |-  |-  |-  |-  |vobject:ArrayList:0{modCount=rdx|DWORD,size=rdx|DWORD,elementData=r13|QWORD[.]}  |r14|DWORD  |-   <||@
  Comment 3006 {infopoint: SAFEPOINT}  <||@
  Comment 3006 11  <||@
  Comment 3012 2942 r14|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 3015 2944 JUMP ~[] destination: B301 -> B292  <||@
  Comment 3015 block B292 loop 11 depth 1 header:78|LoopBegin  <||@
  Comment 3015 2874 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3015 2876 CMP r14|DWORD y: 1 size: DWORD  <||@
  Comment 3019 2878 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B292 -> B293 falseDestination: B292 -> B294  <||@
  Comment 3026 block B302 null  <||@
  Comment 3026 2946 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3026 2948 r8|QWORD = DEC r11|QWORD size: QWORD  <||@
  Comment 3032 2950 rsi|QWORD = MOV rsi|DWORD size: DWORD  <||@
  Comment 3034 2952 CMP (x: rsi|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 3037 2954 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B302 -> B303 falseDestination: B302 -> B347  <||@
  Comment 3043 block B303 null  <||@
  Comment 3043 2956 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3043 2958 CMP (x: rsi|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 3046 2960 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B303 -> B304 falseDestination: B303 -> B346  <||@
  Comment 3052 block B304 null  <||@
  Comment 3052 2962 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3052 2964 CMP (x: r11|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 3055 2966 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B304 -> B305 falseDestination: B304 -> B345  <||@
  Comment 3061 block B305 null  <||@
  Comment 3061 2968 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3061 2970 CMP (x: r14|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 3064 2972 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B305 -> B306 falseDestination: B305 -> B307  <||@
  Comment 3070 block B307 null  <||@
  Comment 3070 2986 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3070 2988 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 3074 2990 rcx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 3078 2992 CMP r14|DWORD y: 16777215 size: DWORD  <||@
  Comment 3085 2994 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B307 -> B308 falseDestination: B307 -> B312  <||@
  Comment 3091 block B308 null  <||@
  Comment 3091 2996 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3091 2998 r9|DWORD = SHL r14|DWORD y: 2 size: DWORD  <||@
  Comment 3098 3000 r9|DWORD = LEA [r9|DWORD + 23] size: DWORD  <||@
  Comment 3102 3002 r9|DWORD = AND r9|DWORD y: -8 size: DWORD  <||@
  Comment 3106 3004 r9|QWORD = MOVSXD r9|DWORD size: QWORD  <||@
  Comment 3109 3006 rdi|QWORD = ADD (x: r9|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 3115 3008 CMP (x: rdi|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 3118 3010 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B308 -> B312 falseDestination: B308 -> B310  <||@
  Comment 3124 block B310 null  <||@
  Comment 3124 3020 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3124 3022 MOV (x: [r15|QWORD + 96], y: rdi|QWORD) size: QWORD  <||@
  Comment 3128 3024 AMD64PREFETCH ~[r9|QWORD + rsi|QWORD * 1 + 192] instr: 0  <||@
  Comment 3137 3026 AMD64PREFETCH ~[r9|QWORD + rsi|QWORD * 1 + 256] instr: 0  <||@
  Comment 3146 3028 AMD64PREFETCH ~[r9|QWORD + rsi|QWORD * 1 + 320] instr: 0  <||@
  Comment 3155 3030 AMD64PREFETCH ~[r9|QWORD + rsi|QWORD * 1 + 384] instr: 0  <||@
  Comment 3164 3032 MOV (x: [rsi|QWORD + 12], y: r14|DWORD) size: DWORD  <||@
  Comment 3168 3034 MOV [rsi|QWORD] y: 1 size: QWORD  <||@
  Comment 3175 3036 MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 3175 {meta{HotSpotType<[Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 3182 3038 rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 3182 3040 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 3185 3042 stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 3190 3044 stack:96|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 3195 3046 stack:64|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 3200 3048 r14|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 3203 3050 r13|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 3206 3052 JUMP ~[] destination: B310 -> B313  <||@
  Comment 3206 block B313 null  <||@
  Comment 3206 3080 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3206 3082 rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 3210 3084 rdx|QWORD = LEA [r13|QWORD - 8] size: QWORD  <||@
  Comment 3214 3086 TEST (x: rdx|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 3217 3092 rcx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 3224 3088 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B313 -> B318 falseDestination: B313 -> B315  <||@
  Comment 3230 block B318 null  <||@
  Comment 3230 3118 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3230 3120 rdx|QWORD = LEA [r13|QWORD - 4] size: QWORD  <||@
  Comment 3234 3122 CMP (x: rcx|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 3237 3124 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B318 -> B321 falseDestination: B318 -> B320  <||@
  Comment 3243 block B320 null  <||@
  Comment 3243 3130 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3243 3132 xmm1|V128_DWORD[....] = L oc: SIMD<null,null,null,null>  <||@
  Comment 3247 3134 J (address: [rsi|QWORD[.] + rcx|QWORD * 4], input: xmm1|V128_DWORD[....]) nZ: XMM oh: VMOVDQU  <||@
  Comment 3252 3136 rdx|QWORD = LEA [rcx|QWORD + 4] size: QWORD  <||@
  Comment 3256 3138 rcx|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 3259 3140 JUMP ~[] destination: B320 -> B321  <||@
  Comment 3259 block B321 null  <||@
  Comment 3259 3142 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3259 3144 rdx|QWORD = LEA [r13|QWORD - 2] size: QWORD  <||@
  Comment 3263 3146 CMP (x: rcx|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 3266 3148 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B321 -> B324 falseDestination: B321 -> B323  <||@
  Comment 3272 block B323 null  <||@
  Comment 3272 3154 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3272 3156 xmm0|V64_DWORD[..] = L oc: SIMD<null,null>  <||@
  Comment 3276 3158 J (address: [rsi|QWORD[.] + rcx|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ  <||@
  Comment 3282 3160 rdx|QWORD = LEA [rcx|QWORD + 2] size: QWORD  <||@
  Comment 3286 3162 rcx|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 3289 3164 JUMP ~[] destination: B323 -> B324  <||@
  Comment 3289 block B324 null  <||@
  Comment 3289 3166 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3289 3168 CMP (x: rcx|QWORD, y: r14|QWORD) size: QWORD  <||@
  Comment 3292 3170 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B324 -> B327 falseDestination: B324 -> B326  <||@
  Comment 3298 block B326 null  <||@
  Comment 3298 3178 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3298 3180 MOV (x: [rsi|QWORD[.] + rcx|QWORD * 4], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 3302 3184 JUMP ~[] destination: B326 -> B327  <||@
  Comment 3302 block B327 null  <||@
  Comment 3302 3186 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3302 3182 r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 3307 3188 r10|DWORD = SHL r10|DWORD y: 2 size: DWORD  <||@
  Comment 3311 3190 rsi|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 3314 3192 rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 3318 3194 rdx|QWORD[.] = ADD (x: rdx|QWORD[.], y: rsi|QWORD) size: QWORD  <||@
  Comment 3321 3196 rdx|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD  <||@
  Comment 3325 3198 rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 3329 3200 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 3333 3202 rdx|QWORD[*] = SUB (x: rdx|QWORD[*], ~y: rsi|QWORD[*]) size: QWORD  <||@
  Comment 3336 3204 rdx|QWORD[*] = INC rdx|QWORD[*] size: QWORD  <||@
  Comment 3339 3206 rbx|QWORD = MOVE stack:72|QWORD moveKind: QWORD  <||@
  Comment 3344 3208 JUMP ~[] destination: B327 -> B328  <||@
  Comment 3349 block B343 loop 13 depth 1 header:3198|LoopBegin  <||@
  Comment 3349 3316 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 3360 3318 rdx|QWORD[*] = DEC rdx|QWORD[*] size: QWORD  <||@
  Comment 3363 3320 rcx|QWORD[*] = ADD (x: rsi|QWORD[*], y: rbx|QWORD) size: QWORD  <||@
  Comment 3369 3322 rcx|QWORD[*] = ADD (x: rcx|QWORD[*], y: rdx|QWORD[*]) size: QWORD  <||@
  Comment 3372 3324 MOVB (x: [rcx|QWORD[*]], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 3375 3326 JUMP ~[] destination: B343 -> B328  <||@
  Comment 3375 block B328 loop 13 depth 1 header:3198|LoopBegin  <||@
  Comment 3375 3210 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3375 3212 CMP rdx|QWORD[*] y: 1 size: QWORD  <||@
  Comment 3379 3214 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B328 -> B329 falseDestination: B328 -> B343  <||@
  Comment 3381 block B329 null  <||@
  Comment 3381 3216 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3381 3218 r9|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 3387 3220 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 3393 3222 r11|DWORD = MOVE stack:96|DWORD moveKind: DWORD  <||@
  Comment 3398 3224 r8|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 3403 3226 JUMP ~[] destination: B329 -> B330  <||@
  Comment 3408 block B331 loop 14 depth 1 header:686|LoopBegin  <||@
  Comment 3408 3234 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 3408 3236 CMP (x: r10|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 3411 3238 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B331 -> B332 falseDestination: B331 -> B333  <||@
  Comment 3417 block B333 loop 14 depth 1 header:686|LoopBegin  <||@
  Comment 3417 3246 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3417 3248 rsi|DWORD[.] = MOV [r8|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD  <||@
  Comment 3422 3250 TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 3424 3252 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B333 -> B337 falseDestination: B333 -> B335  <||@
  Comment 3430 block B335 loop 14 depth 1 header:686|LoopBegin  <||@
  Comment 3430 3258 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3430 3260 CMP [rsi|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 3430 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 3441 3262 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B335 -> B337 falseDestination: B335 -> B338  <||@
  Comment 3447 block B337 loop 14 depth 1 header:686|LoopBegin  <||@
  Comment 3447 3268 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3447 3270 MOV (x: [rax|QWORD[.] + r10|DWORD * 4 + 16], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 3452 3272 rsi|QWORD[.] = LEA [rax|QWORD[.] + r10|DWORD * 4 + 16] size: QWORD  <||@
  Comment 3457 3274 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 3461 3276 MOVB (x: [rsi|QWORD[*] + rbx|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 3465 3278 rsi|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 3470 3280 r9|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 3473 3282 r10|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 3476 3284 JUMP ~[] destination: B337 -> B330  <||@
  Comment 3476 block B330 loop 14 depth 1 header:686|LoopBegin  <||@
  Comment 3476 3228 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 3476 3230 CMP (x: r11|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 3479 3232 BRANCH trueDestinationProbability: 0.6976536501116306 condition: > trueDestination: B330 -> B331 falseDestination: B330 -> B339  <||@
  Comment 3481 block B339 null  <||@
  Comment 3481 3292 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3481 3294 CMP (x: r10|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 3484 3296 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B339 -> B340 falseDestination: B339 -> B341  <||@
  Comment 3490 block B340 null  <||@
  Comment 3490 3298 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3490 3300 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 3499 12  <||@
  Comment 3509 block B315 null  <||@
  Comment 3509 3096 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3509 3100 xmm2|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null>  <||@
  Comment 3513 3102 JUMP ~[] destination: B315 -> B316  <||@
  Comment 3513 block B316 loop 12 depth 1 header:3357|LoopBegin  <||@
  Comment 3513 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 3520 3106 J (address: [rsi|QWORD[.] + rcx|QWORD * 4], input: xmm2|V256_DWORD[........]) nZ: YMM oh: VMOVDQU  <||@
  Comment 3525 3108 rcx|QWORD = LEA [rcx|QWORD + 8] size: QWORD  <||@
  Comment 3529 3110 CMP (x: rcx|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 3532 3112 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B316 -> B318 falseDestination: B316 -> B316  <||@
  Comment 3539 block B213 loop 7 depth 1 header:3285|LoopBegin  <||@
  Comment 3539 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 3552 2062 xmm0|V256_WORD = H [rsi|QWORD[.] + r11|QWORD * 2] nZ: YMM oh: VMOVDQU  <||@
  Comment 3558 2064 J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 3564 2066 r11|QWORD = LEA [r11|QWORD + 16] size: QWORD  <||@
  Comment 3568 2068 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 3571 2070 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B213 -> B215 falseDestination: B213 -> B213  <||@
  Comment 3578 block B241 null  <||@
  Comment 3578 2348 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3578 2350 r9|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 3583 2352 rbx|QWORD = MOVE stack:72|QWORD moveKind: QWORD  <||@
  Comment 3588 2354 rdi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 3588 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 3598 2356 rdx|DWORD = SHR r10|DWORD size: DWORD  <||@
  Comment 3603 2358 rdx|DWORD = ADD (x: rdx|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 3606 2360 rcx|DWORD = SUB (x: rdx|DWORD, ~y: r13|DWORD) size: DWORD  <||@
  Comment 3611 2362 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 3613 2364 rdx|DWORD = CMOVE (falseValue: rdx|DWORD, ~trueValue: r13|DWORD) condition: <  <||@
  Comment 3617 2366 rcx|DWORD = LEA [rdx|DWORD - 2147483639] size: DWORD  <||@
  Comment 3623 2368 CMP rcx|DWORD y: 1 size: DWORD  <||@
  Comment 3626 2370 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B241 -> B242 falseDestination: B241 -> B356  <||@
  Comment 3632 block B242 null  <||@
  Comment 3632 2372 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3632 2374 CMP (x: rdx|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 3635 2376 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B242 -> B243 falseDestination: B242 -> B355  <||@
  Comment 3641 block B243 null  <||@
  Comment 3641 2378 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3641 2380 TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 3643 2382 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B243 -> B244 falseDestination: B243 -> B245  <||@
  Comment 3649 block B245 null  <||@
  Comment 3649 2392 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3649 2394 rcx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 3653 2396 rax|DWORD = SHL rdx|DWORD y: 2 size: DWORD  <||@
  Comment 3658 2398 rax|DWORD = LEA [rax|DWORD + 23] size: DWORD  <||@
  Comment 3661 2400 rax|DWORD = AND rax|DWORD y: -8 size: DWORD  <||@
  Comment 3664 2402 rax|QWORD = MOVSXD rax|DWORD size: QWORD  <||@
  Comment 3667 2404 rbp|QWORD = ADD (x: rax|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 3673 2406 CMP (x: rbp|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 3677 2408 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B245 -> B246 falseDestination: B245 -> B247  <||@
  Comment 3683 block B247 null  <||@
  Comment 3683 2450 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3683 2452 MOV (x: [r15|QWORD + 96], y: rbp|QWORD) size: QWORD  <||@
  Comment 3687 2454 AMD64PREFETCH ~[rax|QWORD + rcx|QWORD * 1 + 192] instr: 0  <||@
  Comment 3695 2456 AMD64PREFETCH ~[rax|QWORD + rcx|QWORD * 1 + 256] instr: 0  <||@
  Comment 3703 2458 AMD64PREFETCH ~[rax|QWORD + rcx|QWORD * 1 + 320] instr: 0  <||@
  Comment 3711 2460 AMD64PREFETCH ~[rax|QWORD + rcx|QWORD * 1 + 384] instr: 0  <||@
  Comment 3719 2462 MOV (x: [rcx|QWORD + 12], y: rdx|DWORD) size: DWORD  <||@
  Comment 3722 2464 MOV [rcx|QWORD] y: 1 size: QWORD  <||@
  Comment 3729 2466 MOV (x: [rcx|QWORD + 8], y: r11|DWORD) size: DWORD  <||@
  Comment 3733 2468 rcx|QWORD[.] = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 3733 2470 r11|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 3736 2472 JUMP ~[] destination: B247 -> B248  <||@
  Comment 3736 block B248 null  <||@
  Comment 3736 2474 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3736 2476 CMP (x: rdx|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 3739 2478 rcx|DWORD = CMOVE (falseValue: rdx|DWORD, ~trueValue: r10|DWORD) condition: >  <||@
  Comment 3745 2480 rcx|QWORD = MOVSXD rcx|DWORD size: QWORD  <||@
  Comment 3748 2482 CMP rcx|QWORD y: 1 size: QWORD  <||@
  Comment 3752 2484 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B248 -> B264 falseDestination: B248 -> B250  <||@
  Comment 3758 block B250 null  <||@
  Comment 3758 2490 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3758 2492 r10|QWORD[.] = LEA [r11|QWORD[.] + 16] size: QWORD  <||@
  Comment 3762 2494 rax|QWORD[.] = LEA [r8|QWORD[.] + 16] size: QWORD  <||@
  Comment 3766 2496 rbp|QWORD = LEA [rcx|QWORD - 8] size: QWORD  <||@
  Comment 3770 2498 TEST (x: rbp|QWORD, y: rbp|QWORD) size: QWORD  <||@
  Comment 3773 2504 r13|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 3780 2500 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B250 -> B255 falseDestination: B250 -> B253  <||@
  Comment 3786 block B255 null  <||@
  Comment 3786 2530 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3786 2532 rbp|QWORD = LEA [rcx|QWORD - 4] size: QWORD  <||@
  Comment 3790 2534 CMP (x: r13|QWORD, y: rbp|QWORD) size: QWORD  <||@
  Comment 3793 2536 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B255 -> B258 falseDestination: B255 -> B257  <||@
  Comment 3799 block B257 null  <||@
  Comment 3799 2542 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3799 2544 xmm0|V128_DWORD[....] = H [rax|QWORD[.] + r13|QWORD * 4] nZ: XMM oh: VMOVDQU  <||@
  Comment 3805 2546 J (address: [r10|QWORD[.] + r13|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU  <||@
  Comment 3811 2548 rbp|QWORD = LEA [r13|QWORD + 4] size: QWORD  <||@
  Comment 3815 2550 r13|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 3818 2552 JUMP ~[] destination: B257 -> B258  <||@
  Comment 3818 block B258 null  <||@
  Comment 3818 2554 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3818 2556 rbp|QWORD = LEA [rcx|QWORD - 2] size: QWORD  <||@
  Comment 3822 2558 CMP (x: r13|QWORD, y: rbp|QWORD) size: QWORD  <||@
  Comment 3825 2560 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B258 -> B261 falseDestination: B258 -> B260  <||@
  Comment 3831 block B260 null  <||@
  Comment 3831 2566 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3831 2568 xmm0|V64_DWORD[..] = H [rax|QWORD[.] + r13|QWORD * 4] nZ: XMM oh: VMOVQ  <||@
  Comment 3837 2570 J (address: [r10|QWORD[.] + r13|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ  <||@
  Comment 3843 2572 rbp|QWORD = LEA [r13|QWORD + 2] size: QWORD  <||@
  Comment 3847 2574 r13|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 3850 2576 JUMP ~[] destination: B260 -> B261  <||@
  Comment 3850 block B261 null  <||@
  Comment 3850 2578 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3850 2580 rbp|QWORD = DEC rcx|QWORD size: QWORD  <||@
  Comment 3856 2582 CMP (x: r13|QWORD, y: rbp|QWORD) size: QWORD  <||@
  Comment 3859 2584 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B261 -> B264 falseDestination: B261 -> B263  <||@
  Comment 3865 block B263 null  <||@
  Comment 3865 2590 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3865 2592 rax|DWORD[.] = MOV [rax|QWORD[.] + r13|QWORD * 4] size: DWORD  <||@
  Comment 3869 2594 MOV (x: [r10|QWORD[.] + r13|QWORD * 4], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 3873 2596 JUMP ~[] destination: B263 -> B264  <||@
  Comment 3873 block B264 null  <||@
  Comment 3873 2598 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3873 2600 r10|QWORD = MOVSXD rdx|DWORD size: QWORD  <||@
  Comment 3876 2602 CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 3879 2604 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B264 -> B265 falseDestination: B264 -> B280  <||@
  Comment 3885 block B280 null  <||@
  Comment 3885 2722 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3885 2724 xmm2|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null>  <||@
  Comment 3889 2726 xmm1|V128_DWORD[....] = L oc: SIMD<null,null,null,null>  <||@
  Comment 3893 2728 xmm0|V64_DWORD[..] = L oc: SIMD<null,null>  <||@
  Comment 3897 2730 JUMP ~[] destination: B280 -> B281  <||@
  Comment 3897 block B281 null  <||@
  Comment 3897 2732 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3897 2734 TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 3899 2736 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B281 -> B286 falseDestination: B281 -> B283  <||@
  Comment 3905 block B283 null  <||@
  Comment 3905 2742 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3905 2744 rdx|DWORD = DEC rdx|DWORD size: DWORD  <||@
  Comment 3907 2746 rdx|DWORD = SHL rdx|DWORD y: 2 size: DWORD  <||@
  Comment 3910 2748 rdx|QWORD = MOVSXD rdx|DWORD size: QWORD  <||@
  Comment 3913 2750 rcx|QWORD[.] = LEA [r11|QWORD[.] + 16] size: QWORD  <||@
  Comment 3917 2752 rcx|QWORD[.] = ADD (x: rcx|QWORD[.], y: rdx|QWORD) size: QWORD  <||@
  Comment 3920 2754 rcx|QWORD[*] = SHR rcx|QWORD[.] y: 9 size: QWORD  <||@
  Comment 3924 2756 rdx|QWORD[.] = LEA [r11|QWORD[.] + 16] size: QWORD  <||@
  Comment 3928 2758 rdx|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD  <||@
  Comment 3932 2760 rcx|QWORD[*] = SUB (x: rcx|QWORD[*], ~y: rdx|QWORD[*]) size: QWORD  <||@
  Comment 3935 2762 rcx|QWORD[*] = INC rcx|QWORD[*] size: QWORD  <||@
  Comment 3938 2764 JUMP ~[] destination: B283 -> B284  <||@
  Comment 3943 block B353 loop 10 depth 1 header:3060|LoopBegin  <||@
  Comment 3943 3436 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 3952 3438 rcx|QWORD[*] = DEC rcx|QWORD[*] size: QWORD  <||@
  Comment 3955 3440 r10|QWORD[*] = ADD (x: rdx|QWORD[*], y: rbx|QWORD) size: QWORD  <||@
  Comment 3961 3442 r10|QWORD[*] = ADD (x: r10|QWORD[*], y: rcx|QWORD[*]) size: QWORD  <||@
  Comment 3964 3444 MOVB (x: [r10|QWORD[*]], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 3967 3446 JUMP ~[] destination: B353 -> B284  <||@
  Comment 3967 block B284 loop 10 depth 1 header:3060|LoopBegin  <||@
  Comment 3967 2766 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3967 2768 CMP rcx|QWORD[*] y: 1 size: QWORD  <||@
  Comment 3971 2770 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B284 -> B286 falseDestination: B284 -> B353  <||@
  Comment 3979 block B228 null  <||@
  Comment 3979 2180 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3979 2182 CMP stack:100|DWORD y: 11 size: DWORD  <||@
  Comment 3984 2188 r14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 3987 2184 BRANCH trueDestinationProbability: 0.7308950256495741 condition: < trueDestination: B228 -> B229 falseDestination: B228 -> B230  <||@
  Comment 3993 block B229 null  <||@
  Comment 3993 2186 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3993 2190 r13|DWORD = MOVE input: int[10|0xa]  <||@
  Comment 3999 2194 JUMP ~[] destination: B229 -> B232  <||@
  Comment 4004 block B265 null  <||@
  Comment 4004 2606 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4004 2608 rax|QWORD[.] = LEA [r11|QWORD[.] + rcx|QWORD * 4 + 16] size: QWORD  <||@
  Comment 4009 2610 r10|QWORD = SUB (x: r10|QWORD, ~y: rcx|QWORD) size: QWORD  <||@
  Comment 4012 2612 rcx|QWORD = LEA [r10|QWORD - 8] size: QWORD  <||@
  Comment 4016 2614 TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 4019 2620 rbp|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 4026 2622 xmm2|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null>  <||@
  Comment 4030 2616 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B265 -> B270 falseDestination: B265 -> B268  <||@
  Comment 4036 block B270 null  <||@
  Comment 4036 2648 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 4036 2650 rcx|QWORD = LEA [r10|QWORD - 4] size: QWORD  <||@
  Comment 4040 2652 CMP (x: rbp|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 4043 2658 xmm1|V128_DWORD[....] = L oc: SIMD<null,null,null,null>  <||@
  Comment 4047 2654 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B270 -> B273 falseDestination: B270 -> B272  <||@
  Comment 4053 block B272 null  <||@
  Comment 4053 2662 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4053 2666 J (address: [rax|QWORD[.] + rbp|QWORD * 4], input: xmm1|V128_DWORD[....]) nZ: XMM oh: VMOVDQU  <||@
  Comment 4058 2668 rcx|QWORD = LEA [rbp|QWORD + 4] size: QWORD  <||@
  Comment 4062 2670 rbp|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 4065 2672 JUMP ~[] destination: B272 -> B273  <||@
  Comment 4065 block B273 null  <||@
  Comment 4065 2674 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 4065 2676 rcx|QWORD = LEA [r10|QWORD - 2] size: QWORD  <||@
  Comment 4069 2678 CMP (x: rbp|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 4072 2684 xmm0|V64_DWORD[..] = L oc: SIMD<null,null>  <||@
  Comment 4076 2680 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B273 -> B276 falseDestination: B273 -> B275  <||@
  Comment 4082 block B275 null  <||@
  Comment 4082 2688 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4082 2692 J (address: [rax|QWORD[.] + rbp|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ  <||@
  Comment 4088 2694 rcx|QWORD = LEA [rbp|QWORD + 2] size: QWORD  <||@
  Comment 4092 2696 rbp|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 4095 2698 JUMP ~[] destination: B275 -> B276  <||@
  Comment 4095 block B276 null  <||@
  Comment 4095 2700 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 4095 2702 r10|QWORD = DEC r10|QWORD size: QWORD  <||@
  Comment 4098 2704 CMP (x: rbp|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 4101 2706 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B276 -> B281 falseDestination: B276 -> B278  <||@
  Comment 4107 block B278 null  <||@
  Comment 4107 2712 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4107 2714 MOV (x: [rax|QWORD[.] + rbp|QWORD * 4], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 4111 2716 JUMP ~[] destination: B278 -> B281  <||@
  Comment 4116 block B286 null  <||@
  Comment 4116 2776 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4116 2778 CMP [r11|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}  <||@
  Comment 4116 {meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}}  <||@
  Comment 4124 2780 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B286 -> B287 falseDestination: B286 -> B352  <||@
  Comment 4130 block B287 null  <||@
  Comment 4130 2782 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4130 2784 rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 4134 2786 rcx|QWORD = LEA [rdx|QWORD + 24] size: QWORD  <||@
  Comment 4138 2788 CMP (x: rcx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 4142 2790 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B287 -> B288 falseDestination: B287 -> B289  <||@
  Comment 4148 block B289 null  <||@
  Comment 4148 2826 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4148 2828 MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD  <||@
  Comment 4152 2830 AMD64PREFETCH ~[rdx|QWORD + 216] instr: 0  <||@
  Comment 4159 2832 rdx|QWORD[*] = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 4159 2834 JUMP ~[] destination: B289 -> B290  <||@
  Comment 4159 block B290 null  <||@
  Comment 4159 2836 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 4159 2838 rcx|QWORD[.] = MOVE rdx|QWORD[*] moveKind: QWORD  <||@
  Comment 4162 2840 r10|QWORD = MOV [rdi|QWORD + 168] size: QWORD  <||@
  Comment 4169 2842 MOV (x: [rdx|QWORD[*]], y: r10|QWORD) size: QWORD  <||@
  Comment 4172 2844 MOV [rdx|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 4172 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 4179 2846 MOV (x: [rdx|QWORD[*] + 12], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 4182 2848 MOV (x: [rdx|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 4186 2850 rcx|DWORD[.] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@120cc8dc encoding: base: 0 shift: 3  <||@
  Comment 4190 2852 MOV (x: [r11|QWORD[.] + r9|DWORD * 4 + 16], y: rcx|DWORD[.]) size: DWORD  <||@
  Comment 4195 2854 rsi|QWORD[.] = LEA [r11|QWORD[.] + r9|DWORD * 4 + 16] size: QWORD  <||@
  Comment 4200 2856 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 4204 2858 MOVB (x: [rsi|QWORD[*] + rbx|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 4208 2860 r13|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 4211 2862 JUMP ~[] destination: B290 -> B291  <||@
  Comment 4216 block B312 null  <||@
  Comment 4216 3062 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4216 3056 stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 4221 3058 stack:64|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 4226 3064 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/String;, resolved>}  <||@
  Comment 4226 {meta{HotSpotType<[Ljava/lang/String;, resolved>}}  <||@
  Comment 4236 3066 rdx|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 4239 3068 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 4244 3070 stack:96|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 4249 3072 r13|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 4252 3074 r14|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 4255 3076 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:261]  <||@
  Comment 4255 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 4260 [stack:64]at java.lang.String.split(String.java:2373) [bci: 261, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7                                                                                                 |8               |9 
     locals:  |-  |-  |-  |-  |-  |-  |-  |vobject:ArrayList:0{modCount=stack:100|DWORD,size=stack:100|DWORD,elementData=stack:64|QWORD[.]}  |stack:96|DWORD  |-   <||@
  Comment 4261 3078 JUMP ~[] destination: B312 -> B313  <||@
  Comment 4266 block B194 null  <||@
  Comment 4266 1870 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4266 1872 CMP (x: r14|DWORD, y: stack:44|DWORD) size: DWORD  <||@
  Comment 4271 1874 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B194 -> B195 falseDestination: B194 -> B196  <||@
  Comment 4277 block B196 null  <||@
  Comment 4277 1884 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4277 1886 rdi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 4282 1888 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[0]{}]  <||@
  Comment 4282 {Object[char[0]{}]}  <||@
  Comment 4292 1890 CMP (x: rdi|QWORD[.], y: stack:88|QWORD[.]) size: QWORD  <||@
  Comment 4297 1892 BRANCH trueDestinationProbability: 0.2066504369952622 condition: = trueDestination: B196 -> B197 falseDestination: B196 -> B200  <||@
  Comment 4303 block B200 null  <||@
  Comment 4303 1924 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4303 1926 rsi|DWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: NarrowOop[char[0]{}]  <||@
  Comment 4303 {NarrowOop[char[0]{}]}  <||@
  Comment 4308 1928 r14|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 4311 1930 r13|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 4314 1934 JUMP ~[] destination: B200 -> B232  <||@
  Comment 4319 block B209 null  <||@
  Comment 4319 2018 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4319 2020 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 4319 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 4329 2022 rdx|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 4332 2024 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 4337 2026 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:132]  <||@
  Comment 4337 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 4342 [stack:40, stack:48, stack:64, stack:96]at java.lang.String.split(String.java:2351) [bci: 132, duringCall: false, rethrow: false]
              |0                           |1  |2           |3               |4          |5  |6           |7                                                                                               |8  |9 
     locals:  |stack:32|QWORD[.]           |-  |int[0|0x0]  |stack:40|DWORD  |r14|DWORD  |-  |int[0|0x0]  |vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]}  |-  |- 
     stack:   |int[-1|0xffffffffffffffff]  |   |            |                |           |   |            |                                                                                                |   |    <||@
  Comment 4343 2030 JUMP ~[] destination: B209 -> B210  <||@
  Comment 4348 block B230 null  <||@
  Comment 4348 2196 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4348 2200 r13|DWORD = MOVE stack:100|DWORD moveKind: DWORD  <||@
  Comment 4353 2204 JUMP ~[] destination: B230 -> B232  <||@
  Comment 4358 block B253 loop 8 depth 1 header:3645|LoopBegin  <||@
  Comment 4358 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 4368 2516 xmm0|V256_DWORD[........] = H [rax|QWORD[.] + r13|QWORD * 4] nZ: YMM oh: VMOVDQU  <||@
  Comment 4374 2518 J (address: [r10|QWORD[.] + r13|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU  <||@
  Comment 4380 2520 r13|QWORD = LEA [r13|QWORD + 8] size: QWORD  <||@
  Comment 4384 2522 CMP (x: r13|QWORD, y: rbp|QWORD) size: QWORD  <||@
  Comment 4387 2524 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B253 -> B255 falseDestination: B253 -> B253  <||@
  Comment 4394 block B268 loop 9 depth 1 header:3699|LoopBegin  <||@
  Comment 4394 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 4400 2636 J (address: [rax|QWORD[.] + rbp|QWORD * 4], input: xmm2|V256_DWORD[........]) nZ: YMM oh: VMOVDQU  <||@
  Comment 4405 2638 rbp|QWORD = LEA [rbp|QWORD + 8] size: QWORD  <||@
  Comment 4409 2640 CMP (x: rbp|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 4412 2642 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B268 -> B270 falseDestination: B268 -> B268  <||@
  Comment 4419 block B197 null  <||@
  Comment 4419 1894 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4419 1896 CMP stack:100|DWORD y: 11 size: DWORD  <||@
  Comment 4424 1902 rsi|DWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: NarrowOop[char[0]{}]  <||@
  Comment 4424 {NarrowOop[char[0]{}]}  <||@
  Comment 4429 1904 r14|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 4432 1898 BRANCH trueDestinationProbability: 0.7308950256495741 condition: < trueDestination: B197 -> B198 falseDestination: B197 -> B199  <||@
  Comment 4438 block B198 null  <||@
  Comment 4438 1900 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4438 1906 r13|DWORD = MOVE input: int[10|0xa]  <||@
  Comment 4444 1910 JUMP ~[] destination: B198 -> B232  <||@
  Comment 4449 block B187 null  <||@
  Comment 4449 1790 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4449 1792 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 4453 1794 rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD  <||@
  Comment 4457 1796 CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 4461 1798 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B187 -> B188 falseDestination: B187 -> B189  <||@
  Comment 4467 block B189 null  <||@
  Comment 4467 1816 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4467 1818 MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD  <||@
  Comment 4471 1820 AMD64PREFETCH ~[rax|QWORD + 216] instr: 0  <||@
  Comment 4478 1822 rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 4478 1824 r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 4483 1826 JUMP ~[] destination: B189 -> B190  <||@
  Comment 4483 block B190 null  <||@
  Comment 4483 1828 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 4483 1830 rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD  <||@
  Comment 4486 1832 MOV [rax|QWORD[*] + 12] y: 1 size: DWORD  <||@
  Comment 4493 1834 MOV [rax|QWORD[*]] y: 1 size: QWORD  <||@
  Comment 4500 1836 MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 4500 {meta{HotSpotType<[Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 4507 1838 r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@120cc8dc encoding: base: 0 shift: 3  <||@
  Comment 4511 1840 MOV (x: [rax|QWORD[*] + 16], y: r13|DWORD[.]) size: DWORD  <||@
  Comment 4515 1842 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 4518 1844 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 4527 12  <||@
  Comment 4537 block B236 null  <||@
  Comment 4537 2252 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4537 2254 r13|DWORD[.] = MOVE rsi|DWORD[.] moveKind: DWORD  <||@
  Comment 4540 2256 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 4540 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 4550 2258 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 4555 2260 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 4560 2262 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:9, 7, 246]  <||@
  Comment 4560 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 4565 [r13:0, r14:0, stack:40]at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9, duringCall: false, rethrow: false]
              |0                                                                                               |1              
     locals:  |-                                                                                               |-              
     stack:   |vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]}  |stack:40|DWORD 
  at java.util.ArrayList.add(ArrayList.java:462) [bci: 7, duringCall: true, rethrow: false]
              |0                                                                                               |1                                                    
     locals:  |vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]}  |vobject:String:1{value=r14|QWORD[.],hash=int[0|0x0]} 
  at java.lang.String.split(String.java:2368) [bci: 246, duringCall: true, rethrow: false]
              |0  |1  |2               |3  |4  |5  |6  |7                                                                                               |8  |9 
     locals:  |-  |-  |stack:36|DWORD  |-  |-  |-  |-  |vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]}  |-  |-   <||@
  Comment 4566 2264 rdx|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 4569 2266 rsi|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD  <||@
  Comment 4572 2268 r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 4577 2276 JUMP ~[] destination: B236 -> B238  <||@
  Comment 4582 block B199 null  <||@
  Comment 4582 1912 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4582 1918 r13|DWORD = MOVE stack:100|DWORD moveKind: DWORD  <||@
  Comment 4587 1922 JUMP ~[] destination: B199 -> B232  <||@
  Comment 4592 block B246 null  <||@
  Comment 4592 2410 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4592 2412 stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 4597 2414 r13|DWORD[.] = MOVE rsi|DWORD[.] moveKind: DWORD  <||@
  Comment 4600 2416 r11|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: -) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@120cc8dc encoding: base: 0 shift: 3  <||@
  Comment 4604 2418 rsi|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 4607 2420 r11|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 4610 2424 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 4615 2426 stack:96|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 4620 2428 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:9, 7, 246]  <||@
  Comment 4620 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 4625 [r13:0, r14:0, stack:40]at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9, duringCall: false, rethrow: false]
              |0                                                                                               |1              
     locals:  |-                                                                                               |-              
     stack:   |vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]}  |stack:40|DWORD 
  at java.util.ArrayList.add(ArrayList.java:462) [bci: 7, duringCall: true, rethrow: false]
              |0                                                                                               |1                                                    
     locals:  |vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]}  |vobject:String:1{value=r14|QWORD[.],hash=int[0|0x0]} 
  at java.lang.String.split(String.java:2368) [bci: 246, duringCall: true, rethrow: false]
              |0  |1  |2               |3  |4  |5  |6  |7                                                                                               |8  |9 
     locals:  |-  |-  |stack:36|DWORD  |-  |-  |-  |-  |vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]}  |-  |-   <||@
  Comment 4626 2430 r11|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 4629 2432 rdx|DWORD = MOVE stack:96|DWORD moveKind: DWORD  <||@
  Comment 4633 2434 r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 4638 2436 rsi|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD  <||@
  Comment 4641 2438 r13|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 4646 2440 r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 4651 2442 r9|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 4656 2444 rbx|QWORD = MOVE stack:72|QWORD moveKind: QWORD  <||@
  Comment 4661 2446 rdi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 4661 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 4671 2448 JUMP ~[] destination: B246 -> B248  <||@
  Comment 4676 block B288 null  <||@
  Comment 4676 2792 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4676 2794 stack:64|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 4681 2796 r13|DWORD[.] = MOVE rsi|DWORD[.] moveKind: DWORD  <||@
  Comment 4684 2798 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 4684 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 4694 2800 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 4699 2802 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 4704 2804 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:9, 7, 246]  <||@
  Comment 4704 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 4709 [r13:0, r14:0, stack:40, stack:64]at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9, duringCall: false, rethrow: false]
              |0                                                                                               |1              
     locals:  |-                                                                                               |-              
     stack:   |vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]}  |stack:40|DWORD 
  at java.util.ArrayList.add(ArrayList.java:462) [bci: 7, duringCall: true, rethrow: false]
              |0                                                                                               |1                                                    
     locals:  |vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]}  |vobject:String:1{value=r14|QWORD[.],hash=int[0|0x0]} 
  at java.lang.String.split(String.java:2368) [bci: 246, duringCall: true, rethrow: false]
              |0  |1  |2               |3  |4  |5  |6  |7                                                                                               |8  |9 
     locals:  |-  |-  |stack:36|DWORD  |-  |-  |-  |-  |vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]}  |-  |-   <||@
  Comment 4710 2806 rdx|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 4713 2808 r11|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 4718 2810 rsi|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD  <||@
  Comment 4721 2812 r9|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 4726 2814 rbx|QWORD = MOVE stack:72|QWORD moveKind: QWORD  <||@
  Comment 4731 2816 rdi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 4731 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 4741 2818 xmm2|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null>  <||@
  Comment 4745 2820 xmm1|V128_DWORD[....] = L oc: SIMD<null,null,null,null>  <||@
  Comment 4749 2822 xmm0|V64_DWORD[..] = L oc: SIMD<null,null>  <||@
  Comment 4753 2824 JUMP ~[] destination: B288 -> B290  <||@
  Comment 4758 block B188 null  <||@
  Comment 4758 1800 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4758 1802 r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 4763 1804 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 4763 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 4773 1806 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 4778 1808 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 4783 1810 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:132]  <||@
  Comment 4783 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 4788 [r13:0, stack:40]at java.lang.String.split(String.java:2351) [bci: 132, duringCall: false, rethrow: false]
              |0                           |1  |2           |3               |4          |5  |6           |7                                                                                               |8  |9 
     locals:  |r13|QWORD[.]                |-  |int[0|0x0]  |stack:40|DWORD  |r14|DWORD  |-  |int[0|0x0]  |vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]}  |-  |- 
     stack:   |int[-1|0xffffffffffffffff]  |   |            |                |           |   |            |                                                                                                |   |    <||@
  Comment 4789 1812 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 4789 1814 JUMP ~[] destination: B188 -> B190  <||@
  Comment 4794 block B202 null  <||@
  Comment 4794 1942 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4794 1944 r10|DWORD = MOVE input: int[-575841|0xfffffffffff7369f]  <||@
  Comment 4800 1948 JUMP ~[] destination: B202 -> B203  <||@
  Comment 4800 block B203 null  <||@
  Comment 4800 1950 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 4800 1856 r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 4805 1952 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 4812 1954 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 4819 1956 DEOPT info [bci:132]  <||@
  Comment 4819 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 4824 [r13:0, stack:40]at java.lang.String.split(String.java:2351) [bci: 132, duringCall: false, rethrow: false]
              |0                           |1  |2           |3               |4          |5  |6           |7                                                                                               |8  |9 
     locals:  |r13|QWORD[.]                |-  |int[0|0x0]  |stack:40|DWORD  |r14|DWORD  |-  |int[0|0x0]  |vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]}  |-  |- 
     stack:   |int[-1|0xffffffffffffffff]  |   |            |                |           |   |            |                                                                                                |   |    <||@
  Comment 4825 block B61 null  <||@
  Comment 4825 552 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4825 554 stack:104|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 4830 556 r14|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 4833 558 r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 4838 560 r10|DWORD = MOVE input: int[-553569|0xfffffffffff78d9f]  <||@
  Comment 4844 562 JUMP ~[] destination: B61 -> B62  <||@
  Comment 4844 block B62 null  <||@
  Comment 4844 564 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 4844 566 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 4851 568 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 4858 570 DEOPT info [bci:65, 162]  <||@
  Comment 4858 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 4863 [r13:0, stack:40]at java.lang.String.substring(String.java:1969) [bci: 65, duringCall: false, rethrow: false]
              |0             |1          |2  |3               
     locals:  |r13|QWORD[.]  |r14|DWORD  |-  |stack:104|DWORD 
  at java.lang.String.split(String.java:2353) [bci: 162, duringCall: true, rethrow: false]
              |0                                                                                               |1  |2           |3               |4  |5               |6           |7                                                                                               |8  |9 
     locals:  |r13|QWORD[.]                                                                                    |-  |int[0|0x0]  |stack:40|DWORD  |-  |stack:96|DWORD  |int[0|0x0]  |vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]}  |-  |- 
     stack:   |vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]}  |   |            |                |   |                |            |                                                                                                |   |    <||@
  Comment 4864 block B192 null  <||@
  Comment 4864 1852 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4864 1854 r10|DWORD = MOVE input: int[-430867|0xfffffffffff96ced]  <||@
  Comment 4870 1858 JUMP ~[] destination: B192 -> B203  <||@
  Comment 4872 block B2 null  <||@
  Comment 4872 40 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4872 42 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 4882 44 r10|DWORD = MOVE input: int[-390163|0xfffffffffffa0bed]  <||@
  Comment 4888 46 JUMP ~[] destination: B2 -> B362  <||@
  Comment 4888 block B362 null  <||@
  Comment 4888 3508 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 4888 3510 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 4895 3512 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 4902 3514 DEOPT info [bci:0]  <||@
  Comment 4902 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 4907 [rdx:0, r13:0]at java.lang.String.split(String.java:2336) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3  |4  |5  |6  |7  |8  |9 
     locals:  |r13|QWORD[.]  |rdx|QWORD[.]  |r14|DWORD  |-  |-  |-  |-  |-  |-  |-   <||@
  Comment 4908 block B346 null  <||@
  Comment 4908 3348 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4908 3350 r11|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 4911 3352 r8|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 4914 3354 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1976730038]  <||@
  Comment 4914 {Object[d.a@1976730038]}  <||@
  Comment 4924 3356 r9|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 4927 3358 r10|DWORD = MOVE input: int[-440603|0xfffffffffff946e5]  <||@
  Comment 4933 3362 JUMP ~[] destination: B346 -> B351  <||@
  Comment 4933 block B351 null  <||@
  Comment 4933 3416 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 4933 3418 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 4940 3420 MOV (x: [r15|QWORD + 680], y: r9|QWORD[.]) size: QWORD  <||@
  Comment 4947 3422 DEOPT info [bci:261]  <||@
  Comment 4947 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 4952 [r8:0]at java.lang.String.split(String.java:2373) [bci: 261, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7                                                                               |8          |9 
     locals:  |-  |-  |-  |-  |-  |-  |-  |vobject:ArrayList:0{modCount=rdx|DWORD,size=rdx|DWORD,elementData=r8|QWORD[.]}  |r11|DWORD  |-   <||@
  Comment 4953 block B361 null  <||@
  Comment 4953 3500 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4953 3502 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 4963 3504 r10|DWORD = MOVE input: int[-414227|0xfffffffffff9aded]  <||@
  Comment 4969 3506 JUMP ~[] destination: B361 -> B362  <||@
  Comment 4971 block B293 null  <||@
  Comment 4971 2880 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4971 2882 r9|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 4981 2884 r10|DWORD = MOVE input: int[-431379|0xfffffffffff96aed]  <||@
  Comment 4987 2886 r11|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 4990 2888 r8|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 4993 2890 JUMP ~[] destination: B293 -> B351  <||@
  Comment 4995 block B350 null  <||@
  Comment 4995 3404 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4995 3406 r9|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 5005 3408 r10|DWORD = MOVE input: int[-431635|0xfffffffffff969ed]  <||@
  Comment 5011 3410 r11|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 5014 3412 r8|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 5017 3414 JUMP ~[] destination: B350 -> B351  <||@
  Comment 5019 block B239 null  <||@
  Comment 5019 2328 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5019 2330 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 5029 2332 r10|DWORD = MOVE input: int[-447003|0xfffffffffff92de5]  <||@
  Comment 5035 2334 JUMP ~[] destination: B239 -> B357  <||@
  Comment 5035 block B357 null  <||@
  Comment 5035 3468 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 5035 3470 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 5042 3472 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 5049 3474 DEOPT info [bci:9, 7, 246]  <||@
  Comment 5049 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 5054 [r14:0, stack:40]at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9, duringCall: false, rethrow: false]
              |0                                                                                               |1         
     locals:  |-                                                                                               |-         
     stack:   |vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]}  |r13|DWORD 
  at java.util.ArrayList.add(ArrayList.java:462) [bci: 7, duringCall: true, rethrow: false]
              |0                                                                                               |1                                                    
     locals:  |vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]}  |vobject:String:1{value=r14|QWORD[.],hash=int[0|0x0]} 
  at java.lang.String.split(String.java:2368) [bci: 246, duringCall: true, rethrow: false]
              |0  |1  |2               |3  |4  |5  |6  |7                                                                                               |8  |9 
     locals:  |-  |-  |stack:36|DWORD  |-  |-  |-  |-  |vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]}  |-  |-   <||@
  Comment 5055 block B240 null  <||@
  Comment 5055 2336 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5055 2338 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@358913875]  <||@
  Comment 5055 {Object[d.a@358913875]}  <||@
  Comment 5065 2340 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 5068 2342 r10|DWORD = MOVE input: int[-446268|0xfffffffffff930c4]  <||@
  Comment 5074 2346 JUMP ~[] destination: B240 -> B357  <||@
  Comment 5076 block B8 null  <||@
  Comment 5076 82 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5076 84 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 5086 86 r10|DWORD = MOVE input: int[-390675|0xfffffffffffa09ed]  <||@
  Comment 5092 88 JUMP ~[] destination: B8 -> B362  <||@
  Comment 5097 block B126 null  <||@
  Comment 5097 1200 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5097 1202 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 5107 1204 r10|DWORD = MOVE input: int[-563809|0xfffffffffff7659f]  <||@
  Comment 5113 1206 r14|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 5118 1208 rbx|DWORD = MOVE stack:96|DWORD moveKind: DWORD  <||@
  Comment 5122 1210 rcx|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 5126 1212 r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 5131 1214 JUMP ~[] destination: B126 -> B175  <||@
  Comment 5131 block B175 null  <||@
  Comment 5131 1708 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 5131 1710 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 5138 1712 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 5145 1714 DEOPT info [bci:9, 7, 165]  <||@
  Comment 5145 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 5150 [r8:0, r13:0, r14:0]at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9, duringCall: false, rethrow: false]
              |0                                                                               |1        
     locals:  |-                                                                               |-        
     stack:   |vobject:ArrayList:0{modCount=rdx|DWORD,size=rdx|DWORD,elementData=r8|QWORD[.]}  |r9|DWORD 
  at java.util.ArrayList.add(ArrayList.java:462) [bci: 7, duringCall: true, rethrow: false]
              |0                                                                               |1            
     locals:  |vobject:ArrayList:0{modCount=rdx|DWORD,size=rdx|DWORD,elementData=r8|QWORD[.]}  |r14|QWORD[.] 
  at java.lang.String.split(String.java:2353) [bci: 165, duringCall: true, rethrow: false]
              |0             |1  |2           |3          |4  |5          |6           |7                                                                               |8  |9 
     locals:  |r13|QWORD[.]  |-  |int[0|0x0]  |rcx|DWORD  |-  |rbx|DWORD  |int[0|0x0]  |vobject:ArrayList:0{modCount=rdx|DWORD,size=rdx|DWORD,elementData=r8|QWORD[.]}  |-  |-   <||@
  Comment 5151 block B181 null  <||@
  Comment 5151 1750 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5151 1744 r14|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 5154 1746 r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 5159 1752 JUMP ~[] destination: B181 -> B182  <||@
  Comment 5159 block B182 null  <||@
  Comment 5159 1754 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5159 1756 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@180539890]  <||@
  Comment 5159 {Object[d.a@180539890]}  <||@
  Comment 5169 1758 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 5172 1760 r10|DWORD = MOVE input: int[-421147|0xfffffffffff992e5]  <||@
  Comment 5178 1762 JUMP ~[] destination: B182 -> B183  <||@
  Comment 5178 block B183 null  <||@
  Comment 5178 1764 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 5178 1766 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 5185 1768 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 5192 1770 DEOPT info [bci:125]  <||@
  Comment 5192 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 5197 [r13:0, stack:40]at java.lang.String.split(String.java:2351) [bci: 125, duringCall: false, rethrow: false]
              |0             |1  |2           |3               |4          |5  |6           |7                                                                                               |8  |9 
     locals:  |r13|QWORD[.]  |-  |int[0|0x0]  |stack:40|DWORD  |r14|DWORD  |-  |int[0|0x0]  |vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]}  |-  |-   <||@
  Comment 5198 block B20 null  <||@
  Comment 5198 166 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5198 168 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 5208 170 r10|DWORD = MOVE input: int[-393747|0xfffffffffff9fded]  <||@
  Comment 5214 172 JUMP ~[] destination: B20 -> B362  <||@
  Comment 5219 block B18 null  <||@
  Comment 5219 152 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5219 154 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 5229 156 r10|DWORD = MOVE input: int[-394259|0xfffffffffff9fbed]  <||@
  Comment 5235 158 JUMP ~[] destination: B18 -> B362  <||@
  Comment 5240 block B347 null  <||@
  Comment 5240 3364 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5240 3366 r11|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 5243 3368 r8|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 5246 3370 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1144871021]  <||@
  Comment 5246 {Object[d.a@1144871021]}  <||@
  Comment 5256 3372 r9|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 5259 3374 r10|DWORD = MOVE input: int[-439827|0xfffffffffff949ed]  <||@
  Comment 5265 3378 JUMP ~[] destination: B347 -> B351  <||@
  Comment 5270 block B14 null  <||@
  Comment 5270 124 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5270 126 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 5280 128 r10|DWORD = MOVE input: int[-393235|0xfffffffffff9ffed]  <||@
  Comment 5286 130 JUMP ~[] destination: B14 -> B362  <||@
  Comment 5291 block B341 null  <||@
  Comment 5291 3302 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5291 3304 rcx|DWORD = MOVE input: int[-445971|0xfffffffffff931ed]  <||@
  Comment 5296 3306 JUMP ~[] destination: B341 -> B342  <||@
  Comment 5296 block B342 null  <||@
  Comment 5296 3308 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 5296 3310 MOV (x: [r15|QWORD + 668], y: rcx|DWORD) size: DWORD  <||@
  Comment 5303 3312 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 5310 3314 DEOPT info [bci:42, 307]  <||@
  Comment 5310 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 5315 [rax:0, r8:0]at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42, duringCall: false, rethrow: false]
              |0  |1             |2  |3             |4                                                                                                                                                                                                                                                                                                                                                                                                |5         
     locals:  |-  |rax|QWORD[.]  |-  |rax|QWORD[.]  |vobject:ArrayList$SubList$1:0{cursor=r10|DWORD,lastRet=r9|DWORD,expectedModCount=stack:100|DWORD,val$index=int[0|0x0],val$offset=int[0|0x0],this$1=vobject:ArrayList$SubList:1{modCount=stack:100|DWORD,parentOffset=int[0|0x0],offset=int[0|0x0],size=r11|DWORD,parent=vobject:ArrayList:2{modCount=stack:100|DWORD,size=stack:100|DWORD,elementData=r8|QWORD[.]},this$0=vobject:ArrayList:2}}  |r10|DWORD 
  at java.lang.String.split(String.java:2378) [bci: 307, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7  |8  |9 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-   <||@
  Comment 5316 block B16 null  <||@
  Comment 5316 138 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5316 140 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 5326 142 r10|DWORD = MOVE input: int[-392723|0xfffffffffffa01ed]  <||@
  Comment 5332 144 JUMP ~[] destination: B16 -> B362  <||@
  Comment 5337 block B244 null  <||@
  Comment 5337 2384 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5337 2386 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 5347 2388 r10|DWORD = MOVE input: int[-585825|0xfffffffffff70f9f]  <||@
  Comment 5353 2390 JUMP ~[] destination: B244 -> B357  <||@
  Comment 5358 block B170 null  <||@
  Comment 5358 1634 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5358 1636 stack:104|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 5363 1638 r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 5368 1640 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@358913875]  <||@
  Comment 5368 {Object[d.a@358913875]}  <||@
  Comment 5378 1642 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 5381 1644 r10|DWORD = MOVE input: int[-427836|0xfffffffffff978c4]  <||@
  Comment 5387 1648 r14|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 5392 1650 rbx|DWORD = MOVE stack:96|DWORD moveKind: DWORD  <||@
  Comment 5396 1652 r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 5401 1654 rdx|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 5405 1656 rcx|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 5409 1658 JUMP ~[] destination: B170 -> B175  <||@
  Comment 5414 block B10 null  <||@
  Comment 5414 96 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5414 98 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 5424 100 r10|DWORD = MOVE input: int[-392211|0xfffffffffffa03ed]  <||@
  Comment 5430 102 JUMP ~[] destination: B10 -> B362  <||@
  Comment 5435 block B332 null  <||@
  Comment 5435 3240 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5435 3242 rcx|DWORD = MOVE input: int[-439315|0xfffffffffff94bed]  <||@
  Comment 5440 3244 JUMP ~[] destination: B332 -> B342  <||@
  Comment 5445 block B352 null  <||@
  Comment 5445 3424 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5445 3426 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@358913875]  <||@
  Comment 5445 {Object[d.a@358913875]}  <||@
  Comment 5455 3428 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 5458 3430 r10|DWORD = MOVE input: int[-449852|0xfffffffffff922c4]  <||@
  Comment 5464 3432 r13|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 5469 3434 JUMP ~[] destination: B352 -> B357  <||@
  Comment 5474 block B356 null  <||@
  Comment 5474 3460 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5474 3462 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 5484 3464 r10|DWORD = MOVE input: int[-449299|0xfffffffffff924ed]  <||@
  Comment 5490 3466 JUMP ~[] destination: B356 -> B357  <||@
  Comment 5495 block B355 null  <||@
  Comment 5495 3452 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5495 3454 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 5505 3456 r10|DWORD = MOVE input: int[-450331|0xfffffffffff920e5]  <||@
  Comment 5511 3458 JUMP ~[] destination: B355 -> B357  <||@
  Comment 5516 block B348 null  <||@
  Comment 5516 3380 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5516 3382 r9|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 5526 3384 r10|DWORD = MOVE input: int[-435491|0xfffffffffff95add]  <||@
  Comment 5532 3386 r11|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 5535 3388 r8|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 5538 3390 JUMP ~[] destination: B348 -> B351  <||@
  Comment 5543 block B174 null  <||@
  Comment 5543 1692 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5543 1694 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 5553 1696 r10|DWORD = MOVE input: int[-427283|0xfffffffffff97aed]  <||@
  Comment 5559 1698 r14|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 5564 1700 rbx|DWORD = MOVE stack:96|DWORD moveKind: DWORD  <||@
  Comment 5568 1702 rcx|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 5572 1704 r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 5577 1706 JUMP ~[] destination: B174 -> B175  <||@
  Comment 5582 block B360 null  <||@
  Comment 5582 3488 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5582 3490 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1154356070]  <||@
  Comment 5582 {Object[d.a@1154356070]}  <||@
  Comment 5592 3492 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 5595 3494 r10|DWORD = MOVE input: int[-460051|0xfffffffffff8faed]  <||@
  Comment 5601 3498 JUMP ~[] destination: B360 -> B362  <||@
  Comment 5606 block B349 null  <||@
  Comment 5606 3392 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5606 3394 r9|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 5616 3396 r10|DWORD = MOVE input: int[-432667|0xfffffffffff965e5]  <||@
  Comment 5622 3398 r11|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 5625 3400 r8|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 5628 3402 JUMP ~[] destination: B349 -> B351  <||@
  Comment 5633 block B25 null  <||@
  Comment 5633 200 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5633 202 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 5643 204 r10|DWORD = MOVE input: int[-417555|0xfffffffffff9a0ed]  <||@
  Comment 5649 206 JUMP ~[] destination: B25 -> B362  <||@
  Comment 5654 block B52 null  <||@
  Comment 5654 448 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5654 450 r14|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 5657 452 r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 5662 454 MOV [r15|QWORD + 668] y: -430099 size: DWORD  <||@
  Comment 5673 456 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 5680 458 DEOPT info [bci:65, 162]  <||@
  Comment 5680 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 5685 [r13:0, stack:40]at java.lang.String.substring(String.java:1969) [bci: 65, duringCall: false, rethrow: false]
              |0             |1          |2  |3          
     locals:  |r13|QWORD[.]  |r14|DWORD  |-  |int[0|0x0] 
  at java.lang.String.split(String.java:2353) [bci: 162, duringCall: true, rethrow: false]
              |0                                                                                               |1  |2           |3               |4  |5               |6           |7                                                                                               |8  |9 
     locals:  |r13|QWORD[.]                                                                                    |-  |int[0|0x0]  |stack:40|DWORD  |-  |stack:96|DWORD  |int[0|0x0]  |vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]}  |-  |- 
     stack:   |vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]}  |   |            |                |   |                |            |                                                                                                |   |    <||@
  Comment 5686 block B4 null  <||@
  Comment 5686 54 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5686 56 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 5696 58 r10|DWORD = MOVE input: int[-389651|0xfffffffffffa0ded]  <||@
  Comment 5702 60 JUMP ~[] destination: B4 -> B362  <||@
  Comment 5707 block B41 null  <||@
  Comment 5707 352 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5707 354 stack:96|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 5712 356 r14|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 5715 358 r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 5720 360 r10|DWORD = MOVE input: int[-423443|0xfffffffffff989ed]  <||@
  Comment 5726 362 JUMP ~[] destination: B41 -> B42  <||@
  Comment 5726 block B42 null  <||@
  Comment 5726 364 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 5726 366 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 5733 368 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 5740 370 DEOPT info [bci:37, 129]  <||@
  Comment 5740 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 5745 [rsi:0, r13:0, stack:40]at java.lang.String.indexOf(String.java:1558) [bci: 37, duringCall: false, rethrow: false]
              |0  |1               |2  |3         |4             |5              
     locals:  |-  |stack:40|DWORD  |-  |r8|DWORD  |rsi|QWORD[.]  |stack:96|DWORD 
  at java.lang.String.split(String.java:2351) [bci: 129, duringCall: true, rethrow: false]
              |0             |1  |2           |3               |4          |5  |6           |7                                                                                               |8  |9 
     locals:  |r13|QWORD[.]  |-  |int[0|0x0]  |stack:40|DWORD  |r14|DWORD  |-  |int[0|0x0]  |vobject:ArrayList:0{modCount=stack:92|DWORD,size=stack:92|DWORD,elementData=stack:88|QWORD[.]}  |-  |-   <||@
  Comment 5746 block B122 null  <||@
  Comment 5746 1136 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5746 1138 stack:104|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 5751 1140 stack:112|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 5756 1142 r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 5761 1144 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@358913875]  <||@
  Comment 5761 {Object[d.a@358913875]}  <||@
  Comment 5771 1146 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 5774 1148 r10|DWORD = MOVE input: int[-424252|0xfffffffffff986c4]  <||@
  Comment 5780 1154 rbx|DWORD = MOVE stack:96|DWORD moveKind: DWORD  <||@
  Comment 5784 1158 rdx|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 5788 1160 rcx|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 5792 1162 JUMP ~[] destination: B122 -> B175  <||@
  Comment 5797 block B12 null  <||@
  Comment 5797 110 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5797 112 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 5807 114 r10|DWORD = MOVE input: int[-391699|0xfffffffffffa05ed]  <||@
  Comment 5813 116 JUMP ~[] destination: B12 -> B362  <||@
  Comment 5818 block B59 null  <||@
  Comment 5818 534 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5818 536 stack:104|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 5823 538 r14|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 5826 540 r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 5831 542 r10|DWORD = MOVE input: int[-430355|0xfffffffffff96eed]  <||@
  Comment 5837 544 JUMP ~[] destination: B59 -> B62  <||@
  Comment 5842 block B195 null  <||@
  Comment 5842 1876 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5842 1878 r10|DWORD = MOVE input: int[-452627|0xfffffffffff917ed]  <||@
  Comment 5848 1882 JUMP ~[] destination: B195 -> B203  <||@
  Comment 5853 block B173 null  <||@
  Comment 5853 1676 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5853 1678 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 5863 1680 r10|DWORD = MOVE input: int[-428315|0xfffffffffff976e5]  <||@
  Comment 5869 1682 r14|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 5874 1684 rbx|DWORD = MOVE stack:96|DWORD moveKind: DWORD  <||@
  Comment 5878 1686 rcx|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 5882 1688 r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 5887 1690 JUMP ~[] destination: B173 -> B175  <||@
  Comment 5892 block B39 null  <||@
  Comment 5892 332 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5892 334 stack:96|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 5897 336 r14|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 5900 338 r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 5905 340 r10|DWORD = MOVE input: int[-423187|0xfffffffffff98aed]  <||@
  Comment 5911 342 JUMP ~[] destination: B39 -> B42  <||@
  Comment 5916 block B306 null  <||@
  Comment 5916 2974 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5916 2976 r9|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 5926 2978 r10|DWORD = MOVE input: int[-438803|0xfffffffffff94ded]  <||@
  Comment 5932 2980 r11|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 5935 2982 r8|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 5938 2984 JUMP ~[] destination: B306 -> B351  <||@
  Comment 5943 block B338 null  <||@
  Comment 5943 3286 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5943 3288 rcx|DWORD = MOVE input: int[-445739|0xfffffffffff932d5]  <||@
  Comment 5948 3290 JUMP ~[] destination: B338 -> B342  <||@
  Comment 5953 block B345 null  <||@
  Comment 5953 3332 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5953 3334 r11|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 5956 3336 r8|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 5959 3338 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1976730038]  <||@
  Comment 5959 {Object[d.a@1976730038]}  <||@
  Comment 5969 3340 r9|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 5972 3342 r10|DWORD = MOVE input: int[-442907|0xfffffffffff93de5]  <||@
  Comment 5978 3346 JUMP ~[] destination: B345 -> B351  <||@
  Comment 5983 block B6 null  <||@
  Comment 5983 68 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5983 70 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 5993 72 r10|DWORD = MOVE input: int[-391187|0xfffffffffffa07ed]  <||@
  Comment 5999 74 JUMP ~[] destination: B6 -> B362  <||@
  Comment 6004 block B121 null  <||@
  Comment 6004 1120 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6004 1122 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 6014 1124 r10|DWORD = MOVE input: int[-424987|0xfffffffffff983e5]  <||@
  Comment 6020 1126 rbx|DWORD = MOVE stack:96|DWORD moveKind: DWORD  <||@
  Comment 6024 1128 rdx|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 6028 1130 rcx|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 6032 1132 r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 6037 1134 JUMP ~[] destination: B121 -> B175  <||@
  Comment 6042 block B359 null  <||@
  Comment 6042 3480 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6042 3482 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 6052 3484 r10|DWORD = MOVE input: int[-417811|0xfffffffffff99fed]  <||@
  Comment 6058 3486 JUMP ~[] destination: B359 -> B362  <||@
  Comment 6063 block B29 null  <||@
  Comment 6063 252 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6063 254 r14|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 6066 256 r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 6071 258 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 6081 260 r10|DWORD = MOVE input: int[-420371|0xfffffffffff995ed]  <||@
  Comment 6087 262 JUMP ~[] destination: B29 -> B183  <||@
  Comment 6092 block B22 null  <||@
  Comment 6092 180 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6092 182 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 6102 184 r10|DWORD = MOVE input: int[-364819|0xfffffffffffa6eed]  <||@
  Comment 6108 186 JUMP ~[] destination: B22 -> B362  <||@
  Comment 6113 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 6113 4  <||@
  Comment 6119 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 6119 5  <||@
  HexCodeFile>>> <|@
end_nmethod
