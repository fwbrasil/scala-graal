begin_compilation
  name " HotSpotCompilation-9407[java.lang.Iterable.forEach(Consumer)]"
  method "HotSpotCompilation-9407[java.lang.Iterable.forEach(Consumer)]"
  date 1527005201056
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v2977 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v2977  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! -
uncheckedStamp: a! Ljava/lang/Iterable;
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 ?109 ?2210 v2921 v2913 v2912 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a -
uncheckedStamp: a Ljava/util/function/Consumer;
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 ?2214 v2977 ?120 ?13 ?151 ?2220 v2933 ?951 ?115 ?336 ?129 ?142 ?306 v2887 v1553 v2981 v2982 v2983 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<Iterable.forEach(Consumer)>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Iterable.java
sourceLine: 73
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - - 
=== Succesors ===
=== Usages ===
v2236 a2492 v2977 v2978 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2977 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
object: a2 
=== Succesors ===
next: v2810 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: a2 #next: v2810  <|@  <|@
f <@~|@floating>@ <|@
tid v2921 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v2810 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2810 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 6]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2921 
=== Succesors ===
next: v46 
=== Usages ===
v2692 v2690 
=== Predecessor ===
v2977 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2921 #next: v46  <|@  <|@
f <@~|@floating>@ <|@
tid v2689 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 6]
rawvalue: meta{HotSpotType<Lorg/graalvm/compiler/graph/iterators/FilteredNodeIterable;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lorg/graalvm/compiler/graph/iterators/FilteredNodeIterable;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2690 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2690 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 6]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2810 
y: v2689 
=== Succesors ===
=== Usages ===
v46 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2810 y: v2689  <|@  <|@
f <@~|@floating>@ <|@
tid a2233 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2236 v2324 v2296 v2278 v2308 v2260 v2316 v2246 v2270 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a1572 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:45) [bci: 99]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
rawvalue: null
stableDimension: 0
stamp: n - NULL
stampKind: n -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1283 v1296 v1315 v1351 v1358 v1362 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2705 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeUsageIterator;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeUsageIterator;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2516 v2710 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i17 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Iterable.forEach(Iterable.java:74) [bci: 18]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2642 v1705 v1090 v267 v190 v201 v260 v238 v506 i625 v577 v458 v469 v570 v2476 v2524 a2572 a2659 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2698 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Lorg/graalvm/compiler/graph/iterators/PredicatedProxyNodeIterator;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lorg/graalvm/compiler/graph/iterators/PredicatedProxyNodeIterator;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2472 v2709 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i126 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:39) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i613 v1708 a2444 a2492 a2572 a2611 a2659 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1429 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList$NodeListIterator.next(NodeList.java:462) [bci: 46]
at org.graalvm.compiler.graph.NodeList$NodeListIterator.next(NodeList.java:441) [bci: 1]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 32]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
a2611 a2444 a2492 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2430 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a2444 a2492 a2572 a2611 a2659 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2693 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 24
stableDimension: 0
stamp: i64 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2694 j2721 j2702 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2912 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a2811 a2813 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/iterators/FilteredNodeIterable; target_method=iterator target_method_class=Lorg/graalvm/compiler/graph/iterators/FilteredNodeIterable; position=at java.lang.Iterable.forEach(Iterable.java:74) [bci: 6]
stamp: void
trueSuccessorProbability: 0.9129709784999646
=== Inputs ===
condition: v2690 
=== Succesors ===
trueSuccessor: v42 
falseSuccessor: v45 
=== Usages ===
=== Predecessor ===
v2810 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2690 #trueSuccessor: v42 #falseSuccessor: v45  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4606398531062421451
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/iterators/FilteredNodeIterable; target_method=iterator target_method_class=Lorg/graalvm/compiler/graph/iterators/FilteredNodeIterable; position=at java.lang.Iterable.forEach(Iterable.java:74) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2811 
=== Usages ===
=== Predecessor ===
v46 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2811  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2811 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FilteredNodeIterable.nodeIterable
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.FilteredNodeIterable.iterator(FilteredNodeIterable.java:45) [bci: 5]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 6]
nullCheck: false
stamp: n -
=== Inputs ===
stateBefore: - 
guard: - 
address: v2912 
=== Succesors ===
next: v2978 
=== Usages ===
a1556 v2978 
=== Predecessor ===
v42 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2912 #next: v2978  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2978 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
object: a2811 
=== Succesors ===
next: a108 
=== Usages ===
=== Predecessor ===
a2811 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: a2811 #next: a108  <|@  <|@
f <@~|@floating>@ <|@
tid a1556 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.FilteredNodeIterable.iterator(FilteredNodeIterable.java:45) [bci: 5]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 6]
op: Uncompress
stamp: a -
=== Inputs ===
value: a2811 
=== Succesors ===
=== Usages ===
v1560 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2811  <|@  <|@
tid v1560 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Interface
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.FilteredNodeIterable.iterator(FilteredNodeIterable.java:45) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 6]
returnStamp: a - (unchecked=a Ljava/util/Iterator;)
signature: [Ljdk.vm.ci.meta.JavaType;@1cfb2629
stamp: void
targetMethod: HotSpotMethod<NodeIterable.iterator()>
=== Inputs ===
arguments: a1556 
=== Succesors ===
=== Usages ===
a108 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1556  <|@  <|@
tid ?115 <|@
d <@d|@=== Debug Properties ===
bci: 6
code: ResolvedJavaMethodBytecode<Iterable.forEach(Consumer)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Iterable.java
sourceLine: 74
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a2 - - 
=== Succesors ===
=== Usages ===
?109 ?2210 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 - -  <|@  <|@
tid a162 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@7aa02d1e
hasIdentity: true
objectId: 0
stamp: a!# Lorg/graalvm/compiler/graph/iterators/PredicatedProxyNodeIterator;
type: HotSpotType<Lorg/graalvm/compiler/graph/iterators/PredicatedProxyNodeIterator;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?109 ?109 ?163 ?2210 ?2210 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?163 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a162 
values: - - - 
=== Succesors ===
=== Usages ===
?109 ?2210 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a162 values: - - -  <|@  <|@
tid ?2210 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<FilteredNodeIterable.iterator()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: FilteredNodeIterable.java
sourceLine: 45
stackSize: 2
=== Inputs ===
outerFrameState: ?115 
values: a1 a162 a162 
virtualObjectMappings: ?163 
=== Succesors ===
=== Usages ===
a108 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?115 values: a1 a162 a162 virtualObjectMappings: ?163  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a108 <|@
d <@d|@=== Debug Properties ===
bci: 8
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.FilteredNodeIterable.iterator(FilteredNodeIterable.java:45) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 6]
polymorphic: false
stamp: a -
targetMethod: Direct#NodeIterable.iterator
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1560 
stateDuring: ?2210 
=== Succesors ===
next: j2432 
=== Usages ===
?109 a1925 
=== Predecessor ===
v2978 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1560 stateDuring: ?2210 #next: j2432  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2432 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j2451 
=== Usages ===
v2922 v2923 
=== Predecessor ===
a108 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j2451  <|@  <|@
f <@~|@floating>@ <|@
tid v2922 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j2432 
index: - 
=== Succesors ===
=== Usages ===
j2451 v2453 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2432 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2451 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2922 
=== Succesors ===
next: j2452 
=== Usages ===
j2694 j2457 v2956 
=== Predecessor ===
j2432 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2922 #next: j2452  <|@  <|@
f <@~|@floating>@ <|@
tid v2923 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j2432 
index: - 
=== Succesors ===
=== Usages ===
j2452 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2432 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2452 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2923 
=== Succesors ===
next: v2440 
=== Usages ===
v2437 
=== Predecessor ===
j2451 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2923 #next: v2440  <|@  <|@
f <@~|@floating>@ <|@
tid j2694 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2451 
y: j2693 
=== Succesors ===
=== Usages ===
v2437 v2453 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2451 y: j2693  <|@  <|@
f <@~|@floating>@ <|@
tid v2437 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2452 
y: j2694 
=== Succesors ===
=== Usages ===
v2440 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j2452 y: j2694  <|@  <|@
f <@*|@fixed>@ <|@
tid v2440 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v2437 
=== Succesors ===
trueSuccessor: v2438 
falseSuccessor: v2439 
=== Usages ===
=== Predecessor ===
j2452 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2437 #trueSuccessor: v2438 #falseSuccessor: v2439  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4576416541152026267
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2438 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a2444 
=== Usages ===
=== Predecessor ===
v2440 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2444  <|@  <|@
tid ?109 <|@
d <@d|@=== Debug Properties ===
bci: 13
code: ResolvedJavaMethodBytecode<FilteredNodeIterable.iterator()>
duringCall: false
localsSize: 1
locksSize: 0
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.FilteredNodeIterable.iterator(FilteredNodeIterable.java:45) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 6]
rethrowException: false
sourceFile: FilteredNodeIterable.java
sourceLine: 45
stackSize: 3
=== Inputs ===
outerFrameState: ?115 
values: a1 a162 a162 a108 
virtualObjectMappings: ?163 
=== Succesors ===
=== Usages ===
a2444 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?115 values: a1 a162 a162 a108 virtualObjectMappings: ?163  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2444 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?109 
arguments: v2430 i1429 i126 
=== Succesors ===
next: j2445 
=== Usages ===
j2445 
=== Predecessor ===
v2438 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?109 arguments: v2430 i1429 i126 #next: j2445  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2445 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a2444 
=== Succesors ===
next: v2458 
=== Usages ===
j2457 
=== Predecessor ===
a2444 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a2444 #next: v2458  <|@  <|@
f <@*|@fixed>@ <|@
tid v2458 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2455 
=== Predecessor ===
j2445 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4606316297947250001
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2439 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2453 
=== Usages ===
=== Predecessor ===
v2440 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2453  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2453 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2922 
value: j2694 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2449 
=== Usages ===
=== Predecessor ===
v2439 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2922 value: j2694 stateAfter: - lastLocationAccess: - #next: v2449  <|@  <|@
f <@~|@floating>@ <|@
tid v2956 <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j2451 
index: - 
=== Succesors ===
=== Usages ===
v2449 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2451 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2449 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v2956 
=== Succesors ===
next: v2456 
=== Usages ===
=== Predecessor ===
v2453 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2956 #next: v2456  <|@  <|@
f <@*|@fixed>@ <|@
tid v2456 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2455 
=== Predecessor ===
v2449 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B2" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606398531062421451
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2457 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2455 
values: j2451 j2445 
=== Succesors ===
=== Usages ===
v2926 v2925 a1921 v2957 v2958 v2959 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2455 values: j2451 j2445  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2455 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2456 v2458 
=== Succesors ===
next: a1921 
=== Usages ===
j2457 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2456 v2458 #next: a1921  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1921 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j2457 
=== Succesors ===
next: j2468 
=== Usages ===
a1929 
=== Predecessor ===
v2455 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j2457 #next: j2468  <|@  <|@
f <@~|@floating>@ <|@
tid v1959 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
rawvalue: meta{HotSpotType<Lorg/graalvm/compiler/graph/iterators/PredicatedProxyNodeIterator;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Lorg/graalvm/compiler/graph/iterators/PredicatedProxyNodeIterator;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j2463 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2463 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v1959 
=== Succesors ===
=== Usages ===
v2924 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v1959  <|@  <|@
f <@~|@floating>@ <|@
tid v2924 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j2463 
index: - 
=== Succesors ===
=== Usages ===
j2468 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2463 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2468 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2924 
=== Succesors ===
next: v2469 
=== Usages ===
v2469 
=== Predecessor ===
a1921 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2924 #next: v2469  <|@  <|@
f <@~|@floating>@ <|@
tid v2925 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2457 
index: - 
=== Succesors ===
=== Usages ===
v2469 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2457 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2469 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2925 
value: j2468 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2472 
=== Usages ===
=== Predecessor ===
j2468 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2925 value: j2468 stateAfter: - lastLocationAccess: - #next: v2472  <|@  <|@
f <@~|@floating>@ <|@
tid v2926 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j2457 
index: - 
=== Succesors ===
=== Usages ===
v2472 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2457 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2472 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2926 
value: v2698 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2476 
=== Usages ===
=== Predecessor ===
v2469 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2926 value: v2698 stateAfter: - lastLocationAccess: - #next: v2476  <|@  <|@
f <@~|@floating>@ <|@
tid v2957 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j2457 
index: - 
=== Succesors ===
=== Usages ===
v2476 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2457 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2476 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2957 
value: i17 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2478 
=== Usages ===
=== Predecessor ===
v2472 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2957 value: i17 stateAfter: - lastLocationAccess: - #next: v2478  <|@  <|@
f <@~|@floating>@ <|@
tid v2958 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j2457 
index: - 
=== Succesors ===
=== Usages ===
v2478 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2457 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a1925 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n -
=== Inputs ===
value: a108 
=== Succesors ===
=== Usages ===
v2478 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a108  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2478 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2958 
value: a1925 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a2812 
=== Usages ===
=== Predecessor ===
v2476 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2958 value: a1925 stateAfter: - lastLocationAccess: - #next: a2812  <|@  <|@
f <@~|@floating>@ <|@
tid v2913 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a2812 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2812 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FilteredNodeIterable.predicate
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.FilteredNodeIterable.iterator(FilteredNodeIterable.java:45) [bci: 14]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 6]
nullCheck: false
stamp: n -
=== Inputs ===
stateBefore: - 
guard: - 
address: v2913 
=== Succesors ===
next: v2480 
=== Usages ===
v2480 
=== Predecessor ===
v2478 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2913 #next: v2480  <|@  <|@
f <@~|@floating>@ <|@
tid v2959 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j2457 
index: - 
=== Succesors ===
=== Usages ===
v2480 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2457 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2480 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2959 
value: a2812 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1929 
=== Usages ===
=== Predecessor ===
a2812 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2959 value: a2812 stateAfter: - lastLocationAccess: - #next: a1929  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1929 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1921 
=== Succesors ===
next: v1930 
=== Usages ===
a38 
=== Predecessor ===
v2480 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1921 #next: v1930  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1930 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v43 
=== Usages ===
=== Predecessor ===
a1929 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v43  <|@  <|@
f <@*|@fixed>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Iterable.forEach(Iterable.java:74) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v35 
=== Predecessor ===
v1930 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" "B185" 
    xhandlers
    flags 
    probability 4590935522563932584
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v45 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Iterable.forEach(Iterable.java:74) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1722 
=== Usages ===
=== Predecessor ===
v46 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1722  <|@  <|@
f <@~|@floating>@ <|@
tid v2691 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 6]
rawvalue: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeUsageIterable;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeUsageIterable;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2692 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2692 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 6]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2810 
y: v2691 
=== Succesors ===
=== Usages ===
v1722 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2810 y: v2691  <|@  <|@
f <@*|@fixed>@ <|@
tid v1722 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeUsageIterable; target_method=iterator target_method_class=Lorg/graalvm/compiler/graph/NodeUsageIterable; position=at java.lang.Iterable.forEach(Iterable.java:74) [bci: 6]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2692 
=== Succesors ===
trueSuccessor: v1719 
falseSuccessor: v1721 
=== Usages ===
=== Predecessor ===
v45 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2692 #trueSuccessor: v1719 #falseSuccessor: v1721  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4590935522563932584
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1719 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeUsageIterable; target_method=iterator target_method_class=Lorg/graalvm/compiler/graph/NodeUsageIterable; position=at java.lang.Iterable.forEach(Iterable.java:74) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2481 
=== Usages ===
=== Predecessor ===
v1722 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2481  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2481 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j2496 
=== Usages ===
v2927 v2928 
=== Predecessor ===
v1719 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j2496  <|@  <|@
f <@~|@floating>@ <|@
tid v2927 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j2481 
index: - 
=== Succesors ===
=== Usages ===
j2496 v2498 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2481 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2496 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2927 
=== Succesors ===
next: j2497 
=== Usages ===
j2702 j2502 v2960 
=== Predecessor ===
j2481 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2927 #next: j2497  <|@  <|@
f <@~|@floating>@ <|@
tid v2928 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j2481 
index: - 
=== Succesors ===
=== Usages ===
j2497 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2481 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2497 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2928 
=== Succesors ===
next: v2489 
=== Usages ===
v2486 
=== Predecessor ===
j2496 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2928 #next: v2489  <|@  <|@
f <@~|@floating>@ <|@
tid j2702 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2496 
y: j2693 
=== Succesors ===
=== Usages ===
v2486 v2498 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2496 y: j2693  <|@  <|@
f <@~|@floating>@ <|@
tid v2486 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2497 
y: j2702 
=== Succesors ===
=== Usages ===
v2489 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j2497 y: j2702  <|@  <|@
f <@*|@fixed>@ <|@
tid v2489 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v2486 
=== Succesors ===
trueSuccessor: v2487 
falseSuccessor: v2488 
=== Usages ===
=== Predecessor ===
j2497 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2486 #trueSuccessor: v2487 #falseSuccessor: v2488  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4561166233704554063
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2487 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a2492 
=== Usages ===
=== Predecessor ===
v2489 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2492  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2492 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v2430 i1429 i126 
=== Succesors ===
next: j2493 
=== Usages ===
j2493 
=== Predecessor ===
v2487 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v2430 i1429 i126 #next: j2493  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2493 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a2492 
=== Succesors ===
next: v2503 
=== Usages ===
j2502 
=== Predecessor ===
a2492 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a2492 #next: v2503  <|@  <|@
f <@*|@fixed>@ <|@
tid v2503 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2500 
=== Predecessor ===
j2493 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4590872811544924907
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2488 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2498 
=== Usages ===
=== Predecessor ===
v2489 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2498  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2498 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2927 
value: j2702 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2495 
=== Usages ===
=== Predecessor ===
v2488 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2927 value: j2702 stateAfter: - lastLocationAccess: - #next: v2495  <|@  <|@
f <@~|@floating>@ <|@
tid v2960 <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j2496 
index: - 
=== Succesors ===
=== Usages ===
v2495 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2496 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2495 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v2960 
=== Succesors ===
next: v2501 
=== Usages ===
=== Predecessor ===
v2498 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2960 #next: v2501  <|@  <|@
f <@*|@fixed>@ <|@
tid v2501 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2500 
=== Predecessor ===
v2495 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4590935522563932584
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2502 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2500 
values: j2496 j2493 
=== Succesors ===
=== Usages ===
v2931 v2930 a1951 v2961 v2962 v2963 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2500 values: j2496 j2493  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2500 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2501 v2503 
=== Succesors ===
next: a1951 
=== Usages ===
j2502 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2501 v2503 #next: a1951  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1951 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j2502 
=== Succesors ===
next: j2512 
=== Usages ===
a1957 
=== Predecessor ===
v2500 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j2502 #next: j2512  <|@  <|@
f <@~|@floating>@ <|@
tid v2035 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
rawvalue: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeUsageIterator;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeUsageIterator;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j2508 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2508 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v2035 
=== Succesors ===
=== Usages ===
v2929 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v2035  <|@  <|@
f <@~|@floating>@ <|@
tid v2929 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j2508 
index: - 
=== Succesors ===
=== Usages ===
j2512 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2508 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2512 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2929 
=== Succesors ===
next: v2513 
=== Usages ===
v2513 
=== Predecessor ===
a1951 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2929 #next: v2513  <|@  <|@
f <@~|@floating>@ <|@
tid v2930 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2502 
index: - 
=== Succesors ===
=== Usages ===
v2513 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2502 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2513 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2930 
value: j2512 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2516 
=== Usages ===
=== Predecessor ===
j2512 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2930 value: j2512 stateAfter: - lastLocationAccess: - #next: v2516  <|@  <|@
f <@~|@floating>@ <|@
tid v2931 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j2502 
index: - 
=== Succesors ===
=== Usages ===
v2516 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2502 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2516 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2931 
value: v2705 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2520 
=== Usages ===
=== Predecessor ===
v2513 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2931 value: v2705 stateAfter: - lastLocationAccess: - #next: v2520  <|@  <|@
f <@~|@floating>@ <|@
tid v2961 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j2502 
index: - 
=== Succesors ===
=== Usages ===
v2520 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2502 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i286 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.graph.NodeUsageIterator.<init>(NodeUsageIterator.java:31) [bci: 5]
at org.graalvm.compiler.graph.NodeUsageIterable.iterator(NodeUsageIterable.java:44) [bci: 26]
at org.graalvm.compiler.graph.NodeUsageIterable.iterator(NodeUsageIterable.java:31) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 6]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2520 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2520 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2961 
value: i286 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a2813 
=== Usages ===
=== Predecessor ===
v2516 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2961 value: i286 stateAfter: - lastLocationAccess: - #next: a2813  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2813 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: NodeUsageIterable.node
nodeSourcePosition: at org.graalvm.compiler.graph.NodeUsageIterable.iterator(NodeUsageIterable.java:44) [bci: 23]
at org.graalvm.compiler.graph.NodeUsageIterable.iterator(NodeUsageIterable.java:31) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 6]
nullCheck: false
stamp: n Lorg/graalvm/compiler/graph/Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2912 
=== Succesors ===
next: v2522 
=== Usages ===
v2522 
=== Predecessor ===
v2520 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2912 #next: v2522  <|@  <|@
f <@~|@floating>@ <|@
tid v2962 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j2502 
index: - 
=== Succesors ===
=== Usages ===
v2522 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2502 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2522 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2962 
value: a2813 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2524 
=== Usages ===
=== Predecessor ===
a2813 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2962 value: a2813 stateAfter: - lastLocationAccess: - #next: v2524  <|@  <|@
f <@~|@floating>@ <|@
tid v2963 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j2502 
index: - 
=== Succesors ===
=== Usages ===
v2524 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2502 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2524 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2963 
value: i17 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1957 
=== Usages ===
=== Predecessor ===
v2522 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2963 value: i17 stateAfter: - lastLocationAccess: - #next: a1957  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1957 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1951 
=== Succesors ===
next: v1958 
=== Usages ===
v1568 ?1228 a38 
=== Predecessor ===
v2524 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1951 #next: v1958  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1958 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v292 
=== Usages ===
=== Predecessor ===
a1957 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v292  <|@  <|@
tid v1568 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.compiler.graph.NodeUsageIterator.<init>(NodeUsageIterator.java:51) [bci: 15]
at org.graalvm.compiler.graph.NodeUsageIterable.iterator(NodeUsageIterable.java:44) [bci: 26]
at org.graalvm.compiler.graph.NodeUsageIterable.iterator(NodeUsageIterable.java:31) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 6]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@6b2fd7af
stamp: void
targetMethod: HotSpotMethod<NodeUsageIterator.advance()>
=== Inputs ===
arguments: a1957 
=== Succesors ===
=== Usages ===
v292 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1957  <|@  <|@
tid ?120 <|@
d <@d|@=== Debug Properties ===
bci: 6
code: ResolvedJavaMethodBytecode<Iterable.forEach(Consumer)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Iterable.java
sourceLine: 74
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a2 - - 
=== Succesors ===
=== Usages ===
?284 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 - -  <|@  <|@
tid ?284 <|@
d <@d|@=== Debug Properties ===
bci: 1
code: ResolvedJavaMethodBytecode<NodeUsageIterable.iterator()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: NodeUsageIterable.java
sourceLine: 31
stackSize: 0
=== Inputs ===
outerFrameState: ?120 
values: - 
=== Succesors ===
=== Usages ===
?296 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?120 values: -  <|@  <|@
tid a301 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@b08e451
hasIdentity: true
objectId: 1
stamp: a!# Lorg/graalvm/compiler/graph/NodeUsageIterator;
type: HotSpotType<Lorg/graalvm/compiler/graph/NodeUsageIterator;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?296 ?1228 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?296 <|@
d <@d|@=== Debug Properties ===
bci: 26
code: ResolvedJavaMethodBytecode<NodeUsageIterable.iterator()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: NodeUsageIterable.java
sourceLine: 44
stackSize: 1
=== Inputs ===
outerFrameState: ?284 
values: - a301 
=== Succesors ===
=== Usages ===
?2209 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?284 values: - a301  <|@  <|@
tid ?1228 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a301 
materializedValue: a1957 
=== Succesors ===
=== Usages ===
?2209 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a301 materializedValue: a1957  <|@  <|@
tid ?2209 <|@
d <@d|@=== Debug Properties ===
bci: 15
code: ResolvedJavaMethodBytecode<NodeUsageIterator.<init>(Node)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: NodeUsageIterator.java
sourceLine: 51
stackSize: 0
=== Inputs ===
outerFrameState: ?296 
values: - - 
virtualObjectMappings: ?1228 
=== Succesors ===
=== Usages ===
v292 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?296 values: - - virtualObjectMappings: ?1228  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v292 <|@
d <@d|@=== Debug Properties ===
bci: 15
nodeSourcePosition: at org.graalvm.compiler.graph.NodeUsageIterator.<init>(NodeUsageIterator.java:51) [bci: 15]
at org.graalvm.compiler.graph.NodeUsageIterable.iterator(NodeUsageIterable.java:44) [bci: 26]
at org.graalvm.compiler.graph.NodeUsageIterable.iterator(NodeUsageIterable.java:31) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 6]
polymorphic: false
stamp: void
targetMethod: Direct#NodeUsageIterator.advance
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1568 
stateDuring: ?2209 
=== Succesors ===
next: v1569 
=== Usages ===
=== Predecessor ===
v1958 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1568 stateDuring: ?2209 #next: v1569  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1569 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: ANY_LOCATION
nodeSourcePosition: at org.graalvm.compiler.graph.NodeUsageIterator.<init>(NodeUsageIterator.java:52) [bci: 18]
at org.graalvm.compiler.graph.NodeUsageIterable.iterator(NodeUsageIterable.java:44) [bci: 26]
at org.graalvm.compiler.graph.NodeUsageIterable.iterator(NodeUsageIterable.java:31) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v52 
=== Usages ===
=== Predecessor ===
v292 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v52  <|@  <|@
f <@*|@fixed>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Iterable.forEach(Iterable.java:74) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v35 
=== Predecessor ===
v1569 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B4" "B9" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a38 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Iterable.forEach(Iterable.java:74) [bci: 6]
stamp: a! Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v35 
values: a1929 a1957 
=== Succesors ===
=== Usages ===
?951 ?13 j2547 ?151 v1367 ?2220 ?2214 ?306 j2534 ?129 ?142 ?336 v2932 ?457 ?251 ?480 ?168 v2879 ?2218 ?2216 v2881 ?436 ?2219 ?2217 ?196 v2883 ?200 ?505 ?468 ?212 ?212 ?935 ?2218 ?519 ?480 ?464 ?1080 ?2215 ?2211 ?2212 ?2213 ?2213 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v35 values: a1929 a1957  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Iterable.forEach(Iterable.java:74) [bci: 6]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v43 v52 
=== Succesors ===
next: v2814 
=== Usages ===
a38 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v43 v52 #next: v2814  <|@  <|@
f <@~|@floating>@ <|@
tid v2932 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a38 
index: - 
=== Succesors ===
=== Usages ===
v2814 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a38 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2814 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2932 
=== Succesors ===
next: v11 
=== Usages ===
v2710 v2709 
=== Predecessor ===
v35 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2932 #next: v11  <|@  <|@
f <@~|@floating>@ <|@
tid v2709 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2814 
y: v2698 
=== Succesors ===
=== Usages ===
v72 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2814 y: v2698  <|@  <|@
tid ?129 <|@
d <@d|@=== Debug Properties ===
bci: 13
code: ResolvedJavaMethodBytecode<Iterable.forEach(Consumer)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Iterable.java
sourceLine: 74
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a2 a38 - 
=== Succesors ===
=== Usages ===
?251 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 a38 -  <|@  <|@
tid ?251 <|@
d <@d|@=== Debug Properties ===
bci: 1
code: ResolvedJavaMethodBytecode<NodeIterator.hasNext()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: NodeIterator.java
sourceLine: 38
stackSize: 0
=== Inputs ===
outerFrameState: ?129 
values: a38 
=== Succesors ===
=== Usages ===
?168 ?2211 ?2215 ?2212 ?196 ?200 ?1080 ?212 ?2213 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?129 values: a38  <|@  <|@
tid ?2213 <|@
d <@d|@=== Debug Properties ===
bci: 50
code: ResolvedJavaMethodBytecode<PredicatedProxyNodeIterator.forward()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: PredicatedProxyNodeIterator.java
sourceLine: 42
stackSize: 1
=== Inputs ===
outerFrameState: ?251 
values: a38 a38 
=== Succesors ===
=== Usages ===
a211 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?251 values: a38 a38  <|@  <|@
tid ?2212 <|@
d <@d|@=== Debug Properties ===
bci: 37
code: ResolvedJavaMethodBytecode<PredicatedProxyNodeIterator.forward()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: PredicatedProxyNodeIterator.java
sourceLine: 41
stackSize: 0
=== Inputs ===
outerFrameState: ?251 
values: a38 
=== Succesors ===
=== Usages ===
i199 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?251 values: a38  <|@  <|@
tid ?196 <|@
d <@d|@=== Debug Properties ===
bci: 33
code: ResolvedJavaMethodBytecode<PredicatedProxyNodeIterator.forward()>
duringCall: false
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: PredicatedProxyNodeIterator.java
sourceLine: 41
stackSize: 0
=== Inputs ===
outerFrameState: ?251 
values: a38 
=== Succesors ===
=== Usages ===
v2972 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?251 values: a38  <|@  <|@
f <@~|@floating>@ <|@
tid v2883 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a38 
index: - 
=== Succesors ===
=== Usages ===
a2818 a2821 a2830 a2832 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a38 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v2881 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a38 
index: - 
=== Succesors ===
=== Usages ===
a2817 a2840 a2826 a2829 a2837 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a38 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v2879 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a38 
index: - 
=== Succesors ===
=== Usages ===
a2815 a2824 v1283 a2819 v1296 v1308 v1315 a2827 a2835 a2831 v1347 v1351 v1358 a2838 v1362 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a38 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v2711 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
rawvalue: meta{HotSpotType<Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$90/1190971543;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$90/1190971543;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2712 v2800 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2541 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 58]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2540 v2551 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2535 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 58]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2536 j2548 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2539 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 58]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2935 v2937 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1995 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 55]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
rawvalue: meta{HotSpotType<Lorg/graalvm/compiler/graph/Node;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Lorg/graalvm/compiler/graph/Node;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2003 v2023 v2165 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Iterable.forEach(Iterable.java:74) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v12 
=== Predecessor ===
v2814 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B183" "B180" "B126" "B159" "B163" "B99" "B131" "B135" 
    successors "B12" "B79" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4610059043929207954
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 1.638739090328532
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 8
nodeSourcePosition: at java.lang.Iterable.forEach(Iterable.java:74) [bci: 12]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v11 
=== Succesors ===
next: v72 
=== Usages ===
v20 v30 v159 v160 v584 v759 v993 v1008 v1121 v1898 v1893 v1888 v1882 v1876 v1745 v1870 v1842 v1858 v1768 v1774 v1848 v1784 v1789 v1794 v1799 v1804 v1809 v1814 v1819 v1824 v1829 v1836 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v11 #next: v72  <|@  <|@
f <@*|@fixed>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/iterators/PredicatedProxyNodeIterator; target_method=hasNext target_method_class=Lorg/graalvm/compiler/graph/iterators/NodeIterator; position=at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
trueSuccessorProbability: 0.8217776767447147
=== Inputs ===
condition: v2709 
=== Succesors ===
trueSuccessor: v65 
falseSuccessor: v71 
=== Usages ===
=== Predecessor ===
v12 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2709 #trueSuccessor: v65 #falseSuccessor: v71  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4608743723126947473
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/iterators/PredicatedProxyNodeIterator; target_method=hasNext target_method_class=Lorg/graalvm/compiler/graph/iterators/NodeIterator; position=at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2815 
=== Usages ===
=== Predecessor ===
v72 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2815  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2815 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: NodeIterator.current
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
nullCheck: false
stamp: n Lorg/graalvm/compiler/graph/Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2879 
=== Succesors ===
next: v166 
=== Usages ===
a2732 
=== Predecessor ===
v65 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2879 #next: v166  <|@  <|@
f <@*|@fixed>@ <|@
tid v166 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 0]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v167 
=== Predecessor ===
a2815 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B29" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4612573444537173462
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a2732 <|@
d <@d|@=== Debug Properties ===
stamp: n Lorg/graalvm/compiler/graph/Node;
valueDescription: n -
=== Inputs ===
merge: v167 
values: a2815 a1307 
=== Succesors ===
=== Usages ===
a1267 v1570 v2880 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v167 values: a2815 a1307  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v167 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 1.7777777777777777
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 0]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v166 
=== Succesors ===
next: v173 
=== Usages ===
v192 v205 v218 v1744 a2732 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v166 #next: v173  <|@  <|@
f <@~|@floating>@ <|@
tid v1570 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 4]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
=== Inputs ===
value: a2732 
=== Succesors ===
=== Usages ===
v173 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2732  <|@  <|@
f <@*|@fixed>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 4]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1570 
=== Succesors ===
trueSuccessor: v171 
falseSuccessor: v172 
=== Usages ===
=== Predecessor ===
v167 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1570 #trueSuccessor: v171 #falseSuccessor: v172  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B19" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4608069844909802966
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v171 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 33]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: v179 
=== Usages ===
=== Predecessor ===
v173 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v179  <|@  <|@
f <@*|@fixed>@ <|@
tid v179 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 33]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v180 
=== Predecessor ===
v171 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4608069844909802966
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v172 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 7]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2816 
=== Usages ===
=== Predecessor ===
v173 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2816  <|@  <|@
f <@~|@floating>@ <|@
tid v2880 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2732 
=== Succesors ===
=== Usages ===
i2816 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2732  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2816 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Node.id
nodeSourcePosition: at org.graalvm.compiler.graph.Node.isAlive(Node.java:556) [bci: 1]
at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 11]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2880 
=== Succesors ===
next: v184 
=== Usages ===
v260 
=== Predecessor ===
v172 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2880 #next: v184  <|@  <|@
f <@~|@floating>@ <|@
tid v260 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.graph.Node.isAlive(Node.java:556) [bci: 4]
at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 11]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2816 
y: i17 
=== Succesors ===
=== Usages ===
v184 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2816 y: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v184 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 14]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v260 
=== Succesors ===
trueSuccessor: v183 
falseSuccessor: v182 
=== Usages ===
=== Predecessor ===
i2816 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v260 #trueSuccessor: v183 #falseSuccessor: v182  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4603566245282432470
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v183 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 33]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: v181 
=== Usages ===
=== Predecessor ===
v184 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v181  <|@  <|@
f <@*|@fixed>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 33]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v180 
=== Predecessor ===
v183 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B32" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4603566245282432470
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 17]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2817 
=== Usages ===
=== Predecessor ===
v184 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2817  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2817 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: PredicatedProxyNodeIterator.predicate
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 18]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
nullCheck: false
stamp: n -
=== Inputs ===
stateBefore: - 
guard: - 
address: v2881 
=== Succesors ===
next: v2971 
=== Usages ===
a1273 v2971 
=== Predecessor ===
v182 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2881 #next: v2971  <|@  <|@
tid ?168 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<PredicatedProxyNodeIterator.forward()>
duringCall: false
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: PredicatedProxyNodeIterator.java
sourceLine: 41
stackSize: 0
=== Inputs ===
outerFrameState: ?251 
values: a38 
=== Succesors ===
=== Usages ===
v2971 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?251 values: a38  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2971 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?168 
object: a2817 
=== Succesors ===
next: i188 
=== Usages ===
=== Predecessor ===
a2817 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?168 object: a2817 #next: i188  <|@  <|@
f <@~|@floating>@ <|@
tid a1273 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 18]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
op: Uncompress
stamp: a -
=== Inputs ===
value: a2817 
=== Succesors ===
=== Usages ===
v1277 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2817  <|@  <|@
f <@~|@floating>@ <|@
tid a1267 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
op: Uncompress
stamp: a Lorg/graalvm/compiler/graph/Node;
=== Inputs ===
value: a2732 
=== Succesors ===
=== Usages ===
v1277 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2732  <|@  <|@
tid v1277 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Interface
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 25]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@4e075177
stamp: void
targetMethod: HotSpotMethod<NodePredicate.apply(Node)>
=== Inputs ===
arguments: a1273 a1267 
=== Succesors ===
=== Usages ===
i188 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1273 a1267  <|@  <|@
tid ?2211 <|@
d <@d|@=== Debug Properties ===
bci: 25
code: ResolvedJavaMethodBytecode<PredicatedProxyNodeIterator.forward()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: PredicatedProxyNodeIterator.java
sourceLine: 41
stackSize: 0
=== Inputs ===
outerFrameState: ?251 
values: a38 
=== Succesors ===
=== Usages ===
i188 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?251 values: a38  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i188 <|@
d <@d|@=== Debug Properties ===
bci: 25
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 25]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#NodePredicate.apply
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1277 
stateDuring: ?2211 
=== Succesors ===
next: v195 
=== Usages ===
v190 
=== Predecessor ===
v2971 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1277 stateDuring: ?2211 #next: v195  <|@  <|@
f <@~|@floating>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 30]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i188 
y: i17 
=== Succesors ===
=== Usages ===
v195 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i188 y: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v195 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 30]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v190 
=== Succesors ===
trueSuccessor: v194 
falseSuccessor: v192 
=== Usages ===
=== Predecessor ===
i188 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v190 #trueSuccessor: v194 #falseSuccessor: v192  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4599062645655061974
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v194 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 33]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: v191 
=== Usages ===
=== Predecessor ===
v195 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v191  <|@  <|@
f <@*|@fixed>@ <|@
tid v191 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 33]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v180 
=== Predecessor ===
v194 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" "B18" 
    successors "B20" "B25" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4611899566320028955
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 33]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v179 v181 v191 
=== Succesors ===
next: a2818 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v179 v181 v191 #next: a2818  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2818 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: PredicatedProxyNodeIterator.iterator
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 34]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
nullCheck: false
stamp: n -
=== Inputs ===
stateBefore: - 
guard: - 
address: v2883 
=== Succesors ===
next: v2972 
=== Usages ===
a1287 v2972 
=== Predecessor ===
v180 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2883 #next: v2972  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2972 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?196 
object: a2818 
=== Succesors ===
next: i199 
=== Usages ===
=== Predecessor ===
a2818 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?196 object: a2818 #next: i199  <|@  <|@
f <@~|@floating>@ <|@
tid a1287 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 34]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
op: Uncompress
stamp: a -
=== Inputs ===
value: a2818 
=== Succesors ===
=== Usages ===
v1291 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2818  <|@  <|@
tid v1291 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Interface
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 37]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@35344d74
stamp: void
targetMethod: HotSpotMethod<Iterator.hasNext()>
=== Inputs ===
arguments: a1287 
=== Succesors ===
=== Usages ===
i199 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1287  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i199 <|@
d <@d|@=== Debug Properties ===
bci: 37
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 37]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Iterator.hasNext
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1291 
stateDuring: ?2212 
=== Succesors ===
next: v208 
=== Usages ===
?200 v201 
=== Predecessor ===
v2972 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1291 stateDuring: ?2212 #next: v208  <|@  <|@
f <@~|@floating>@ <|@
tid v201 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 42]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i199 
y: i17 
=== Succesors ===
=== Usages ===
v208 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i199 y: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v208 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 42]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v201 
=== Succesors ===
trueSuccessor: v205 
falseSuccessor: v207 
=== Usages ===
=== Predecessor ===
i199 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v201 #trueSuccessor: v205 #falseSuccessor: v207  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607395966692658459
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v205 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 64]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v167 
=== Succesors ===
next: a2819 
=== Usages ===
=== Predecessor ===
v208 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v167 #next: a2819  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2819 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: NodeIterator.current
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 65]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
nullCheck: false
stamp: n Lorg/graalvm/compiler/graph/Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2879 
=== Succesors ===
next: v928 
=== Usages ===
a1293 v1573 v2884 a2980 
=== Predecessor ===
v205 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2879 #next: v928  <|@  <|@
f <@~|@floating>@ <|@
tid v1573 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 68]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
=== Inputs ===
value: a2819 
=== Succesors ===
=== Usages ===
v928 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2819  <|@  <|@
f <@*|@fixed>@ <|@
tid v928 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 68]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1573 
=== Succesors ===
trueSuccessor: v926 
falseSuccessor: v927 
=== Usages ===
=== Predecessor ===
a2819 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1573 #trueSuccessor: v926 #falseSuccessor: v927  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B40" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602892367065287963
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v926 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:47) [bci: 102]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1099 
=== Usages ===
=== Predecessor ===
v928 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1099  <|@  <|@
f <@~|@floating>@ <|@
tid a1293 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 65]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
op: Uncompress
stamp: a Lorg/graalvm/compiler/graph/Node;
=== Inputs ===
value: a2819 
=== Succesors ===
=== Usages ===
a1149 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2819  <|@  <|@
f <@*|@fixed>@ <|@
tid v1099 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v961 
=== Predecessor ===
v926 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602892367065287963
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v927 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 71]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2820 
=== Usages ===
=== Predecessor ===
v928 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2820  <|@  <|@
f <@~|@floating>@ <|@
tid v2884 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2819 
=== Succesors ===
=== Usages ===
i2820 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2819  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2820 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Node.id
nodeSourcePosition: at org.graalvm.compiler.graph.Node.isAlive(Node.java:556) [bci: 1]
at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 75]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2884 
=== Succesors ===
next: v1086 
=== Usages ===
v1090 
=== Predecessor ===
v927 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2884 #next: v1086  <|@  <|@
f <@~|@floating>@ <|@
tid v1090 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.graph.Node.isAlive(Node.java:556) [bci: 4]
at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 75]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2820 
y: i17 
=== Succesors ===
=== Usages ===
v1086 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2820 y: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v1086 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 78]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1090 
=== Succesors ===
trueSuccessor: v1084 
falseSuccessor: v1085 
=== Usages ===
=== Predecessor ===
i2820 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1090 #trueSuccessor: v1084 #falseSuccessor: v1085  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B82" 
    xhandlers
    flags 
    probability 4598388767437917467
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1084 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:45) [bci: 97]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1296 
=== Usages ===
=== Predecessor ===
v1086 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1296  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1296 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: NodeIterator.current
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:45) [bci: 99]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2879 
value: a1572 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1193 
=== Usages ===
=== Predecessor ===
v1084 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2879 value: a1572 stateAfter: - lastLocationAccess: - #next: v1193  <|@  <|@
f <@*|@fixed>@ <|@
tid v1193 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v900 
=== Predecessor ===
v1296 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598388767437917467
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1085 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 81]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1081 
=== Usages ===
=== Predecessor ===
v1086 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1081  <|@  <|@
f <@~|@floating>@ <|@
tid a2980 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 65]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
op: Uncompress
stamp: a Lorg/graalvm/compiler/graph/Node;
=== Inputs ===
value: a2819 
=== Succesors ===
=== Usages ===
a1082 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2819  <|@  <|@
f <@*|@fixed>@ <|@
tid v1081 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1078 
=== Predecessor ===
v1085 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" "B27" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4607395966692658459
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v207 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 45]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2821 
=== Usages ===
=== Predecessor ===
v208 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2821  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2821 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: PredicatedProxyNodeIterator.iterator
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 47]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
nullCheck: false
stamp: n -
=== Inputs ===
stateBefore: - 
guard: - 
address: v2883 
=== Succesors ===
next: v2973 
=== Usages ===
a1298 v2973 
=== Predecessor ===
v207 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2883 #next: v2973  <|@  <|@
tid ?200 <|@
d <@d|@=== Debug Properties ===
bci: 42
code: ResolvedJavaMethodBytecode<PredicatedProxyNodeIterator.forward()>
duringCall: false
localsSize: 1
locksSize: 0
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 37]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
rethrowException: false
sourceFile: PredicatedProxyNodeIterator.java
sourceLine: 41
stackSize: 1
=== Inputs ===
outerFrameState: ?251 
values: a38 i199 
=== Succesors ===
=== Usages ===
v2973 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?251 values: a38 i199  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2973 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?200 
object: a2821 
=== Succesors ===
next: a211 
=== Usages ===
=== Predecessor ===
a2821 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?200 object: a2821 #next: a211  <|@  <|@
f <@~|@floating>@ <|@
tid a1298 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 47]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
op: Uncompress
stamp: a -
=== Inputs ===
value: a2821 
=== Succesors ===
=== Usages ===
v1302 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2821  <|@  <|@
tid v1302 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Interface
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 50]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
returnStamp: a Ljava/lang/Object;
signature: [Ljdk.vm.ci.meta.JavaType;@203366d2
stamp: void
targetMethod: HotSpotMethod<Iterator.next()>
=== Inputs ===
arguments: a1298 
=== Succesors ===
=== Usages ===
a211 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1298  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a211 <|@
d <@d|@=== Debug Properties ===
bci: 50
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 50]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
polymorphic: false
stamp: a Ljava/lang/Object;
targetMethod: Direct#Iterator.next
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1302 
stateDuring: ?2213 
=== Succesors ===
next: v1999 
=== Usages ===
?212 v1304 a1307 v2934 
=== Predecessor ===
v2973 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1302 stateDuring: ?2213 #next: v1999  <|@  <|@
f <@~|@floating>@ <|@
tid v1304 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 55]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
=== Inputs ===
value: a211 
=== Succesors ===
=== Usages ===
v1999 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a211  <|@  <|@
f <@*|@fixed>@ <|@
tid v1999 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:156) [bci: 15]
at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 55]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v1304 
=== Succesors ===
trueSuccessor: v1998 
falseSuccessor: v1997 
=== Usages ===
=== Predecessor ===
a211 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1304 #trueSuccessor: v1998 #falseSuccessor: v1997  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B29" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4592211856695183402
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1998 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:157) [bci: 18]
at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 55]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2332 
=== Usages ===
=== Predecessor ===
v1999 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2332  <|@  <|@
f <@*|@fixed>@ <|@
tid v2332 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 55]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2330 
=== Predecessor ===
v1998 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B30" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4606666085081297201
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1997 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:160) [bci: 29]
at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 55]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2822 
=== Usages ===
=== Predecessor ===
v1999 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2822  <|@  <|@
f <@~|@floating>@ <|@
tid v2934 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a211 
index: - 
=== Succesors ===
=== Usages ===
v2822 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a211 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2822 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:161) [bci: 40]
at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 55]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2934 
=== Succesors ===
next: v2823 
=== Usages ===
v2914 
=== Predecessor ===
v1997 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2934 #next: v2823  <|@  <|@
f <@~|@floating>@ <|@
tid v2914 <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v2822 
=== Succesors ===
=== Usages ===
v2823 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v2822  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2823 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: PrimarySupers:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:162) [bci: 54]
at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 55]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
nullCheck: false
stamp: Klass*
=== Inputs ===
stateBefore: - 
guard: - 
address: v2914 
=== Succesors ===
next: v2754 
=== Usages ===
v2003 
=== Predecessor ===
v2822 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2914 #next: v2754  <|@  <|@
f <@~|@floating>@ <|@
tid v2003 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:162) [bci: 58]
at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 55]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2823 
y: v1995 
=== Succesors ===
=== Usages ===
v2754 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2823 y: v1995  <|@  <|@
f <@*|@fixed>@ <|@
tid v2754 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 55]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2003 
=== Succesors ===
trueSuccessor: v2753 
falseSuccessor: v1744 
=== Usages ===
=== Predecessor ===
v2823 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2003 #trueSuccessor: v2753 #falseSuccessor: v1744  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4606666085081297201
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2753 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 55]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2341 
=== Usages ===
=== Predecessor ===
v2754 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2341  <|@  <|@
f <@*|@fixed>@ <|@
tid v2341 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 55]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2330 
=== Predecessor ===
v2753 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4607395966692658459
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2330 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 55]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2332 v2341 
=== Succesors ===
next: v1308 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2332 v2341 #next: v1308  <|@  <|@
f <@~|@floating>@ <|@
tid a1307 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 58]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
op: Compress
stamp: n Ljava/lang/Object;
=== Inputs ===
value: a211 
=== Succesors ===
=== Usages ===
v1308 a2732 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a211  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1308 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: NodeIterator.current
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 58]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2879 
value: a1307 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j2534 
=== Usages ===
=== Predecessor ===
v2330 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2879 value: a1307 stateAfter: - lastLocationAccess: - #next: j2534  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2534 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 58]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a38 
=== Succesors ===
next: v2540 
=== Usages ===
j2536 
=== Predecessor ===
v1308 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a38 #next: v2540  <|@  <|@
f <@~|@floating>@ <|@
tid j2536 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 58]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j2534 
y: i2535 
=== Succesors ===
=== Usages ===
v2935 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j2534 y: i2535  <|@  <|@
f <@~|@floating>@ <|@
tid v2935 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2536 
index: j2539 
=== Succesors ===
=== Usages ===
v2540 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2536 index: j2539  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2540 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 58]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2935 
value: i2541 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v218 
=== Usages ===
=== Predecessor ===
j2534 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2935 value: i2541 stateAfter: - lastLocationAccess: - #next: v218  <|@  <|@
f <@*|@fixed>@ <|@
tid v218 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 0]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
=== Inputs ===
loopBegin: v167 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2540 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v167  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1744 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 55]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v167 
=== Succesors ===
next: v1745 
=== Usages ===
=== Predecessor ===
v2754 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v167 #next: v1745  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1745 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 55]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v12 
=== Succesors ===
next: v1742 
=== Usages ===
=== Predecessor ===
v1744 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v12 #next: v1742  <|@  <|@
tid ?212 <|@
d <@d|@=== Debug Properties ===
bci: 55
code: ResolvedJavaMethodBytecode<PredicatedProxyNodeIterator.forward()>
duringCall: false
localsSize: 1
locksSize: 0
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 50]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
rethrowException: false
sourceFile: PredicatedProxyNodeIterator.java
sourceLine: 42
stackSize: 2
=== Inputs ===
outerFrameState: ?251 
values: a38 a38 a211 
=== Succesors ===
=== Usages ===
v1742 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?251 values: a38 a38 a211  <|@  <|@
f <@*|@fixed>@ <|@
tid v1742 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1306
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 55]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
reason: ClassCastException
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?212 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1745 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?212  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B33" "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599062645655061974
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v192 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 64]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v167 
=== Succesors ===
next: a2824 
=== Usages ===
=== Predecessor ===
v195 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v167 #next: a2824  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2824 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: NodeIterator.current
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 65]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
nullCheck: false
stamp: n Lorg/graalvm/compiler/graph/Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2879 
=== Succesors ===
next: v224 
=== Usages ===
a1279 v1571 v2882 a2979 
=== Predecessor ===
v192 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2879 #next: v224  <|@  <|@
f <@~|@floating>@ <|@
tid v1571 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 68]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
=== Inputs ===
value: a2824 
=== Succesors ===
=== Usages ===
v224 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2824  <|@  <|@
f <@*|@fixed>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 68]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1571 
=== Succesors ===
trueSuccessor: v222 
falseSuccessor: v223 
=== Usages ===
=== Predecessor ===
a2824 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1571 #trueSuccessor: v222 #falseSuccessor: v223  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B40" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594559046027691478
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:47) [bci: 102]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: v963 
=== Usages ===
=== Predecessor ===
v224 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v963  <|@  <|@
f <@~|@floating>@ <|@
tid a1279 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 65]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
op: Uncompress
stamp: a Lorg/graalvm/compiler/graph/Node;
=== Inputs ===
value: a2824 
=== Succesors ===
=== Usages ===
a1149 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2824  <|@  <|@
f <@*|@fixed>@ <|@
tid v963 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v961 
=== Predecessor ===
v222 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594559046027691478
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v223 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 71]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2825 
=== Usages ===
=== Predecessor ===
v224 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2825  <|@  <|@
f <@~|@floating>@ <|@
tid v2882 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2824 
=== Succesors ===
=== Usages ===
i2825 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2824  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2825 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Node.id
nodeSourcePosition: at org.graalvm.compiler.graph.Node.isAlive(Node.java:556) [bci: 1]
at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 75]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2882 
=== Succesors ===
next: v232 
=== Usages ===
v267 
=== Predecessor ===
v223 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2882 #next: v232  <|@  <|@
f <@~|@floating>@ <|@
tid v267 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.graph.Node.isAlive(Node.java:556) [bci: 4]
at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 75]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2825 
y: i17 
=== Succesors ===
=== Usages ===
v232 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2825 y: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v232 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 78]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v267 
=== Succesors ===
trueSuccessor: v230 
falseSuccessor: v231 
=== Usages ===
=== Predecessor ===
i2825 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v267 #trueSuccessor: v230 #falseSuccessor: v231  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B82" 
    xhandlers
    flags 
    probability 4590055446400320982
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:45) [bci: 97]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1283 
=== Usages ===
=== Predecessor ===
v232 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1283  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1283 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: NodeIterator.current
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:45) [bci: 99]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2879 
value: a1572 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1678 
=== Usages ===
=== Predecessor ===
v230 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2879 value: a1572 stateAfter: - lastLocationAccess: - #next: v1678  <|@  <|@
f <@*|@fixed>@ <|@
tid v1678 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v900 
=== Predecessor ===
v1283 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590055446400320982
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v231 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 81]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1079 
=== Usages ===
=== Predecessor ===
v232 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1079  <|@  <|@
f <@~|@floating>@ <|@
tid a2979 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 65]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
op: Uncompress
stamp: a Lorg/graalvm/compiler/graph/Node;
=== Inputs ===
value: a2824 
=== Succesors ===
=== Usages ===
a1082 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2824  <|@  <|@
f <@*|@fixed>@ <|@
tid v1079 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1078 
=== Predecessor ===
v231 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B24" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599736523872206480
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a1082 <|@
d <@d|@=== Debug Properties ===
stamp: a Lorg/graalvm/compiler/graph/Node;
valueDescription: a -
=== Inputs ===
merge: v1078 
values: a2979 a2980 
=== Succesors ===
=== Usages ===
v1314 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1078 values: a2979 a2980  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1078 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1079 v1081 
=== Succesors ===
next: a2826 
=== Usages ===
a1082 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1079 v1081 #next: a2826  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2826 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: PredicatedProxyNodeIterator.predicate
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 82]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
nullCheck: false
stamp: n -
=== Inputs ===
stateBefore: - 
guard: - 
address: v2881 
=== Succesors ===
next: v2974 
=== Usages ===
a1310 v2974 
=== Predecessor ===
v1078 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2881 #next: v2974  <|@  <|@
tid ?1080 <|@
d <@d|@=== Debug Properties ===
bci: 64
code: ResolvedJavaMethodBytecode<PredicatedProxyNodeIterator.forward()>
duringCall: false
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: PredicatedProxyNodeIterator.java
sourceLine: 44
stackSize: 0
=== Inputs ===
outerFrameState: ?251 
values: a38 
=== Succesors ===
=== Usages ===
v2974 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?251 values: a38  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2974 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?1080 
object: a2826 
=== Succesors ===
next: i236 
=== Usages ===
=== Predecessor ===
a2826 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?1080 object: a2826 #next: i236  <|@  <|@
f <@~|@floating>@ <|@
tid a1310 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 82]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
op: Uncompress
stamp: a -
=== Inputs ===
value: a2826 
=== Succesors ===
=== Usages ===
v1314 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2826  <|@  <|@
tid v1314 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Interface
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 89]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@6cd524e9
stamp: void
targetMethod: HotSpotMethod<NodePredicate.apply(Node)>
=== Inputs ===
arguments: a1310 a1082 
=== Succesors ===
=== Usages ===
i236 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1310 a1082  <|@  <|@
tid ?2215 <|@
d <@d|@=== Debug Properties ===
bci: 89
code: ResolvedJavaMethodBytecode<PredicatedProxyNodeIterator.forward()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: PredicatedProxyNodeIterator.java
sourceLine: 44
stackSize: 0
=== Inputs ===
outerFrameState: ?251 
values: a38 
=== Succesors ===
=== Usages ===
i236 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?251 values: a38  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i236 <|@
d <@d|@=== Debug Properties ===
bci: 89
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 89]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#NodePredicate.apply
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1314 
stateDuring: ?2215 
=== Succesors ===
next: v244 
=== Usages ===
v238 
=== Predecessor ===
v2974 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1314 stateDuring: ?2215 #next: v244  <|@  <|@
f <@~|@floating>@ <|@
tid v238 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 94]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i236 
y: i17 
=== Succesors ===
=== Usages ===
v244 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i236 y: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 94]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v238 
=== Succesors ===
trueSuccessor: v242 
falseSuccessor: v243 
=== Usages ===
=== Predecessor ===
i236 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v238 #trueSuccessor: v242 #falseSuccessor: v243  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B82" 
    xhandlers
    flags 
    probability 4595232924244835984
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v242 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:45) [bci: 97]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1315 
=== Usages ===
=== Predecessor ===
v244 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1315  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1315 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: NodeIterator.current
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:45) [bci: 99]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2879 
value: a1572 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1145 
=== Usages ===
=== Predecessor ===
v242 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2879 value: a1572 stateAfter: - lastLocationAccess: - #next: v1145  <|@  <|@
f <@*|@fixed>@ <|@
tid v1145 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v900 
=== Predecessor ===
v1315 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595232924244835984
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v243 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:47) [bci: 102]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2827 
=== Usages ===
=== Predecessor ===
v244 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2827  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2827 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: NodeIterator.current
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:39) [bci: 5]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
nullCheck: false
stamp: n Lorg/graalvm/compiler/graph/Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2879 
=== Succesors ===
next: v960 
=== Usages ===
a1317 
=== Predecessor ===
v243 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2879 #next: v960  <|@  <|@
f <@~|@floating>@ <|@
tid a1317 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:39) [bci: 5]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
op: Uncompress
stamp: a Lorg/graalvm/compiler/graph/Node;
=== Inputs ===
value: a2827 
=== Succesors ===
=== Usages ===
a1149 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2827  <|@  <|@
f <@*|@fixed>@ <|@
tid v960 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v961 
=== Predecessor ===
a2827 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B33" "B21" 
    successors "B41" "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4605756349488152116
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a1149 <|@
d <@d|@=== Debug Properties ===
stamp: a Lorg/graalvm/compiler/graph/Node;
valueDescription: a -
=== Inputs ===
merge: v961 
values: a1317 a1279 a1293 
=== Succesors ===
=== Usages ===
a1150 v1135 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v961 values: a1317 a1279 a1293  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v961 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v960 v963 v1099 
=== Succesors ===
next: v912 
=== Usages ===
a1149 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v960 v963 v1099 #next: v912  <|@  <|@
f <@~|@floating>@ <|@
tid v1135 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:39) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
=== Inputs ===
value: a1149 
=== Succesors ===
=== Usages ===
v912 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1149  <|@  <|@
f <@*|@fixed>@ <|@
tid v912 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Iterable.forEach(Iterable.java:74) [bci: 18]
stamp: void
trueSuccessorProbability: 0.610225267647409
=== Inputs ===
condition: v1135 
=== Succesors ===
trueSuccessor: v913 
falseSuccessor: v911 
=== Usages ===
=== Predecessor ===
v961 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1135 #trueSuccessor: v913 #falseSuccessor: v911  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B82" 
    xhandlers
    flags 
    probability 4602801416593737527
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v913 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Iterable.forEach(Iterable.java:77) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v902 
=== Usages ===
=== Predecessor ===
v912 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v902  <|@  <|@
f <@*|@fixed>@ <|@
tid v902 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v900 
=== Predecessor ===
v913 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599581485706735098
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v911 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Iterable.forEach(Iterable.java:74) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v434 
=== Usages ===
=== Predecessor ===
v912 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v434  <|@  <|@
tid ?336 <|@
d <@d|@=== Debug Properties ===
bci: 22
code: ResolvedJavaMethodBytecode<Iterable.forEach(Consumer)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Iterable.java
sourceLine: 74
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a2 a38 - 
=== Succesors ===
=== Usages ===
?409 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 a38 -  <|@  <|@
tid ?409 <|@
d <@d|@=== Debug Properties ===
bci: 1
code: ResolvedJavaMethodBytecode<NodeIterator.next()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: NodeIterator.java
sourceLine: 30
stackSize: 0
=== Inputs ===
outerFrameState: ?336 
values: - 
=== Succesors ===
=== Usages ===
?519 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?336 values: -  <|@  <|@
tid ?519 <|@
d <@d|@=== Debug Properties ===
bci: 1
code: ResolvedJavaMethodBytecode<NodeIterator.next()>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: NodeIterator.java
sourceLine: 44
stackSize: 0
=== Inputs ===
outerFrameState: ?409 
values: a38 - 
=== Succesors ===
=== Usages ===
?436 ?515 ?457 ?505 ?464 ?468 ?935 ?480 ?2219 ?2216 ?2217 ?2218 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?409 values: a38 -  <|@  <|@
tid ?2217 <|@
d <@d|@=== Debug Properties ===
bci: 37
code: ResolvedJavaMethodBytecode<PredicatedProxyNodeIterator.forward()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: PredicatedProxyNodeIterator.java
sourceLine: 41
stackSize: 0
=== Inputs ===
outerFrameState: ?519 
values: a38 
=== Succesors ===
=== Usages ===
i467 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?519 values: a38  <|@  <|@
tid ?464 <|@
d <@d|@=== Debug Properties ===
bci: 33
code: ResolvedJavaMethodBytecode<PredicatedProxyNodeIterator.forward()>
duringCall: false
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: PredicatedProxyNodeIterator.java
sourceLine: 41
stackSize: 0
=== Inputs ===
outerFrameState: ?519 
values: a38 
=== Succesors ===
=== Usages ===
v2976 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?519 values: a38  <|@  <|@
f <@*|@fixed>@ <|@
tid v434 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 0]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v435 
=== Predecessor ===
v911 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B61" 
    successors "B44" "B45" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4603428433579791241
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a1150 <|@
d <@d|@=== Debug Properties ===
stamp: a Lorg/graalvm/compiler/graph/Node;
valueDescription: a -
=== Inputs ===
merge: v435 
values: a1149 a479 
=== Succesors ===
=== Usages ===
v1325 v438 v2885 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v435 values: a1149 a479  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v435 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 1.7777777777777777
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 0]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v434 
=== Succesors ===
next: v441 
=== Usages ===
v460 v473 v486 a1150 v1773 v1767 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v434 #next: v441  <|@  <|@
f <@~|@floating>@ <|@
tid v438 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 4]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
=== Inputs ===
value: a1150 
=== Succesors ===
=== Usages ===
v441 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1150  <|@  <|@
f <@*|@fixed>@ <|@
tid v441 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 4]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v438 
=== Succesors ===
trueSuccessor: v439 
falseSuccessor: v440 
=== Usages ===
=== Predecessor ===
v435 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v438 #trueSuccessor: v439 #falseSuccessor: v440  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B49" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4598924833952420745
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v439 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 33]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v447 
=== Usages ===
=== Predecessor ===
v441 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v447  <|@  <|@
f <@*|@fixed>@ <|@
tid v447 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 33]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v448 
=== Predecessor ===
v439 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4598924833952420745
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v440 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 7]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2828 
=== Usages ===
=== Predecessor ===
v441 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2828  <|@  <|@
f <@~|@floating>@ <|@
tid v2885 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1150 
index: - 
=== Succesors ===
=== Usages ===
i2828 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1150 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2828 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Node.id
nodeSourcePosition: at org.graalvm.compiler.graph.Node.isAlive(Node.java:556) [bci: 1]
at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 11]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2885 
=== Succesors ===
next: v452 
=== Usages ===
v570 
=== Predecessor ===
v440 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2885 #next: v452  <|@  <|@
f <@~|@floating>@ <|@
tid v570 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.graph.Node.isAlive(Node.java:556) [bci: 4]
at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 11]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2828 
y: i17 
=== Succesors ===
=== Usages ===
v452 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2828 y: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v452 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 14]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v570 
=== Succesors ===
trueSuccessor: v451 
falseSuccessor: v450 
=== Usages ===
=== Predecessor ===
i2828 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v570 #trueSuccessor: v451 #falseSuccessor: v450  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B49" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4594421234325050249
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v451 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 33]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v449 
=== Usages ===
=== Predecessor ===
v452 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v449  <|@  <|@
f <@*|@fixed>@ <|@
tid v449 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 33]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v448 
=== Predecessor ===
v451 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B64" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4594421234325050249
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v450 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 17]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2829 
=== Usages ===
=== Predecessor ===
v452 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2829  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2829 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: PredicatedProxyNodeIterator.predicate
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 18]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
nullCheck: false
stamp: n -
=== Inputs ===
stateBefore: - 
guard: - 
address: v2881 
=== Succesors ===
next: v2975 
=== Usages ===
a1321 v2975 
=== Predecessor ===
v450 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2881 #next: v2975  <|@  <|@
tid ?436 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<PredicatedProxyNodeIterator.forward()>
duringCall: false
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: PredicatedProxyNodeIterator.java
sourceLine: 41
stackSize: 0
=== Inputs ===
outerFrameState: ?519 
values: a38 
=== Succesors ===
=== Usages ===
v2975 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?519 values: a38  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2975 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?436 
object: a2829 
=== Succesors ===
next: i456 
=== Usages ===
=== Predecessor ===
a2829 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?436 object: a2829 #next: i456  <|@  <|@
f <@~|@floating>@ <|@
tid a1321 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 18]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
op: Uncompress
stamp: a -
=== Inputs ===
value: a2829 
=== Succesors ===
=== Usages ===
v1325 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2829  <|@  <|@
tid v1325 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Interface
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 25]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@182d5ced
stamp: void
targetMethod: HotSpotMethod<NodePredicate.apply(Node)>
=== Inputs ===
arguments: a1321 a1150 
=== Succesors ===
=== Usages ===
i456 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1321 a1150  <|@  <|@
tid ?2216 <|@
d <@d|@=== Debug Properties ===
bci: 25
code: ResolvedJavaMethodBytecode<PredicatedProxyNodeIterator.forward()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: PredicatedProxyNodeIterator.java
sourceLine: 41
stackSize: 0
=== Inputs ===
outerFrameState: ?519 
values: a38 
=== Succesors ===
=== Usages ===
i456 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?519 values: a38  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i456 <|@
d <@d|@=== Debug Properties ===
bci: 25
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 25]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#NodePredicate.apply
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1325 
stateDuring: ?2216 
=== Succesors ===
next: v463 
=== Usages ===
?457 v458 
=== Predecessor ===
v2975 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1325 stateDuring: ?2216 #next: v463  <|@  <|@
f <@~|@floating>@ <|@
tid v458 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 30]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i456 
y: i17 
=== Succesors ===
=== Usages ===
v463 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i456 y: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v463 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 30]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v458 
=== Succesors ===
trueSuccessor: v462 
falseSuccessor: v460 
=== Usages ===
=== Predecessor ===
i456 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v458 #trueSuccessor: v462 #falseSuccessor: v460  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4589917634697679753
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v462 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 33]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v459 
=== Usages ===
=== Predecessor ===
v463 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v459  <|@  <|@
f <@*|@fixed>@ <|@
tid v459 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 33]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v448 
=== Predecessor ===
v462 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B44" "B46" "B48" 
    successors "B50" "B53" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4602771781825476888
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v448 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 33]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v447 v449 v459 
=== Succesors ===
next: a2830 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v447 v449 v459 #next: a2830  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2830 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: PredicatedProxyNodeIterator.iterator
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 34]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
nullCheck: false
stamp: n -
=== Inputs ===
stateBefore: - 
guard: - 
address: v2883 
=== Succesors ===
next: v2976 
=== Usages ===
a1329 v2976 
=== Predecessor ===
v448 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2883 #next: v2976  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2976 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?464 
object: a2830 
=== Succesors ===
next: i467 
=== Usages ===
=== Predecessor ===
a2830 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?464 object: a2830 #next: i467  <|@  <|@
f <@~|@floating>@ <|@
tid a1329 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 34]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
op: Uncompress
stamp: a -
=== Inputs ===
value: a2830 
=== Succesors ===
=== Usages ===
v1333 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2830  <|@  <|@
tid v1333 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Interface
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 37]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@f65fd71
stamp: void
targetMethod: HotSpotMethod<Iterator.hasNext()>
=== Inputs ===
arguments: a1329 
=== Succesors ===
=== Usages ===
i467 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1329  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i467 <|@
d <@d|@=== Debug Properties ===
bci: 37
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 37]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Iterator.hasNext
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1333 
stateDuring: ?2217 
=== Succesors ===
next: v476 
=== Usages ===
?468 v469 
=== Predecessor ===
v2976 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1333 stateDuring: ?2217 #next: v476  <|@  <|@
f <@~|@floating>@ <|@
tid v469 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 42]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i467 
y: i17 
=== Succesors ===
=== Usages ===
v476 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i467 y: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v476 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 42]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v469 
=== Succesors ===
trueSuccessor: v473 
falseSuccessor: v475 
=== Usages ===
=== Predecessor ===
i467 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v469 #trueSuccessor: v473 #falseSuccessor: v475  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598268182198106392
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v473 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 64]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v435 
=== Succesors ===
next: a2831 
=== Usages ===
=== Predecessor ===
v476 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v435 #next: a2831  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2831 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: NodeIterator.current
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 65]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
nullCheck: false
stamp: n Lorg/graalvm/compiler/graph/Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2879 
=== Succesors ===
next: v944 
=== Usages ===
a2225 v1575 
=== Predecessor ===
v473 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2879 #next: v944  <|@  <|@
f <@~|@floating>@ <|@
tid v1575 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 68]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
=== Inputs ===
value: a2831 
=== Succesors ===
=== Usages ===
v944 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2831  <|@  <|@
f <@*|@fixed>@ <|@
tid v944 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 68]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1575 
=== Succesors ===
trueSuccessor: v942 
falseSuccessor: v943 
=== Usages ===
=== Predecessor ===
a2831 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1575 #trueSuccessor: v942 #falseSuccessor: v943  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B56" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v942 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:47) [bci: 102]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2266 
=== Usages ===
=== Predecessor ===
v944 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2266  <|@  <|@
f <@~|@floating>@ <|@
tid i2267 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -297148
stableDimension: 0
stamp: i32 [-297148] ⇊00000000fffb7744 ⇈00000000fffb7744
stampKind: i32
value: int[-297148|0xfffffffffffb7744]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2268 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2266 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2265 
=== Predecessor ===
v942 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598268182198106392
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v943 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 71]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v936 
=== Usages ===
=== Predecessor ===
v944 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v936  <|@  <|@
f <@*|@fixed>@ <|@
tid v936 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v933 
=== Predecessor ===
v943 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B54" "B57" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4598268182198106392
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v475 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 45]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2832 
=== Usages ===
=== Predecessor ===
v476 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2832  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2832 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: PredicatedProxyNodeIterator.iterator
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 47]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
nullCheck: false
stamp: n -
=== Inputs ===
stateBefore: - 
guard: - 
address: v2883 
=== Succesors ===
next: v1769 
=== Usages ===
a1337 v1338 
=== Predecessor ===
v475 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2883 #next: v1769  <|@  <|@
f <@~|@floating>@ <|@
tid v1338 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 50]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
=== Inputs ===
value: a2832 
=== Succesors ===
=== Usages ===
v1769 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2832  <|@  <|@
f <@*|@fixed>@ <|@
tid v1769 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 50]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1338 
=== Succesors ===
trueSuccessor: v1767 
falseSuccessor: v1764 
=== Usages ===
=== Predecessor ===
a2832 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1338 #trueSuccessor: v1767 #falseSuccessor: v1764  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1767 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 50]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v435 
=== Succesors ===
next: v1768 
=== Usages ===
=== Predecessor ===
v1769 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v435 #next: v1768  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1768 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 50]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v12 
=== Succesors ===
next: v2271 
=== Usages ===
=== Predecessor ===
v1767 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v12 #next: v2271  <|@  <|@
f <@~|@floating>@ <|@
tid i2272 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -342795
stableDimension: 0
stamp: i32 [-342795] ⇊00000000fffac4f5 ⇈00000000fffac4f5
stampKind: i32
value: int[-342795|0xfffffffffffac4f5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2268 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2271 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2265 
=== Predecessor ===
v1768 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B51" "B55" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i2268 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-342795 - -297148] ⇊00000000fffa4444 ⇈00000000fffbf7f5
valueDescription: i32
=== Inputs ===
merge: v2265 
values: i2267 i2272 
=== Succesors ===
=== Usages ===
v2270 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2265 values: i2267 i2272  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2265 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2266 v2271 
=== Succesors ===
next: v2270 
=== Usages ===
i2268 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2266 v2271 #next: v2270  <|@  <|@
tid ?468 <|@
d <@d|@=== Debug Properties ===
bci: 42
code: ResolvedJavaMethodBytecode<PredicatedProxyNodeIterator.forward()>
duringCall: false
localsSize: 1
locksSize: 0
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 37]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
rethrowException: false
sourceFile: PredicatedProxyNodeIterator.java
sourceLine: 41
stackSize: 1
=== Inputs ===
outerFrameState: ?519 
values: a38 i467 
=== Succesors ===
=== Usages ===
v2270 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?519 values: a38 i467  <|@  <|@
f <@*|@fixed>@ <|@
tid v2270 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?468 
actionAndReason: i2268 
speculation: a2233 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2265 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?468 actionAndReason: i2268 speculation: a2233  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B58" "B59" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4598268182198106392
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1764 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 50]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: a479 
=== Usages ===
=== Predecessor ===
v1769 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a479  <|@  <|@
f <@~|@floating>@ <|@
tid a1337 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 47]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
op: Uncompress
stamp: a -
=== Inputs ===
value: a2832 
=== Succesors ===
=== Usages ===
v1341 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2832  <|@  <|@
tid v1341 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Interface
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 50]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
returnStamp: a Ljava/lang/Object;
signature: [Ljdk.vm.ci.meta.JavaType;@34db1fb9
stamp: void
targetMethod: HotSpotMethod<Iterator.next()>
=== Inputs ===
arguments: a1337 
=== Succesors ===
=== Usages ===
a479 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1337  <|@  <|@
tid ?2218 <|@
d <@d|@=== Debug Properties ===
bci: 50
code: ResolvedJavaMethodBytecode<PredicatedProxyNodeIterator.forward()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: PredicatedProxyNodeIterator.java
sourceLine: 42
stackSize: 1
=== Inputs ===
outerFrameState: ?519 
values: a38 a38 
=== Succesors ===
=== Usages ===
a479 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?519 values: a38 a38  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a479 <|@
d <@d|@=== Debug Properties ===
bci: 50
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 50]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
polymorphic: false
stamp: a Ljava/lang/Object;
targetMethod: Direct#Iterator.next
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1341 
stateDuring: ?2218 
=== Succesors ===
next: v2019 
=== Usages ===
?480 v1343 a1150 v2936 a1346 
=== Predecessor ===
v1764 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1341 stateDuring: ?2218 #next: v2019  <|@  <|@
f <@~|@floating>@ <|@
tid v1343 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 55]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
=== Inputs ===
value: a479 
=== Succesors ===
=== Usages ===
v2019 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a479  <|@  <|@
f <@*|@fixed>@ <|@
tid v2019 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:156) [bci: 15]
at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 55]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v1343 
=== Succesors ===
trueSuccessor: v2018 
falseSuccessor: v2017 
=== Usages ===
=== Predecessor ===
a479 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1343 #trueSuccessor: v2018 #falseSuccessor: v2017  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B61" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4583011721056744690
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2018 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:157) [bci: 18]
at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 55]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2348 
=== Usages ===
=== Predecessor ===
v2019 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2348  <|@  <|@
f <@*|@fixed>@ <|@
tid v2348 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 55]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2346 
=== Predecessor ===
v2018 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B62" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4597441832394896274
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2017 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:160) [bci: 29]
at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 55]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2833 
=== Usages ===
=== Predecessor ===
v2019 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2833  <|@  <|@
f <@~|@floating>@ <|@
tid v2936 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a479 
index: - 
=== Succesors ===
=== Usages ===
v2833 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a479 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2833 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:161) [bci: 40]
at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 55]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2936 
=== Succesors ===
next: v2834 
=== Usages ===
v2915 
=== Predecessor ===
v2017 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2936 #next: v2834  <|@  <|@
f <@~|@floating>@ <|@
tid v2915 <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v2833 
=== Succesors ===
=== Usages ===
v2834 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v2833  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2834 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: PrimarySupers:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:162) [bci: 54]
at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 55]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
nullCheck: false
stamp: Klass*
=== Inputs ===
stateBefore: - 
guard: - 
address: v2915 
=== Succesors ===
next: v2762 
=== Usages ===
v2023 
=== Predecessor ===
v2833 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2915 #next: v2762  <|@  <|@
f <@~|@floating>@ <|@
tid v2023 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:162) [bci: 58]
at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 55]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2834 
y: v1995 
=== Succesors ===
=== Usages ===
v2762 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2834 y: v1995  <|@  <|@
f <@*|@fixed>@ <|@
tid v2762 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 55]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2023 
=== Succesors ===
trueSuccessor: v2761 
falseSuccessor: v1773 
=== Usages ===
=== Predecessor ===
v2834 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2023 #trueSuccessor: v2761 #falseSuccessor: v1773  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4597441832394896274
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2761 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 55]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2357 
=== Usages ===
=== Predecessor ===
v2762 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2357  <|@  <|@
f <@*|@fixed>@ <|@
tid v2357 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 55]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2346 
=== Predecessor ===
v2761 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B58" "B60" 
    successors "B43" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4598268182198106392
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2346 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 55]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2348 v2357 
=== Succesors ===
next: v1347 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2348 v2357 #next: v1347  <|@  <|@
f <@~|@floating>@ <|@
tid a1346 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 58]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
op: Compress
stamp: n Ljava/lang/Object;
=== Inputs ===
value: a479 
=== Succesors ===
=== Usages ===
v1347 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a479  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1347 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: NodeIterator.current
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 58]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2879 
value: a1346 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j2547 
=== Usages ===
=== Predecessor ===
v2346 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2879 value: a1346 stateAfter: - lastLocationAccess: - #next: j2547  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2547 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 58]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a38 
=== Succesors ===
next: v2551 
=== Usages ===
j2548 
=== Predecessor ===
v1347 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a38 #next: v2551  <|@  <|@
f <@~|@floating>@ <|@
tid j2548 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 58]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j2547 
y: i2535 
=== Succesors ===
=== Usages ===
v2937 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j2547 y: i2535  <|@  <|@
f <@~|@floating>@ <|@
tid v2937 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2548 
index: j2539 
=== Succesors ===
=== Usages ===
v2551 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2548 index: j2539  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2551 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 58]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2937 
value: i2541 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v486 
=== Usages ===
=== Predecessor ===
j2547 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2937 value: i2541 stateAfter: - lastLocationAccess: - #next: v486  <|@  <|@
f <@*|@fixed>@ <|@
tid v486 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 0]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
=== Inputs ===
loopBegin: v435 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2551 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v435  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1773 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 55]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v435 
=== Succesors ===
next: v1774 
=== Usages ===
=== Predecessor ===
v2762 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v435 #next: v1774  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1774 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 55]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v12 
=== Succesors ===
next: v1771 
=== Usages ===
=== Predecessor ===
v1773 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v12 #next: v1771  <|@  <|@
tid ?480 <|@
d <@d|@=== Debug Properties ===
bci: 55
code: ResolvedJavaMethodBytecode<PredicatedProxyNodeIterator.forward()>
duringCall: false
localsSize: 1
locksSize: 0
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 50]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
rethrowException: false
sourceFile: PredicatedProxyNodeIterator.java
sourceLine: 42
stackSize: 2
=== Inputs ===
outerFrameState: ?519 
values: a38 a38 a479 
=== Succesors ===
=== Usages ===
v1771 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?519 values: a38 a38 a479  <|@  <|@
f <@*|@fixed>@ <|@
tid v1771 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1345
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 55]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
reason: ClassCastException
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?480 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1774 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?480  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B65" "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589917634697679753
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v460 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 64]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v435 
=== Succesors ===
next: a2835 
=== Usages ===
=== Predecessor ===
v463 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v435 #next: a2835  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2835 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: NodeIterator.current
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 65]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
nullCheck: false
stamp: n Lorg/graalvm/compiler/graph/Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2879 
=== Succesors ===
next: v492 
=== Usages ===
a2225 v1574 
=== Predecessor ===
v460 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2879 #next: v492  <|@  <|@
f <@~|@floating>@ <|@
tid v1574 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 68]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
=== Inputs ===
value: a2835 
=== Succesors ===
=== Usages ===
v492 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2835  <|@  <|@
f <@*|@fixed>@ <|@
tid v492 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 68]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1574 
=== Succesors ===
trueSuccessor: v490 
falseSuccessor: v491 
=== Usages ===
=== Predecessor ===
a2835 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1574 #trueSuccessor: v490 #falseSuccessor: v491  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v490 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:47) [bci: 102]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1161 
=== Usages ===
=== Predecessor ===
v492 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1161  <|@  <|@
tid ?457 <|@
d <@d|@=== Debug Properties ===
bci: 30
code: ResolvedJavaMethodBytecode<PredicatedProxyNodeIterator.forward()>
duringCall: false
localsSize: 1
locksSize: 0
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 25]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
rethrowException: false
sourceFile: PredicatedProxyNodeIterator.java
sourceLine: 41
stackSize: 1
=== Inputs ===
outerFrameState: ?519 
values: a38 i456 
=== Succesors ===
=== Usages ===
v1161 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?519 values: a38 i456  <|@  <|@
f <@*|@fixed>@ <|@
tid v1161 <|@
d <@d|@=== Debug Properties ===
action: InvalidateRecompile
debugId: 0
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:46) [bci: 13]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
reason: Unresolved
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?457 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v490 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?457  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589917634697679753
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v491 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 71]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v934 
=== Usages ===
=== Predecessor ===
v492 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v934  <|@  <|@
f <@*|@fixed>@ <|@
tid v934 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v933 
=== Predecessor ===
v491 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B52" 
    successors "B68" "B69" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599581485706735098
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a2225 <|@
d <@d|@=== Debug Properties ===
stamp: n Lorg/graalvm/compiler/graph/Node;
valueDescription: n -
=== Inputs ===
merge: v933 
values: a2835 a2831 
=== Succesors ===
=== Usages ===
a2226 v2886 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v933 values: a2835 a2831  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v933 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v934 v936 
=== Succesors ===
next: i2836 
=== Usages ===
a2225 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v934 v936 #next: i2836  <|@  <|@
tid ?935 <|@
d <@d|@=== Debug Properties ===
bci: 64
code: ResolvedJavaMethodBytecode<PredicatedProxyNodeIterator.forward()>
duringCall: false
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: PredicatedProxyNodeIterator.java
sourceLine: 44
stackSize: 0
=== Inputs ===
outerFrameState: ?519 
values: a38 
=== Succesors ===
=== Usages ===
v2308 i2836 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?519 values: a38  <|@  <|@
f <@~|@floating>@ <|@
tid v2886 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2225 
=== Succesors ===
=== Usages ===
i2836 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2225  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2836 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Node.id
nodeSourcePosition: at org.graalvm.compiler.graph.Node.isAlive(Node.java:556) [bci: 1]
at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 75]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?935 
guard: - 
address: v2886 
=== Succesors ===
next: v500 
=== Usages ===
v577 
=== Predecessor ===
v933 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?935 guard: - address: v2886 #next: v500  <|@  <|@
f <@~|@floating>@ <|@
tid v577 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.graph.Node.isAlive(Node.java:556) [bci: 4]
at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 75]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2836 
y: i17 
=== Succesors ===
=== Usages ===
v500 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2836 y: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v500 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 78]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v577 
=== Succesors ===
trueSuccessor: v498 
falseSuccessor: v499 
=== Usages ===
=== Predecessor ===
i2836 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v577 #trueSuccessor: v498 #falseSuccessor: v499  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B73" 
    xhandlers
    flags 
    probability 4595077886079364602
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v498 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:45) [bci: 97]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1351 
=== Usages ===
=== Predecessor ===
v500 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1351  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1351 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: NodeIterator.current
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:45) [bci: 99]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2879 
value: a1572 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2274 
=== Usages ===
=== Predecessor ===
v498 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2879 value: a1572 stateAfter: - lastLocationAccess: - #next: v2274  <|@  <|@
f <@~|@floating>@ <|@
tid i2275 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -286908
stableDimension: 0
stamp: i32 [-286908] ⇊00000000fffb9f44 ⇈00000000fffb9f44
stampKind: i32
value: int[-286908|0xfffffffffffb9f44]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2276 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2274 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2273 
=== Predecessor ===
v1351 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595077886079364602
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v499 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 81]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2837 
=== Usages ===
=== Predecessor ===
v500 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2837  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2837 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: PredicatedProxyNodeIterator.predicate
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 82]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
nullCheck: false
stamp: n -
=== Inputs ===
stateBefore: - 
guard: - 
address: v2881 
=== Succesors ===
next: v1785 
=== Usages ===
a1353 v1354 
=== Predecessor ===
v499 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2881 #next: v1785  <|@  <|@
f <@~|@floating>@ <|@
tid v1354 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 89]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
=== Inputs ===
value: a2837 
=== Succesors ===
=== Usages ===
v1785 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2837  <|@  <|@
f <@*|@fixed>@ <|@
tid v1785 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 89]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1354 
=== Succesors ===
trueSuccessor: v1784 
falseSuccessor: v1781 
=== Usages ===
=== Predecessor ===
a2837 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1354 #trueSuccessor: v1784 #falseSuccessor: v1781  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1784 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 89]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v12 
=== Succesors ===
next: v2308 
=== Usages ===
=== Predecessor ===
v1785 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v12 #next: v2308  <|@  <|@
f <@~|@floating>@ <|@
tid i2310 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -346891
stableDimension: 0
stamp: i32 [-346891] ⇊00000000fffab4f5 ⇈00000000fffab4f5
stampKind: i32
value: int[-346891|0xfffffffffffab4f5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2308 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2308 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?935 
actionAndReason: i2310 
speculation: a2233 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1784 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?935 actionAndReason: i2310 speculation: a2233  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" "B74" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595077886079364602
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1781 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 89]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: i504 
=== Usages ===
=== Predecessor ===
v1785 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i504  <|@  <|@
f <@~|@floating>@ <|@
tid a1353 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 82]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
op: Uncompress
stamp: a -
=== Inputs ===
value: a2837 
=== Succesors ===
=== Usages ===
v1357 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2837  <|@  <|@
f <@~|@floating>@ <|@
tid a2226 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 65]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
op: Uncompress
stamp: a Lorg/graalvm/compiler/graph/Node;
=== Inputs ===
value: a2225 
=== Succesors ===
=== Usages ===
v1357 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2225  <|@  <|@
tid v1357 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Interface
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 89]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@716c87a7
stamp: void
targetMethod: HotSpotMethod<NodePredicate.apply(Node)>
=== Inputs ===
arguments: a1353 a2226 
=== Succesors ===
=== Usages ===
i504 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1353 a2226  <|@  <|@
tid ?2219 <|@
d <@d|@=== Debug Properties ===
bci: 89
code: ResolvedJavaMethodBytecode<PredicatedProxyNodeIterator.forward()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: PredicatedProxyNodeIterator.java
sourceLine: 44
stackSize: 0
=== Inputs ===
outerFrameState: ?519 
values: a38 
=== Succesors ===
=== Usages ===
i504 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?519 values: a38  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i504 <|@
d <@d|@=== Debug Properties ===
bci: 89
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 89]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#NodePredicate.apply
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1357 
stateDuring: ?2219 
=== Succesors ===
next: v512 
=== Usages ===
?505 v506 
=== Predecessor ===
v1781 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1357 stateDuring: ?2219 #next: v512  <|@  <|@
f <@~|@floating>@ <|@
tid v506 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 94]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i504 
y: i17 
=== Succesors ===
=== Usages ===
v512 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i504 y: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v512 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 94]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v506 
=== Succesors ===
trueSuccessor: v510 
falseSuccessor: v511 
=== Usages ===
=== Predecessor ===
i504 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v506 #trueSuccessor: v510 #falseSuccessor: v511  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B73" 
    xhandlers
    flags 
    probability 4590574286451994106
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v510 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:45) [bci: 97]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1358 
=== Usages ===
=== Predecessor ===
v512 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1358  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1358 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: NodeIterator.current
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:45) [bci: 99]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2879 
value: a1572 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2279 
=== Usages ===
=== Predecessor ===
v510 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2879 value: a1572 stateAfter: - lastLocationAccess: - #next: v2279  <|@  <|@
f <@~|@floating>@ <|@
tid i2280 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -267196
stableDimension: 0
stamp: i32 [-267196] ⇊00000000fffbec44 ⇈00000000fffbec44
stampKind: i32
value: int[-267196|0xfffffffffffbec44]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2276 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2279 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2273 
=== Predecessor ===
v1358 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B68" "B72" 
    successors 
    xhandlers
    flags 
    probability 4598032818973779191
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i2276 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-286908 - -267196] ⇊00000000fffb8c44 ⇈00000000fffbff44
valueDescription: i32
=== Inputs ===
merge: v2273 
values: i2275 i2280 
=== Succesors ===
=== Usages ===
v2278 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2273 values: i2275 i2280  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2273 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2274 v2279 
=== Succesors ===
next: v2278 
=== Usages ===
i2276 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2274 v2279 #next: v2278  <|@  <|@
tid ?515 <|@
d <@d|@=== Debug Properties ===
bci: 102
code: ResolvedJavaMethodBytecode<PredicatedProxyNodeIterator.forward()>
duringCall: false
localsSize: 1
locksSize: 0
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:45) [bci: 99]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
rethrowException: false
sourceFile: PredicatedProxyNodeIterator.java
sourceLine: 47
stackSize: 0
=== Inputs ===
outerFrameState: ?519 
values: - 
=== Succesors ===
=== Usages ===
v2278 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?519 values: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v2278 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?515 
actionAndReason: i2276 
speculation: a2233 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2273 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?515 actionAndReason: i2276 speculation: a2233  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590574286451994106
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v511 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:47) [bci: 102]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2838 
=== Usages ===
=== Predecessor ===
v512 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2838  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2838 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: NodeIterator.current
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:45) [bci: 5]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
nullCheck: false
stamp: n Lorg/graalvm/compiler/graph/Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2879 
=== Succesors ===
next: v1790 
=== Usages ===
a1360 v1576 
=== Predecessor ===
v511 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2879 #next: v1790  <|@  <|@
f <@~|@floating>@ <|@
tid v1576 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:46) [bci: 13]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
=== Inputs ===
value: a2838 
=== Succesors ===
=== Usages ===
v1790 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2838  <|@  <|@
f <@*|@fixed>@ <|@
tid v1790 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:46) [bci: 13]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1576 
=== Succesors ===
trueSuccessor: v1789 
falseSuccessor: v1786 
=== Usages ===
=== Predecessor ===
a2838 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1576 #trueSuccessor: v1789 #falseSuccessor: v1786  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1789 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:46) [bci: 13]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v12 
=== Succesors ===
next: v1787 
=== Usages ===
=== Predecessor ===
v1790 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v12 #next: v1787  <|@  <|@
tid ?505 <|@
d <@d|@=== Debug Properties ===
bci: 94
code: ResolvedJavaMethodBytecode<PredicatedProxyNodeIterator.forward()>
duringCall: false
localsSize: 1
locksSize: 0
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 89]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
rethrowException: false
sourceFile: PredicatedProxyNodeIterator.java
sourceLine: 44
stackSize: 1
=== Inputs ===
outerFrameState: ?519 
values: a38 i504 
=== Succesors ===
=== Usages ===
v1787 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?519 values: a38 i504  <|@  <|@
f <@*|@fixed>@ <|@
tid v1787 <|@
d <@d|@=== Debug Properties ===
action: InvalidateRecompile
debugId: 1361
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:46) [bci: 13]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
reason: Unresolved
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?505 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1789 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?505  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590574286451994106
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1786 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:46) [bci: 13]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1362 
=== Usages ===
=== Predecessor ===
v1790 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1362  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1362 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: NodeIterator.current
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:49) [bci: 26]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2879 
value: a1572 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2839 
=== Usages ===
=== Predecessor ===
v1786 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2879 value: a1572 stateAfter: - lastLocationAccess: - #next: v2839  <|@  <|@
f <@~|@floating>@ <|@
tid v2982 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v2839 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2839 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2982 
=== Succesors ===
next: v1057 
=== Usages ===
v2712 
=== Predecessor ===
v1362 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2982 #next: v1057  <|@  <|@
f <@~|@floating>@ <|@
tid v2712 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2839 
y: v2711 
=== Succesors ===
=== Usages ===
v1057 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2839 y: v2711  <|@  <|@
f <@~|@floating>@ <|@
tid a1360 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:45) [bci: 5]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
op: Uncompress
stamp: a Lorg/graalvm/compiler/graph/Node;
=== Inputs ===
value: a2838 
=== Succesors ===
=== Usages ===
a955 a954 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2838  <|@  <|@
f <@*|@fixed>@ <|@
tid v1057 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$90/1190971543; target_method=accept target_method_class=Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$90/1190971543; position=at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
trueSuccessorProbability: 0.5456716749520927
=== Inputs ===
condition: v2712 
=== Succesors ===
trueSuccessor: v1055 
falseSuccessor: v1056 
=== Usages ===
=== Predecessor ===
v2839 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2712 #trueSuccessor: v1055 #falseSuccessor: v1056  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B86" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586610513763259408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1055 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$90/1190971543; target_method=accept target_method_class=Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$90/1190971543; position=at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1058 
=== Usages ===
=== Predecessor ===
v1057 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1058  <|@  <|@
f <@*|@fixed>@ <|@
tid v1058 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v946 
=== Predecessor ===
v1055 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B173" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4585530859885987812
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1056 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1059 
=== Usages ===
=== Predecessor ===
v1057 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1059  <|@  <|@
f <@*|@fixed>@ <|@
tid v1059 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v949 
=== Predecessor ===
v1056 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B80" "B184" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598932903126947845
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1795 
=== Usages ===
=== Predecessor ===
v72 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1795  <|@  <|@
f <@~|@floating>@ <|@
tid v2710 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2814 
y: v2705 
=== Succesors ===
=== Usages ===
v1795 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2814 y: v2705  <|@  <|@
f <@*|@fixed>@ <|@
tid v1795 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeUsageIterator; target_method=hasNext target_method_class=Lorg/graalvm/compiler/graph/NodeUsageIterator; position=at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2710 
=== Succesors ===
trueSuccessor: v1791 
falseSuccessor: v1794 
=== Usages ===
=== Predecessor ===
v71 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2710 #trueSuccessor: v1791 #falseSuccessor: v1794  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B81" "B84" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598932903126947845
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1791 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeUsageIterator; target_method=hasNext target_method_class=Lorg/graalvm/compiler/graph/NodeUsageIterator; position=at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2840 
=== Usages ===
=== Predecessor ===
v1795 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2840  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2840 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: NodeUsageIterator.current
nodeSourcePosition: at org.graalvm.compiler.graph.NodeUsageIterator.hasNext(NodeUsageIterator.java:56) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
nullCheck: false
stamp: n Lorg/graalvm/compiler/graph/Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2881 
=== Succesors ===
next: v23 
=== Usages ===
v1577 
=== Predecessor ===
v1791 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2881 #next: v23  <|@  <|@
f <@~|@floating>@ <|@
tid v1577 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeUsageIterator.hasNext(NodeUsageIterator.java:56) [bci: 4]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
=== Inputs ===
value: a2840 
=== Succesors ===
=== Usages ===
v23 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2840  <|@  <|@
f <@*|@fixed>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Iterable.forEach(Iterable.java:74) [bci: 18]
stamp: void
trueSuccessorProbability: 0.610225267647409
=== Inputs ===
condition: v1577 
=== Succesors ===
trueSuccessor: v899 
falseSuccessor: v22 
=== Usages ===
=== Predecessor ===
a2840 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1577 #trueSuccessor: v899 #falseSuccessor: v22  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B82" 
    xhandlers
    flags 
    probability 4595589156199348280
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v899 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Iterable.forEach(Iterable.java:77) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v901 
=== Usages ===
=== Predecessor ===
v23 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v901  <|@  <|@
f <@*|@fixed>@ <|@
tid v901 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v900 
=== Predecessor ===
v899 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" "B41" "B38" "B23" "B35" 
    successors "B83" 
    xhandlers
    flags 
    probability 4608068898668341784
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v900 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v901 v902 v1145 v1193 v1678 
=== Succesors ===
next: v20 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v901 v902 v1145 v1193 v1678 #next: v20  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors 
    xhandlers
    flags 
    probability 4608068898668341784
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Iterable.forEach(Iterable.java:77) [bci: 38]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v12 
=== Succesors ===
next: v31 
=== Usages ===
=== Predecessor ===
v900 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v12 #next: v31  <|@  <|@
f <@*|@fixed>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Iterable.forEach(Iterable.java:77) [bci: 38]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B85" "B172" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592867281681706917
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Iterable.forEach(Iterable.java:74) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: a25 
=== Usages ===
=== Predecessor ===
v23 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a25  <|@  <|@
tid v1367 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Interface
nodeSourcePosition: at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
returnStamp: a Ljava/lang/Object;
signature: [Ljdk.vm.ci.meta.JavaType;@3547753
stamp: void
targetMethod: HotSpotMethod<Iterator.next()>
=== Inputs ===
arguments: a38 
=== Succesors ===
=== Usages ===
a25 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a38  <|@  <|@
tid ?2214 <|@
d <@d|@=== Debug Properties ===
bci: 22
code: ResolvedJavaMethodBytecode<Iterable.forEach(Consumer)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Iterable.java
sourceLine: 74
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a2 a38 - 
=== Succesors ===
=== Usages ===
a25 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 a38 -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a25 <|@
d <@d|@=== Debug Properties ===
bci: 22
nodeSourcePosition: at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
polymorphic: false
stamp: a Ljava/lang/Object;
targetMethod: Direct#Iterator.next
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1367 
stateDuring: ?2214 
=== Succesors ===
next: v2841 
=== Usages ===
a955 a954 
=== Predecessor ===
v22 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1367 stateDuring: ?2214 #next: v2841  <|@  <|@
f <@~|@floating>@ <|@
tid v2983 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v2841 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2841 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2983 
=== Succesors ===
next: v95 
=== Usages ===
v2800 
=== Predecessor ===
a25 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2983 #next: v95  <|@  <|@
f <@~|@floating>@ <|@
tid v2800 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2841 
y: v2711 
=== Succesors ===
=== Usages ===
v95 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2841 y: v2711  <|@  <|@
f <@*|@fixed>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$90/1190971543; target_method=accept target_method_class=Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$90/1190971543; position=at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
trueSuccessorProbability: 0.5456716749520927
=== Inputs ===
condition: v2800 
=== Succesors ===
trueSuccessor: v89 
falseSuccessor: v94 
=== Usages ===
=== Predecessor ===
v2841 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2800 #trueSuccessor: v89 #falseSuccessor: v94  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B86" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589112958858568504
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$90/1190971543; target_method=accept target_method_class=Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$90/1190971543; position=at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v947 
=== Usages ===
=== Predecessor ===
v95 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v947  <|@  <|@
f <@*|@fixed>@ <|@
tid v947 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v946 
=== Predecessor ===
v89 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" "B77" 
    successors "B87" "B88" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592365335938284452
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a954 <|@
d <@d|@=== Debug Properties ===
stamp: a -
valueDescription: a -
=== Inputs ===
merge: v946 
values: a25 a1360 
=== Succesors ===
=== Usages ===
?306 ?354 v2938 v337 v2893 ?413 ?416 v2892 ?983 v2888 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v946 values: a25 a1360  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v946 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v947 v1058 
=== Succesors ===
next: v2057 
=== Usages ===
a954 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v947 v1058 #next: v2057  <|@  <|@
f <@~|@floating>@ <|@
tid v337 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
value: a954 
=== Succesors ===
=== Usages ===
v1805 v2057 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a954  <|@  <|@
f <@*|@fixed>@ <|@
tid v2057 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 15]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 5]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v337 
=== Succesors ===
trueSuccessor: v2056 
falseSuccessor: v2055 
=== Usages ===
=== Predecessor ===
v946 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v337 #trueSuccessor: v2056 #falseSuccessor: v2055  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577314354001149058
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2056 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 18]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 5]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2364 
=== Usages ===
=== Predecessor ===
v2057 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2364  <|@  <|@
f <@*|@fixed>@ <|@
tid v2364 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 5]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2362 
=== Predecessor ===
v2056 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B89" "B170" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591595244410772500
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2055 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:141) [bci: 28]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 5]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2842 
=== Usages ===
=== Predecessor ===
v2057 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2842  <|@  <|@
f <@~|@floating>@ <|@
tid v2938 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a954 
index: - 
=== Succesors ===
=== Usages ===
v2842 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a954 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2842 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 5]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2938 
=== Succesors ===
next: v2770 
=== Usages ===
v2716 
=== Predecessor ===
v2055 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2938 #next: v2770  <|@  <|@
f <@~|@floating>@ <|@
tid v2715 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 5]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
rawvalue: meta{HotSpotType<Lorg/graalvm/compiler/nodes/FrameState;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lorg/graalvm/compiler/nodes/FrameState;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2716 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2716 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 5]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2842 
y: v2715 
=== Succesors ===
=== Usages ===
v2770 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2842 y: v2715  <|@  <|@
f <@*|@fixed>@ <|@
tid v2770 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 5]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2716 
=== Succesors ===
trueSuccessor: v2769 
falseSuccessor: v1799 
=== Usages ===
=== Predecessor ===
v2842 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2716 #trueSuccessor: v2769 #falseSuccessor: v1799  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591595244410772500
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2769 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 5]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2373 
=== Usages ===
=== Predecessor ===
v2770 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2373  <|@  <|@
f <@*|@fixed>@ <|@
tid v2373 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 5]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2362 
=== Predecessor ===
v2769 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B87" "B89" 
    successors "B91" "B92" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592365335938284452
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2362 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 5]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2364 v2373 
=== Succesors ===
next: v1805 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2364 v2373 #next: v1805  <|@  <|@
f <@*|@fixed>@ <|@
tid v1805 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v337 
=== Succesors ===
trueSuccessor: v1804 
falseSuccessor: v1801 
=== Usages ===
=== Predecessor ===
v2362 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v337 #trueSuccessor: v1804 #falseSuccessor: v1801  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B171" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1804 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v12 
=== Succesors ===
next: v2247 
=== Usages ===
=== Predecessor ===
v1805 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v12 #next: v2247  <|@  <|@
f <@~|@floating>@ <|@
tid i2248 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -351755
stableDimension: 0
stamp: i32 [-351755] ⇊00000000fffaa1f5 ⇈00000000fffaa1f5
stampKind: i32
value: int[-351755|0xfffffffffffaa1f5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2244 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2247 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2241 
=== Predecessor ===
v1804 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B93" "B94" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592365335938284452
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1801 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2843 
=== Usages ===
=== Predecessor ===
v1805 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2843  <|@  <|@
f <@~|@floating>@ <|@
tid v2887 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a2843 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2843 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: 1190971543.arg$1
nodeSourcePosition: at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
nullCheck: false
stamp: n# Lorg/graalvm/compiler/graph/NodeBitMap;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2887 
=== Succesors ===
next: v1810 
=== Usages ===
?538 v1578 v2099 v2137 v2889 ?727 ?591 
=== Predecessor ===
v1801 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2887 #next: v1810  <|@  <|@
f <@~|@floating>@ <|@
tid v1578 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.virtual.EscapeObjectState.applyToVirtual(EscapeObjectState.java:58) [bci: 2]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:656) [bci: 43]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
value: a2843 
=== Succesors ===
=== Usages ===
v1810 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2843  <|@  <|@
f <@*|@fixed>@ <|@
tid v1810 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:653) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1578 
=== Succesors ===
trueSuccessor: v1809 
falseSuccessor: v1806 
=== Usages ===
=== Predecessor ===
a2843 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1578 #trueSuccessor: v1809 #falseSuccessor: v1806  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B171" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1809 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:653) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v12 
=== Succesors ===
next: v2249 
=== Usages ===
=== Predecessor ===
v1810 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v12 #next: v2249  <|@  <|@
f <@~|@floating>@ <|@
tid i2250 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -352011
stableDimension: 0
stamp: i32 [-352011] ⇊00000000fffaa0f5 ⇈00000000fffaa0f5
stampKind: i32
value: int[-352011|0xfffffffffffaa0f5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2244 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2249 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2241 
=== Predecessor ===
v1809 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B95" "B96" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592365335938284452
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1806 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:653) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2844 
=== Usages ===
=== Predecessor ===
v1810 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2844  <|@  <|@
f <@~|@floating>@ <|@
tid v2889 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2843 
=== Succesors ===
=== Usages ===
a2844 a2869 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2843  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2844 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: NodeBitMap.bits
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 30]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:653) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
nullCheck: false
stamp: n# [J
=== Inputs ===
stateBefore: - 
guard: - 
address: v2889 
=== Succesors ===
next: v1815 
=== Usages ===
a1381 v1382 v2890 
=== Predecessor ===
v1806 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2889 #next: v1815  <|@  <|@
f <@~|@floating>@ <|@
tid v1382 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 38]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:653) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
value: a2844 
=== Succesors ===
=== Usages ===
v1815 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2844  <|@  <|@
f <@*|@fixed>@ <|@
tid v1815 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 38]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:653) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1382 
=== Succesors ===
trueSuccessor: v1814 
falseSuccessor: v1811 
=== Usages ===
=== Predecessor ===
a2844 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1382 #trueSuccessor: v1814 #falseSuccessor: v1811  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B171" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1814 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 38]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:653) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v12 
=== Succesors ===
next: v2251 
=== Usages ===
=== Predecessor ===
v1815 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v12 #next: v2251  <|@  <|@
f <@~|@floating>@ <|@
tid i2252 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -354059
stableDimension: 0
stamp: i32 [-354059] ⇊00000000fffa98f5 ⇈00000000fffa98f5
stampKind: i32
value: int[-354059|0xfffffffffffa98f5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2244 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2251 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2241 
=== Predecessor ===
v1814 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" "B169" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592365335938284452
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1811 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 38]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:653) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2845 
=== Usages ===
=== Predecessor ===
v1815 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2845  <|@  <|@
f <@~|@floating>@ <|@
tid v2890 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2844 
=== Succesors ===
=== Usages ===
i2845 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2844  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2845 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 38]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:653) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v2890 
=== Succesors ===
next: i2846 
=== Usages ===
v1475 v1397 v1452 
=== Predecessor ===
v1811 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2890 #next: i2846  <|@  <|@
f <@~|@floating>@ <|@
tid v2888 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a954 
index: - 
=== Succesors ===
=== Usages ===
i2846 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a954 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2846 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Node.id
nodeSourcePosition: at org.graalvm.compiler.graph.Node.id(Node.java:284) [bci: 1]
at org.graalvm.compiler.graph.NodeIdAccessor.getNodeId(NodeIdAccessor.java:61) [bci: 22]
at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:95) [bci: 25]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:653) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2888 
=== Succesors ===
next: v1820 
=== Usages ===
?538 j535 i532 
=== Predecessor ===
i2845 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2888 #next: v1820  <|@  <|@
f <@~|@floating>@ <|@
tid i531 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 34]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:653) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
rawvalue: 6
stableDimension: 0
stamp: i32 [6] ⇊0000000000000006 ⇈0000000000000006
stampKind: i32
value: int[6|0x6]
=== Inputs ===
=== Succesors ===
=== Usages ===
i532 i558 i722 i747 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i532 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 36]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:653) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: i32 [-33554432 - 33554431]
=== Inputs ===
x: i2846 
y: i531 
=== Succesors ===
=== Usages ===
v1397 v2891 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i2846 y: i531  <|@  <|@
f <@~|@floating>@ <|@
tid v1397 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 43]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:653) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i532 
y: i2845 
=== Succesors ===
=== Usages ===
v1820 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i532 y: i2845  <|@  <|@
f <@*|@fixed>@ <|@
tid v1820 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 43]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:653) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1397 
=== Succesors ===
trueSuccessor: v1816 
falseSuccessor: v1819 
=== Usages ===
=== Predecessor ===
i2846 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1397 #trueSuccessor: v1816 #falseSuccessor: v1819  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B98" "B101" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592365335938284452
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1816 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 43]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:653) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2847 
=== Usages ===
j2847 v1404 
=== Predecessor ===
v1820 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2847  <|@  <|@
f <@~|@floating>@ <|@
tid a1381 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 30]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:653) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
op: Uncompress
stamp: a# [J
=== Inputs ===
value: a2844 
=== Succesors ===
=== Usages ===
v2900 v2891 v2902 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2844  <|@  <|@
f <@~|@floating>@ <|@
tid v2891 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: a1381 
index: i532 
=== Succesors ===
=== Usages ===
v1404 j2847 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1381 index: i532  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2847 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: long
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 38]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:653) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: v1816 
address: v2891 
=== Succesors ===
next: v1404 
=== Usages ===
j536 
=== Predecessor ===
v1816 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1816 address: v2891 #next: v1404  <|@  <|@
f <@~|@floating>@ <|@
tid j534 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 39]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:653) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
j535 j560 j724 j749 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j535 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 41]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:653) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: i64
=== Inputs ===
x: j534 
y: i2846 
=== Succesors ===
=== Usages ===
j536 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j534 y: i2846  <|@  <|@
f <@~|@floating>@ <|@
tid j536 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 42]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:653) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: i64
=== Inputs ===
x: j535 
y: j2847 
=== Succesors ===
=== Usages ===
v1404 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: j535 y: j2847  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1404 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: long
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 43]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:653) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1816 
address: v2891 
value: j536 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a2848 
=== Usages ===
=== Predecessor ===
j2847 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1816 address: v2891 value: j536 stateAfter: - lastLocationAccess: - #next: a2848  <|@  <|@
f <@~|@floating>@ <|@
tid v2893 <|@
d <@d|@=== Debug Properties ===
displacement: 68
scale: Times1
stamp: void*
=== Inputs ===
base: a954 
index: - 
=== Succesors ===
=== Usages ===
a2848 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a954 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2848 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FrameState.outerFrameState
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.outerFrameState(FrameState.java:234) [bci: 1]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:659) [bci: 50]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
nullCheck: false
stamp: n# Lorg/graalvm/compiler/nodes/FrameState;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2893 
=== Succesors ===
next: a2849 
=== Usages ===
v1586 ?649 v2901 v2903 v2904 ?663 ?2222 ?694 ?697 
=== Predecessor ===
v1404 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2893 #next: a2849  <|@  <|@
f <@~|@floating>@ <|@
tid v2892 <|@
d <@d|@=== Debug Properties ===
displacement: 80
scale: Times1
stamp: void*
=== Inputs ===
base: a954 
index: - 
=== Succesors ===
=== Usages ===
a2849 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a954 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2849 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FrameState.virtualObjectMappings
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:654) [bci: 8]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
nullCheck: false
stamp: n# Lorg/graalvm/compiler/graph/NodeInputList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2892 
=== Succesors ===
next: v347 
=== Usages ===
?626 v1581 v2894 v2895 v2896 
=== Predecessor ===
a2848 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2892 #next: v347  <|@  <|@
f <@~|@floating>@ <|@
tid v1581 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:654) [bci: 11]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
value: a2849 
=== Succesors ===
=== Usages ===
v347 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2849  <|@  <|@
f <@~|@floating>@ <|@
tid v1586 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:659) [bci: 53]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
value: a2848 
=== Succesors ===
=== Usages ===
v385 v992 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2848  <|@  <|@
tid ?142 <|@
d <@d|@=== Debug Properties ===
bci: 30
code: ResolvedJavaMethodBytecode<Iterable.forEach(Consumer)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Iterable.java
sourceLine: 75
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a2 a38 - 
=== Succesors ===
=== Usages ===
?331 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 a38 -  <|@  <|@
tid ?331 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<1190971543.accept(Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
stackSize: 0
=== Inputs ===
outerFrameState: ?142 
values: - - 
=== Succesors ===
=== Usages ===
?392 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?142 values: - -  <|@  <|@
tid ?392 <|@
d <@d|@=== Debug Properties ===
bci: 7
code: ResolvedJavaMethodBytecode<LoopFragment.lambda$computeNodes$1(NodeBitMap, FrameState)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: LoopFragment.java
sourceLine: 210
stackSize: 0
=== Inputs ===
outerFrameState: ?331 
values: - - 
=== Succesors ===
=== Usages ===
?416 ?687 ?354 ?983 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?331 values: - -  <|@  <|@
tid a590 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@237a9c3d
hasIdentity: true
objectId: 2
stamp: a!# Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$92/1492729447;
type: HotSpotType<Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$92/1492729447;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?413 ?416 ?591 ?354 ?694 ?663 ?649 ?2222 ?697 ?983 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?416 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<FrameState.applyToVirtual(VirtualState$VirtualClosure)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: FrameState.java
sourceLine: 653
stackSize: 0
=== Inputs ===
outerFrameState: ?392 
values: a954 a590 - - 
=== Succesors ===
=== Usages ===
?413 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?392 values: a954 a590 - -  <|@  <|@
tid ?413 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<1492729447.apply(VirtualState)>
duringCall: true
localsSize: 2
locksSize: 0
nodeSourcePosition: at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:653) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
rethrowException: false
stackSize: 0
=== Inputs ===
outerFrameState: ?416 
values: a590 a954 
=== Succesors ===
=== Usages ===
?540 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?416 values: a590 a954  <|@  <|@
tid ?540 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<LoopFragment.lambda$null$0(NodeBitMap, VirtualState)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: LoopFragment.java
sourceLine: 210
stackSize: 0
=== Inputs ===
outerFrameState: ?413 
values: - - 
=== Succesors ===
=== Usages ===
?538 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?413 values: - -  <|@  <|@
tid ?591 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a590 
values: a2843 
=== Succesors ===
=== Usages ===
?538 ?354 ?983 ?663 ?2222 ?727 ?649 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a590 values: a2843  <|@  <|@
tid ?538 <|@
d <@d|@=== Debug Properties ===
bci: 44
code: ResolvedJavaMethodBytecode<NodeBitMap.mark(Node)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 43]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:653) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
rethrowException: false
sourceFile: NodeBitMap.java
sourceLine: 97
stackSize: 0
=== Inputs ===
outerFrameState: ?540 
values: a2843 - i2846 
virtualObjectMappings: ?591 
=== Succesors ===
=== Usages ===
v1685 v2287 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?540 values: a2843 - i2846 virtualObjectMappings: ?591  <|@  <|@
f <@~|@floating>@ <|@
tid v2071 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 37]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
rawvalue: meta{HotSpotType<Lorg/graalvm/compiler/nodes/virtual/EscapeObjectState;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Lorg/graalvm/compiler/nodes/virtual/EscapeObjectState;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2079 v2119 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v347 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:654) [bci: 11]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1581 
=== Succesors ===
trueSuccessor: v345 
falseSuccessor: v346 
=== Usages ===
=== Predecessor ===
a2849 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1581 #trueSuccessor: v345 #falseSuccessor: v346  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B99" "B100" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587861736310913956
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v345 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:659) [bci: 49]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v992 
=== Usages ===
=== Predecessor ===
v347 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v992  <|@  <|@
f <@*|@fixed>@ <|@
tid v992 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:659) [bci: 53]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1586 
=== Succesors ===
trueSuccessor: v990 
falseSuccessor: v991 
=== Usages ===
=== Predecessor ===
v345 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1586 #trueSuccessor: v990 #falseSuccessor: v991  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4583358136683543460
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v990 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:662) [bci: 64]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1685 
=== Usages ===
=== Predecessor ===
v992 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1685  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1685 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?538 
=== Succesors ===
next: v993 
=== Usages ===
=== Predecessor ===
v990 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?538 #next: v993  <|@  <|@
f <@*|@fixed>@ <|@
tid v993 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 5
stamp: void
=== Inputs ===
loopBegin: v12 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1685 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v12  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B128" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583358136683543460
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v991 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 56]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v984 
=== Usages ===
=== Predecessor ===
v992 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v984  <|@  <|@
f <@*|@fixed>@ <|@
tid v984 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v981 
=== Predecessor ===
v991 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B102" "B103" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587861736310913956
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v346 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 14]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2850 
=== Usages ===
=== Predecessor ===
v347 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2850  <|@  <|@
f <@~|@floating>@ <|@
tid v2896 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2849 
=== Succesors ===
=== Usages ===
a2850 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2849  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2850 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: NodeList.nodes
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList$NodeListIterator.next(NodeList.java:462) [bci: 32]
at org.graalvm.compiler.graph.NodeList$NodeListIterator.next(NodeList.java:441) [bci: 1]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 32]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
nullCheck: false
stamp: n [Lorg/graalvm/compiler/graph/Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2896 
=== Succesors ===
next: v1825 
=== Usages ===
a1419 v1420 v2897 
=== Predecessor ===
v346 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2896 #next: v1825  <|@  <|@
f <@~|@floating>@ <|@
tid v1420 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList$NodeListIterator.next(NodeList.java:462) [bci: 46]
at org.graalvm.compiler.graph.NodeList$NodeListIterator.next(NodeList.java:441) [bci: 1]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 32]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
value: a2850 
=== Succesors ===
=== Usages ===
v1825 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2850  <|@  <|@
f <@*|@fixed>@ <|@
tid v1825 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList$NodeListIterator.next(NodeList.java:462) [bci: 46]
at org.graalvm.compiler.graph.NodeList$NodeListIterator.next(NodeList.java:441) [bci: 1]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 32]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1420 
=== Succesors ===
trueSuccessor: v1824 
falseSuccessor: v1821 
=== Usages ===
=== Predecessor ===
a2850 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1420 #trueSuccessor: v1824 #falseSuccessor: v1821  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B168" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1824 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList$NodeListIterator.next(NodeList.java:462) [bci: 46]
at org.graalvm.compiler.graph.NodeList$NodeListIterator.next(NodeList.java:441) [bci: 1]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 32]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v12 
=== Succesors ===
next: v2288 
=== Usages ===
=== Predecessor ===
v1825 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v12 #next: v2288  <|@  <|@
f <@~|@floating>@ <|@
tid a2290 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@1280662813
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@1280662813]
=== Inputs ===
=== Succesors ===
=== Usages ===
a2286 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2289 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -363787
stableDimension: 0
stamp: i32 [-363787] ⇊00000000fffa72f5 ⇈00000000fffa72f5
stampKind: i32
value: int[-363787|0xfffffffffffa72f5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2285 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2288 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2281 
=== Predecessor ===
v1824 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" "B105" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587861736310913956
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1821 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList$NodeListIterator.next(NodeList.java:462) [bci: 46]
at org.graalvm.compiler.graph.NodeList$NodeListIterator.next(NodeList.java:441) [bci: 1]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 32]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2851 
=== Usages ===
=== Predecessor ===
v1825 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2851  <|@  <|@
f <@~|@floating>@ <|@
tid v2895 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2849 
=== Succesors ===
=== Usages ===
i2851 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2849  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2851 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: NodeList.size
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.access$400(NodeList.java:34) [bci: 1]
at org.graalvm.compiler.graph.NodeList$NodeListIterator.hasNext(NodeList.java:455) [bci: 36]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 23]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2895 
=== Succesors ===
next: v2740 
=== Usages ===
v602 v1708 j1690 
=== Predecessor ===
v1821 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2895 #next: v2740  <|@  <|@
f <@~|@floating>@ <|@
tid v1708 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2851 
y: i126 
=== Succesors ===
=== Usages ===
v2740 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2851 y: i126  <|@  <|@
f <@*|@fixed>@ <|@
tid v2740 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList$NodeListIterator.next(NodeList.java:462) [bci: 46]
at org.graalvm.compiler.graph.NodeList$NodeListIterator.next(NodeList.java:441) [bci: 1]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 32]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1708 
=== Succesors ===
trueSuccessor: v2736 
falseSuccessor: v2739 
=== Usages ===
=== Predecessor ===
i2851 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1708 #trueSuccessor: v2736 #falseSuccessor: v2739  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B109" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583358136683543460
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2736 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList$NodeListIterator.next(NodeList.java:462) [bci: 46]
at org.graalvm.compiler.graph.NodeList$NodeListIterator.next(NodeList.java:441) [bci: 1]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 32]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2734 
=== Usages ===
=== Predecessor ===
v2740 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2734  <|@  <|@
f <@*|@fixed>@ <|@
tid v2734 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList$NodeListIterator.next(NodeList.java:462) [bci: 46]
at org.graalvm.compiler.graph.NodeList$NodeListIterator.next(NodeList.java:441) [bci: 1]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 32]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2733 
=== Predecessor ===
v2736 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B106" "B165" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583358136683543460
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2739 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList$NodeListIterator.next(NodeList.java:462) [bci: 46]
at org.graalvm.compiler.graph.NodeList$NodeListIterator.next(NodeList.java:441) [bci: 1]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 32]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2852 
=== Usages ===
=== Predecessor ===
v2740 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2852  <|@  <|@
f <@~|@floating>@ <|@
tid v2897 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2850 
=== Succesors ===
=== Usages ===
i2852 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2850  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2852 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList$NodeListIterator.next(NodeList.java:462) [bci: 46]
at org.graalvm.compiler.graph.NodeList$NodeListIterator.next(NodeList.java:441) [bci: 1]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 32]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v2897 
=== Succesors ===
next: v2748 
=== Usages ===
v1705 j1688 
=== Predecessor ===
v2739 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2897 #next: v2748  <|@  <|@
f <@~|@floating>@ <|@
tid j1690 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i2851 
=== Succesors ===
=== Usages ===
j1692 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2851  <|@  <|@
f <@~|@floating>@ <|@
tid j1691 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1692 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1692 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j1690 
y: j1691 
=== Succesors ===
=== Usages ===
v1694 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1690 y: j1691  <|@  <|@
f <@~|@floating>@ <|@
tid j1688 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i2852 
=== Succesors ===
=== Usages ===
v1694 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i2852  <|@  <|@
f <@~|@floating>@ <|@
tid v1694 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1692 
y: j1688 
=== Succesors ===
=== Usages ===
v2748 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1692 y: j1688  <|@  <|@
f <@*|@fixed>@ <|@
tid v2748 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList$NodeListIterator.next(NodeList.java:462) [bci: 46]
at org.graalvm.compiler.graph.NodeList$NodeListIterator.next(NodeList.java:441) [bci: 1]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 32]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1694 
=== Succesors ===
trueSuccessor: v2747 
falseSuccessor: v2744 
=== Usages ===
=== Predecessor ===
i2852 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1694 #trueSuccessor: v2747 #falseSuccessor: v2744  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B107" "B108" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583358136683543460
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2747 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList$NodeListIterator.next(NodeList.java:462) [bci: 46]
at org.graalvm.compiler.graph.NodeList$NodeListIterator.next(NodeList.java:441) [bci: 1]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 32]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2746 
=== Usages ===
=== Predecessor ===
v2748 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2746  <|@  <|@
f <@~|@floating>@ <|@
tid v1705 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2852 
y: i17 
=== Succesors ===
=== Usages ===
v2746 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2852 y: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v2746 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList$NodeListIterator.next(NodeList.java:462) [bci: 46]
at org.graalvm.compiler.graph.NodeList$NodeListIterator.next(NodeList.java:441) [bci: 1]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 32]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1705 
=== Succesors ===
trueSuccessor: v2745 
falseSuccessor: v2737 
=== Usages ===
=== Predecessor ===
v2747 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1705 #trueSuccessor: v2745 #falseSuccessor: v2737  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B166" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2745 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList$NodeListIterator.next(NodeList.java:462) [bci: 46]
at org.graalvm.compiler.graph.NodeList$NodeListIterator.next(NodeList.java:441) [bci: 1]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 32]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2743 
=== Usages ===
=== Predecessor ===
v2746 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2743  <|@  <|@
f <@*|@fixed>@ <|@
tid v2743 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList$NodeListIterator.next(NodeList.java:462) [bci: 46]
at org.graalvm.compiler.graph.NodeList$NodeListIterator.next(NodeList.java:441) [bci: 1]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 32]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2741 
=== Predecessor ===
v2745 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B109" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583358136683543460
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2737 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList$NodeListIterator.next(NodeList.java:462) [bci: 46]
at org.graalvm.compiler.graph.NodeList$NodeListIterator.next(NodeList.java:441) [bci: 1]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 32]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2735 
=== Usages ===
=== Predecessor ===
v2746 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2735  <|@  <|@
f <@*|@fixed>@ <|@
tid v2735 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList$NodeListIterator.next(NodeList.java:462) [bci: 46]
at org.graalvm.compiler.graph.NodeList$NodeListIterator.next(NodeList.java:441) [bci: 1]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 32]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2733 
=== Predecessor ===
v2737 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B104" "B108" 
    successors "B110" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587861736310913956
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2733 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList$NodeListIterator.next(NodeList.java:462) [bci: 46]
at org.graalvm.compiler.graph.NodeList$NodeListIterator.next(NodeList.java:441) [bci: 1]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 32]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2734 v2735 
=== Succesors ===
next: i2853 
=== Usages ===
v1700 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2734 v2735 #next: i2853  <|@  <|@
f <@~|@floating>@ <|@
tid v2894 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2849 
=== Succesors ===
=== Usages ===
i2853 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2849  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2853 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.access$200(NodeList.java:34) [bci: 1]
at org.graalvm.compiler.graph.NodeList$NodeListIterator.<init>(NodeList.java:448) [bci: 11]
at org.graalvm.compiler.graph.NodeList$NodeListIterator.<init>(NodeList.java:441) [bci: 3]
at org.graalvm.compiler.graph.NodeList.iterator(NodeList.java:282) [bci: 7]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 18]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2894 
=== Succesors ===
next: v352 
=== Usages ===
?626 
=== Predecessor ===
v2733 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2894 #next: v352  <|@  <|@
tid a592 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@4fb0693c
hasIdentity: true
objectId: -1
stamp: a!# Lorg/graalvm/compiler/graph/NodeList$NodeListIterator;
type: HotSpotType<Lorg/graalvm/compiler/graph/NodeList$NodeListIterator;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?354 ?626 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v352 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 22]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v353 
=== Predecessor ===
i2853 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" "B119" 
    successors "B111" "B125" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 2
    probability 4592365335938284452
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i625 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v353 
values: i17 i613 
=== Succesors ===
=== Usages ===
?626 v602 i613 v2898 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v353 values: i17 i613  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v353 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 2.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 22]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v352 
=== Succesors ===
next: v365 
=== Usages ===
v362 v379 i625 v1847 v1835 v1841 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v352 #next: v365  <|@  <|@
tid ?626 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a592 
values: i2853 i625 a2849 
=== Succesors ===
=== Usages ===
?354 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a592 values: i2853 i625 a2849  <|@  <|@
tid ?354 <|@
d <@d|@=== Debug Properties ===
bci: 22
code: ResolvedJavaMethodBytecode<FrameState.applyToVirtual(VirtualState$VirtualClosure)>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: FrameState.java
sourceLine: 655
stackSize: 0
=== Inputs ===
outerFrameState: ?392 
values: a954 a590 a592 - 
virtualObjectMappings: ?591 ?626 
=== Succesors ===
=== Usages ===
v1683 v2260 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?392 values: a954 a590 a592 - virtualObjectMappings: ?591 ?626  <|@  <|@
f <@~|@floating>@ <|@
tid v602 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList$NodeListIterator.hasNext(NodeList.java:455) [bci: 39]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 23]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i625 
y: i2851 
=== Succesors ===
=== Usages ===
v365 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i625 y: i2851  <|@  <|@
f <@*|@fixed>@ <|@
tid v365 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 28]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v602 
=== Succesors ===
trueSuccessor: v364 
falseSuccessor: v362 
=== Usages ===
=== Predecessor ===
v353 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v602 #trueSuccessor: v364 #falseSuccessor: v362  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B112" "B113" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4587861736310913956
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v364 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 31]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2854 
=== Usages ===
v1700 
=== Predecessor ===
v365 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2854  <|@  <|@
f <@~|@floating>@ <|@
tid v1700 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v2733 v364 
=== Succesors ===
=== Usages ===
a2854 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v2733 v364  <|@  <|@
f <@~|@floating>@ <|@
tid a1419 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList$NodeListIterator.next(NodeList.java:462) [bci: 32]
at org.graalvm.compiler.graph.NodeList$NodeListIterator.next(NodeList.java:441) [bci: 1]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 32]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
op: Uncompress
stamp: a [Lorg/graalvm/compiler/graph/Node;
=== Inputs ===
value: a2850 
=== Succesors ===
=== Usages ===
v2898 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2850  <|@  <|@
f <@~|@floating>@ <|@
tid v2898 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1419 
index: i625 
=== Succesors ===
=== Usages ===
a2854 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1419 index: i625  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2854 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList$NodeListIterator.next(NodeList.java:462) [bci: 46]
at org.graalvm.compiler.graph.NodeList$NodeListIterator.next(NodeList.java:441) [bci: 1]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 32]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
nullCheck: false
stamp: n Lorg/graalvm/compiler/graph/Node;
=== Inputs ===
stateBefore: - 
guard: v1700 
address: v2898 
=== Succesors ===
next: v2075 
=== Usages ===
v2939 v1436 v2899 
=== Predecessor ===
v364 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1700 address: v2898 #next: v2075  <|@  <|@
f <@~|@floating>@ <|@
tid v1436 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 37]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
value: a2854 
=== Succesors ===
=== Usages ===
v2075 v1843 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2854  <|@  <|@
f <@*|@fixed>@ <|@
tid v2075 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:156) [bci: 15]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 37]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v1436 
=== Succesors ===
trueSuccessor: v2074 
falseSuccessor: v2073 
=== Usages ===
=== Predecessor ===
a2854 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1436 #trueSuccessor: v2074 #falseSuccessor: v2073  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B115" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4572810754373778562
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2074 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:157) [bci: 18]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 37]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2380 
=== Usages ===
=== Predecessor ===
v2075 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2380  <|@  <|@
f <@*|@fixed>@ <|@
tid v2380 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 37]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2378 
=== Predecessor ===
v2074 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" "B122" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4587091644783402004
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2073 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:160) [bci: 29]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 37]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2855 
=== Usages ===
=== Predecessor ===
v2075 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2855  <|@  <|@
f <@~|@floating>@ <|@
tid v2939 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2854 
=== Succesors ===
=== Usages ===
v2855 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2854  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2855 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:161) [bci: 40]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 37]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2939 
=== Succesors ===
next: v2856 
=== Usages ===
v2916 
=== Predecessor ===
v2073 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2939 #next: v2856  <|@  <|@
f <@~|@floating>@ <|@
tid v2916 <|@
d <@d|@=== Debug Properties ===
displacement: 64
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v2855 
=== Succesors ===
=== Usages ===
v2856 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v2855  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2856 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: PrimarySupers:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:162) [bci: 54]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 37]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
nullCheck: false
stamp: Klass*
=== Inputs ===
stateBefore: - 
guard: - 
address: v2916 
=== Succesors ===
next: v2778 
=== Usages ===
v2079 
=== Predecessor ===
v2855 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2916 #next: v2778  <|@  <|@
f <@~|@floating>@ <|@
tid v2079 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:162) [bci: 58]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 37]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2856 
y: v2071 
=== Succesors ===
=== Usages ===
v2778 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2856 y: v2071  <|@  <|@
f <@*|@fixed>@ <|@
tid v2778 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 37]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2079 
=== Succesors ===
trueSuccessor: v2777 
falseSuccessor: v1835 
=== Usages ===
=== Predecessor ===
v2856 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2079 #trueSuccessor: v2777 #falseSuccessor: v1835  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B115" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4587091644783402004
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2777 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 37]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2389 
=== Usages ===
=== Predecessor ===
v2778 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2389  <|@  <|@
f <@*|@fixed>@ <|@
tid v2389 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 37]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2378 
=== Predecessor ===
v2777 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B112" "B114" 
    successors "B116" "B118" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4587861736310913956
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2378 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 37]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2380 v2389 
=== Succesors ===
next: v1843 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2380 v2389 #next: v1843  <|@  <|@
f <@*|@fixed>@ <|@
tid v1843 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:656) [bci: 43]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1436 
=== Succesors ===
trueSuccessor: v1841 
falseSuccessor: v1838 
=== Usages ===
=== Predecessor ===
v2378 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1436 #trueSuccessor: v1841 #falseSuccessor: v1838  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B117" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1841 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:656) [bci: 43]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v353 
=== Succesors ===
next: v1842 
=== Usages ===
=== Predecessor ===
v1843 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v353 #next: v1842  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B124" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1842 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:656) [bci: 43]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v12 
=== Succesors ===
next: v2261 
=== Usages ===
=== Predecessor ===
v1841 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v12 #next: v2261  <|@  <|@
f <@~|@floating>@ <|@
tid i2262 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -368395
stableDimension: 0
stamp: i32 [-368395] ⇊00000000fffa60f5 ⇈00000000fffa60f5
stampKind: i32
value: int[-368395|0xfffffffffffa60f5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2258 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2261 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2255 
=== Predecessor ===
v1842 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B119" "B120" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4587861736310913956
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1838 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:656) [bci: 43]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2857 
=== Usages ===
=== Predecessor ===
v1843 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2857  <|@  <|@
f <@~|@floating>@ <|@
tid v2899 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2854 
=== Succesors ===
=== Usages ===
i2857 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2854  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2857 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Node.id
nodeSourcePosition: at org.graalvm.compiler.graph.Node.id(Node.java:284) [bci: 1]
at org.graalvm.compiler.graph.NodeIdAccessor.getNodeId(NodeIdAccessor.java:61) [bci: 22]
at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:95) [bci: 25]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.virtual.EscapeObjectState.applyToVirtual(EscapeObjectState.java:58) [bci: 2]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:656) [bci: 43]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2899 
=== Succesors ===
next: v1849 
=== Usages ===
i558 j560 
=== Predecessor ===
v1838 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2899 #next: v1849  <|@  <|@
f <@~|@floating>@ <|@
tid i558 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 36]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.virtual.EscapeObjectState.applyToVirtual(EscapeObjectState.java:58) [bci: 2]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:656) [bci: 43]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: i32 [-33554432 - 33554431]
=== Inputs ===
x: i2857 
y: i531 
=== Succesors ===
=== Usages ===
v1452 v2900 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i2857 y: i531  <|@  <|@
f <@~|@floating>@ <|@
tid v1452 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 43]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.virtual.EscapeObjectState.applyToVirtual(EscapeObjectState.java:58) [bci: 2]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:656) [bci: 43]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i558 
y: i2845 
=== Succesors ===
=== Usages ===
v1849 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i558 y: i2845  <|@  <|@
f <@*|@fixed>@ <|@
tid v1849 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 43]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.virtual.EscapeObjectState.applyToVirtual(EscapeObjectState.java:58) [bci: 2]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:656) [bci: 43]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1452 
=== Succesors ===
trueSuccessor: v1844 
falseSuccessor: v1847 
=== Usages ===
=== Predecessor ===
i2857 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1452 #trueSuccessor: v1844 #falseSuccessor: v1847  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B110" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 2
    probability 4587861736310913956
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1844 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 43]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.virtual.EscapeObjectState.applyToVirtual(EscapeObjectState.java:58) [bci: 2]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:656) [bci: 43]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2858 
=== Usages ===
j2858 v1459 
=== Predecessor ===
v1849 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2858  <|@  <|@
f <@~|@floating>@ <|@
tid v2900 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: a1381 
index: i558 
=== Succesors ===
=== Usages ===
v1459 j2858 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1381 index: i558  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2858 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: long
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 38]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.virtual.EscapeObjectState.applyToVirtual(EscapeObjectState.java:58) [bci: 2]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:656) [bci: 43]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: v1844 
address: v2900 
=== Succesors ===
next: v1459 
=== Usages ===
j561 
=== Predecessor ===
v1844 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1844 address: v2900 #next: v1459  <|@  <|@
f <@~|@floating>@ <|@
tid j560 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 41]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.virtual.EscapeObjectState.applyToVirtual(EscapeObjectState.java:58) [bci: 2]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:656) [bci: 43]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: i64
=== Inputs ===
x: j534 
y: i2857 
=== Succesors ===
=== Usages ===
j561 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j534 y: i2857  <|@  <|@
f <@~|@floating>@ <|@
tid j561 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 42]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.virtual.EscapeObjectState.applyToVirtual(EscapeObjectState.java:58) [bci: 2]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:656) [bci: 43]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: i64
=== Inputs ===
x: j560 
y: j2858 
=== Succesors ===
=== Usages ===
v1459 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: j560 y: j2858  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1459 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: long
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 43]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.virtual.EscapeObjectState.applyToVirtual(EscapeObjectState.java:58) [bci: 2]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:656) [bci: 43]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1844 
address: v2900 
value: j561 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v379 
=== Usages ===
=== Predecessor ===
j2858 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1844 address: v2900 value: j561 stateAfter: - lastLocationAccess: - #next: v379  <|@  <|@
f <@~|@floating>@ <|@
tid i613 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList$NodeListIterator.next(NodeList.java:462) [bci: 42]
at org.graalvm.compiler.graph.NodeList$NodeListIterator.next(NodeList.java:441) [bci: 1]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 32]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: i32
=== Inputs ===
x: i625 
y: i126 
=== Succesors ===
=== Usages ===
i625 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i625 y: i126  <|@  <|@
f <@*|@fixed>@ <|@
tid v379 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 22]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
loopBegin: v353 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1459 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v353  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B121" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1847 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 43]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.virtual.EscapeObjectState.applyToVirtual(EscapeObjectState.java:58) [bci: 2]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:656) [bci: 43]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v353 
=== Succesors ===
next: v1848 
=== Usages ===
=== Predecessor ===
v1849 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v353 #next: v1848  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B124" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1848 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 43]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.virtual.EscapeObjectState.applyToVirtual(EscapeObjectState.java:58) [bci: 2]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:656) [bci: 43]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v12 
=== Succesors ===
next: v2263 
=== Usages ===
=== Predecessor ===
v1847 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v12 #next: v2263  <|@  <|@
f <@~|@floating>@ <|@
tid i2264 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -371995
stableDimension: 0
stamp: i32 [-371995] ⇊00000000fffa52e5 ⇈00000000fffa52e5
stampKind: i32
value: int[-371995|0xfffffffffffa52e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2258 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2263 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2255 
=== Predecessor ===
v1848 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1835 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 37]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v353 
=== Succesors ===
next: v1836 
=== Usages ===
=== Predecessor ===
v2778 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v353 #next: v1836  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B124" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1836 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 37]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v12 
=== Succesors ===
next: v2256 
=== Usages ===
=== Predecessor ===
v1835 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v12 #next: v2256  <|@  <|@
f <@~|@floating>@ <|@
tid i2257 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -368163
stableDimension: 0
stamp: i32 [-368163] ⇊00000000fffa61dd ⇈00000000fffa61dd
stampKind: i32
value: int[-368163|0xfffffffffffa61dd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2258 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2256 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2255 
=== Predecessor ===
v1836 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B123" "B117" "B121" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i2258 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-371995 - -368163] ⇊00000000fffa40c5 ⇈00000000fffa73fd
valueDescription: i32
=== Inputs ===
merge: v2255 
values: i2257 i2262 i2264 
=== Succesors ===
=== Usages ===
v2260 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2255 values: i2257 i2262 i2264  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2255 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2256 v2261 v2263 
=== Succesors ===
next: v2260 
=== Usages ===
i2258 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2256 v2261 v2263 #next: v2260  <|@  <|@
f <@*|@fixed>@ <|@
tid v2260 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?354 
actionAndReason: i2258 
speculation: a2233 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2255 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?354 actionAndReason: i2258 speculation: a2233  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B126" "B127" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587861736310913956
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v362 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:659) [bci: 49]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v353 
=== Succesors ===
next: v385 
=== Usages ===
=== Predecessor ===
v365 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v353 #next: v385  <|@  <|@
f <@*|@fixed>@ <|@
tid v385 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:659) [bci: 53]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1586 
=== Succesors ===
trueSuccessor: v383 
falseSuccessor: v384 
=== Usages ===
=== Predecessor ===
v362 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1586 #trueSuccessor: v383 #falseSuccessor: v384  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4583358136683543460
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v383 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:662) [bci: 64]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1683 
=== Usages ===
=== Predecessor ===
v385 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1683  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1683 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?354 
=== Succesors ===
next: v160 
=== Usages ===
=== Predecessor ===
v383 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?354 #next: v160  <|@  <|@
f <@*|@fixed>@ <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 2
nodeSourcePosition: at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
loopBegin: v12 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1683 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v12  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B128" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583358136683543460
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 56]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v982 
=== Usages ===
=== Predecessor ===
v385 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v982  <|@  <|@
f <@*|@fixed>@ <|@
tid v982 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v981 
=== Predecessor ===
v384 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B127" "B100" 
    successors "B129" "B164" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587861736310913956
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v981 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v982 v984 
=== Succesors ===
next: i2859 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v982 v984 #next: i2859  <|@  <|@
tid ?983 <|@
d <@d|@=== Debug Properties ===
bci: 49
code: ResolvedJavaMethodBytecode<FrameState.applyToVirtual(VirtualState$VirtualClosure)>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: FrameState.java
sourceLine: 659
stackSize: 0
=== Inputs ===
outerFrameState: ?392 
values: a954 a590 - - 
virtualObjectMappings: ?591 
=== Succesors ===
=== Usages ===
v2324 i2859 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?392 values: a954 a590 - - virtualObjectMappings: ?591  <|@  <|@
f <@~|@floating>@ <|@
tid v2901 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2848 
=== Succesors ===
=== Usages ===
i2859 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2848  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2859 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Node.id
nodeSourcePosition: at org.graalvm.compiler.graph.Node.id(Node.java:284) [bci: 1]
at org.graalvm.compiler.graph.NodeIdAccessor.getNodeId(NodeIdAccessor.java:61) [bci: 22]
at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:95) [bci: 25]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:653) [bci: 2]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?983 
guard: - 
address: v2901 
=== Succesors ===
next: v1859 
=== Usages ===
?727 j724 i722 
=== Predecessor ===
v981 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?983 guard: - address: v2901 #next: v1859  <|@  <|@
f <@~|@floating>@ <|@
tid i722 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 36]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:653) [bci: 2]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: i32 [-33554432 - 33554431]
=== Inputs ===
x: i2859 
y: i531 
=== Succesors ===
=== Usages ===
v1475 v2902 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i2859 y: i531  <|@  <|@
f <@~|@floating>@ <|@
tid v1475 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 43]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:653) [bci: 2]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i722 
y: i2845 
=== Succesors ===
=== Usages ===
v1859 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i722 y: i2845  <|@  <|@
f <@*|@fixed>@ <|@
tid v1859 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 43]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:653) [bci: 2]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1475 
=== Succesors ===
trueSuccessor: v1855 
falseSuccessor: v1858 
=== Usages ===
=== Predecessor ===
i2859 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1475 #trueSuccessor: v1855 #falseSuccessor: v1858  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B128" 
    successors "B130" "B136" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587861736310913956
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1855 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 43]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:653) [bci: 2]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2860 
=== Usages ===
j2860 v1482 
=== Predecessor ===
v1859 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2860  <|@  <|@
f <@~|@floating>@ <|@
tid v2902 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: a1381 
index: i722 
=== Succesors ===
=== Usages ===
v1482 j2860 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1381 index: i722  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2860 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: long
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 38]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:653) [bci: 2]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: v1855 
address: v2902 
=== Succesors ===
next: v1482 
=== Usages ===
j725 
=== Predecessor ===
v1855 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1855 address: v2902 #next: v1482  <|@  <|@
f <@~|@floating>@ <|@
tid j724 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 41]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:653) [bci: 2]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: i64
=== Inputs ===
x: j534 
y: i2859 
=== Succesors ===
=== Usages ===
j725 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j534 y: i2859  <|@  <|@
f <@~|@floating>@ <|@
tid j725 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 42]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:653) [bci: 2]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: i64
=== Inputs ===
x: j724 
y: j2860 
=== Succesors ===
=== Usages ===
v1482 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: j724 y: j2860  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1482 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: long
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 43]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:653) [bci: 2]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1855 
address: v2902 
value: j725 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a2861 
=== Usages ===
=== Predecessor ===
j2860 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1855 address: v2902 value: j725 stateAfter: - lastLocationAccess: - #next: a2861  <|@  <|@
f <@~|@floating>@ <|@
tid v2903 <|@
d <@d|@=== Debug Properties ===
displacement: 80
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2848 
=== Succesors ===
=== Usages ===
a2861 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2848  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2861 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FrameState.virtualObjectMappings
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:654) [bci: 8]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
nullCheck: false
stamp: n# Lorg/graalvm/compiler/graph/NodeInputList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2903 
=== Succesors ===
next: v642 
=== Usages ===
v2644 v1589 v2905 
=== Predecessor ===
v1482 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2903 #next: v642  <|@  <|@
f <@~|@floating>@ <|@
tid v1589 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:654) [bci: 11]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
value: a2861 
=== Succesors ===
=== Usages ===
v642 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2861  <|@  <|@
tid ?687 <|@
d <@d|@=== Debug Properties ===
bci: 61
code: ResolvedJavaMethodBytecode<FrameState.applyToVirtual(VirtualState$VirtualClosure)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: FrameState.java
sourceLine: 660
stackSize: 0
=== Inputs ===
outerFrameState: ?392 
values: - - - - 
=== Succesors ===
=== Usages ===
?697 ?2224 ?649 ?2223 ?663 ?2222 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?392 values: - - - -  <|@  <|@
tid ?697 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<FrameState.applyToVirtual(VirtualState$VirtualClosure)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: FrameState.java
sourceLine: 653
stackSize: 0
=== Inputs ===
outerFrameState: ?687 
values: a2848 a590 - - 
=== Succesors ===
=== Usages ===
?694 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?687 values: a2848 a590 - -  <|@  <|@
tid ?694 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<1492729447.apply(VirtualState)>
duringCall: true
localsSize: 2
locksSize: 0
nodeSourcePosition: at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:653) [bci: 2]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
rethrowException: false
stackSize: 0
=== Inputs ===
outerFrameState: ?697 
values: a590 a2848 
=== Succesors ===
=== Usages ===
?729 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?697 values: a590 a2848  <|@  <|@
tid ?729 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<LoopFragment.lambda$null$0(NodeBitMap, VirtualState)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: LoopFragment.java
sourceLine: 210
stackSize: 0
=== Inputs ===
outerFrameState: ?694 
values: - - 
=== Succesors ===
=== Usages ===
?727 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?694 values: - -  <|@  <|@
tid ?727 <|@
d <@d|@=== Debug Properties ===
bci: 44
code: ResolvedJavaMethodBytecode<NodeBitMap.mark(Node)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 43]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:653) [bci: 2]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
rethrowException: false
sourceFile: NodeBitMap.java
sourceLine: 97
stackSize: 0
=== Inputs ===
outerFrameState: ?729 
values: a2843 - i2859 
virtualObjectMappings: ?591 
=== Succesors ===
=== Usages ===
v1686 a2611 a2572 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?729 values: a2843 - i2859 virtualObjectMappings: ?591  <|@  <|@
f <@~|@floating>@ <|@
tid v2904 <|@
d <@d|@=== Debug Properties ===
displacement: 68
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2848 
=== Succesors ===
=== Usages ===
a2862 a2873 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2848  <|@  <|@
f <@~|@floating>@ <|@
tid v2720 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$92/1492729447;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$92/1492729447;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2597 v2683 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2588 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$92/1492729447;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$92/1492729447;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j2675 j2809 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1284 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 34]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
rawvalue: 16
stableDimension: 0
stamp: i64 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2728 j2717 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v642 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:654) [bci: 11]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1589 
=== Succesors ===
trueSuccessor: v640 
falseSuccessor: v641 
=== Usages ===
=== Predecessor ===
a2861 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1589 #trueSuccessor: v640 #falseSuccessor: v641  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B131" "B132" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583358136683543460
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v640 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:659) [bci: 49]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2862 
=== Usages ===
=== Predecessor ===
v642 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2862  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2862 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FrameState.outerFrameState
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.outerFrameState(FrameState.java:234) [bci: 1]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:659) [bci: 50]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
nullCheck: false
stamp: n# Lorg/graalvm/compiler/nodes/FrameState;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2904 
=== Succesors ===
next: v1007 
=== Usages ===
a1488 v1489 
=== Predecessor ===
v640 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2904 #next: v1007  <|@  <|@
f <@~|@floating>@ <|@
tid v1489 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
value: a2862 
=== Succesors ===
=== Usages ===
v1007 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2862  <|@  <|@
f <@*|@fixed>@ <|@
tid v1007 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:659) [bci: 53]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1489 
=== Succesors ===
trueSuccessor: v1005 
falseSuccessor: v1006 
=== Usages ===
=== Predecessor ===
a2862 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1489 #trueSuccessor: v1005 #falseSuccessor: v1006  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B130" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4578854537056172964
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1005 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:662) [bci: 64]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1686 
=== Usages ===
=== Predecessor ===
v1007 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1686  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1686 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?727 
=== Succesors ===
next: v1008 
=== Usages ===
=== Predecessor ===
v1005 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?727 #next: v1008  <|@  <|@
f <@*|@fixed>@ <|@
tid v1008 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 6
stamp: void
=== Inputs ===
loopBegin: v12 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1686 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v12  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B130" 
    successors "B133" "B134" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4578854537056172964
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1006 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 56]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2561 
=== Usages ===
=== Predecessor ===
v1007 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2561  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2561 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j2576 
=== Usages ===
v2940 v2941 
=== Predecessor ===
v1006 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j2576  <|@  <|@
f <@~|@floating>@ <|@
tid v2940 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j2561 
index: - 
=== Succesors ===
=== Usages ===
j2576 v2578 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2561 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2576 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2940 
=== Succesors ===
next: j2577 
=== Usages ===
j2717 j2582 v2964 
=== Predecessor ===
j2561 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2940 #next: j2577  <|@  <|@
f <@~|@floating>@ <|@
tid v2941 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j2561 
index: - 
=== Succesors ===
=== Usages ===
j2577 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2561 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2577 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2941 
=== Succesors ===
next: v2569 
=== Usages ===
v2566 
=== Predecessor ===
j2576 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2941 #next: v2569  <|@  <|@
f <@~|@floating>@ <|@
tid j2717 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2576 
y: j1284 
=== Succesors ===
=== Usages ===
v2566 v2578 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2576 y: j1284  <|@  <|@
f <@~|@floating>@ <|@
tid v2566 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2577 
y: j2717 
=== Succesors ===
=== Usages ===
v2569 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j2577 y: j2717  <|@  <|@
f <@*|@fixed>@ <|@
tid v2569 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v2566 
=== Succesors ===
trueSuccessor: v2567 
falseSuccessor: v2568 
=== Usages ===
=== Predecessor ===
j2577 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2566 #trueSuccessor: v2567 #falseSuccessor: v2568  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B135" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4549060609792906964
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2567 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a2572 
=== Usages ===
=== Predecessor ===
v2569 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2572  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2572 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?727 
arguments: v2430 i17 i126 
=== Succesors ===
next: j2573 
=== Usages ===
j2573 
=== Predecessor ===
v2567 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?727 arguments: v2430 i17 i126 #next: j2573  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2573 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a2572 
=== Succesors ===
next: v2583 
=== Usages ===
j2582 
=== Predecessor ===
a2572 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a2572 #next: v2583  <|@  <|@
f <@*|@fixed>@ <|@
tid v2583 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2580 
=== Predecessor ===
j2573 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B135" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4578777527903421769
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2568 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2578 
=== Usages ===
=== Predecessor ===
v2569 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2578  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2578 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2940 
value: j2717 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2575 
=== Usages ===
=== Predecessor ===
v2568 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2940 value: j2717 stateAfter: - lastLocationAccess: - #next: v2575  <|@  <|@
f <@~|@floating>@ <|@
tid v2964 <|@
d <@d|@=== Debug Properties ===
displacement: 208
scale: Times1
stamp: void*
=== Inputs ===
base: j2576 
index: - 
=== Succesors ===
=== Usages ===
v2575 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2576 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2575 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v2964 
=== Succesors ===
next: v2581 
=== Usages ===
=== Predecessor ===
v2578 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2964 #next: v2581  <|@  <|@
f <@*|@fixed>@ <|@
tid v2581 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2580 
=== Predecessor ===
v2575 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" "B133" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4578854537056172964
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2582 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2580 
values: j2576 j2573 
=== Succesors ===
=== Usages ===
v2943 v2917 a2094 v2942 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2580 values: j2576 j2573  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2580 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2581 v2583 
=== Succesors ===
next: a2094 
=== Usages ===
j2582 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2581 v2583 #next: a2094  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2094 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j2582 
=== Succesors ===
next: j2593 
=== Usages ===
a2100 
=== Predecessor ===
v2580 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j2582 #next: j2593  <|@  <|@
f <@~|@floating>@ <|@
tid j2809 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v2588 
=== Succesors ===
=== Usages ===
v2970 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v2588  <|@  <|@
f <@~|@floating>@ <|@
tid v2970 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j2809 
index: - 
=== Succesors ===
=== Usages ===
j2593 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2809 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2593 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2970 
=== Succesors ===
next: v2594 
=== Usages ===
v2594 
=== Predecessor ===
a2094 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2970 #next: v2594  <|@  <|@
f <@~|@floating>@ <|@
tid v2942 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2582 
index: - 
=== Succesors ===
=== Usages ===
v2594 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2582 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2594 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2942 
value: j2593 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2597 
=== Usages ===
=== Predecessor ===
j2593 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2942 value: j2593 stateAfter: - lastLocationAccess: - #next: v2597  <|@  <|@
f <@~|@floating>@ <|@
tid v2943 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j2582 
index: - 
=== Succesors ===
=== Usages ===
v2597 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2582 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2597 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2943 
value: v2720 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2099 
=== Usages ===
=== Predecessor ===
v2594 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2943 value: v2720 stateAfter: - lastLocationAccess: - #next: v2099  <|@  <|@
f <@~|@floating>@ <|@
tid v2917 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j2582 
index: - 
=== Succesors ===
=== Usages ===
v2099 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2582 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2099 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2917 
value: a2843 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a2100 
=== Usages ===
=== Predecessor ===
v2597 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2917 value: a2843 stateAfter: - lastLocationAccess: - #next: a2100  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2100 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a2094 
=== Succesors ===
next: v2101 
=== Usages ===
v1492 
=== Predecessor ===
v2099 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a2094 #next: v2101  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2101 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v1124 
=== Usages ===
=== Predecessor ===
a2100 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v1124  <|@  <|@
f <@~|@floating>@ <|@
tid a1488 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.outerFrameState(FrameState.java:234) [bci: 1]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:659) [bci: 50]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
op: Uncompress
stamp: a# Lorg/graalvm/compiler/nodes/FrameState;
=== Inputs ===
value: a2862 
=== Succesors ===
=== Usages ===
v1492 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2862  <|@  <|@
tid v1492 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@5af49ed2
stamp: void
targetMethod: HotSpotMethod<FrameState.applyToVirtual(VirtualState$VirtualClosure)>
=== Inputs ===
arguments: a1488 a2100 
=== Succesors ===
=== Usages ===
v1124 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1488 a2100  <|@  <|@
tid ?2223 <|@
d <@d|@=== Debug Properties ===
bci: 61
code: ResolvedJavaMethodBytecode<FrameState.applyToVirtual(VirtualState$VirtualClosure)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: FrameState.java
sourceLine: 660
stackSize: 0
=== Inputs ===
outerFrameState: ?687 
values: - - - - 
=== Succesors ===
=== Usages ===
v1124 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?687 values: - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1124 <|@
d <@d|@=== Debug Properties ===
bci: 61
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
polymorphic: false
stamp: void
targetMethod: Direct#FrameState.applyToVirtual
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1492 
stateDuring: ?2223 
=== Succesors ===
next: v1121 
=== Usages ===
=== Predecessor ===
v2101 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1492 stateDuring: ?2223 #next: v1121  <|@  <|@
f <@*|@fixed>@ <|@
tid v1121 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 7
stamp: void
=== Inputs ===
loopBegin: v12 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1124 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v12  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B137" "B138" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583358136683543460
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v641 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 14]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2600 
=== Usages ===
=== Predecessor ===
v642 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2600  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2600 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j2615 
=== Usages ===
v2944 v2945 
=== Predecessor ===
v641 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j2615  <|@  <|@
f <@~|@floating>@ <|@
tid v2944 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j2600 
index: - 
=== Succesors ===
=== Usages ===
j2615 v2617 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2600 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2615 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2944 
=== Succesors ===
next: j2616 
=== Usages ===
j2721 j2621 v2965 
=== Predecessor ===
j2600 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2944 #next: j2616  <|@  <|@
f <@~|@floating>@ <|@
tid v2945 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j2600 
index: - 
=== Succesors ===
=== Usages ===
j2616 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2600 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2616 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2945 
=== Succesors ===
next: v2608 
=== Usages ===
v2605 
=== Predecessor ===
j2615 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2945 #next: v2608  <|@  <|@
f <@~|@floating>@ <|@
tid j2721 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2615 
y: j2693 
=== Succesors ===
=== Usages ===
v2605 v2617 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2615 y: j2693  <|@  <|@
f <@~|@floating>@ <|@
tid v2605 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2616 
y: j2721 
=== Succesors ===
=== Usages ===
v2608 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j2616 y: j2721  <|@  <|@
f <@*|@fixed>@ <|@
tid v2608 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v2605 
=== Succesors ===
trueSuccessor: v2606 
falseSuccessor: v2607 
=== Usages ===
=== Predecessor ===
j2616 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2605 #trueSuccessor: v2606 #falseSuccessor: v2607  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4553564209420277460
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2606 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a2611 
=== Usages ===
=== Predecessor ===
v2608 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2611  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2611 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?727 
arguments: v2430 i1429 i126 
=== Succesors ===
next: j2612 
=== Usages ===
j2612 
=== Predecessor ===
v2606 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?727 arguments: v2430 i1429 i126 #next: j2612  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2612 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a2611 
=== Succesors ===
next: v2622 
=== Usages ===
j2621 
=== Predecessor ===
a2611 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a2611 #next: v2622  <|@  <|@
f <@*|@fixed>@ <|@
tid v2622 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2619 
=== Predecessor ===
j2612 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583281127530792265
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2607 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2617 
=== Usages ===
=== Predecessor ===
v2608 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2617  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2617 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2944 
value: j2721 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2614 
=== Usages ===
=== Predecessor ===
v2607 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2944 value: j2721 stateAfter: - lastLocationAccess: - #next: v2614  <|@  <|@
f <@~|@floating>@ <|@
tid v2965 <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j2615 
index: - 
=== Succesors ===
=== Usages ===
v2614 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2615 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2614 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v2965 
=== Succesors ===
next: v2620 
=== Usages ===
=== Predecessor ===
v2617 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2965 #next: v2620  <|@  <|@
f <@*|@fixed>@ <|@
tid v2620 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2619 
=== Predecessor ===
v2614 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B138" "B137" 
    successors "B140" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583358136683543460
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2621 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2619 
values: j2615 j2612 
=== Succesors ===
=== Usages ===
v2948 v2947 a2104 v2966 v2967 v2968 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2619 values: j2615 j2612  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2619 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2620 v2622 
=== Succesors ===
next: a2104 
=== Usages ===
j2621 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2620 v2622 #next: a2104  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2104 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j2621 
=== Succesors ===
next: j2632 
=== Usages ===
a2110 
=== Predecessor ===
v2619 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j2621 #next: j2632  <|@  <|@
f <@~|@floating>@ <|@
tid v2627 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeList$NodeListIterator;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeList$NodeListIterator;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j2628 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2628 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v2627 
=== Succesors ===
=== Usages ===
v2946 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v2627  <|@  <|@
f <@~|@floating>@ <|@
tid v2946 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j2628 
index: - 
=== Succesors ===
=== Usages ===
j2632 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2628 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2632 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2946 
=== Succesors ===
next: v2633 
=== Usages ===
v2633 
=== Predecessor ===
a2104 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2946 #next: v2633  <|@  <|@
f <@~|@floating>@ <|@
tid v2947 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2621 
index: - 
=== Succesors ===
=== Usages ===
v2633 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2621 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2633 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2947 
value: j2632 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2636 
=== Usages ===
=== Predecessor ===
j2632 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2947 value: j2632 stateAfter: - lastLocationAccess: - #next: v2636  <|@  <|@
f <@~|@floating>@ <|@
tid v2948 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j2621 
index: - 
=== Succesors ===
=== Usages ===
v2636 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2621 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v2724 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeList$NodeListIterator;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeList$NodeListIterator;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2636 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2636 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2948 
value: v2724 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i2863 
=== Usages ===
=== Predecessor ===
v2633 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2948 value: v2724 stateAfter: - lastLocationAccess: - #next: i2863  <|@  <|@
f <@~|@floating>@ <|@
tid v2905 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2861 
=== Succesors ===
=== Usages ===
i2863 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2861  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2863 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.access$200(NodeList.java:34) [bci: 1]
at org.graalvm.compiler.graph.NodeList$NodeListIterator.<init>(NodeList.java:448) [bci: 11]
at org.graalvm.compiler.graph.NodeList$NodeListIterator.<init>(NodeList.java:441) [bci: 3]
at org.graalvm.compiler.graph.NodeList.iterator(NodeList.java:282) [bci: 7]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 18]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2905 
=== Succesors ===
next: v2640 
=== Usages ===
v2640 
=== Predecessor ===
v2636 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2905 #next: v2640  <|@  <|@
f <@~|@floating>@ <|@
tid v2966 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j2621 
index: - 
=== Succesors ===
=== Usages ===
v2640 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2621 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2640 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2966 
value: i2863 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2642 
=== Usages ===
=== Predecessor ===
i2863 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2966 value: i2863 stateAfter: - lastLocationAccess: - #next: v2642  <|@  <|@
f <@~|@floating>@ <|@
tid v2967 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j2621 
index: - 
=== Succesors ===
=== Usages ===
v2642 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2621 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2642 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2967 
value: i17 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2644 
=== Usages ===
=== Predecessor ===
v2640 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2967 value: i17 stateAfter: - lastLocationAccess: - #next: v2644  <|@  <|@
f <@~|@floating>@ <|@
tid v2968 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j2621 
index: - 
=== Succesors ===
=== Usages ===
v2644 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2621 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2644 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2968 
value: a2861 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a2110 
=== Usages ===
=== Predecessor ===
v2642 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2968 value: a2861 stateAfter: - lastLocationAccess: - #next: a2110  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2110 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a2104 
=== Succesors ===
next: v2111 
=== Usages ===
v1505 ?1243 v2906 v2907 
=== Predecessor ===
v2644 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a2104 #next: v2111  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2111 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v647 
=== Usages ===
=== Predecessor ===
a2110 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v647  <|@  <|@
f <@~|@floating>@ <|@
tid v2906 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a2110 
index: - 
=== Succesors ===
=== Usages ===
i2866 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2110 index: -  <|@  <|@
tid a765 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@4fb0693c
hasIdentity: true
objectId: 3
stamp: a!# Lorg/graalvm/compiler/graph/NodeList$NodeListIterator;
type: HotSpotType<Lorg/graalvm/compiler/graph/NodeList$NodeListIterator;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?2222 ?663 ?649 ?1243 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?1243 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a765 
materializedValue: a2110 
=== Succesors ===
=== Usages ===
?649 ?663 ?2222 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a765 materializedValue: a2110  <|@  <|@
tid ?649 <|@
d <@d|@=== Debug Properties ===
bci: 22
code: ResolvedJavaMethodBytecode<FrameState.applyToVirtual(VirtualState$VirtualClosure)>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: FrameState.java
sourceLine: 655
stackSize: 0
=== Inputs ===
outerFrameState: ?687 
values: a2848 a590 a765 - 
virtualObjectMappings: ?591 ?1243 
=== Succesors ===
=== Usages ===
v1684 a2659 i2865 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?687 values: a2848 a590 a765 - virtualObjectMappings: ?591 ?1243  <|@  <|@
f <@~|@floating>@ <|@
tid v2907 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a2110 
index: - 
=== Succesors ===
=== Usages ===
a2864 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2110 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v647 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 22]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v648 
=== Predecessor ===
v2111 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B139" "B152" 
    successors "B141" "B158" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 2
    probability 4587861736310913956
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v648 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 2.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 22]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v647 
=== Succesors ===
next: a2864 
=== Usages ===
v657 v674 v1887 v1881 v1875 v1869 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v647 #next: a2864  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2864 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: NodeList$NodeListIterator.list
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList$NodeListIterator.hasNext(NodeList.java:455) [bci: 33]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 23]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
nullCheck: false
stamp: n Lorg/graalvm/compiler/graph/NodeList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2907 
=== Succesors ===
next: i2865 
=== Usages ===
v2908 
=== Predecessor ===
v648 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2907 #next: i2865  <|@  <|@
f <@~|@floating>@ <|@
tid v2908 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2864 
=== Succesors ===
=== Usages ===
i2865 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2864  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2865 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: NodeList.size
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.access$400(NodeList.java:34) [bci: 1]
at org.graalvm.compiler.graph.NodeList$NodeListIterator.hasNext(NodeList.java:455) [bci: 36]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 23]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?649 
guard: - 
address: v2908 
=== Succesors ===
next: i2866 
=== Usages ===
v775 
=== Predecessor ===
a2864 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?649 guard: - address: v2908 #next: i2866  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2866 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: NodeList$NodeListIterator.index
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList$NodeListIterator.hasNext(NodeList.java:455) [bci: 29]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 23]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2906 
=== Succesors ===
next: v660 
=== Usages ===
v775 
=== Predecessor ===
i2865 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2906 #next: v660  <|@  <|@
f <@~|@floating>@ <|@
tid v775 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList$NodeListIterator.hasNext(NodeList.java:455) [bci: 39]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 23]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2866 
y: i2865 
=== Succesors ===
=== Usages ===
v660 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2866 y: i2865  <|@  <|@
f <@*|@fixed>@ <|@
tid v660 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 28]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v775 
=== Succesors ===
trueSuccessor: v659 
falseSuccessor: v657 
=== Usages ===
=== Predecessor ===
i2866 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v775 #trueSuccessor: v659 #falseSuccessor: v657  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B142" "B143" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4583358136683543460
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v659 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 31]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: a662 
=== Usages ===
=== Predecessor ===
v660 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a662  <|@  <|@
tid v1505 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 32]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
returnStamp: a Ljava/lang/Object;
signature: [Ljdk.vm.ci.meta.JavaType;@7a3a8430
stamp: void
targetMethod: HotSpotMethod<NodeList$NodeListIterator.next()>
=== Inputs ===
arguments: a2110 
=== Succesors ===
=== Usages ===
a662 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2110  <|@  <|@
tid ?2222 <|@
d <@d|@=== Debug Properties ===
bci: 32
code: ResolvedJavaMethodBytecode<FrameState.applyToVirtual(VirtualState$VirtualClosure)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: FrameState.java
sourceLine: 655
stackSize: 0
=== Inputs ===
outerFrameState: ?687 
values: a2848 a590 a765 - 
virtualObjectMappings: ?591 ?1243 
=== Succesors ===
=== Usages ===
a662 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?687 values: a2848 a590 a765 - virtualObjectMappings: ?591 ?1243  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a662 <|@
d <@d|@=== Debug Properties ===
bci: 32
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 32]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
polymorphic: false
stamp: a Ljava/lang/Object;
targetMethod: Direct#NodeList$NodeListIterator.next
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1505 
stateDuring: ?2222 
=== Succesors ===
next: v2115 
=== Usages ===
?663 v2949 v2909 v667 
=== Predecessor ===
v659 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1505 stateDuring: ?2222 #next: v2115  <|@  <|@
f <@~|@floating>@ <|@
tid v667 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:656) [bci: 43]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
value: a662 
=== Succesors ===
=== Usages ===
v1877 v2115 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a662  <|@  <|@
f <@*|@fixed>@ <|@
tid v2115 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:156) [bci: 15]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 37]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v667 
=== Succesors ===
trueSuccessor: v2114 
falseSuccessor: v2113 
=== Usages ===
=== Predecessor ===
a662 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v667 #trueSuccessor: v2114 #falseSuccessor: v2113  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B145" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4568307154746408066
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2114 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:157) [bci: 18]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 37]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2396 
=== Usages ===
=== Predecessor ===
v2115 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2396  <|@  <|@
f <@*|@fixed>@ <|@
tid v2396 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 37]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2394 
=== Predecessor ===
v2114 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B144" "B155" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4582588045156031508
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2113 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:160) [bci: 29]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 37]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2867 
=== Usages ===
=== Predecessor ===
v2115 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2867  <|@  <|@
f <@~|@floating>@ <|@
tid v2949 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a662 
index: - 
=== Succesors ===
=== Usages ===
v2867 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a662 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2867 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:161) [bci: 40]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 37]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2949 
=== Succesors ===
next: v2868 
=== Usages ===
v2918 
=== Predecessor ===
v2113 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2949 #next: v2868  <|@  <|@
f <@~|@floating>@ <|@
tid v2918 <|@
d <@d|@=== Debug Properties ===
displacement: 64
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v2867 
=== Succesors ===
=== Usages ===
v2868 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v2867  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2868 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: PrimarySupers:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:162) [bci: 54]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 37]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
nullCheck: false
stamp: Klass*
=== Inputs ===
stateBefore: - 
guard: - 
address: v2918 
=== Succesors ===
next: v2786 
=== Usages ===
v2119 
=== Predecessor ===
v2867 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2918 #next: v2786  <|@  <|@
f <@~|@floating>@ <|@
tid v2119 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:162) [bci: 58]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 37]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2868 
y: v2071 
=== Succesors ===
=== Usages ===
v2786 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2868 y: v2071  <|@  <|@
f <@*|@fixed>@ <|@
tid v2786 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 37]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2119 
=== Succesors ===
trueSuccessor: v2785 
falseSuccessor: v1869 
=== Usages ===
=== Predecessor ===
v2868 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2119 #trueSuccessor: v2785 #falseSuccessor: v1869  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B143" 
    successors "B145" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4582588045156031508
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2785 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 37]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2405 
=== Usages ===
=== Predecessor ===
v2786 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2405  <|@  <|@
f <@*|@fixed>@ <|@
tid v2405 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 37]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2394 
=== Predecessor ===
v2785 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B142" "B144" 
    successors "B146" "B148" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4583358136683543460
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2394 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 37]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2396 v2405 
=== Succesors ===
next: v1877 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2396 v2405 #next: v1877  <|@  <|@
f <@*|@fixed>@ <|@
tid v1877 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:656) [bci: 43]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v667 
=== Succesors ===
trueSuccessor: v1875 
falseSuccessor: v1872 
=== Usages ===
=== Predecessor ===
v2394 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v667 #trueSuccessor: v1875 #falseSuccessor: v1872  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B145" 
    successors "B147" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1875 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:656) [bci: 43]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v648 
=== Succesors ===
next: v1876 
=== Usages ===
=== Predecessor ===
v1877 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v648 #next: v1876  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B157" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1876 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:656) [bci: 43]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v12 
=== Succesors ===
next: v2297 
=== Usages ===
=== Predecessor ===
v1875 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v12 #next: v2297  <|@  <|@
f <@~|@floating>@ <|@
tid i2298 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -386315
stableDimension: 0
stamp: i32 [-386315] ⇊00000000fffa1af5 ⇈00000000fffa1af5
stampKind: i32
value: int[-386315|0xfffffffffffa1af5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2294 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2297 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2291 
=== Predecessor ===
v1876 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B145" 
    successors "B149" "B151" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4583358136683543460
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1872 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:656) [bci: 43]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2869 
=== Usages ===
=== Predecessor ===
v1877 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2869  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2869 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: NodeBitMap.bits
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 30]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.virtual.EscapeObjectState.applyToVirtual(EscapeObjectState.java:58) [bci: 2]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:656) [bci: 43]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
nullCheck: false
stamp: n# [J
=== Inputs ===
stateBefore: - 
guard: - 
address: v2889 
=== Succesors ===
next: v1883 
=== Usages ===
a1513 v1514 v2910 
=== Predecessor ===
v1872 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2889 #next: v1883  <|@  <|@
f <@~|@floating>@ <|@
tid v1514 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 38]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.virtual.EscapeObjectState.applyToVirtual(EscapeObjectState.java:58) [bci: 2]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:656) [bci: 43]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
value: a2869 
=== Succesors ===
=== Usages ===
v1883 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2869  <|@  <|@
f <@*|@fixed>@ <|@
tid v1883 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 38]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.virtual.EscapeObjectState.applyToVirtual(EscapeObjectState.java:58) [bci: 2]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:656) [bci: 43]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1514 
=== Succesors ===
trueSuccessor: v1881 
falseSuccessor: v1878 
=== Usages ===
=== Predecessor ===
a2869 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1514 #trueSuccessor: v1881 #falseSuccessor: v1878  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B148" 
    successors "B150" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1881 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 38]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.virtual.EscapeObjectState.applyToVirtual(EscapeObjectState.java:58) [bci: 2]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:656) [bci: 43]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v648 
=== Succesors ===
next: v1882 
=== Usages ===
=== Predecessor ===
v1883 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v648 #next: v1882  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B149" 
    successors "B157" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1882 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 38]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.virtual.EscapeObjectState.applyToVirtual(EscapeObjectState.java:58) [bci: 2]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:656) [bci: 43]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v12 
=== Succesors ===
next: v2299 
=== Usages ===
=== Predecessor ===
v1881 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v12 #next: v2299  <|@  <|@
f <@~|@floating>@ <|@
tid i2300 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -387851
stableDimension: 0
stamp: i32 [-387851] ⇊00000000fffa14f5 ⇈00000000fffa14f5
stampKind: i32
value: int[-387851|0xfffffffffffa14f5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2294 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2299 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2291 
=== Predecessor ===
v1882 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B148" 
    successors "B152" "B153" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4583358136683543460
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1878 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 38]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.virtual.EscapeObjectState.applyToVirtual(EscapeObjectState.java:58) [bci: 2]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:656) [bci: 43]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2870 
=== Usages ===
=== Predecessor ===
v1883 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2870  <|@  <|@
f <@~|@floating>@ <|@
tid v2910 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2869 
=== Succesors ===
=== Usages ===
i2870 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2869  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2870 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 38]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.virtual.EscapeObjectState.applyToVirtual(EscapeObjectState.java:58) [bci: 2]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:656) [bci: 43]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v2910 
=== Succesors ===
next: i2871 
=== Usages ===
v1528 
=== Predecessor ===
v1878 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2910 #next: i2871  <|@  <|@
f <@~|@floating>@ <|@
tid v2909 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a662 
index: - 
=== Succesors ===
=== Usages ===
i2871 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a662 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2871 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Node.id
nodeSourcePosition: at org.graalvm.compiler.graph.Node.id(Node.java:284) [bci: 1]
at org.graalvm.compiler.graph.NodeIdAccessor.getNodeId(NodeIdAccessor.java:61) [bci: 22]
at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:95) [bci: 25]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.virtual.EscapeObjectState.applyToVirtual(EscapeObjectState.java:58) [bci: 2]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:656) [bci: 43]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2909 
=== Succesors ===
next: v1889 
=== Usages ===
i747 j749 
=== Predecessor ===
i2870 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2909 #next: v1889  <|@  <|@
f <@~|@floating>@ <|@
tid i747 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 36]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.virtual.EscapeObjectState.applyToVirtual(EscapeObjectState.java:58) [bci: 2]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:656) [bci: 43]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: i32 [-33554432 - 33554431]
=== Inputs ===
x: i2871 
y: i531 
=== Succesors ===
=== Usages ===
v1528 v2911 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i2871 y: i531  <|@  <|@
f <@~|@floating>@ <|@
tid v1528 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 43]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.virtual.EscapeObjectState.applyToVirtual(EscapeObjectState.java:58) [bci: 2]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:656) [bci: 43]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i747 
y: i2870 
=== Succesors ===
=== Usages ===
v1889 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i747 y: i2870  <|@  <|@
f <@*|@fixed>@ <|@
tid v1889 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 43]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.virtual.EscapeObjectState.applyToVirtual(EscapeObjectState.java:58) [bci: 2]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:656) [bci: 43]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1528 
=== Succesors ===
trueSuccessor: v1884 
falseSuccessor: v1887 
=== Usages ===
=== Predecessor ===
i2871 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1528 #trueSuccessor: v1884 #falseSuccessor: v1887  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B151" 
    successors "B140" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 2
    probability 4583358136683543460
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1884 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 43]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.virtual.EscapeObjectState.applyToVirtual(EscapeObjectState.java:58) [bci: 2]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:656) [bci: 43]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2872 
=== Usages ===
j2872 v1535 
=== Predecessor ===
v1889 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2872  <|@  <|@
f <@~|@floating>@ <|@
tid a1513 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 30]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.virtual.EscapeObjectState.applyToVirtual(EscapeObjectState.java:58) [bci: 2]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:656) [bci: 43]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
op: Uncompress
stamp: a# [J
=== Inputs ===
value: a2869 
=== Succesors ===
=== Usages ===
v2911 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2869  <|@  <|@
f <@~|@floating>@ <|@
tid v2911 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: a1513 
index: i747 
=== Succesors ===
=== Usages ===
v1535 j2872 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1513 index: i747  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2872 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: long
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 38]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.virtual.EscapeObjectState.applyToVirtual(EscapeObjectState.java:58) [bci: 2]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:656) [bci: 43]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: v1884 
address: v2911 
=== Succesors ===
next: v1535 
=== Usages ===
j750 
=== Predecessor ===
v1884 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1884 address: v2911 #next: v1535  <|@  <|@
f <@~|@floating>@ <|@
tid j749 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 41]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.virtual.EscapeObjectState.applyToVirtual(EscapeObjectState.java:58) [bci: 2]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:656) [bci: 43]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: i64
=== Inputs ===
x: j534 
y: i2871 
=== Succesors ===
=== Usages ===
j750 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j534 y: i2871  <|@  <|@
f <@~|@floating>@ <|@
tid j750 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 42]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.virtual.EscapeObjectState.applyToVirtual(EscapeObjectState.java:58) [bci: 2]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:656) [bci: 43]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: i64
=== Inputs ===
x: j749 
y: j2872 
=== Succesors ===
=== Usages ===
v1535 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: j749 y: j2872  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1535 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: long
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 43]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.virtual.EscapeObjectState.applyToVirtual(EscapeObjectState.java:58) [bci: 2]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:656) [bci: 43]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1884 
address: v2911 
value: j750 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v674 
=== Usages ===
=== Predecessor ===
j2872 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1884 address: v2911 value: j750 stateAfter: - lastLocationAccess: - #next: v674  <|@  <|@
f <@*|@fixed>@ <|@
tid v674 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 22]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
loopBegin: v648 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1535 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v648  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B153"
    from_bci -1
    to_bci -1
    predecessors "B151" 
    successors "B154" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1887 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 43]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.virtual.EscapeObjectState.applyToVirtual(EscapeObjectState.java:58) [bci: 2]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:656) [bci: 43]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v648 
=== Succesors ===
next: v1888 
=== Usages ===
=== Predecessor ===
v1889 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v648 #next: v1888  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B154"
    from_bci -1
    to_bci -1
    predecessors "B153" 
    successors "B157" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1888 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 43]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.virtual.EscapeObjectState.applyToVirtual(EscapeObjectState.java:58) [bci: 2]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:656) [bci: 43]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v12 
=== Succesors ===
next: v2301 
=== Usages ===
=== Predecessor ===
v1887 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v12 #next: v2301  <|@  <|@
f <@~|@floating>@ <|@
tid i2302 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -391451
stableDimension: 0
stamp: i32 [-391451] ⇊00000000fffa06e5 ⇈00000000fffa06e5
stampKind: i32
value: int[-391451|0xfffffffffffa06e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2294 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2301 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2291 
=== Predecessor ===
v1888 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B155"
    from_bci -1
    to_bci -1
    predecessors "B143" 
    successors "B156" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1869 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 37]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v648 
=== Succesors ===
next: v1870 
=== Usages ===
=== Predecessor ===
v2786 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v648 #next: v1870  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B156"
    from_bci -1
    to_bci -1
    predecessors "B155" 
    successors "B157" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1870 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 37]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v12 
=== Succesors ===
next: v2292 
=== Usages ===
=== Predecessor ===
v1869 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v12 #next: v2292  <|@  <|@
f <@~|@floating>@ <|@
tid i2293 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -386083
stableDimension: 0
stamp: i32 [-386083] ⇊00000000fffa1bdd ⇈00000000fffa1bdd
stampKind: i32
value: int[-386083|0xfffffffffffa1bdd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2294 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2292 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2291 
=== Predecessor ===
v1870 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B157"
    from_bci -1
    to_bci -1
    predecessors "B156" "B147" "B150" "B154" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i2294 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-391451 - -386083] ⇊00000000fffa00c5 ⇈00000000fffa1ffd
valueDescription: i32
=== Inputs ===
merge: v2291 
values: i2293 i2298 i2300 i2302 
=== Succesors ===
=== Usages ===
v2296 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2291 values: i2293 i2298 i2300 i2302  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2291 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2292 v2297 v2299 v2301 
=== Succesors ===
next: v2296 
=== Usages ===
i2294 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2292 v2297 v2299 v2301 #next: v2296  <|@  <|@
tid ?663 <|@
d <@d|@=== Debug Properties ===
bci: 37
code: ResolvedJavaMethodBytecode<FrameState.applyToVirtual(VirtualState$VirtualClosure)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 32]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
rethrowException: false
sourceFile: FrameState.java
sourceLine: 655
stackSize: 1
=== Inputs ===
outerFrameState: ?687 
values: a2848 a590 a765 - a662 
virtualObjectMappings: ?591 ?1243 
=== Succesors ===
=== Usages ===
v2296 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?687 values: a2848 a590 a765 - a662 virtualObjectMappings: ?591 ?1243  <|@  <|@
f <@*|@fixed>@ <|@
tid v2296 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?663 
actionAndReason: i2294 
speculation: a2233 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2291 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?663 actionAndReason: i2294 speculation: a2233  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B158"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B159" "B160" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583358136683543460
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v657 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:659) [bci: 49]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v648 
=== Succesors ===
next: a2873 
=== Usages ===
=== Predecessor ===
v660 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v648 #next: a2873  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2873 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FrameState.outerFrameState
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.outerFrameState(FrameState.java:234) [bci: 1]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:659) [bci: 50]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
nullCheck: false
stamp: n# Lorg/graalvm/compiler/nodes/FrameState;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2904 
=== Succesors ===
next: v680 
=== Usages ===
a1537 v1538 
=== Predecessor ===
v657 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2904 #next: v680  <|@  <|@
f <@~|@floating>@ <|@
tid v1538 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
value: a2873 
=== Succesors ===
=== Usages ===
v680 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2873  <|@  <|@
f <@*|@fixed>@ <|@
tid v680 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:659) [bci: 53]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1538 
=== Succesors ===
trueSuccessor: v678 
falseSuccessor: v679 
=== Usages ===
=== Predecessor ===
a2873 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1538 #trueSuccessor: v678 #falseSuccessor: v679  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B159"
    from_bci -1
    to_bci -1
    predecessors "B158" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4578854537056172964
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v678 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:662) [bci: 64]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1684 
=== Usages ===
=== Predecessor ===
v680 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1684  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1684 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?649 
=== Succesors ===
next: v584 
=== Usages ===
=== Predecessor ===
v678 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?649 #next: v584  <|@  <|@
f <@*|@fixed>@ <|@
tid v584 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 3
stamp: void
=== Inputs ===
loopBegin: v12 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1684 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v12  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B160"
    from_bci -1
    to_bci -1
    predecessors "B158" 
    successors "B161" "B162" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4578854537056172964
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v679 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 56]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2648 
=== Usages ===
=== Predecessor ===
v680 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2648  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2648 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j2663 
=== Usages ===
v2950 v2951 
=== Predecessor ===
v679 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j2663  <|@  <|@
f <@~|@floating>@ <|@
tid v2950 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j2648 
index: - 
=== Succesors ===
=== Usages ===
j2663 v2665 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2648 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2663 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2950 
=== Succesors ===
next: j2664 
=== Usages ===
j2728 j2669 v2969 
=== Predecessor ===
j2648 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2950 #next: j2664  <|@  <|@
f <@~|@floating>@ <|@
tid v2951 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j2648 
index: - 
=== Succesors ===
=== Usages ===
j2664 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2648 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2664 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2951 
=== Succesors ===
next: v2656 
=== Usages ===
v2653 
=== Predecessor ===
j2663 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2951 #next: v2656  <|@  <|@
f <@~|@floating>@ <|@
tid j2728 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2663 
y: j1284 
=== Succesors ===
=== Usages ===
v2653 v2665 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2663 y: j1284  <|@  <|@
f <@~|@floating>@ <|@
tid v2653 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2664 
y: j2728 
=== Succesors ===
=== Usages ===
v2656 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j2664 y: j2728  <|@  <|@
f <@*|@fixed>@ <|@
tid v2656 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v2653 
=== Succesors ===
trueSuccessor: v2654 
falseSuccessor: v2655 
=== Usages ===
=== Predecessor ===
j2664 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2653 #trueSuccessor: v2654 #falseSuccessor: v2655  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B161"
    from_bci -1
    to_bci -1
    predecessors "B160" 
    successors "B163" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4549060609792906964
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2654 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a2659 
=== Usages ===
=== Predecessor ===
v2656 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2659  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2659 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?649 
arguments: v2430 i17 i126 
=== Succesors ===
next: j2660 
=== Usages ===
j2660 
=== Predecessor ===
v2654 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?649 arguments: v2430 i17 i126 #next: j2660  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2660 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a2659 
=== Succesors ===
next: v2670 
=== Usages ===
j2669 
=== Predecessor ===
a2659 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a2659 #next: v2670  <|@  <|@
f <@*|@fixed>@ <|@
tid v2670 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2667 
=== Predecessor ===
j2660 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B162"
    from_bci -1
    to_bci -1
    predecessors "B160" 
    successors "B163" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4578777527903421769
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2655 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2665 
=== Usages ===
=== Predecessor ===
v2656 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2665  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2665 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2950 
value: j2728 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2662 
=== Usages ===
=== Predecessor ===
v2655 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2950 value: j2728 stateAfter: - lastLocationAccess: - #next: v2662  <|@  <|@
f <@~|@floating>@ <|@
tid v2969 <|@
d <@d|@=== Debug Properties ===
displacement: 208
scale: Times1
stamp: void*
=== Inputs ===
base: j2663 
index: - 
=== Succesors ===
=== Usages ===
v2662 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2663 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2662 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v2969 
=== Succesors ===
next: v2668 
=== Usages ===
=== Predecessor ===
v2665 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2969 #next: v2668  <|@  <|@
f <@*|@fixed>@ <|@
tid v2668 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2667 
=== Predecessor ===
v2662 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B163"
    from_bci -1
    to_bci -1
    predecessors "B162" "B161" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4578854537056172964
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2669 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2667 
values: j2663 j2660 
=== Succesors ===
=== Usages ===
v2954 v2919 a2133 v2953 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2667 values: j2663 j2660  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2667 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2668 v2670 
=== Succesors ===
next: a2133 
=== Usages ===
j2669 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2668 v2670 #next: a2133  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2133 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j2669 
=== Succesors ===
next: j2679 
=== Usages ===
a2138 
=== Predecessor ===
v2667 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j2669 #next: j2679  <|@  <|@
f <@~|@floating>@ <|@
tid j2675 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v2588 
=== Succesors ===
=== Usages ===
v2952 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v2588  <|@  <|@
f <@~|@floating>@ <|@
tid v2952 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j2675 
index: - 
=== Succesors ===
=== Usages ===
j2679 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2675 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2679 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2952 
=== Succesors ===
next: v2680 
=== Usages ===
v2680 
=== Predecessor ===
a2133 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2952 #next: v2680  <|@  <|@
f <@~|@floating>@ <|@
tid v2953 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2669 
index: - 
=== Succesors ===
=== Usages ===
v2680 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2669 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2680 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2953 
value: j2679 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2683 
=== Usages ===
=== Predecessor ===
j2679 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2953 value: j2679 stateAfter: - lastLocationAccess: - #next: v2683  <|@  <|@
f <@~|@floating>@ <|@
tid v2954 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j2669 
index: - 
=== Succesors ===
=== Usages ===
v2683 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2669 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2683 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2954 
value: v2720 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2137 
=== Usages ===
=== Predecessor ===
v2680 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2954 value: v2720 stateAfter: - lastLocationAccess: - #next: v2137  <|@  <|@
f <@~|@floating>@ <|@
tid v2919 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j2669 
index: - 
=== Succesors ===
=== Usages ===
v2137 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2669 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2137 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2919 
value: a2843 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a2138 
=== Usages ===
=== Predecessor ===
v2683 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2919 value: a2843 stateAfter: - lastLocationAccess: - #next: a2138  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2138 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a2133 
=== Succesors ===
next: v2139 
=== Usages ===
v1541 
=== Predecessor ===
v2137 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a2133 #next: v2139  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2139 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v683 
=== Usages ===
=== Predecessor ===
a2138 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v683  <|@  <|@
f <@~|@floating>@ <|@
tid a1537 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.outerFrameState(FrameState.java:234) [bci: 1]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:659) [bci: 50]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
op: Uncompress
stamp: a# Lorg/graalvm/compiler/nodes/FrameState;
=== Inputs ===
value: a2873 
=== Succesors ===
=== Usages ===
v1541 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2873  <|@  <|@
tid v1541 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@d56743e
stamp: void
targetMethod: HotSpotMethod<FrameState.applyToVirtual(VirtualState$VirtualClosure)>
=== Inputs ===
arguments: a1537 a2138 
=== Succesors ===
=== Usages ===
v683 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1537 a2138  <|@  <|@
tid ?2224 <|@
d <@d|@=== Debug Properties ===
bci: 61
code: ResolvedJavaMethodBytecode<FrameState.applyToVirtual(VirtualState$VirtualClosure)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: FrameState.java
sourceLine: 660
stackSize: 0
=== Inputs ===
outerFrameState: ?687 
values: - - - - 
=== Succesors ===
=== Usages ===
v683 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?687 values: - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v683 <|@
d <@d|@=== Debug Properties ===
bci: 61
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
polymorphic: false
stamp: void
targetMethod: Direct#FrameState.applyToVirtual
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1541 
stateDuring: ?2224 
=== Succesors ===
next: v759 
=== Usages ===
=== Predecessor ===
v2139 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1541 stateDuring: ?2224 #next: v759  <|@  <|@
f <@*|@fixed>@ <|@
tid v759 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 4
stamp: void
=== Inputs ===
loopBegin: v12 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v683 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v12  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B164"
    from_bci -1
    to_bci -1
    predecessors "B128" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1858 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 43]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:653) [bci: 2]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v12 
=== Succesors ===
next: v2324 
=== Usages ===
=== Predecessor ===
v1859 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v12 #next: v2324  <|@  <|@
f <@~|@floating>@ <|@
tid i2326 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -377883
stableDimension: 0
stamp: i32 [-377883] ⇊00000000fffa3be5 ⇈00000000fffa3be5
stampKind: i32
value: int[-377883|0xfffffffffffa3be5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2324 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2324 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?983 
actionAndReason: i2326 
speculation: a2233 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1858 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?983 actionAndReason: i2326 speculation: a2233  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B165"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B166" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2744 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList$NodeListIterator.next(NodeList.java:462) [bci: 46]
at org.graalvm.compiler.graph.NodeList$NodeListIterator.next(NodeList.java:441) [bci: 1]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 32]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2742 
=== Usages ===
=== Predecessor ===
v2748 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2742  <|@  <|@
f <@*|@fixed>@ <|@
tid v2742 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList$NodeListIterator.next(NodeList.java:462) [bci: 46]
at org.graalvm.compiler.graph.NodeList$NodeListIterator.next(NodeList.java:441) [bci: 1]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 32]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2741 
=== Predecessor ===
v2744 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B166"
    from_bci -1
    to_bci -1
    predecessors "B165" "B107" 
    successors "B167" 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2741 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList$NodeListIterator.next(NodeList.java:462) [bci: 46]
at org.graalvm.compiler.graph.NodeList$NodeListIterator.next(NodeList.java:441) [bci: 1]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 32]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2742 v2743 
=== Succesors ===
next: v1829 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2742 v2743 #next: v1829  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B167"
    from_bci -1
    to_bci -1
    predecessors "B166" 
    successors "B168" 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1829 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList$NodeListIterator.next(NodeList.java:462) [bci: 46]
at org.graalvm.compiler.graph.NodeList$NodeListIterator.next(NodeList.java:441) [bci: 1]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 32]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v12 
=== Succesors ===
next: v2282 
=== Usages ===
=== Predecessor ===
v2741 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v12 #next: v2282  <|@  <|@
f <@~|@floating>@ <|@
tid a2284 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@295001017
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@295001017]
=== Inputs ===
=== Succesors ===
=== Usages ===
a2286 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2283 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -365083
stableDimension: 0
stamp: i32 [-365083] ⇊00000000fffa6de5 ⇈00000000fffa6de5
stampKind: i32
value: int[-365083|0xfffffffffffa6de5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2285 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2282 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2281 
=== Predecessor ===
v1829 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B168"
    from_bci -1
    to_bci -1
    predecessors "B167" "B102" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i2285 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-365083 - -363787] ⇊00000000fffa60e5 ⇈00000000fffa7ff5
valueDescription: i32
=== Inputs ===
merge: v2281 
values: i2283 i2289 
=== Succesors ===
=== Usages ===
v2287 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2281 values: i2283 i2289  <|@  <|@
f <@~|@floating>@ <|@
tid a2286 <|@
d <@d|@=== Debug Properties ===
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
valueDescription: a -
=== Inputs ===
merge: v2281 
values: a2284 a2290 
=== Succesors ===
=== Usages ===
v2287 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2281 values: a2284 a2290  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2281 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2282 v2288 
=== Succesors ===
next: v2287 
=== Usages ===
i2285 a2286 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2282 v2288 #next: v2287  <|@  <|@
f <@*|@fixed>@ <|@
tid v2287 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?538 
actionAndReason: i2285 
speculation: a2286 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2281 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?538 actionAndReason: i2285 speculation: a2286  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B169"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B171" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1819 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 43]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:653) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v12 
=== Succesors ===
next: v2253 
=== Usages ===
=== Predecessor ===
v1820 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v12 #next: v2253  <|@  <|@
f <@~|@floating>@ <|@
tid i2254 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -357915
stableDimension: 0
stamp: i32 [-357915] ⇊00000000fffa89e5 ⇈00000000fffa89e5
stampKind: i32
value: int[-357915|0xfffffffffffa89e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2244 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2253 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2241 
=== Predecessor ===
v1819 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B170"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B171" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1799 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 5]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v12 
=== Succesors ===
next: v2242 
=== Usages ===
=== Predecessor ===
v2770 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v12 #next: v2242  <|@  <|@
f <@~|@floating>@ <|@
tid i2243 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -351523
stableDimension: 0
stamp: i32 [-351523] ⇊00000000fffaa2dd ⇈00000000fffaa2dd
stampKind: i32
value: int[-351523|0xfffffffffffaa2dd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2244 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2242 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2241 
=== Predecessor ===
v1799 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B171"
    from_bci -1
    to_bci -1
    predecessors "B170" "B91" "B93" "B95" "B169" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i2244 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-357915 - -351523] ⇊00000000fffa80c5 ⇈00000000fffabbfd
valueDescription: i32
=== Inputs ===
merge: v2241 
values: i2243 i2248 i2250 i2252 i2254 
=== Succesors ===
=== Usages ===
v2246 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2241 values: i2243 i2248 i2250 i2252 i2254  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2241 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2242 v2247 v2249 v2251 v2253 
=== Succesors ===
next: v2246 
=== Usages ===
i2244 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2242 v2247 v2249 v2251 v2253 #next: v2246  <|@  <|@
tid ?306 <|@
d <@d|@=== Debug Properties ===
bci: 27
code: ResolvedJavaMethodBytecode<Iterable.forEach(Consumer)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
rethrowException: false
sourceFile: Iterable.java
sourceLine: 74
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - a2 a38 - a954 
=== Succesors ===
=== Usages ===
v2246 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 a38 - a954  <|@  <|@
f <@*|@fixed>@ <|@
tid v2246 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?306 
actionAndReason: i2244 
speculation: a2233 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2241 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?306 actionAndReason: i2244 speculation: a2233  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B172"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B173" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587614405250104338
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v950 
=== Usages ===
=== Predecessor ===
v95 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v950  <|@  <|@
f <@*|@fixed>@ <|@
tid v950 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v949 
=== Predecessor ===
v94 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B173"
    from_bci -1
    to_bci -1
    predecessors "B172" "B78" 
    successors "B174" "B183" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591076232195416571
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a955 <|@
d <@d|@=== Debug Properties ===
stamp: a -
valueDescription: a -
=== Inputs ===
merge: v949 
values: a25 a1360 
=== Succesors ===
=== Usages ===
v1553 v1552 v1546 ?951 v2955 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v949 values: a25 a1360  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v949 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v950 v1059 
=== Succesors ===
next: v2874 
=== Usages ===
a955 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v950 v1059 #next: v2874  <|@  <|@
f <@~|@floating>@ <|@
tid v2933 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v2874 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2874 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2933 
=== Succesors ===
next: v103 
=== Usages ===
v2714 
=== Predecessor ===
v949 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2933 #next: v103  <|@  <|@
f <@~|@floating>@ <|@
tid v2713 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
rawvalue: meta{HotSpotType<Lorg/graalvm/compiler/phases/common/CanonicalizerPhase$Instance$$Lambda$21/340690072;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lorg/graalvm/compiler/phases/common/CanonicalizerPhase$Instance$$Lambda$21/340690072;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2714 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2714 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2874 
y: v2713 
=== Succesors ===
=== Usages ===
v103 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2874 y: v2713  <|@  <|@
f <@*|@fixed>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/phases/common/CanonicalizerPhase$Instance$$Lambda$21/340690072; target_method=accept target_method_class=Lorg/graalvm/compiler/phases/common/CanonicalizerPhase$Instance$$Lambda$21/340690072; position=at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
trueSuccessorProbability: 0.7065224035699004
=== Inputs ===
condition: v2714 
=== Succesors ===
trueSuccessor: v99 
falseSuccessor: v102 
=== Usages ===
=== Predecessor ===
v2874 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2714 #trueSuccessor: v99 #falseSuccessor: v102  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B174"
    from_bci -1
    to_bci -1
    predecessors "B173" 
    successors "B175" "B176" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589194509158168565
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/phases/common/CanonicalizerPhase$Instance$$Lambda$21/340690072; target_method=accept target_method_class=Lorg/graalvm/compiler/phases/common/CanonicalizerPhase$Instance$$Lambda$21/340690072; position=at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2161 
=== Usages ===
=== Predecessor ===
v103 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2161  <|@  <|@
f <@~|@floating>@ <|@
tid v1546 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance$$Lambda$21.340690072.accept(Object) [bci: 5]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
value: a955 
=== Succesors ===
=== Usages ===
v2161 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a955  <|@  <|@
f <@*|@fixed>@ <|@
tid v2161 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:156) [bci: 15]
at org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance$$Lambda$21.340690072.accept(Object) [bci: 5]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v1546 
=== Succesors ===
trueSuccessor: v2160 
falseSuccessor: v2159 
=== Usages ===
=== Predecessor ===
v99 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1546 #trueSuccessor: v2160 #falseSuccessor: v2159  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B175"
    from_bci -1
    to_bci -1
    predecessors "B174" 
    successors "B178" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573898163745688762
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2160 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:157) [bci: 18]
at org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance$$Lambda$21.340690072.accept(Object) [bci: 5]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2412 
=== Usages ===
=== Predecessor ===
v2161 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2412  <|@  <|@
f <@*|@fixed>@ <|@
tid v2412 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance$$Lambda$21.340690072.accept(Object) [bci: 5]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2410 
=== Predecessor ===
v2160 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B176"
    from_bci -1
    to_bci -1
    predecessors "B174" 
    successors "B177" "B181" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588314980326800979
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2159 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:160) [bci: 29]
at org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance$$Lambda$21.340690072.accept(Object) [bci: 5]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2875 
=== Usages ===
=== Predecessor ===
v2161 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2875  <|@  <|@
f <@~|@floating>@ <|@
tid v2955 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a955 
index: - 
=== Succesors ===
=== Usages ===
v2875 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a955 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2875 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:161) [bci: 40]
at org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance$$Lambda$21.340690072.accept(Object) [bci: 5]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2955 
=== Succesors ===
next: v2876 
=== Usages ===
v2920 
=== Predecessor ===
v2159 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2955 #next: v2876  <|@  <|@
f <@~|@floating>@ <|@
tid v2920 <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v2875 
=== Succesors ===
=== Usages ===
v2876 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v2875  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2876 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: PrimarySupers:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:162) [bci: 54]
at org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance$$Lambda$21.340690072.accept(Object) [bci: 5]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
nullCheck: false
stamp: Klass*
=== Inputs ===
stateBefore: - 
guard: - 
address: v2920 
=== Succesors ===
next: v2794 
=== Usages ===
v2165 
=== Predecessor ===
v2875 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2920 #next: v2794  <|@  <|@
f <@~|@floating>@ <|@
tid v2165 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:162) [bci: 58]
at org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance$$Lambda$21.340690072.accept(Object) [bci: 5]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2876 
y: v1995 
=== Succesors ===
=== Usages ===
v2794 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2876 y: v1995  <|@  <|@
f <@*|@fixed>@ <|@
tid v2794 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance$$Lambda$21.340690072.accept(Object) [bci: 5]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2165 
=== Succesors ===
trueSuccessor: v2793 
falseSuccessor: v1893 
=== Usages ===
=== Predecessor ===
v2876 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2165 #trueSuccessor: v2793 #falseSuccessor: v1893  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B177"
    from_bci -1
    to_bci -1
    predecessors "B176" 
    successors "B178" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588314980326800979
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2793 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance$$Lambda$21.340690072.accept(Object) [bci: 5]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2421 
=== Usages ===
=== Predecessor ===
v2794 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2421  <|@  <|@
f <@*|@fixed>@ <|@
tid v2421 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance$$Lambda$21.340690072.accept(Object) [bci: 5]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2410 
=== Predecessor ===
v2793 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B178"
    from_bci -1
    to_bci -1
    predecessors "B175" "B177" 
    successors "B179" "B180" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589194509158168565
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2410 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance$$Lambda$21.340690072.accept(Object) [bci: 5]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2412 v2421 
=== Succesors ===
next: a2877 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2412 v2421 #next: a2877  <|@  <|@
f <@~|@floating>@ <|@
tid v2981 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a2877 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2877 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: 340690072.arg$1
nodeSourcePosition: at org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance$$Lambda$21.340690072.accept(Object) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
nullCheck: false
stamp: n Lorg/graalvm/compiler/graph/NodeWorkList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2981 
=== Succesors ===
next: v1899 
=== Usages ===
a1544 v1549 
=== Predecessor ===
v2410 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2981 #next: v1899  <|@  <|@
f <@~|@floating>@ <|@
tid v1549 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance$$Lambda$21.340690072.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
value: a2877 
=== Succesors ===
=== Usages ===
v1899 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2877  <|@  <|@
f <@*|@fixed>@ <|@
tid v1899 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance$$Lambda$21.340690072.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1549 
=== Succesors ===
trueSuccessor: v1898 
falseSuccessor: v1895 
=== Usages ===
=== Predecessor ===
a2877 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1549 #trueSuccessor: v1898 #falseSuccessor: v1895  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B179"
    from_bci -1
    to_bci -1
    predecessors "B178" 
    successors "B182" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1898 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance$$Lambda$21.340690072.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v12 
=== Succesors ===
next: v2317 
=== Usages ===
=== Predecessor ===
v1899 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v12 #next: v2317  <|@  <|@
f <@~|@floating>@ <|@
tid i2318 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -396811
stableDimension: 0
stamp: i32 [-396811] ⇊00000000fff9f1f5 ⇈00000000fff9f1f5
stampKind: i32
value: int[-396811|0xfffffffffff9f1f5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2314 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2317 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2311 
=== Predecessor ===
v1898 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B180"
    from_bci -1
    to_bci -1
    predecessors "B178" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4589194509158168565
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1895 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance$$Lambda$21.340690072.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v148 
=== Usages ===
=== Predecessor ===
v1899 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v148  <|@  <|@
f <@~|@floating>@ <|@
tid a1544 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance$$Lambda$21.340690072.accept(Object) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
op: Uncompress
stamp: a Lorg/graalvm/compiler/graph/NodeWorkList;
=== Inputs ===
value: a2877 
=== Succesors ===
=== Usages ===
v1552 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2877  <|@  <|@
tid v1552 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance$$Lambda$21.340690072.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@41e30521
stamp: void
targetMethod: HotSpotMethod<NodeWorkList.add(Node)>
=== Inputs ===
arguments: a1544 a955 
=== Succesors ===
=== Usages ===
v148 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1544 a955  <|@  <|@
tid ?151 <|@
d <@d|@=== Debug Properties ===
bci: 30
code: ResolvedJavaMethodBytecode<Iterable.forEach(Consumer)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Iterable.java
sourceLine: 75
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a2 a38 - 
=== Succesors ===
=== Usages ===
?2221 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 a38 -  <|@  <|@
tid ?2221 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<340690072.accept(Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
stackSize: 0
=== Inputs ===
outerFrameState: ?151 
values: - - 
=== Succesors ===
=== Usages ===
v148 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?151 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v148 <|@
d <@d|@=== Debug Properties ===
bci: 8
nodeSourcePosition: at org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance$$Lambda$21.340690072.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
polymorphic: false
stamp: void
targetMethod: Direct#NodeWorkList.add
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1552 
stateDuring: ?2221 
=== Succesors ===
next: v159 
=== Usages ===
=== Predecessor ===
v1895 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1552 stateDuring: ?2221 #next: v159  <|@  <|@
f <@*|@fixed>@ <|@
tid v159 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 1
nodeSourcePosition: at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
loopBegin: v12 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v148 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v12  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B181"
    from_bci -1
    to_bci -1
    predecessors "B176" 
    successors "B182" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1893 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance$$Lambda$21.340690072.accept(Object) [bci: 5]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v12 
=== Succesors ===
next: v2312 
=== Usages ===
=== Predecessor ===
v2794 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v12 #next: v2312  <|@  <|@
f <@~|@floating>@ <|@
tid i2313 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -396323
stableDimension: 0
stamp: i32 [-396323] ⇊00000000fff9f3dd ⇈00000000fff9f3dd
stampKind: i32
value: int[-396323|0xfffffffffff9f3dd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2314 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2312 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2311 
=== Predecessor ===
v1893 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B182"
    from_bci -1
    to_bci -1
    predecessors "B181" "B179" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i2314 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-396811 - -396323] ⇊00000000fff9f1d5 ⇈00000000fff9f3fd
valueDescription: i32
=== Inputs ===
merge: v2311 
values: i2313 i2318 
=== Succesors ===
=== Usages ===
v2316 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2311 values: i2313 i2318  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2311 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2312 v2317 
=== Succesors ===
next: v2316 
=== Usages ===
i2314 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2312 v2317 #next: v2316  <|@  <|@
tid ?951 <|@
d <@d|@=== Debug Properties ===
bci: 27
code: ResolvedJavaMethodBytecode<Iterable.forEach(Consumer)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
rethrowException: false
sourceFile: Iterable.java
sourceLine: 74
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - a2 a38 - a955 
=== Succesors ===
=== Usages ===
v2316 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 a38 - a955  <|@  <|@
f <@*|@fixed>@ <|@
tid v2316 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?951 
actionAndReason: i2314 
speculation: a2233 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2311 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?951 actionAndReason: i2314 speculation: a2233  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B183"
    from_bci -1
    to_bci -1
    predecessors "B173" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4583184113557415962
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v28 
=== Usages ===
=== Predecessor ===
v103 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v28  <|@  <|@
tid v1553 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Interface
nodeSourcePosition: at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@3f9f01c1
stamp: void
targetMethod: HotSpotMethod<Consumer.accept(Object)>
=== Inputs ===
arguments: a2 a955 
=== Succesors ===
=== Usages ===
v28 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2 a955  <|@  <|@
tid ?2220 <|@
d <@d|@=== Debug Properties ===
bci: 30
code: ResolvedJavaMethodBytecode<Iterable.forEach(Consumer)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Iterable.java
sourceLine: 75
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a2 a38 - 
=== Succesors ===
=== Usages ===
v28 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 a38 -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
bci: 30
nodeSourcePosition: at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
polymorphic: true
stamp: void
targetMethod: Direct#Consumer.accept
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1553 
stateDuring: ?2220 
=== Succesors ===
next: v30 
=== Usages ===
=== Predecessor ===
v102 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1553 stateDuring: ?2220 #next: v30  <|@  <|@
f <@*|@fixed>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.lang.Iterable.forEach(Iterable.java:74) [bci: 12]
stamp: void
=== Inputs ===
loopBegin: v12 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v28 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v12  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B184"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1794 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeUsageIterator; target_method=hasNext target_method_class=Lorg/graalvm/compiler/graph/NodeUsageIterator; position=at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v12 
=== Succesors ===
next: v1792 
=== Usages ===
=== Predecessor ===
v1795 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v12 #next: v1792  <|@  <|@
tid ?13 <|@
d <@d|@=== Debug Properties ===
bci: 12
code: ResolvedJavaMethodBytecode<Iterable.forEach(Consumer)>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Iterable.java
sourceLine: 74
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a2 a38 - 
=== Succesors ===
=== Usages ===
v1792 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 a38 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1792 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1363
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeUsageIterator; target_method=hasNext target_method_class=Lorg/graalvm/compiler/graph/NodeUsageIterator; position=at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
reason: TypeCheckedInliningViolated
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?13 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1794 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?13  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B185"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1721 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeUsageIterable; target_method=iterator target_method_class=Lorg/graalvm/compiler/graph/NodeUsageIterable; position=at java.lang.Iterable.forEach(Iterable.java:74) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2236 
=== Usages ===
=== Predecessor ===
v1722 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2236  <|@  <|@
f <@~|@floating>@ <|@
tid i2240 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -400435
stableDimension: 0
stamp: i32 [-400435] ⇊00000000fff9e3cd ⇈00000000fff9e3cd
stampKind: i32
value: int[-400435|0xfffffffffff9e3cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2236 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2236 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i2240 
speculation: a2233 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1721 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i2240 speculation: a2233  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v2977 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v2977  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! -
uncheckedStamp: a! Ljava/lang/Iterable;
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 ?109 ?2210 v2921 v2913 v2912 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a -
uncheckedStamp: a Ljava/util/function/Consumer;
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 ?2214 v2977 ?120 ?13 ?151 ?2220 v2933 ?951 ?115 ?336 ?129 ?142 ?306 v2887 v1553 v2981 v2982 v2983 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<Iterable.forEach(Consumer)>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Iterable.java
sourceLine: 73
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - - 
=== Succesors ===
=== Usages ===
v2236 a2492 v2977 v2978 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2977 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
object: a2 
=== Succesors ===
next: v2810 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: a2 #next: v2810  <|@  <|@
f <@~|@floating>@ <|@
tid v2921 <|@
result [v0|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v2810 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2810 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 6]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2921 
=== Succesors ===
next: v46 
=== Usages ===
v2692 v2690 
=== Predecessor ===
v2977 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2921 #next: v46  <|@  <|@
f <@~|@floating>@ <|@
tid v2689 <|@
result meta{HotSpotType<Lorg/graalvm/compiler/graph/iterators/FilteredNodeIterable;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 6]
rawvalue: meta{HotSpotType<Lorg/graalvm/compiler/graph/iterators/FilteredNodeIterable;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lorg/graalvm/compiler/graph/iterators/FilteredNodeIterable;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2690 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2690 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 6]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2810 
y: v2689 
=== Succesors ===
=== Usages ===
v46 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2810 y: v2689  <|@  <|@
f <@~|@floating>@ <|@
tid a2233 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2236 v2324 v2296 v2278 v2308 v2260 v2316 v2246 v2270 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a1572 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:45) [bci: 99]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
rawvalue: null
stableDimension: 0
stamp: n - NULL
stampKind: n -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1283 v1296 v1315 v1351 v1358 v1362 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2705 <|@
result meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeUsageIterator;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeUsageIterator;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeUsageIterator;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2516 v2710 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i17 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Iterable.forEach(Iterable.java:74) [bci: 18]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2642 v1705 v1090 v267 v190 v201 v260 v238 v506 i625 v577 v458 v469 v570 v2476 v2524 a2572 a2659 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2698 <|@
result meta{HotSpotType<Lorg/graalvm/compiler/graph/iterators/PredicatedProxyNodeIterator;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Lorg/graalvm/compiler/graph/iterators/PredicatedProxyNodeIterator;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lorg/graalvm/compiler/graph/iterators/PredicatedProxyNodeIterator;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2472 v2709 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i126 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:39) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i613 v1708 a2444 a2492 a2572 a2611 a2659 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1429 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList$NodeListIterator.next(NodeList.java:462) [bci: 46]
at org.graalvm.compiler.graph.NodeList$NodeListIterator.next(NodeList.java:441) [bci: 1]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 32]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
a2611 a2444 a2492 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2430 <|@
result v3|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a2444 a2492 a2572 a2611 a2659 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2693 <|@
result long[24|0x18] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 24
stableDimension: 0
stamp: i64 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2694 j2721 j2702 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2912 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a2811 a2813 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/iterators/FilteredNodeIterable; target_method=iterator target_method_class=Lorg/graalvm/compiler/graph/iterators/FilteredNodeIterable; position=at java.lang.Iterable.forEach(Iterable.java:74) [bci: 6]
stamp: void
trueSuccessorProbability: 0.9129709784999646
=== Inputs ===
condition: v2690 
=== Succesors ===
trueSuccessor: v42 
falseSuccessor: v45 
=== Usages ===
=== Predecessor ===
v2810 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2690 #trueSuccessor: v42 #falseSuccessor: v45  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@11aa1906 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Iterable.forEach(Iterable.java:73) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [v1|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/iterators/FilteredNodeIterable;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9129709784999646 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4606398531062421451
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/iterators/FilteredNodeIterable; target_method=iterator target_method_class=Lorg/graalvm/compiler/graph/iterators/FilteredNodeIterable; position=at java.lang.Iterable.forEach(Iterable.java:74) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2811 
=== Usages ===
=== Predecessor ===
v46 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2811  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2811 <|@
result v4|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FilteredNodeIterable.nodeIterable
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.FilteredNodeIterable.iterator(FilteredNodeIterable.java:45) [bci: 5]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 6]
nullCheck: false
stamp: n -
=== Inputs ===
stateBefore: - 
guard: - 
address: v2912 
=== Succesors ===
next: v2978 
=== Usages ===
a1556 v2978 
=== Predecessor ===
v42 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2912 #next: v2978  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2978 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
object: a2811 
=== Succesors ===
next: a108 
=== Usages ===
=== Predecessor ===
a2811 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: a2811 #next: a108  <|@  <|@
f <@~|@floating>@ <|@
tid a1556 <|@
result v5|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.FilteredNodeIterable.iterator(FilteredNodeIterable.java:45) [bci: 5]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 6]
op: Uncompress
stamp: a -
=== Inputs ===
value: a2811 
=== Succesors ===
=== Usages ===
v1560 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2811  <|@  <|@
tid v1560 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Interface
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.FilteredNodeIterable.iterator(FilteredNodeIterable.java:45) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 6]
returnStamp: a - (unchecked=a Ljava/util/Iterator;)
signature: [Ljdk.vm.ci.meta.JavaType;@1cfb2629
stamp: void
targetMethod: HotSpotMethod<NodeIterable.iterator()>
=== Inputs ===
arguments: a1556 
=== Succesors ===
=== Usages ===
a108 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1556  <|@  <|@
tid ?115 <|@
d <@d|@=== Debug Properties ===
bci: 6
code: ResolvedJavaMethodBytecode<Iterable.forEach(Consumer)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Iterable.java
sourceLine: 74
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a2 - - 
=== Succesors ===
=== Usages ===
?109 ?2210 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 - -  <|@  <|@
tid a162 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@7aa02d1e
hasIdentity: true
objectId: 0
stamp: a!# Lorg/graalvm/compiler/graph/iterators/PredicatedProxyNodeIterator;
type: HotSpotType<Lorg/graalvm/compiler/graph/iterators/PredicatedProxyNodeIterator;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?109 ?109 ?163 ?2210 ?2210 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?163 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a162 
values: - - - 
=== Succesors ===
=== Usages ===
?109 ?2210 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a162 values: - - -  <|@  <|@
tid ?2210 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<FilteredNodeIterable.iterator()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: FilteredNodeIterable.java
sourceLine: 45
stackSize: 2
=== Inputs ===
outerFrameState: ?115 
values: a1 a162 a162 
virtualObjectMappings: ?163 
=== Succesors ===
=== Usages ===
a108 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?115 values: a1 a162 a162 virtualObjectMappings: ?163  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a108 <|@
result v6|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 8
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.FilteredNodeIterable.iterator(FilteredNodeIterable.java:45) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 6]
polymorphic: false
stamp: a -
targetMethod: Direct#NodeIterable.iterator
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1560 
stateDuring: ?2210 
=== Succesors ===
next: j2432 
=== Usages ===
?109 a1925 
=== Predecessor ===
v2978 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1560 stateDuring: ?2210 #next: j2432  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2432 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j2451 
=== Usages ===
v2922 v2923 
=== Predecessor ===
a108 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j2451  <|@  <|@
f <@~|@floating>@ <|@
tid v2922 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j2432 
index: - 
=== Succesors ===
=== Usages ===
j2451 v2453 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2432 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2451 <|@
result v7|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2922 
=== Succesors ===
next: j2452 
=== Usages ===
j2694 j2457 v2956 
=== Predecessor ===
j2432 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2922 #next: j2452  <|@  <|@
f <@~|@floating>@ <|@
tid v2923 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j2432 
index: - 
=== Succesors ===
=== Usages ===
j2452 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2432 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2452 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2923 
=== Succesors ===
next: v2440 
=== Usages ===
v2437 
=== Predecessor ===
j2451 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2923 #next: v2440  <|@  <|@
f <@~|@floating>@ <|@
tid j2694 <|@
result v8|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2451 
y: j2693 
=== Succesors ===
=== Usages ===
v2437 v2453 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2451 y: j2693  <|@  <|@
f <@~|@floating>@ <|@
tid v2437 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2452 
y: j2694 
=== Succesors ===
=== Usages ===
v2440 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j2452 y: j2694  <|@  <|@
f <@*|@fixed>@ <|@
tid v2440 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v2437 
=== Succesors ===
trueSuccessor: v2438 
falseSuccessor: v2439 
=== Usages ===
=== Predecessor ===
j2452 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2437 #trueSuccessor: v2438 #falseSuccessor: v2439  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[.] = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Iterable.forEach(Iterable.java:73) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v4|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.iterators.FilteredNodeIterable.iterator(FilteredNodeIterable.java:45) [bci: 8]
stack: vobject:PredicatedProxyNodeIterator:0{current=Object[null],iterator=Object[null],predicate=Object[null]} vobject:PredicatedProxyNodeIterator:0{current=Object[null],iterator=Object[null],predicate=Object[null]} 
locals: v0|QWORD[.] 
java.lang.Iterable.forEach(Iterable.java:74) [bci: 6]
locals: - v1|QWORD[.] - - 
vobject:PredicatedProxyNodeIterator:0{current=Object[null],iterator=Object[null],predicate=Object[null]} Lorg/graalvm/compiler/graph/iterators/PredicatedProxyNodeIterator; Object[null] Object[null] Object[null] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<NodeIterable.iterator()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:8, 6] <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = LEA [v7|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v8|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4576416541152026267
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2438 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a2444 
=== Usages ===
=== Predecessor ===
v2440 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2444  <|@  <|@
tid ?109 <|@
d <@d|@=== Debug Properties ===
bci: 13
code: ResolvedJavaMethodBytecode<FilteredNodeIterable.iterator()>
duringCall: false
localsSize: 1
locksSize: 0
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.FilteredNodeIterable.iterator(FilteredNodeIterable.java:45) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 6]
rethrowException: false
sourceFile: FilteredNodeIterable.java
sourceLine: 45
stackSize: 3
=== Inputs ===
outerFrameState: ?115 
values: a1 a162 a162 a108 
virtualObjectMappings: ?163 
=== Succesors ===
=== Usages ===
a2444 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?115 values: a1 a162 a162 a108 virtualObjectMappings: ?163  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2444 <|@
result v9|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?109 
arguments: v2430 i1429 i126 
=== Succesors ===
next: j2445 
=== Usages ===
j2445 
=== Predecessor ===
v2438 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?109 arguments: v2430 i1429 i126 #next: j2445  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2445 <|@
result v9|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a2444 
=== Succesors ===
next: v2458 
=== Usages ===
j2457 
=== Predecessor ===
a2444 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a2444 #next: v2458  <|@  <|@
f <@*|@fixed>@ <|@
tid v2458 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2455 
=== Predecessor ===
j2445 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v3|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.iterators.FilteredNodeIterable.iterator(FilteredNodeIterable.java:45) [bci: 13]
stack: vobject:PredicatedProxyNodeIterator:0{current=Object[null],iterator=Object[null],predicate=Object[null]} vobject:PredicatedProxyNodeIterator:0{current=Object[null],iterator=Object[null],predicate=Object[null]} v6|QWORD[.] 
locals: v0|QWORD[.] 
java.lang.Iterable.forEach(Iterable.java:74) [bci: 6]
locals: - v1|QWORD[.] - - 
vobject:PredicatedProxyNodeIterator:0{current=Object[null],iterator=Object[null],predicate=Object[null]} Lorg/graalvm/compiler/graph/iterators/PredicatedProxyNodeIterator; Object[null] Object[null] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:13, 6] <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v9|QWORD[.]] destination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4606316297947250001
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2439 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2453 
=== Usages ===
=== Predecessor ===
v2440 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2453  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2453 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2922 
value: j2694 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2449 
=== Usages ===
=== Predecessor ===
v2439 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2922 value: j2694 stateAfter: - lastLocationAccess: - #next: v2449  <|@  <|@
f <@~|@floating>@ <|@
tid v2956 <|@
result [v7|QWORD + 216] <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j2451 
index: - 
=== Succesors ===
=== Usages ===
v2449 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2451 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2449 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v2956 
=== Succesors ===
next: v2456 
=== Usages ===
=== Predecessor ===
v2453 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2956 #next: v2456  <|@  <|@
f <@*|@fixed>@ <|@
tid v2456 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2455 
=== Predecessor ===
v2449 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v8|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v7|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v7|QWORD] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B2" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606398531062421451
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2457 <|@
result v10|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2455 
values: j2451 j2445 
=== Succesors ===
=== Usages ===
v2926 v2925 a1921 v2957 v2958 v2959 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2455 values: j2451 j2445  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2455 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2456 v2458 
=== Succesors ===
next: a1921 
=== Usages ===
j2457 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2456 v2458 #next: a1921  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1921 <|@
result v11|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j2457 
=== Succesors ===
next: j2468 
=== Usages ===
a1929 
=== Predecessor ===
v2455 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j2457 #next: j2468  <|@  <|@
f <@~|@floating>@ <|@
tid v1959 <|@
result v12|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
rawvalue: meta{HotSpotType<Lorg/graalvm/compiler/graph/iterators/PredicatedProxyNodeIterator;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Lorg/graalvm/compiler/graph/iterators/PredicatedProxyNodeIterator;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j2463 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2463 <|@
result v12|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v1959 
=== Succesors ===
=== Usages ===
v2924 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v1959  <|@  <|@
f <@~|@floating>@ <|@
tid v2924 <|@
result [v12|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j2463 
index: - 
=== Succesors ===
=== Usages ===
j2468 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2463 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2468 <|@
result v13|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2924 
=== Succesors ===
next: v2469 
=== Usages ===
v2469 
=== Predecessor ===
a1921 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2924 #next: v2469  <|@  <|@
f <@~|@floating>@ <|@
tid v2925 <|@
result [v10|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2457 
index: - 
=== Succesors ===
=== Usages ===
v2469 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2457 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2469 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2925 
value: j2468 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2472 
=== Usages ===
=== Predecessor ===
j2468 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2925 value: j2468 stateAfter: - lastLocationAccess: - #next: v2472  <|@  <|@
f <@~|@floating>@ <|@
tid v2926 <|@
result [v10|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j2457 
index: - 
=== Succesors ===
=== Usages ===
v2472 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2457 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2472 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2926 
value: v2698 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2476 
=== Usages ===
=== Predecessor ===
v2469 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2926 value: v2698 stateAfter: - lastLocationAccess: - #next: v2476  <|@  <|@
f <@~|@floating>@ <|@
tid v2957 <|@
result [v10|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j2457 
index: - 
=== Succesors ===
=== Usages ===
v2476 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2457 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2476 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2957 
value: i17 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2478 
=== Usages ===
=== Predecessor ===
v2472 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2957 value: i17 stateAfter: - lastLocationAccess: - #next: v2478  <|@  <|@
f <@~|@floating>@ <|@
tid v2958 <|@
result [v10|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j2457 
index: - 
=== Succesors ===
=== Usages ===
v2478 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2457 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a1925 <|@
result v14|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n -
=== Inputs ===
value: a108 
=== Succesors ===
=== Usages ===
v2478 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a108  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2478 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2958 
value: a1925 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a2812 
=== Usages ===
=== Predecessor ===
v2476 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2958 value: a1925 stateAfter: - lastLocationAccess: - #next: a2812  <|@  <|@
f <@~|@floating>@ <|@
tid v2913 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a2812 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2812 <|@
result v15|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FilteredNodeIterable.predicate
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.FilteredNodeIterable.iterator(FilteredNodeIterable.java:45) [bci: 14]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 6]
nullCheck: false
stamp: n -
=== Inputs ===
stateBefore: - 
guard: - 
address: v2913 
=== Succesors ===
next: v2480 
=== Usages ===
v2480 
=== Predecessor ===
v2478 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2913 #next: v2480  <|@  <|@
f <@~|@floating>@ <|@
tid v2959 <|@
result [v10|QWORD[*] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j2457 
index: - 
=== Succesors ===
=== Usages ===
v2480 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2457 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2480 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2959 
value: a2812 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1929 
=== Usages ===
=== Predecessor ===
a2812 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2959 value: a2812 stateAfter: - lastLocationAccess: - #next: a1929  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1929 <|@
result v11|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1921 
=== Succesors ===
next: v1930 
=== Usages ===
a38 
=== Predecessor ===
v2480 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1921 #next: v1930  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1930 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v43 
=== Usages ===
=== Predecessor ===
a1929 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v43  <|@  <|@
f <@*|@fixed>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Iterable.forEach(Iterable.java:74) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v35 
=== Predecessor ===
v1930 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v10|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = MOVE v10|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/compiler/graph/iterators/PredicatedProxyNodeIterator;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOV [v12|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v10|QWORD[*]], y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/iterators/PredicatedProxyNodeIterator;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v10|QWORD[*] + 12], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD[.] = COMPRESSPOINTER (input: v6|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v10|QWORD[*] + 16], y: v14|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD[.] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v10|QWORD[*] + 20], y: v15|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v11|QWORD[.]] destination: B4 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" "B185" 
    xhandlers
    flags 
    probability 4590935522563932584
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v45 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Iterable.forEach(Iterable.java:74) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1722 
=== Usages ===
=== Predecessor ===
v46 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1722  <|@  <|@
f <@~|@floating>@ <|@
tid v2691 <|@
result meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeUsageIterable;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 6]
rawvalue: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeUsageIterable;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeUsageIterable;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2692 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2692 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 6]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2810 
y: v2691 
=== Succesors ===
=== Usages ===
v1722 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2810 y: v2691  <|@  <|@
f <@*|@fixed>@ <|@
tid v1722 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeUsageIterable; target_method=iterator target_method_class=Lorg/graalvm/compiler/graph/NodeUsageIterable; position=at java.lang.Iterable.forEach(Iterable.java:74) [bci: 6]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2692 
=== Succesors ===
trueSuccessor: v1719 
falseSuccessor: v1721 
=== Usages ===
=== Predecessor ===
v45 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2692 #trueSuccessor: v1719 #falseSuccessor: v1721  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeUsageIterable;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B185 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4590935522563932584
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1719 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeUsageIterable; target_method=iterator target_method_class=Lorg/graalvm/compiler/graph/NodeUsageIterable; position=at java.lang.Iterable.forEach(Iterable.java:74) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2481 
=== Usages ===
=== Predecessor ===
v1722 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2481  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2481 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j2496 
=== Usages ===
v2927 v2928 
=== Predecessor ===
v1719 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j2496  <|@  <|@
f <@~|@floating>@ <|@
tid v2927 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j2481 
index: - 
=== Succesors ===
=== Usages ===
j2496 v2498 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2481 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2496 <|@
result v16|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2927 
=== Succesors ===
next: j2497 
=== Usages ===
j2702 j2502 v2960 
=== Predecessor ===
j2481 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2927 #next: j2497  <|@  <|@
f <@~|@floating>@ <|@
tid v2928 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j2481 
index: - 
=== Succesors ===
=== Usages ===
j2497 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2481 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2497 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2928 
=== Succesors ===
next: v2489 
=== Usages ===
v2486 
=== Predecessor ===
j2496 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2928 #next: v2489  <|@  <|@
f <@~|@floating>@ <|@
tid j2702 <|@
result v17|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2496 
y: j2693 
=== Succesors ===
=== Usages ===
v2486 v2498 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2496 y: j2693  <|@  <|@
f <@~|@floating>@ <|@
tid v2486 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2497 
y: j2702 
=== Succesors ===
=== Usages ===
v2489 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j2497 y: j2702  <|@  <|@
f <@*|@fixed>@ <|@
tid v2489 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v2486 
=== Succesors ===
trueSuccessor: v2487 
falseSuccessor: v2488 
=== Usages ===
=== Predecessor ===
j2497 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2486 #trueSuccessor: v2487 #falseSuccessor: v2488  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = LEA [v16|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v17|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4561166233704554063
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2487 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a2492 
=== Usages ===
=== Predecessor ===
v2489 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2492  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2492 <|@
result v18|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v2430 i1429 i126 
=== Succesors ===
next: j2493 
=== Usages ===
j2493 
=== Predecessor ===
v2487 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v2430 i1429 i126 #next: j2493  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2493 <|@
result v18|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a2492 
=== Succesors ===
next: v2503 
=== Usages ===
j2502 
=== Predecessor ===
a2492 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a2492 #next: v2503  <|@  <|@
f <@*|@fixed>@ <|@
tid v2503 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2500 
=== Predecessor ===
j2493 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v3|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Iterable.forEach(Iterable.java:73) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v18|QWORD[.]] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4590872811544924907
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2488 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2498 
=== Usages ===
=== Predecessor ===
v2489 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2498  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2498 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2927 
value: j2702 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2495 
=== Usages ===
=== Predecessor ===
v2488 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2927 value: j2702 stateAfter: - lastLocationAccess: - #next: v2495  <|@  <|@
f <@~|@floating>@ <|@
tid v2960 <|@
result [v16|QWORD + 216] <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j2496 
index: - 
=== Succesors ===
=== Usages ===
v2495 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2496 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2495 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v2960 
=== Succesors ===
next: v2501 
=== Usages ===
=== Predecessor ===
v2498 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2960 #next: v2501  <|@  <|@
f <@*|@fixed>@ <|@
tid v2501 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2500 
=== Predecessor ===
v2495 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v17|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v16|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v16|QWORD] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4590935522563932584
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2502 <|@
result v19|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2500 
values: j2496 j2493 
=== Succesors ===
=== Usages ===
v2931 v2930 a1951 v2961 v2962 v2963 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2500 values: j2496 j2493  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2500 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2501 v2503 
=== Succesors ===
next: a1951 
=== Usages ===
j2502 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2501 v2503 #next: a1951  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1951 <|@
result v20|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j2502 
=== Succesors ===
next: j2512 
=== Usages ===
a1957 
=== Predecessor ===
v2500 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j2502 #next: j2512  <|@  <|@
f <@~|@floating>@ <|@
tid v2035 <|@
result v21|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
rawvalue: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeUsageIterator;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeUsageIterator;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j2508 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2508 <|@
result v21|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v2035 
=== Succesors ===
=== Usages ===
v2929 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v2035  <|@  <|@
f <@~|@floating>@ <|@
tid v2929 <|@
result [v21|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j2508 
index: - 
=== Succesors ===
=== Usages ===
j2512 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2508 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2512 <|@
result v22|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2929 
=== Succesors ===
next: v2513 
=== Usages ===
v2513 
=== Predecessor ===
a1951 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2929 #next: v2513  <|@  <|@
f <@~|@floating>@ <|@
tid v2930 <|@
result [v19|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2502 
index: - 
=== Succesors ===
=== Usages ===
v2513 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2502 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2513 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2930 
value: j2512 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2516 
=== Usages ===
=== Predecessor ===
j2512 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2930 value: j2512 stateAfter: - lastLocationAccess: - #next: v2516  <|@  <|@
f <@~|@floating>@ <|@
tid v2931 <|@
result [v19|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j2502 
index: - 
=== Succesors ===
=== Usages ===
v2516 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2502 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2516 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2931 
value: v2705 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2520 
=== Usages ===
=== Predecessor ===
v2513 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2931 value: v2705 stateAfter: - lastLocationAccess: - #next: v2520  <|@  <|@
f <@~|@floating>@ <|@
tid v2961 <|@
result [v19|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j2502 
index: - 
=== Succesors ===
=== Usages ===
v2520 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2502 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i286 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.graph.NodeUsageIterator.<init>(NodeUsageIterator.java:31) [bci: 5]
at org.graalvm.compiler.graph.NodeUsageIterable.iterator(NodeUsageIterable.java:44) [bci: 26]
at org.graalvm.compiler.graph.NodeUsageIterable.iterator(NodeUsageIterable.java:31) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 6]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2520 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2520 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2961 
value: i286 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a2813 
=== Usages ===
=== Predecessor ===
v2516 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2961 value: i286 stateAfter: - lastLocationAccess: - #next: a2813  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2813 <|@
result v23|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: NodeUsageIterable.node
nodeSourcePosition: at org.graalvm.compiler.graph.NodeUsageIterable.iterator(NodeUsageIterable.java:44) [bci: 23]
at org.graalvm.compiler.graph.NodeUsageIterable.iterator(NodeUsageIterable.java:31) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 6]
nullCheck: false
stamp: n Lorg/graalvm/compiler/graph/Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2912 
=== Succesors ===
next: v2522 
=== Usages ===
v2522 
=== Predecessor ===
v2520 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2912 #next: v2522  <|@  <|@
f <@~|@floating>@ <|@
tid v2962 <|@
result [v19|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j2502 
index: - 
=== Succesors ===
=== Usages ===
v2522 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2502 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2522 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2962 
value: a2813 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2524 
=== Usages ===
=== Predecessor ===
a2813 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2962 value: a2813 stateAfter: - lastLocationAccess: - #next: v2524  <|@  <|@
f <@~|@floating>@ <|@
tid v2963 <|@
result [v19|QWORD[*] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j2502 
index: - 
=== Succesors ===
=== Usages ===
v2524 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2502 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2524 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2963 
value: i17 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1957 
=== Usages ===
=== Predecessor ===
v2522 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2963 value: i17 stateAfter: - lastLocationAccess: - #next: a1957  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1957 <|@
result v20|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1951 
=== Succesors ===
next: v1958 
=== Usages ===
v1568 ?1228 a38 
=== Predecessor ===
v2524 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1951 #next: v1958  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1958 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v292 
=== Usages ===
=== Predecessor ===
a1957 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v292  <|@  <|@
tid v1568 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.compiler.graph.NodeUsageIterator.<init>(NodeUsageIterator.java:51) [bci: 15]
at org.graalvm.compiler.graph.NodeUsageIterable.iterator(NodeUsageIterable.java:44) [bci: 26]
at org.graalvm.compiler.graph.NodeUsageIterable.iterator(NodeUsageIterable.java:31) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 6]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@6b2fd7af
stamp: void
targetMethod: HotSpotMethod<NodeUsageIterator.advance()>
=== Inputs ===
arguments: a1957 
=== Succesors ===
=== Usages ===
v292 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1957  <|@  <|@
tid ?120 <|@
d <@d|@=== Debug Properties ===
bci: 6
code: ResolvedJavaMethodBytecode<Iterable.forEach(Consumer)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Iterable.java
sourceLine: 74
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a2 - - 
=== Succesors ===
=== Usages ===
?284 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 - -  <|@  <|@
tid ?284 <|@
d <@d|@=== Debug Properties ===
bci: 1
code: ResolvedJavaMethodBytecode<NodeUsageIterable.iterator()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: NodeUsageIterable.java
sourceLine: 31
stackSize: 0
=== Inputs ===
outerFrameState: ?120 
values: - 
=== Succesors ===
=== Usages ===
?296 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?120 values: -  <|@  <|@
tid a301 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@b08e451
hasIdentity: true
objectId: 1
stamp: a!# Lorg/graalvm/compiler/graph/NodeUsageIterator;
type: HotSpotType<Lorg/graalvm/compiler/graph/NodeUsageIterator;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?296 ?1228 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?296 <|@
d <@d|@=== Debug Properties ===
bci: 26
code: ResolvedJavaMethodBytecode<NodeUsageIterable.iterator()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: NodeUsageIterable.java
sourceLine: 44
stackSize: 1
=== Inputs ===
outerFrameState: ?284 
values: - a301 
=== Succesors ===
=== Usages ===
?2209 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?284 values: - a301  <|@  <|@
tid ?1228 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a301 
materializedValue: a1957 
=== Succesors ===
=== Usages ===
?2209 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a301 materializedValue: a1957  <|@  <|@
tid ?2209 <|@
d <@d|@=== Debug Properties ===
bci: 15
code: ResolvedJavaMethodBytecode<NodeUsageIterator.<init>(Node)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: NodeUsageIterator.java
sourceLine: 51
stackSize: 0
=== Inputs ===
outerFrameState: ?296 
values: - - 
virtualObjectMappings: ?1228 
=== Succesors ===
=== Usages ===
v292 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?296 values: - - virtualObjectMappings: ?1228  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v292 <|@
d <@d|@=== Debug Properties ===
bci: 15
nodeSourcePosition: at org.graalvm.compiler.graph.NodeUsageIterator.<init>(NodeUsageIterator.java:51) [bci: 15]
at org.graalvm.compiler.graph.NodeUsageIterable.iterator(NodeUsageIterable.java:44) [bci: 26]
at org.graalvm.compiler.graph.NodeUsageIterable.iterator(NodeUsageIterable.java:31) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 6]
polymorphic: false
stamp: void
targetMethod: Direct#NodeUsageIterator.advance
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1568 
stateDuring: ?2209 
=== Succesors ===
next: v1569 
=== Usages ===
=== Predecessor ===
v1958 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1568 stateDuring: ?2209 #next: v1569  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1569 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: ANY_LOCATION
nodeSourcePosition: at org.graalvm.compiler.graph.NodeUsageIterator.<init>(NodeUsageIterator.java:52) [bci: 18]
at org.graalvm.compiler.graph.NodeUsageIterable.iterator(NodeUsageIterable.java:44) [bci: 26]
at org.graalvm.compiler.graph.NodeUsageIterable.iterator(NodeUsageIterable.java:31) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v52 
=== Usages ===
=== Predecessor ===
v292 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v52  <|@  <|@
f <@*|@fixed>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Iterable.forEach(Iterable.java:74) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v35 
=== Predecessor ===
v1569 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v19|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = MOVE v19|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeUsageIterator;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOV [v21|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v19|QWORD[*]], y: v22|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeUsageIterator;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[*] + 12] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD[.] = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v19|QWORD[*] + 16], y: v23|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v19|QWORD[*] + 20], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v20|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeUsageIterator.<init>(NodeUsageIterator.java:51) [bci: 15]
locals: - - 
org.graalvm.compiler.graph.NodeUsageIterable.iterator(NodeUsageIterable.java:44) [bci: 26]
stack: v20|QWORD[.] 
locals: - 
org.graalvm.compiler.graph.NodeUsageIterable.iterator(NodeUsageIterable.java:31) [bci: 1]
locals: - 
java.lang.Iterable.forEach(Iterable.java:74) [bci: 6]
locals: - v1|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<NodeUsageIterator.advance()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:15, 26, 1, 6] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v20|QWORD[.]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B4" "B9" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a38 <|@
result v24|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Iterable.forEach(Iterable.java:74) [bci: 6]
stamp: a! Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v35 
values: a1929 a1957 
=== Succesors ===
=== Usages ===
?951 ?13 j2547 ?151 v1367 ?2220 ?2214 ?306 j2534 ?129 ?142 ?336 v2932 ?457 ?251 ?480 ?168 v2879 ?2218 ?2216 v2881 ?436 ?2219 ?2217 ?196 v2883 ?200 ?505 ?468 ?212 ?212 ?935 ?2218 ?519 ?480 ?464 ?1080 ?2215 ?2211 ?2212 ?2213 ?2213 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v35 values: a1929 a1957  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Iterable.forEach(Iterable.java:74) [bci: 6]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v43 v52 
=== Succesors ===
next: v2814 
=== Usages ===
a38 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v43 v52 #next: v2814  <|@  <|@
f <@~|@floating>@ <|@
tid v2932 <|@
result [v24|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a38 
index: - 
=== Succesors ===
=== Usages ===
v2814 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a38 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2814 <|@
result v25|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2932 
=== Succesors ===
next: v11 
=== Usages ===
v2710 v2709 
=== Predecessor ===
v35 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2932 #next: v11  <|@  <|@
f <@~|@floating>@ <|@
tid v2709 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2814 
y: v2698 
=== Succesors ===
=== Usages ===
v72 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2814 y: v2698  <|@  <|@
tid ?129 <|@
d <@d|@=== Debug Properties ===
bci: 13
code: ResolvedJavaMethodBytecode<Iterable.forEach(Consumer)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Iterable.java
sourceLine: 74
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a2 a38 - 
=== Succesors ===
=== Usages ===
?251 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 a38 -  <|@  <|@
tid ?251 <|@
d <@d|@=== Debug Properties ===
bci: 1
code: ResolvedJavaMethodBytecode<NodeIterator.hasNext()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: NodeIterator.java
sourceLine: 38
stackSize: 0
=== Inputs ===
outerFrameState: ?129 
values: a38 
=== Succesors ===
=== Usages ===
?168 ?2211 ?2215 ?2212 ?196 ?200 ?1080 ?212 ?2213 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?129 values: a38  <|@  <|@
tid ?2213 <|@
d <@d|@=== Debug Properties ===
bci: 50
code: ResolvedJavaMethodBytecode<PredicatedProxyNodeIterator.forward()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: PredicatedProxyNodeIterator.java
sourceLine: 42
stackSize: 1
=== Inputs ===
outerFrameState: ?251 
values: a38 a38 
=== Succesors ===
=== Usages ===
a211 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?251 values: a38 a38  <|@  <|@
tid ?2212 <|@
d <@d|@=== Debug Properties ===
bci: 37
code: ResolvedJavaMethodBytecode<PredicatedProxyNodeIterator.forward()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: PredicatedProxyNodeIterator.java
sourceLine: 41
stackSize: 0
=== Inputs ===
outerFrameState: ?251 
values: a38 
=== Succesors ===
=== Usages ===
i199 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?251 values: a38  <|@  <|@
tid ?196 <|@
d <@d|@=== Debug Properties ===
bci: 33
code: ResolvedJavaMethodBytecode<PredicatedProxyNodeIterator.forward()>
duringCall: false
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: PredicatedProxyNodeIterator.java
sourceLine: 41
stackSize: 0
=== Inputs ===
outerFrameState: ?251 
values: a38 
=== Succesors ===
=== Usages ===
v2972 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?251 values: a38  <|@  <|@
f <@~|@floating>@ <|@
tid v2883 <|@
result [v24|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a38 
index: - 
=== Succesors ===
=== Usages ===
a2818 a2821 a2830 a2832 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a38 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v2881 <|@
result [v24|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a38 
index: - 
=== Succesors ===
=== Usages ===
a2817 a2840 a2826 a2829 a2837 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a38 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v2879 <|@
result [v24|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a38 
index: - 
=== Succesors ===
=== Usages ===
a2815 a2824 v1283 a2819 v1296 v1308 v1315 a2827 a2835 a2831 v1347 v1351 v1358 a2838 v1362 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a38 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v2711 <|@
result meta{HotSpotType<Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$90/1190971543;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
rawvalue: meta{HotSpotType<Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$90/1190971543;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$90/1190971543;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2712 v2800 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2541 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 58]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2540 v2551 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2535 <|@
result int[9|0x9] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 58]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2536 j2548 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2539 <|@
result v26|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 58]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2935 v2937 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1995 <|@
result v27|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 55]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
rawvalue: meta{HotSpotType<Lorg/graalvm/compiler/graph/Node;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Lorg/graalvm/compiler/graph/Node;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2003 v2023 v2165 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Iterable.forEach(Iterable.java:74) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v12 
=== Predecessor ===
v2814 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v24|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = MOV [v24|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/compiler/graph/Node;, resolved>} <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B183" "B180" "B126" "B159" "B163" "B99" "B131" "B135" 
    successors "B12" "B79" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4610059043929207954
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 1.638739090328532
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 8
nodeSourcePosition: at java.lang.Iterable.forEach(Iterable.java:74) [bci: 12]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v11 
=== Succesors ===
next: v72 
=== Usages ===
v20 v30 v159 v160 v584 v759 v993 v1008 v1121 v1898 v1893 v1888 v1882 v1876 v1745 v1870 v1842 v1858 v1768 v1774 v1848 v1784 v1789 v1794 v1799 v1804 v1809 v1814 v1819 v1824 v1829 v1836 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v11 #next: v72  <|@  <|@
f <@*|@fixed>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/iterators/PredicatedProxyNodeIterator; target_method=hasNext target_method_class=Lorg/graalvm/compiler/graph/iterators/NodeIterator; position=at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
trueSuccessorProbability: 0.8217776767447147
=== Inputs ===
condition: v2709 
=== Succesors ===
trueSuccessor: v65 
falseSuccessor: v71 
=== Usages ===
=== Predecessor ===
v12 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2709 #trueSuccessor: v65 #falseSuccessor: v71  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v25|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/iterators/PredicatedProxyNodeIterator;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8217776767447147 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4608743723126947473
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/iterators/PredicatedProxyNodeIterator; target_method=hasNext target_method_class=Lorg/graalvm/compiler/graph/iterators/NodeIterator; position=at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2815 
=== Usages ===
=== Predecessor ===
v72 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2815  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2815 <|@
result v28|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: NodeIterator.current
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
nullCheck: false
stamp: n Lorg/graalvm/compiler/graph/Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2879 
=== Succesors ===
next: v166 
=== Usages ===
a2732 
=== Predecessor ===
v65 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2879 #next: v166  <|@  <|@
f <@*|@fixed>@ <|@
tid v166 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 0]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v167 
=== Predecessor ===
a2815 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v28|DWORD[.] = MOV [v24|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v28|DWORD[.]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B29" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4612573444537173462
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a2732 <|@
result v29|DWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: n Lorg/graalvm/compiler/graph/Node;
valueDescription: n -
=== Inputs ===
merge: v167 
values: a2815 a1307 
=== Succesors ===
=== Usages ===
a1267 v1570 v2880 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v167 values: a2815 a1307  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v167 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 1.7777777777777777
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 0]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v166 
=== Succesors ===
next: v173 
=== Usages ===
v192 v205 v218 v1744 a2732 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v166 #next: v173  <|@  <|@
f <@~|@floating>@ <|@
tid v1570 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 4]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
=== Inputs ===
value: a2732 
=== Succesors ===
=== Usages ===
v173 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2732  <|@  <|@
f <@*|@fixed>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 4]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1570 
=== Succesors ===
trueSuccessor: v171 
falseSuccessor: v172 
=== Usages ===
=== Predecessor ===
v167 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1570 #trueSuccessor: v171 #falseSuccessor: v172  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v29|DWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v29|DWORD[.], y: v29|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B19" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4608069844909802966
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v171 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 33]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: v179 
=== Usages ===
=== Predecessor ===
v173 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v179  <|@  <|@
f <@*|@fixed>@ <|@
tid v179 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 33]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v180 
=== Predecessor ===
v171 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B14 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4608069844909802966
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v172 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 7]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2816 
=== Usages ===
=== Predecessor ===
v173 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2816  <|@  <|@
f <@~|@floating>@ <|@
tid v2880 <|@
result [v29|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2732 
=== Succesors ===
=== Usages ===
i2816 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2732  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2816 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Node.id
nodeSourcePosition: at org.graalvm.compiler.graph.Node.isAlive(Node.java:556) [bci: 1]
at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 11]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2880 
=== Succesors ===
next: v184 
=== Usages ===
v260 
=== Predecessor ===
v172 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2880 #next: v184  <|@  <|@
f <@~|@floating>@ <|@
tid v260 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.graph.Node.isAlive(Node.java:556) [bci: 4]
at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 11]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2816 
y: i17 
=== Succesors ===
=== Usages ===
v184 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2816 y: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v184 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 14]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v260 
=== Succesors ===
trueSuccessor: v183 
falseSuccessor: v182 
=== Usages ===
=== Predecessor ===
i2816 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v260 #trueSuccessor: v183 #falseSuccessor: v182  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v29|DWORD[.] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4603566245282432470
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v183 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 33]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: v181 
=== Usages ===
=== Predecessor ===
v184 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v181  <|@  <|@
f <@*|@fixed>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 33]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v180 
=== Predecessor ===
v183 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B16 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B32" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4603566245282432470
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 17]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2817 
=== Usages ===
=== Predecessor ===
v184 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2817  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2817 <|@
result v30|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: PredicatedProxyNodeIterator.predicate
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 18]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
nullCheck: false
stamp: n -
=== Inputs ===
stateBefore: - 
guard: - 
address: v2881 
=== Succesors ===
next: v2971 
=== Usages ===
a1273 v2971 
=== Predecessor ===
v182 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2881 #next: v2971  <|@  <|@
tid ?168 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<PredicatedProxyNodeIterator.forward()>
duringCall: false
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: PredicatedProxyNodeIterator.java
sourceLine: 41
stackSize: 0
=== Inputs ===
outerFrameState: ?251 
values: a38 
=== Succesors ===
=== Usages ===
v2971 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?251 values: a38  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2971 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?168 
object: a2817 
=== Succesors ===
next: i188 
=== Usages ===
=== Predecessor ===
a2817 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?168 object: a2817 #next: i188  <|@  <|@
f <@~|@floating>@ <|@
tid a1273 <|@
result v31|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 18]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
op: Uncompress
stamp: a -
=== Inputs ===
value: a2817 
=== Succesors ===
=== Usages ===
v1277 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2817  <|@  <|@
f <@~|@floating>@ <|@
tid a1267 <|@
result v32|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
op: Uncompress
stamp: a Lorg/graalvm/compiler/graph/Node;
=== Inputs ===
value: a2732 
=== Succesors ===
=== Usages ===
v1277 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2732  <|@  <|@
tid v1277 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Interface
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 25]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@4e075177
stamp: void
targetMethod: HotSpotMethod<NodePredicate.apply(Node)>
=== Inputs ===
arguments: a1273 a1267 
=== Succesors ===
=== Usages ===
i188 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1273 a1267  <|@  <|@
tid ?2211 <|@
d <@d|@=== Debug Properties ===
bci: 25
code: ResolvedJavaMethodBytecode<PredicatedProxyNodeIterator.forward()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: PredicatedProxyNodeIterator.java
sourceLine: 41
stackSize: 0
=== Inputs ===
outerFrameState: ?251 
values: a38 
=== Succesors ===
=== Usages ===
i188 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?251 values: a38  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i188 <|@
result v33|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 25
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 25]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#NodePredicate.apply
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1277 
stateDuring: ?2211 
=== Succesors ===
next: v195 
=== Usages ===
v190 
=== Predecessor ===
v2971 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1277 stateDuring: ?2211 #next: v195  <|@  <|@
f <@~|@floating>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 30]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i188 
y: i17 
=== Succesors ===
=== Usages ===
v195 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i188 y: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v195 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 30]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v190 
=== Succesors ===
trueSuccessor: v194 
falseSuccessor: v192 
=== Usages ===
=== Predecessor ===
i188 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v190 #trueSuccessor: v194 #falseSuccessor: v192  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v30|DWORD[.] = MOV [v24|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 0]
locals: v24|QWORD[.] 
org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
locals: v24|QWORD[.] 
java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
locals: - v1|QWORD[.] v24|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v30|DWORD[.] * 8] state [bci:0, 1, 13] <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.] = UNCOMPRESSPOINTER (input: v30|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.] = UNCOMPRESSPOINTER (input: v29|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v31|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 25]
locals: v24|QWORD[.] 
org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
locals: v24|QWORD[.] 
java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
locals: - v1|QWORD[.] v24|QWORD[.] - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<NodePredicate.apply(Node)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:25, 1, 13] <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v33|DWORD, y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4599062645655061974
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v194 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 33]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: v191 
=== Usages ===
=== Predecessor ===
v195 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v191  <|@  <|@
f <@*|@fixed>@ <|@
tid v191 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 33]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v180 
=== Predecessor ===
v194 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" "B18" 
    successors "B20" "B25" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4611899566320028955
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 33]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v179 v181 v191 
=== Succesors ===
next: a2818 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v179 v181 v191 #next: a2818  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2818 <|@
result v34|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: PredicatedProxyNodeIterator.iterator
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 34]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
nullCheck: false
stamp: n -
=== Inputs ===
stateBefore: - 
guard: - 
address: v2883 
=== Succesors ===
next: v2972 
=== Usages ===
a1287 v2972 
=== Predecessor ===
v180 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2883 #next: v2972  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2972 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?196 
object: a2818 
=== Succesors ===
next: i199 
=== Usages ===
=== Predecessor ===
a2818 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?196 object: a2818 #next: i199  <|@  <|@
f <@~|@floating>@ <|@
tid a1287 <|@
result v35|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 34]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
op: Uncompress
stamp: a -
=== Inputs ===
value: a2818 
=== Succesors ===
=== Usages ===
v1291 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2818  <|@  <|@
tid v1291 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Interface
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 37]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@35344d74
stamp: void
targetMethod: HotSpotMethod<Iterator.hasNext()>
=== Inputs ===
arguments: a1287 
=== Succesors ===
=== Usages ===
i199 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1287  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i199 <|@
result v36|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 37
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 37]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Iterator.hasNext
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1291 
stateDuring: ?2212 
=== Succesors ===
next: v208 
=== Usages ===
?200 v201 
=== Predecessor ===
v2972 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1291 stateDuring: ?2212 #next: v208  <|@  <|@
f <@~|@floating>@ <|@
tid v201 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 42]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i199 
y: i17 
=== Succesors ===
=== Usages ===
v208 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i199 y: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v208 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 42]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v201 
=== Succesors ===
trueSuccessor: v205 
falseSuccessor: v207 
=== Usages ===
=== Predecessor ===
i199 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v201 #trueSuccessor: v205 #falseSuccessor: v207  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|DWORD[.] = MOV [v24|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 33]
locals: v24|QWORD[.] 
org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
locals: v24|QWORD[.] 
java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
locals: - v1|QWORD[.] v24|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v34|DWORD[.] * 8] state [bci:33, 1, 13] <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 37]
locals: v24|QWORD[.] 
org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
locals: v24|QWORD[.] 
java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
locals: - v1|QWORD[.] v24|QWORD[.] - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Iterator.hasNext()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:37, 1, 13] <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v36|DWORD, y: v36|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607395966692658459
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v205 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 64]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v167 
=== Succesors ===
next: a2819 
=== Usages ===
=== Predecessor ===
v208 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v167 #next: a2819  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2819 <|@
result v37|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: NodeIterator.current
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 65]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
nullCheck: false
stamp: n Lorg/graalvm/compiler/graph/Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2879 
=== Succesors ===
next: v928 
=== Usages ===
a1293 v1573 v2884 a2980 
=== Predecessor ===
v205 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2879 #next: v928  <|@  <|@
f <@~|@floating>@ <|@
tid v1573 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 68]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
=== Inputs ===
value: a2819 
=== Succesors ===
=== Usages ===
v928 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2819  <|@  <|@
f <@*|@fixed>@ <|@
tid v928 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 68]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1573 
=== Succesors ===
trueSuccessor: v926 
falseSuccessor: v927 
=== Usages ===
=== Predecessor ===
a2819 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1573 #trueSuccessor: v926 #falseSuccessor: v927  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|DWORD[.] = MOV [v24|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v37|DWORD[.], y: v37|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B40" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602892367065287963
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v926 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:47) [bci: 102]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1099 
=== Usages ===
=== Predecessor ===
v928 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1099  <|@  <|@
f <@~|@floating>@ <|@
tid a1293 <|@
result v38|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 65]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
op: Uncompress
stamp: a Lorg/graalvm/compiler/graph/Node;
=== Inputs ===
value: a2819 
=== Succesors ===
=== Usages ===
a1149 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2819  <|@  <|@
f <@*|@fixed>@ <|@
tid v1099 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v961 
=== Predecessor ===
v926 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = UNCOMPRESSPOINTER (input: v37|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v38|QWORD[.]] destination: B21 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602892367065287963
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v927 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 71]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2820 
=== Usages ===
=== Predecessor ===
v928 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2820  <|@  <|@
f <@~|@floating>@ <|@
tid v2884 <|@
result [v37|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2819 
=== Succesors ===
=== Usages ===
i2820 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2819  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2820 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Node.id
nodeSourcePosition: at org.graalvm.compiler.graph.Node.isAlive(Node.java:556) [bci: 1]
at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 75]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2884 
=== Succesors ===
next: v1086 
=== Usages ===
v1090 
=== Predecessor ===
v927 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2884 #next: v1086  <|@  <|@
f <@~|@floating>@ <|@
tid v1090 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.graph.Node.isAlive(Node.java:556) [bci: 4]
at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 75]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2820 
y: i17 
=== Succesors ===
=== Usages ===
v1086 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2820 y: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v1086 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 78]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1090 
=== Succesors ===
trueSuccessor: v1084 
falseSuccessor: v1085 
=== Usages ===
=== Predecessor ===
i2820 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1090 #trueSuccessor: v1084 #falseSuccessor: v1085  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v37|DWORD[.] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B82" 
    xhandlers
    flags 
    probability 4598388767437917467
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1084 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:45) [bci: 97]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1296 
=== Usages ===
=== Predecessor ===
v1086 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1296  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1296 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: NodeIterator.current
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:45) [bci: 99]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2879 
value: a1572 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1193 
=== Usages ===
=== Predecessor ===
v1084 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2879 value: a1572 stateAfter: - lastLocationAccess: - #next: v1193  <|@  <|@
f <@*|@fixed>@ <|@
tid v1193 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v900 
=== Predecessor ===
v1296 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD[.] + 12], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B23 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598388767437917467
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1085 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 81]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1081 
=== Usages ===
=== Predecessor ===
v1086 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1081  <|@  <|@
f <@~|@floating>@ <|@
tid a2980 <|@
result v39|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 65]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
op: Uncompress
stamp: a Lorg/graalvm/compiler/graph/Node;
=== Inputs ===
value: a2819 
=== Succesors ===
=== Usages ===
a1082 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2819  <|@  <|@
f <@*|@fixed>@ <|@
tid v1081 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1078 
=== Predecessor ===
v1085 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = UNCOMPRESSPOINTER (input: v37|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v39|QWORD[.]] destination: B24 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" "B27" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4607395966692658459
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v207 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 45]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2821 
=== Usages ===
=== Predecessor ===
v208 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2821  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2821 <|@
result v40|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: PredicatedProxyNodeIterator.iterator
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 47]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
nullCheck: false
stamp: n -
=== Inputs ===
stateBefore: - 
guard: - 
address: v2883 
=== Succesors ===
next: v2973 
=== Usages ===
a1298 v2973 
=== Predecessor ===
v207 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2883 #next: v2973  <|@  <|@
tid ?200 <|@
d <@d|@=== Debug Properties ===
bci: 42
code: ResolvedJavaMethodBytecode<PredicatedProxyNodeIterator.forward()>
duringCall: false
localsSize: 1
locksSize: 0
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 37]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
rethrowException: false
sourceFile: PredicatedProxyNodeIterator.java
sourceLine: 41
stackSize: 1
=== Inputs ===
outerFrameState: ?251 
values: a38 i199 
=== Succesors ===
=== Usages ===
v2973 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?251 values: a38 i199  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2973 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?200 
object: a2821 
=== Succesors ===
next: a211 
=== Usages ===
=== Predecessor ===
a2821 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?200 object: a2821 #next: a211  <|@  <|@
f <@~|@floating>@ <|@
tid a1298 <|@
result v41|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 47]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
op: Uncompress
stamp: a -
=== Inputs ===
value: a2821 
=== Succesors ===
=== Usages ===
v1302 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2821  <|@  <|@
tid v1302 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Interface
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 50]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
returnStamp: a Ljava/lang/Object;
signature: [Ljdk.vm.ci.meta.JavaType;@203366d2
stamp: void
targetMethod: HotSpotMethod<Iterator.next()>
=== Inputs ===
arguments: a1298 
=== Succesors ===
=== Usages ===
a211 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1298  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a211 <|@
result v42|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 50
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 50]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
polymorphic: false
stamp: a Ljava/lang/Object;
targetMethod: Direct#Iterator.next
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1302 
stateDuring: ?2213 
=== Succesors ===
next: v1999 
=== Usages ===
?212 v1304 a1307 v2934 
=== Predecessor ===
v2973 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1302 stateDuring: ?2213 #next: v1999  <|@  <|@
f <@~|@floating>@ <|@
tid v1304 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 55]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
=== Inputs ===
value: a211 
=== Succesors ===
=== Usages ===
v1999 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a211  <|@  <|@
f <@*|@fixed>@ <|@
tid v1999 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:156) [bci: 15]
at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 55]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v1304 
=== Succesors ===
trueSuccessor: v1998 
falseSuccessor: v1997 
=== Usages ===
=== Predecessor ===
a211 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1304 #trueSuccessor: v1998 #falseSuccessor: v1997  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v40|DWORD[.] = MOV [v24|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 42]
stack: v36|DWORD 
locals: v24|QWORD[.] 
org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
locals: v24|QWORD[.] 
java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
locals: - v1|QWORD[.] v24|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v40|DWORD[.] * 8] state [bci:42, 1, 13] <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[.] = UNCOMPRESSPOINTER (input: v40|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v41|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 50]
stack: v24|QWORD[.] 
locals: v24|QWORD[.] 
org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
locals: v24|QWORD[.] 
java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
locals: - v1|QWORD[.] v24|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Iterator.next()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:50, 1, 13] <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v42|QWORD[.], y: v42|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B29" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4592211856695183402
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1998 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:157) [bci: 18]
at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 55]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2332 
=== Usages ===
=== Predecessor ===
v1999 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2332  <|@  <|@
f <@*|@fixed>@ <|@
tid v2332 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 55]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2330 
=== Predecessor ===
v1998 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B26 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B30" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4606666085081297201
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1997 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:160) [bci: 29]
at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 55]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2822 
=== Usages ===
=== Predecessor ===
v1999 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2822  <|@  <|@
f <@~|@floating>@ <|@
tid v2934 <|@
result [v42|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a211 
index: - 
=== Succesors ===
=== Usages ===
v2822 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a211 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2822 <|@
result v43|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:161) [bci: 40]
at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 55]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2934 
=== Succesors ===
next: v2823 
=== Usages ===
v2914 
=== Predecessor ===
v1997 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2934 #next: v2823  <|@  <|@
f <@~|@floating>@ <|@
tid v2914 <|@
result [v43|DWORD * 8 + 48] <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v2822 
=== Succesors ===
=== Usages ===
v2823 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v2822  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2823 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: PrimarySupers:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:162) [bci: 54]
at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 55]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
nullCheck: false
stamp: Klass*
=== Inputs ===
stateBefore: - 
guard: - 
address: v2914 
=== Succesors ===
next: v2754 
=== Usages ===
v2003 
=== Predecessor ===
v2822 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2914 #next: v2754  <|@  <|@
f <@~|@floating>@ <|@
tid v2003 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:162) [bci: 58]
at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 55]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2823 
y: v1995 
=== Succesors ===
=== Usages ===
v2754 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2823 y: v1995  <|@  <|@
f <@*|@fixed>@ <|@
tid v2754 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 55]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2003 
=== Succesors ===
trueSuccessor: v2753 
falseSuccessor: v1744 
=== Usages ===
=== Predecessor ===
v2823 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2003 #trueSuccessor: v2753 #falseSuccessor: v1744  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = MOV [v42|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v27|QWORD, y: [v43|DWORD * 8 + 48]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4606666085081297201
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2753 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 55]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2341 
=== Usages ===
=== Predecessor ===
v2754 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2341  <|@  <|@
f <@*|@fixed>@ <|@
tid v2341 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 55]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2330 
=== Predecessor ===
v2753 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4607395966692658459
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2330 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 55]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2332 v2341 
=== Succesors ===
next: v1308 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2332 v2341 #next: v1308  <|@  <|@
f <@~|@floating>@ <|@
tid a1307 <|@
result v44|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 58]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
op: Compress
stamp: n Ljava/lang/Object;
=== Inputs ===
value: a211 
=== Succesors ===
=== Usages ===
v1308 a2732 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a211  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1308 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: NodeIterator.current
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 58]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2879 
value: a1307 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j2534 
=== Usages ===
=== Predecessor ===
v2330 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2879 value: a1307 stateAfter: - lastLocationAccess: - #next: j2534  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2534 <|@
result v24|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 58]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a38 
=== Succesors ===
next: v2540 
=== Usages ===
j2536 
=== Predecessor ===
v1308 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a38 #next: v2540  <|@  <|@
f <@~|@floating>@ <|@
tid j2536 <|@
result v45|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 58]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j2534 
y: i2535 
=== Succesors ===
=== Usages ===
v2935 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j2534 y: i2535  <|@  <|@
f <@~|@floating>@ <|@
tid v2935 <|@
result [v45|QWORD[*] + v26|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2536 
index: j2539 
=== Succesors ===
=== Usages ===
v2540 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2536 index: j2539  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2540 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 58]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2935 
value: i2541 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v218 
=== Usages ===
=== Predecessor ===
j2534 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2935 value: i2541 stateAfter: - lastLocationAccess: - #next: v218  <|@  <|@
f <@*|@fixed>@ <|@
tid v218 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 0]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
=== Inputs ===
loopBegin: v167 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2540 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v167  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v44|DWORD[.] = COMPRESSPOINTER (input: v42|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD[.] + 12], y: v44|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[*] = SHR v24|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v45|QWORD[*] + v26|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v44|DWORD[.]] destination: B29 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1744 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 55]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v167 
=== Succesors ===
next: v1745 
=== Usages ===
=== Predecessor ===
v2754 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v167 #next: v1745  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1745 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 55]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v12 
=== Succesors ===
next: v1742 
=== Usages ===
=== Predecessor ===
v1744 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v12 #next: v1742  <|@  <|@
tid ?212 <|@
d <@d|@=== Debug Properties ===
bci: 55
code: ResolvedJavaMethodBytecode<PredicatedProxyNodeIterator.forward()>
duringCall: false
localsSize: 1
locksSize: 0
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 50]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
rethrowException: false
sourceFile: PredicatedProxyNodeIterator.java
sourceLine: 42
stackSize: 2
=== Inputs ===
outerFrameState: ?251 
values: a38 a38 a211 
=== Succesors ===
=== Usages ===
v1742 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?251 values: a38 a38 a211  <|@  <|@
f <@*|@fixed>@ <|@
tid v1742 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1306
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 55]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
reason: ClassCastException
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?212 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1745 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?212  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -334371 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 55]
stack: v24|QWORD[.] v42|QWORD[.] 
locals: v24|QWORD[.] 
org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
locals: v24|QWORD[.] 
java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
locals: - v1|QWORD[.] v24|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:55, 1, 13] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B33" "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599062645655061974
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v192 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 64]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v167 
=== Succesors ===
next: a2824 
=== Usages ===
=== Predecessor ===
v195 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v167 #next: a2824  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2824 <|@
result v46|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: NodeIterator.current
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 65]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
nullCheck: false
stamp: n Lorg/graalvm/compiler/graph/Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2879 
=== Succesors ===
next: v224 
=== Usages ===
a1279 v1571 v2882 a2979 
=== Predecessor ===
v192 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2879 #next: v224  <|@  <|@
f <@~|@floating>@ <|@
tid v1571 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 68]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
=== Inputs ===
value: a2824 
=== Succesors ===
=== Usages ===
v224 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2824  <|@  <|@
f <@*|@fixed>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 68]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1571 
=== Succesors ===
trueSuccessor: v222 
falseSuccessor: v223 
=== Usages ===
=== Predecessor ===
a2824 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1571 #trueSuccessor: v222 #falseSuccessor: v223  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v46|DWORD[.] = MOV [v24|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v46|DWORD[.], y: v46|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B40" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594559046027691478
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:47) [bci: 102]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: v963 
=== Usages ===
=== Predecessor ===
v224 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v963  <|@  <|@
f <@~|@floating>@ <|@
tid a1279 <|@
result v47|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 65]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
op: Uncompress
stamp: a Lorg/graalvm/compiler/graph/Node;
=== Inputs ===
value: a2824 
=== Succesors ===
=== Usages ===
a1149 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2824  <|@  <|@
f <@*|@fixed>@ <|@
tid v963 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v961 
=== Predecessor ===
v222 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[.] = UNCOMPRESSPOINTER (input: v46|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v47|QWORD[.]] destination: B33 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594559046027691478
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v223 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 71]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2825 
=== Usages ===
=== Predecessor ===
v224 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2825  <|@  <|@
f <@~|@floating>@ <|@
tid v2882 <|@
result [v46|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2824 
=== Succesors ===
=== Usages ===
i2825 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2824  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2825 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Node.id
nodeSourcePosition: at org.graalvm.compiler.graph.Node.isAlive(Node.java:556) [bci: 1]
at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 75]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2882 
=== Succesors ===
next: v232 
=== Usages ===
v267 
=== Predecessor ===
v223 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2882 #next: v232  <|@  <|@
f <@~|@floating>@ <|@
tid v267 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.graph.Node.isAlive(Node.java:556) [bci: 4]
at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 75]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2825 
y: i17 
=== Succesors ===
=== Usages ===
v232 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2825 y: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v232 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 78]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v267 
=== Succesors ===
trueSuccessor: v230 
falseSuccessor: v231 
=== Usages ===
=== Predecessor ===
i2825 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v267 #trueSuccessor: v230 #falseSuccessor: v231  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v46|DWORD[.] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B82" 
    xhandlers
    flags 
    probability 4590055446400320982
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:45) [bci: 97]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1283 
=== Usages ===
=== Predecessor ===
v232 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1283  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1283 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: NodeIterator.current
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:45) [bci: 99]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2879 
value: a1572 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1678 
=== Usages ===
=== Predecessor ===
v230 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2879 value: a1572 stateAfter: - lastLocationAccess: - #next: v1678  <|@  <|@
f <@*|@fixed>@ <|@
tid v1678 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v900 
=== Predecessor ===
v1283 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD[.] + 12], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B35 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590055446400320982
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v231 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 81]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1079 
=== Usages ===
=== Predecessor ===
v232 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1079  <|@  <|@
f <@~|@floating>@ <|@
tid a2979 <|@
result v48|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 65]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
op: Uncompress
stamp: a Lorg/graalvm/compiler/graph/Node;
=== Inputs ===
value: a2824 
=== Succesors ===
=== Usages ===
a1082 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2824  <|@  <|@
f <@*|@fixed>@ <|@
tid v1079 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1078 
=== Predecessor ===
v231 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v46|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v48|QWORD[.]] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B24" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599736523872206480
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a1082 <|@
result v49|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a Lorg/graalvm/compiler/graph/Node;
valueDescription: a -
=== Inputs ===
merge: v1078 
values: a2979 a2980 
=== Succesors ===
=== Usages ===
v1314 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1078 values: a2979 a2980  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1078 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1079 v1081 
=== Succesors ===
next: a2826 
=== Usages ===
a1082 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1079 v1081 #next: a2826  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2826 <|@
result v50|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: PredicatedProxyNodeIterator.predicate
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 82]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
nullCheck: false
stamp: n -
=== Inputs ===
stateBefore: - 
guard: - 
address: v2881 
=== Succesors ===
next: v2974 
=== Usages ===
a1310 v2974 
=== Predecessor ===
v1078 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2881 #next: v2974  <|@  <|@
tid ?1080 <|@
d <@d|@=== Debug Properties ===
bci: 64
code: ResolvedJavaMethodBytecode<PredicatedProxyNodeIterator.forward()>
duringCall: false
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: PredicatedProxyNodeIterator.java
sourceLine: 44
stackSize: 0
=== Inputs ===
outerFrameState: ?251 
values: a38 
=== Succesors ===
=== Usages ===
v2974 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?251 values: a38  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2974 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?1080 
object: a2826 
=== Succesors ===
next: i236 
=== Usages ===
=== Predecessor ===
a2826 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?1080 object: a2826 #next: i236  <|@  <|@
f <@~|@floating>@ <|@
tid a1310 <|@
result v51|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 82]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
op: Uncompress
stamp: a -
=== Inputs ===
value: a2826 
=== Succesors ===
=== Usages ===
v1314 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2826  <|@  <|@
tid v1314 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Interface
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 89]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@6cd524e9
stamp: void
targetMethod: HotSpotMethod<NodePredicate.apply(Node)>
=== Inputs ===
arguments: a1310 a1082 
=== Succesors ===
=== Usages ===
i236 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1310 a1082  <|@  <|@
tid ?2215 <|@
d <@d|@=== Debug Properties ===
bci: 89
code: ResolvedJavaMethodBytecode<PredicatedProxyNodeIterator.forward()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: PredicatedProxyNodeIterator.java
sourceLine: 44
stackSize: 0
=== Inputs ===
outerFrameState: ?251 
values: a38 
=== Succesors ===
=== Usages ===
i236 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?251 values: a38  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i236 <|@
result v52|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 89
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 89]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#NodePredicate.apply
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1314 
stateDuring: ?2215 
=== Succesors ===
next: v244 
=== Usages ===
v238 
=== Predecessor ===
v2974 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1314 stateDuring: ?2215 #next: v244  <|@  <|@
f <@~|@floating>@ <|@
tid v238 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 94]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i236 
y: i17 
=== Succesors ===
=== Usages ===
v244 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i236 y: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 94]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v238 
=== Succesors ===
trueSuccessor: v242 
falseSuccessor: v243 
=== Usages ===
=== Predecessor ===
i236 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v238 #trueSuccessor: v242 #falseSuccessor: v243  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v49|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v50|DWORD[.] = MOV [v24|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 64]
locals: v24|QWORD[.] 
org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
locals: v24|QWORD[.] 
java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
locals: - v1|QWORD[.] v24|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v50|DWORD[.] * 8] state [bci:64, 1, 13] <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = UNCOMPRESSPOINTER (input: v50|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 89]
locals: v24|QWORD[.] 
org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
locals: v24|QWORD[.] 
java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
locals: - v1|QWORD[.] v24|QWORD[.] - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<NodePredicate.apply(Node)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:89, 1, 13] <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v52|DWORD, y: v52|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B82" 
    xhandlers
    flags 
    probability 4595232924244835984
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v242 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:45) [bci: 97]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1315 
=== Usages ===
=== Predecessor ===
v244 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1315  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1315 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: NodeIterator.current
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:45) [bci: 99]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2879 
value: a1572 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1145 
=== Usages ===
=== Predecessor ===
v242 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2879 value: a1572 stateAfter: - lastLocationAccess: - #next: v1145  <|@  <|@
f <@*|@fixed>@ <|@
tid v1145 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v900 
=== Predecessor ===
v1315 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD[.] + 12], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B38 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595232924244835984
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v243 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:47) [bci: 102]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2827 
=== Usages ===
=== Predecessor ===
v244 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2827  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2827 <|@
result v53|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: NodeIterator.current
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:39) [bci: 5]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
nullCheck: false
stamp: n Lorg/graalvm/compiler/graph/Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2879 
=== Succesors ===
next: v960 
=== Usages ===
a1317 
=== Predecessor ===
v243 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2879 #next: v960  <|@  <|@
f <@~|@floating>@ <|@
tid a1317 <|@
result v54|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:39) [bci: 5]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
op: Uncompress
stamp: a Lorg/graalvm/compiler/graph/Node;
=== Inputs ===
value: a2827 
=== Succesors ===
=== Usages ===
a1149 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2827  <|@  <|@
f <@*|@fixed>@ <|@
tid v960 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v961 
=== Predecessor ===
a2827 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v53|DWORD[.] = MOV [v24|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = UNCOMPRESSPOINTER (input: v53|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v54|QWORD[.]] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B33" "B21" 
    successors "B41" "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4605756349488152116
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a1149 <|@
result v55|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a Lorg/graalvm/compiler/graph/Node;
valueDescription: a -
=== Inputs ===
merge: v961 
values: a1317 a1279 a1293 
=== Succesors ===
=== Usages ===
a1150 v1135 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v961 values: a1317 a1279 a1293  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v961 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v960 v963 v1099 
=== Succesors ===
next: v912 
=== Usages ===
a1149 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v960 v963 v1099 #next: v912  <|@  <|@
f <@~|@floating>@ <|@
tid v1135 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:39) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
=== Inputs ===
value: a1149 
=== Succesors ===
=== Usages ===
v912 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1149  <|@  <|@
f <@*|@fixed>@ <|@
tid v912 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Iterable.forEach(Iterable.java:74) [bci: 18]
stamp: void
trueSuccessorProbability: 0.610225267647409
=== Inputs ===
condition: v1135 
=== Succesors ===
trueSuccessor: v913 
falseSuccessor: v911 
=== Usages ===
=== Predecessor ===
v961 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1135 #trueSuccessor: v913 #falseSuccessor: v911  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v55|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v55|QWORD[.], y: v55|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.610225267647409 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B82" 
    xhandlers
    flags 
    probability 4602801416593737527
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v913 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Iterable.forEach(Iterable.java:77) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v902 
=== Usages ===
=== Predecessor ===
v912 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v902  <|@  <|@
f <@*|@fixed>@ <|@
tid v902 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v900 
=== Predecessor ===
v913 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B41 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599581485706735098
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v911 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Iterable.forEach(Iterable.java:74) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v434 
=== Usages ===
=== Predecessor ===
v912 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v434  <|@  <|@
tid ?336 <|@
d <@d|@=== Debug Properties ===
bci: 22
code: ResolvedJavaMethodBytecode<Iterable.forEach(Consumer)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Iterable.java
sourceLine: 74
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a2 a38 - 
=== Succesors ===
=== Usages ===
?409 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 a38 -  <|@  <|@
tid ?409 <|@
d <@d|@=== Debug Properties ===
bci: 1
code: ResolvedJavaMethodBytecode<NodeIterator.next()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: NodeIterator.java
sourceLine: 30
stackSize: 0
=== Inputs ===
outerFrameState: ?336 
values: - 
=== Succesors ===
=== Usages ===
?519 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?336 values: -  <|@  <|@
tid ?519 <|@
d <@d|@=== Debug Properties ===
bci: 1
code: ResolvedJavaMethodBytecode<NodeIterator.next()>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: NodeIterator.java
sourceLine: 44
stackSize: 0
=== Inputs ===
outerFrameState: ?409 
values: a38 - 
=== Succesors ===
=== Usages ===
?436 ?515 ?457 ?505 ?464 ?468 ?935 ?480 ?2219 ?2216 ?2217 ?2218 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?409 values: a38 -  <|@  <|@
tid ?2217 <|@
d <@d|@=== Debug Properties ===
bci: 37
code: ResolvedJavaMethodBytecode<PredicatedProxyNodeIterator.forward()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: PredicatedProxyNodeIterator.java
sourceLine: 41
stackSize: 0
=== Inputs ===
outerFrameState: ?519 
values: a38 
=== Succesors ===
=== Usages ===
i467 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?519 values: a38  <|@  <|@
tid ?464 <|@
d <@d|@=== Debug Properties ===
bci: 33
code: ResolvedJavaMethodBytecode<PredicatedProxyNodeIterator.forward()>
duringCall: false
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: PredicatedProxyNodeIterator.java
sourceLine: 41
stackSize: 0
=== Inputs ===
outerFrameState: ?519 
values: a38 
=== Succesors ===
=== Usages ===
v2976 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?519 values: a38  <|@  <|@
f <@*|@fixed>@ <|@
tid v434 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 0]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v435 
=== Predecessor ===
v911 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v55|QWORD[.]] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B61" 
    successors "B44" "B45" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4603428433579791241
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a1150 <|@
result v56|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a Lorg/graalvm/compiler/graph/Node;
valueDescription: a -
=== Inputs ===
merge: v435 
values: a1149 a479 
=== Succesors ===
=== Usages ===
v1325 v438 v2885 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v435 values: a1149 a479  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v435 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 1.7777777777777777
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 0]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v434 
=== Succesors ===
next: v441 
=== Usages ===
v460 v473 v486 a1150 v1773 v1767 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v434 #next: v441  <|@  <|@
f <@~|@floating>@ <|@
tid v438 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 4]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
=== Inputs ===
value: a1150 
=== Succesors ===
=== Usages ===
v441 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1150  <|@  <|@
f <@*|@fixed>@ <|@
tid v441 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 4]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v438 
=== Succesors ===
trueSuccessor: v439 
falseSuccessor: v440 
=== Usages ===
=== Predecessor ===
v435 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v438 #trueSuccessor: v439 #falseSuccessor: v440  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v56|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v56|QWORD[.], y: v56|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B49" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4598924833952420745
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v439 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 33]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v447 
=== Usages ===
=== Predecessor ===
v441 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v447  <|@  <|@
f <@*|@fixed>@ <|@
tid v447 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 33]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v448 
=== Predecessor ===
v439 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B44 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4598924833952420745
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v440 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 7]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2828 
=== Usages ===
=== Predecessor ===
v441 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2828  <|@  <|@
f <@~|@floating>@ <|@
tid v2885 <|@
result [v56|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1150 
index: - 
=== Succesors ===
=== Usages ===
i2828 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1150 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2828 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Node.id
nodeSourcePosition: at org.graalvm.compiler.graph.Node.isAlive(Node.java:556) [bci: 1]
at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 11]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2885 
=== Succesors ===
next: v452 
=== Usages ===
v570 
=== Predecessor ===
v440 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2885 #next: v452  <|@  <|@
f <@~|@floating>@ <|@
tid v570 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.graph.Node.isAlive(Node.java:556) [bci: 4]
at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 11]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2828 
y: i17 
=== Succesors ===
=== Usages ===
v452 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2828 y: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v452 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 14]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v570 
=== Succesors ===
trueSuccessor: v451 
falseSuccessor: v450 
=== Usages ===
=== Predecessor ===
i2828 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v570 #trueSuccessor: v451 #falseSuccessor: v450  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v56|QWORD[.] + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B45 -> B46 falseDestination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B49" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4594421234325050249
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v451 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 33]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v449 
=== Usages ===
=== Predecessor ===
v452 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v449  <|@  <|@
f <@*|@fixed>@ <|@
tid v449 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 33]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v448 
=== Predecessor ===
v451 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B46 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B64" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4594421234325050249
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v450 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 17]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2829 
=== Usages ===
=== Predecessor ===
v452 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2829  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2829 <|@
result v57|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: PredicatedProxyNodeIterator.predicate
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 18]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
nullCheck: false
stamp: n -
=== Inputs ===
stateBefore: - 
guard: - 
address: v2881 
=== Succesors ===
next: v2975 
=== Usages ===
a1321 v2975 
=== Predecessor ===
v450 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2881 #next: v2975  <|@  <|@
tid ?436 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<PredicatedProxyNodeIterator.forward()>
duringCall: false
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: PredicatedProxyNodeIterator.java
sourceLine: 41
stackSize: 0
=== Inputs ===
outerFrameState: ?519 
values: a38 
=== Succesors ===
=== Usages ===
v2975 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?519 values: a38  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2975 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?436 
object: a2829 
=== Succesors ===
next: i456 
=== Usages ===
=== Predecessor ===
a2829 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?436 object: a2829 #next: i456  <|@  <|@
f <@~|@floating>@ <|@
tid a1321 <|@
result v58|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 18]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
op: Uncompress
stamp: a -
=== Inputs ===
value: a2829 
=== Succesors ===
=== Usages ===
v1325 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2829  <|@  <|@
tid v1325 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Interface
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 25]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@182d5ced
stamp: void
targetMethod: HotSpotMethod<NodePredicate.apply(Node)>
=== Inputs ===
arguments: a1321 a1150 
=== Succesors ===
=== Usages ===
i456 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1321 a1150  <|@  <|@
tid ?2216 <|@
d <@d|@=== Debug Properties ===
bci: 25
code: ResolvedJavaMethodBytecode<PredicatedProxyNodeIterator.forward()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: PredicatedProxyNodeIterator.java
sourceLine: 41
stackSize: 0
=== Inputs ===
outerFrameState: ?519 
values: a38 
=== Succesors ===
=== Usages ===
i456 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?519 values: a38  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i456 <|@
result v59|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 25
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 25]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#NodePredicate.apply
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1325 
stateDuring: ?2216 
=== Succesors ===
next: v463 
=== Usages ===
?457 v458 
=== Predecessor ===
v2975 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1325 stateDuring: ?2216 #next: v463  <|@  <|@
f <@~|@floating>@ <|@
tid v458 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 30]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i456 
y: i17 
=== Succesors ===
=== Usages ===
v463 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i456 y: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v463 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 30]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v458 
=== Succesors ===
trueSuccessor: v462 
falseSuccessor: v460 
=== Usages ===
=== Predecessor ===
i456 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v458 #trueSuccessor: v462 #falseSuccessor: v460  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v57|DWORD[.] = MOV [v24|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 0]
locals: v24|QWORD[.] 
org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
locals: v24|QWORD[.] - 
org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
locals: - 
java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
locals: - v1|QWORD[.] v24|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v57|DWORD[.] * 8] state [bci:0, 1, 1, 22] <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = UNCOMPRESSPOINTER (input: v57|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v58|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v56|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 25]
locals: v24|QWORD[.] 
org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
locals: v24|QWORD[.] - 
org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
locals: - 
java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
locals: - v1|QWORD[.] v24|QWORD[.] - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<NodePredicate.apply(Node)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:25, 1, 1, 22] <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v59|DWORD, y: v59|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4589917634697679753
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v462 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 33]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v459 
=== Usages ===
=== Predecessor ===
v463 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v459  <|@  <|@
f <@*|@fixed>@ <|@
tid v459 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 33]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v448 
=== Predecessor ===
v462 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B44" "B46" "B48" 
    successors "B50" "B53" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4602771781825476888
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v448 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 33]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v447 v449 v459 
=== Succesors ===
next: a2830 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v447 v449 v459 #next: a2830  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2830 <|@
result v60|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: PredicatedProxyNodeIterator.iterator
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 34]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
nullCheck: false
stamp: n -
=== Inputs ===
stateBefore: - 
guard: - 
address: v2883 
=== Succesors ===
next: v2976 
=== Usages ===
a1329 v2976 
=== Predecessor ===
v448 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2883 #next: v2976  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2976 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?464 
object: a2830 
=== Succesors ===
next: i467 
=== Usages ===
=== Predecessor ===
a2830 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?464 object: a2830 #next: i467  <|@  <|@
f <@~|@floating>@ <|@
tid a1329 <|@
result v61|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 34]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
op: Uncompress
stamp: a -
=== Inputs ===
value: a2830 
=== Succesors ===
=== Usages ===
v1333 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2830  <|@  <|@
tid v1333 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Interface
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 37]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@f65fd71
stamp: void
targetMethod: HotSpotMethod<Iterator.hasNext()>
=== Inputs ===
arguments: a1329 
=== Succesors ===
=== Usages ===
i467 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1329  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i467 <|@
result v62|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 37
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 37]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Iterator.hasNext
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1333 
stateDuring: ?2217 
=== Succesors ===
next: v476 
=== Usages ===
?468 v469 
=== Predecessor ===
v2976 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1333 stateDuring: ?2217 #next: v476  <|@  <|@
f <@~|@floating>@ <|@
tid v469 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 42]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i467 
y: i17 
=== Succesors ===
=== Usages ===
v476 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i467 y: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v476 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 42]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v469 
=== Succesors ===
trueSuccessor: v473 
falseSuccessor: v475 
=== Usages ===
=== Predecessor ===
i467 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v469 #trueSuccessor: v473 #falseSuccessor: v475  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v60|DWORD[.] = MOV [v24|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 33]
locals: v24|QWORD[.] 
org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
locals: v24|QWORD[.] - 
org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
locals: - 
java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
locals: - v1|QWORD[.] v24|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v60|DWORD[.] * 8] state [bci:33, 1, 1, 22] <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[.] = UNCOMPRESSPOINTER (input: v60|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v61|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 37]
locals: v24|QWORD[.] 
org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
locals: v24|QWORD[.] - 
org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
locals: - 
java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
locals: - v1|QWORD[.] v24|QWORD[.] - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Iterator.hasNext()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:37, 1, 1, 22] <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v62|DWORD, y: v62|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598268182198106392
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v473 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 64]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v435 
=== Succesors ===
next: a2831 
=== Usages ===
=== Predecessor ===
v476 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v435 #next: a2831  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2831 <|@
result v63|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: NodeIterator.current
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 65]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
nullCheck: false
stamp: n Lorg/graalvm/compiler/graph/Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2879 
=== Succesors ===
next: v944 
=== Usages ===
a2225 v1575 
=== Predecessor ===
v473 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2879 #next: v944  <|@  <|@
f <@~|@floating>@ <|@
tid v1575 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 68]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
=== Inputs ===
value: a2831 
=== Succesors ===
=== Usages ===
v944 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2831  <|@  <|@
f <@*|@fixed>@ <|@
tid v944 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 68]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1575 
=== Succesors ===
trueSuccessor: v942 
falseSuccessor: v943 
=== Usages ===
=== Predecessor ===
a2831 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1575 #trueSuccessor: v942 #falseSuccessor: v943  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v63|DWORD[.] = MOV [v24|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v63|DWORD[.], y: v63|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B56" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v942 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:47) [bci: 102]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2266 
=== Usages ===
=== Predecessor ===
v944 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2266  <|@  <|@
f <@~|@floating>@ <|@
tid i2267 <|@
result int[-297148|0xfffffffffffb7744] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -297148
stableDimension: 0
stamp: i32 [-297148] ⇊00000000fffb7744 ⇈00000000fffb7744
stampKind: i32
value: int[-297148|0xfffffffffffb7744]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2268 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2266 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2265 
=== Predecessor ===
v942 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-297148|0xfffffffffffb7744]] destination: B51 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598268182198106392
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v943 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 71]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v936 
=== Usages ===
=== Predecessor ===
v944 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v936  <|@  <|@
f <@*|@fixed>@ <|@
tid v936 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v933 
=== Predecessor ===
v943 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v63|DWORD[.]] destination: B52 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B54" "B57" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4598268182198106392
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v475 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 45]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2832 
=== Usages ===
=== Predecessor ===
v476 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2832  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2832 <|@
result v64|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: PredicatedProxyNodeIterator.iterator
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 47]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
nullCheck: false
stamp: n -
=== Inputs ===
stateBefore: - 
guard: - 
address: v2883 
=== Succesors ===
next: v1769 
=== Usages ===
a1337 v1338 
=== Predecessor ===
v475 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2883 #next: v1769  <|@  <|@
f <@~|@floating>@ <|@
tid v1338 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 50]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
=== Inputs ===
value: a2832 
=== Succesors ===
=== Usages ===
v1769 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2832  <|@  <|@
f <@*|@fixed>@ <|@
tid v1769 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 50]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1338 
=== Succesors ===
trueSuccessor: v1767 
falseSuccessor: v1764 
=== Usages ===
=== Predecessor ===
a2832 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1338 #trueSuccessor: v1767 #falseSuccessor: v1764  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v64|DWORD[.] = MOV [v24|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v64|DWORD[.], y: v64|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1767 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 50]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v435 
=== Succesors ===
next: v1768 
=== Usages ===
=== Predecessor ===
v1769 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v435 #next: v1768  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1768 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 50]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v12 
=== Succesors ===
next: v2271 
=== Usages ===
=== Predecessor ===
v1767 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v12 #next: v2271  <|@  <|@
f <@~|@floating>@ <|@
tid i2272 <|@
result int[-342795|0xfffffffffffac4f5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -342795
stableDimension: 0
stamp: i32 [-342795] ⇊00000000fffac4f5 ⇈00000000fffac4f5
stampKind: i32
value: int[-342795|0xfffffffffffac4f5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2268 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2271 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2265 
=== Predecessor ===
v1768 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-342795|0xfffffffffffac4f5]] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B51" "B55" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i2268 <|@
result v65|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-342795 - -297148] ⇊00000000fffa4444 ⇈00000000fffbf7f5
valueDescription: i32
=== Inputs ===
merge: v2265 
values: i2267 i2272 
=== Succesors ===
=== Usages ===
v2270 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2265 values: i2267 i2272  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2265 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2266 v2271 
=== Succesors ===
next: v2270 
=== Usages ===
i2268 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2266 v2271 #next: v2270  <|@  <|@
tid ?468 <|@
d <@d|@=== Debug Properties ===
bci: 42
code: ResolvedJavaMethodBytecode<PredicatedProxyNodeIterator.forward()>
duringCall: false
localsSize: 1
locksSize: 0
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 37]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
rethrowException: false
sourceFile: PredicatedProxyNodeIterator.java
sourceLine: 41
stackSize: 1
=== Inputs ===
outerFrameState: ?519 
values: a38 i467 
=== Succesors ===
=== Usages ===
v2270 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?519 values: a38 i467  <|@  <|@
f <@*|@fixed>@ <|@
tid v2270 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?468 
actionAndReason: i2268 
speculation: a2233 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2265 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?468 actionAndReason: i2268 speculation: a2233  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v65|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v65|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 42]
stack: v62|DWORD 
locals: v24|QWORD[.] 
org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
locals: v24|QWORD[.] - 
org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
locals: - 
java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
locals: - v1|QWORD[.] v24|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:42, 1, 1, 22] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B58" "B59" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4598268182198106392
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1764 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 50]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: a479 
=== Usages ===
=== Predecessor ===
v1769 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a479  <|@  <|@
f <@~|@floating>@ <|@
tid a1337 <|@
result v66|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 47]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
op: Uncompress
stamp: a -
=== Inputs ===
value: a2832 
=== Succesors ===
=== Usages ===
v1341 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2832  <|@  <|@
tid v1341 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Interface
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 50]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
returnStamp: a Ljava/lang/Object;
signature: [Ljdk.vm.ci.meta.JavaType;@34db1fb9
stamp: void
targetMethod: HotSpotMethod<Iterator.next()>
=== Inputs ===
arguments: a1337 
=== Succesors ===
=== Usages ===
a479 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1337  <|@  <|@
tid ?2218 <|@
d <@d|@=== Debug Properties ===
bci: 50
code: ResolvedJavaMethodBytecode<PredicatedProxyNodeIterator.forward()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: PredicatedProxyNodeIterator.java
sourceLine: 42
stackSize: 1
=== Inputs ===
outerFrameState: ?519 
values: a38 a38 
=== Succesors ===
=== Usages ===
a479 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?519 values: a38 a38  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a479 <|@
result v67|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 50
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 50]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
polymorphic: false
stamp: a Ljava/lang/Object;
targetMethod: Direct#Iterator.next
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1341 
stateDuring: ?2218 
=== Succesors ===
next: v2019 
=== Usages ===
?480 v1343 a1150 v2936 a1346 
=== Predecessor ===
v1764 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1341 stateDuring: ?2218 #next: v2019  <|@  <|@
f <@~|@floating>@ <|@
tid v1343 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 55]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
=== Inputs ===
value: a479 
=== Succesors ===
=== Usages ===
v2019 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a479  <|@  <|@
f <@*|@fixed>@ <|@
tid v2019 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:156) [bci: 15]
at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 55]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v1343 
=== Succesors ===
trueSuccessor: v2018 
falseSuccessor: v2017 
=== Usages ===
=== Predecessor ===
a479 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1343 #trueSuccessor: v2018 #falseSuccessor: v2017  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = UNCOMPRESSPOINTER (input: v64|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v66|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 50]
stack: v24|QWORD[.] 
locals: v24|QWORD[.] 
org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
locals: v24|QWORD[.] - 
org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
locals: - 
java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
locals: - v1|QWORD[.] v24|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Iterator.next()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:50, 1, 1, 22] <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v67|QWORD[.], y: v67|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B61" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4583011721056744690
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2018 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:157) [bci: 18]
at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 55]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2348 
=== Usages ===
=== Predecessor ===
v2019 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2348  <|@  <|@
f <@*|@fixed>@ <|@
tid v2348 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 55]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2346 
=== Predecessor ===
v2018 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B58 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B62" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4597441832394896274
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2017 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:160) [bci: 29]
at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 55]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2833 
=== Usages ===
=== Predecessor ===
v2019 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2833  <|@  <|@
f <@~|@floating>@ <|@
tid v2936 <|@
result [v67|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a479 
index: - 
=== Succesors ===
=== Usages ===
v2833 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a479 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2833 <|@
result v68|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:161) [bci: 40]
at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 55]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2936 
=== Succesors ===
next: v2834 
=== Usages ===
v2915 
=== Predecessor ===
v2017 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2936 #next: v2834  <|@  <|@
f <@~|@floating>@ <|@
tid v2915 <|@
result [v68|DWORD * 8 + 48] <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v2833 
=== Succesors ===
=== Usages ===
v2834 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v2833  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2834 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: PrimarySupers:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:162) [bci: 54]
at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 55]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
nullCheck: false
stamp: Klass*
=== Inputs ===
stateBefore: - 
guard: - 
address: v2915 
=== Succesors ===
next: v2762 
=== Usages ===
v2023 
=== Predecessor ===
v2833 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2915 #next: v2762  <|@  <|@
f <@~|@floating>@ <|@
tid v2023 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:162) [bci: 58]
at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 55]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2834 
y: v1995 
=== Succesors ===
=== Usages ===
v2762 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2834 y: v1995  <|@  <|@
f <@*|@fixed>@ <|@
tid v2762 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 55]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2023 
=== Succesors ===
trueSuccessor: v2761 
falseSuccessor: v1773 
=== Usages ===
=== Predecessor ===
v2834 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2023 #trueSuccessor: v2761 #falseSuccessor: v1773  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v68|DWORD = MOV [v67|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v27|QWORD, y: [v68|DWORD * 8 + 48]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4597441832394896274
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2761 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 55]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2357 
=== Usages ===
=== Predecessor ===
v2762 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2357  <|@  <|@
f <@*|@fixed>@ <|@
tid v2357 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 55]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2346 
=== Predecessor ===
v2761 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B58" "B60" 
    successors "B43" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4598268182198106392
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2346 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 55]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2348 v2357 
=== Succesors ===
next: v1347 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2348 v2357 #next: v1347  <|@  <|@
f <@~|@floating>@ <|@
tid a1346 <|@
result v69|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 58]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
op: Compress
stamp: n Ljava/lang/Object;
=== Inputs ===
value: a479 
=== Succesors ===
=== Usages ===
v1347 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a479  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1347 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: NodeIterator.current
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 58]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2879 
value: a1346 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j2547 
=== Usages ===
=== Predecessor ===
v2346 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2879 value: a1346 stateAfter: - lastLocationAccess: - #next: j2547  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2547 <|@
result v24|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 58]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a38 
=== Succesors ===
next: v2551 
=== Usages ===
j2548 
=== Predecessor ===
v1347 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a38 #next: v2551  <|@  <|@
f <@~|@floating>@ <|@
tid j2548 <|@
result v70|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 58]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j2547 
y: i2535 
=== Succesors ===
=== Usages ===
v2937 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j2547 y: i2535  <|@  <|@
f <@~|@floating>@ <|@
tid v2937 <|@
result [v70|QWORD[*] + v26|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2548 
index: j2539 
=== Succesors ===
=== Usages ===
v2551 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2548 index: j2539  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2551 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 58]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2937 
value: i2541 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v486 
=== Usages ===
=== Predecessor ===
j2547 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2937 value: i2541 stateAfter: - lastLocationAccess: - #next: v486  <|@  <|@
f <@*|@fixed>@ <|@
tid v486 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 0]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
=== Inputs ===
loopBegin: v435 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2551 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v435  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v69|DWORD[.] = COMPRESSPOINTER (input: v67|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD[.] + 12], y: v69|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[*] = SHR v24|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v70|QWORD[*] + v26|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v67|QWORD[.]] destination: B61 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1773 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 55]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v435 
=== Succesors ===
next: v1774 
=== Usages ===
=== Predecessor ===
v2762 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v435 #next: v1774  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1774 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 55]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v12 
=== Succesors ===
next: v1771 
=== Usages ===
=== Predecessor ===
v1773 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v12 #next: v1771  <|@  <|@
tid ?480 <|@
d <@d|@=== Debug Properties ===
bci: 55
code: ResolvedJavaMethodBytecode<PredicatedProxyNodeIterator.forward()>
duringCall: false
localsSize: 1
locksSize: 0
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 50]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
rethrowException: false
sourceFile: PredicatedProxyNodeIterator.java
sourceLine: 42
stackSize: 2
=== Inputs ===
outerFrameState: ?519 
values: a38 a38 a479 
=== Succesors ===
=== Usages ===
v1771 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?519 values: a38 a38 a479  <|@  <|@
f <@*|@fixed>@ <|@
tid v1771 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1345
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 55]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
reason: ClassCastException
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?480 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1774 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?480  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -344355 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 55]
stack: v24|QWORD[.] v67|QWORD[.] 
locals: v24|QWORD[.] 
org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
locals: v24|QWORD[.] - 
org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
locals: - 
java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
locals: - v1|QWORD[.] v24|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:55, 1, 1, 22] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B65" "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589917634697679753
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v460 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 64]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v435 
=== Succesors ===
next: a2835 
=== Usages ===
=== Predecessor ===
v463 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v435 #next: a2835  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2835 <|@
result v71|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: NodeIterator.current
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 65]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
nullCheck: false
stamp: n Lorg/graalvm/compiler/graph/Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2879 
=== Succesors ===
next: v492 
=== Usages ===
a2225 v1574 
=== Predecessor ===
v460 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2879 #next: v492  <|@  <|@
f <@~|@floating>@ <|@
tid v1574 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 68]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
=== Inputs ===
value: a2835 
=== Succesors ===
=== Usages ===
v492 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2835  <|@  <|@
f <@*|@fixed>@ <|@
tid v492 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 68]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1574 
=== Succesors ===
trueSuccessor: v490 
falseSuccessor: v491 
=== Usages ===
=== Predecessor ===
a2835 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1574 #trueSuccessor: v490 #falseSuccessor: v491  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v71|DWORD[.] = MOV [v24|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v71|DWORD[.], y: v71|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v490 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:47) [bci: 102]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1161 
=== Usages ===
=== Predecessor ===
v492 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1161  <|@  <|@
tid ?457 <|@
d <@d|@=== Debug Properties ===
bci: 30
code: ResolvedJavaMethodBytecode<PredicatedProxyNodeIterator.forward()>
duringCall: false
localsSize: 1
locksSize: 0
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 25]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
rethrowException: false
sourceFile: PredicatedProxyNodeIterator.java
sourceLine: 41
stackSize: 1
=== Inputs ===
outerFrameState: ?519 
values: a38 i456 
=== Succesors ===
=== Usages ===
v1161 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?519 values: a38 i456  <|@  <|@
f <@*|@fixed>@ <|@
tid v1161 <|@
d <@d|@=== Debug Properties ===
action: InvalidateRecompile
debugId: 0
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:46) [bci: 13]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
reason: Unresolved
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?457 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v490 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?457  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -297404 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 30]
stack: v59|DWORD 
locals: v24|QWORD[.] 
org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
locals: v24|QWORD[.] - 
org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
locals: - 
java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
locals: - v1|QWORD[.] v24|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:30, 1, 1, 22] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589917634697679753
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v491 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 71]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v934 
=== Usages ===
=== Predecessor ===
v492 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v934  <|@  <|@
f <@*|@fixed>@ <|@
tid v934 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v933 
=== Predecessor ===
v491 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v71|DWORD[.]] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B52" 
    successors "B68" "B69" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599581485706735098
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a2225 <|@
result v72|DWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: n Lorg/graalvm/compiler/graph/Node;
valueDescription: n -
=== Inputs ===
merge: v933 
values: a2835 a2831 
=== Succesors ===
=== Usages ===
a2226 v2886 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v933 values: a2835 a2831  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v933 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v934 v936 
=== Succesors ===
next: i2836 
=== Usages ===
a2225 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v934 v936 #next: i2836  <|@  <|@
tid ?935 <|@
d <@d|@=== Debug Properties ===
bci: 64
code: ResolvedJavaMethodBytecode<PredicatedProxyNodeIterator.forward()>
duringCall: false
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: PredicatedProxyNodeIterator.java
sourceLine: 44
stackSize: 0
=== Inputs ===
outerFrameState: ?519 
values: a38 
=== Succesors ===
=== Usages ===
v2308 i2836 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?519 values: a38  <|@  <|@
f <@~|@floating>@ <|@
tid v2886 <|@
result [v72|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2225 
=== Succesors ===
=== Usages ===
i2836 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2225  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2836 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Node.id
nodeSourcePosition: at org.graalvm.compiler.graph.Node.isAlive(Node.java:556) [bci: 1]
at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 75]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?935 
guard: - 
address: v2886 
=== Succesors ===
next: v500 
=== Usages ===
v577 
=== Predecessor ===
v933 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?935 guard: - address: v2886 #next: v500  <|@  <|@
f <@~|@floating>@ <|@
tid v577 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.graph.Node.isAlive(Node.java:556) [bci: 4]
at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 75]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2836 
y: i17 
=== Succesors ===
=== Usages ===
v500 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2836 y: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v500 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 78]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v577 
=== Succesors ===
trueSuccessor: v498 
falseSuccessor: v499 
=== Usages ===
=== Predecessor ===
i2836 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v577 #trueSuccessor: v498 #falseSuccessor: v499  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v72|DWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 64]
locals: v24|QWORD[.] 
org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
locals: v24|QWORD[.] - 
org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
locals: - 
java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
locals: - v1|QWORD[.] v24|QWORD[.] - 
>@ <|@ instruction CMP [v72|DWORD[.] * 8 + 12] y: 0 size: DWORD state [bci:64, 1, 1, 22] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B67 -> B68 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B73" 
    xhandlers
    flags 
    probability 4595077886079364602
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v498 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:45) [bci: 97]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1351 
=== Usages ===
=== Predecessor ===
v500 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1351  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1351 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: NodeIterator.current
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:45) [bci: 99]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2879 
value: a1572 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2274 
=== Usages ===
=== Predecessor ===
v498 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2879 value: a1572 stateAfter: - lastLocationAccess: - #next: v2274  <|@  <|@
f <@~|@floating>@ <|@
tid i2275 <|@
result int[-286908|0xfffffffffffb9f44] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -286908
stableDimension: 0
stamp: i32 [-286908] ⇊00000000fffb9f44 ⇈00000000fffb9f44
stampKind: i32
value: int[-286908|0xfffffffffffb9f44]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2276 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2274 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2273 
=== Predecessor ===
v1351 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD[.] + 12], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-286908|0xfffffffffffb9f44]] destination: B68 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595077886079364602
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v499 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 81]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2837 
=== Usages ===
=== Predecessor ===
v500 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2837  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2837 <|@
result v73|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: PredicatedProxyNodeIterator.predicate
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 82]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
nullCheck: false
stamp: n -
=== Inputs ===
stateBefore: - 
guard: - 
address: v2881 
=== Succesors ===
next: v1785 
=== Usages ===
a1353 v1354 
=== Predecessor ===
v499 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2881 #next: v1785  <|@  <|@
f <@~|@floating>@ <|@
tid v1354 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 89]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
=== Inputs ===
value: a2837 
=== Succesors ===
=== Usages ===
v1785 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2837  <|@  <|@
f <@*|@fixed>@ <|@
tid v1785 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 89]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1354 
=== Succesors ===
trueSuccessor: v1784 
falseSuccessor: v1781 
=== Usages ===
=== Predecessor ===
a2837 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1354 #trueSuccessor: v1784 #falseSuccessor: v1781  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v73|DWORD[.] = MOV [v24|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v73|DWORD[.], y: v73|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1784 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 89]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v12 
=== Succesors ===
next: v2308 
=== Usages ===
=== Predecessor ===
v1785 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v12 #next: v2308  <|@  <|@
f <@~|@floating>@ <|@
tid i2310 <|@
result int[-346891|0xfffffffffffab4f5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -346891
stableDimension: 0
stamp: i32 [-346891] ⇊00000000fffab4f5 ⇈00000000fffab4f5
stampKind: i32
value: int[-346891|0xfffffffffffab4f5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2308 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2308 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?935 
actionAndReason: i2310 
speculation: a2233 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1784 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?935 actionAndReason: i2310 speculation: a2233  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -346891 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 64]
locals: v24|QWORD[.] 
org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
locals: v24|QWORD[.] - 
org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
locals: - 
java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
locals: - v1|QWORD[.] v24|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:64, 1, 1, 22] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" "B74" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595077886079364602
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1781 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 89]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: i504 
=== Usages ===
=== Predecessor ===
v1785 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i504  <|@  <|@
f <@~|@floating>@ <|@
tid a1353 <|@
result v74|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 82]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
op: Uncompress
stamp: a -
=== Inputs ===
value: a2837 
=== Succesors ===
=== Usages ===
v1357 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2837  <|@  <|@
f <@~|@floating>@ <|@
tid a2226 <|@
result v75|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 65]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
op: Uncompress
stamp: a Lorg/graalvm/compiler/graph/Node;
=== Inputs ===
value: a2225 
=== Succesors ===
=== Usages ===
v1357 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2225  <|@  <|@
tid v1357 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Interface
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 89]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@716c87a7
stamp: void
targetMethod: HotSpotMethod<NodePredicate.apply(Node)>
=== Inputs ===
arguments: a1353 a2226 
=== Succesors ===
=== Usages ===
i504 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1353 a2226  <|@  <|@
tid ?2219 <|@
d <@d|@=== Debug Properties ===
bci: 89
code: ResolvedJavaMethodBytecode<PredicatedProxyNodeIterator.forward()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: PredicatedProxyNodeIterator.java
sourceLine: 44
stackSize: 0
=== Inputs ===
outerFrameState: ?519 
values: a38 
=== Succesors ===
=== Usages ===
i504 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?519 values: a38  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i504 <|@
result v76|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 89
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 89]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#NodePredicate.apply
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1357 
stateDuring: ?2219 
=== Succesors ===
next: v512 
=== Usages ===
?505 v506 
=== Predecessor ===
v1781 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1357 stateDuring: ?2219 #next: v512  <|@  <|@
f <@~|@floating>@ <|@
tid v506 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 94]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i504 
y: i17 
=== Succesors ===
=== Usages ===
v512 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i504 y: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v512 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 94]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v506 
=== Succesors ===
trueSuccessor: v510 
falseSuccessor: v511 
=== Usages ===
=== Predecessor ===
i504 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v506 #trueSuccessor: v510 #falseSuccessor: v511  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = UNCOMPRESSPOINTER (input: v73|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = UNCOMPRESSPOINTER (input: v72|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v74|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v75|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 89]
locals: v24|QWORD[.] 
org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
locals: v24|QWORD[.] - 
org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
locals: - 
java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
locals: - v1|QWORD[.] v24|QWORD[.] - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<NodePredicate.apply(Node)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:89, 1, 1, 22] <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v76|DWORD, y: v76|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B73" 
    xhandlers
    flags 
    probability 4590574286451994106
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v510 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:45) [bci: 97]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1358 
=== Usages ===
=== Predecessor ===
v512 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1358  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1358 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: NodeIterator.current
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:45) [bci: 99]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2879 
value: a1572 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2279 
=== Usages ===
=== Predecessor ===
v510 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2879 value: a1572 stateAfter: - lastLocationAccess: - #next: v2279  <|@  <|@
f <@~|@floating>@ <|@
tid i2280 <|@
result int[-267196|0xfffffffffffbec44] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -267196
stableDimension: 0
stamp: i32 [-267196] ⇊00000000fffbec44 ⇈00000000fffbec44
stampKind: i32
value: int[-267196|0xfffffffffffbec44]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2276 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2279 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2273 
=== Predecessor ===
v1358 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD[.] + 12], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-267196|0xfffffffffffbec44]] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B68" "B72" 
    successors 
    xhandlers
    flags 
    probability 4598032818973779191
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i2276 <|@
result v77|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-286908 - -267196] ⇊00000000fffb8c44 ⇈00000000fffbff44
valueDescription: i32
=== Inputs ===
merge: v2273 
values: i2275 i2280 
=== Succesors ===
=== Usages ===
v2278 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2273 values: i2275 i2280  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2273 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2274 v2279 
=== Succesors ===
next: v2278 
=== Usages ===
i2276 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2274 v2279 #next: v2278  <|@  <|@
tid ?515 <|@
d <@d|@=== Debug Properties ===
bci: 102
code: ResolvedJavaMethodBytecode<PredicatedProxyNodeIterator.forward()>
duringCall: false
localsSize: 1
locksSize: 0
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:45) [bci: 99]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
rethrowException: false
sourceFile: PredicatedProxyNodeIterator.java
sourceLine: 47
stackSize: 0
=== Inputs ===
outerFrameState: ?519 
values: - 
=== Succesors ===
=== Usages ===
v2278 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?519 values: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v2278 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?515 
actionAndReason: i2276 
speculation: a2233 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2273 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?515 actionAndReason: i2276 speculation: a2233  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v77|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v77|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:47) [bci: 102]
locals: - 
org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
locals: v24|QWORD[.] - 
org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
locals: - 
java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
locals: - v1|QWORD[.] v24|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:102, 1, 1, 22] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590574286451994106
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v511 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:47) [bci: 102]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2838 
=== Usages ===
=== Predecessor ===
v512 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2838  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2838 <|@
result v78|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: NodeIterator.current
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:45) [bci: 5]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
nullCheck: false
stamp: n Lorg/graalvm/compiler/graph/Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2879 
=== Succesors ===
next: v1790 
=== Usages ===
a1360 v1576 
=== Predecessor ===
v511 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2879 #next: v1790  <|@  <|@
f <@~|@floating>@ <|@
tid v1576 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:46) [bci: 13]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
=== Inputs ===
value: a2838 
=== Succesors ===
=== Usages ===
v1790 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2838  <|@  <|@
f <@*|@fixed>@ <|@
tid v1790 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:46) [bci: 13]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1576 
=== Succesors ===
trueSuccessor: v1789 
falseSuccessor: v1786 
=== Usages ===
=== Predecessor ===
a2838 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1576 #trueSuccessor: v1789 #falseSuccessor: v1786  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v78|DWORD[.] = MOV [v24|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v78|DWORD[.], y: v78|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1789 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:46) [bci: 13]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v12 
=== Succesors ===
next: v1787 
=== Usages ===
=== Predecessor ===
v1790 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v12 #next: v1787  <|@  <|@
tid ?505 <|@
d <@d|@=== Debug Properties ===
bci: 94
code: ResolvedJavaMethodBytecode<PredicatedProxyNodeIterator.forward()>
duringCall: false
localsSize: 1
locksSize: 0
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 89]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
rethrowException: false
sourceFile: PredicatedProxyNodeIterator.java
sourceLine: 44
stackSize: 1
=== Inputs ===
outerFrameState: ?519 
values: a38 i504 
=== Succesors ===
=== Usages ===
v1787 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?519 values: a38 i504  <|@  <|@
f <@*|@fixed>@ <|@
tid v1787 <|@
d <@d|@=== Debug Properties ===
action: InvalidateRecompile
debugId: 1361
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:46) [bci: 13]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
reason: Unresolved
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?505 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1789 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?505  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -348604 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 94]
stack: v76|DWORD 
locals: v24|QWORD[.] 
org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
locals: v24|QWORD[.] - 
org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
locals: - 
java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
locals: - v1|QWORD[.] v24|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:94, 1, 1, 22] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590574286451994106
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1786 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:46) [bci: 13]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1362 
=== Usages ===
=== Predecessor ===
v1790 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1362  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1362 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: NodeIterator.current
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:49) [bci: 26]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2879 
value: a1572 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2839 
=== Usages ===
=== Predecessor ===
v1786 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2879 value: a1572 stateAfter: - lastLocationAccess: - #next: v2839  <|@  <|@
f <@~|@floating>@ <|@
tid v2982 <|@
result [v1|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v2839 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2839 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2982 
=== Succesors ===
next: v1057 
=== Usages ===
v2712 
=== Predecessor ===
v1362 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2982 #next: v1057  <|@  <|@
f <@~|@floating>@ <|@
tid v2712 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2839 
y: v2711 
=== Succesors ===
=== Usages ===
v1057 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2839 y: v2711  <|@  <|@
f <@~|@floating>@ <|@
tid a1360 <|@
result v79|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:45) [bci: 5]
at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
op: Uncompress
stamp: a Lorg/graalvm/compiler/graph/Node;
=== Inputs ===
value: a2838 
=== Succesors ===
=== Usages ===
a955 a954 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2838  <|@  <|@
f <@*|@fixed>@ <|@
tid v1057 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$90/1190971543; target_method=accept target_method_class=Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$90/1190971543; position=at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
trueSuccessorProbability: 0.5456716749520927
=== Inputs ===
condition: v2712 
=== Succesors ===
trueSuccessor: v1055 
falseSuccessor: v1056 
=== Usages ===
=== Predecessor ===
v2839 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2712 #trueSuccessor: v1055 #falseSuccessor: v1056  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD[.] + 12], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.] = UNCOMPRESSPOINTER (input: v78|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP [v1|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$90/1190971543;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5456716749520927 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B86" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586610513763259408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1055 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$90/1190971543; target_method=accept target_method_class=Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$90/1190971543; position=at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1058 
=== Usages ===
=== Predecessor ===
v1057 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1058  <|@  <|@
f <@*|@fixed>@ <|@
tid v1058 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v946 
=== Predecessor ===
v1055 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v79|QWORD[.]] destination: B77 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B173" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4585530859885987812
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1056 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1059 
=== Usages ===
=== Predecessor ===
v1057 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1059  <|@  <|@
f <@*|@fixed>@ <|@
tid v1059 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v949 
=== Predecessor ===
v1056 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v79|QWORD[.]] destination: B78 -> B173 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B80" "B184" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598932903126947845
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1795 
=== Usages ===
=== Predecessor ===
v72 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1795  <|@  <|@
f <@~|@floating>@ <|@
tid v2710 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2814 
y: v2705 
=== Succesors ===
=== Usages ===
v1795 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2814 y: v2705  <|@  <|@
f <@*|@fixed>@ <|@
tid v1795 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeUsageIterator; target_method=hasNext target_method_class=Lorg/graalvm/compiler/graph/NodeUsageIterator; position=at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2710 
=== Succesors ===
trueSuccessor: v1791 
falseSuccessor: v1794 
=== Usages ===
=== Predecessor ===
v71 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2710 #trueSuccessor: v1791 #falseSuccessor: v1794  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v25|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeUsageIterator;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B184 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B81" "B84" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598932903126947845
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1791 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeUsageIterator; target_method=hasNext target_method_class=Lorg/graalvm/compiler/graph/NodeUsageIterator; position=at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2840 
=== Usages ===
=== Predecessor ===
v1795 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2840  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2840 <|@
result v80|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: NodeUsageIterator.current
nodeSourcePosition: at org.graalvm.compiler.graph.NodeUsageIterator.hasNext(NodeUsageIterator.java:56) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
nullCheck: false
stamp: n Lorg/graalvm/compiler/graph/Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2881 
=== Succesors ===
next: v23 
=== Usages ===
v1577 
=== Predecessor ===
v1791 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2881 #next: v23  <|@  <|@
f <@~|@floating>@ <|@
tid v1577 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeUsageIterator.hasNext(NodeUsageIterator.java:56) [bci: 4]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
=== Inputs ===
value: a2840 
=== Succesors ===
=== Usages ===
v23 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2840  <|@  <|@
f <@*|@fixed>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Iterable.forEach(Iterable.java:74) [bci: 18]
stamp: void
trueSuccessorProbability: 0.610225267647409
=== Inputs ===
condition: v1577 
=== Succesors ===
trueSuccessor: v899 
falseSuccessor: v22 
=== Usages ===
=== Predecessor ===
a2840 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1577 #trueSuccessor: v899 #falseSuccessor: v22  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v80|DWORD[.] = MOV [v24|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v80|DWORD[.], y: v80|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.610225267647409 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B82" 
    xhandlers
    flags 
    probability 4595589156199348280
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v899 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Iterable.forEach(Iterable.java:77) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v901 
=== Usages ===
=== Predecessor ===
v23 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v901  <|@  <|@
f <@*|@fixed>@ <|@
tid v901 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v900 
=== Predecessor ===
v899 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" "B41" "B38" "B23" "B35" 
    successors "B83" 
    xhandlers
    flags 
    probability 4608068898668341784
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v900 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v901 v902 v1145 v1193 v1678 
=== Succesors ===
next: v20 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v901 v902 v1145 v1193 v1678 #next: v20  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors 
    xhandlers
    flags 
    probability 4608068898668341784
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Iterable.forEach(Iterable.java:77) [bci: 38]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v12 
=== Succesors ===
next: v31 
=== Usages ===
=== Predecessor ===
v900 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v12 #next: v31  <|@  <|@
f <@*|@fixed>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Iterable.forEach(Iterable.java:77) [bci: 38]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B85" "B172" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592867281681706917
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Iterable.forEach(Iterable.java:74) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: a25 
=== Usages ===
=== Predecessor ===
v23 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a25  <|@  <|@
tid v1367 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Interface
nodeSourcePosition: at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
returnStamp: a Ljava/lang/Object;
signature: [Ljdk.vm.ci.meta.JavaType;@3547753
stamp: void
targetMethod: HotSpotMethod<Iterator.next()>
=== Inputs ===
arguments: a38 
=== Succesors ===
=== Usages ===
a25 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a38  <|@  <|@
tid ?2214 <|@
d <@d|@=== Debug Properties ===
bci: 22
code: ResolvedJavaMethodBytecode<Iterable.forEach(Consumer)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Iterable.java
sourceLine: 74
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a2 a38 - 
=== Succesors ===
=== Usages ===
a25 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 a38 -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a25 <|@
result v81|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 22
nodeSourcePosition: at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
polymorphic: false
stamp: a Ljava/lang/Object;
targetMethod: Direct#Iterator.next
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1367 
stateDuring: ?2214 
=== Succesors ===
next: v2841 
=== Usages ===
a955 a954 
=== Predecessor ===
v22 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1367 stateDuring: ?2214 #next: v2841  <|@  <|@
f <@~|@floating>@ <|@
tid v2983 <|@
result [v1|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v2841 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2841 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2983 
=== Succesors ===
next: v95 
=== Usages ===
v2800 
=== Predecessor ===
a25 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2983 #next: v95  <|@  <|@
f <@~|@floating>@ <|@
tid v2800 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2841 
y: v2711 
=== Succesors ===
=== Usages ===
v95 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2841 y: v2711  <|@  <|@
f <@*|@fixed>@ <|@
tid v95 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$90/1190971543; target_method=accept target_method_class=Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$90/1190971543; position=at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
trueSuccessorProbability: 0.5456716749520927
=== Inputs ===
condition: v2800 
=== Succesors ===
trueSuccessor: v89 
falseSuccessor: v94 
=== Usages ===
=== Predecessor ===
v2841 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2800 #trueSuccessor: v89 #falseSuccessor: v94  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
locals: - v1|QWORD[.] v24|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Iterator.next()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:22] <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP [v1|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$90/1190971543;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5456716749520927 condition: = trueDestination: B84 -> B85 falseDestination: B84 -> B172 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B86" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589112958858568504
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$90/1190971543; target_method=accept target_method_class=Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$90/1190971543; position=at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v947 
=== Usages ===
=== Predecessor ===
v95 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v947  <|@  <|@
f <@*|@fixed>@ <|@
tid v947 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v946 
=== Predecessor ===
v89 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v81|QWORD[.]] destination: B85 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" "B77" 
    successors "B87" "B88" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592365335938284452
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a954 <|@
result v82|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
valueDescription: a -
=== Inputs ===
merge: v946 
values: a25 a1360 
=== Succesors ===
=== Usages ===
?306 ?354 v2938 v337 v2893 ?413 ?416 v2892 ?983 v2888 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v946 values: a25 a1360  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v946 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v947 v1058 
=== Succesors ===
next: v2057 
=== Usages ===
a954 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v947 v1058 #next: v2057  <|@  <|@
f <@~|@floating>@ <|@
tid v337 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
value: a954 
=== Succesors ===
=== Usages ===
v1805 v2057 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a954  <|@  <|@
f <@*|@fixed>@ <|@
tid v2057 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 15]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 5]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v337 
=== Succesors ===
trueSuccessor: v2056 
falseSuccessor: v2055 
=== Usages ===
=== Predecessor ===
v946 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v337 #trueSuccessor: v2056 #falseSuccessor: v2055  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v82|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v82|QWORD[.], y: v82|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B86 -> B87 falseDestination: B86 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577314354001149058
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2056 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 18]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 5]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2364 
=== Usages ===
=== Predecessor ===
v2057 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2364  <|@  <|@
f <@*|@fixed>@ <|@
tid v2364 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 5]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2362 
=== Predecessor ===
v2056 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B87 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B89" "B170" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591595244410772500
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2055 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:141) [bci: 28]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 5]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2842 
=== Usages ===
=== Predecessor ===
v2057 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2842  <|@  <|@
f <@~|@floating>@ <|@
tid v2938 <|@
result [v82|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a954 
index: - 
=== Succesors ===
=== Usages ===
v2842 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a954 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2842 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 5]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2938 
=== Succesors ===
next: v2770 
=== Usages ===
v2716 
=== Predecessor ===
v2055 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2938 #next: v2770  <|@  <|@
f <@~|@floating>@ <|@
tid v2715 <|@
result meta{HotSpotType<Lorg/graalvm/compiler/nodes/FrameState;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 5]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
rawvalue: meta{HotSpotType<Lorg/graalvm/compiler/nodes/FrameState;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lorg/graalvm/compiler/nodes/FrameState;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2716 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2716 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 5]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2842 
y: v2715 
=== Succesors ===
=== Usages ===
v2770 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2842 y: v2715  <|@  <|@
f <@*|@fixed>@ <|@
tid v2770 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 5]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2716 
=== Succesors ===
trueSuccessor: v2769 
falseSuccessor: v1799 
=== Usages ===
=== Predecessor ===
v2842 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2716 #trueSuccessor: v2769 #falseSuccessor: v1799  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v82|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/nodes/FrameState;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B88 -> B89 falseDestination: B88 -> B170 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591595244410772500
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2769 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 5]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2373 
=== Usages ===
=== Predecessor ===
v2770 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2373  <|@  <|@
f <@*|@fixed>@ <|@
tid v2373 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 5]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2362 
=== Predecessor ===
v2769 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B87" "B89" 
    successors "B91" "B92" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592365335938284452
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2362 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 5]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2364 v2373 
=== Succesors ===
next: v1805 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2364 v2373 #next: v1805  <|@  <|@
f <@*|@fixed>@ <|@
tid v1805 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v337 
=== Succesors ===
trueSuccessor: v1804 
falseSuccessor: v1801 
=== Usages ===
=== Predecessor ===
v2362 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v337 #trueSuccessor: v1804 #falseSuccessor: v1801  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v82|QWORD[.], y: v82|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B90 -> B91 falseDestination: B90 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B171" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1804 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v12 
=== Succesors ===
next: v2247 
=== Usages ===
=== Predecessor ===
v1805 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v12 #next: v2247  <|@  <|@
f <@~|@floating>@ <|@
tid i2248 <|@
result int[-351755|0xfffffffffffaa1f5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -351755
stableDimension: 0
stamp: i32 [-351755] ⇊00000000fffaa1f5 ⇈00000000fffaa1f5
stampKind: i32
value: int[-351755|0xfffffffffffaa1f5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2244 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2247 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2241 
=== Predecessor ===
v1804 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-351755|0xfffffffffffaa1f5]] destination: B91 -> B171 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B93" "B94" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592365335938284452
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1801 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2843 
=== Usages ===
=== Predecessor ===
v1805 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2843  <|@  <|@
f <@~|@floating>@ <|@
tid v2887 <|@
result [v1|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a2843 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2843 <|@
result v83|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: 1190971543.arg$1
nodeSourcePosition: at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
nullCheck: false
stamp: n# Lorg/graalvm/compiler/graph/NodeBitMap;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2887 
=== Succesors ===
next: v1810 
=== Usages ===
?538 v1578 v2099 v2137 v2889 ?727 ?591 
=== Predecessor ===
v1801 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2887 #next: v1810  <|@  <|@
f <@~|@floating>@ <|@
tid v1578 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.virtual.EscapeObjectState.applyToVirtual(EscapeObjectState.java:58) [bci: 2]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:656) [bci: 43]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
value: a2843 
=== Succesors ===
=== Usages ===
v1810 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2843  <|@  <|@
f <@*|@fixed>@ <|@
tid v1810 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:653) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1578 
=== Succesors ===
trueSuccessor: v1809 
falseSuccessor: v1806 
=== Usages ===
=== Predecessor ===
a2843 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1578 #trueSuccessor: v1809 #falseSuccessor: v1806  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v83|DWORD[.] = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v83|DWORD[.], y: v83|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B92 -> B93 falseDestination: B92 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B171" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1809 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:653) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v12 
=== Succesors ===
next: v2249 
=== Usages ===
=== Predecessor ===
v1810 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v12 #next: v2249  <|@  <|@
f <@~|@floating>@ <|@
tid i2250 <|@
result int[-352011|0xfffffffffffaa0f5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -352011
stableDimension: 0
stamp: i32 [-352011] ⇊00000000fffaa0f5 ⇈00000000fffaa0f5
stampKind: i32
value: int[-352011|0xfffffffffffaa0f5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2244 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2249 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2241 
=== Predecessor ===
v1809 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-352011|0xfffffffffffaa0f5]] destination: B93 -> B171 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B95" "B96" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592365335938284452
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1806 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:653) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2844 
=== Usages ===
=== Predecessor ===
v1810 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2844  <|@  <|@
f <@~|@floating>@ <|@
tid v2889 <|@
result [v83|DWORD[.] * 8 + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2843 
=== Succesors ===
=== Usages ===
a2844 a2869 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2843  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2844 <|@
result v84|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: NodeBitMap.bits
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 30]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:653) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
nullCheck: false
stamp: n# [J
=== Inputs ===
stateBefore: - 
guard: - 
address: v2889 
=== Succesors ===
next: v1815 
=== Usages ===
a1381 v1382 v2890 
=== Predecessor ===
v1806 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2889 #next: v1815  <|@  <|@
f <@~|@floating>@ <|@
tid v1382 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 38]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:653) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
value: a2844 
=== Succesors ===
=== Usages ===
v1815 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2844  <|@  <|@
f <@*|@fixed>@ <|@
tid v1815 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 38]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:653) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1382 
=== Succesors ===
trueSuccessor: v1814 
falseSuccessor: v1811 
=== Usages ===
=== Predecessor ===
a2844 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1382 #trueSuccessor: v1814 #falseSuccessor: v1811  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v84|DWORD[.] = MOV [v83|DWORD[.] * 8 + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v84|DWORD[.], y: v84|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B94 -> B95 falseDestination: B94 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B171" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1814 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 38]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:653) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v12 
=== Succesors ===
next: v2251 
=== Usages ===
=== Predecessor ===
v1815 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v12 #next: v2251  <|@  <|@
f <@~|@floating>@ <|@
tid i2252 <|@
result int[-354059|0xfffffffffffa98f5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -354059
stableDimension: 0
stamp: i32 [-354059] ⇊00000000fffa98f5 ⇈00000000fffa98f5
stampKind: i32
value: int[-354059|0xfffffffffffa98f5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2244 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2251 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2241 
=== Predecessor ===
v1814 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-354059|0xfffffffffffa98f5]] destination: B95 -> B171 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" "B169" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592365335938284452
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1811 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 38]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:653) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2845 
=== Usages ===
=== Predecessor ===
v1815 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2845  <|@  <|@
f <@~|@floating>@ <|@
tid v2890 <|@
result [v84|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2844 
=== Succesors ===
=== Usages ===
i2845 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2844  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2845 <|@
result v85|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 38]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:653) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v2890 
=== Succesors ===
next: i2846 
=== Usages ===
v1475 v1397 v1452 
=== Predecessor ===
v1811 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2890 #next: i2846  <|@  <|@
f <@~|@floating>@ <|@
tid v2888 <|@
result [v82|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a954 
index: - 
=== Succesors ===
=== Usages ===
i2846 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a954 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2846 <|@
result v86|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Node.id
nodeSourcePosition: at org.graalvm.compiler.graph.Node.id(Node.java:284) [bci: 1]
at org.graalvm.compiler.graph.NodeIdAccessor.getNodeId(NodeIdAccessor.java:61) [bci: 22]
at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:95) [bci: 25]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:653) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2888 
=== Succesors ===
next: v1820 
=== Usages ===
?538 j535 i532 
=== Predecessor ===
i2845 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2888 #next: v1820  <|@  <|@
f <@~|@floating>@ <|@
tid i531 <|@
result int[6|0x6] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 34]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:653) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
rawvalue: 6
stableDimension: 0
stamp: i32 [6] ⇊0000000000000006 ⇈0000000000000006
stampKind: i32
value: int[6|0x6]
=== Inputs ===
=== Succesors ===
=== Usages ===
i532 i558 i722 i747 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i532 <|@
result v87|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 36]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:653) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: i32 [-33554432 - 33554431]
=== Inputs ===
x: i2846 
y: i531 
=== Succesors ===
=== Usages ===
v1397 v2891 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i2846 y: i531  <|@  <|@
f <@~|@floating>@ <|@
tid v1397 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 43]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:653) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i532 
y: i2845 
=== Succesors ===
=== Usages ===
v1820 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i532 y: i2845  <|@  <|@
f <@*|@fixed>@ <|@
tid v1820 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 43]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:653) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1397 
=== Succesors ===
trueSuccessor: v1816 
falseSuccessor: v1819 
=== Usages ===
=== Predecessor ===
i2846 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1397 #trueSuccessor: v1816 #falseSuccessor: v1819  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = MOV [v84|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = MOV [v82|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = SAR v86|DWORD y: 6 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v85|DWORD, y: v87|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B96 -> B97 falseDestination: B96 -> B169 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B98" "B101" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592365335938284452
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1816 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 43]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:653) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2847 
=== Usages ===
j2847 v1404 
=== Predecessor ===
v1820 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2847  <|@  <|@
f <@~|@floating>@ <|@
tid a1381 <|@
result v88|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 30]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:653) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
op: Uncompress
stamp: a# [J
=== Inputs ===
value: a2844 
=== Succesors ===
=== Usages ===
v2900 v2891 v2902 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2844  <|@  <|@
f <@~|@floating>@ <|@
tid v2891 <|@
result [v88|QWORD[.] + v87|DWORD * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: a1381 
index: i532 
=== Succesors ===
=== Usages ===
v1404 j2847 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1381 index: i532  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2847 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: long
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 38]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:653) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: v1816 
address: v2891 
=== Succesors ===
next: v1404 
=== Usages ===
j536 
=== Predecessor ===
v1816 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1816 address: v2891 #next: v1404  <|@  <|@
f <@~|@floating>@ <|@
tid j534 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 39]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:653) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
j535 j560 j724 j749 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j535 <|@
result v89|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 41]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:653) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: i64
=== Inputs ===
x: j534 
y: i2846 
=== Succesors ===
=== Usages ===
j536 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j534 y: i2846  <|@  <|@
f <@~|@floating>@ <|@
tid j536 <|@
result v91|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 42]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:653) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: i64
=== Inputs ===
x: j535 
y: j2847 
=== Succesors ===
=== Usages ===
v1404 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: j535 y: j2847  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1404 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: long
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 43]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:653) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1816 
address: v2891 
value: j536 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a2848 
=== Usages ===
=== Predecessor ===
j2847 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1816 address: v2891 value: j536 stateAfter: - lastLocationAccess: - #next: a2848  <|@  <|@
f <@~|@floating>@ <|@
tid v2893 <|@
result [v82|QWORD[.] + 68] <|@
d <@d|@=== Debug Properties ===
displacement: 68
scale: Times1
stamp: void*
=== Inputs ===
base: a954 
index: - 
=== Succesors ===
=== Usages ===
a2848 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a954 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2848 <|@
result v92|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FrameState.outerFrameState
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.outerFrameState(FrameState.java:234) [bci: 1]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:659) [bci: 50]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
nullCheck: false
stamp: n# Lorg/graalvm/compiler/nodes/FrameState;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2893 
=== Succesors ===
next: a2849 
=== Usages ===
v1586 ?649 v2901 v2903 v2904 ?663 ?2222 ?694 ?697 
=== Predecessor ===
v1404 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2893 #next: a2849  <|@  <|@
f <@~|@floating>@ <|@
tid v2892 <|@
result [v82|QWORD[.] + 80] <|@
d <@d|@=== Debug Properties ===
displacement: 80
scale: Times1
stamp: void*
=== Inputs ===
base: a954 
index: - 
=== Succesors ===
=== Usages ===
a2849 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a954 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2849 <|@
result v93|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FrameState.virtualObjectMappings
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:654) [bci: 8]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
nullCheck: false
stamp: n# Lorg/graalvm/compiler/graph/NodeInputList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2892 
=== Succesors ===
next: v347 
=== Usages ===
?626 v1581 v2894 v2895 v2896 
=== Predecessor ===
a2848 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2892 #next: v347  <|@  <|@
f <@~|@floating>@ <|@
tid v1581 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:654) [bci: 11]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
value: a2849 
=== Succesors ===
=== Usages ===
v347 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2849  <|@  <|@
f <@~|@floating>@ <|@
tid v1586 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:659) [bci: 53]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
value: a2848 
=== Succesors ===
=== Usages ===
v385 v992 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2848  <|@  <|@
tid ?142 <|@
d <@d|@=== Debug Properties ===
bci: 30
code: ResolvedJavaMethodBytecode<Iterable.forEach(Consumer)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Iterable.java
sourceLine: 75
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a2 a38 - 
=== Succesors ===
=== Usages ===
?331 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 a38 -  <|@  <|@
tid ?331 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<1190971543.accept(Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
stackSize: 0
=== Inputs ===
outerFrameState: ?142 
values: - - 
=== Succesors ===
=== Usages ===
?392 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?142 values: - -  <|@  <|@
tid ?392 <|@
d <@d|@=== Debug Properties ===
bci: 7
code: ResolvedJavaMethodBytecode<LoopFragment.lambda$computeNodes$1(NodeBitMap, FrameState)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: LoopFragment.java
sourceLine: 210
stackSize: 0
=== Inputs ===
outerFrameState: ?331 
values: - - 
=== Succesors ===
=== Usages ===
?416 ?687 ?354 ?983 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?331 values: - -  <|@  <|@
tid a590 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@237a9c3d
hasIdentity: true
objectId: 2
stamp: a!# Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$92/1492729447;
type: HotSpotType<Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$92/1492729447;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?413 ?416 ?591 ?354 ?694 ?663 ?649 ?2222 ?697 ?983 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?416 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<FrameState.applyToVirtual(VirtualState$VirtualClosure)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: FrameState.java
sourceLine: 653
stackSize: 0
=== Inputs ===
outerFrameState: ?392 
values: a954 a590 - - 
=== Succesors ===
=== Usages ===
?413 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?392 values: a954 a590 - -  <|@  <|@
tid ?413 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<1492729447.apply(VirtualState)>
duringCall: true
localsSize: 2
locksSize: 0
nodeSourcePosition: at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:653) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
rethrowException: false
stackSize: 0
=== Inputs ===
outerFrameState: ?416 
values: a590 a954 
=== Succesors ===
=== Usages ===
?540 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?416 values: a590 a954  <|@  <|@
tid ?540 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<LoopFragment.lambda$null$0(NodeBitMap, VirtualState)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: LoopFragment.java
sourceLine: 210
stackSize: 0
=== Inputs ===
outerFrameState: ?413 
values: - - 
=== Succesors ===
=== Usages ===
?538 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?413 values: - -  <|@  <|@
tid ?591 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a590 
values: a2843 
=== Succesors ===
=== Usages ===
?538 ?354 ?983 ?663 ?2222 ?727 ?649 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a590 values: a2843  <|@  <|@
tid ?538 <|@
d <@d|@=== Debug Properties ===
bci: 44
code: ResolvedJavaMethodBytecode<NodeBitMap.mark(Node)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 43]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:653) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
rethrowException: false
sourceFile: NodeBitMap.java
sourceLine: 97
stackSize: 0
=== Inputs ===
outerFrameState: ?540 
values: a2843 - i2846 
virtualObjectMappings: ?591 
=== Succesors ===
=== Usages ===
v1685 v2287 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?540 values: a2843 - i2846 virtualObjectMappings: ?591  <|@  <|@
f <@~|@floating>@ <|@
tid v2071 <|@
result v94|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 37]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
rawvalue: meta{HotSpotType<Lorg/graalvm/compiler/nodes/virtual/EscapeObjectState;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Lorg/graalvm/compiler/nodes/virtual/EscapeObjectState;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2079 v2119 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v347 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:654) [bci: 11]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1581 
=== Succesors ===
trueSuccessor: v345 
falseSuccessor: v346 
=== Usages ===
=== Predecessor ===
a2849 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1581 #trueSuccessor: v345 #falseSuccessor: v346  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v88|QWORD[.] = UNCOMPRESSPOINTER (input: v84|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v90|QWORD = MOVE input: long[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v86|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v89|QWORD = SHL (x: v90|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v91|QWORD = OR (x: v89|QWORD, ~y: [v88|QWORD[.] + v87|DWORD * 8 + 16]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v88|QWORD[.] + v87|DWORD * 8 + 16], y: v91|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v92|DWORD[.] = MOV [v82|QWORD[.] + 68] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v93|DWORD[.] = MOV [v82|QWORD[.] + 80] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v94|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/compiler/nodes/virtual/EscapeObjectState;, resolved>} <|@ <|@
      nr   -1  <|@ instruction TEST (x: v93|DWORD[.], y: v93|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B97 -> B98 falseDestination: B97 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B99" "B100" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587861736310913956
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v345 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:659) [bci: 49]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v992 
=== Usages ===
=== Predecessor ===
v347 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v992  <|@  <|@
f <@*|@fixed>@ <|@
tid v992 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:659) [bci: 53]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1586 
=== Succesors ===
trueSuccessor: v990 
falseSuccessor: v991 
=== Usages ===
=== Predecessor ===
v345 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1586 #trueSuccessor: v990 #falseSuccessor: v991  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v92|DWORD[.], y: v92|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B98 -> B99 falseDestination: B98 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4583358136683543460
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v990 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:662) [bci: 64]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1685 
=== Usages ===
=== Predecessor ===
v992 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1685  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1685 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?538 
=== Succesors ===
next: v993 
=== Usages ===
=== Predecessor ===
v990 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?538 #next: v993  <|@  <|@
f <@*|@fixed>@ <|@
tid v993 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 5
stamp: void
=== Inputs ===
loopBegin: v12 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1685 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v12  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:97) [bci: 44]
locals: v83|DWORD[.] - v86|DWORD 
org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
locals: - - 
org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
locals: vobject:1492729447:0{arg$1=v83|DWORD[.]} v82|QWORD[.] 
org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:653) [bci: 2]
locals: v82|QWORD[.] vobject:1492729447:0{arg$1=v83|DWORD[.]} - - 
org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
locals: - - 
org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
locals: - - 
java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
locals: - v1|QWORD[.] v24|QWORD[.] - 
vobject:1492729447:0{arg$1=v83|DWORD[.]} Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$92/1492729447; v83|DWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:44, 2, 5, 2, 7, 8, 30] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B99 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B128" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583358136683543460
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v991 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 56]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v984 
=== Usages ===
=== Predecessor ===
v992 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v984  <|@  <|@
f <@*|@fixed>@ <|@
tid v984 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v981 
=== Predecessor ===
v991 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B100 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B102" "B103" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587861736310913956
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v346 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 14]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2850 
=== Usages ===
=== Predecessor ===
v347 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2850  <|@  <|@
f <@~|@floating>@ <|@
tid v2896 <|@
result [v93|DWORD[.] * 8 + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2849 
=== Succesors ===
=== Usages ===
a2850 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2849  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2850 <|@
result v95|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: NodeList.nodes
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList$NodeListIterator.next(NodeList.java:462) [bci: 32]
at org.graalvm.compiler.graph.NodeList$NodeListIterator.next(NodeList.java:441) [bci: 1]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 32]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
nullCheck: false
stamp: n [Lorg/graalvm/compiler/graph/Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2896 
=== Succesors ===
next: v1825 
=== Usages ===
a1419 v1420 v2897 
=== Predecessor ===
v346 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2896 #next: v1825  <|@  <|@
f <@~|@floating>@ <|@
tid v1420 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList$NodeListIterator.next(NodeList.java:462) [bci: 46]
at org.graalvm.compiler.graph.NodeList$NodeListIterator.next(NodeList.java:441) [bci: 1]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 32]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
value: a2850 
=== Succesors ===
=== Usages ===
v1825 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2850  <|@  <|@
f <@*|@fixed>@ <|@
tid v1825 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList$NodeListIterator.next(NodeList.java:462) [bci: 46]
at org.graalvm.compiler.graph.NodeList$NodeListIterator.next(NodeList.java:441) [bci: 1]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 32]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1420 
=== Succesors ===
trueSuccessor: v1824 
falseSuccessor: v1821 
=== Usages ===
=== Predecessor ===
a2850 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1420 #trueSuccessor: v1824 #falseSuccessor: v1821  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v95|DWORD[.] = MOV [v93|DWORD[.] * 8 + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v95|DWORD[.], y: v95|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B168" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1824 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList$NodeListIterator.next(NodeList.java:462) [bci: 46]
at org.graalvm.compiler.graph.NodeList$NodeListIterator.next(NodeList.java:441) [bci: 1]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 32]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v12 
=== Succesors ===
next: v2288 
=== Usages ===
=== Predecessor ===
v1825 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v12 #next: v2288  <|@  <|@
f <@~|@floating>@ <|@
tid a2290 <|@
result v96|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@1280662813
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@1280662813]
=== Inputs ===
=== Succesors ===
=== Usages ===
a2286 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2289 <|@
result int[-363787|0xfffffffffffa72f5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -363787
stableDimension: 0
stamp: i32 [-363787] ⇊00000000fffa72f5 ⇈00000000fffa72f5
stampKind: i32
value: int[-363787|0xfffffffffffa72f5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2285 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2288 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2281 
=== Predecessor ===
v1824 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v96|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1280662813] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-363787|0xfffffffffffa72f5], v96|QWORD[.]] destination: B102 -> B168 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" "B105" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587861736310913956
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1821 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList$NodeListIterator.next(NodeList.java:462) [bci: 46]
at org.graalvm.compiler.graph.NodeList$NodeListIterator.next(NodeList.java:441) [bci: 1]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 32]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2851 
=== Usages ===
=== Predecessor ===
v1825 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2851  <|@  <|@
f <@~|@floating>@ <|@
tid v2895 <|@
result [v93|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2849 
=== Succesors ===
=== Usages ===
i2851 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2849  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2851 <|@
result v97|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: NodeList.size
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.access$400(NodeList.java:34) [bci: 1]
at org.graalvm.compiler.graph.NodeList$NodeListIterator.hasNext(NodeList.java:455) [bci: 36]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 23]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2895 
=== Succesors ===
next: v2740 
=== Usages ===
v602 v1708 j1690 
=== Predecessor ===
v1821 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2895 #next: v2740  <|@  <|@
f <@~|@floating>@ <|@
tid v1708 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2851 
y: i126 
=== Succesors ===
=== Usages ===
v2740 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2851 y: i126  <|@  <|@
f <@*|@fixed>@ <|@
tid v2740 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList$NodeListIterator.next(NodeList.java:462) [bci: 46]
at org.graalvm.compiler.graph.NodeList$NodeListIterator.next(NodeList.java:441) [bci: 1]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 32]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1708 
=== Succesors ===
trueSuccessor: v2736 
falseSuccessor: v2739 
=== Usages ===
=== Predecessor ===
i2851 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1708 #trueSuccessor: v2736 #falseSuccessor: v2739  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v97|DWORD = MOV [v93|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v97|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B103 -> B104 falseDestination: B103 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B109" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583358136683543460
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2736 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList$NodeListIterator.next(NodeList.java:462) [bci: 46]
at org.graalvm.compiler.graph.NodeList$NodeListIterator.next(NodeList.java:441) [bci: 1]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 32]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2734 
=== Usages ===
=== Predecessor ===
v2740 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2734  <|@  <|@
f <@*|@fixed>@ <|@
tid v2734 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList$NodeListIterator.next(NodeList.java:462) [bci: 46]
at org.graalvm.compiler.graph.NodeList$NodeListIterator.next(NodeList.java:441) [bci: 1]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 32]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2733 
=== Predecessor ===
v2736 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B104 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B106" "B165" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583358136683543460
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2739 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList$NodeListIterator.next(NodeList.java:462) [bci: 46]
at org.graalvm.compiler.graph.NodeList$NodeListIterator.next(NodeList.java:441) [bci: 1]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 32]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2852 
=== Usages ===
=== Predecessor ===
v2740 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2852  <|@  <|@
f <@~|@floating>@ <|@
tid v2897 <|@
result [v95|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2850 
=== Succesors ===
=== Usages ===
i2852 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2850  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2852 <|@
result v98|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList$NodeListIterator.next(NodeList.java:462) [bci: 46]
at org.graalvm.compiler.graph.NodeList$NodeListIterator.next(NodeList.java:441) [bci: 1]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 32]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v2897 
=== Succesors ===
next: v2748 
=== Usages ===
v1705 j1688 
=== Predecessor ===
v2739 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2897 #next: v2748  <|@  <|@
f <@~|@floating>@ <|@
tid j1690 <|@
result v99|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i2851 
=== Succesors ===
=== Usages ===
j1692 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2851  <|@  <|@
f <@~|@floating>@ <|@
tid j1691 <|@
result long[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1692 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1692 <|@
result v100|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j1690 
y: j1691 
=== Succesors ===
=== Usages ===
v1694 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1690 y: j1691  <|@  <|@
f <@~|@floating>@ <|@
tid j1688 <|@
result v101|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i2852 
=== Succesors ===
=== Usages ===
v1694 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i2852  <|@  <|@
f <@~|@floating>@ <|@
tid v1694 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1692 
y: j1688 
=== Succesors ===
=== Usages ===
v2748 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1692 y: j1688  <|@  <|@
f <@*|@fixed>@ <|@
tid v2748 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList$NodeListIterator.next(NodeList.java:462) [bci: 46]
at org.graalvm.compiler.graph.NodeList$NodeListIterator.next(NodeList.java:441) [bci: 1]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 32]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1694 
=== Succesors ===
trueSuccessor: v2747 
falseSuccessor: v2744 
=== Usages ===
=== Predecessor ===
i2852 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1694 #trueSuccessor: v2747 #falseSuccessor: v2744  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v98|DWORD = MOV [v95|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v99|QWORD = MOVSXD v97|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v100|QWORD = DEC v99|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v101|QWORD = MOV v98|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v101|QWORD, y: v100|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B105 -> B106 falseDestination: B105 -> B165 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B107" "B108" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583358136683543460
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2747 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList$NodeListIterator.next(NodeList.java:462) [bci: 46]
at org.graalvm.compiler.graph.NodeList$NodeListIterator.next(NodeList.java:441) [bci: 1]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 32]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2746 
=== Usages ===
=== Predecessor ===
v2748 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2746  <|@  <|@
f <@~|@floating>@ <|@
tid v1705 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2852 
y: i17 
=== Succesors ===
=== Usages ===
v2746 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2852 y: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v2746 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList$NodeListIterator.next(NodeList.java:462) [bci: 46]
at org.graalvm.compiler.graph.NodeList$NodeListIterator.next(NodeList.java:441) [bci: 1]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 32]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1705 
=== Succesors ===
trueSuccessor: v2745 
falseSuccessor: v2737 
=== Usages ===
=== Predecessor ===
v2747 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1705 #trueSuccessor: v2745 #falseSuccessor: v2737  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v98|DWORD, y: v98|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B106 -> B107 falseDestination: B106 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B166" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2745 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList$NodeListIterator.next(NodeList.java:462) [bci: 46]
at org.graalvm.compiler.graph.NodeList$NodeListIterator.next(NodeList.java:441) [bci: 1]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 32]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2743 
=== Usages ===
=== Predecessor ===
v2746 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2743  <|@  <|@
f <@*|@fixed>@ <|@
tid v2743 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList$NodeListIterator.next(NodeList.java:462) [bci: 46]
at org.graalvm.compiler.graph.NodeList$NodeListIterator.next(NodeList.java:441) [bci: 1]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 32]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2741 
=== Predecessor ===
v2745 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B107 -> B166 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B109" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583358136683543460
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2737 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList$NodeListIterator.next(NodeList.java:462) [bci: 46]
at org.graalvm.compiler.graph.NodeList$NodeListIterator.next(NodeList.java:441) [bci: 1]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 32]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2735 
=== Usages ===
=== Predecessor ===
v2746 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2735  <|@  <|@
f <@*|@fixed>@ <|@
tid v2735 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList$NodeListIterator.next(NodeList.java:462) [bci: 46]
at org.graalvm.compiler.graph.NodeList$NodeListIterator.next(NodeList.java:441) [bci: 1]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 32]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2733 
=== Predecessor ===
v2737 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B108 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B104" "B108" 
    successors "B110" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587861736310913956
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2733 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList$NodeListIterator.next(NodeList.java:462) [bci: 46]
at org.graalvm.compiler.graph.NodeList$NodeListIterator.next(NodeList.java:441) [bci: 1]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 32]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2734 v2735 
=== Succesors ===
next: i2853 
=== Usages ===
v1700 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2734 v2735 #next: i2853  <|@  <|@
f <@~|@floating>@ <|@
tid v2894 <|@
result [v93|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2849 
=== Succesors ===
=== Usages ===
i2853 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2849  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2853 <|@
result v102|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.access$200(NodeList.java:34) [bci: 1]
at org.graalvm.compiler.graph.NodeList$NodeListIterator.<init>(NodeList.java:448) [bci: 11]
at org.graalvm.compiler.graph.NodeList$NodeListIterator.<init>(NodeList.java:441) [bci: 3]
at org.graalvm.compiler.graph.NodeList.iterator(NodeList.java:282) [bci: 7]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 18]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2894 
=== Succesors ===
next: v352 
=== Usages ===
?626 
=== Predecessor ===
v2733 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2894 #next: v352  <|@  <|@
tid a592 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@4fb0693c
hasIdentity: true
objectId: -1
stamp: a!# Lorg/graalvm/compiler/graph/NodeList$NodeListIterator;
type: HotSpotType<Lorg/graalvm/compiler/graph/NodeList$NodeListIterator;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?354 ?626 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v352 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 22]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v353 
=== Predecessor ===
i2853 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v102|DWORD = MOV [v93|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B109 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" "B119" 
    successors "B111" "B125" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 2
    probability 4592365335938284452
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i625 <|@
result v103|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v353 
values: i17 i613 
=== Succesors ===
=== Usages ===
?626 v602 i613 v2898 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v353 values: i17 i613  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v353 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 2.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 22]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v352 
=== Succesors ===
next: v365 
=== Usages ===
v362 v379 i625 v1847 v1835 v1841 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v352 #next: v365  <|@  <|@
tid ?626 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a592 
values: i2853 i625 a2849 
=== Succesors ===
=== Usages ===
?354 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a592 values: i2853 i625 a2849  <|@  <|@
tid ?354 <|@
d <@d|@=== Debug Properties ===
bci: 22
code: ResolvedJavaMethodBytecode<FrameState.applyToVirtual(VirtualState$VirtualClosure)>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: FrameState.java
sourceLine: 655
stackSize: 0
=== Inputs ===
outerFrameState: ?392 
values: a954 a590 a592 - 
virtualObjectMappings: ?591 ?626 
=== Succesors ===
=== Usages ===
v1683 v2260 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?392 values: a954 a590 a592 - virtualObjectMappings: ?591 ?626  <|@  <|@
f <@~|@floating>@ <|@
tid v602 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList$NodeListIterator.hasNext(NodeList.java:455) [bci: 39]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 23]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i625 
y: i2851 
=== Succesors ===
=== Usages ===
v365 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i625 y: i2851  <|@  <|@
f <@*|@fixed>@ <|@
tid v365 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 28]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v602 
=== Succesors ===
trueSuccessor: v364 
falseSuccessor: v362 
=== Usages ===
=== Predecessor ===
v353 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v602 #trueSuccessor: v364 #falseSuccessor: v362  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v103|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v97|DWORD, y: v103|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B110 -> B111 falseDestination: B110 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B112" "B113" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4587861736310913956
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v364 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 31]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2854 
=== Usages ===
v1700 
=== Predecessor ===
v365 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2854  <|@  <|@
f <@~|@floating>@ <|@
tid v1700 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v2733 v364 
=== Succesors ===
=== Usages ===
a2854 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v2733 v364  <|@  <|@
f <@~|@floating>@ <|@
tid a1419 <|@
result v104|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList$NodeListIterator.next(NodeList.java:462) [bci: 32]
at org.graalvm.compiler.graph.NodeList$NodeListIterator.next(NodeList.java:441) [bci: 1]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 32]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
op: Uncompress
stamp: a [Lorg/graalvm/compiler/graph/Node;
=== Inputs ===
value: a2850 
=== Succesors ===
=== Usages ===
v2898 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2850  <|@  <|@
f <@~|@floating>@ <|@
tid v2898 <|@
result [v104|QWORD[.] + v103|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1419 
index: i625 
=== Succesors ===
=== Usages ===
a2854 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1419 index: i625  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2854 <|@
result v105|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList$NodeListIterator.next(NodeList.java:462) [bci: 46]
at org.graalvm.compiler.graph.NodeList$NodeListIterator.next(NodeList.java:441) [bci: 1]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 32]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
nullCheck: false
stamp: n Lorg/graalvm/compiler/graph/Node;
=== Inputs ===
stateBefore: - 
guard: v1700 
address: v2898 
=== Succesors ===
next: v2075 
=== Usages ===
v2939 v1436 v2899 
=== Predecessor ===
v364 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1700 address: v2898 #next: v2075  <|@  <|@
f <@~|@floating>@ <|@
tid v1436 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 37]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
value: a2854 
=== Succesors ===
=== Usages ===
v2075 v1843 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2854  <|@  <|@
f <@*|@fixed>@ <|@
tid v2075 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:156) [bci: 15]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 37]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v1436 
=== Succesors ===
trueSuccessor: v2074 
falseSuccessor: v2073 
=== Usages ===
=== Predecessor ===
a2854 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1436 #trueSuccessor: v2074 #falseSuccessor: v2073  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v104|QWORD[.] = UNCOMPRESSPOINTER (input: v95|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v105|DWORD[.] = MOV [v104|QWORD[.] + v103|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v105|DWORD[.], y: v105|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B111 -> B112 falseDestination: B111 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B115" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4572810754373778562
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2074 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:157) [bci: 18]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 37]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2380 
=== Usages ===
=== Predecessor ===
v2075 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2380  <|@  <|@
f <@*|@fixed>@ <|@
tid v2380 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 37]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2378 
=== Predecessor ===
v2074 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B112 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" "B122" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4587091644783402004
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2073 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:160) [bci: 29]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 37]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2855 
=== Usages ===
=== Predecessor ===
v2075 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2855  <|@  <|@
f <@~|@floating>@ <|@
tid v2939 <|@
result [v105|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2854 
=== Succesors ===
=== Usages ===
v2855 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2854  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2855 <|@
result v106|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:161) [bci: 40]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 37]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2939 
=== Succesors ===
next: v2856 
=== Usages ===
v2916 
=== Predecessor ===
v2073 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2939 #next: v2856  <|@  <|@
f <@~|@floating>@ <|@
tid v2916 <|@
result [v106|DWORD * 8 + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v2855 
=== Succesors ===
=== Usages ===
v2856 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v2855  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2856 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: PrimarySupers:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:162) [bci: 54]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 37]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
nullCheck: false
stamp: Klass*
=== Inputs ===
stateBefore: - 
guard: - 
address: v2916 
=== Succesors ===
next: v2778 
=== Usages ===
v2079 
=== Predecessor ===
v2855 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2916 #next: v2778  <|@  <|@
f <@~|@floating>@ <|@
tid v2079 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:162) [bci: 58]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 37]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2856 
y: v2071 
=== Succesors ===
=== Usages ===
v2778 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2856 y: v2071  <|@  <|@
f <@*|@fixed>@ <|@
tid v2778 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 37]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2079 
=== Succesors ===
trueSuccessor: v2777 
falseSuccessor: v1835 
=== Usages ===
=== Predecessor ===
v2856 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2079 #trueSuccessor: v2777 #falseSuccessor: v1835  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = MOV [v105|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v94|QWORD, y: [v106|DWORD * 8 + 64]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B113 -> B114 falseDestination: B113 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B115" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4587091644783402004
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2777 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 37]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2389 
=== Usages ===
=== Predecessor ===
v2778 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2389  <|@  <|@
f <@*|@fixed>@ <|@
tid v2389 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 37]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2378 
=== Predecessor ===
v2777 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B114 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B112" "B114" 
    successors "B116" "B118" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4587861736310913956
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2378 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 37]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2380 v2389 
=== Succesors ===
next: v1843 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2380 v2389 #next: v1843  <|@  <|@
f <@*|@fixed>@ <|@
tid v1843 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:656) [bci: 43]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1436 
=== Succesors ===
trueSuccessor: v1841 
falseSuccessor: v1838 
=== Usages ===
=== Predecessor ===
v2378 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1436 #trueSuccessor: v1841 #falseSuccessor: v1838  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v105|DWORD[.], y: v105|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B115 -> B116 falseDestination: B115 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B117" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1841 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:656) [bci: 43]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v353 
=== Succesors ===
next: v1842 
=== Usages ===
=== Predecessor ===
v1843 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v353 #next: v1842  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B116 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B124" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1842 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:656) [bci: 43]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v12 
=== Succesors ===
next: v2261 
=== Usages ===
=== Predecessor ===
v1841 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v12 #next: v2261  <|@  <|@
f <@~|@floating>@ <|@
tid i2262 <|@
result int[-368395|0xfffffffffffa60f5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -368395
stableDimension: 0
stamp: i32 [-368395] ⇊00000000fffa60f5 ⇈00000000fffa60f5
stampKind: i32
value: int[-368395|0xfffffffffffa60f5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2258 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2261 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2255 
=== Predecessor ===
v1842 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-368395|0xfffffffffffa60f5]] destination: B117 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B119" "B120" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4587861736310913956
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1838 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:656) [bci: 43]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2857 
=== Usages ===
=== Predecessor ===
v1843 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2857  <|@  <|@
f <@~|@floating>@ <|@
tid v2899 <|@
result [v105|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2854 
=== Succesors ===
=== Usages ===
i2857 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2854  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2857 <|@
result v107|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Node.id
nodeSourcePosition: at org.graalvm.compiler.graph.Node.id(Node.java:284) [bci: 1]
at org.graalvm.compiler.graph.NodeIdAccessor.getNodeId(NodeIdAccessor.java:61) [bci: 22]
at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:95) [bci: 25]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.virtual.EscapeObjectState.applyToVirtual(EscapeObjectState.java:58) [bci: 2]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:656) [bci: 43]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2899 
=== Succesors ===
next: v1849 
=== Usages ===
i558 j560 
=== Predecessor ===
v1838 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2899 #next: v1849  <|@  <|@
f <@~|@floating>@ <|@
tid i558 <|@
result v108|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 36]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.virtual.EscapeObjectState.applyToVirtual(EscapeObjectState.java:58) [bci: 2]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:656) [bci: 43]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: i32 [-33554432 - 33554431]
=== Inputs ===
x: i2857 
y: i531 
=== Succesors ===
=== Usages ===
v1452 v2900 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i2857 y: i531  <|@  <|@
f <@~|@floating>@ <|@
tid v1452 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 43]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.virtual.EscapeObjectState.applyToVirtual(EscapeObjectState.java:58) [bci: 2]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:656) [bci: 43]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i558 
y: i2845 
=== Succesors ===
=== Usages ===
v1849 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i558 y: i2845  <|@  <|@
f <@*|@fixed>@ <|@
tid v1849 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 43]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.virtual.EscapeObjectState.applyToVirtual(EscapeObjectState.java:58) [bci: 2]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:656) [bci: 43]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1452 
=== Succesors ===
trueSuccessor: v1844 
falseSuccessor: v1847 
=== Usages ===
=== Predecessor ===
i2857 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1452 #trueSuccessor: v1844 #falseSuccessor: v1847  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v107|DWORD = MOV [v105|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v108|DWORD = SAR v107|DWORD y: 6 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v85|DWORD, y: v108|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B118 -> B119 falseDestination: B118 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B110" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 2
    probability 4587861736310913956
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1844 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 43]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.virtual.EscapeObjectState.applyToVirtual(EscapeObjectState.java:58) [bci: 2]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:656) [bci: 43]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2858 
=== Usages ===
j2858 v1459 
=== Predecessor ===
v1849 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2858  <|@  <|@
f <@~|@floating>@ <|@
tid v2900 <|@
result [v88|QWORD[.] + v108|DWORD * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: a1381 
index: i558 
=== Succesors ===
=== Usages ===
v1459 j2858 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1381 index: i558  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2858 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: long
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 38]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.virtual.EscapeObjectState.applyToVirtual(EscapeObjectState.java:58) [bci: 2]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:656) [bci: 43]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: v1844 
address: v2900 
=== Succesors ===
next: v1459 
=== Usages ===
j561 
=== Predecessor ===
v1844 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1844 address: v2900 #next: v1459  <|@  <|@
f <@~|@floating>@ <|@
tid j560 <|@
result v109|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 41]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.virtual.EscapeObjectState.applyToVirtual(EscapeObjectState.java:58) [bci: 2]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:656) [bci: 43]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: i64
=== Inputs ===
x: j534 
y: i2857 
=== Succesors ===
=== Usages ===
j561 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j534 y: i2857  <|@  <|@
f <@~|@floating>@ <|@
tid j561 <|@
result v111|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 42]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.virtual.EscapeObjectState.applyToVirtual(EscapeObjectState.java:58) [bci: 2]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:656) [bci: 43]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: i64
=== Inputs ===
x: j560 
y: j2858 
=== Succesors ===
=== Usages ===
v1459 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: j560 y: j2858  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1459 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: long
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 43]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.virtual.EscapeObjectState.applyToVirtual(EscapeObjectState.java:58) [bci: 2]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:656) [bci: 43]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1844 
address: v2900 
value: j561 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v379 
=== Usages ===
=== Predecessor ===
j2858 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1844 address: v2900 value: j561 stateAfter: - lastLocationAccess: - #next: v379  <|@  <|@
f <@~|@floating>@ <|@
tid i613 <|@
result v112|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList$NodeListIterator.next(NodeList.java:462) [bci: 42]
at org.graalvm.compiler.graph.NodeList$NodeListIterator.next(NodeList.java:441) [bci: 1]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 32]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: i32
=== Inputs ===
x: i625 
y: i126 
=== Succesors ===
=== Usages ===
i625 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i625 y: i126  <|@  <|@
f <@*|@fixed>@ <|@
tid v379 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 22]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
loopBegin: v353 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1459 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v353  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v110|QWORD = MOVE input: long[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v107|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v109|QWORD = SHL (x: v110|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v111|QWORD = OR (x: v109|QWORD, ~y: [v88|QWORD[.] + v108|DWORD * 8 + 16]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v88|QWORD[.] + v108|DWORD * 8 + 16], y: v111|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = INC v103|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v112|DWORD] destination: B119 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B121" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1847 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 43]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.virtual.EscapeObjectState.applyToVirtual(EscapeObjectState.java:58) [bci: 2]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:656) [bci: 43]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v353 
=== Succesors ===
next: v1848 
=== Usages ===
=== Predecessor ===
v1849 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v353 #next: v1848  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B120 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B124" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1848 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 43]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.virtual.EscapeObjectState.applyToVirtual(EscapeObjectState.java:58) [bci: 2]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:656) [bci: 43]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v12 
=== Succesors ===
next: v2263 
=== Usages ===
=== Predecessor ===
v1847 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v12 #next: v2263  <|@  <|@
f <@~|@floating>@ <|@
tid i2264 <|@
result int[-371995|0xfffffffffffa52e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -371995
stableDimension: 0
stamp: i32 [-371995] ⇊00000000fffa52e5 ⇈00000000fffa52e5
stampKind: i32
value: int[-371995|0xfffffffffffa52e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2258 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2263 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2255 
=== Predecessor ===
v1848 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-371995|0xfffffffffffa52e5]] destination: B121 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1835 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 37]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v353 
=== Succesors ===
next: v1836 
=== Usages ===
=== Predecessor ===
v2778 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v353 #next: v1836  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B122 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B124" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1836 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 37]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v12 
=== Succesors ===
next: v2256 
=== Usages ===
=== Predecessor ===
v1835 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v12 #next: v2256  <|@  <|@
f <@~|@floating>@ <|@
tid i2257 <|@
result int[-368163|0xfffffffffffa61dd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -368163
stableDimension: 0
stamp: i32 [-368163] ⇊00000000fffa61dd ⇈00000000fffa61dd
stampKind: i32
value: int[-368163|0xfffffffffffa61dd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2258 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2256 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2255 
=== Predecessor ===
v1836 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-368163|0xfffffffffffa61dd]] destination: B123 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B123" "B117" "B121" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i2258 <|@
result v113|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-371995 - -368163] ⇊00000000fffa40c5 ⇈00000000fffa73fd
valueDescription: i32
=== Inputs ===
merge: v2255 
values: i2257 i2262 i2264 
=== Succesors ===
=== Usages ===
v2260 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2255 values: i2257 i2262 i2264  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2255 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2256 v2261 v2263 
=== Succesors ===
next: v2260 
=== Usages ===
i2258 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2256 v2261 v2263 #next: v2260  <|@  <|@
f <@*|@fixed>@ <|@
tid v2260 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?354 
actionAndReason: i2258 
speculation: a2233 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2255 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?354 actionAndReason: i2258 speculation: a2233  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v113|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v113|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 22]
locals: v82|QWORD[.] vobject:1492729447:0{arg$1=v83|DWORD[.]} vobject:NodeList$NodeListIterator:1{expectedModCount=v102|DWORD,index=v103|DWORD,list=v93|DWORD[.]} - 
org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
locals: - - 
org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
locals: - - 
java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
locals: - v1|QWORD[.] v24|QWORD[.] - 
vobject:1492729447:0{arg$1=v83|DWORD[.]} Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$92/1492729447; v83|DWORD[.] 
vobject:NodeList$NodeListIterator:1{expectedModCount=v102|DWORD,index=v103|DWORD,list=v93|DWORD[.]} Lorg/graalvm/compiler/graph/NodeList$NodeListIterator; v102|DWORD v103|DWORD v93|DWORD[.] 
>@ <|@ instruction DEOPT info [bci:22, 7, 8, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B126" "B127" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587861736310913956
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v362 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:659) [bci: 49]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v353 
=== Succesors ===
next: v385 
=== Usages ===
=== Predecessor ===
v365 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v353 #next: v385  <|@  <|@
f <@*|@fixed>@ <|@
tid v385 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:659) [bci: 53]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1586 
=== Succesors ===
trueSuccessor: v383 
falseSuccessor: v384 
=== Usages ===
=== Predecessor ===
v362 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1586 #trueSuccessor: v383 #falseSuccessor: v384  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v92|DWORD[.], y: v92|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B125 -> B126 falseDestination: B125 -> B127 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4583358136683543460
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v383 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:662) [bci: 64]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1683 
=== Usages ===
=== Predecessor ===
v385 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1683  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1683 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?354 
=== Succesors ===
next: v160 
=== Usages ===
=== Predecessor ===
v383 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?354 #next: v160  <|@  <|@
f <@*|@fixed>@ <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 2
nodeSourcePosition: at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
loopBegin: v12 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1683 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v12  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 22]
locals: v82|QWORD[.] vobject:1492729447:0{arg$1=v83|DWORD[.]} vobject:NodeList$NodeListIterator:1{expectedModCount=v102|DWORD,index=v103|DWORD,list=v93|DWORD[.]} - 
org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
locals: - - 
org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
locals: - - 
java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
locals: - v1|QWORD[.] v24|QWORD[.] - 
vobject:1492729447:0{arg$1=v83|DWORD[.]} Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$92/1492729447; v83|DWORD[.] 
vobject:NodeList$NodeListIterator:1{expectedModCount=v102|DWORD,index=v103|DWORD,list=v93|DWORD[.]} Lorg/graalvm/compiler/graph/NodeList$NodeListIterator; v102|DWORD v103|DWORD v93|DWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:22, 7, 8, 30] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B126 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B128" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583358136683543460
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 56]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v982 
=== Usages ===
=== Predecessor ===
v385 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v982  <|@  <|@
f <@*|@fixed>@ <|@
tid v982 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v981 
=== Predecessor ===
v384 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B127 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B127" "B100" 
    successors "B129" "B164" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587861736310913956
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v981 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v982 v984 
=== Succesors ===
next: i2859 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v982 v984 #next: i2859  <|@  <|@
tid ?983 <|@
d <@d|@=== Debug Properties ===
bci: 49
code: ResolvedJavaMethodBytecode<FrameState.applyToVirtual(VirtualState$VirtualClosure)>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: FrameState.java
sourceLine: 659
stackSize: 0
=== Inputs ===
outerFrameState: ?392 
values: a954 a590 - - 
virtualObjectMappings: ?591 
=== Succesors ===
=== Usages ===
v2324 i2859 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?392 values: a954 a590 - - virtualObjectMappings: ?591  <|@  <|@
f <@~|@floating>@ <|@
tid v2901 <|@
result [v92|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2848 
=== Succesors ===
=== Usages ===
i2859 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2848  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2859 <|@
result v114|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Node.id
nodeSourcePosition: at org.graalvm.compiler.graph.Node.id(Node.java:284) [bci: 1]
at org.graalvm.compiler.graph.NodeIdAccessor.getNodeId(NodeIdAccessor.java:61) [bci: 22]
at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:95) [bci: 25]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:653) [bci: 2]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?983 
guard: - 
address: v2901 
=== Succesors ===
next: v1859 
=== Usages ===
?727 j724 i722 
=== Predecessor ===
v981 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?983 guard: - address: v2901 #next: v1859  <|@  <|@
f <@~|@floating>@ <|@
tid i722 <|@
result v115|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 36]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:653) [bci: 2]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: i32 [-33554432 - 33554431]
=== Inputs ===
x: i2859 
y: i531 
=== Succesors ===
=== Usages ===
v1475 v2902 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i2859 y: i531  <|@  <|@
f <@~|@floating>@ <|@
tid v1475 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 43]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:653) [bci: 2]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i722 
y: i2845 
=== Succesors ===
=== Usages ===
v1859 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i722 y: i2845  <|@  <|@
f <@*|@fixed>@ <|@
tid v1859 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 43]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:653) [bci: 2]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1475 
=== Succesors ===
trueSuccessor: v1855 
falseSuccessor: v1858 
=== Usages ===
=== Predecessor ===
i2859 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1475 #trueSuccessor: v1855 #falseSuccessor: v1858  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:659) [bci: 49]
locals: v82|QWORD[.] vobject:1492729447:0{arg$1=v83|DWORD[.]} - - 
org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
locals: - - 
org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
locals: - - 
java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
locals: - v1|QWORD[.] v24|QWORD[.] - 
vobject:1492729447:0{arg$1=v83|DWORD[.]} Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$92/1492729447; v83|DWORD[.] 
>@ <|@ instruction v114|DWORD = MOV [v92|DWORD[.] * 8 + 12] size: DWORD state [bci:49, 7, 8, 30] <|@ <|@
      nr   -1  <|@ instruction v115|DWORD = SAR v114|DWORD y: 6 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v85|DWORD, y: v115|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B128 -> B129 falseDestination: B128 -> B164 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B128" 
    successors "B130" "B136" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587861736310913956
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1855 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 43]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:653) [bci: 2]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2860 
=== Usages ===
j2860 v1482 
=== Predecessor ===
v1859 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2860  <|@  <|@
f <@~|@floating>@ <|@
tid v2902 <|@
result [v88|QWORD[.] + v115|DWORD * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: a1381 
index: i722 
=== Succesors ===
=== Usages ===
v1482 j2860 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1381 index: i722  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2860 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: long
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 38]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:653) [bci: 2]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: v1855 
address: v2902 
=== Succesors ===
next: v1482 
=== Usages ===
j725 
=== Predecessor ===
v1855 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1855 address: v2902 #next: v1482  <|@  <|@
f <@~|@floating>@ <|@
tid j724 <|@
result v116|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 41]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:653) [bci: 2]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: i64
=== Inputs ===
x: j534 
y: i2859 
=== Succesors ===
=== Usages ===
j725 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j534 y: i2859  <|@  <|@
f <@~|@floating>@ <|@
tid j725 <|@
result v118|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 42]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:653) [bci: 2]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: i64
=== Inputs ===
x: j724 
y: j2860 
=== Succesors ===
=== Usages ===
v1482 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: j724 y: j2860  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1482 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: long
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 43]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:653) [bci: 2]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1855 
address: v2902 
value: j725 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a2861 
=== Usages ===
=== Predecessor ===
j2860 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1855 address: v2902 value: j725 stateAfter: - lastLocationAccess: - #next: a2861  <|@  <|@
f <@~|@floating>@ <|@
tid v2903 <|@
result [v92|DWORD[.] * 8 + 80] <|@
d <@d|@=== Debug Properties ===
displacement: 80
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2848 
=== Succesors ===
=== Usages ===
a2861 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2848  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2861 <|@
result v119|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FrameState.virtualObjectMappings
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:654) [bci: 8]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
nullCheck: false
stamp: n# Lorg/graalvm/compiler/graph/NodeInputList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2903 
=== Succesors ===
next: v642 
=== Usages ===
v2644 v1589 v2905 
=== Predecessor ===
v1482 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2903 #next: v642  <|@  <|@
f <@~|@floating>@ <|@
tid v1589 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:654) [bci: 11]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
value: a2861 
=== Succesors ===
=== Usages ===
v642 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2861  <|@  <|@
tid ?687 <|@
d <@d|@=== Debug Properties ===
bci: 61
code: ResolvedJavaMethodBytecode<FrameState.applyToVirtual(VirtualState$VirtualClosure)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: FrameState.java
sourceLine: 660
stackSize: 0
=== Inputs ===
outerFrameState: ?392 
values: - - - - 
=== Succesors ===
=== Usages ===
?697 ?2224 ?649 ?2223 ?663 ?2222 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?392 values: - - - -  <|@  <|@
tid ?697 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<FrameState.applyToVirtual(VirtualState$VirtualClosure)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: FrameState.java
sourceLine: 653
stackSize: 0
=== Inputs ===
outerFrameState: ?687 
values: a2848 a590 - - 
=== Succesors ===
=== Usages ===
?694 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?687 values: a2848 a590 - -  <|@  <|@
tid ?694 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<1492729447.apply(VirtualState)>
duringCall: true
localsSize: 2
locksSize: 0
nodeSourcePosition: at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:653) [bci: 2]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
rethrowException: false
stackSize: 0
=== Inputs ===
outerFrameState: ?697 
values: a590 a2848 
=== Succesors ===
=== Usages ===
?729 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?697 values: a590 a2848  <|@  <|@
tid ?729 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<LoopFragment.lambda$null$0(NodeBitMap, VirtualState)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: LoopFragment.java
sourceLine: 210
stackSize: 0
=== Inputs ===
outerFrameState: ?694 
values: - - 
=== Succesors ===
=== Usages ===
?727 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?694 values: - -  <|@  <|@
tid ?727 <|@
d <@d|@=== Debug Properties ===
bci: 44
code: ResolvedJavaMethodBytecode<NodeBitMap.mark(Node)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 43]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:653) [bci: 2]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
rethrowException: false
sourceFile: NodeBitMap.java
sourceLine: 97
stackSize: 0
=== Inputs ===
outerFrameState: ?729 
values: a2843 - i2859 
virtualObjectMappings: ?591 
=== Succesors ===
=== Usages ===
v1686 a2611 a2572 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?729 values: a2843 - i2859 virtualObjectMappings: ?591  <|@  <|@
f <@~|@floating>@ <|@
tid v2904 <|@
result [v92|DWORD[.] * 8 + 68] <|@
d <@d|@=== Debug Properties ===
displacement: 68
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2848 
=== Succesors ===
=== Usages ===
a2862 a2873 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2848  <|@  <|@
f <@~|@floating>@ <|@
tid v2720 <|@
result meta{HotSpotType<Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$92/1492729447;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$92/1492729447;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$92/1492729447;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2597 v2683 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2588 <|@
result v120|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$92/1492729447;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$92/1492729447;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j2675 j2809 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1284 <|@
result long[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 34]
at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
rawvalue: 16
stableDimension: 0
stamp: i64 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2728 j2717 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v642 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:654) [bci: 11]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1589 
=== Succesors ===
trueSuccessor: v640 
falseSuccessor: v641 
=== Usages ===
=== Predecessor ===
a2861 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1589 #trueSuccessor: v640 #falseSuccessor: v641  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v117|QWORD = MOVE input: long[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v114|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v116|QWORD = SHL (x: v117|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v118|QWORD = OR (x: v116|QWORD, ~y: [v88|QWORD[.] + v115|DWORD * 8 + 16]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v88|QWORD[.] + v115|DWORD * 8 + 16], y: v118|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v119|DWORD[.] = MOV [v92|DWORD[.] * 8 + 80] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v120|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$92/1492729447;, resolved>} <|@ <|@
      nr   -1  <|@ instruction TEST (x: v119|DWORD[.], y: v119|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B129 -> B130 falseDestination: B129 -> B136 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B131" "B132" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583358136683543460
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v640 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:659) [bci: 49]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2862 
=== Usages ===
=== Predecessor ===
v642 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2862  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2862 <|@
result v121|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FrameState.outerFrameState
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.outerFrameState(FrameState.java:234) [bci: 1]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:659) [bci: 50]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
nullCheck: false
stamp: n# Lorg/graalvm/compiler/nodes/FrameState;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2904 
=== Succesors ===
next: v1007 
=== Usages ===
a1488 v1489 
=== Predecessor ===
v640 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2904 #next: v1007  <|@  <|@
f <@~|@floating>@ <|@
tid v1489 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
value: a2862 
=== Succesors ===
=== Usages ===
v1007 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2862  <|@  <|@
f <@*|@fixed>@ <|@
tid v1007 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:659) [bci: 53]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1489 
=== Succesors ===
trueSuccessor: v1005 
falseSuccessor: v1006 
=== Usages ===
=== Predecessor ===
a2862 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1489 #trueSuccessor: v1005 #falseSuccessor: v1006  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v121|DWORD[.] = MOV [v92|DWORD[.] * 8 + 68] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v121|DWORD[.], y: v121|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B130 -> B131 falseDestination: B130 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B130" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4578854537056172964
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1005 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:662) [bci: 64]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1686 
=== Usages ===
=== Predecessor ===
v1007 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1686  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1686 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?727 
=== Succesors ===
next: v1008 
=== Usages ===
=== Predecessor ===
v1005 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?727 #next: v1008  <|@  <|@
f <@*|@fixed>@ <|@
tid v1008 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 6
stamp: void
=== Inputs ===
loopBegin: v12 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1686 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v12  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:97) [bci: 44]
locals: v83|DWORD[.] - v114|DWORD 
org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
locals: - - 
org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
locals: vobject:1492729447:0{arg$1=v83|DWORD[.]} v92|DWORD[.] 
org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:653) [bci: 2]
locals: v92|DWORD[.] vobject:1492729447:0{arg$1=v83|DWORD[.]} - - 
org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
locals: - - - - 
org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
locals: - - 
org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
locals: - - 
java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
locals: - v1|QWORD[.] v24|QWORD[.] - 
vobject:1492729447:0{arg$1=v83|DWORD[.]} Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$92/1492729447; v83|DWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:44, 2, 5, 2, 61, 7, 8, 30] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B131 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B130" 
    successors "B133" "B134" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4578854537056172964
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1006 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 56]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2561 
=== Usages ===
=== Predecessor ===
v1007 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2561  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2561 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j2576 
=== Usages ===
v2940 v2941 
=== Predecessor ===
v1006 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j2576  <|@  <|@
f <@~|@floating>@ <|@
tid v2940 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j2561 
index: - 
=== Succesors ===
=== Usages ===
j2576 v2578 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2561 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2576 <|@
result v122|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2940 
=== Succesors ===
next: j2577 
=== Usages ===
j2717 j2582 v2964 
=== Predecessor ===
j2561 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2940 #next: j2577  <|@  <|@
f <@~|@floating>@ <|@
tid v2941 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j2561 
index: - 
=== Succesors ===
=== Usages ===
j2577 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2561 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2577 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2941 
=== Succesors ===
next: v2569 
=== Usages ===
v2566 
=== Predecessor ===
j2576 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2941 #next: v2569  <|@  <|@
f <@~|@floating>@ <|@
tid j2717 <|@
result v123|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2576 
y: j1284 
=== Succesors ===
=== Usages ===
v2566 v2578 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2576 y: j1284  <|@  <|@
f <@~|@floating>@ <|@
tid v2566 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2577 
y: j2717 
=== Succesors ===
=== Usages ===
v2569 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j2577 y: j2717  <|@  <|@
f <@*|@fixed>@ <|@
tid v2569 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v2566 
=== Succesors ===
trueSuccessor: v2567 
falseSuccessor: v2568 
=== Usages ===
=== Predecessor ===
j2577 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2566 #trueSuccessor: v2567 #falseSuccessor: v2568  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v122|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v123|QWORD = LEA [v122|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v123|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B132 -> B133 falseDestination: B132 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B135" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4549060609792906964
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2567 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a2572 
=== Usages ===
=== Predecessor ===
v2569 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2572  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2572 <|@
result v124|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?727 
arguments: v2430 i17 i126 
=== Succesors ===
next: j2573 
=== Usages ===
j2573 
=== Predecessor ===
v2567 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?727 arguments: v2430 i17 i126 #next: j2573  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2573 <|@
result v124|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a2572 
=== Succesors ===
next: v2583 
=== Usages ===
j2582 
=== Predecessor ===
a2572 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a2572 #next: v2583  <|@  <|@
f <@*|@fixed>@ <|@
tid v2583 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2580 
=== Predecessor ===
j2573 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v3|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:97) [bci: 44]
locals: v83|DWORD[.] - v114|DWORD 
org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
locals: - - 
org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
locals: vobject:1492729447:0{arg$1=v83|DWORD[.]} v92|DWORD[.] 
org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:653) [bci: 2]
locals: v92|DWORD[.] vobject:1492729447:0{arg$1=v83|DWORD[.]} - - 
org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
locals: - - - - 
org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
locals: - - 
org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
locals: - - 
java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
locals: - v1|QWORD[.] v24|QWORD[.] - 
vobject:1492729447:0{arg$1=v83|DWORD[.]} Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$92/1492729447; v83|DWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:44, 2, 5, 2, 61, 7, 8, 30] <|@ <|@
      nr   -1  <|@ instruction v124|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v124|QWORD[.]] destination: B133 -> B135 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B135" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4578777527903421769
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2568 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2578 
=== Usages ===
=== Predecessor ===
v2569 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2578  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2578 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2940 
value: j2717 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2575 
=== Usages ===
=== Predecessor ===
v2568 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2940 value: j2717 stateAfter: - lastLocationAccess: - #next: v2575  <|@  <|@
f <@~|@floating>@ <|@
tid v2964 <|@
result [v122|QWORD + 208] <|@
d <@d|@=== Debug Properties ===
displacement: 208
scale: Times1
stamp: void*
=== Inputs ===
base: j2576 
index: - 
=== Succesors ===
=== Usages ===
v2575 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2576 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2575 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v2964 
=== Succesors ===
next: v2581 
=== Usages ===
=== Predecessor ===
v2578 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2964 #next: v2581  <|@  <|@
f <@*|@fixed>@ <|@
tid v2581 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2580 
=== Predecessor ===
v2575 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v123|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v122|QWORD + 208] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v122|QWORD] destination: B134 -> B135 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" "B133" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4578854537056172964
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2582 <|@
result v125|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2580 
values: j2576 j2573 
=== Succesors ===
=== Usages ===
v2943 v2917 a2094 v2942 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2580 values: j2576 j2573  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2580 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2581 v2583 
=== Succesors ===
next: a2094 
=== Usages ===
j2582 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2581 v2583 #next: a2094  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2094 <|@
result v126|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j2582 
=== Succesors ===
next: j2593 
=== Usages ===
a2100 
=== Predecessor ===
v2580 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j2582 #next: j2593  <|@  <|@
f <@~|@floating>@ <|@
tid j2809 <|@
result v120|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v2588 
=== Succesors ===
=== Usages ===
v2970 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v2588  <|@  <|@
f <@~|@floating>@ <|@
tid v2970 <|@
result [v120|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j2809 
index: - 
=== Succesors ===
=== Usages ===
j2593 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2809 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2593 <|@
result v127|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2970 
=== Succesors ===
next: v2594 
=== Usages ===
v2594 
=== Predecessor ===
a2094 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2970 #next: v2594  <|@  <|@
f <@~|@floating>@ <|@
tid v2942 <|@
result [v125|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2582 
index: - 
=== Succesors ===
=== Usages ===
v2594 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2582 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2594 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2942 
value: j2593 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2597 
=== Usages ===
=== Predecessor ===
j2593 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2942 value: j2593 stateAfter: - lastLocationAccess: - #next: v2597  <|@  <|@
f <@~|@floating>@ <|@
tid v2943 <|@
result [v125|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j2582 
index: - 
=== Succesors ===
=== Usages ===
v2597 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2582 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2597 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2943 
value: v2720 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2099 
=== Usages ===
=== Predecessor ===
v2594 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2943 value: v2720 stateAfter: - lastLocationAccess: - #next: v2099  <|@  <|@
f <@~|@floating>@ <|@
tid v2917 <|@
result [v125|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j2582 
index: - 
=== Succesors ===
=== Usages ===
v2099 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2582 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2099 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2917 
value: a2843 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a2100 
=== Usages ===
=== Predecessor ===
v2597 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2917 value: a2843 stateAfter: - lastLocationAccess: - #next: a2100  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2100 <|@
result v126|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a2094 
=== Succesors ===
next: v2101 
=== Usages ===
v1492 
=== Predecessor ===
v2099 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a2094 #next: v2101  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2101 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v1124 
=== Usages ===
=== Predecessor ===
a2100 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v1124  <|@  <|@
f <@~|@floating>@ <|@
tid a1488 <|@
result v128|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.outerFrameState(FrameState.java:234) [bci: 1]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:659) [bci: 50]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
op: Uncompress
stamp: a# Lorg/graalvm/compiler/nodes/FrameState;
=== Inputs ===
value: a2862 
=== Succesors ===
=== Usages ===
v1492 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2862  <|@  <|@
tid v1492 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@5af49ed2
stamp: void
targetMethod: HotSpotMethod<FrameState.applyToVirtual(VirtualState$VirtualClosure)>
=== Inputs ===
arguments: a1488 a2100 
=== Succesors ===
=== Usages ===
v1124 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1488 a2100  <|@  <|@
tid ?2223 <|@
d <@d|@=== Debug Properties ===
bci: 61
code: ResolvedJavaMethodBytecode<FrameState.applyToVirtual(VirtualState$VirtualClosure)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: FrameState.java
sourceLine: 660
stackSize: 0
=== Inputs ===
outerFrameState: ?687 
values: - - - - 
=== Succesors ===
=== Usages ===
v1124 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?687 values: - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1124 <|@
d <@d|@=== Debug Properties ===
bci: 61
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
polymorphic: false
stamp: void
targetMethod: Direct#FrameState.applyToVirtual
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1492 
stateDuring: ?2223 
=== Succesors ===
next: v1121 
=== Usages ===
=== Predecessor ===
v2101 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1492 stateDuring: ?2223 #next: v1121  <|@  <|@
f <@*|@fixed>@ <|@
tid v1121 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 7
stamp: void
=== Inputs ===
loopBegin: v12 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1124 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v12  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v125|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v126|QWORD[.] = MOVE v125|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v127|QWORD = MOV [v120|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v125|QWORD[*]], y: v127|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v125|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$92/1492729447;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v125|QWORD[*] + 12], y: v83|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v128|QWORD[.] = UNCOMPRESSPOINTER (input: v121|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v128|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v126|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
locals: - - - - 
org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
locals: - - - - 
org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
locals: - - 
org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
locals: - - 
java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
locals: - v1|QWORD[.] v24|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FrameState.applyToVirtual(VirtualState$VirtualClosure)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:61, 61, 7, 8, 30] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B135 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B137" "B138" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583358136683543460
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v641 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 14]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2600 
=== Usages ===
=== Predecessor ===
v642 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2600  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2600 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j2615 
=== Usages ===
v2944 v2945 
=== Predecessor ===
v641 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j2615  <|@  <|@
f <@~|@floating>@ <|@
tid v2944 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j2600 
index: - 
=== Succesors ===
=== Usages ===
j2615 v2617 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2600 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2615 <|@
result v129|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2944 
=== Succesors ===
next: j2616 
=== Usages ===
j2721 j2621 v2965 
=== Predecessor ===
j2600 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2944 #next: j2616  <|@  <|@
f <@~|@floating>@ <|@
tid v2945 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j2600 
index: - 
=== Succesors ===
=== Usages ===
j2616 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2600 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2616 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2945 
=== Succesors ===
next: v2608 
=== Usages ===
v2605 
=== Predecessor ===
j2615 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2945 #next: v2608  <|@  <|@
f <@~|@floating>@ <|@
tid j2721 <|@
result v130|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2615 
y: j2693 
=== Succesors ===
=== Usages ===
v2605 v2617 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2615 y: j2693  <|@  <|@
f <@~|@floating>@ <|@
tid v2605 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2616 
y: j2721 
=== Succesors ===
=== Usages ===
v2608 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j2616 y: j2721  <|@  <|@
f <@*|@fixed>@ <|@
tid v2608 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v2605 
=== Succesors ===
trueSuccessor: v2606 
falseSuccessor: v2607 
=== Usages ===
=== Predecessor ===
j2616 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2605 #trueSuccessor: v2606 #falseSuccessor: v2607  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v129|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v130|QWORD = LEA [v129|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v130|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B136 -> B137 falseDestination: B136 -> B138 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4553564209420277460
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2606 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a2611 
=== Usages ===
=== Predecessor ===
v2608 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2611  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2611 <|@
result v131|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?727 
arguments: v2430 i1429 i126 
=== Succesors ===
next: j2612 
=== Usages ===
j2612 
=== Predecessor ===
v2606 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?727 arguments: v2430 i1429 i126 #next: j2612  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2612 <|@
result v131|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a2611 
=== Succesors ===
next: v2622 
=== Usages ===
j2621 
=== Predecessor ===
a2611 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a2611 #next: v2622  <|@  <|@
f <@*|@fixed>@ <|@
tid v2622 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2619 
=== Predecessor ===
j2612 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v3|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:97) [bci: 44]
locals: v83|DWORD[.] - v114|DWORD 
org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
locals: - - 
org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
locals: vobject:1492729447:0{arg$1=v83|DWORD[.]} v92|DWORD[.] 
org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:653) [bci: 2]
locals: v92|DWORD[.] vobject:1492729447:0{arg$1=v83|DWORD[.]} - - 
org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
locals: - - - - 
org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
locals: - - 
org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
locals: - - 
java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
locals: - v1|QWORD[.] v24|QWORD[.] - 
vobject:1492729447:0{arg$1=v83|DWORD[.]} Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$92/1492729447; v83|DWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:44, 2, 5, 2, 61, 7, 8, 30] <|@ <|@
      nr   -1  <|@ instruction v131|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v131|QWORD[.]] destination: B137 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583281127530792265
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2607 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2617 
=== Usages ===
=== Predecessor ===
v2608 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2617  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2617 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2944 
value: j2721 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2614 
=== Usages ===
=== Predecessor ===
v2607 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2944 value: j2721 stateAfter: - lastLocationAccess: - #next: v2614  <|@  <|@
f <@~|@floating>@ <|@
tid v2965 <|@
result [v129|QWORD + 216] <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j2615 
index: - 
=== Succesors ===
=== Usages ===
v2614 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2615 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2614 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v2965 
=== Succesors ===
next: v2620 
=== Usages ===
=== Predecessor ===
v2617 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2965 #next: v2620  <|@  <|@
f <@*|@fixed>@ <|@
tid v2620 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2619 
=== Predecessor ===
v2614 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v130|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v129|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v129|QWORD] destination: B138 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B138" "B137" 
    successors "B140" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583358136683543460
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2621 <|@
result v132|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2619 
values: j2615 j2612 
=== Succesors ===
=== Usages ===
v2948 v2947 a2104 v2966 v2967 v2968 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2619 values: j2615 j2612  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2619 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2620 v2622 
=== Succesors ===
next: a2104 
=== Usages ===
j2621 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2620 v2622 #next: a2104  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2104 <|@
result v133|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j2621 
=== Succesors ===
next: j2632 
=== Usages ===
a2110 
=== Predecessor ===
v2619 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j2621 #next: j2632  <|@  <|@
f <@~|@floating>@ <|@
tid v2627 <|@
result v134|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeList$NodeListIterator;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeList$NodeListIterator;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j2628 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2628 <|@
result v134|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v2627 
=== Succesors ===
=== Usages ===
v2946 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v2627  <|@  <|@
f <@~|@floating>@ <|@
tid v2946 <|@
result [v134|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j2628 
index: - 
=== Succesors ===
=== Usages ===
j2632 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2628 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2632 <|@
result v135|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2946 
=== Succesors ===
next: v2633 
=== Usages ===
v2633 
=== Predecessor ===
a2104 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2946 #next: v2633  <|@  <|@
f <@~|@floating>@ <|@
tid v2947 <|@
result [v132|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2621 
index: - 
=== Succesors ===
=== Usages ===
v2633 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2621 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2633 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2947 
value: j2632 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2636 
=== Usages ===
=== Predecessor ===
j2632 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2947 value: j2632 stateAfter: - lastLocationAccess: - #next: v2636  <|@  <|@
f <@~|@floating>@ <|@
tid v2948 <|@
result [v132|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j2621 
index: - 
=== Succesors ===
=== Usages ===
v2636 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2621 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v2724 <|@
result meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeList$NodeListIterator;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeList$NodeListIterator;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeList$NodeListIterator;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2636 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2636 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2948 
value: v2724 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i2863 
=== Usages ===
=== Predecessor ===
v2633 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2948 value: v2724 stateAfter: - lastLocationAccess: - #next: i2863  <|@  <|@
f <@~|@floating>@ <|@
tid v2905 <|@
result [v119|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2861 
=== Succesors ===
=== Usages ===
i2863 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2861  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2863 <|@
result v136|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.access$200(NodeList.java:34) [bci: 1]
at org.graalvm.compiler.graph.NodeList$NodeListIterator.<init>(NodeList.java:448) [bci: 11]
at org.graalvm.compiler.graph.NodeList$NodeListIterator.<init>(NodeList.java:441) [bci: 3]
at org.graalvm.compiler.graph.NodeList.iterator(NodeList.java:282) [bci: 7]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 18]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2905 
=== Succesors ===
next: v2640 
=== Usages ===
v2640 
=== Predecessor ===
v2636 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2905 #next: v2640  <|@  <|@
f <@~|@floating>@ <|@
tid v2966 <|@
result [v132|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j2621 
index: - 
=== Succesors ===
=== Usages ===
v2640 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2621 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2640 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2966 
value: i2863 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2642 
=== Usages ===
=== Predecessor ===
i2863 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2966 value: i2863 stateAfter: - lastLocationAccess: - #next: v2642  <|@  <|@
f <@~|@floating>@ <|@
tid v2967 <|@
result [v132|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j2621 
index: - 
=== Succesors ===
=== Usages ===
v2642 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2621 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2642 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2967 
value: i17 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2644 
=== Usages ===
=== Predecessor ===
v2640 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2967 value: i17 stateAfter: - lastLocationAccess: - #next: v2644  <|@  <|@
f <@~|@floating>@ <|@
tid v2968 <|@
result [v132|QWORD[*] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j2621 
index: - 
=== Succesors ===
=== Usages ===
v2644 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2621 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2644 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2968 
value: a2861 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a2110 
=== Usages ===
=== Predecessor ===
v2642 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2968 value: a2861 stateAfter: - lastLocationAccess: - #next: a2110  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2110 <|@
result v133|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a2104 
=== Succesors ===
next: v2111 
=== Usages ===
v1505 ?1243 v2906 v2907 
=== Predecessor ===
v2644 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a2104 #next: v2111  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2111 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v647 
=== Usages ===
=== Predecessor ===
a2110 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v647  <|@  <|@
f <@~|@floating>@ <|@
tid v2906 <|@
result [v133|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a2110 
index: - 
=== Succesors ===
=== Usages ===
i2866 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2110 index: -  <|@  <|@
tid a765 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@4fb0693c
hasIdentity: true
objectId: 3
stamp: a!# Lorg/graalvm/compiler/graph/NodeList$NodeListIterator;
type: HotSpotType<Lorg/graalvm/compiler/graph/NodeList$NodeListIterator;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?2222 ?663 ?649 ?1243 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?1243 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a765 
materializedValue: a2110 
=== Succesors ===
=== Usages ===
?649 ?663 ?2222 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a765 materializedValue: a2110  <|@  <|@
tid ?649 <|@
d <@d|@=== Debug Properties ===
bci: 22
code: ResolvedJavaMethodBytecode<FrameState.applyToVirtual(VirtualState$VirtualClosure)>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: FrameState.java
sourceLine: 655
stackSize: 0
=== Inputs ===
outerFrameState: ?687 
values: a2848 a590 a765 - 
virtualObjectMappings: ?591 ?1243 
=== Succesors ===
=== Usages ===
v1684 a2659 i2865 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?687 values: a2848 a590 a765 - virtualObjectMappings: ?591 ?1243  <|@  <|@
f <@~|@floating>@ <|@
tid v2907 <|@
result [v133|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a2110 
index: - 
=== Succesors ===
=== Usages ===
a2864 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2110 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v647 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 22]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v648 
=== Predecessor ===
v2111 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v132|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v133|QWORD[.] = MOVE v132|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v134|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeList$NodeListIterator;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v135|QWORD = MOV [v134|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v132|QWORD[*]], y: v135|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v132|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeList$NodeListIterator;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v136|DWORD = MOV [v119|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v132|QWORD[*] + 12], y: v136|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v132|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v132|QWORD[*] + 20], y: v119|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B139 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B139" "B152" 
    successors "B141" "B158" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 2
    probability 4587861736310913956
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v648 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 2.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 22]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v647 
=== Succesors ===
next: a2864 
=== Usages ===
v657 v674 v1887 v1881 v1875 v1869 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v647 #next: a2864  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2864 <|@
result v137|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: NodeList$NodeListIterator.list
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList$NodeListIterator.hasNext(NodeList.java:455) [bci: 33]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 23]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
nullCheck: false
stamp: n Lorg/graalvm/compiler/graph/NodeList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2907 
=== Succesors ===
next: i2865 
=== Usages ===
v2908 
=== Predecessor ===
v648 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2907 #next: i2865  <|@  <|@
f <@~|@floating>@ <|@
tid v2908 <|@
result [v137|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2864 
=== Succesors ===
=== Usages ===
i2865 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2864  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2865 <|@
result v138|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: NodeList.size
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.access$400(NodeList.java:34) [bci: 1]
at org.graalvm.compiler.graph.NodeList$NodeListIterator.hasNext(NodeList.java:455) [bci: 36]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 23]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?649 
guard: - 
address: v2908 
=== Succesors ===
next: i2866 
=== Usages ===
v775 
=== Predecessor ===
a2864 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?649 guard: - address: v2908 #next: i2866  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2866 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: NodeList$NodeListIterator.index
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList$NodeListIterator.hasNext(NodeList.java:455) [bci: 29]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 23]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2906 
=== Succesors ===
next: v660 
=== Usages ===
v775 
=== Predecessor ===
i2865 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2906 #next: v660  <|@  <|@
f <@~|@floating>@ <|@
tid v775 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList$NodeListIterator.hasNext(NodeList.java:455) [bci: 39]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 23]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2866 
y: i2865 
=== Succesors ===
=== Usages ===
v660 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2866 y: i2865  <|@  <|@
f <@*|@fixed>@ <|@
tid v660 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 28]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v775 
=== Succesors ===
trueSuccessor: v659 
falseSuccessor: v657 
=== Usages ===
=== Predecessor ===
i2866 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v775 #trueSuccessor: v659 #falseSuccessor: v657  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v137|DWORD[.] = MOV [v133|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 22]
locals: v92|DWORD[.] vobject:1492729447:0{arg$1=v83|DWORD[.]} v133|QWORD[.] - 
org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
locals: - - - - 
org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
locals: - - 
org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
locals: - - 
java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
locals: - v1|QWORD[.] v24|QWORD[.] - 
vobject:1492729447:0{arg$1=v83|DWORD[.]} Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$92/1492729447; v83|DWORD[.] 
>@ <|@ instruction v138|DWORD = MOV [v137|DWORD[.] * 8 + 16] size: DWORD state [bci:22, 61, 7, 8, 30] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v138|DWORD, y: [v133|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B140 -> B141 falseDestination: B140 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B142" "B143" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4583358136683543460
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v659 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 31]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: a662 
=== Usages ===
=== Predecessor ===
v660 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a662  <|@  <|@
tid v1505 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 32]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
returnStamp: a Ljava/lang/Object;
signature: [Ljdk.vm.ci.meta.JavaType;@7a3a8430
stamp: void
targetMethod: HotSpotMethod<NodeList$NodeListIterator.next()>
=== Inputs ===
arguments: a2110 
=== Succesors ===
=== Usages ===
a662 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2110  <|@  <|@
tid ?2222 <|@
d <@d|@=== Debug Properties ===
bci: 32
code: ResolvedJavaMethodBytecode<FrameState.applyToVirtual(VirtualState$VirtualClosure)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: FrameState.java
sourceLine: 655
stackSize: 0
=== Inputs ===
outerFrameState: ?687 
values: a2848 a590 a765 - 
virtualObjectMappings: ?591 ?1243 
=== Succesors ===
=== Usages ===
a662 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?687 values: a2848 a590 a765 - virtualObjectMappings: ?591 ?1243  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a662 <|@
result v139|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 32
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 32]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
polymorphic: false
stamp: a Ljava/lang/Object;
targetMethod: Direct#NodeList$NodeListIterator.next
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1505 
stateDuring: ?2222 
=== Succesors ===
next: v2115 
=== Usages ===
?663 v2949 v2909 v667 
=== Predecessor ===
v659 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1505 stateDuring: ?2222 #next: v2115  <|@  <|@
f <@~|@floating>@ <|@
tid v667 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:656) [bci: 43]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
value: a662 
=== Succesors ===
=== Usages ===
v1877 v2115 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a662  <|@  <|@
f <@*|@fixed>@ <|@
tid v2115 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:156) [bci: 15]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 37]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v667 
=== Succesors ===
trueSuccessor: v2114 
falseSuccessor: v2113 
=== Usages ===
=== Predecessor ===
a662 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v667 #trueSuccessor: v2114 #falseSuccessor: v2113  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v133|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 32]
locals: v92|DWORD[.] vobject:1492729447:0{arg$1=v83|DWORD[.]} v133|QWORD[.] - 
org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
locals: - - - - 
org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
locals: - - 
org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
locals: - - 
java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
locals: - v1|QWORD[.] v24|QWORD[.] - 
vobject:1492729447:0{arg$1=v83|DWORD[.]} Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$92/1492729447; v83|DWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<NodeList$NodeListIterator.next()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:32, 61, 7, 8, 30] <|@ <|@
      nr   -1  <|@ instruction v139|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v139|QWORD[.], y: v139|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B141 -> B142 falseDestination: B141 -> B143 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B145" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4568307154746408066
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2114 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:157) [bci: 18]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 37]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2396 
=== Usages ===
=== Predecessor ===
v2115 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2396  <|@  <|@
f <@*|@fixed>@ <|@
tid v2396 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 37]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2394 
=== Predecessor ===
v2114 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B142 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B144" "B155" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4582588045156031508
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2113 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:160) [bci: 29]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 37]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2867 
=== Usages ===
=== Predecessor ===
v2115 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2867  <|@  <|@
f <@~|@floating>@ <|@
tid v2949 <|@
result [v139|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a662 
index: - 
=== Succesors ===
=== Usages ===
v2867 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a662 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2867 <|@
result v140|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:161) [bci: 40]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 37]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2949 
=== Succesors ===
next: v2868 
=== Usages ===
v2918 
=== Predecessor ===
v2113 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2949 #next: v2868  <|@  <|@
f <@~|@floating>@ <|@
tid v2918 <|@
result [v140|DWORD * 8 + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v2867 
=== Succesors ===
=== Usages ===
v2868 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v2867  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2868 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: PrimarySupers:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:162) [bci: 54]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 37]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
nullCheck: false
stamp: Klass*
=== Inputs ===
stateBefore: - 
guard: - 
address: v2918 
=== Succesors ===
next: v2786 
=== Usages ===
v2119 
=== Predecessor ===
v2867 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2918 #next: v2786  <|@  <|@
f <@~|@floating>@ <|@
tid v2119 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:162) [bci: 58]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 37]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2868 
y: v2071 
=== Succesors ===
=== Usages ===
v2786 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2868 y: v2071  <|@  <|@
f <@*|@fixed>@ <|@
tid v2786 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 37]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2119 
=== Succesors ===
trueSuccessor: v2785 
falseSuccessor: v1869 
=== Usages ===
=== Predecessor ===
v2868 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2119 #trueSuccessor: v2785 #falseSuccessor: v1869  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v140|DWORD = MOV [v139|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v94|QWORD, y: [v140|DWORD * 8 + 64]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B143 -> B144 falseDestination: B143 -> B155 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B143" 
    successors "B145" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4582588045156031508
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2785 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 37]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2405 
=== Usages ===
=== Predecessor ===
v2786 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2405  <|@  <|@
f <@*|@fixed>@ <|@
tid v2405 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 37]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2394 
=== Predecessor ===
v2785 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B144 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B142" "B144" 
    successors "B146" "B148" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4583358136683543460
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2394 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 37]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2396 v2405 
=== Succesors ===
next: v1877 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2396 v2405 #next: v1877  <|@  <|@
f <@*|@fixed>@ <|@
tid v1877 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:656) [bci: 43]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v667 
=== Succesors ===
trueSuccessor: v1875 
falseSuccessor: v1872 
=== Usages ===
=== Predecessor ===
v2394 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v667 #trueSuccessor: v1875 #falseSuccessor: v1872  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v139|QWORD[.], y: v139|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B145 -> B146 falseDestination: B145 -> B148 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B145" 
    successors "B147" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1875 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:656) [bci: 43]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v648 
=== Succesors ===
next: v1876 
=== Usages ===
=== Predecessor ===
v1877 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v648 #next: v1876  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B146 -> B147 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B157" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1876 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:656) [bci: 43]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v12 
=== Succesors ===
next: v2297 
=== Usages ===
=== Predecessor ===
v1875 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v12 #next: v2297  <|@  <|@
f <@~|@floating>@ <|@
tid i2298 <|@
result int[-386315|0xfffffffffffa1af5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -386315
stableDimension: 0
stamp: i32 [-386315] ⇊00000000fffa1af5 ⇈00000000fffa1af5
stampKind: i32
value: int[-386315|0xfffffffffffa1af5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2294 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2297 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2291 
=== Predecessor ===
v1876 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-386315|0xfffffffffffa1af5]] destination: B147 -> B157 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B145" 
    successors "B149" "B151" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4583358136683543460
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1872 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:656) [bci: 43]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2869 
=== Usages ===
=== Predecessor ===
v1877 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2869  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2869 <|@
result v141|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: NodeBitMap.bits
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 30]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.virtual.EscapeObjectState.applyToVirtual(EscapeObjectState.java:58) [bci: 2]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:656) [bci: 43]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
nullCheck: false
stamp: n# [J
=== Inputs ===
stateBefore: - 
guard: - 
address: v2889 
=== Succesors ===
next: v1883 
=== Usages ===
a1513 v1514 v2910 
=== Predecessor ===
v1872 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2889 #next: v1883  <|@  <|@
f <@~|@floating>@ <|@
tid v1514 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 38]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.virtual.EscapeObjectState.applyToVirtual(EscapeObjectState.java:58) [bci: 2]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:656) [bci: 43]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
value: a2869 
=== Succesors ===
=== Usages ===
v1883 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2869  <|@  <|@
f <@*|@fixed>@ <|@
tid v1883 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 38]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.virtual.EscapeObjectState.applyToVirtual(EscapeObjectState.java:58) [bci: 2]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:656) [bci: 43]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1514 
=== Succesors ===
trueSuccessor: v1881 
falseSuccessor: v1878 
=== Usages ===
=== Predecessor ===
a2869 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1514 #trueSuccessor: v1881 #falseSuccessor: v1878  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v141|DWORD[.] = MOV [v83|DWORD[.] * 8 + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v141|DWORD[.], y: v141|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B148 -> B149 falseDestination: B148 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B148" 
    successors "B150" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1881 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 38]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.virtual.EscapeObjectState.applyToVirtual(EscapeObjectState.java:58) [bci: 2]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:656) [bci: 43]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v648 
=== Succesors ===
next: v1882 
=== Usages ===
=== Predecessor ===
v1883 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v648 #next: v1882  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B149 -> B150 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B149" 
    successors "B157" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1882 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 38]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.virtual.EscapeObjectState.applyToVirtual(EscapeObjectState.java:58) [bci: 2]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:656) [bci: 43]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v12 
=== Succesors ===
next: v2299 
=== Usages ===
=== Predecessor ===
v1881 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v12 #next: v2299  <|@  <|@
f <@~|@floating>@ <|@
tid i2300 <|@
result int[-387851|0xfffffffffffa14f5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -387851
stableDimension: 0
stamp: i32 [-387851] ⇊00000000fffa14f5 ⇈00000000fffa14f5
stampKind: i32
value: int[-387851|0xfffffffffffa14f5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2294 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2299 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2291 
=== Predecessor ===
v1882 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-387851|0xfffffffffffa14f5]] destination: B150 -> B157 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B148" 
    successors "B152" "B153" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4583358136683543460
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1878 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 38]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.virtual.EscapeObjectState.applyToVirtual(EscapeObjectState.java:58) [bci: 2]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:656) [bci: 43]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2870 
=== Usages ===
=== Predecessor ===
v1883 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2870  <|@  <|@
f <@~|@floating>@ <|@
tid v2910 <|@
result [v141|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2869 
=== Succesors ===
=== Usages ===
i2870 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2869  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2870 <|@
result v142|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 38]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.virtual.EscapeObjectState.applyToVirtual(EscapeObjectState.java:58) [bci: 2]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:656) [bci: 43]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v2910 
=== Succesors ===
next: i2871 
=== Usages ===
v1528 
=== Predecessor ===
v1878 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2910 #next: i2871  <|@  <|@
f <@~|@floating>@ <|@
tid v2909 <|@
result [v139|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a662 
index: - 
=== Succesors ===
=== Usages ===
i2871 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a662 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2871 <|@
result v143|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Node.id
nodeSourcePosition: at org.graalvm.compiler.graph.Node.id(Node.java:284) [bci: 1]
at org.graalvm.compiler.graph.NodeIdAccessor.getNodeId(NodeIdAccessor.java:61) [bci: 22]
at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:95) [bci: 25]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.virtual.EscapeObjectState.applyToVirtual(EscapeObjectState.java:58) [bci: 2]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:656) [bci: 43]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2909 
=== Succesors ===
next: v1889 
=== Usages ===
i747 j749 
=== Predecessor ===
i2870 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2909 #next: v1889  <|@  <|@
f <@~|@floating>@ <|@
tid i747 <|@
result v144|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 36]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.virtual.EscapeObjectState.applyToVirtual(EscapeObjectState.java:58) [bci: 2]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:656) [bci: 43]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: i32 [-33554432 - 33554431]
=== Inputs ===
x: i2871 
y: i531 
=== Succesors ===
=== Usages ===
v1528 v2911 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i2871 y: i531  <|@  <|@
f <@~|@floating>@ <|@
tid v1528 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 43]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.virtual.EscapeObjectState.applyToVirtual(EscapeObjectState.java:58) [bci: 2]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:656) [bci: 43]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i747 
y: i2870 
=== Succesors ===
=== Usages ===
v1889 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i747 y: i2870  <|@  <|@
f <@*|@fixed>@ <|@
tid v1889 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 43]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.virtual.EscapeObjectState.applyToVirtual(EscapeObjectState.java:58) [bci: 2]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:656) [bci: 43]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1528 
=== Succesors ===
trueSuccessor: v1884 
falseSuccessor: v1887 
=== Usages ===
=== Predecessor ===
i2871 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1528 #trueSuccessor: v1884 #falseSuccessor: v1887  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v142|DWORD = MOV [v141|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v143|DWORD = MOV [v139|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v144|DWORD = SAR v143|DWORD y: 6 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v142|DWORD, y: v144|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B151 -> B152 falseDestination: B151 -> B153 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B151" 
    successors "B140" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 2
    probability 4583358136683543460
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1884 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 43]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.virtual.EscapeObjectState.applyToVirtual(EscapeObjectState.java:58) [bci: 2]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:656) [bci: 43]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2872 
=== Usages ===
j2872 v1535 
=== Predecessor ===
v1889 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2872  <|@  <|@
f <@~|@floating>@ <|@
tid a1513 <|@
result v145|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 30]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.virtual.EscapeObjectState.applyToVirtual(EscapeObjectState.java:58) [bci: 2]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:656) [bci: 43]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
op: Uncompress
stamp: a# [J
=== Inputs ===
value: a2869 
=== Succesors ===
=== Usages ===
v2911 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2869  <|@  <|@
f <@~|@floating>@ <|@
tid v2911 <|@
result [v145|QWORD[.] + v144|DWORD * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: a1513 
index: i747 
=== Succesors ===
=== Usages ===
v1535 j2872 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1513 index: i747  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2872 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: long
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 38]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.virtual.EscapeObjectState.applyToVirtual(EscapeObjectState.java:58) [bci: 2]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:656) [bci: 43]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: v1884 
address: v2911 
=== Succesors ===
next: v1535 
=== Usages ===
j750 
=== Predecessor ===
v1884 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1884 address: v2911 #next: v1535  <|@  <|@
f <@~|@floating>@ <|@
tid j749 <|@
result v146|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 41]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.virtual.EscapeObjectState.applyToVirtual(EscapeObjectState.java:58) [bci: 2]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:656) [bci: 43]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: i64
=== Inputs ===
x: j534 
y: i2871 
=== Succesors ===
=== Usages ===
j750 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j534 y: i2871  <|@  <|@
f <@~|@floating>@ <|@
tid j750 <|@
result v148|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 42]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.virtual.EscapeObjectState.applyToVirtual(EscapeObjectState.java:58) [bci: 2]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:656) [bci: 43]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: i64
=== Inputs ===
x: j749 
y: j2872 
=== Succesors ===
=== Usages ===
v1535 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: j749 y: j2872  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1535 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: long
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 43]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.virtual.EscapeObjectState.applyToVirtual(EscapeObjectState.java:58) [bci: 2]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:656) [bci: 43]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1884 
address: v2911 
value: j750 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v674 
=== Usages ===
=== Predecessor ===
j2872 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1884 address: v2911 value: j750 stateAfter: - lastLocationAccess: - #next: v674  <|@  <|@
f <@*|@fixed>@ <|@
tid v674 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 22]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
loopBegin: v648 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1535 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v648  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v145|QWORD[.] = UNCOMPRESSPOINTER (input: v141|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v147|QWORD = MOVE input: long[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v143|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v146|QWORD = SHL (x: v147|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v148|QWORD = OR (x: v146|QWORD, ~y: [v145|QWORD[.] + v144|DWORD * 8 + 16]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v145|QWORD[.] + v144|DWORD * 8 + 16], y: v148|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B152 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B153"
    from_bci -1
    to_bci -1
    predecessors "B151" 
    successors "B154" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1887 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 43]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.virtual.EscapeObjectState.applyToVirtual(EscapeObjectState.java:58) [bci: 2]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:656) [bci: 43]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v648 
=== Succesors ===
next: v1888 
=== Usages ===
=== Predecessor ===
v1889 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v648 #next: v1888  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B153 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B154"
    from_bci -1
    to_bci -1
    predecessors "B153" 
    successors "B157" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1888 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 43]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.virtual.EscapeObjectState.applyToVirtual(EscapeObjectState.java:58) [bci: 2]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:656) [bci: 43]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v12 
=== Succesors ===
next: v2301 
=== Usages ===
=== Predecessor ===
v1887 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v12 #next: v2301  <|@  <|@
f <@~|@floating>@ <|@
tid i2302 <|@
result int[-391451|0xfffffffffffa06e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -391451
stableDimension: 0
stamp: i32 [-391451] ⇊00000000fffa06e5 ⇈00000000fffa06e5
stampKind: i32
value: int[-391451|0xfffffffffffa06e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2294 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2301 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2291 
=== Predecessor ===
v1888 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-391451|0xfffffffffffa06e5]] destination: B154 -> B157 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B155"
    from_bci -1
    to_bci -1
    predecessors "B143" 
    successors "B156" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1869 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 37]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v648 
=== Succesors ===
next: v1870 
=== Usages ===
=== Predecessor ===
v2786 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v648 #next: v1870  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B155 -> B156 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B156"
    from_bci -1
    to_bci -1
    predecessors "B155" 
    successors "B157" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1870 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 37]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v12 
=== Succesors ===
next: v2292 
=== Usages ===
=== Predecessor ===
v1869 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v12 #next: v2292  <|@  <|@
f <@~|@floating>@ <|@
tid i2293 <|@
result int[-386083|0xfffffffffffa1bdd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -386083
stableDimension: 0
stamp: i32 [-386083] ⇊00000000fffa1bdd ⇈00000000fffa1bdd
stampKind: i32
value: int[-386083|0xfffffffffffa1bdd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2294 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2292 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2291 
=== Predecessor ===
v1870 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-386083|0xfffffffffffa1bdd]] destination: B156 -> B157 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B157"
    from_bci -1
    to_bci -1
    predecessors "B156" "B147" "B150" "B154" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i2294 <|@
result v149|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-391451 - -386083] ⇊00000000fffa00c5 ⇈00000000fffa1ffd
valueDescription: i32
=== Inputs ===
merge: v2291 
values: i2293 i2298 i2300 i2302 
=== Succesors ===
=== Usages ===
v2296 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2291 values: i2293 i2298 i2300 i2302  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2291 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2292 v2297 v2299 v2301 
=== Succesors ===
next: v2296 
=== Usages ===
i2294 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2292 v2297 v2299 v2301 #next: v2296  <|@  <|@
tid ?663 <|@
d <@d|@=== Debug Properties ===
bci: 37
code: ResolvedJavaMethodBytecode<FrameState.applyToVirtual(VirtualState$VirtualClosure)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 32]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
rethrowException: false
sourceFile: FrameState.java
sourceLine: 655
stackSize: 1
=== Inputs ===
outerFrameState: ?687 
values: a2848 a590 a765 - a662 
virtualObjectMappings: ?591 ?1243 
=== Succesors ===
=== Usages ===
v2296 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?687 values: a2848 a590 a765 - a662 virtualObjectMappings: ?591 ?1243  <|@  <|@
f <@*|@fixed>@ <|@
tid v2296 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?663 
actionAndReason: i2294 
speculation: a2233 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2291 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?663 actionAndReason: i2294 speculation: a2233  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v149|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v149|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 37]
stack: v139|QWORD[.] 
locals: v92|DWORD[.] vobject:1492729447:0{arg$1=v83|DWORD[.]} v133|QWORD[.] - 
org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
locals: - - - - 
org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
locals: - - 
org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
locals: - - 
java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
locals: - v1|QWORD[.] v24|QWORD[.] - 
vobject:1492729447:0{arg$1=v83|DWORD[.]} Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$92/1492729447; v83|DWORD[.] 
>@ <|@ instruction DEOPT info [bci:37, 61, 7, 8, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B158"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B159" "B160" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583358136683543460
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v657 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:659) [bci: 49]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v648 
=== Succesors ===
next: a2873 
=== Usages ===
=== Predecessor ===
v660 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v648 #next: a2873  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2873 <|@
result v150|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FrameState.outerFrameState
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.outerFrameState(FrameState.java:234) [bci: 1]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:659) [bci: 50]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
nullCheck: false
stamp: n# Lorg/graalvm/compiler/nodes/FrameState;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2904 
=== Succesors ===
next: v680 
=== Usages ===
a1537 v1538 
=== Predecessor ===
v657 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2904 #next: v680  <|@  <|@
f <@~|@floating>@ <|@
tid v1538 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
value: a2873 
=== Succesors ===
=== Usages ===
v680 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2873  <|@  <|@
f <@*|@fixed>@ <|@
tid v680 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:659) [bci: 53]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1538 
=== Succesors ===
trueSuccessor: v678 
falseSuccessor: v679 
=== Usages ===
=== Predecessor ===
a2873 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1538 #trueSuccessor: v678 #falseSuccessor: v679  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v150|DWORD[.] = MOV [v92|DWORD[.] * 8 + 68] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v150|DWORD[.], y: v150|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B158 -> B159 falseDestination: B158 -> B160 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B159"
    from_bci -1
    to_bci -1
    predecessors "B158" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4578854537056172964
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v678 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:662) [bci: 64]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1684 
=== Usages ===
=== Predecessor ===
v680 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1684  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1684 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?649 
=== Succesors ===
next: v584 
=== Usages ===
=== Predecessor ===
v678 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?649 #next: v584  <|@  <|@
f <@*|@fixed>@ <|@
tid v584 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 3
stamp: void
=== Inputs ===
loopBegin: v12 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1684 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v12  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 22]
locals: v92|DWORD[.] vobject:1492729447:0{arg$1=v83|DWORD[.]} v133|QWORD[.] - 
org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
locals: - - - - 
org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
locals: - - 
org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
locals: - - 
java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
locals: - v1|QWORD[.] v24|QWORD[.] - 
vobject:1492729447:0{arg$1=v83|DWORD[.]} Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$92/1492729447; v83|DWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:22, 61, 7, 8, 30] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B159 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B160"
    from_bci -1
    to_bci -1
    predecessors "B158" 
    successors "B161" "B162" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4578854537056172964
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v679 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 56]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2648 
=== Usages ===
=== Predecessor ===
v680 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2648  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2648 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j2663 
=== Usages ===
v2950 v2951 
=== Predecessor ===
v679 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j2663  <|@  <|@
f <@~|@floating>@ <|@
tid v2950 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j2648 
index: - 
=== Succesors ===
=== Usages ===
j2663 v2665 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2648 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2663 <|@
result v151|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2950 
=== Succesors ===
next: j2664 
=== Usages ===
j2728 j2669 v2969 
=== Predecessor ===
j2648 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2950 #next: j2664  <|@  <|@
f <@~|@floating>@ <|@
tid v2951 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j2648 
index: - 
=== Succesors ===
=== Usages ===
j2664 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2648 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2664 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2951 
=== Succesors ===
next: v2656 
=== Usages ===
v2653 
=== Predecessor ===
j2663 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2951 #next: v2656  <|@  <|@
f <@~|@floating>@ <|@
tid j2728 <|@
result v152|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2663 
y: j1284 
=== Succesors ===
=== Usages ===
v2653 v2665 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2663 y: j1284  <|@  <|@
f <@~|@floating>@ <|@
tid v2653 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2664 
y: j2728 
=== Succesors ===
=== Usages ===
v2656 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j2664 y: j2728  <|@  <|@
f <@*|@fixed>@ <|@
tid v2656 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v2653 
=== Succesors ===
trueSuccessor: v2654 
falseSuccessor: v2655 
=== Usages ===
=== Predecessor ===
j2664 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2653 #trueSuccessor: v2654 #falseSuccessor: v2655  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v151|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v152|QWORD = LEA [v151|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v152|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B160 -> B161 falseDestination: B160 -> B162 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B161"
    from_bci -1
    to_bci -1
    predecessors "B160" 
    successors "B163" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4549060609792906964
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2654 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a2659 
=== Usages ===
=== Predecessor ===
v2656 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2659  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2659 <|@
result v153|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?649 
arguments: v2430 i17 i126 
=== Succesors ===
next: j2660 
=== Usages ===
j2660 
=== Predecessor ===
v2654 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?649 arguments: v2430 i17 i126 #next: j2660  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2660 <|@
result v153|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a2659 
=== Succesors ===
next: v2670 
=== Usages ===
j2669 
=== Predecessor ===
a2659 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a2659 #next: v2670  <|@  <|@
f <@*|@fixed>@ <|@
tid v2670 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2667 
=== Predecessor ===
j2660 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v3|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 22]
locals: v92|DWORD[.] vobject:1492729447:0{arg$1=v83|DWORD[.]} v133|QWORD[.] - 
org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
locals: - - - - 
org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
locals: - - 
org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
locals: - - 
java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
locals: - v1|QWORD[.] v24|QWORD[.] - 
vobject:1492729447:0{arg$1=v83|DWORD[.]} Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$92/1492729447; v83|DWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:22, 61, 7, 8, 30] <|@ <|@
      nr   -1  <|@ instruction v153|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v153|QWORD[.]] destination: B161 -> B163 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B162"
    from_bci -1
    to_bci -1
    predecessors "B160" 
    successors "B163" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4578777527903421769
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2655 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2665 
=== Usages ===
=== Predecessor ===
v2656 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2665  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2665 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2950 
value: j2728 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2662 
=== Usages ===
=== Predecessor ===
v2655 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2950 value: j2728 stateAfter: - lastLocationAccess: - #next: v2662  <|@  <|@
f <@~|@floating>@ <|@
tid v2969 <|@
result [v151|QWORD + 208] <|@
d <@d|@=== Debug Properties ===
displacement: 208
scale: Times1
stamp: void*
=== Inputs ===
base: j2663 
index: - 
=== Succesors ===
=== Usages ===
v2662 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2663 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2662 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v2969 
=== Succesors ===
next: v2668 
=== Usages ===
=== Predecessor ===
v2665 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2969 #next: v2668  <|@  <|@
f <@*|@fixed>@ <|@
tid v2668 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2667 
=== Predecessor ===
v2662 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v152|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v151|QWORD + 208] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v151|QWORD] destination: B162 -> B163 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B163"
    from_bci -1
    to_bci -1
    predecessors "B162" "B161" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4578854537056172964
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2669 <|@
result v154|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2667 
values: j2663 j2660 
=== Succesors ===
=== Usages ===
v2954 v2919 a2133 v2953 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2667 values: j2663 j2660  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2667 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2668 v2670 
=== Succesors ===
next: a2133 
=== Usages ===
j2669 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2668 v2670 #next: a2133  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2133 <|@
result v155|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j2669 
=== Succesors ===
next: j2679 
=== Usages ===
a2138 
=== Predecessor ===
v2667 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j2669 #next: j2679  <|@  <|@
f <@~|@floating>@ <|@
tid j2675 <|@
result v120|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v2588 
=== Succesors ===
=== Usages ===
v2952 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v2588  <|@  <|@
f <@~|@floating>@ <|@
tid v2952 <|@
result [v120|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j2675 
index: - 
=== Succesors ===
=== Usages ===
j2679 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2675 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2679 <|@
result v156|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2952 
=== Succesors ===
next: v2680 
=== Usages ===
v2680 
=== Predecessor ===
a2133 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2952 #next: v2680  <|@  <|@
f <@~|@floating>@ <|@
tid v2953 <|@
result [v154|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2669 
index: - 
=== Succesors ===
=== Usages ===
v2680 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2669 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2680 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2953 
value: j2679 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2683 
=== Usages ===
=== Predecessor ===
j2679 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2953 value: j2679 stateAfter: - lastLocationAccess: - #next: v2683  <|@  <|@
f <@~|@floating>@ <|@
tid v2954 <|@
result [v154|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j2669 
index: - 
=== Succesors ===
=== Usages ===
v2683 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2669 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2683 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2954 
value: v2720 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2137 
=== Usages ===
=== Predecessor ===
v2680 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2954 value: v2720 stateAfter: - lastLocationAccess: - #next: v2137  <|@  <|@
f <@~|@floating>@ <|@
tid v2919 <|@
result [v154|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j2669 
index: - 
=== Succesors ===
=== Usages ===
v2137 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2669 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2137 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2919 
value: a2843 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a2138 
=== Usages ===
=== Predecessor ===
v2683 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2919 value: a2843 stateAfter: - lastLocationAccess: - #next: a2138  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2138 <|@
result v155|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a2133 
=== Succesors ===
next: v2139 
=== Usages ===
v1541 
=== Predecessor ===
v2137 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a2133 #next: v2139  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2139 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v683 
=== Usages ===
=== Predecessor ===
a2138 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v683  <|@  <|@
f <@~|@floating>@ <|@
tid a1537 <|@
result v157|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.outerFrameState(FrameState.java:234) [bci: 1]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:659) [bci: 50]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
op: Uncompress
stamp: a# Lorg/graalvm/compiler/nodes/FrameState;
=== Inputs ===
value: a2873 
=== Succesors ===
=== Usages ===
v1541 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2873  <|@  <|@
tid v1541 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@d56743e
stamp: void
targetMethod: HotSpotMethod<FrameState.applyToVirtual(VirtualState$VirtualClosure)>
=== Inputs ===
arguments: a1537 a2138 
=== Succesors ===
=== Usages ===
v683 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1537 a2138  <|@  <|@
tid ?2224 <|@
d <@d|@=== Debug Properties ===
bci: 61
code: ResolvedJavaMethodBytecode<FrameState.applyToVirtual(VirtualState$VirtualClosure)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: FrameState.java
sourceLine: 660
stackSize: 0
=== Inputs ===
outerFrameState: ?687 
values: - - - - 
=== Succesors ===
=== Usages ===
v683 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?687 values: - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v683 <|@
d <@d|@=== Debug Properties ===
bci: 61
nodeSourcePosition: at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
polymorphic: false
stamp: void
targetMethod: Direct#FrameState.applyToVirtual
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1541 
stateDuring: ?2224 
=== Succesors ===
next: v759 
=== Usages ===
=== Predecessor ===
v2139 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1541 stateDuring: ?2224 #next: v759  <|@  <|@
f <@*|@fixed>@ <|@
tid v759 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 4
stamp: void
=== Inputs ===
loopBegin: v12 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v683 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v12  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v154|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v155|QWORD[.] = MOVE v154|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v156|QWORD = MOV [v120|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v154|QWORD[*]], y: v156|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v154|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$92/1492729447;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v154|QWORD[*] + 12], y: v83|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v157|QWORD[.] = UNCOMPRESSPOINTER (input: v150|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v157|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v155|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
locals: - - - - 
org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
locals: - - - - 
org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
locals: - - 
org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
locals: - - 
java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
locals: - v1|QWORD[.] v24|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FrameState.applyToVirtual(VirtualState$VirtualClosure)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:61, 61, 7, 8, 30] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B163 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B164"
    from_bci -1
    to_bci -1
    predecessors "B128" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1858 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 43]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:653) [bci: 2]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v12 
=== Succesors ===
next: v2324 
=== Usages ===
=== Predecessor ===
v1859 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v12 #next: v2324  <|@  <|@
f <@~|@floating>@ <|@
tid i2326 <|@
result int[-377883|0xfffffffffffa3be5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -377883
stableDimension: 0
stamp: i32 [-377883] ⇊00000000fffa3be5 ⇈00000000fffa3be5
stampKind: i32
value: int[-377883|0xfffffffffffa3be5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2324 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2324 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?983 
actionAndReason: i2326 
speculation: a2233 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1858 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?983 actionAndReason: i2326 speculation: a2233  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -377883 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:659) [bci: 49]
locals: v82|QWORD[.] vobject:1492729447:0{arg$1=v83|DWORD[.]} - - 
org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
locals: - - 
org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
locals: - - 
java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
locals: - v1|QWORD[.] v24|QWORD[.] - 
vobject:1492729447:0{arg$1=v83|DWORD[.]} Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$92/1492729447; v83|DWORD[.] 
>@ <|@ instruction DEOPT info [bci:49, 7, 8, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B165"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B166" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2744 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList$NodeListIterator.next(NodeList.java:462) [bci: 46]
at org.graalvm.compiler.graph.NodeList$NodeListIterator.next(NodeList.java:441) [bci: 1]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 32]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2742 
=== Usages ===
=== Predecessor ===
v2748 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2742  <|@  <|@
f <@*|@fixed>@ <|@
tid v2742 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList$NodeListIterator.next(NodeList.java:462) [bci: 46]
at org.graalvm.compiler.graph.NodeList$NodeListIterator.next(NodeList.java:441) [bci: 1]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 32]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2741 
=== Predecessor ===
v2744 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B165 -> B166 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B166"
    from_bci -1
    to_bci -1
    predecessors "B165" "B107" 
    successors "B167" 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2741 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList$NodeListIterator.next(NodeList.java:462) [bci: 46]
at org.graalvm.compiler.graph.NodeList$NodeListIterator.next(NodeList.java:441) [bci: 1]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 32]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2742 v2743 
=== Succesors ===
next: v1829 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2742 v2743 #next: v1829  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B166 -> B167 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B167"
    from_bci -1
    to_bci -1
    predecessors "B166" 
    successors "B168" 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1829 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList$NodeListIterator.next(NodeList.java:462) [bci: 46]
at org.graalvm.compiler.graph.NodeList$NodeListIterator.next(NodeList.java:441) [bci: 1]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 32]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v12 
=== Succesors ===
next: v2282 
=== Usages ===
=== Predecessor ===
v2741 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v12 #next: v2282  <|@  <|@
f <@~|@floating>@ <|@
tid a2284 <|@
result v158|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@295001017
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@295001017]
=== Inputs ===
=== Succesors ===
=== Usages ===
a2286 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2283 <|@
result int[-365083|0xfffffffffffa6de5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -365083
stableDimension: 0
stamp: i32 [-365083] ⇊00000000fffa6de5 ⇈00000000fffa6de5
stampKind: i32
value: int[-365083|0xfffffffffffa6de5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2285 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2282 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2281 
=== Predecessor ===
v1829 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v158|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@295001017] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-365083|0xfffffffffffa6de5], v158|QWORD[.]] destination: B167 -> B168 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B168"
    from_bci -1
    to_bci -1
    predecessors "B167" "B102" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i2285 <|@
result v159|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-365083 - -363787] ⇊00000000fffa60e5 ⇈00000000fffa7ff5
valueDescription: i32
=== Inputs ===
merge: v2281 
values: i2283 i2289 
=== Succesors ===
=== Usages ===
v2287 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2281 values: i2283 i2289  <|@  <|@
f <@~|@floating>@ <|@
tid a2286 <|@
result v160|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
valueDescription: a -
=== Inputs ===
merge: v2281 
values: a2284 a2290 
=== Succesors ===
=== Usages ===
v2287 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2281 values: a2284 a2290  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2281 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2282 v2288 
=== Succesors ===
next: v2287 
=== Usages ===
i2285 a2286 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2282 v2288 #next: v2287  <|@  <|@
f <@*|@fixed>@ <|@
tid v2287 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?538 
actionAndReason: i2285 
speculation: a2286 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2281 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?538 actionAndReason: i2285 speculation: a2286  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v159|DWORD, v160|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v159|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v160|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:97) [bci: 44]
locals: v83|DWORD[.] - v86|DWORD 
org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
locals: - - 
org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
locals: vobject:1492729447:0{arg$1=v83|DWORD[.]} v82|QWORD[.] 
org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:653) [bci: 2]
locals: v82|QWORD[.] vobject:1492729447:0{arg$1=v83|DWORD[.]} - - 
org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
locals: - - 
org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
locals: - - 
java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
locals: - v1|QWORD[.] v24|QWORD[.] - 
vobject:1492729447:0{arg$1=v83|DWORD[.]} Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$92/1492729447; v83|DWORD[.] 
>@ <|@ instruction DEOPT info [bci:44, 2, 5, 2, 7, 8, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B169"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B171" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1819 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:96) [bci: 43]
at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:653) [bci: 2]
at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v12 
=== Succesors ===
next: v2253 
=== Usages ===
=== Predecessor ===
v1820 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v12 #next: v2253  <|@  <|@
f <@~|@floating>@ <|@
tid i2254 <|@
result int[-357915|0xfffffffffffa89e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -357915
stableDimension: 0
stamp: i32 [-357915] ⇊00000000fffa89e5 ⇈00000000fffa89e5
stampKind: i32
value: int[-357915|0xfffffffffffa89e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2244 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2253 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2241 
=== Predecessor ===
v1819 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-357915|0xfffffffffffa89e5]] destination: B169 -> B171 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B170"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B171" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1799 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 5]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v12 
=== Succesors ===
next: v2242 
=== Usages ===
=== Predecessor ===
v2770 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v12 #next: v2242  <|@  <|@
f <@~|@floating>@ <|@
tid i2243 <|@
result int[-351523|0xfffffffffffaa2dd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -351523
stableDimension: 0
stamp: i32 [-351523] ⇊00000000fffaa2dd ⇈00000000fffaa2dd
stampKind: i32
value: int[-351523|0xfffffffffffaa2dd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2244 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2242 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2241 
=== Predecessor ===
v1799 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-351523|0xfffffffffffaa2dd]] destination: B170 -> B171 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B171"
    from_bci -1
    to_bci -1
    predecessors "B170" "B91" "B93" "B95" "B169" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i2244 <|@
result v161|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-357915 - -351523] ⇊00000000fffa80c5 ⇈00000000fffabbfd
valueDescription: i32
=== Inputs ===
merge: v2241 
values: i2243 i2248 i2250 i2252 i2254 
=== Succesors ===
=== Usages ===
v2246 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2241 values: i2243 i2248 i2250 i2252 i2254  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2241 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2242 v2247 v2249 v2251 v2253 
=== Succesors ===
next: v2246 
=== Usages ===
i2244 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2242 v2247 v2249 v2251 v2253 #next: v2246  <|@  <|@
tid ?306 <|@
d <@d|@=== Debug Properties ===
bci: 27
code: ResolvedJavaMethodBytecode<Iterable.forEach(Consumer)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
rethrowException: false
sourceFile: Iterable.java
sourceLine: 74
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - a2 a38 - a954 
=== Succesors ===
=== Usages ===
v2246 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 a38 - a954  <|@  <|@
f <@*|@fixed>@ <|@
tid v2246 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?306 
actionAndReason: i2244 
speculation: a2233 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2241 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?306 actionAndReason: i2244 speculation: a2233  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v161|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v161|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Iterable.forEach(Iterable.java:74) [bci: 27]
stack: v82|QWORD[.] 
locals: - v1|QWORD[.] v24|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B172"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B173" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587614405250104338
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v950 
=== Usages ===
=== Predecessor ===
v95 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v950  <|@  <|@
f <@*|@fixed>@ <|@
tid v950 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v949 
=== Predecessor ===
v94 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v81|QWORD[.]] destination: B172 -> B173 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B173"
    from_bci -1
    to_bci -1
    predecessors "B172" "B78" 
    successors "B174" "B183" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591076232195416571
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a955 <|@
result v162|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
valueDescription: a -
=== Inputs ===
merge: v949 
values: a25 a1360 
=== Succesors ===
=== Usages ===
v1553 v1552 v1546 ?951 v2955 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v949 values: a25 a1360  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v949 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v950 v1059 
=== Succesors ===
next: v2874 
=== Usages ===
a955 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v950 v1059 #next: v2874  <|@  <|@
f <@~|@floating>@ <|@
tid v2933 <|@
result [v1|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v2874 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2874 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2933 
=== Succesors ===
next: v103 
=== Usages ===
v2714 
=== Predecessor ===
v949 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2933 #next: v103  <|@  <|@
f <@~|@floating>@ <|@
tid v2713 <|@
result meta{HotSpotType<Lorg/graalvm/compiler/phases/common/CanonicalizerPhase$Instance$$Lambda$21/340690072;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
rawvalue: meta{HotSpotType<Lorg/graalvm/compiler/phases/common/CanonicalizerPhase$Instance$$Lambda$21/340690072;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lorg/graalvm/compiler/phases/common/CanonicalizerPhase$Instance$$Lambda$21/340690072;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2714 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2714 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2874 
y: v2713 
=== Succesors ===
=== Usages ===
v103 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2874 y: v2713  <|@  <|@
f <@*|@fixed>@ <|@
tid v103 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/phases/common/CanonicalizerPhase$Instance$$Lambda$21/340690072; target_method=accept target_method_class=Lorg/graalvm/compiler/phases/common/CanonicalizerPhase$Instance$$Lambda$21/340690072; position=at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
trueSuccessorProbability: 0.7065224035699004
=== Inputs ===
condition: v2714 
=== Succesors ===
trueSuccessor: v99 
falseSuccessor: v102 
=== Usages ===
=== Predecessor ===
v2874 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2714 #trueSuccessor: v99 #falseSuccessor: v102  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v162|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v1|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/phases/common/CanonicalizerPhase$Instance$$Lambda$21/340690072;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7065224035699004 condition: = trueDestination: B173 -> B174 falseDestination: B173 -> B183 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B174"
    from_bci -1
    to_bci -1
    predecessors "B173" 
    successors "B175" "B176" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589194509158168565
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/phases/common/CanonicalizerPhase$Instance$$Lambda$21/340690072; target_method=accept target_method_class=Lorg/graalvm/compiler/phases/common/CanonicalizerPhase$Instance$$Lambda$21/340690072; position=at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2161 
=== Usages ===
=== Predecessor ===
v103 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2161  <|@  <|@
f <@~|@floating>@ <|@
tid v1546 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance$$Lambda$21.340690072.accept(Object) [bci: 5]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
value: a955 
=== Succesors ===
=== Usages ===
v2161 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a955  <|@  <|@
f <@*|@fixed>@ <|@
tid v2161 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:156) [bci: 15]
at org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance$$Lambda$21.340690072.accept(Object) [bci: 5]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v1546 
=== Succesors ===
trueSuccessor: v2160 
falseSuccessor: v2159 
=== Usages ===
=== Predecessor ===
v99 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1546 #trueSuccessor: v2160 #falseSuccessor: v2159  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v162|QWORD[.], y: v162|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B174 -> B175 falseDestination: B174 -> B176 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B175"
    from_bci -1
    to_bci -1
    predecessors "B174" 
    successors "B178" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573898163745688762
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2160 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:157) [bci: 18]
at org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance$$Lambda$21.340690072.accept(Object) [bci: 5]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2412 
=== Usages ===
=== Predecessor ===
v2161 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2412  <|@  <|@
f <@*|@fixed>@ <|@
tid v2412 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance$$Lambda$21.340690072.accept(Object) [bci: 5]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2410 
=== Predecessor ===
v2160 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B175 -> B178 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B176"
    from_bci -1
    to_bci -1
    predecessors "B174" 
    successors "B177" "B181" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588314980326800979
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2159 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:160) [bci: 29]
at org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance$$Lambda$21.340690072.accept(Object) [bci: 5]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2875 
=== Usages ===
=== Predecessor ===
v2161 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2875  <|@  <|@
f <@~|@floating>@ <|@
tid v2955 <|@
result [v162|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a955 
index: - 
=== Succesors ===
=== Usages ===
v2875 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a955 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2875 <|@
result v163|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:161) [bci: 40]
at org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance$$Lambda$21.340690072.accept(Object) [bci: 5]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2955 
=== Succesors ===
next: v2876 
=== Usages ===
v2920 
=== Predecessor ===
v2159 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2955 #next: v2876  <|@  <|@
f <@~|@floating>@ <|@
tid v2920 <|@
result [v163|DWORD * 8 + 48] <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v2875 
=== Succesors ===
=== Usages ===
v2876 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v2875  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2876 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: PrimarySupers:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:162) [bci: 54]
at org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance$$Lambda$21.340690072.accept(Object) [bci: 5]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
nullCheck: false
stamp: Klass*
=== Inputs ===
stateBefore: - 
guard: - 
address: v2920 
=== Succesors ===
next: v2794 
=== Usages ===
v2165 
=== Predecessor ===
v2875 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2920 #next: v2794  <|@  <|@
f <@~|@floating>@ <|@
tid v2165 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:162) [bci: 58]
at org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance$$Lambda$21.340690072.accept(Object) [bci: 5]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2876 
y: v1995 
=== Succesors ===
=== Usages ===
v2794 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2876 y: v1995  <|@  <|@
f <@*|@fixed>@ <|@
tid v2794 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance$$Lambda$21.340690072.accept(Object) [bci: 5]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2165 
=== Succesors ===
trueSuccessor: v2793 
falseSuccessor: v1893 
=== Usages ===
=== Predecessor ===
v2876 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2165 #trueSuccessor: v2793 #falseSuccessor: v1893  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v163|DWORD = MOV [v162|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v27|QWORD, y: [v163|DWORD * 8 + 48]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B176 -> B177 falseDestination: B176 -> B181 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B177"
    from_bci -1
    to_bci -1
    predecessors "B176" 
    successors "B178" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588314980326800979
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2793 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance$$Lambda$21.340690072.accept(Object) [bci: 5]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2421 
=== Usages ===
=== Predecessor ===
v2794 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2421  <|@  <|@
f <@*|@fixed>@ <|@
tid v2421 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance$$Lambda$21.340690072.accept(Object) [bci: 5]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2410 
=== Predecessor ===
v2793 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B177 -> B178 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B178"
    from_bci -1
    to_bci -1
    predecessors "B175" "B177" 
    successors "B179" "B180" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589194509158168565
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2410 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance$$Lambda$21.340690072.accept(Object) [bci: 5]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2412 v2421 
=== Succesors ===
next: a2877 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2412 v2421 #next: a2877  <|@  <|@
f <@~|@floating>@ <|@
tid v2981 <|@
result [v1|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a2877 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2877 <|@
result v164|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: 340690072.arg$1
nodeSourcePosition: at org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance$$Lambda$21.340690072.accept(Object) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
nullCheck: false
stamp: n Lorg/graalvm/compiler/graph/NodeWorkList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2981 
=== Succesors ===
next: v1899 
=== Usages ===
a1544 v1549 
=== Predecessor ===
v2410 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2981 #next: v1899  <|@  <|@
f <@~|@floating>@ <|@
tid v1549 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance$$Lambda$21.340690072.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
value: a2877 
=== Succesors ===
=== Usages ===
v1899 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2877  <|@  <|@
f <@*|@fixed>@ <|@
tid v1899 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance$$Lambda$21.340690072.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1549 
=== Succesors ===
trueSuccessor: v1898 
falseSuccessor: v1895 
=== Usages ===
=== Predecessor ===
a2877 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1549 #trueSuccessor: v1898 #falseSuccessor: v1895  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v164|DWORD[.] = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v164|DWORD[.], y: v164|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B178 -> B179 falseDestination: B178 -> B180 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B179"
    from_bci -1
    to_bci -1
    predecessors "B178" 
    successors "B182" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1898 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance$$Lambda$21.340690072.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v12 
=== Succesors ===
next: v2317 
=== Usages ===
=== Predecessor ===
v1899 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v12 #next: v2317  <|@  <|@
f <@~|@floating>@ <|@
tid i2318 <|@
result int[-396811|0xfffffffffff9f1f5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -396811
stableDimension: 0
stamp: i32 [-396811] ⇊00000000fff9f1f5 ⇈00000000fff9f1f5
stampKind: i32
value: int[-396811|0xfffffffffff9f1f5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2314 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2317 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2311 
=== Predecessor ===
v1898 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-396811|0xfffffffffff9f1f5]] destination: B179 -> B182 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B180"
    from_bci -1
    to_bci -1
    predecessors "B178" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4589194509158168565
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1895 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance$$Lambda$21.340690072.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v148 
=== Usages ===
=== Predecessor ===
v1899 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v148  <|@  <|@
f <@~|@floating>@ <|@
tid a1544 <|@
result v165|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance$$Lambda$21.340690072.accept(Object) [bci: 1]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
op: Uncompress
stamp: a Lorg/graalvm/compiler/graph/NodeWorkList;
=== Inputs ===
value: a2877 
=== Succesors ===
=== Usages ===
v1552 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2877  <|@  <|@
tid v1552 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance$$Lambda$21.340690072.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@41e30521
stamp: void
targetMethod: HotSpotMethod<NodeWorkList.add(Node)>
=== Inputs ===
arguments: a1544 a955 
=== Succesors ===
=== Usages ===
v148 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1544 a955  <|@  <|@
tid ?151 <|@
d <@d|@=== Debug Properties ===
bci: 30
code: ResolvedJavaMethodBytecode<Iterable.forEach(Consumer)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Iterable.java
sourceLine: 75
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a2 a38 - 
=== Succesors ===
=== Usages ===
?2221 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 a38 -  <|@  <|@
tid ?2221 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<340690072.accept(Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
stackSize: 0
=== Inputs ===
outerFrameState: ?151 
values: - - 
=== Succesors ===
=== Usages ===
v148 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?151 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v148 <|@
d <@d|@=== Debug Properties ===
bci: 8
nodeSourcePosition: at org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance$$Lambda$21.340690072.accept(Object) [bci: 8]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
polymorphic: false
stamp: void
targetMethod: Direct#NodeWorkList.add
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1552 
stateDuring: ?2221 
=== Succesors ===
next: v159 
=== Usages ===
=== Predecessor ===
v1895 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1552 stateDuring: ?2221 #next: v159  <|@  <|@
f <@*|@fixed>@ <|@
tid v159 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 1
nodeSourcePosition: at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
loopBegin: v12 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v148 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v12  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v165|QWORD[.] = UNCOMPRESSPOINTER (input: v164|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v165|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v162|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance$$Lambda$21.340690072.accept(Object) [bci: 8]
locals: - - 
java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
locals: - v1|QWORD[.] v24|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<NodeWorkList.add(Node)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:8, 30] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B180 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B181"
    from_bci -1
    to_bci -1
    predecessors "B176" 
    successors "B182" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1893 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance$$Lambda$21.340690072.accept(Object) [bci: 5]
at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v12 
=== Succesors ===
next: v2312 
=== Usages ===
=== Predecessor ===
v2794 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v12 #next: v2312  <|@  <|@
f <@~|@floating>@ <|@
tid i2313 <|@
result int[-396323|0xfffffffffff9f3dd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -396323
stableDimension: 0
stamp: i32 [-396323] ⇊00000000fff9f3dd ⇈00000000fff9f3dd
stampKind: i32
value: int[-396323|0xfffffffffff9f3dd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2314 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2312 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2311 
=== Predecessor ===
v1893 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-396323|0xfffffffffff9f3dd]] destination: B181 -> B182 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B182"
    from_bci -1
    to_bci -1
    predecessors "B181" "B179" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i2314 <|@
result v166|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-396811 - -396323] ⇊00000000fff9f1d5 ⇈00000000fff9f3fd
valueDescription: i32
=== Inputs ===
merge: v2311 
values: i2313 i2318 
=== Succesors ===
=== Usages ===
v2316 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2311 values: i2313 i2318  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2311 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2312 v2317 
=== Succesors ===
next: v2316 
=== Usages ===
i2314 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2312 v2317 #next: v2316  <|@  <|@
tid ?951 <|@
d <@d|@=== Debug Properties ===
bci: 27
code: ResolvedJavaMethodBytecode<Iterable.forEach(Consumer)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
rethrowException: false
sourceFile: Iterable.java
sourceLine: 74
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - a2 a38 - a955 
=== Succesors ===
=== Usages ===
v2316 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 a38 - a955  <|@  <|@
f <@*|@fixed>@ <|@
tid v2316 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?951 
actionAndReason: i2314 
speculation: a2233 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2311 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?951 actionAndReason: i2314 speculation: a2233  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v166|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v166|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Iterable.forEach(Iterable.java:74) [bci: 27]
stack: v162|QWORD[.] 
locals: - v1|QWORD[.] v24|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B183"
    from_bci -1
    to_bci -1
    predecessors "B173" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4583184113557415962
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v28 
=== Usages ===
=== Predecessor ===
v103 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v28  <|@  <|@
tid v1553 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Interface
nodeSourcePosition: at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@3f9f01c1
stamp: void
targetMethod: HotSpotMethod<Consumer.accept(Object)>
=== Inputs ===
arguments: a2 a955 
=== Succesors ===
=== Usages ===
v28 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2 a955  <|@  <|@
tid ?2220 <|@
d <@d|@=== Debug Properties ===
bci: 30
code: ResolvedJavaMethodBytecode<Iterable.forEach(Consumer)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Iterable.java
sourceLine: 75
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a2 a38 - 
=== Succesors ===
=== Usages ===
v28 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 a38 -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
bci: 30
nodeSourcePosition: at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
polymorphic: true
stamp: void
targetMethod: Direct#Consumer.accept
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1553 
stateDuring: ?2220 
=== Succesors ===
next: v30 
=== Usages ===
=== Predecessor ===
v102 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1553 stateDuring: ?2220 #next: v30  <|@  <|@
f <@*|@fixed>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.lang.Iterable.forEach(Iterable.java:74) [bci: 12]
stamp: void
=== Inputs ===
loopBegin: v12 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v28 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v12  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v162|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
locals: - v1|QWORD[.] v24|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Consumer.accept(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:30] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B183 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B184"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1794 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeUsageIterator; target_method=hasNext target_method_class=Lorg/graalvm/compiler/graph/NodeUsageIterator; position=at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v12 
=== Succesors ===
next: v1792 
=== Usages ===
=== Predecessor ===
v1795 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v12 #next: v1792  <|@  <|@
tid ?13 <|@
d <@d|@=== Debug Properties ===
bci: 12
code: ResolvedJavaMethodBytecode<Iterable.forEach(Consumer)>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Iterable.java
sourceLine: 74
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a2 a38 - 
=== Succesors ===
=== Usages ===
v1792 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 a38 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1792 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1363
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeUsageIterator; target_method=hasNext target_method_class=Lorg/graalvm/compiler/graph/NodeUsageIterator; position=at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
reason: TypeCheckedInliningViolated
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?13 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1794 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?13  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -348979 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Iterable.forEach(Iterable.java:74) [bci: 12]
locals: - v1|QWORD[.] v24|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B185"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1721 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeUsageIterable; target_method=iterator target_method_class=Lorg/graalvm/compiler/graph/NodeUsageIterable; position=at java.lang.Iterable.forEach(Iterable.java:74) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2236 
=== Usages ===
=== Predecessor ===
v1722 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2236  <|@  <|@
f <@~|@floating>@ <|@
tid i2240 <|@
result int[-400435|0xfffffffffff9e3cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -400435
stableDimension: 0
stamp: i32 [-400435] ⇊00000000fff9e3cd ⇈00000000fff9e3cd
stampKind: i32
value: int[-400435|0xfffffffffff9e3cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2236 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2236 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i2240 
speculation: a2233 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1721 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i2240 speculation: a2233  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -400435 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Iterable.forEach(Iterable.java:73) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@11aa1906 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Iterable.forEach(Iterable.java:73) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [v1|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/iterators/FilteredNodeIterable;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9129709784999646 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4606398531062421451
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[.] = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Iterable.forEach(Iterable.java:73) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v4|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.iterators.FilteredNodeIterable.iterator(FilteredNodeIterable.java:45) [bci: 8]
stack: vobject:PredicatedProxyNodeIterator:0{current=Object[null],iterator=Object[null],predicate=Object[null]} vobject:PredicatedProxyNodeIterator:0{current=Object[null],iterator=Object[null],predicate=Object[null]} 
locals: v0|QWORD[.] 
java.lang.Iterable.forEach(Iterable.java:74) [bci: 6]
locals: - v1|QWORD[.] - - 
vobject:PredicatedProxyNodeIterator:0{current=Object[null],iterator=Object[null],predicate=Object[null]} Lorg/graalvm/compiler/graph/iterators/PredicatedProxyNodeIterator; Object[null] Object[null] Object[null] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<NodeIterable.iterator()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:8, 6] <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = LEA [v7|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v8|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4606316297947250001
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v8|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v7|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v7|QWORD] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B2" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606398531062421451
    begin_IR
      LIR
      nr   -1  <|@ instruction [v10|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = MOVE v10|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/compiler/graph/iterators/PredicatedProxyNodeIterator;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOV [v12|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v10|QWORD[*]], y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/iterators/PredicatedProxyNodeIterator;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v10|QWORD[*] + 12], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD[.] = COMPRESSPOINTER (input: v6|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v10|QWORD[*] + 16], y: v14|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD[.] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v10|QWORD[*] + 20], y: v15|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v11|QWORD[.]] destination: B4 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B4" "B9" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v24|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = MOV [v24|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/compiler/graph/Node;, resolved>} <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B183" "B180" "B126" "B159" "B163" "B99" "B131" "B135" 
    successors "B12" "B79" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4610059043929207954
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v25|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/iterators/PredicatedProxyNodeIterator;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8217776767447147 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4608743723126947473
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v28|DWORD[.] = MOV [v24|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v28|DWORD[.]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4608069844909802966
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v29|DWORD[.] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B32" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4603566245282432470
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v30|DWORD[.] = MOV [v24|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 0]
locals: v24|QWORD[.] 
org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
locals: v24|QWORD[.] 
java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
locals: - v1|QWORD[.] v24|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v30|DWORD[.] * 8] state [bci:0, 1, 13] <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.] = UNCOMPRESSPOINTER (input: v30|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.] = UNCOMPRESSPOINTER (input: v29|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v31|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 25]
locals: v24|QWORD[.] 
org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
locals: v24|QWORD[.] 
java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
locals: - v1|QWORD[.] v24|QWORD[.] - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<NodePredicate.apply(Node)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:25, 1, 13] <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v33|DWORD, y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4599062645655061974
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" "B18" 
    successors "B20" "B25" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4611899566320028955
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|DWORD[.] = MOV [v24|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 33]
locals: v24|QWORD[.] 
org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
locals: v24|QWORD[.] 
java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
locals: - v1|QWORD[.] v24|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v34|DWORD[.] * 8] state [bci:33, 1, 13] <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 37]
locals: v24|QWORD[.] 
org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
locals: v24|QWORD[.] 
java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
locals: - v1|QWORD[.] v24|QWORD[.] - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Iterator.hasNext()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:37, 1, 13] <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v36|DWORD, y: v36|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" "B27" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4607395966692658459
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v40|DWORD[.] = MOV [v24|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 42]
stack: v36|DWORD 
locals: v24|QWORD[.] 
org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
locals: v24|QWORD[.] 
java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
locals: - v1|QWORD[.] v24|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v40|DWORD[.] * 8] state [bci:42, 1, 13] <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[.] = UNCOMPRESSPOINTER (input: v40|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v41|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 50]
stack: v24|QWORD[.] 
locals: v24|QWORD[.] 
org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
locals: v24|QWORD[.] 
java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
locals: - v1|QWORD[.] v24|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Iterator.next()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:50, 1, 13] <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v42|QWORD[.], y: v42|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B30" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4606666085081297201
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = MOV [v42|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v27|QWORD, y: [v43|DWORD * 8 + 48]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4606666085081297201
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4607395966692658459
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v44|DWORD[.] = COMPRESSPOINTER (input: v42|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD[.] + 12], y: v44|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[*] = SHR v24|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v45|QWORD[*] + v26|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v44|DWORD[.]] destination: B29 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B29" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4612573444537173462
    begin_IR
      LIR
      nr   -1  <|@ instruction [v29|DWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v29|DWORD[.], y: v29|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B19" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4608069844909802966
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B14 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4603566245282432470
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B16 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B29" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4592211856695183402
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B26 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607395966692658459
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|DWORD[.] = MOV [v24|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v37|DWORD[.], y: v37|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602892367065287963
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v37|DWORD[.] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598388767437917467
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = UNCOMPRESSPOINTER (input: v37|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v39|QWORD[.]] destination: B24 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B24" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599736523872206480
    begin_IR
      LIR
      nr   -1  <|@ instruction [v49|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v50|DWORD[.] = MOV [v24|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 64]
locals: v24|QWORD[.] 
org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
locals: v24|QWORD[.] 
java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
locals: - v1|QWORD[.] v24|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v50|DWORD[.] * 8] state [bci:64, 1, 13] <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = UNCOMPRESSPOINTER (input: v50|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 89]
locals: v24|QWORD[.] 
org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
locals: v24|QWORD[.] 
java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
locals: - v1|QWORD[.] v24|QWORD[.] - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<NodePredicate.apply(Node)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:89, 1, 13] <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v52|DWORD, y: v52|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595232924244835984
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v53|DWORD[.] = MOV [v24|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = UNCOMPRESSPOINTER (input: v53|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v54|QWORD[.]] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B33" "B21" 
    successors "B41" "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4605756349488152116
    begin_IR
      LIR
      nr   -1  <|@ instruction [v55|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v55|QWORD[.], y: v55|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.610225267647409 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599581485706735098
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v55|QWORD[.]] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4598924833952420745
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v56|QWORD[.] + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B45 -> B46 falseDestination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B64" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4594421234325050249
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v57|DWORD[.] = MOV [v24|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 0]
locals: v24|QWORD[.] 
org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
locals: v24|QWORD[.] - 
org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
locals: - 
java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
locals: - v1|QWORD[.] v24|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v57|DWORD[.] * 8] state [bci:0, 1, 1, 22] <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = UNCOMPRESSPOINTER (input: v57|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v58|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v56|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 25]
locals: v24|QWORD[.] 
org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
locals: v24|QWORD[.] - 
org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
locals: - 
java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
locals: - v1|QWORD[.] v24|QWORD[.] - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<NodePredicate.apply(Node)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:25, 1, 1, 22] <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v59|DWORD, y: v59|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4589917634697679753
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B44" "B46" "B48" 
    successors "B50" "B53" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4602771781825476888
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v60|DWORD[.] = MOV [v24|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 33]
locals: v24|QWORD[.] 
org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
locals: v24|QWORD[.] - 
org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
locals: - 
java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
locals: - v1|QWORD[.] v24|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v60|DWORD[.] * 8] state [bci:33, 1, 1, 22] <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[.] = UNCOMPRESSPOINTER (input: v60|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v61|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 37]
locals: v24|QWORD[.] 
org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
locals: v24|QWORD[.] - 
org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
locals: - 
java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
locals: - v1|QWORD[.] v24|QWORD[.] - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Iterator.hasNext()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:37, 1, 1, 22] <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v62|DWORD, y: v62|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B54" "B57" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4598268182198106392
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v64|DWORD[.] = MOV [v24|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v64|DWORD[.], y: v64|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B58" "B59" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4598268182198106392
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = UNCOMPRESSPOINTER (input: v64|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v66|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 50]
stack: v24|QWORD[.] 
locals: v24|QWORD[.] 
org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
locals: v24|QWORD[.] - 
org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
locals: - 
java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
locals: - v1|QWORD[.] v24|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Iterator.next()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:50, 1, 1, 22] <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v67|QWORD[.], y: v67|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B62" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4597441832394896274
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v68|DWORD = MOV [v67|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v27|QWORD, y: [v68|DWORD * 8 + 48]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4597441832394896274
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B58" "B60" 
    successors "B43" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4598268182198106392
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v69|DWORD[.] = COMPRESSPOINTER (input: v67|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD[.] + 12], y: v69|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[*] = SHR v24|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v70|QWORD[*] + v26|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v67|QWORD[.]] destination: B61 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B61" 
    successors "B44" "B45" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4603428433579791241
    begin_IR
      LIR
      nr   -1  <|@ instruction [v56|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v56|QWORD[.], y: v56|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B49" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4598924833952420745
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B44 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B49" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4594421234325050249
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B46 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B61" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4583011721056744690
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B58 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B40" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602892367065287963
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = UNCOMPRESSPOINTER (input: v37|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v38|QWORD[.]] destination: B21 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B33" "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599062645655061974
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v46|DWORD[.] = MOV [v24|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v46|DWORD[.], y: v46|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594559046027691478
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v46|DWORD[.] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590055446400320982
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v46|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v48|QWORD[.]] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B80" "B184" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598932903126947845
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v25|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeUsageIterator;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B184 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B81" "B84" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598932903126947845
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v80|DWORD[.] = MOV [v24|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v80|DWORD[.], y: v80|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.610225267647409 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B85" "B172" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592867281681706917
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
locals: - v1|QWORD[.] v24|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Iterator.next()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:22] <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP [v1|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$90/1190971543;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5456716749520927 condition: = trueDestination: B84 -> B85 falseDestination: B84 -> B172 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B86" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589112958858568504
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v81|QWORD[.]] destination: B85 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" "B77" 
    successors "B87" "B88" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592365335938284452
    begin_IR
      LIR
      nr   -1  <|@ instruction [v82|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v82|QWORD[.], y: v82|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B86 -> B87 falseDestination: B86 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B89" "B170" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591595244410772500
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v82|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/nodes/FrameState;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B88 -> B89 falseDestination: B88 -> B170 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591595244410772500
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B87" "B89" 
    successors "B91" "B92" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592365335938284452
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v82|QWORD[.], y: v82|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B90 -> B91 falseDestination: B90 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B93" "B94" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592365335938284452
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v83|DWORD[.] = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v83|DWORD[.], y: v83|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B92 -> B93 falseDestination: B92 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B95" "B96" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592365335938284452
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v84|DWORD[.] = MOV [v83|DWORD[.] * 8 + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v84|DWORD[.], y: v84|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B94 -> B95 falseDestination: B94 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" "B169" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592365335938284452
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = MOV [v84|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = MOV [v82|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = SAR v86|DWORD y: 6 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v85|DWORD, y: v87|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B96 -> B97 falseDestination: B96 -> B169 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B98" "B101" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592365335938284452
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v88|QWORD[.] = UNCOMPRESSPOINTER (input: v84|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v90|QWORD = MOVE input: long[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v86|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v89|QWORD = SHL (x: v90|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v91|QWORD = OR (x: v89|QWORD, ~y: [v88|QWORD[.] + v87|DWORD * 8 + 16]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v88|QWORD[.] + v87|DWORD * 8 + 16], y: v91|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v92|DWORD[.] = MOV [v82|QWORD[.] + 68] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v93|DWORD[.] = MOV [v82|QWORD[.] + 80] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v93|DWORD[.], y: v93|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B97 -> B98 falseDestination: B97 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B102" "B103" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587861736310913956
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v95|DWORD[.] = MOV [v93|DWORD[.] * 8 + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v95|DWORD[.], y: v95|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" "B105" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587861736310913956
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v97|DWORD = MOV [v93|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v97|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B103 -> B104 falseDestination: B103 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B106" "B165" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583358136683543460
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v98|DWORD = MOV [v95|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v99|QWORD = MOVSXD v97|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v100|QWORD = DEC v99|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v101|QWORD = MOV v98|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v101|QWORD, y: v100|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B105 -> B106 falseDestination: B105 -> B165 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B107" "B108" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583358136683543460
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v98|DWORD, y: v98|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B106 -> B107 falseDestination: B106 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B109" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583358136683543460
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B108 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B104" "B108" 
    successors "B110" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587861736310913956
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v102|DWORD = MOV [v93|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B109 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B112" "B113" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4587861736310913956
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v104|QWORD[.] = UNCOMPRESSPOINTER (input: v95|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v105|DWORD[.] = MOV [v104|QWORD[.] + v103|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v105|DWORD[.], y: v105|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B111 -> B112 falseDestination: B111 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" "B122" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4587091644783402004
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v173|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/compiler/nodes/virtual/EscapeObjectState;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = MOV [v105|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v173|QWORD, y: [v106|DWORD * 8 + 64]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B113 -> B114 falseDestination: B113 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B115" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4587091644783402004
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B114 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B112" "B114" 
    successors "B116" "B118" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4587861736310913956
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v105|DWORD[.], y: v105|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B115 -> B116 falseDestination: B115 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B119" "B120" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4587861736310913956
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v107|DWORD = MOV [v105|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v108|DWORD = SAR v107|DWORD y: 6 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v85|DWORD, y: v108|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B118 -> B119 falseDestination: B118 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B110" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 2
    probability 4587861736310913956
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v110|QWORD = MOVE input: long[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v107|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v109|QWORD = SHL (x: v110|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v111|QWORD = OR (x: v109|QWORD, ~y: [v88|QWORD[.] + v108|DWORD * 8 + 16]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v88|QWORD[.] + v108|DWORD * 8 + 16], y: v111|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = INC v103|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v112|DWORD] destination: B119 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" "B119" 
    successors "B111" "B125" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 2
    probability 4592365335938284452
    begin_IR
      LIR
      nr   -1  <|@ instruction [v103|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v97|DWORD, y: v103|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B110 -> B111 falseDestination: B110 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B115" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4572810754373778562
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B112 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598268182198106392
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v63|DWORD[.] = MOV [v24|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v63|DWORD[.], y: v63|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598268182198106392
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v63|DWORD[.]] destination: B52 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B52" 
    successors "B68" "B69" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599581485706735098
    begin_IR
      LIR
      nr   -1  <|@ instruction [v72|DWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 64]
locals: v24|QWORD[.] 
org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
locals: v24|QWORD[.] - 
org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
locals: - 
java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
locals: - v1|QWORD[.] v24|QWORD[.] - 
>@ <|@ instruction CMP [v72|DWORD[.] * 8 + 12] y: 0 size: DWORD state [bci:64, 1, 1, 22] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B67 -> B68 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595077886079364602
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v73|DWORD[.] = MOV [v24|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v73|DWORD[.], y: v73|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" "B74" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595077886079364602
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = UNCOMPRESSPOINTER (input: v73|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = UNCOMPRESSPOINTER (input: v72|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v74|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v75|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 89]
locals: v24|QWORD[.] 
org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
locals: v24|QWORD[.] - 
org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
locals: - 
java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
locals: - v1|QWORD[.] v24|QWORD[.] - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<NodePredicate.apply(Node)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:89, 1, 1, 22] <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v76|DWORD, y: v76|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590574286451994106
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v78|DWORD[.] = MOV [v24|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v78|DWORD[.], y: v78|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590574286451994106
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD[.] + 12], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.] = UNCOMPRESSPOINTER (input: v78|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP [v1|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$90/1190971543;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5456716749520927 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B86" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586610513763259408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v79|QWORD[.]] destination: B77 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B40" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594559046027691478
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[.] = UNCOMPRESSPOINTER (input: v46|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v47|QWORD[.]] destination: B33 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B65" "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589917634697679753
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v71|DWORD[.] = MOV [v24|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v71|DWORD[.], y: v71|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589917634697679753
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v71|DWORD[.]] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B126" "B127" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587861736310913956
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v92|DWORD[.], y: v92|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B125 -> B126 falseDestination: B125 -> B127 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B128" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583358136683543460
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B127 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B127" "B100" 
    successors "B129" "B164" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587861736310913956
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:659) [bci: 49]
locals: v82|QWORD[.] vobject:1492729447:0{arg$1=v83|DWORD[.]} - - 
org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
locals: - - 
org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
locals: - - 
java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
locals: - v1|QWORD[.] v24|QWORD[.] - 
vobject:1492729447:0{arg$1=v83|DWORD[.]} Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$92/1492729447; v83|DWORD[.] 
>@ <|@ instruction v114|DWORD = MOV [v92|DWORD[.] * 8 + 12] size: DWORD state [bci:49, 7, 8, 30] <|@ <|@
      nr   -1  <|@ instruction v115|DWORD = SAR v114|DWORD y: 6 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v85|DWORD, y: v115|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B128 -> B129 falseDestination: B128 -> B164 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B128" 
    successors "B130" "B136" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587861736310913956
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v117|QWORD = MOVE input: long[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v114|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v116|QWORD = SHL (x: v117|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v118|QWORD = OR (x: v116|QWORD, ~y: [v88|QWORD[.] + v115|DWORD * 8 + 16]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v88|QWORD[.] + v115|DWORD * 8 + 16], y: v118|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v119|DWORD[.] = MOV [v92|DWORD[.] * 8 + 80] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v119|DWORD[.], y: v119|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B129 -> B130 falseDestination: B129 -> B136 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B137" "B138" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583358136683543460
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v129|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v130|QWORD = LEA [v129|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v130|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B136 -> B137 falseDestination: B136 -> B138 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583281127530792265
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v130|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v129|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v129|QWORD] destination: B138 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B138" "B137" 
    successors "B140" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583358136683543460
    begin_IR
      LIR
      nr   -1  <|@ instruction [v132|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v133|QWORD[.] = MOVE v132|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v134|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeList$NodeListIterator;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v135|QWORD = MOV [v134|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v132|QWORD[*]], y: v135|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v132|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeList$NodeListIterator;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v136|DWORD = MOV [v119|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v132|QWORD[*] + 12], y: v136|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v132|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v132|QWORD[*] + 20], y: v119|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B139 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B142" "B143" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4583358136683543460
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v133|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 32]
locals: v92|DWORD[.] vobject:1492729447:0{arg$1=v83|DWORD[.]} v133|QWORD[.] - 
org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
locals: - - - - 
org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
locals: - - 
org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
locals: - - 
java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
locals: - v1|QWORD[.] v24|QWORD[.] - 
vobject:1492729447:0{arg$1=v83|DWORD[.]} Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$92/1492729447; v83|DWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<NodeList$NodeListIterator.next()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:32, 61, 7, 8, 30] <|@ <|@
      nr   -1  <|@ instruction v139|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v139|QWORD[.], y: v139|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B141 -> B142 falseDestination: B141 -> B143 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B144" "B155" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4582588045156031508
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v172|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/compiler/nodes/virtual/EscapeObjectState;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v140|DWORD = MOV [v139|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v172|QWORD, y: [v140|DWORD * 8 + 64]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B143 -> B144 falseDestination: B143 -> B155 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B143" 
    successors "B145" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4582588045156031508
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B144 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B142" "B144" 
    successors "B146" "B148" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4583358136683543460
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v139|QWORD[.], y: v139|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B145 -> B146 falseDestination: B145 -> B148 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B145" 
    successors "B149" "B151" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4583358136683543460
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v141|DWORD[.] = MOV [v83|DWORD[.] * 8 + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v141|DWORD[.], y: v141|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B148 -> B149 falseDestination: B148 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B148" 
    successors "B152" "B153" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4583358136683543460
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v142|DWORD = MOV [v141|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v143|DWORD = MOV [v139|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v144|DWORD = SAR v143|DWORD y: 6 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v142|DWORD, y: v144|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B151 -> B152 falseDestination: B151 -> B153 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B151" 
    successors "B140" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 2
    probability 4583358136683543460
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v145|QWORD[.] = UNCOMPRESSPOINTER (input: v141|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v147|QWORD = MOVE input: long[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v143|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v146|QWORD = SHL (x: v147|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v148|QWORD = OR (x: v146|QWORD, ~y: [v145|QWORD[.] + v144|DWORD * 8 + 16]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v145|QWORD[.] + v144|DWORD * 8 + 16], y: v148|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B152 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B139" "B152" 
    successors "B141" "B158" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 2
    probability 4587861736310913956
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v137|DWORD[.] = MOV [v133|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 22]
locals: v92|DWORD[.] vobject:1492729447:0{arg$1=v83|DWORD[.]} v133|QWORD[.] - 
org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
locals: - - - - 
org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
locals: - - 
org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
locals: - - 
java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
locals: - v1|QWORD[.] v24|QWORD[.] - 
vobject:1492729447:0{arg$1=v83|DWORD[.]} Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$92/1492729447; v83|DWORD[.] 
>@ <|@ instruction v138|DWORD = MOV [v137|DWORD[.] * 8 + 16] size: DWORD state [bci:22, 61, 7, 8, 30] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v138|DWORD, y: [v133|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B140 -> B141 falseDestination: B140 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B145" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4568307154746408066
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B142 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B99" "B100" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587861736310913956
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v92|DWORD[.], y: v92|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B98 -> B99 falseDestination: B98 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B128" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583358136683543460
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B100 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B172"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B173" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587614405250104338
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v81|QWORD[.]] destination: B172 -> B173 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B173"
    from_bci -1
    to_bci -1
    predecessors "B172" "B78" 
    successors "B174" "B183" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591076232195416571
    begin_IR
      LIR
      nr   -1  <|@ instruction [v162|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v1|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/phases/common/CanonicalizerPhase$Instance$$Lambda$21/340690072;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7065224035699004 condition: = trueDestination: B173 -> B174 falseDestination: B173 -> B183 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B174"
    from_bci -1
    to_bci -1
    predecessors "B173" 
    successors "B175" "B176" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589194509158168565
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v162|QWORD[.], y: v162|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B174 -> B175 falseDestination: B174 -> B176 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B176"
    from_bci -1
    to_bci -1
    predecessors "B174" 
    successors "B177" "B181" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588314980326800979
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v163|DWORD = MOV [v162|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v27|QWORD, y: [v163|DWORD * 8 + 48]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B176 -> B177 falseDestination: B176 -> B181 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B177"
    from_bci -1
    to_bci -1
    predecessors "B176" 
    successors "B178" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588314980326800979
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B177 -> B178 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B178"
    from_bci -1
    to_bci -1
    predecessors "B175" "B177" 
    successors "B179" "B180" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589194509158168565
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v164|DWORD[.] = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v164|DWORD[.], y: v164|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B178 -> B179 falseDestination: B178 -> B180 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B180"
    from_bci -1
    to_bci -1
    predecessors "B178" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4589194509158168565
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v165|QWORD[.] = UNCOMPRESSPOINTER (input: v164|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v165|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v162|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance$$Lambda$21.340690072.accept(Object) [bci: 8]
locals: - - 
java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
locals: - v1|QWORD[.] v24|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<NodeWorkList.add(Node)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:8, 30] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B180 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B173" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4585530859885987812
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v79|QWORD[.]] destination: B78 -> B173 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B109" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583358136683543460
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B104 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4583358136683543460
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:97) [bci: 44]
locals: v83|DWORD[.] - v86|DWORD 
org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
locals: - - 
org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
locals: vobject:1492729447:0{arg$1=v83|DWORD[.]} v82|QWORD[.] 
org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:653) [bci: 2]
locals: v82|QWORD[.] vobject:1492729447:0{arg$1=v83|DWORD[.]} - - 
org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
locals: - - 
org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
locals: - - 
java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
locals: - v1|QWORD[.] v24|QWORD[.] - 
vobject:1492729447:0{arg$1=v83|DWORD[.]} Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$92/1492729447; v83|DWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:44, 2, 5, 2, 7, 8, 30] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B99 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4583358136683543460
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 22]
locals: v82|QWORD[.] vobject:1492729447:0{arg$1=v83|DWORD[.]} vobject:NodeList$NodeListIterator:1{expectedModCount=v102|DWORD,index=v103|DWORD,list=v93|DWORD[.]} - 
org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
locals: - - 
org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
locals: - - 
java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
locals: - v1|QWORD[.] v24|QWORD[.] - 
vobject:1492729447:0{arg$1=v83|DWORD[.]} Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$92/1492729447; v83|DWORD[.] 
vobject:NodeList$NodeListIterator:1{expectedModCount=v102|DWORD,index=v103|DWORD,list=v93|DWORD[.]} Lorg/graalvm/compiler/graph/NodeList$NodeListIterator; v102|DWORD v103|DWORD v93|DWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:22, 7, 8, 30] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B126 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B131" "B132" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583358136683543460
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v121|DWORD[.] = MOV [v92|DWORD[.] * 8 + 68] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v121|DWORD[.], y: v121|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B130 -> B131 falseDestination: B130 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B130" 
    successors "B133" "B134" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4578854537056172964
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v122|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v123|QWORD = LEA [v122|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v123|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B132 -> B133 falseDestination: B132 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B135" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4578777527903421769
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v123|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v122|QWORD + 208] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v122|QWORD] destination: B134 -> B135 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" "B133" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4578854537056172964
    begin_IR
      LIR
      nr   -1  <|@ instruction [v125|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v175|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$92/1492729447;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v126|QWORD[.] = MOVE v125|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v127|QWORD = MOV [v175|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v125|QWORD[*]], y: v127|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v125|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$92/1492729447;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v125|QWORD[*] + 12], y: v83|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v128|QWORD[.] = UNCOMPRESSPOINTER (input: v121|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v128|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v126|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
locals: - - - - 
org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
locals: - - - - 
org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
locals: - - 
org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
locals: - - 
java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
locals: - v1|QWORD[.] v24|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FrameState.applyToVirtual(VirtualState$VirtualClosure)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:61, 61, 7, 8, 30] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B135 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B158"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B159" "B160" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583358136683543460
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v150|DWORD[.] = MOV [v92|DWORD[.] * 8 + 68] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v150|DWORD[.], y: v150|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B158 -> B159 falseDestination: B158 -> B160 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B160"
    from_bci -1
    to_bci -1
    predecessors "B158" 
    successors "B161" "B162" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4578854537056172964
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v151|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v152|QWORD = LEA [v151|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v152|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B160 -> B161 falseDestination: B160 -> B162 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B162"
    from_bci -1
    to_bci -1
    predecessors "B160" 
    successors "B163" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4578777527903421769
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v152|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v151|QWORD + 208] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v151|QWORD] destination: B162 -> B163 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B163"
    from_bci -1
    to_bci -1
    predecessors "B162" "B161" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4578854537056172964
    begin_IR
      LIR
      nr   -1  <|@ instruction [v154|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v174|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$92/1492729447;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v155|QWORD[.] = MOVE v154|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v156|QWORD = MOV [v174|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v154|QWORD[*]], y: v156|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v154|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$92/1492729447;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v154|QWORD[*] + 12], y: v83|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v157|QWORD[.] = UNCOMPRESSPOINTER (input: v150|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v157|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v155|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
locals: - - - - 
org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
locals: - - - - 
org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
locals: - - 
org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
locals: - - 
java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
locals: - v1|QWORD[.] v24|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FrameState.applyToVirtual(VirtualState$VirtualClosure)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:61, 61, 7, 8, 30] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B163 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B183"
    from_bci -1
    to_bci -1
    predecessors "B173" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4583184113557415962
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v162|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
locals: - v1|QWORD[.] v24|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Consumer.accept(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:30] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B183 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B130" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4578854537056172964
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:97) [bci: 44]
locals: v83|DWORD[.] - v114|DWORD 
org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
locals: - - 
org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
locals: vobject:1492729447:0{arg$1=v83|DWORD[.]} v92|DWORD[.] 
org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:653) [bci: 2]
locals: v92|DWORD[.] vobject:1492729447:0{arg$1=v83|DWORD[.]} - - 
org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
locals: - - - - 
org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
locals: - - 
org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
locals: - - 
java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
locals: - v1|QWORD[.] v24|QWORD[.] - 
vobject:1492729447:0{arg$1=v83|DWORD[.]} Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$92/1492729447; v83|DWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:44, 2, 5, 2, 61, 7, 8, 30] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B131 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B159"
    from_bci -1
    to_bci -1
    predecessors "B158" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4578854537056172964
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 22]
locals: v92|DWORD[.] vobject:1492729447:0{arg$1=v83|DWORD[.]} v133|QWORD[.] - 
org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
locals: - - - - 
org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
locals: - - 
org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
locals: - - 
java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
locals: - v1|QWORD[.] v24|QWORD[.] - 
vobject:1492729447:0{arg$1=v83|DWORD[.]} Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$92/1492729447; v83|DWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:22, 61, 7, 8, 30] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B159 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577314354001149058
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B87 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B175"
    from_bci -1
    to_bci -1
    predecessors "B174" 
    successors "B178" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573898163745688762
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B175 -> B178 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4553564209420277460
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v168|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v168|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:97) [bci: 44]
locals: v83|DWORD[.] - v114|DWORD 
org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
locals: - - 
org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
locals: vobject:1492729447:0{arg$1=v83|DWORD[.]} v92|DWORD[.] 
org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:653) [bci: 2]
locals: v92|DWORD[.] vobject:1492729447:0{arg$1=v83|DWORD[.]} - - 
org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
locals: - - - - 
org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
locals: - - 
org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
locals: - - 
java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
locals: - v1|QWORD[.] v24|QWORD[.] - 
vobject:1492729447:0{arg$1=v83|DWORD[.]} Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$92/1492729447; v83|DWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:44, 2, 5, 2, 61, 7, 8, 30] <|@ <|@
      nr   -1  <|@ instruction v131|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v131|QWORD[.]] destination: B137 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B135" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4549060609792906964
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v169|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v169|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:97) [bci: 44]
locals: v83|DWORD[.] - v114|DWORD 
org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
locals: - - 
org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
locals: vobject:1492729447:0{arg$1=v83|DWORD[.]} v92|DWORD[.] 
org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:653) [bci: 2]
locals: v92|DWORD[.] vobject:1492729447:0{arg$1=v83|DWORD[.]} - - 
org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
locals: - - - - 
org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
locals: - - 
org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
locals: - - 
java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
locals: - v1|QWORD[.] v24|QWORD[.] - 
vobject:1492729447:0{arg$1=v83|DWORD[.]} Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$92/1492729447; v83|DWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:44, 2, 5, 2, 61, 7, 8, 30] <|@ <|@
      nr   -1  <|@ instruction v124|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v124|QWORD[.]] destination: B133 -> B135 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B161"
    from_bci -1
    to_bci -1
    predecessors "B160" 
    successors "B163" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4549060609792906964
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v167|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v167|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 22]
locals: v92|DWORD[.] vobject:1492729447:0{arg$1=v83|DWORD[.]} v133|QWORD[.] - 
org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
locals: - - - - 
org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
locals: - - 
org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
locals: - - 
java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
locals: - v1|QWORD[.] v24|QWORD[.] - 
vobject:1492729447:0{arg$1=v83|DWORD[.]} Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$92/1492729447; v83|DWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:22, 61, 7, 8, 30] <|@ <|@
      nr   -1  <|@ instruction v153|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v153|QWORD[.]] destination: B161 -> B163 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B82" 
    xhandlers
    flags 
    probability 4602801416593737527
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B41 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" "B41" "B38" "B23" "B35" 
    successors "B83" 
    xhandlers
    flags 
    probability 4608068898668341784
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors 
    xhandlers
    flags 
    probability 4608068898668341784
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B82" 
    xhandlers
    flags 
    probability 4598388767437917467
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD[.] + 12], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B23 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B82" 
    xhandlers
    flags 
    probability 4595589156199348280
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B82" 
    xhandlers
    flags 
    probability 4595232924244835984
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD[.] + 12], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B38 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B73" 
    xhandlers
    flags 
    probability 4595077886079364602
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD[.] + 12], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-286908|0xfffffffffffb9f44]] destination: B68 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B68" "B72" 
    successors 
    xhandlers
    flags 
    probability 4598032818973779191
    begin_IR
      LIR
      nr   -1  <|@ instruction [v77|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v77|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:47) [bci: 102]
locals: - 
org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
locals: v24|QWORD[.] - 
org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
locals: - 
java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
locals: - v1|QWORD[.] v24|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:102, 1, 1, 22] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" "B185" 
    xhandlers
    flags 
    probability 4590935522563932584
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeUsageIterable;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B185 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4590935522563932584
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = LEA [v16|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v17|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4590872811544924907
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v17|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v16|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v16|QWORD] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4590935522563932584
    begin_IR
      LIR
      nr   -1  <|@ instruction [v19|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = MOVE v19|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeUsageIterator;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOV [v21|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v19|QWORD[*]], y: v22|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeUsageIterator;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[*] + 12] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD[.] = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v19|QWORD[*] + 16], y: v23|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v19|QWORD[*] + 20], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v20|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeUsageIterator.<init>(NodeUsageIterator.java:51) [bci: 15]
locals: - - 
org.graalvm.compiler.graph.NodeUsageIterable.iterator(NodeUsageIterable.java:44) [bci: 26]
stack: v20|QWORD[.] 
locals: - 
org.graalvm.compiler.graph.NodeUsageIterable.iterator(NodeUsageIterable.java:31) [bci: 1]
locals: - 
java.lang.Iterable.forEach(Iterable.java:74) [bci: 6]
locals: - v1|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<NodeUsageIterator.advance()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:15, 26, 1, 6] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v20|QWORD[.]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B73" 
    xhandlers
    flags 
    probability 4590574286451994106
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD[.] + 12], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-267196|0xfffffffffffbec44]] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B82" 
    xhandlers
    flags 
    probability 4590055446400320982
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD[.] + 12], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B35 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4576416541152026267
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v171|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v171|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.iterators.FilteredNodeIterable.iterator(FilteredNodeIterable.java:45) [bci: 13]
stack: vobject:PredicatedProxyNodeIterator:0{current=Object[null],iterator=Object[null],predicate=Object[null]} vobject:PredicatedProxyNodeIterator:0{current=Object[null],iterator=Object[null],predicate=Object[null]} v6|QWORD[.] 
locals: v0|QWORD[.] 
java.lang.Iterable.forEach(Iterable.java:74) [bci: 6]
locals: - v1|QWORD[.] - - 
vobject:PredicatedProxyNodeIterator:0{current=Object[null],iterator=Object[null],predicate=Object[null]} Lorg/graalvm/compiler/graph/iterators/PredicatedProxyNodeIterator; Object[null] Object[null] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:13, 6] <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v9|QWORD[.]] destination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4561166233704554063
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v170|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v170|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Iterable.forEach(Iterable.java:73) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v18|QWORD[.]] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -348604 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 94]
stack: v76|DWORD 
locals: v24|QWORD[.] 
org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
locals: v24|QWORD[.] - 
org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
locals: - 
java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
locals: - v1|QWORD[.] v24|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:94, 1, 1, 22] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B185"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -400435 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Iterable.forEach(Iterable.java:73) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B179"
    from_bci -1
    to_bci -1
    predecessors "B178" 
    successors "B182" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-396811|0xfffffffffff9f1f5]] destination: B179 -> B182 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B182"
    from_bci -1
    to_bci -1
    predecessors "B181" "B179" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v166|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v166|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Iterable.forEach(Iterable.java:74) [bci: 27]
stack: v162|QWORD[.] 
locals: - v1|QWORD[.] v24|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B121" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B120 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B124" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-371995|0xfffffffffffa52e5]] destination: B121 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B123" "B117" "B121" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v113|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v113|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 22]
locals: v82|QWORD[.] vobject:1492729447:0{arg$1=v83|DWORD[.]} vobject:NodeList$NodeListIterator:1{expectedModCount=v102|DWORD,index=v103|DWORD,list=v93|DWORD[.]} - 
org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
locals: - - 
org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
locals: - - 
java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
locals: - v1|QWORD[.] v24|QWORD[.] - 
vobject:1492729447:0{arg$1=v83|DWORD[.]} Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$92/1492729447; v83|DWORD[.] 
vobject:NodeList$NodeListIterator:1{expectedModCount=v102|DWORD,index=v103|DWORD,list=v93|DWORD[.]} Lorg/graalvm/compiler/graph/NodeList$NodeListIterator; v102|DWORD v103|DWORD v93|DWORD[.] 
>@ <|@ instruction DEOPT info [bci:22, 7, 8, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B169"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B171" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-357915|0xfffffffffffa89e5]] destination: B169 -> B171 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B171"
    from_bci -1
    to_bci -1
    predecessors "B170" "B91" "B93" "B95" "B169" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v161|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v161|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Iterable.forEach(Iterable.java:74) [bci: 27]
stack: v82|QWORD[.] 
locals: - v1|QWORD[.] v24|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B166" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B107 -> B166 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B166"
    from_bci -1
    to_bci -1
    predecessors "B165" "B107" 
    successors "B167" 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B166 -> B167 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B167"
    from_bci -1
    to_bci -1
    predecessors "B166" 
    successors "B168" 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v158|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@295001017] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-365083|0xfffffffffffa6de5], v158|QWORD[.]] destination: B167 -> B168 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B168"
    from_bci -1
    to_bci -1
    predecessors "B167" "B102" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v159|DWORD, v160|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v159|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v160|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:97) [bci: 44]
locals: v83|DWORD[.] - v86|DWORD 
org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
locals: - - 
org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
locals: vobject:1492729447:0{arg$1=v83|DWORD[.]} v82|QWORD[.] 
org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:653) [bci: 2]
locals: v82|QWORD[.] vobject:1492729447:0{arg$1=v83|DWORD[.]} - - 
org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
locals: - - 
org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
locals: - - 
java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
locals: - v1|QWORD[.] v24|QWORD[.] - 
vobject:1492729447:0{arg$1=v83|DWORD[.]} Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$92/1492729447; v83|DWORD[.] 
>@ <|@ instruction DEOPT info [bci:44, 2, 5, 2, 7, 8, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B148" 
    successors "B150" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B149 -> B150 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B149" 
    successors "B157" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-387851|0xfffffffffffa14f5]] destination: B150 -> B157 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B157"
    from_bci -1
    to_bci -1
    predecessors "B156" "B147" "B150" "B154" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v149|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v149|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 37]
stack: v139|QWORD[.] 
locals: v92|DWORD[.] vobject:1492729447:0{arg$1=v83|DWORD[.]} v133|QWORD[.] - 
org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
locals: - - - - 
org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
locals: - - 
org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
locals: - - 
java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
locals: - v1|QWORD[.] v24|QWORD[.] - 
vobject:1492729447:0{arg$1=v83|DWORD[.]} Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$92/1492729447; v83|DWORD[.] 
>@ <|@ instruction DEOPT info [bci:37, 61, 7, 8, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B170"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B171" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-351523|0xfffffffffffaa2dd]] destination: B170 -> B171 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B155"
    from_bci -1
    to_bci -1
    predecessors "B143" 
    successors "B156" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B155 -> B156 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B156"
    from_bci -1
    to_bci -1
    predecessors "B155" 
    successors "B157" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-386083|0xfffffffffffa1bdd]] destination: B156 -> B157 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-342795|0xfffffffffffac4f5]] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B51" "B55" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v65|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v65|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 42]
stack: v62|DWORD 
locals: v24|QWORD[.] 
org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
locals: v24|QWORD[.] - 
org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
locals: - 
java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
locals: - v1|QWORD[.] v24|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:42, 1, 1, 22] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B181"
    from_bci -1
    to_bci -1
    predecessors "B176" 
    successors "B182" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-396323|0xfffffffffff9f3dd]] destination: B181 -> B182 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B171" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-354059|0xfffffffffffa98f5]] destination: B95 -> B171 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B56" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-297148|0xfffffffffffb7744]] destination: B51 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -334371 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 55]
stack: v24|QWORD[.] v42|QWORD[.] 
locals: v24|QWORD[.] 
org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
locals: v24|QWORD[.] 
java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
locals: - v1|QWORD[.] v24|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:55, 1, 13] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -297404 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 30]
stack: v59|DWORD 
locals: v24|QWORD[.] 
org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
locals: v24|QWORD[.] - 
org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
locals: - 
java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
locals: - v1|QWORD[.] v24|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:30, 1, 1, 22] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B122 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B124" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-368163|0xfffffffffffa61dd]] destination: B123 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -346891 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 64]
locals: v24|QWORD[.] 
org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
locals: v24|QWORD[.] - 
org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
locals: - 
java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
locals: - v1|QWORD[.] v24|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:64, 1, 1, 22] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B117" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B116 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B124" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-368395|0xfffffffffffa60f5]] destination: B117 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B165"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B166" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B165 -> B166 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B171" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-352011|0xfffffffffffaa0f5]] destination: B93 -> B171 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B145" 
    successors "B147" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B146 -> B147 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B157" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-386315|0xfffffffffffa1af5]] destination: B147 -> B157 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B171" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-351755|0xfffffffffffaa1f5]] destination: B91 -> B171 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B184"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -348979 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Iterable.forEach(Iterable.java:74) [bci: 12]
locals: - v1|QWORD[.] v24|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B164"
    from_bci -1
    to_bci -1
    predecessors "B128" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -377883 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:659) [bci: 49]
locals: v82|QWORD[.] vobject:1492729447:0{arg$1=v83|DWORD[.]} - - 
org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
locals: - - 
org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
locals: - - 
java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
locals: - v1|QWORD[.] v24|QWORD[.] - 
vobject:1492729447:0{arg$1=v83|DWORD[.]} Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$92/1492729447; v83|DWORD[.] 
>@ <|@ instruction DEOPT info [bci:49, 7, 8, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B168" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v96|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1280662813] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-363787|0xfffffffffffa72f5], v96|QWORD[.]] destination: B102 -> B168 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -344355 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 55]
stack: v24|QWORD[.] v67|QWORD[.] 
locals: v24|QWORD[.] 
org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
locals: v24|QWORD[.] - 
org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
locals: - 
java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
locals: - v1|QWORD[.] v24|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:55, 1, 1, 22] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B153"
    from_bci -1
    to_bci -1
    predecessors "B151" 
    successors "B154" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B153 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B154"
    from_bci -1
    to_bci -1
    predecessors "B153" 
    successors "B157" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-391451|0xfffffffffffa06e5]] destination: B154 -> B157 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokestatic  #0          // java.util.Objects.requireNonNull:(java.lang.Object)java.lang.Object
     4: pop           
     5: aload_0       
     6: invokeinterface#1, 1       // iterator:()java.util.Iterator
    11: astore_2      
    12: aload_2       
    13: invokeinterface#2, 1       // java.util.Iterator.hasNext:()boolean
    18: ifeq          38
    21: aload_2       
    22: invokeinterface#3, 1       // java.util.Iterator.next:()java.lang.Object
    27: astore_3      
    28: aload_1       
    29: aload_3       
    30: invokeinterface#4, 2       // java.util.function.Consumer.accept:(java.lang.Object)void
    35: goto          12
    38: return        
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@11aa1906 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:48]
live-base-pointers: []
java.lang.Iterable.forEach(Iterable.java:73) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [rdx|QWORD[.]] state [bci:0] <|@ <|@
      nr   10  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   12  <|@ instruction CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/iterators/FilteredNodeIterable;, resolved>;compressed} <|@ <|@
      nr   14  <|@ instruction BRANCH trueDestinationProbability: 0.9129709784999646 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4606398531062421451
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   20  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:48]
live-base-pointers: []
java.lang.Iterable.forEach(Iterable.java:73) [bci: 0]
locals: rsi|QWORD[.] stack:32|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   22  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3 <|@ <|@
      nr   24  <|@ instruction stack:40|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ st <@st|@reference-map: [stack:40, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.iterators.FilteredNodeIterable.iterator(FilteredNodeIterable.java:45) [bci: 8]
stack: vobject:PredicatedProxyNodeIterator:0{current=Object[null],iterator=Object[null],predicate=Object[null]} vobject:PredicatedProxyNodeIterator:0{current=Object[null],iterator=Object[null],predicate=Object[null]} 
locals: stack:40|QWORD[.] 
java.lang.Iterable.forEach(Iterable.java:74) [bci: 6]
locals: - stack:32|QWORD[.] - - 
vobject:PredicatedProxyNodeIterator:0{current=Object[null],iterator=Object[null],predicate=Object[null]} Lorg/graalvm/compiler/graph/iterators/PredicatedProxyNodeIterator; Object[null] Object[null] Object[null] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<NodeIterable.iterator()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:8, 6] <|@ <|@
      nr   30  <|@ instruction r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   34  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr   36  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   38  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4606316297947250001
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr   60  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0 <|@ <|@
      nr   62  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr   64  <|@ instruction r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   66  <|@ instruction JUMP ~[] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B2" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606398531062421451
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   70  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr   72  <|@ instruction r10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/compiler/graph/iterators/PredicatedProxyNodeIterator;, resolved>} <|@ <|@
      nr   74  <|@ instruction r10|QWORD = MOV [r10|QWORD + 168] size: QWORD <|@ <|@
      nr   76  <|@ instruction MOV (x: [rsi|QWORD[*]], y: r10|QWORD) size: QWORD <|@ <|@
      nr   78  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/iterators/PredicatedProxyNodeIterator;, resolved>;compressed} <|@ <|@
      nr   80  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   82  <|@ instruction r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3 <|@ <|@
      nr   84  <|@ instruction MOV (x: [rsi|QWORD[*] + 16], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr   86  <|@ instruction r10|DWORD[.] = MOV [r14|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   88  <|@ instruction MOV (x: [rsi|QWORD[*] + 20], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr   90  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   92  <|@ instruction JUMP ~[] destination: B4 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B4" "B9" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  168  <|@ instruction stack:40|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  170  <|@ instruction r11|DWORD = MOV [r10|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  172  <|@ instruction stack:44|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  174  <|@ instruction r8|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  176  <|@ instruction r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/compiler/graph/Node;, resolved>} <|@ <|@
      nr  178  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B183" "B180" "B126" "B159" "B163" "B99" "B131" "B135" 
    successors "B12" "B79" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4610059043929207954
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  182  <|@ instruction CMP r11|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/iterators/PredicatedProxyNodeIterator;, resolved>;compressed} <|@ <|@
      nr  184  <|@ instruction BRANCH trueDestinationProbability: 0.8217776767447147 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4608743723126947473
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  188  <|@ instruction rsi|DWORD[.] = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  190  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4608069844909802966
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  204  <|@ instruction CMP [rsi|DWORD[.] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  206  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B32" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4603566245282432470
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  214  <|@ instruction rcx|DWORD[.] = MOV [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  216  <|@ st <@st|@reference-map: [rcx:0, rsi:0, r10:0, stack:40, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 0]
locals: r10|QWORD[.] 
org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
locals: r10|QWORD[.] 
java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
locals: - stack:32|QWORD[.] r10|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rcx|DWORD[.] * 8] state [bci:0, 1, 13] <|@ <|@
      nr  218  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3 <|@ <|@
      nr  220  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3 <|@ <|@
      nr  222  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction rdx|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  226  <|@ st <@st|@reference-map: [stack:40, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 25]
locals: stack:40|QWORD[.] 
org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
locals: stack:40|QWORD[.] 
java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
locals: - stack:32|QWORD[.] stack:40|QWORD[.] - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<NodePredicate.apply(Node)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:25, 1, 13] <|@ <|@
      nr  228  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  230  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4599062645655061974
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  234  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  236  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" "B18" 
    successors "B20" "B25" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4611899566320028955
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  240  <|@ instruction rsi|DWORD[.] = MOV [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  242  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:40, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 33]
locals: r10|QWORD[.] 
org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
locals: r10|QWORD[.] 
java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
locals: - stack:32|QWORD[.] r10|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:33, 1, 13] <|@ <|@
      nr  244  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3 <|@ <|@
      nr  246  <|@ st <@st|@reference-map: [stack:40, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 37]
locals: stack:40|QWORD[.] 
org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
locals: stack:40|QWORD[.] 
java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
locals: - stack:32|QWORD[.] stack:40|QWORD[.] - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Iterator.hasNext()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:37, 1, 13] <|@ <|@
      nr  248  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  250  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" "B27" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4607395966692658459
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  296  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  298  <|@ instruction rsi|DWORD[.] = MOV [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  300  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:40, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 42]
stack: rax|DWORD 
locals: r10|QWORD[.] 
org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
locals: r10|QWORD[.] 
java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
locals: - stack:32|QWORD[.] r10|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:42, 1, 13] <|@ <|@
      nr  302  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3 <|@ <|@
      nr  304  <|@ st <@st|@reference-map: [stack:40, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 50]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] 
org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
locals: stack:40|QWORD[.] 
java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
locals: - stack:32|QWORD[.] stack:40|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Iterator.next()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:50, 1, 13] <|@ <|@
      nr  306  <|@ instruction TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  308  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B30" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4606666085081297201
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  322  <|@ instruction r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/compiler/graph/Node;, resolved>} <|@ <|@
      nr  324  <|@ instruction rsi|DWORD = MOV [rax|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  326  <|@ instruction CMP (x: r9|QWORD, y: [rsi|DWORD * 8 + 48]) size: QWORD <|@ <|@
      nr  328  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4606666085081297201
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  332  <|@ instruction r8|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  334  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4607395966692658459
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  340  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3 <|@ <|@
      nr  342  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  344  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  346  <|@ instruction MOVB (x: [rsi|QWORD[*] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  348  <|@ instruction rsi|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD <|@ <|@
      nr  350  <|@ instruction JUMP ~[] destination: B29 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B29" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4612573444537173462
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  194  <|@ instruction TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr  196  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B19" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4608069844909802966
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  200  <|@ instruction JUMP ~[] destination: B14 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4603566245282432470
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B16 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B29" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4592211856695183402
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  312  <|@ instruction r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/compiler/graph/Node;, resolved>} <|@ <|@
      nr  314  <|@ instruction r8|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  316  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction JUMP ~[] destination: B26 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607395966692658459
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  254  <|@ instruction r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/compiler/graph/Node;, resolved>} <|@ <|@
      nr  256  <|@ instruction r8|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  258  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction rsi|DWORD[.] = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  262  <|@ instruction TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr  264  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602892367065287963
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  276  <|@ instruction CMP [rsi|DWORD[.] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  278  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598388767437917467
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  288  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3 <|@ <|@
      nr  290  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  292  <|@ instruction JUMP ~[] destination: B24 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B24" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599736523872206480
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  412  <|@ instruction rsi|DWORD[.] = MOV [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  414  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0, stack:40, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 64]
locals: r10|QWORD[.] 
org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
locals: r10|QWORD[.] 
java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
locals: - stack:32|QWORD[.] r10|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:64, 1, 13] <|@ <|@
      nr  416  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3 <|@ <|@
      nr  418  <|@ st <@st|@reference-map: [stack:40, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 89]
locals: stack:40|QWORD[.] 
org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
locals: stack:40|QWORD[.] 
java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
locals: - stack:32|QWORD[.] stack:40|QWORD[.] - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<NodePredicate.apply(Node)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:89, 1, 13] <|@ <|@
      nr  420  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  422  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595232924244835984
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  434  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  436  <|@ instruction rsi|DWORD[.] = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  438  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3 <|@ <|@
      nr  440  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  442  <|@ instruction JUMP ~[] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B33" "B21" 
    successors "B41" "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4605756349488152116
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  446  <|@ instruction TEST (x: rsi|QWORD[.], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  448  <|@ instruction BRANCH trueDestinationProbability: 0.610225267647409 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599581485706735098
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  456  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  460  <|@ instruction JUMP ~[] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4598924833952420745
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  474  <|@ instruction CMP [rdx|QWORD[.] + 12] y: 0 size: DWORD <|@ <|@
      nr  476  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B45 -> B46 falseDestination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B64" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4594421234325050249
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  484  <|@ instruction rsi|DWORD[.] = MOV [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  486  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0, stack:40, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 0]
locals: r10|QWORD[.] 
org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
locals: r10|QWORD[.] - 
org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
locals: - 
java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
locals: - stack:32|QWORD[.] r10|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:0, 1, 1, 22] <|@ <|@
      nr  488  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3 <|@ <|@
      nr  490  <|@ st <@st|@reference-map: [stack:40, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 25]
locals: stack:40|QWORD[.] 
org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
locals: stack:40|QWORD[.] - 
org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
locals: - 
java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
locals: - stack:32|QWORD[.] stack:40|QWORD[.] - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<NodePredicate.apply(Node)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:25, 1, 1, 22] <|@ <|@
      nr  492  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  494  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4589917634697679753
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  498  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  500  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B44" "B46" "B48" 
    successors "B50" "B53" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4602771781825476888
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  504  <|@ instruction rsi|DWORD[.] = MOV [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  506  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:40, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 33]
locals: r10|QWORD[.] 
org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
locals: r10|QWORD[.] - 
org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
locals: - 
java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
locals: - stack:32|QWORD[.] r10|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:33, 1, 1, 22] <|@ <|@
      nr  508  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3 <|@ <|@
      nr  510  <|@ st <@st|@reference-map: [stack:40, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 37]
locals: stack:40|QWORD[.] 
org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
locals: stack:40|QWORD[.] - 
org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
locals: - 
java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
locals: - stack:32|QWORD[.] stack:40|QWORD[.] - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Iterator.hasNext()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:37, 1, 1, 22] <|@ <|@
      nr  512  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  514  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B54" "B57" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4598268182198106392
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  542  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  544  <|@ instruction rsi|DWORD[.] = MOV [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  546  <|@ instruction TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr  548  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B58" "B59" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4598268182198106392
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  570  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3 <|@ <|@
      nr  572  <|@ st <@st|@reference-map: [stack:40, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 50]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] 
org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
locals: stack:40|QWORD[.] - 
org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
locals: - 
java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
locals: - stack:32|QWORD[.] stack:40|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Iterator.next()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:50, 1, 1, 22] <|@ <|@
      nr  574  <|@ instruction TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  576  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B62" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4597441832394896274
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  590  <|@ instruction r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/compiler/graph/Node;, resolved>} <|@ <|@
      nr  592  <|@ instruction rsi|DWORD = MOV [rax|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  594  <|@ instruction CMP (x: r9|QWORD, y: [rsi|DWORD * 8 + 48]) size: QWORD <|@ <|@
      nr  596  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4597441832394896274
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  600  <|@ instruction r8|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  602  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  604  <|@ instruction JUMP ~[] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B58" "B60" 
    successors "B43" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4598268182198106392
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  608  <|@ instruction rsi|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3 <|@ <|@
      nr  610  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr  612  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  614  <|@ instruction MOVB (x: [rsi|QWORD[*] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  616  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  618  <|@ instruction JUMP ~[] destination: B61 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B61" 
    successors "B44" "B45" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4603428433579791241
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  464  <|@ instruction TEST (x: rdx|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  466  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B49" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4598924833952420745
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  470  <|@ instruction JUMP ~[] destination: B44 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B49" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4594421234325050249
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  480  <|@ instruction JUMP ~[] destination: B46 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B61" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4583011721056744690
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  580  <|@ instruction r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/compiler/graph/Node;, resolved>} <|@ <|@
      nr  582  <|@ instruction r8|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  584  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  586  <|@ instruction JUMP ~[] destination: B58 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B40" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602892367065287963
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  268  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3 <|@ <|@
      nr  270  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  272  <|@ instruction JUMP ~[] destination: B21 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B33" "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599062645655061974
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  368  <|@ instruction r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/compiler/graph/Node;, resolved>} <|@ <|@
      nr  370  <|@ instruction r8|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  372  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction r11|DWORD[.] = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  376  <|@ instruction TEST (x: r11|DWORD[.], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr  378  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594559046027691478
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  392  <|@ instruction CMP [r11|DWORD[.] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  394  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590055446400320982
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  404  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3 <|@ <|@
      nr  406  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  408  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B80" "B184" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598932903126947845
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  766  <|@ instruction CMP stack:44|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeUsageIterator;, resolved>;compressed} <|@ <|@
      nr  768  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B184 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B81" "B84" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598932903126947845
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  772  <|@ instruction rsi|DWORD[.] = MOV [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  774  <|@ instruction TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr  776  <|@ instruction BRANCH trueDestinationProbability: 0.610225267647409 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B85" "B172" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592867281681706917
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  792  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  794  <|@ st <@st|@reference-map: [stack:40, stack:48]
live-base-pointers: []
java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
locals: - stack:32|QWORD[.] stack:40|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Iterator.next()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:22] <|@ <|@
      nr  796  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  798  <|@ instruction CMP [rdx|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$90/1190971543;, resolved>;compressed} <|@ <|@
      nr  800  <|@ instruction BRANCH trueDestinationProbability: 0.5456716749520927 condition: = trueDestination: B84 -> B85 falseDestination: B84 -> B172 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B86" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589112958858568504
    begin_IR
      LIR
      nr  802  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  804  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  806  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  808  <|@ instruction JUMP ~[] destination: B85 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" "B77" 
    successors "B87" "B88" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592365335938284452
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  812  <|@ instruction stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  814  <|@ instruction TEST (x: rsi|QWORD[.], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  816  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B86 -> B87 falseDestination: B86 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B89" "B170" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591595244410772500
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  824  <|@ instruction CMP [rsi|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/nodes/FrameState;, resolved>;compressed} <|@ <|@
      nr  826  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B88 -> B89 falseDestination: B88 -> B170 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591595244410772500
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  830  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B87" "B89" 
    successors "B91" "B92" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592365335938284452
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  834  <|@ instruction TEST (x: rsi|QWORD[.], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  836  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B90 -> B91 falseDestination: B90 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B93" "B94" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592365335938284452
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  848  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  850  <|@ instruction r10|DWORD[.] = MOV [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  852  <|@ instruction stack:60|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  854  <|@ instruction TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr  856  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B92 -> B93 falseDestination: B92 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B95" "B96" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592365335938284452
    begin_IR
      LIR
      nr  866  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  868  <|@ instruction rcx|DWORD[.] = MOV [r10|DWORD[.] * 8 + 28] size: DWORD <|@ <|@
      nr  870  <|@ instruction TEST (x: rcx|DWORD[.], y: rcx|DWORD[.]) size: DWORD <|@ <|@
      nr  872  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B94 -> B95 falseDestination: B94 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" "B169" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592365335938284452
    begin_IR
      LIR
      nr  882  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  884  <|@ instruction r11|DWORD = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  886  <|@ instruction r8|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  888  <|@ instruction r9|DWORD = SAR r8|DWORD y: 6 size: DWORD <|@ <|@
      nr  890  <|@ instruction CMP (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  892  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B96 -> B97 falseDestination: B96 -> B169 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B98" "B101" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592365335938284452
    begin_IR
      LIR
      nr  894  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  896  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3 <|@ <|@
      nr  898  <|@ instruction rdi|QWORD = MOVE input: long[1|0x1] <|@ <|@
      nr  900  <|@ instruction rcx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  902  <|@ instruction rdi|QWORD = SHL (x: rdi|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr  904  <|@ instruction rdi|QWORD = OR (x: rdi|QWORD, ~y: [rbx|QWORD[.] + r9|DWORD * 8 + 16]) size: QWORD <|@ <|@
      nr  906  <|@ instruction MOV (x: [rbx|QWORD[.] + r9|DWORD * 8 + 16], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  908  <|@ instruction r9|DWORD[.] = MOV [rsi|QWORD[.] + 68] size: DWORD <|@ <|@
      nr  910  <|@ instruction rdi|DWORD[.] = MOV [rsi|QWORD[.] + 80] size: DWORD <|@ <|@
      nr  912  <|@ instruction TEST (x: rdi|DWORD[.], y: rdi|DWORD[.]) size: DWORD <|@ <|@
      nr  914  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B97 -> B98 falseDestination: B97 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B102" "B103" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587861736310913956
    begin_IR
      LIR
      nr  936  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  938  <|@ instruction rax|DWORD[.] = MOV [rdi|DWORD[.] * 8 + 28] size: DWORD <|@ <|@
      nr  940  <|@ instruction TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  942  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" "B105" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587861736310913956
    begin_IR
      LIR
      nr  956  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  958  <|@ instruction rbp|DWORD = MOV [rdi|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  960  <|@ instruction CMP rbp|DWORD y: 1 size: DWORD <|@ <|@
      nr  962  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B103 -> B104 falseDestination: B103 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B106" "B165" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583358136683543460
    begin_IR
      LIR
      nr  968  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  970  <|@ instruction rcx|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  972  <|@ instruction r13|QWORD = MOVSXD rbp|DWORD size: QWORD <|@ <|@
      nr  974  <|@ instruction r13|QWORD = DEC r13|QWORD size: QWORD <|@ <|@
      nr  976  <|@ instruction r14|QWORD = MOV rcx|DWORD size: DWORD <|@ <|@
      nr  978  <|@ instruction CMP (x: r14|QWORD, y: r13|QWORD) size: QWORD <|@ <|@
      nr  980  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B105 -> B106 falseDestination: B105 -> B165 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B107" "B108" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583358136683543460
    begin_IR
      LIR
      nr  982  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  984  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  986  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B106 -> B107 falseDestination: B106 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B109" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583358136683543460
    begin_IR
      LIR
      nr  994  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  996  <|@ instruction JUMP ~[] destination: B108 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B104" "B108" 
    successors "B110" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587861736310913956
    begin_IR
      LIR
      nr  998  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1000  <|@ instruction r8|DWORD = MOV [rdi|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr 1002  <|@ instruction r13|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1004  <|@ instruction JUMP ~[] destination: B109 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B112" "B113" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4587861736310913956
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 1014  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3 <|@ <|@
      nr 1016  <|@ instruction rcx|DWORD[.] = MOV [rcx|QWORD[.] + r13|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1018  <|@ instruction TEST (x: rcx|DWORD[.], y: rcx|DWORD[.]) size: DWORD <|@ <|@
      nr 1020  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B111 -> B112 falseDestination: B111 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" "B122" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4587091644783402004
    begin_IR
      LIR
      nr 1026  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1028  <|@ instruction r14|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/compiler/nodes/virtual/EscapeObjectState;, resolved>} <|@ <|@
      nr 1030  <|@ instruction rsi|DWORD = MOV [rcx|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr 1032  <|@ instruction CMP (x: r14|QWORD, y: [rsi|DWORD * 8 + 64]) size: QWORD <|@ <|@
      nr 1034  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B113 -> B114 falseDestination: B113 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B115" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4587091644783402004
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1038  <|@ instruction JUMP ~[] destination: B114 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B112" "B114" 
    successors "B116" "B118" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4587861736310913956
    begin_IR
      LIR
      nr 1040  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1042  <|@ instruction TEST (x: rcx|DWORD[.], y: rcx|DWORD[.]) size: DWORD <|@ <|@
      nr 1044  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B115 -> B116 falseDestination: B115 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B119" "B120" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4587861736310913956
    begin_IR
      LIR
      nr 1058  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1060  <|@ instruction rcx|DWORD = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr 1062  <|@ instruction rsi|DWORD = SAR rcx|DWORD y: 6 size: DWORD <|@ <|@
      nr 1064  <|@ instruction CMP (x: r11|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1066  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B118 -> B119 falseDestination: B118 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B110" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 2
    probability 4587861736310913956
    begin_IR
      LIR
      nr 1068  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1070  <|@ instruction r14|QWORD = MOVE input: long[1|0x1] <|@ <|@
      nr 1072  <|@ instruction r14|QWORD = SHL (x: r14|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr 1074  <|@ instruction r14|QWORD = OR (x: r14|QWORD, ~y: [rbx|QWORD[.] + rsi|DWORD * 8 + 16]) size: QWORD <|@ <|@
      nr 1076  <|@ instruction MOV (x: [rbx|QWORD[.] + rsi|DWORD * 8 + 16], y: r14|QWORD) size: QWORD <|@ <|@
      nr 1078  <|@ instruction r13|DWORD = INC r13|DWORD size: DWORD <|@ <|@
      nr 1080  <|@ instruction JUMP ~[] destination: B119 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" "B119" 
    successors "B111" "B125" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 2
    probability 4592365335938284452
    begin_IR
      LIR
      nr 1006  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1008  <|@ instruction CMP (x: rbp|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr 1010  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B110 -> B111 falseDestination: B110 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B115" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4572810754373778562
    begin_IR
      LIR
      nr 1022  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1024  <|@ instruction JUMP ~[] destination: B112 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598268182198106392
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  518  <|@ instruction r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/compiler/graph/Node;, resolved>} <|@ <|@
      nr  520  <|@ instruction r8|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  522  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  524  <|@ instruction rsi|DWORD[.] = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  526  <|@ instruction TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr  528  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598268182198106392
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  538  <|@ instruction JUMP ~[] destination: B52 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B52" 
    successors "B68" "B69" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599581485706735098
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  662  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:40, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 64]
locals: r10|QWORD[.] 
org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
locals: r10|QWORD[.] - 
org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
locals: - 
java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
locals: - stack:32|QWORD[.] r10|QWORD[.] - 
>@ <|@ instruction CMP [rsi|DWORD[.] * 8 + 12] y: 0 size: DWORD state [bci:64, 1, 1, 22] <|@ <|@
      nr  664  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B67 -> B68 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595077886079364602
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  676  <|@ instruction rdx|DWORD[.] = MOV [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  678  <|@ instruction TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr  680  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" "B74" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595077886079364602
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  692  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3 <|@ <|@
      nr  694  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3 <|@ <|@
      nr  696  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  698  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  700  <|@ st <@st|@reference-map: [stack:40, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 89]
locals: stack:40|QWORD[.] 
org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
locals: stack:40|QWORD[.] - 
org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
locals: - 
java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
locals: - stack:32|QWORD[.] stack:40|QWORD[.] - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<NodePredicate.apply(Node)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:89, 1, 1, 22] <|@ <|@
      nr  702  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  704  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590574286451994106
    begin_IR
      LIR
      nr  724  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  726  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  728  <|@ instruction rsi|DWORD[.] = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  730  <|@ instruction TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr  732  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590574286451994106
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  744  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  746  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  748  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3 <|@ <|@
      nr  750  <|@ instruction CMP [rdx|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$90/1190971543;, resolved>;compressed} <|@ <|@
      nr  752  <|@ instruction BRANCH trueDestinationProbability: 0.5456716749520927 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B86" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586610513763259408
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  756  <|@ instruction JUMP ~[] destination: B77 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B40" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594559046027691478
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  382  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  384  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3 <|@ <|@
      nr  386  <|@ instruction rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  388  <|@ instruction JUMP ~[] destination: B33 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B65" "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589917634697679753
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  636  <|@ instruction r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/compiler/graph/Node;, resolved>} <|@ <|@
      nr  638  <|@ instruction r8|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  640  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  642  <|@ instruction rsi|DWORD[.] = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  644  <|@ instruction TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr  646  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589917634697679753
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  658  <|@ instruction JUMP ~[] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B126" "B127" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587861736310913956
    begin_IR
      LIR
      nr 1114  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1116  <|@ instruction TEST (x: r9|DWORD[.], y: r9|DWORD[.]) size: DWORD <|@ <|@
      nr 1118  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B125 -> B126 falseDestination: B125 -> B127 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B128" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583358136683543460
    begin_IR
      LIR
      nr 1130  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1132  <|@ instruction JUMP ~[] destination: B127 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B127" "B100" 
    successors "B129" "B164" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587861736310913956
    begin_IR
      LIR
      nr 1134  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1136  <|@ st <@st|@reference-map: [rdx:0, rbx:0, r9:0, r10:0, stack:20, stack:24, stack:40, stack:48]
live-base-pointers: []
org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:659) [bci: 49]
locals: stack:56|QWORD[.] vobject:1492729447:0{arg$1=r10|DWORD[.]} - - 
org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
locals: - - 
org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
locals: - - 
java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
locals: - rdx|QWORD[.] stack:40|QWORD[.] - 
vobject:1492729447:0{arg$1=r10|DWORD[.]} Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$92/1492729447; r10|DWORD[.] 
>@ <|@ instruction r13|DWORD = MOV [r9|DWORD[.] * 8 + 12] size: DWORD state [bci:49, 7, 8, 30] <|@ <|@
      nr 1138  <|@ instruction rsi|DWORD = SAR r13|DWORD y: 6 size: DWORD <|@ <|@
      nr 1140  <|@ instruction CMP (x: r11|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1142  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B128 -> B129 falseDestination: B128 -> B164 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B128" 
    successors "B130" "B136" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587861736310913956
    begin_IR
      LIR
      nr 1144  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1146  <|@ instruction stack:64|DWORD[.] = MOVE r9|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1148  <|@ instruction r11|QWORD = MOVE input: long[1|0x1] <|@ <|@
      nr 1150  <|@ instruction rcx|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1152  <|@ instruction r11|QWORD = SHL (x: r11|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr 1154  <|@ instruction r11|QWORD = OR (x: r11|QWORD, ~y: [rbx|QWORD[.] + rsi|DWORD * 8 + 16]) size: QWORD <|@ <|@
      nr 1156  <|@ instruction MOV (x: [rbx|QWORD[.] + rsi|DWORD * 8 + 16], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1158  <|@ instruction r14|DWORD[.] = MOV [r9|DWORD[.] * 8 + 80] size: DWORD <|@ <|@
      nr 1160  <|@ instruction TEST (x: r14|DWORD[.], y: r14|DWORD[.]) size: DWORD <|@ <|@
      nr 1162  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B129 -> B130 falseDestination: B129 -> B136 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B137" "B138" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583358136683543460
    begin_IR
      LIR
      nr 1246  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1248  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr 1250  <|@ instruction r11|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr 1252  <|@ instruction CMP (x: r11|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr 1254  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B136 -> B137 falseDestination: B136 -> B138 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583281127530792265
    begin_IR
      LIR
      nr 1276  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1278  <|@ instruction MOV (x: [r15|QWORD + 96], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1280  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0 <|@ <|@
      nr 1282  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 1284  <|@ instruction JUMP ~[] destination: B138 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B138" "B137" 
    successors "B140" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583358136683543460
    begin_IR
      LIR
      nr 1286  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1288  <|@ instruction r11|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1290  <|@ instruction stack:72|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1292  <|@ instruction r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeList$NodeListIterator;, resolved>} <|@ <|@
      nr 1294  <|@ instruction r8|QWORD = MOV [r8|QWORD + 168] size: QWORD <|@ <|@
      nr 1296  <|@ instruction MOV (x: [rsi|QWORD[*]], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1298  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeList$NodeListIterator;, resolved>;compressed} <|@ <|@
      nr 1300  <|@ instruction r8|DWORD = MOV [r14|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr 1302  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1304  <|@ instruction MOV (x: [rsi|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr 1306  <|@ instruction MOV (x: [rsi|QWORD[*] + 20], y: r14|DWORD[.]) size: DWORD <|@ <|@
      nr 1308  <|@ instruction JUMP ~[] destination: B139 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B142" "B143" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4583358136683543460
    begin_IR
      LIR
      nr 1320  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 1322  <|@ instruction rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1324  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:20, stack:40, stack:48]
live-base-pointers: []
org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 32]
locals: stack:64|DWORD[.] vobject:1492729447:0{arg$1=stack:60|DWORD[.]} stack:72|QWORD[.] - 
org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
locals: - - - - 
org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
locals: - - 
org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
locals: - - 
java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
locals: - stack:32|QWORD[.] stack:40|QWORD[.] - 
vobject:1492729447:0{arg$1=stack:60|DWORD[.]} Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$92/1492729447; stack:60|DWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<NodeList$NodeListIterator.next()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:32, 61, 7, 8, 30] <|@ <|@
      nr 1326  <|@ instruction TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr 1328  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B141 -> B142 falseDestination: B141 -> B143 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B144" "B155" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4582588045156031508
    begin_IR
      LIR
      nr 1334  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1336  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/compiler/nodes/virtual/EscapeObjectState;, resolved>} <|@ <|@
      nr 1338  <|@ instruction rsi|DWORD = MOV [rax|QWORD[.] + 8] size: DWORD <|@ <|@
      nr 1340  <|@ instruction CMP (x: rcx|QWORD, y: [rsi|DWORD * 8 + 64]) size: QWORD <|@ <|@
      nr 1342  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B143 -> B144 falseDestination: B143 -> B155 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B143" 
    successors "B145" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4582588045156031508
    begin_IR
      LIR
      nr 1344  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1346  <|@ instruction JUMP ~[] destination: B144 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B142" "B144" 
    successors "B146" "B148" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4583358136683543460
    begin_IR
      LIR
      nr 1348  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1350  <|@ instruction TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr 1352  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B145 -> B146 falseDestination: B145 -> B148 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B145" 
    successors "B149" "B151" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4583358136683543460
    begin_IR
      LIR
      nr 1372  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1374  <|@ instruction r10|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1376  <|@ instruction rcx|DWORD[.] = MOV [r10|DWORD[.] * 8 + 28] size: DWORD <|@ <|@
      nr 1378  <|@ instruction TEST (x: rcx|DWORD[.], y: rcx|DWORD[.]) size: DWORD <|@ <|@
      nr 1380  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B148 -> B149 falseDestination: B148 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B148" 
    successors "B152" "B153" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4583358136683543460
    begin_IR
      LIR
      nr 1400  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1402  <|@ instruction rsi|DWORD = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr 1404  <|@ instruction rdx|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1406  <|@ instruction r11|DWORD = SAR rdx|DWORD y: 6 size: DWORD <|@ <|@
      nr 1408  <|@ instruction CMP (x: rsi|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr 1410  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B151 -> B152 falseDestination: B151 -> B153 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B151" 
    successors "B140" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 2
    probability 4583358136683543460
    begin_IR
      LIR
      nr 1412  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1414  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3 <|@ <|@
      nr 1416  <|@ instruction r8|QWORD = MOVE input: long[1|0x1] <|@ <|@
      nr 1418  <|@ instruction rcx|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1420  <|@ instruction r8|QWORD = SHL (x: r8|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr 1422  <|@ instruction r8|QWORD = OR (x: r8|QWORD, ~y: [rsi|QWORD[.] + r11|DWORD * 8 + 16]) size: QWORD <|@ <|@
      nr 1424  <|@ instruction MOV (x: [rsi|QWORD[.] + r11|DWORD * 8 + 16], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1426  <|@ instruction r11|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1428  <|@ instruction JUMP ~[] destination: B152 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B139" "B152" 
    successors "B141" "B158" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 2
    probability 4587861736310913956
    begin_IR
      LIR
      nr 1310  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1312  <|@ instruction rsi|DWORD[.] = MOV [r11|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1314  <|@ st <@st|@reference-map: [r11:0, stack:8, stack:16, stack:20, stack:40, stack:48]
live-base-pointers: []
org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 22]
locals: stack:64|DWORD[.] vobject:1492729447:0{arg$1=stack:60|DWORD[.]} r11|QWORD[.] - 
org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
locals: - - - - 
org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
locals: - - 
org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
locals: - - 
java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
locals: - stack:32|QWORD[.] stack:40|QWORD[.] - 
vobject:1492729447:0{arg$1=stack:60|DWORD[.]} Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$92/1492729447; stack:60|DWORD[.] 
>@ <|@ instruction rsi|DWORD = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD state [bci:22, 61, 7, 8, 30] <|@ <|@
      nr 1316  <|@ instruction CMP (x: rsi|DWORD, y: [r11|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr 1318  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B140 -> B141 falseDestination: B140 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B145" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4568307154746408066
    begin_IR
      LIR
      nr 1330  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1332  <|@ instruction JUMP ~[] destination: B142 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B99" "B100" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587861736310913956
    begin_IR
      LIR
      nr  916  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  918  <|@ instruction TEST (x: r9|DWORD[.], y: r9|DWORD[.]) size: DWORD <|@ <|@
      nr  920  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B98 -> B99 falseDestination: B98 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B128" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583358136683543460
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  934  <|@ instruction JUMP ~[] destination: B100 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B172"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B173" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587614405250104338
    begin_IR
      LIR
      nr 1620  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1622  <|@ instruction r11|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1624  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1626  <|@ instruction JUMP ~[] destination: B172 -> B173 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B173"
    from_bci -1
    to_bci -1
    predecessors "B172" "B78" 
    successors "B174" "B183" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591076232195416571
    begin_IR
      LIR
      nr 1628  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1630  <|@ instruction CMP [rdx|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/phases/common/CanonicalizerPhase$Instance$$Lambda$21/340690072;, resolved>;compressed} <|@ <|@
      nr 1632  <|@ instruction BRANCH trueDestinationProbability: 0.7065224035699004 condition: = trueDestination: B173 -> B174 falseDestination: B173 -> B183 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B174"
    from_bci -1
    to_bci -1
    predecessors "B173" 
    successors "B175" "B176" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589194509158168565
    begin_IR
      LIR
      nr 1634  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1636  <|@ instruction TEST (x: r11|QWORD[.], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr 1638  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B174 -> B175 falseDestination: B174 -> B176 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B176"
    from_bci -1
    to_bci -1
    predecessors "B174" 
    successors "B177" "B181" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588314980326800979
    begin_IR
      LIR
      nr 1644  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1646  <|@ instruction r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/compiler/graph/Node;, resolved>} <|@ <|@
      nr 1648  <|@ instruction rsi|DWORD = MOV [r11|QWORD[.] + 8] size: DWORD <|@ <|@
      nr 1650  <|@ instruction CMP (x: r9|QWORD, y: [rsi|DWORD * 8 + 48]) size: QWORD <|@ <|@
      nr 1652  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B176 -> B177 falseDestination: B176 -> B181 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B177"
    from_bci -1
    to_bci -1
    predecessors "B176" 
    successors "B178" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588314980326800979
    begin_IR
      LIR
      nr 1654  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1656  <|@ instruction JUMP ~[] destination: B177 -> B178 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B178"
    from_bci -1
    to_bci -1
    predecessors "B175" "B177" 
    successors "B179" "B180" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589194509158168565
    begin_IR
      LIR
      nr 1658  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1660  <|@ instruction rsi|DWORD[.] = MOV [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1662  <|@ instruction TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr 1664  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B178 -> B179 falseDestination: B178 -> B180 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B180"
    from_bci -1
    to_bci -1
    predecessors "B178" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4589194509158168565
    begin_IR
      LIR
      nr 1674  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1676  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3 <|@ <|@
      nr 1678  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1680  <|@ st <@st|@reference-map: [stack:40, stack:48]
live-base-pointers: []
org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance$$Lambda$21.340690072.accept(Object) [bci: 8]
locals: - - 
java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
locals: - stack:32|QWORD[.] stack:40|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<NodeWorkList.add(Node)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:8, 30] <|@ <|@
      nr 1682  <|@ instruction r11|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1684  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1686  <|@ instruction JUMP ~[] destination: B180 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B173" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4585530859885987812
    begin_IR
      LIR
      nr  758  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  760  <|@ instruction r11|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  762  <|@ instruction JUMP ~[] destination: B78 -> B173 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B109" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583358136683543460
    begin_IR
      LIR
      nr  964  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  966  <|@ instruction JUMP ~[] destination: B104 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4583358136683543460
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  924  <|@ st <@st|@reference-map: [r10:0, stack:24, stack:40, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:97) [bci: 44]
locals: r10|DWORD[.] - r8|DWORD 
org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
locals: - - 
org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
locals: vobject:1492729447:0{arg$1=r10|DWORD[.]} stack:56|QWORD[.] 
org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:653) [bci: 2]
locals: stack:56|QWORD[.] vobject:1492729447:0{arg$1=r10|DWORD[.]} - - 
org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
locals: - - 
org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
locals: - - 
java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
locals: - stack:32|QWORD[.] stack:40|QWORD[.] - 
vobject:1492729447:0{arg$1=r10|DWORD[.]} Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$92/1492729447; r10|DWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:44, 2, 5, 2, 7, 8, 30] <|@ <|@
      nr  926  <|@ instruction r11|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  928  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  930  <|@ instruction JUMP ~[] destination: B99 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4583358136683543460
    begin_IR
      LIR
      nr 1120  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1122  <|@ st <@st|@reference-map: [rdi:0, r10:0, stack:24, stack:40, stack:48]
live-base-pointers: []
org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 22]
locals: stack:56|QWORD[.] vobject:1492729447:0{arg$1=r10|DWORD[.]} vobject:NodeList$NodeListIterator:1{expectedModCount=r8|DWORD,index=r13|DWORD,list=rdi|DWORD[.]} - 
org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
locals: - - 
org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
locals: - - 
java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
locals: - stack:32|QWORD[.] stack:40|QWORD[.] - 
vobject:1492729447:0{arg$1=r10|DWORD[.]} Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$92/1492729447; r10|DWORD[.] 
vobject:NodeList$NodeListIterator:1{expectedModCount=r8|DWORD,index=r13|DWORD,list=rdi|DWORD[.]} Lorg/graalvm/compiler/graph/NodeList$NodeListIterator; r8|DWORD r13|DWORD rdi|DWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:22, 7, 8, 30] <|@ <|@
      nr 1124  <|@ instruction r11|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1126  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1128  <|@ instruction JUMP ~[] destination: B126 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B131" "B132" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583358136683543460
    begin_IR
      LIR
      nr 1164  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1166  <|@ instruction r14|DWORD[.] = MOV [r9|DWORD[.] * 8 + 68] size: DWORD <|@ <|@
      nr 1168  <|@ instruction TEST (x: r14|DWORD[.], y: r14|DWORD[.]) size: DWORD <|@ <|@
      nr 1170  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B130 -> B131 falseDestination: B130 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B130" 
    successors "B133" "B134" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4578854537056172964
    begin_IR
      LIR
      nr 1182  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1184  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr 1186  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr 1188  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr 1190  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B132 -> B133 falseDestination: B132 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B135" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4578777527903421769
    begin_IR
      LIR
      nr 1208  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1210  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1212  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 208] instr: 0 <|@ <|@
      nr 1214  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 1216  <|@ instruction JUMP ~[] destination: B134 -> B135 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" "B133" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4578854537056172964
    begin_IR
      LIR
      nr 1218  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1220  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$92/1492729447;, resolved>} <|@ <|@
      nr 1222  <|@ instruction r11|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1224  <|@ instruction rdx|QWORD = MOV [rdx|QWORD + 168] size: QWORD <|@ <|@
      nr 1226  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1228  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$92/1492729447;, resolved>;compressed} <|@ <|@
      nr 1230  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr 1232  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: r14|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3 <|@ <|@
      nr 1234  <|@ instruction rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1236  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1238  <|@ st <@st|@reference-map: [stack:40, stack:48]
live-base-pointers: []
org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
locals: - - - - 
org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
locals: - - - - 
org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
locals: - - 
org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
locals: - - 
java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
locals: - stack:32|QWORD[.] stack:40|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FrameState.applyToVirtual(VirtualState$VirtualClosure)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:61, 61, 7, 8, 30] <|@ <|@
      nr 1240  <|@ instruction r11|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1242  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1244  <|@ instruction JUMP ~[] destination: B135 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B158"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B159" "B160" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583358136683543460
    begin_IR
      LIR
      nr 1474  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1476  <|@ instruction r9|DWORD[.] = MOVE stack:64|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1478  <|@ instruction r10|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1480  <|@ instruction r13|DWORD[.] = MOV [r9|DWORD[.] * 8 + 68] size: DWORD <|@ <|@
      nr 1482  <|@ instruction TEST (x: r13|DWORD[.], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr 1484  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B158 -> B159 falseDestination: B158 -> B160 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B160"
    from_bci -1
    to_bci -1
    predecessors "B158" 
    successors "B161" "B162" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4578854537056172964
    begin_IR
      LIR
      nr 1496  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1498  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr 1500  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr 1502  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr 1504  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B160 -> B161 falseDestination: B160 -> B162 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B162"
    from_bci -1
    to_bci -1
    predecessors "B160" 
    successors "B163" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4578777527903421769
    begin_IR
      LIR
      nr 1522  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1524  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1526  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 208] instr: 0 <|@ <|@
      nr 1528  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 1530  <|@ instruction JUMP ~[] destination: B162 -> B163 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B163"
    from_bci -1
    to_bci -1
    predecessors "B162" "B161" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4578854537056172964
    begin_IR
      LIR
      nr 1532  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1534  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$92/1492729447;, resolved>} <|@ <|@
      nr 1536  <|@ instruction r11|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1538  <|@ instruction rdx|QWORD = MOV [rdx|QWORD + 168] size: QWORD <|@ <|@
      nr 1540  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1542  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$92/1492729447;, resolved>;compressed} <|@ <|@
      nr 1544  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr 1546  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3 <|@ <|@
      nr 1548  <|@ instruction rsi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1550  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1552  <|@ st <@st|@reference-map: [stack:40, stack:48]
live-base-pointers: []
org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
locals: - - - - 
org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
locals: - - - - 
org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
locals: - - 
org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
locals: - - 
java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
locals: - stack:32|QWORD[.] stack:40|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FrameState.applyToVirtual(VirtualState$VirtualClosure)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:61, 61, 7, 8, 30] <|@ <|@
      nr 1554  <|@ instruction r11|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1556  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1558  <|@ instruction JUMP ~[] destination: B163 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B183"
    from_bci -1
    to_bci -1
    predecessors "B173" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4583184113557415962
    begin_IR
      LIR
      nr 1702  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1704  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1706  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1708  <|@ st <@st|@reference-map: [stack:40, stack:48]
live-base-pointers: []
java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
locals: - stack:32|QWORD[.] stack:40|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Consumer.accept(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:30] <|@ <|@
      nr 1710  <|@ instruction r11|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1712  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1714  <|@ instruction JUMP ~[] destination: B183 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B130" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4578854537056172964
    begin_IR
      LIR
      nr 1172  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1174  <|@ st <@st|@reference-map: [r9:0, r10:0, stack:40, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:97) [bci: 44]
locals: r10|DWORD[.] - r13|DWORD 
org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
locals: - - 
org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
locals: vobject:1492729447:0{arg$1=r10|DWORD[.]} r9|DWORD[.] 
org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:653) [bci: 2]
locals: r9|DWORD[.] vobject:1492729447:0{arg$1=r10|DWORD[.]} - - 
org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
locals: - - - - 
org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
locals: - - 
org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
locals: - - 
java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
locals: - stack:32|QWORD[.] stack:40|QWORD[.] - 
vobject:1492729447:0{arg$1=r10|DWORD[.]} Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$92/1492729447; r10|DWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:44, 2, 5, 2, 61, 7, 8, 30] <|@ <|@
      nr 1176  <|@ instruction r11|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1178  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1180  <|@ instruction JUMP ~[] destination: B131 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B159"
    from_bci -1
    to_bci -1
    predecessors "B158" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4578854537056172964
    begin_IR
      LIR
      nr 1486  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1488  <|@ st <@st|@reference-map: [r9:0, r10:0, stack:8, stack:40, stack:48]
live-base-pointers: []
org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 22]
locals: r9|DWORD[.] vobject:1492729447:0{arg$1=r10|DWORD[.]} stack:72|QWORD[.] - 
org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
locals: - - - - 
org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
locals: - - 
org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
locals: - - 
java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
locals: - stack:32|QWORD[.] stack:40|QWORD[.] - 
vobject:1492729447:0{arg$1=r10|DWORD[.]} Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$92/1492729447; r10|DWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:22, 61, 7, 8, 30] <|@ <|@
      nr 1490  <|@ instruction r11|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1492  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1494  <|@ instruction JUMP ~[] destination: B159 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577314354001149058
    begin_IR
      LIR
      nr  818  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  820  <|@ instruction JUMP ~[] destination: B87 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B175"
    from_bci -1
    to_bci -1
    predecessors "B174" 
    successors "B178" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573898163745688762
    begin_IR
      LIR
      nr 1640  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1642  <|@ instruction JUMP ~[] destination: B175 -> B178 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4553564209420277460
    begin_IR
      LIR
      nr 1256  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1258  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1260  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr 1262  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1264  <|@ st <@st|@reference-map: [r14:0, stack:16, stack:20, stack:40, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:97) [bci: 44]
locals: stack:60|DWORD[.] - r13|DWORD 
org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
locals: - - 
org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
locals: vobject:1492729447:0{arg$1=stack:60|DWORD[.]} stack:64|DWORD[.] 
org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:653) [bci: 2]
locals: stack:64|DWORD[.] vobject:1492729447:0{arg$1=stack:60|DWORD[.]} - - 
org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
locals: - - - - 
org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
locals: - - 
org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
locals: - - 
java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
locals: - stack:32|QWORD[.] stack:40|QWORD[.] - 
vobject:1492729447:0{arg$1=stack:60|DWORD[.]} Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$92/1492729447; stack:60|DWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:44, 2, 5, 2, 61, 7, 8, 30] <|@ <|@
      nr 1266  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1268  <|@ instruction r9|DWORD[.] = MOVE stack:64|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1270  <|@ instruction r10|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1272  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1274  <|@ instruction JUMP ~[] destination: B137 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B135" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4549060609792906964
    begin_IR
      LIR
      nr 1192  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1194  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1196  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1198  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1200  <|@ st <@st|@reference-map: [r14:0, stack:16, stack:20, stack:40, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:97) [bci: 44]
locals: stack:60|DWORD[.] - r13|DWORD 
org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
locals: - - 
org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
locals: vobject:1492729447:0{arg$1=stack:60|DWORD[.]} stack:64|DWORD[.] 
org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:653) [bci: 2]
locals: stack:64|DWORD[.] vobject:1492729447:0{arg$1=stack:60|DWORD[.]} - - 
org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
locals: - - - - 
org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
locals: - - 
org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
locals: - - 
java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
locals: - stack:32|QWORD[.] stack:40|QWORD[.] - 
vobject:1492729447:0{arg$1=stack:60|DWORD[.]} Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$92/1492729447; stack:60|DWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:44, 2, 5, 2, 61, 7, 8, 30] <|@ <|@
      nr 1202  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1204  <|@ instruction r10|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1206  <|@ instruction JUMP ~[] destination: B133 -> B135 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B161"
    from_bci -1
    to_bci -1
    predecessors "B160" 
    successors "B163" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4549060609792906964
    begin_IR
      LIR
      nr 1506  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1508  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1510  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1512  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1514  <|@ st <@st|@reference-map: [r13:0, stack:8, stack:16, stack:20, stack:40, stack:48]
live-base-pointers: []
org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 22]
locals: stack:64|DWORD[.] vobject:1492729447:0{arg$1=stack:60|DWORD[.]} stack:72|QWORD[.] - 
org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
locals: - - - - 
org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
locals: - - 
org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
locals: - - 
java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
locals: - stack:32|QWORD[.] stack:40|QWORD[.] - 
vobject:1492729447:0{arg$1=stack:60|DWORD[.]} Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$92/1492729447; stack:60|DWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:22, 61, 7, 8, 30] <|@ <|@
      nr 1516  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1518  <|@ instruction r10|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1520  <|@ instruction JUMP ~[] destination: B161 -> B163 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B82" 
    xhandlers
    flags 
    probability 4602801416593737527
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  452  <|@ instruction JUMP ~[] destination: B41 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" "B41" "B38" "B23" "B35" 
    successors "B83" 
    xhandlers
    flags 
    probability 4608068898668341784
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  784  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors 
    xhandlers
    flags 
    probability 4608068898668341784
    begin_IR
      LIR
      nr  786  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  788  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B82" 
    xhandlers
    flags 
    probability 4598388767437917467
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  282  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  284  <|@ instruction JUMP ~[] destination: B23 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B82" 
    xhandlers
    flags 
    probability 4595589156199348280
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  780  <|@ instruction JUMP ~[] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B82" 
    xhandlers
    flags 
    probability 4595232924244835984
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  426  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  428  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  430  <|@ instruction JUMP ~[] destination: B38 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B73" 
    xhandlers
    flags 
    probability 4595077886079364602
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  668  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  670  <|@ instruction rsi|DWORD = MOVE input: int[-286908|0xfffffffffffb9f44] <|@ <|@
      nr  672  <|@ instruction JUMP ~[] destination: B68 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B68" "B72" 
    successors 
    xhandlers
    flags 
    probability 4598032818973779191
    begin_IR
      LIR
      nr  716  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  718  <|@ instruction MOV (x: [r15|QWORD + 668], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  720  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  722  <|@ st <@st|@reference-map: [r10:0, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:47) [bci: 102]
locals: - 
org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
locals: r10|QWORD[.] - 
org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
locals: - 
java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
locals: - stack:32|QWORD[.] r10|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:102, 1, 1, 22] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" "B185" 
    xhandlers
    flags 
    probability 4590935522563932584
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   96  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   98  <|@ instruction CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeUsageIterable;, resolved>;compressed} <|@ <|@
      nr  100  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B185 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4590935522563932584
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  104  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  106  <|@ instruction r10|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr  108  <|@ instruction CMP (x: r10|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  110  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4590872811544924907
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  128  <|@ instruction MOV (x: [r15|QWORD + 96], y: r10|QWORD) size: QWORD <|@ <|@
      nr  130  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0 <|@ <|@
      nr  132  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4590935522563932584
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  138  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  140  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeUsageIterator;, resolved>} <|@ <|@
      nr  142  <|@ instruction r11|QWORD = MOV [r11|QWORD + 168] size: QWORD <|@ <|@
      nr  144  <|@ instruction MOV (x: [rsi|QWORD[*]], y: r11|QWORD) size: QWORD <|@ <|@
      nr  146  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeUsageIterator;, resolved>;compressed} <|@ <|@
      nr  148  <|@ instruction MOV [rsi|QWORD[*] + 12] y: -1 size: DWORD <|@ <|@
      nr  150  <|@ instruction r11|DWORD[.] = MOV [r14|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  152  <|@ instruction MOV (x: [rsi|QWORD[*] + 16], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr  154  <|@ instruction MOV (x: [rsi|QWORD[*] + 20], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  156  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction stack:40|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  160  <|@ st <@st|@reference-map: [stack:40, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.NodeUsageIterator.<init>(NodeUsageIterator.java:51) [bci: 15]
locals: - - 
org.graalvm.compiler.graph.NodeUsageIterable.iterator(NodeUsageIterable.java:44) [bci: 26]
stack: stack:40|QWORD[.] 
locals: - 
org.graalvm.compiler.graph.NodeUsageIterable.iterator(NodeUsageIterable.java:31) [bci: 1]
locals: - 
java.lang.Iterable.forEach(Iterable.java:74) [bci: 6]
locals: - stack:32|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<NodeUsageIterator.advance()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:15, 26, 1, 6] <|@ <|@
      nr  162  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  164  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B73" 
    xhandlers
    flags 
    probability 4590574286451994106
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  708  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  710  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  712  <|@ instruction rsi|DWORD = MOVE input: int[-267196|0xfffffffffffbec44] <|@ <|@
      nr  714  <|@ instruction JUMP ~[] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B82" 
    xhandlers
    flags 
    probability 4590055446400320982
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  398  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  400  <|@ instruction JUMP ~[] destination: B35 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4576416541152026267
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   42  <|@ instruction r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   46  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   48  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   50  <|@ st <@st|@reference-map: [r13:0, r14:0, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.iterators.FilteredNodeIterable.iterator(FilteredNodeIterable.java:45) [bci: 13]
stack: vobject:PredicatedProxyNodeIterator:0{current=Object[null],iterator=Object[null],predicate=Object[null]} vobject:PredicatedProxyNodeIterator:0{current=Object[null],iterator=Object[null],predicate=Object[null]} r13|QWORD[.] 
locals: r14|QWORD[.] 
java.lang.Iterable.forEach(Iterable.java:74) [bci: 6]
locals: - stack:32|QWORD[.] - - 
vobject:PredicatedProxyNodeIterator:0{current=Object[null],iterator=Object[null],predicate=Object[null]} Lorg/graalvm/compiler/graph/iterators/PredicatedProxyNodeIterator; Object[null] Object[null] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:13, 6] <|@ <|@
      nr   52  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   54  <|@ instruction JUMP ~[] destination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4561166233704554063
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  114  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  116  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  118  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  120  <|@ st <@st|@reference-map: [r14:0, stack:48]
live-base-pointers: []
java.lang.Iterable.forEach(Iterable.java:73) [bci: 0]
locals: r14|QWORD[.] stack:32|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  122  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction JUMP ~[] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  736  <|@ instruction MOV [r15|QWORD + 668] y: -348604 size: DWORD <|@ <|@
      nr  738  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  740  <|@ st <@st|@reference-map: [r10:0, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 94]
stack: rax|DWORD 
locals: r10|QWORD[.] 
org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
locals: r10|QWORD[.] - 
org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
locals: - 
java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
locals: - stack:32|QWORD[.] r10|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:94, 1, 1, 22] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B185"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1724  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1726  <|@ instruction MOV [r15|QWORD + 668] y: -400435 size: DWORD <|@ <|@
      nr 1728  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1730  <|@ st <@st|@reference-map: [r14:0, stack:48]
live-base-pointers: []
java.lang.Iterable.forEach(Iterable.java:73) [bci: 0]
locals: r14|QWORD[.] stack:32|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B179"
    from_bci -1
    to_bci -1
    predecessors "B178" 
    successors "B182" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1666  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1668  <|@ instruction r8|DWORD = MOVE input: int[-396811|0xfffffffffff9f1f5] <|@ <|@
      nr 1670  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1672  <|@ instruction JUMP ~[] destination: B179 -> B182 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B182"
    from_bci -1
    to_bci -1
    predecessors "B181" "B179" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1694  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1696  <|@ instruction MOV (x: [r15|QWORD + 668], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1698  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1700  <|@ st <@st|@reference-map: [rdx:0, r10:0, r11:0]
live-base-pointers: []
java.lang.Iterable.forEach(Iterable.java:74) [bci: 27]
stack: r11|QWORD[.] 
locals: - rdx|QWORD[.] r10|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B121" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1082  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1084  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1086  <|@ instruction JUMP ~[] destination: B120 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B124" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1088  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1090  <|@ instruction r11|DWORD = MOVE input: int[-371995|0xfffffffffffa52e5] <|@ <|@
      nr 1092  <|@ instruction JUMP ~[] destination: B121 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B123" "B117" "B121" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1106  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1108  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1110  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1112  <|@ st <@st|@reference-map: [rdi:0, r10:0, stack:20, stack:24, stack:48]
live-base-pointers: []
org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 22]
locals: stack:56|QWORD[.] vobject:1492729447:0{arg$1=stack:60|DWORD[.]} vobject:NodeList$NodeListIterator:1{expectedModCount=r8|DWORD,index=r13|DWORD,list=rdi|DWORD[.]} - 
org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
locals: - - 
org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
locals: - - 
java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
locals: - stack:32|QWORD[.] r10|QWORD[.] - 
vobject:1492729447:0{arg$1=stack:60|DWORD[.]} Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$92/1492729447; stack:60|DWORD[.] 
vobject:NodeList$NodeListIterator:1{expectedModCount=r8|DWORD,index=r13|DWORD,list=rdi|DWORD[.]} Lorg/graalvm/compiler/graph/NodeList$NodeListIterator; r8|DWORD r13|DWORD rdi|DWORD[.] 
>@ <|@ instruction DEOPT info [bci:22, 7, 8, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B169"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B171" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1598  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1600  <|@ instruction r11|DWORD = MOVE input: int[-357915|0xfffffffffffa89e5] <|@ <|@
      nr 1602  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1604  <|@ instruction JUMP ~[] destination: B169 -> B171 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B171"
    from_bci -1
    to_bci -1
    predecessors "B170" "B91" "B93" "B95" "B169" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1612  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1614  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1616  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1618  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:48]
live-base-pointers: []
java.lang.Iterable.forEach(Iterable.java:74) [bci: 27]
stack: rsi|QWORD[.] 
locals: - stack:32|QWORD[.] r10|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B166" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  988  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  990  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  992  <|@ instruction JUMP ~[] destination: B107 -> B166 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B166"
    from_bci -1
    to_bci -1
    predecessors "B165" "B107" 
    successors "B167" 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1576  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1578  <|@ instruction JUMP ~[] destination: B166 -> B167 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B167"
    from_bci -1
    to_bci -1
    predecessors "B166" 
    successors "B168" 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1580  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1582  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@295001017] <|@ <|@
      nr 1584  <|@ instruction r9|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1586  <|@ instruction r11|DWORD = MOVE input: int[-365083|0xfffffffffffa6de5] <|@ <|@
      nr 1588  <|@ instruction JUMP ~[] destination: B167 -> B168 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B168"
    from_bci -1
    to_bci -1
    predecessors "B167" "B102" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1590  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 1592  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1594  <|@ instruction MOV (x: [r15|QWORD + 680], y: r9|QWORD[.]) size: QWORD <|@ <|@
      nr 1596  <|@ st <@st|@reference-map: [r10:0, stack:20, stack:24, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:97) [bci: 44]
locals: stack:60|DWORD[.] - r8|DWORD 
org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
locals: - - 
org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
locals: vobject:1492729447:0{arg$1=stack:60|DWORD[.]} stack:56|QWORD[.] 
org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:653) [bci: 2]
locals: stack:56|QWORD[.] vobject:1492729447:0{arg$1=stack:60|DWORD[.]} - - 
org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
locals: - - 
org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
locals: - - 
java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
locals: - stack:32|QWORD[.] r10|QWORD[.] - 
vobject:1492729447:0{arg$1=stack:60|DWORD[.]} Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$92/1492729447; stack:60|DWORD[.] 
>@ <|@ instruction DEOPT info [bci:44, 2, 5, 2, 7, 8, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B148" 
    successors "B150" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1382  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1384  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1386  <|@ instruction JUMP ~[] destination: B149 -> B150 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B149" 
    successors "B157" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1388  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1390  <|@ instruction r11|DWORD = MOVE input: int[-387851|0xfffffffffffa14f5] <|@ <|@
      nr 1392  <|@ instruction rcx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1394  <|@ instruction r9|DWORD[.] = MOVE stack:64|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1396  <|@ instruction r8|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1398  <|@ instruction JUMP ~[] destination: B150 -> B157 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B157"
    from_bci -1
    to_bci -1
    predecessors "B156" "B147" "B150" "B154" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1466  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1468  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1470  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1472  <|@ st <@st|@reference-map: [rax:0, rcx:0, r8:0, r9:0, r10:0, stack:48]
live-base-pointers: []
org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 37]
stack: rax|QWORD[.] 
locals: r9|DWORD[.] vobject:1492729447:0{arg$1=r8|DWORD[.]} rcx|QWORD[.] - 
org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
locals: - - - - 
org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
locals: - - 
org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
locals: - - 
java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
locals: - stack:32|QWORD[.] r10|QWORD[.] - 
vobject:1492729447:0{arg$1=r8|DWORD[.]} Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$92/1492729447; r8|DWORD[.] 
>@ <|@ instruction DEOPT info [bci:37, 61, 7, 8, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B170"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B171" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1606  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1608  <|@ instruction r11|DWORD = MOVE input: int[-351523|0xfffffffffffaa2dd] <|@ <|@
      nr 1610  <|@ instruction JUMP ~[] destination: B170 -> B171 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B155"
    from_bci -1
    to_bci -1
    predecessors "B143" 
    successors "B156" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1448  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1450  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1452  <|@ instruction JUMP ~[] destination: B155 -> B156 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B156"
    from_bci -1
    to_bci -1
    predecessors "B155" 
    successors "B157" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1454  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1456  <|@ instruction r11|DWORD = MOVE input: int[-386083|0xfffffffffffa1bdd] <|@ <|@
      nr 1458  <|@ instruction rcx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1460  <|@ instruction r9|DWORD[.] = MOVE stack:64|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1462  <|@ instruction r8|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1464  <|@ instruction JUMP ~[] destination: B156 -> B157 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  552  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  556  <|@ instruction r11|DWORD = MOVE input: int[-342795|0xfffffffffffac4f5] <|@ <|@
      nr  558  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B51" "B55" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  562  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr  564  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  566  <|@ st <@st|@reference-map: [r10:0, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 42]
stack: rax|DWORD 
locals: r10|QWORD[.] 
org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
locals: r10|QWORD[.] - 
org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
locals: - 
java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
locals: - stack:32|QWORD[.] r10|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:42, 1, 1, 22] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B181"
    from_bci -1
    to_bci -1
    predecessors "B176" 
    successors "B182" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1688  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1690  <|@ instruction r8|DWORD = MOVE input: int[-396323|0xfffffffffff9f3dd] <|@ <|@
      nr 1692  <|@ instruction JUMP ~[] destination: B181 -> B182 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B171" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  874  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  876  <|@ instruction r11|DWORD = MOVE input: int[-354059|0xfffffffffffa98f5] <|@ <|@
      nr  878  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  880  <|@ instruction JUMP ~[] destination: B95 -> B171 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B56" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  532  <|@ instruction r11|DWORD = MOVE input: int[-297148|0xfffffffffffb7744] <|@ <|@
      nr  534  <|@ instruction JUMP ~[] destination: B51 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  354  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  356  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  360  <|@ instruction MOV [r15|QWORD + 668] y: -334371 size: DWORD <|@ <|@
      nr  362  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  364  <|@ st <@st|@reference-map: [rax:0, r10:0, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 55]
stack: r10|QWORD[.] rax|QWORD[.] 
locals: r10|QWORD[.] 
org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
locals: r10|QWORD[.] 
java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
locals: - stack:32|QWORD[.] r10|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:55, 1, 13] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  650  <|@ instruction MOV [r15|QWORD + 668] y: -297404 size: DWORD <|@ <|@
      nr  652  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  654  <|@ st <@st|@reference-map: [r10:0, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 30]
stack: rax|DWORD 
locals: r10|QWORD[.] 
org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
locals: r10|QWORD[.] - 
org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
locals: - 
java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
locals: - stack:32|QWORD[.] r10|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:30, 1, 1, 22] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1094  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1096  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1098  <|@ instruction JUMP ~[] destination: B122 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B124" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1100  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1102  <|@ instruction r11|DWORD = MOVE input: int[-368163|0xfffffffffffa61dd] <|@ <|@
      nr 1104  <|@ instruction JUMP ~[] destination: B123 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  684  <|@ instruction MOV [r15|QWORD + 668] y: -346891 size: DWORD <|@ <|@
      nr  686  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  688  <|@ st <@st|@reference-map: [r10:0, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 64]
locals: r10|QWORD[.] 
org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
locals: r10|QWORD[.] - 
org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
locals: - 
java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
locals: - stack:32|QWORD[.] r10|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:64, 1, 1, 22] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B117" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1046  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1048  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1050  <|@ instruction JUMP ~[] destination: B116 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B124" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1052  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1054  <|@ instruction r11|DWORD = MOVE input: int[-368395|0xfffffffffffa60f5] <|@ <|@
      nr 1056  <|@ instruction JUMP ~[] destination: B117 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B165"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B166" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1570  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1572  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1574  <|@ instruction JUMP ~[] destination: B165 -> B166 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B171" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  860  <|@ instruction r11|DWORD = MOVE input: int[-352011|0xfffffffffffaa0f5] <|@ <|@
      nr  862  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  864  <|@ instruction JUMP ~[] destination: B93 -> B171 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B145" 
    successors "B147" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1354  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1356  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1358  <|@ instruction JUMP ~[] destination: B146 -> B147 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B157" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1360  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1362  <|@ instruction r11|DWORD = MOVE input: int[-386315|0xfffffffffffa1af5] <|@ <|@
      nr 1364  <|@ instruction rcx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1366  <|@ instruction r9|DWORD[.] = MOVE stack:64|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1368  <|@ instruction r8|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1370  <|@ instruction JUMP ~[] destination: B147 -> B157 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B171" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  838  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  840  <|@ instruction r11|DWORD = MOVE input: int[-351755|0xfffffffffffaa1f5] <|@ <|@
      nr  842  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  844  <|@ instruction JUMP ~[] destination: B91 -> B171 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B184"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1716  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1718  <|@ instruction MOV [r15|QWORD + 668] y: -348979 size: DWORD <|@ <|@
      nr 1720  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1722  <|@ st <@st|@reference-map: [r10:0, stack:48]
live-base-pointers: []
java.lang.Iterable.forEach(Iterable.java:74) [bci: 12]
locals: - stack:32|QWORD[.] r10|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B164"
    from_bci -1
    to_bci -1
    predecessors "B128" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1560  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1562  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1564  <|@ instruction MOV [r15|QWORD + 668] y: -377883 size: DWORD <|@ <|@
      nr 1566  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1568  <|@ st <@st|@reference-map: [r10:0, stack:20, stack:24, stack:48]
live-base-pointers: []
org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:659) [bci: 49]
locals: stack:56|QWORD[.] vobject:1492729447:0{arg$1=stack:60|DWORD[.]} - - 
org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
locals: - - 
org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
locals: - - 
java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
locals: - stack:32|QWORD[.] r10|QWORD[.] - 
vobject:1492729447:0{arg$1=stack:60|DWORD[.]} Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$92/1492729447; stack:60|DWORD[.] 
>@ <|@ instruction DEOPT info [bci:49, 7, 8, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B168" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  946  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  948  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1280662813] <|@ <|@
      nr  950  <|@ instruction r9|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  952  <|@ instruction r11|DWORD = MOVE input: int[-363787|0xfffffffffffa72f5] <|@ <|@
      nr  954  <|@ instruction JUMP ~[] destination: B102 -> B168 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  622  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  624  <|@ instruction JUMP ~[] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  628  <|@ instruction MOV [r15|QWORD + 668] y: -344355 size: DWORD <|@ <|@
      nr  630  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  632  <|@ st <@st|@reference-map: [rax:0, r10:0, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 55]
stack: r10|QWORD[.] rax|QWORD[.] 
locals: r10|QWORD[.] 
org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
locals: r10|QWORD[.] - 
org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
locals: - 
java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
locals: - stack:32|QWORD[.] r10|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:55, 1, 1, 22] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B153"
    from_bci -1
    to_bci -1
    predecessors "B151" 
    successors "B154" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1430  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1432  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1434  <|@ instruction JUMP ~[] destination: B153 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B154"
    from_bci -1
    to_bci -1
    predecessors "B153" 
    successors "B157" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1436  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1438  <|@ instruction r11|DWORD = MOVE input: int[-391451|0xfffffffffffa06e5] <|@ <|@
      nr 1440  <|@ instruction rcx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1442  <|@ instruction r9|DWORD[.] = MOVE stack:64|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1444  <|@ instruction r8|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1446  <|@ instruction JUMP ~[] destination: B154 -> B157 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokestatic  #0          // java.util.Objects.requireNonNull:(java.lang.Object)java.lang.Object
     4: pop           
     5: aload_0       
     6: invokeinterface#1, 1       // iterator:()java.util.Iterator
    11: astore_2      
    12: aload_2       
    13: invokeinterface#2, 1       // java.util.Iterator.hasNext:()boolean
    18: ifeq          38
    21: aload_2       
    22: invokeinterface#3, 1       // java.util.Iterator.next:()java.lang.Object
    27: astore_3      
    28: aload_1       
    29: aload_3       
    30: invokeinterface#4, 2       // java.util.function.Consumer.accept:(java.lang.Object)void
    35: goto          12
    38: return        
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@11aa1906 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:48]
live-base-pointers: []
java.lang.Iterable.forEach(Iterable.java:73) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [rdx|QWORD[.]] state [bci:0] <|@ <|@
      nr   10  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   12  <|@ instruction CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/iterators/FilteredNodeIterable;, resolved>;compressed} <|@ <|@
      nr   14  <|@ instruction BRANCH trueDestinationProbability: 0.9129709784999646 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4606398531062421451
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   20  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:48]
live-base-pointers: []
java.lang.Iterable.forEach(Iterable.java:73) [bci: 0]
locals: rsi|QWORD[.] stack:32|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   22  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3 <|@ <|@
      nr   24  <|@ instruction stack:40|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ st <@st|@reference-map: [stack:40, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.iterators.FilteredNodeIterable.iterator(FilteredNodeIterable.java:45) [bci: 8]
stack: vobject:PredicatedProxyNodeIterator:0{current=Object[null],iterator=Object[null],predicate=Object[null]} vobject:PredicatedProxyNodeIterator:0{current=Object[null],iterator=Object[null],predicate=Object[null]} 
locals: stack:40|QWORD[.] 
java.lang.Iterable.forEach(Iterable.java:74) [bci: 6]
locals: - stack:32|QWORD[.] - - 
vobject:PredicatedProxyNodeIterator:0{current=Object[null],iterator=Object[null],predicate=Object[null]} Lorg/graalvm/compiler/graph/iterators/PredicatedProxyNodeIterator; Object[null] Object[null] Object[null] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<NodeIterable.iterator()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:8, 6] <|@ <|@
      nr   30  <|@ instruction r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   34  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr   36  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   38  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4606316297947250001
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr   60  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0 <|@ <|@
      nr   62  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr   64  <|@ instruction r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   66  <|@ instruction JUMP ~[] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B2" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606398531062421451
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   70  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr   72  <|@ instruction r10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/compiler/graph/iterators/PredicatedProxyNodeIterator;, resolved>} <|@ <|@
      nr   74  <|@ instruction r10|QWORD = MOV [r10|QWORD + 168] size: QWORD <|@ <|@
      nr   76  <|@ instruction MOV (x: [rsi|QWORD[*]], y: r10|QWORD) size: QWORD <|@ <|@
      nr   78  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/iterators/PredicatedProxyNodeIterator;, resolved>;compressed} <|@ <|@
      nr   80  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   82  <|@ instruction r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3 <|@ <|@
      nr   84  <|@ instruction MOV (x: [rsi|QWORD[*] + 16], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr   86  <|@ instruction r10|DWORD[.] = MOV [r14|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   88  <|@ instruction MOV (x: [rsi|QWORD[*] + 20], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr   90  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   92  <|@ instruction JUMP ~[] destination: B4 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B4" "B9" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  168  <|@ instruction stack:40|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  170  <|@ instruction r11|DWORD = MOV [r10|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  172  <|@ instruction stack:44|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  174  <|@ instruction r8|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  176  <|@ instruction r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/compiler/graph/Node;, resolved>} <|@ <|@
      nr  178  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B183" "B180" "B126" "B159" "B163" "B99" "B131" "B135" 
    successors "B12" "B79" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4610059043929207954
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  182  <|@ instruction CMP r11|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/iterators/PredicatedProxyNodeIterator;, resolved>;compressed} <|@ <|@
      nr  184  <|@ instruction BRANCH trueDestinationProbability: 0.8217776767447147 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4608743723126947473
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  188  <|@ instruction rsi|DWORD[.] = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  190  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B19" "B17" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4608069844909802966
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  204  <|@ instruction CMP [rsi|DWORD[.] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  206  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B15 -> B19 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B32" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4603566245282432470
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  214  <|@ instruction rcx|DWORD[.] = MOV [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  216  <|@ st <@st|@reference-map: [rcx:0, rsi:0, r10:0, stack:40, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 0]
locals: r10|QWORD[.] 
org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
locals: r10|QWORD[.] 
java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
locals: - stack:32|QWORD[.] r10|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rcx|DWORD[.] * 8] state [bci:0, 1, 13] <|@ <|@
      nr  218  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3 <|@ <|@
      nr  220  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3 <|@ <|@
      nr  222  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction rdx|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  226  <|@ st <@st|@reference-map: [stack:40, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 25]
locals: stack:40|QWORD[.] 
org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
locals: stack:40|QWORD[.] 
java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
locals: - stack:32|QWORD[.] stack:40|QWORD[.] - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<NodePredicate.apply(Node)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:25, 1, 13] <|@ <|@
      nr  228  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  230  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4599062645655061974
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  234  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  236  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B13" "B15" "B18" 
    successors "B20" "B25" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4611899566320028955
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  240  <|@ instruction rsi|DWORD[.] = MOV [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  242  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:40, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 33]
locals: r10|QWORD[.] 
org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
locals: r10|QWORD[.] 
java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
locals: - stack:32|QWORD[.] r10|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:33, 1, 13] <|@ <|@
      nr  244  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3 <|@ <|@
      nr  246  <|@ st <@st|@reference-map: [stack:40, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 37]
locals: stack:40|QWORD[.] 
org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
locals: stack:40|QWORD[.] 
java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
locals: - stack:32|QWORD[.] stack:40|QWORD[.] - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Iterator.hasNext()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:37, 1, 13] <|@ <|@
      nr  248  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  250  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B29" "B27" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4607395966692658459
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  296  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  298  <|@ instruction rsi|DWORD[.] = MOV [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  300  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:40, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 42]
stack: rax|DWORD 
locals: r10|QWORD[.] 
org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
locals: r10|QWORD[.] 
java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
locals: - stack:32|QWORD[.] r10|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:42, 1, 13] <|@ <|@
      nr  302  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3 <|@ <|@
      nr  304  <|@ st <@st|@reference-map: [stack:40, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 50]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] 
org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
locals: stack:40|QWORD[.] 
java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
locals: - stack:32|QWORD[.] stack:40|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Iterator.next()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:50, 1, 13] <|@ <|@
      nr  306  <|@ instruction TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  312  <|@ instruction r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/compiler/graph/Node;, resolved>} <|@ <|@
      nr  308  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B25 -> B29 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B29" "B30" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4606666085081297201
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  324  <|@ instruction rsi|DWORD = MOV [rax|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  326  <|@ instruction CMP (x: r9|QWORD, y: [rsi|DWORD * 8 + 48]) size: QWORD <|@ <|@
      nr  328  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B27 -> B29 falseDestination: B27 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4607395966692658459
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  314  <|@ instruction r8|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  316  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  340  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3 <|@ <|@
      nr  342  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  344  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  346  <|@ instruction MOVB (x: [rsi|QWORD[*] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  348  <|@ instruction rsi|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD <|@ <|@
      nr  350  <|@ instruction JUMP ~[] destination: B29 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B29" 
    successors "B19" "B15" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4612573444537173462
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  194  <|@ instruction TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr  196  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B13 -> B19 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607395966692658459
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  254  <|@ instruction r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/compiler/graph/Node;, resolved>} <|@ <|@
      nr  256  <|@ instruction r8|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  258  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction rsi|DWORD[.] = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  262  <|@ instruction TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr  264  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602892367065287963
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  276  <|@ instruction CMP [rsi|DWORD[.] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  278  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598388767437917467
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  288  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3 <|@ <|@
      nr  290  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  292  <|@ instruction JUMP ~[] destination: B24 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B24" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599736523872206480
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  412  <|@ instruction rsi|DWORD[.] = MOV [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  414  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0, stack:40, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 64]
locals: r10|QWORD[.] 
org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
locals: r10|QWORD[.] 
java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
locals: - stack:32|QWORD[.] r10|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:64, 1, 13] <|@ <|@
      nr  416  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3 <|@ <|@
      nr  418  <|@ st <@st|@reference-map: [stack:40, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 89]
locals: stack:40|QWORD[.] 
org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
locals: stack:40|QWORD[.] 
java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
locals: - stack:32|QWORD[.] stack:40|QWORD[.] - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<NodePredicate.apply(Node)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:89, 1, 13] <|@ <|@
      nr  420  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  426  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  422  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595232924244835984
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  436  <|@ instruction rsi|DWORD[.] = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  438  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3 <|@ <|@
      nr  440  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  442  <|@ instruction JUMP ~[] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B33" "B21" 
    successors "B83" "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4605756349488152116
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  446  <|@ instruction TEST (x: rsi|QWORD[.], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  448  <|@ instruction BRANCH trueDestinationProbability: 0.610225267647409 condition: = trueDestination: B40 -> B83 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599581485706735098
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  456  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  460  <|@ instruction JUMP ~[] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B49" "B47" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4598924833952420745
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  474  <|@ instruction CMP [rdx|QWORD[.] + 12] y: 0 size: DWORD <|@ <|@
      nr  476  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B45 -> B49 falseDestination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B64" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4594421234325050249
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  484  <|@ instruction rsi|DWORD[.] = MOV [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  486  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0, stack:40, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 0]
locals: r10|QWORD[.] 
org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
locals: r10|QWORD[.] - 
org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
locals: - 
java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
locals: - stack:32|QWORD[.] r10|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:0, 1, 1, 22] <|@ <|@
      nr  488  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3 <|@ <|@
      nr  490  <|@ st <@st|@reference-map: [stack:40, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 25]
locals: stack:40|QWORD[.] 
org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
locals: stack:40|QWORD[.] - 
org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
locals: - 
java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
locals: - stack:32|QWORD[.] stack:40|QWORD[.] - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<NodePredicate.apply(Node)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:25, 1, 1, 22] <|@ <|@
      nr  492  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  494  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4589917634697679753
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  498  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  500  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B43" "B45" "B48" 
    successors "B50" "B53" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4602771781825476888
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  504  <|@ instruction rsi|DWORD[.] = MOV [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  506  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:40, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 33]
locals: r10|QWORD[.] 
org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
locals: r10|QWORD[.] - 
org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
locals: - 
java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
locals: - stack:32|QWORD[.] r10|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:33, 1, 1, 22] <|@ <|@
      nr  508  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3 <|@ <|@
      nr  510  <|@ st <@st|@reference-map: [stack:40, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 37]
locals: stack:40|QWORD[.] 
org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
locals: stack:40|QWORD[.] - 
org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
locals: - 
java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
locals: - stack:32|QWORD[.] stack:40|QWORD[.] - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Iterator.hasNext()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:37, 1, 1, 22] <|@ <|@
      nr  512  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  514  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B55" "B57" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4598268182198106392
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  542  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  544  <|@ instruction rsi|DWORD[.] = MOV [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  546  <|@ instruction TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr  548  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B53 -> B55 falseDestination: B53 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B61" "B59" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4598268182198106392
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  570  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3 <|@ <|@
      nr  572  <|@ st <@st|@reference-map: [stack:40, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 50]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] 
org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
locals: stack:40|QWORD[.] - 
org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
locals: - 
java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
locals: - stack:32|QWORD[.] stack:40|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Iterator.next()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:50, 1, 1, 22] <|@ <|@
      nr  574  <|@ instruction TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  580  <|@ instruction r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/compiler/graph/Node;, resolved>} <|@ <|@
      nr  576  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B61 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B61" "B62" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4597441832394896274
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  592  <|@ instruction rsi|DWORD = MOV [rax|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  594  <|@ instruction CMP (x: r9|QWORD, y: [rsi|DWORD * 8 + 48]) size: QWORD <|@ <|@
      nr  596  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B59 -> B61 falseDestination: B59 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B57" "B59" 
    successors "B43" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4598268182198106392
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  582  <|@ instruction r8|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  584  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  608  <|@ instruction rsi|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3 <|@ <|@
      nr  610  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr  612  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  614  <|@ instruction MOVB (x: [rsi|QWORD[*] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  616  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  618  <|@ instruction JUMP ~[] destination: B61 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B61" 
    successors "B49" "B45" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4603428433579791241
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  464  <|@ instruction TEST (x: rdx|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  466  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B43 -> B49 falseDestination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B40" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602892367065287963
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  268  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3 <|@ <|@
      nr  270  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  272  <|@ instruction JUMP ~[] destination: B21 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B33" "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599062645655061974
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  368  <|@ instruction r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/compiler/graph/Node;, resolved>} <|@ <|@
      nr  370  <|@ instruction r8|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  372  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction r11|DWORD[.] = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  376  <|@ instruction TEST (x: r11|DWORD[.], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr  378  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594559046027691478
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  392  <|@ instruction CMP [r11|DWORD[.] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  394  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590055446400320982
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  404  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3 <|@ <|@
      nr  406  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  408  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B80" "B184" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598932903126947845
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  766  <|@ instruction CMP stack:44|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeUsageIterator;, resolved>;compressed} <|@ <|@
      nr  768  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B184 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B83" "B84" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598932903126947845
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  772  <|@ instruction rsi|DWORD[.] = MOV [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  774  <|@ instruction TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr  776  <|@ instruction BRANCH trueDestinationProbability: 0.610225267647409 condition: = trueDestination: B80 -> B83 falseDestination: B80 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B85" "B172" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592867281681706917
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  792  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  794  <|@ st <@st|@reference-map: [stack:40, stack:48]
live-base-pointers: []
java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
locals: - stack:32|QWORD[.] stack:40|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Iterator.next()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:22] <|@ <|@
      nr  796  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  798  <|@ instruction CMP [rdx|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$90/1190971543;, resolved>;compressed} <|@ <|@
      nr  800  <|@ instruction BRANCH trueDestinationProbability: 0.5456716749520927 condition: = trueDestination: B84 -> B85 falseDestination: B84 -> B172 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B86" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589112958858568504
    begin_IR
      LIR
      nr  802  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  804  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  806  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  808  <|@ instruction JUMP ~[] destination: B85 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" "B76" 
    successors "B90" "B88" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592365335938284452
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  812  <|@ instruction stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  814  <|@ instruction TEST (x: rsi|QWORD[.], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  816  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B86 -> B90 falseDestination: B86 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B90" "B170" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591595244410772500
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  824  <|@ instruction CMP [rsi|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/nodes/FrameState;, resolved>;compressed} <|@ <|@
      nr  826  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B88 -> B90 falseDestination: B88 -> B170 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B86" "B88" 
    successors "B91" "B92" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592365335938284452
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  834  <|@ instruction TEST (x: rsi|QWORD[.], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  836  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B90 -> B91 falseDestination: B90 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B93" "B94" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592365335938284452
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  848  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  850  <|@ instruction r10|DWORD[.] = MOV [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  852  <|@ instruction stack:60|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  854  <|@ instruction TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr  856  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B92 -> B93 falseDestination: B92 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B95" "B96" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592365335938284452
    begin_IR
      LIR
      nr  866  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  868  <|@ instruction rcx|DWORD[.] = MOV [r10|DWORD[.] * 8 + 28] size: DWORD <|@ <|@
      nr  870  <|@ instruction TEST (x: rcx|DWORD[.], y: rcx|DWORD[.]) size: DWORD <|@ <|@
      nr  872  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B94 -> B95 falseDestination: B94 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" "B169" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592365335938284452
    begin_IR
      LIR
      nr  882  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  884  <|@ instruction r11|DWORD = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  886  <|@ instruction r8|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  888  <|@ instruction r9|DWORD = SAR r8|DWORD y: 6 size: DWORD <|@ <|@
      nr  890  <|@ instruction CMP (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  892  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B96 -> B97 falseDestination: B96 -> B169 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B98" "B101" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592365335938284452
    begin_IR
      LIR
      nr  894  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  896  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3 <|@ <|@
      nr  898  <|@ instruction rdi|QWORD = MOVE input: long[1|0x1] <|@ <|@
      nr  900  <|@ instruction rcx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  902  <|@ instruction rdi|QWORD = SHL (x: rdi|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr  904  <|@ instruction rdi|QWORD = OR (x: rdi|QWORD, ~y: [rbx|QWORD[.] + r9|DWORD * 8 + 16]) size: QWORD <|@ <|@
      nr  906  <|@ instruction MOV (x: [rbx|QWORD[.] + r9|DWORD * 8 + 16], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  908  <|@ instruction r9|DWORD[.] = MOV [rsi|QWORD[.] + 68] size: DWORD <|@ <|@
      nr  910  <|@ instruction rdi|DWORD[.] = MOV [rsi|QWORD[.] + 80] size: DWORD <|@ <|@
      nr  912  <|@ instruction TEST (x: rdi|DWORD[.], y: rdi|DWORD[.]) size: DWORD <|@ <|@
      nr  914  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B97 -> B98 falseDestination: B97 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B102" "B103" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587861736310913956
    begin_IR
      LIR
      nr  936  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  938  <|@ instruction rax|DWORD[.] = MOV [rdi|DWORD[.] * 8 + 28] size: DWORD <|@ <|@
      nr  940  <|@ instruction TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  942  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B109" "B105" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587861736310913956
    begin_IR
      LIR
      nr  956  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  958  <|@ instruction rbp|DWORD = MOV [rdi|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  960  <|@ instruction CMP rbp|DWORD y: 1 size: DWORD <|@ <|@
      nr  962  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B103 -> B109 falseDestination: B103 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B106" "B166" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583358136683543460
    begin_IR
      LIR
      nr  968  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  970  <|@ instruction rcx|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  972  <|@ instruction r13|QWORD = MOVSXD rbp|DWORD size: QWORD <|@ <|@
      nr  974  <|@ instruction r13|QWORD = DEC r13|QWORD size: QWORD <|@ <|@
      nr  976  <|@ instruction r14|QWORD = MOV rcx|DWORD size: DWORD <|@ <|@
      nr  978  <|@ instruction CMP (x: r14|QWORD, y: r13|QWORD) size: QWORD <|@ <|@
      nr  980  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B105 -> B106 falseDestination: B105 -> B166 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B166" "B109" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583358136683543460
    begin_IR
      LIR
      nr  982  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  984  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  986  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B106 -> B166 falseDestination: B106 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B103" "B106" 
    successors "B110" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587861736310913956
    begin_IR
      LIR
      nr  998  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1000  <|@ instruction r8|DWORD = MOV [rdi|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr 1002  <|@ instruction r13|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1004  <|@ instruction JUMP ~[] destination: B109 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B115" "B113" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4587861736310913956
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 1014  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3 <|@ <|@
      nr 1016  <|@ instruction rcx|DWORD[.] = MOV [rcx|QWORD[.] + r13|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1018  <|@ instruction TEST (x: rcx|DWORD[.], y: rcx|DWORD[.]) size: DWORD <|@ <|@
      nr 1020  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B111 -> B115 falseDestination: B111 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B115" "B122" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4587091644783402004
    begin_IR
      LIR
      nr 1026  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1028  <|@ instruction r14|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/compiler/nodes/virtual/EscapeObjectState;, resolved>} <|@ <|@
      nr 1030  <|@ instruction rsi|DWORD = MOV [rcx|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr 1032  <|@ instruction CMP (x: r14|QWORD, y: [rsi|DWORD * 8 + 64]) size: QWORD <|@ <|@
      nr 1034  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B113 -> B115 falseDestination: B113 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B111" "B113" 
    successors "B116" "B118" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4587861736310913956
    begin_IR
      LIR
      nr 1040  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1042  <|@ instruction TEST (x: rcx|DWORD[.], y: rcx|DWORD[.]) size: DWORD <|@ <|@
      nr 1044  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B115 -> B116 falseDestination: B115 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B119" "B120" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4587861736310913956
    begin_IR
      LIR
      nr 1058  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1060  <|@ instruction rcx|DWORD = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr 1062  <|@ instruction rsi|DWORD = SAR rcx|DWORD y: 6 size: DWORD <|@ <|@
      nr 1064  <|@ instruction CMP (x: r11|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1066  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B118 -> B119 falseDestination: B118 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B110" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 2
    probability 4587861736310913956
    begin_IR
      LIR
      nr 1068  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1070  <|@ instruction r14|QWORD = MOVE input: long[1|0x1] <|@ <|@
      nr 1072  <|@ instruction r14|QWORD = SHL (x: r14|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr 1074  <|@ instruction r14|QWORD = OR (x: r14|QWORD, ~y: [rbx|QWORD[.] + rsi|DWORD * 8 + 16]) size: QWORD <|@ <|@
      nr 1076  <|@ instruction MOV (x: [rbx|QWORD[.] + rsi|DWORD * 8 + 16], y: r14|QWORD) size: QWORD <|@ <|@
      nr 1078  <|@ instruction r13|DWORD = INC r13|DWORD size: DWORD <|@ <|@
      nr 1080  <|@ instruction JUMP ~[] destination: B119 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" "B119" 
    successors "B111" "B125" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 2
    probability 4592365335938284452
    begin_IR
      LIR
      nr 1006  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1008  <|@ instruction CMP (x: rbp|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr 1010  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B110 -> B111 falseDestination: B110 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598268182198106392
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  518  <|@ instruction r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/compiler/graph/Node;, resolved>} <|@ <|@
      nr  520  <|@ instruction r8|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  522  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  524  <|@ instruction rsi|DWORD[.] = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  526  <|@ instruction TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr  528  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B64" "B50" 
    successors "B68" "B69" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599581485706735098
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  662  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:40, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 64]
locals: r10|QWORD[.] 
org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
locals: r10|QWORD[.] - 
org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
locals: - 
java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
locals: - stack:32|QWORD[.] r10|QWORD[.] - 
>@ <|@ instruction CMP [rsi|DWORD[.] * 8 + 12] y: 0 size: DWORD state [bci:64, 1, 1, 22] <|@ <|@
      nr  664  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B67 -> B68 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595077886079364602
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  676  <|@ instruction rdx|DWORD[.] = MOV [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  678  <|@ instruction TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr  680  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" "B74" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595077886079364602
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  692  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3 <|@ <|@
      nr  694  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3 <|@ <|@
      nr  696  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  698  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  700  <|@ st <@st|@reference-map: [stack:40, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 89]
locals: stack:40|QWORD[.] 
org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
locals: stack:40|QWORD[.] - 
org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
locals: - 
java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
locals: - stack:32|QWORD[.] stack:40|QWORD[.] - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<NodePredicate.apply(Node)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:89, 1, 1, 22] <|@ <|@
      nr  702  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  708  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  704  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590574286451994106
    begin_IR
      LIR
      nr  724  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  728  <|@ instruction rsi|DWORD[.] = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  730  <|@ instruction TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr  732  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B86" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590574286451994106
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  744  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  746  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  748  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3 <|@ <|@
      nr  750  <|@ instruction CMP [rdx|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$90/1190971543;, resolved>;compressed} <|@ <|@
      nr  752  <|@ instruction BRANCH trueDestinationProbability: 0.5456716749520927 condition: = trueDestination: B76 -> B86 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B40" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594559046027691478
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  382  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  384  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3 <|@ <|@
      nr  386  <|@ instruction rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  388  <|@ instruction JUMP ~[] destination: B33 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B65" "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589917634697679753
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  636  <|@ instruction r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/compiler/graph/Node;, resolved>} <|@ <|@
      nr  638  <|@ instruction r8|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  640  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  642  <|@ instruction rsi|DWORD[.] = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  644  <|@ instruction TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr  646  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B126" "B128" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587861736310913956
    begin_IR
      LIR
      nr 1114  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1116  <|@ instruction TEST (x: r9|DWORD[.], y: r9|DWORD[.]) size: DWORD <|@ <|@
      nr 1118  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B125 -> B126 falseDestination: B125 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B125" "B98" 
    successors "B129" "B164" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587861736310913956
    begin_IR
      LIR
      nr 1134  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1136  <|@ st <@st|@reference-map: [rdx:0, rbx:0, r9:0, r10:0, stack:20, stack:24, stack:40, stack:48]
live-base-pointers: []
org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:659) [bci: 49]
locals: stack:56|QWORD[.] vobject:1492729447:0{arg$1=r10|DWORD[.]} - - 
org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
locals: - - 
org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
locals: - - 
java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
locals: - rdx|QWORD[.] stack:40|QWORD[.] - 
vobject:1492729447:0{arg$1=r10|DWORD[.]} Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$92/1492729447; r10|DWORD[.] 
>@ <|@ instruction r13|DWORD = MOV [r9|DWORD[.] * 8 + 12] size: DWORD state [bci:49, 7, 8, 30] <|@ <|@
      nr 1138  <|@ instruction rsi|DWORD = SAR r13|DWORD y: 6 size: DWORD <|@ <|@
      nr 1140  <|@ instruction CMP (x: r11|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1142  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B128 -> B129 falseDestination: B128 -> B164 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B128" 
    successors "B130" "B136" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587861736310913956
    begin_IR
      LIR
      nr 1144  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1146  <|@ instruction stack:64|DWORD[.] = MOVE r9|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1148  <|@ instruction r11|QWORD = MOVE input: long[1|0x1] <|@ <|@
      nr 1150  <|@ instruction rcx|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1152  <|@ instruction r11|QWORD = SHL (x: r11|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr 1154  <|@ instruction r11|QWORD = OR (x: r11|QWORD, ~y: [rbx|QWORD[.] + rsi|DWORD * 8 + 16]) size: QWORD <|@ <|@
      nr 1156  <|@ instruction MOV (x: [rbx|QWORD[.] + rsi|DWORD * 8 + 16], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1158  <|@ instruction r14|DWORD[.] = MOV [r9|DWORD[.] * 8 + 80] size: DWORD <|@ <|@
      nr 1160  <|@ instruction TEST (x: r14|DWORD[.], y: r14|DWORD[.]) size: DWORD <|@ <|@
      nr 1162  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B129 -> B130 falseDestination: B129 -> B136 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B137" "B138" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583358136683543460
    begin_IR
      LIR
      nr 1246  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1248  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr 1250  <|@ instruction r11|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr 1252  <|@ instruction CMP (x: r11|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr 1254  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B136 -> B137 falseDestination: B136 -> B138 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583281127530792265
    begin_IR
      LIR
      nr 1276  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1278  <|@ instruction MOV (x: [r15|QWORD + 96], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1280  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0 <|@ <|@
      nr 1282  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 1284  <|@ instruction JUMP ~[] destination: B138 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B138" "B137" 
    successors "B140" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583358136683543460
    begin_IR
      LIR
      nr 1286  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1288  <|@ instruction r11|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1290  <|@ instruction stack:72|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1292  <|@ instruction r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeList$NodeListIterator;, resolved>} <|@ <|@
      nr 1294  <|@ instruction r8|QWORD = MOV [r8|QWORD + 168] size: QWORD <|@ <|@
      nr 1296  <|@ instruction MOV (x: [rsi|QWORD[*]], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1298  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeList$NodeListIterator;, resolved>;compressed} <|@ <|@
      nr 1300  <|@ instruction r8|DWORD = MOV [r14|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr 1302  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1304  <|@ instruction MOV (x: [rsi|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr 1306  <|@ instruction MOV (x: [rsi|QWORD[*] + 20], y: r14|DWORD[.]) size: DWORD <|@ <|@
      nr 1308  <|@ instruction JUMP ~[] destination: B139 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B145" "B143" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4583358136683543460
    begin_IR
      LIR
      nr 1320  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 1322  <|@ instruction rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1324  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:20, stack:40, stack:48]
live-base-pointers: []
org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 32]
locals: stack:64|DWORD[.] vobject:1492729447:0{arg$1=stack:60|DWORD[.]} stack:72|QWORD[.] - 
org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
locals: - - - - 
org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
locals: - - 
org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
locals: - - 
java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
locals: - stack:32|QWORD[.] stack:40|QWORD[.] - 
vobject:1492729447:0{arg$1=stack:60|DWORD[.]} Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$92/1492729447; stack:60|DWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<NodeList$NodeListIterator.next()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:32, 61, 7, 8, 30] <|@ <|@
      nr 1326  <|@ instruction TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr 1328  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B141 -> B145 falseDestination: B141 -> B143 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B145" "B155" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4582588045156031508
    begin_IR
      LIR
      nr 1334  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1336  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/compiler/nodes/virtual/EscapeObjectState;, resolved>} <|@ <|@
      nr 1338  <|@ instruction rsi|DWORD = MOV [rax|QWORD[.] + 8] size: DWORD <|@ <|@
      nr 1340  <|@ instruction CMP (x: rcx|QWORD, y: [rsi|DWORD * 8 + 64]) size: QWORD <|@ <|@
      nr 1342  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B143 -> B145 falseDestination: B143 -> B155 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B141" "B143" 
    successors "B146" "B148" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4583358136683543460
    begin_IR
      LIR
      nr 1348  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1350  <|@ instruction TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr 1352  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B145 -> B146 falseDestination: B145 -> B148 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B145" 
    successors "B149" "B151" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4583358136683543460
    begin_IR
      LIR
      nr 1372  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1374  <|@ instruction r10|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1376  <|@ instruction rcx|DWORD[.] = MOV [r10|DWORD[.] * 8 + 28] size: DWORD <|@ <|@
      nr 1378  <|@ instruction TEST (x: rcx|DWORD[.], y: rcx|DWORD[.]) size: DWORD <|@ <|@
      nr 1380  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B148 -> B149 falseDestination: B148 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B148" 
    successors "B152" "B153" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4583358136683543460
    begin_IR
      LIR
      nr 1400  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1402  <|@ instruction rsi|DWORD = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr 1404  <|@ instruction rdx|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1406  <|@ instruction r11|DWORD = SAR rdx|DWORD y: 6 size: DWORD <|@ <|@
      nr 1408  <|@ instruction CMP (x: rsi|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr 1410  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B151 -> B152 falseDestination: B151 -> B153 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B151" 
    successors "B140" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 2
    probability 4583358136683543460
    begin_IR
      LIR
      nr 1412  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1414  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3 <|@ <|@
      nr 1416  <|@ instruction r8|QWORD = MOVE input: long[1|0x1] <|@ <|@
      nr 1418  <|@ instruction rcx|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1420  <|@ instruction r8|QWORD = SHL (x: r8|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr 1422  <|@ instruction r8|QWORD = OR (x: r8|QWORD, ~y: [rsi|QWORD[.] + r11|DWORD * 8 + 16]) size: QWORD <|@ <|@
      nr 1424  <|@ instruction MOV (x: [rsi|QWORD[.] + r11|DWORD * 8 + 16], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1426  <|@ instruction r11|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1428  <|@ instruction JUMP ~[] destination: B152 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B139" "B152" 
    successors "B141" "B158" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 2
    probability 4587861736310913956
    begin_IR
      LIR
      nr 1310  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1312  <|@ instruction rsi|DWORD[.] = MOV [r11|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1314  <|@ st <@st|@reference-map: [r11:0, stack:8, stack:16, stack:20, stack:40, stack:48]
live-base-pointers: []
org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 22]
locals: stack:64|DWORD[.] vobject:1492729447:0{arg$1=stack:60|DWORD[.]} r11|QWORD[.] - 
org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
locals: - - - - 
org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
locals: - - 
org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
locals: - - 
java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
locals: - stack:32|QWORD[.] stack:40|QWORD[.] - 
vobject:1492729447:0{arg$1=stack:60|DWORD[.]} Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$92/1492729447; stack:60|DWORD[.] 
>@ <|@ instruction rsi|DWORD = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD state [bci:22, 61, 7, 8, 30] <|@ <|@
      nr 1316  <|@ instruction CMP (x: rsi|DWORD, y: [r11|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr 1318  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B140 -> B141 falseDestination: B140 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B99" "B128" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587861736310913956
    begin_IR
      LIR
      nr  916  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  918  <|@ instruction TEST (x: r9|DWORD[.], y: r9|DWORD[.]) size: DWORD <|@ <|@
      nr  920  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B98 -> B99 falseDestination: B98 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B172"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B173" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587614405250104338
    begin_IR
      LIR
      nr 1620  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1622  <|@ instruction r11|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1624  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1626  <|@ instruction JUMP ~[] destination: B172 -> B173 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B173"
    from_bci -1
    to_bci -1
    predecessors "B172" "B78" 
    successors "B174" "B183" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591076232195416571
    begin_IR
      LIR
      nr 1628  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1630  <|@ instruction CMP [rdx|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/phases/common/CanonicalizerPhase$Instance$$Lambda$21/340690072;, resolved>;compressed} <|@ <|@
      nr 1632  <|@ instruction BRANCH trueDestinationProbability: 0.7065224035699004 condition: = trueDestination: B173 -> B174 falseDestination: B173 -> B183 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B174"
    from_bci -1
    to_bci -1
    predecessors "B173" 
    successors "B178" "B176" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589194509158168565
    begin_IR
      LIR
      nr 1634  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1636  <|@ instruction TEST (x: r11|QWORD[.], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr 1638  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B174 -> B178 falseDestination: B174 -> B176 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B176"
    from_bci -1
    to_bci -1
    predecessors "B174" 
    successors "B178" "B181" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588314980326800979
    begin_IR
      LIR
      nr 1644  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1646  <|@ instruction r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/compiler/graph/Node;, resolved>} <|@ <|@
      nr 1648  <|@ instruction rsi|DWORD = MOV [r11|QWORD[.] + 8] size: DWORD <|@ <|@
      nr 1650  <|@ instruction CMP (x: r9|QWORD, y: [rsi|DWORD * 8 + 48]) size: QWORD <|@ <|@
      nr 1652  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B176 -> B178 falseDestination: B176 -> B181 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B178"
    from_bci -1
    to_bci -1
    predecessors "B174" "B176" 
    successors "B179" "B180" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589194509158168565
    begin_IR
      LIR
      nr 1658  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1660  <|@ instruction rsi|DWORD[.] = MOV [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1662  <|@ instruction TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr 1664  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B178 -> B179 falseDestination: B178 -> B180 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B180"
    from_bci -1
    to_bci -1
    predecessors "B178" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4589194509158168565
    begin_IR
      LIR
      nr 1674  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1676  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3 <|@ <|@
      nr 1678  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1680  <|@ st <@st|@reference-map: [stack:40, stack:48]
live-base-pointers: []
org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance$$Lambda$21.340690072.accept(Object) [bci: 8]
locals: - - 
java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
locals: - stack:32|QWORD[.] stack:40|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<NodeWorkList.add(Node)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:8, 30] <|@ <|@
      nr 1682  <|@ instruction r11|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1684  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1686  <|@ instruction JUMP ~[] destination: B180 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B173" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4585530859885987812
    begin_IR
      LIR
      nr  758  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  760  <|@ instruction r11|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  762  <|@ instruction JUMP ~[] destination: B78 -> B173 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4583358136683543460
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  924  <|@ st <@st|@reference-map: [r10:0, stack:24, stack:40, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:97) [bci: 44]
locals: r10|DWORD[.] - r8|DWORD 
org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
locals: - - 
org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
locals: vobject:1492729447:0{arg$1=r10|DWORD[.]} stack:56|QWORD[.] 
org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:653) [bci: 2]
locals: stack:56|QWORD[.] vobject:1492729447:0{arg$1=r10|DWORD[.]} - - 
org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
locals: - - 
org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
locals: - - 
java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
locals: - stack:32|QWORD[.] stack:40|QWORD[.] - 
vobject:1492729447:0{arg$1=r10|DWORD[.]} Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$92/1492729447; r10|DWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:44, 2, 5, 2, 7, 8, 30] <|@ <|@
      nr  926  <|@ instruction r11|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  928  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  930  <|@ instruction JUMP ~[] destination: B99 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4583358136683543460
    begin_IR
      LIR
      nr 1120  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1122  <|@ st <@st|@reference-map: [rdi:0, r10:0, stack:24, stack:40, stack:48]
live-base-pointers: []
org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 22]
locals: stack:56|QWORD[.] vobject:1492729447:0{arg$1=r10|DWORD[.]} vobject:NodeList$NodeListIterator:1{expectedModCount=r8|DWORD,index=r13|DWORD,list=rdi|DWORD[.]} - 
org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
locals: - - 
org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
locals: - - 
java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
locals: - stack:32|QWORD[.] stack:40|QWORD[.] - 
vobject:1492729447:0{arg$1=r10|DWORD[.]} Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$92/1492729447; r10|DWORD[.] 
vobject:NodeList$NodeListIterator:1{expectedModCount=r8|DWORD,index=r13|DWORD,list=rdi|DWORD[.]} Lorg/graalvm/compiler/graph/NodeList$NodeListIterator; r8|DWORD r13|DWORD rdi|DWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:22, 7, 8, 30] <|@ <|@
      nr 1124  <|@ instruction r11|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1126  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1128  <|@ instruction JUMP ~[] destination: B126 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B131" "B132" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583358136683543460
    begin_IR
      LIR
      nr 1164  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1166  <|@ instruction r14|DWORD[.] = MOV [r9|DWORD[.] * 8 + 68] size: DWORD <|@ <|@
      nr 1168  <|@ instruction TEST (x: r14|DWORD[.], y: r14|DWORD[.]) size: DWORD <|@ <|@
      nr 1170  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B130 -> B131 falseDestination: B130 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B130" 
    successors "B133" "B134" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4578854537056172964
    begin_IR
      LIR
      nr 1182  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1184  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr 1186  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr 1188  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr 1190  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B132 -> B133 falseDestination: B132 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B135" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4578777527903421769
    begin_IR
      LIR
      nr 1208  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1210  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1212  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 208] instr: 0 <|@ <|@
      nr 1214  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 1216  <|@ instruction JUMP ~[] destination: B134 -> B135 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" "B133" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4578854537056172964
    begin_IR
      LIR
      nr 1218  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1220  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$92/1492729447;, resolved>} <|@ <|@
      nr 1222  <|@ instruction r11|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1224  <|@ instruction rdx|QWORD = MOV [rdx|QWORD + 168] size: QWORD <|@ <|@
      nr 1226  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1228  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$92/1492729447;, resolved>;compressed} <|@ <|@
      nr 1230  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr 1232  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: r14|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3 <|@ <|@
      nr 1234  <|@ instruction rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1236  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1238  <|@ st <@st|@reference-map: [stack:40, stack:48]
live-base-pointers: []
org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
locals: - - - - 
org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
locals: - - - - 
org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
locals: - - 
org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
locals: - - 
java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
locals: - stack:32|QWORD[.] stack:40|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FrameState.applyToVirtual(VirtualState$VirtualClosure)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:61, 61, 7, 8, 30] <|@ <|@
      nr 1240  <|@ instruction r11|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1242  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1244  <|@ instruction JUMP ~[] destination: B135 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B158"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B159" "B160" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583358136683543460
    begin_IR
      LIR
      nr 1474  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1476  <|@ instruction r9|DWORD[.] = MOVE stack:64|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1478  <|@ instruction r10|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1480  <|@ instruction r13|DWORD[.] = MOV [r9|DWORD[.] * 8 + 68] size: DWORD <|@ <|@
      nr 1482  <|@ instruction TEST (x: r13|DWORD[.], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr 1484  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B158 -> B159 falseDestination: B158 -> B160 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B160"
    from_bci -1
    to_bci -1
    predecessors "B158" 
    successors "B161" "B162" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4578854537056172964
    begin_IR
      LIR
      nr 1496  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1498  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr 1500  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr 1502  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr 1504  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B160 -> B161 falseDestination: B160 -> B162 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B162"
    from_bci -1
    to_bci -1
    predecessors "B160" 
    successors "B163" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4578777527903421769
    begin_IR
      LIR
      nr 1522  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1524  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1526  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 208] instr: 0 <|@ <|@
      nr 1528  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 1530  <|@ instruction JUMP ~[] destination: B162 -> B163 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B163"
    from_bci -1
    to_bci -1
    predecessors "B162" "B161" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4578854537056172964
    begin_IR
      LIR
      nr 1532  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1534  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$92/1492729447;, resolved>} <|@ <|@
      nr 1536  <|@ instruction r11|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1538  <|@ instruction rdx|QWORD = MOV [rdx|QWORD + 168] size: QWORD <|@ <|@
      nr 1540  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1542  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$92/1492729447;, resolved>;compressed} <|@ <|@
      nr 1544  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr 1546  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3 <|@ <|@
      nr 1548  <|@ instruction rsi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1550  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1552  <|@ st <@st|@reference-map: [stack:40, stack:48]
live-base-pointers: []
org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
locals: - - - - 
org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
locals: - - - - 
org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
locals: - - 
org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
locals: - - 
java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
locals: - stack:32|QWORD[.] stack:40|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FrameState.applyToVirtual(VirtualState$VirtualClosure)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:61, 61, 7, 8, 30] <|@ <|@
      nr 1554  <|@ instruction r11|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1556  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1558  <|@ instruction JUMP ~[] destination: B163 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B183"
    from_bci -1
    to_bci -1
    predecessors "B173" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4583184113557415962
    begin_IR
      LIR
      nr 1702  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1704  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1706  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1708  <|@ st <@st|@reference-map: [stack:40, stack:48]
live-base-pointers: []
java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
locals: - stack:32|QWORD[.] stack:40|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Consumer.accept(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:30] <|@ <|@
      nr 1710  <|@ instruction r11|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1712  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1714  <|@ instruction JUMP ~[] destination: B183 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B130" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4578854537056172964
    begin_IR
      LIR
      nr 1172  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1174  <|@ st <@st|@reference-map: [r9:0, r10:0, stack:40, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:97) [bci: 44]
locals: r10|DWORD[.] - r13|DWORD 
org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
locals: - - 
org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
locals: vobject:1492729447:0{arg$1=r10|DWORD[.]} r9|DWORD[.] 
org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:653) [bci: 2]
locals: r9|DWORD[.] vobject:1492729447:0{arg$1=r10|DWORD[.]} - - 
org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
locals: - - - - 
org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
locals: - - 
org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
locals: - - 
java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
locals: - stack:32|QWORD[.] stack:40|QWORD[.] - 
vobject:1492729447:0{arg$1=r10|DWORD[.]} Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$92/1492729447; r10|DWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:44, 2, 5, 2, 61, 7, 8, 30] <|@ <|@
      nr 1176  <|@ instruction r11|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1178  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1180  <|@ instruction JUMP ~[] destination: B131 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B159"
    from_bci -1
    to_bci -1
    predecessors "B158" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4578854537056172964
    begin_IR
      LIR
      nr 1486  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1488  <|@ st <@st|@reference-map: [r9:0, r10:0, stack:8, stack:40, stack:48]
live-base-pointers: []
org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 22]
locals: r9|DWORD[.] vobject:1492729447:0{arg$1=r10|DWORD[.]} stack:72|QWORD[.] - 
org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
locals: - - - - 
org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
locals: - - 
org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
locals: - - 
java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
locals: - stack:32|QWORD[.] stack:40|QWORD[.] - 
vobject:1492729447:0{arg$1=r10|DWORD[.]} Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$92/1492729447; r10|DWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:22, 61, 7, 8, 30] <|@ <|@
      nr 1490  <|@ instruction r11|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1492  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1494  <|@ instruction JUMP ~[] destination: B159 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4553564209420277460
    begin_IR
      LIR
      nr 1256  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1258  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1260  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr 1262  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1264  <|@ st <@st|@reference-map: [r14:0, stack:16, stack:20, stack:40, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:97) [bci: 44]
locals: stack:60|DWORD[.] - r13|DWORD 
org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
locals: - - 
org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
locals: vobject:1492729447:0{arg$1=stack:60|DWORD[.]} stack:64|DWORD[.] 
org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:653) [bci: 2]
locals: stack:64|DWORD[.] vobject:1492729447:0{arg$1=stack:60|DWORD[.]} - - 
org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
locals: - - - - 
org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
locals: - - 
org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
locals: - - 
java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
locals: - stack:32|QWORD[.] stack:40|QWORD[.] - 
vobject:1492729447:0{arg$1=stack:60|DWORD[.]} Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$92/1492729447; stack:60|DWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:44, 2, 5, 2, 61, 7, 8, 30] <|@ <|@
      nr 1266  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1268  <|@ instruction r9|DWORD[.] = MOVE stack:64|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1270  <|@ instruction r10|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1272  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1274  <|@ instruction JUMP ~[] destination: B137 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B135" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4549060609792906964
    begin_IR
      LIR
      nr 1192  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1194  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1196  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1198  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1200  <|@ st <@st|@reference-map: [r14:0, stack:16, stack:20, stack:40, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:97) [bci: 44]
locals: stack:60|DWORD[.] - r13|DWORD 
org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
locals: - - 
org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
locals: vobject:1492729447:0{arg$1=stack:60|DWORD[.]} stack:64|DWORD[.] 
org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:653) [bci: 2]
locals: stack:64|DWORD[.] vobject:1492729447:0{arg$1=stack:60|DWORD[.]} - - 
org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
locals: - - - - 
org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
locals: - - 
org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
locals: - - 
java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
locals: - stack:32|QWORD[.] stack:40|QWORD[.] - 
vobject:1492729447:0{arg$1=stack:60|DWORD[.]} Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$92/1492729447; stack:60|DWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:44, 2, 5, 2, 61, 7, 8, 30] <|@ <|@
      nr 1202  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1204  <|@ instruction r10|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1206  <|@ instruction JUMP ~[] destination: B133 -> B135 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B161"
    from_bci -1
    to_bci -1
    predecessors "B160" 
    successors "B163" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4549060609792906964
    begin_IR
      LIR
      nr 1506  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1508  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1510  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1512  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1514  <|@ st <@st|@reference-map: [r13:0, stack:8, stack:16, stack:20, stack:40, stack:48]
live-base-pointers: []
org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 22]
locals: stack:64|DWORD[.] vobject:1492729447:0{arg$1=stack:60|DWORD[.]} stack:72|QWORD[.] - 
org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
locals: - - - - 
org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
locals: - - 
org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
locals: - - 
java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
locals: - stack:32|QWORD[.] stack:40|QWORD[.] - 
vobject:1492729447:0{arg$1=stack:60|DWORD[.]} Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$92/1492729447; stack:60|DWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:22, 61, 7, 8, 30] <|@ <|@
      nr 1516  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1518  <|@ instruction r10|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1520  <|@ instruction JUMP ~[] destination: B161 -> B163 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B80" "B40" "B38" "B23" "B35" 
    successors 
    xhandlers
    flags 
    probability 4608068898668341784
    begin_IR
      LIR
      nr  786  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  788  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B83" 
    xhandlers
    flags 
    probability 4598388767437917467
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  282  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  284  <|@ instruction JUMP ~[] destination: B23 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B83" 
    xhandlers
    flags 
    probability 4595232924244835984
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  428  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  430  <|@ instruction JUMP ~[] destination: B38 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B73" 
    xhandlers
    flags 
    probability 4595077886079364602
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  668  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  670  <|@ instruction rsi|DWORD = MOVE input: int[-286908|0xfffffffffffb9f44] <|@ <|@
      nr  672  <|@ instruction JUMP ~[] destination: B68 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B68" "B72" 
    successors 
    xhandlers
    flags 
    probability 4598032818973779191
    begin_IR
      LIR
      nr  716  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  718  <|@ instruction MOV (x: [r15|QWORD + 668], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  720  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  722  <|@ st <@st|@reference-map: [r10:0, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:47) [bci: 102]
locals: - 
org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
locals: r10|QWORD[.] - 
org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
locals: - 
java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
locals: - stack:32|QWORD[.] r10|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:102, 1, 1, 22] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" "B185" 
    xhandlers
    flags 
    probability 4590935522563932584
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   96  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   98  <|@ instruction CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeUsageIterable;, resolved>;compressed} <|@ <|@
      nr  100  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B185 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4590935522563932584
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  104  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  106  <|@ instruction r10|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr  108  <|@ instruction CMP (x: r10|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  110  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4590872811544924907
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  128  <|@ instruction MOV (x: [r15|QWORD + 96], y: r10|QWORD) size: QWORD <|@ <|@
      nr  130  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0 <|@ <|@
      nr  132  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4590935522563932584
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  138  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  140  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeUsageIterator;, resolved>} <|@ <|@
      nr  142  <|@ instruction r11|QWORD = MOV [r11|QWORD + 168] size: QWORD <|@ <|@
      nr  144  <|@ instruction MOV (x: [rsi|QWORD[*]], y: r11|QWORD) size: QWORD <|@ <|@
      nr  146  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeUsageIterator;, resolved>;compressed} <|@ <|@
      nr  148  <|@ instruction MOV [rsi|QWORD[*] + 12] y: -1 size: DWORD <|@ <|@
      nr  150  <|@ instruction r11|DWORD[.] = MOV [r14|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  152  <|@ instruction MOV (x: [rsi|QWORD[*] + 16], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr  154  <|@ instruction MOV (x: [rsi|QWORD[*] + 20], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  156  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction stack:40|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  160  <|@ st <@st|@reference-map: [stack:40, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.NodeUsageIterator.<init>(NodeUsageIterator.java:51) [bci: 15]
locals: - - 
org.graalvm.compiler.graph.NodeUsageIterable.iterator(NodeUsageIterable.java:44) [bci: 26]
stack: stack:40|QWORD[.] 
locals: - 
org.graalvm.compiler.graph.NodeUsageIterable.iterator(NodeUsageIterable.java:31) [bci: 1]
locals: - 
java.lang.Iterable.forEach(Iterable.java:74) [bci: 6]
locals: - stack:32|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<NodeUsageIterator.advance()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:15, 26, 1, 6] <|@ <|@
      nr  162  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  164  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B73" 
    xhandlers
    flags 
    probability 4590574286451994106
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  710  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  712  <|@ instruction rsi|DWORD = MOVE input: int[-267196|0xfffffffffffbec44] <|@ <|@
      nr  714  <|@ instruction JUMP ~[] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B83" 
    xhandlers
    flags 
    probability 4590055446400320982
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  398  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  400  <|@ instruction JUMP ~[] destination: B35 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4576416541152026267
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   42  <|@ instruction r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   46  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   48  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   50  <|@ st <@st|@reference-map: [r13:0, r14:0, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.iterators.FilteredNodeIterable.iterator(FilteredNodeIterable.java:45) [bci: 13]
stack: vobject:PredicatedProxyNodeIterator:0{current=Object[null],iterator=Object[null],predicate=Object[null]} vobject:PredicatedProxyNodeIterator:0{current=Object[null],iterator=Object[null],predicate=Object[null]} r13|QWORD[.] 
locals: r14|QWORD[.] 
java.lang.Iterable.forEach(Iterable.java:74) [bci: 6]
locals: - stack:32|QWORD[.] - - 
vobject:PredicatedProxyNodeIterator:0{current=Object[null],iterator=Object[null],predicate=Object[null]} Lorg/graalvm/compiler/graph/iterators/PredicatedProxyNodeIterator; Object[null] Object[null] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:13, 6] <|@ <|@
      nr   52  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   54  <|@ instruction JUMP ~[] destination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4561166233704554063
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  114  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  116  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  118  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  120  <|@ st <@st|@reference-map: [r14:0, stack:48]
live-base-pointers: []
java.lang.Iterable.forEach(Iterable.java:73) [bci: 0]
locals: r14|QWORD[.] stack:32|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  122  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction JUMP ~[] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  736  <|@ instruction MOV [r15|QWORD + 668] y: -348604 size: DWORD <|@ <|@
      nr  738  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  740  <|@ st <@st|@reference-map: [r10:0, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 94]
stack: rax|DWORD 
locals: r10|QWORD[.] 
org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
locals: r10|QWORD[.] - 
org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
locals: - 
java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
locals: - stack:32|QWORD[.] r10|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:94, 1, 1, 22] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B185"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1724  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1726  <|@ instruction MOV [r15|QWORD + 668] y: -400435 size: DWORD <|@ <|@
      nr 1728  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1730  <|@ st <@st|@reference-map: [r14:0, stack:48]
live-base-pointers: []
java.lang.Iterable.forEach(Iterable.java:73) [bci: 0]
locals: r14|QWORD[.] stack:32|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B179"
    from_bci -1
    to_bci -1
    predecessors "B178" 
    successors "B182" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1666  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1668  <|@ instruction r8|DWORD = MOVE input: int[-396811|0xfffffffffff9f1f5] <|@ <|@
      nr 1670  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1672  <|@ instruction JUMP ~[] destination: B179 -> B182 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B182"
    from_bci -1
    to_bci -1
    predecessors "B181" "B179" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1694  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1696  <|@ instruction MOV (x: [r15|QWORD + 668], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1698  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1700  <|@ st <@st|@reference-map: [rdx:0, r10:0, r11:0]
live-base-pointers: []
java.lang.Iterable.forEach(Iterable.java:74) [bci: 27]
stack: r11|QWORD[.] 
locals: - rdx|QWORD[.] r10|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B121" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1082  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1084  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1086  <|@ instruction JUMP ~[] destination: B120 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B124" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1088  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1090  <|@ instruction r11|DWORD = MOVE input: int[-371995|0xfffffffffffa52e5] <|@ <|@
      nr 1092  <|@ instruction JUMP ~[] destination: B121 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B123" "B117" "B121" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1106  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1108  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1110  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1112  <|@ st <@st|@reference-map: [rdi:0, r10:0, stack:20, stack:24, stack:48]
live-base-pointers: []
org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 22]
locals: stack:56|QWORD[.] vobject:1492729447:0{arg$1=stack:60|DWORD[.]} vobject:NodeList$NodeListIterator:1{expectedModCount=r8|DWORD,index=r13|DWORD,list=rdi|DWORD[.]} - 
org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
locals: - - 
org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
locals: - - 
java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
locals: - stack:32|QWORD[.] r10|QWORD[.] - 
vobject:1492729447:0{arg$1=stack:60|DWORD[.]} Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$92/1492729447; stack:60|DWORD[.] 
vobject:NodeList$NodeListIterator:1{expectedModCount=r8|DWORD,index=r13|DWORD,list=rdi|DWORD[.]} Lorg/graalvm/compiler/graph/NodeList$NodeListIterator; r8|DWORD r13|DWORD rdi|DWORD[.] 
>@ <|@ instruction DEOPT info [bci:22, 7, 8, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B169"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B171" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1598  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1600  <|@ instruction r11|DWORD = MOVE input: int[-357915|0xfffffffffffa89e5] <|@ <|@
      nr 1602  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1604  <|@ instruction JUMP ~[] destination: B169 -> B171 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B171"
    from_bci -1
    to_bci -1
    predecessors "B170" "B91" "B93" "B95" "B169" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1612  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1614  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1616  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1618  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:48]
live-base-pointers: []
java.lang.Iterable.forEach(Iterable.java:74) [bci: 27]
stack: rsi|QWORD[.] 
locals: - stack:32|QWORD[.] r10|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B166"
    from_bci -1
    to_bci -1
    predecessors "B105" "B106" 
    successors "B167" 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1576  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1572  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1578  <|@ instruction JUMP ~[] destination: B166 -> B167 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B167"
    from_bci -1
    to_bci -1
    predecessors "B166" 
    successors "B168" 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1580  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1582  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@295001017] <|@ <|@
      nr 1584  <|@ instruction r9|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1586  <|@ instruction r11|DWORD = MOVE input: int[-365083|0xfffffffffffa6de5] <|@ <|@
      nr 1588  <|@ instruction JUMP ~[] destination: B167 -> B168 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B168"
    from_bci -1
    to_bci -1
    predecessors "B167" "B102" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1590  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 1592  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1594  <|@ instruction MOV (x: [r15|QWORD + 680], y: r9|QWORD[.]) size: QWORD <|@ <|@
      nr 1596  <|@ st <@st|@reference-map: [r10:0, stack:20, stack:24, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:97) [bci: 44]
locals: stack:60|DWORD[.] - r8|DWORD 
org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2]
locals: - - 
org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5]
locals: vobject:1492729447:0{arg$1=stack:60|DWORD[.]} stack:56|QWORD[.] 
org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:653) [bci: 2]
locals: stack:56|QWORD[.] vobject:1492729447:0{arg$1=stack:60|DWORD[.]} - - 
org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
locals: - - 
org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
locals: - - 
java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
locals: - stack:32|QWORD[.] r10|QWORD[.] - 
vobject:1492729447:0{arg$1=stack:60|DWORD[.]} Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$92/1492729447; stack:60|DWORD[.] 
>@ <|@ instruction DEOPT info [bci:44, 2, 5, 2, 7, 8, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B148" 
    successors "B150" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1382  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1384  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1386  <|@ instruction JUMP ~[] destination: B149 -> B150 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B149" 
    successors "B157" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1388  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1390  <|@ instruction r11|DWORD = MOVE input: int[-387851|0xfffffffffffa14f5] <|@ <|@
      nr 1398  <|@ instruction JUMP ~[] destination: B150 -> B157 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B157"
    from_bci -1
    to_bci -1
    predecessors "B156" "B147" "B150" "B154" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1466  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1458  <|@ instruction rcx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1460  <|@ instruction r9|DWORD[.] = MOVE stack:64|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1462  <|@ instruction r8|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1468  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1470  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1472  <|@ st <@st|@reference-map: [rax:0, rcx:0, r8:0, r9:0, r10:0, stack:48]
live-base-pointers: []
org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 37]
stack: rax|QWORD[.] 
locals: r9|DWORD[.] vobject:1492729447:0{arg$1=r8|DWORD[.]} rcx|QWORD[.] - 
org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61]
locals: - - - - 
org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
locals: - - 
org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
locals: - - 
java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
locals: - stack:32|QWORD[.] r10|QWORD[.] - 
vobject:1492729447:0{arg$1=r8|DWORD[.]} Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$92/1492729447; r8|DWORD[.] 
>@ <|@ instruction DEOPT info [bci:37, 61, 7, 8, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B170"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B171" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1606  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1608  <|@ instruction r11|DWORD = MOVE input: int[-351523|0xfffffffffffaa2dd] <|@ <|@
      nr 1610  <|@ instruction JUMP ~[] destination: B170 -> B171 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B155"
    from_bci -1
    to_bci -1
    predecessors "B143" 
    successors "B156" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1448  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1450  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1452  <|@ instruction JUMP ~[] destination: B155 -> B156 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B156"
    from_bci -1
    to_bci -1
    predecessors "B155" 
    successors "B157" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1454  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1456  <|@ instruction r11|DWORD = MOVE input: int[-386083|0xfffffffffffa1bdd] <|@ <|@
      nr 1464  <|@ instruction JUMP ~[] destination: B156 -> B157 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  556  <|@ instruction r11|DWORD = MOVE input: int[-342795|0xfffffffffffac4f5] <|@ <|@
      nr  558  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B51" "B55" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  562  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr  564  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  566  <|@ st <@st|@reference-map: [r10:0, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 42]
stack: rax|DWORD 
locals: r10|QWORD[.] 
org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
locals: r10|QWORD[.] - 
org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
locals: - 
java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
locals: - stack:32|QWORD[.] r10|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:42, 1, 1, 22] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B181"
    from_bci -1
    to_bci -1
    predecessors "B176" 
    successors "B182" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1688  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1690  <|@ instruction r8|DWORD = MOVE input: int[-396323|0xfffffffffff9f3dd] <|@ <|@
      nr 1692  <|@ instruction JUMP ~[] destination: B181 -> B182 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B171" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  874  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  876  <|@ instruction r11|DWORD = MOVE input: int[-354059|0xfffffffffffa98f5] <|@ <|@
      nr  878  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  880  <|@ instruction JUMP ~[] destination: B95 -> B171 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B56" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  532  <|@ instruction r11|DWORD = MOVE input: int[-297148|0xfffffffffffb7744] <|@ <|@
      nr  534  <|@ instruction JUMP ~[] destination: B51 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  354  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  356  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  360  <|@ instruction MOV [r15|QWORD + 668] y: -334371 size: DWORD <|@ <|@
      nr  362  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  364  <|@ st <@st|@reference-map: [rax:0, r10:0, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 55]
stack: r10|QWORD[.] rax|QWORD[.] 
locals: r10|QWORD[.] 
org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1]
locals: r10|QWORD[.] 
java.lang.Iterable.forEach(Iterable.java:74) [bci: 13]
locals: - stack:32|QWORD[.] r10|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:55, 1, 13] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  650  <|@ instruction MOV [r15|QWORD + 668] y: -297404 size: DWORD <|@ <|@
      nr  652  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  654  <|@ st <@st|@reference-map: [r10:0, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 30]
stack: rax|DWORD 
locals: r10|QWORD[.] 
org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
locals: r10|QWORD[.] - 
org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
locals: - 
java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
locals: - stack:32|QWORD[.] r10|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:30, 1, 1, 22] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1094  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1096  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1098  <|@ instruction JUMP ~[] destination: B122 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B124" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1100  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1102  <|@ instruction r11|DWORD = MOVE input: int[-368163|0xfffffffffffa61dd] <|@ <|@
      nr 1104  <|@ instruction JUMP ~[] destination: B123 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  684  <|@ instruction MOV [r15|QWORD + 668] y: -346891 size: DWORD <|@ <|@
      nr  686  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  688  <|@ st <@st|@reference-map: [r10:0, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 64]
locals: r10|QWORD[.] 
org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
locals: r10|QWORD[.] - 
org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
locals: - 
java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
locals: - stack:32|QWORD[.] r10|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:64, 1, 1, 22] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B117" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1046  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1048  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1050  <|@ instruction JUMP ~[] destination: B116 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B124" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1052  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1054  <|@ instruction r11|DWORD = MOVE input: int[-368395|0xfffffffffffa60f5] <|@ <|@
      nr 1056  <|@ instruction JUMP ~[] destination: B117 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B171" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  860  <|@ instruction r11|DWORD = MOVE input: int[-352011|0xfffffffffffaa0f5] <|@ <|@
      nr  862  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  864  <|@ instruction JUMP ~[] destination: B93 -> B171 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B145" 
    successors "B147" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1354  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1356  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1358  <|@ instruction JUMP ~[] destination: B146 -> B147 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B157" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1360  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1362  <|@ instruction r11|DWORD = MOVE input: int[-386315|0xfffffffffffa1af5] <|@ <|@
      nr 1370  <|@ instruction JUMP ~[] destination: B147 -> B157 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B171" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  838  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  840  <|@ instruction r11|DWORD = MOVE input: int[-351755|0xfffffffffffaa1f5] <|@ <|@
      nr  842  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  844  <|@ instruction JUMP ~[] destination: B91 -> B171 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B184"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1716  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1718  <|@ instruction MOV [r15|QWORD + 668] y: -348979 size: DWORD <|@ <|@
      nr 1720  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1722  <|@ st <@st|@reference-map: [r10:0, stack:48]
live-base-pointers: []
java.lang.Iterable.forEach(Iterable.java:74) [bci: 12]
locals: - stack:32|QWORD[.] r10|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B164"
    from_bci -1
    to_bci -1
    predecessors "B128" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1560  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1562  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1564  <|@ instruction MOV [r15|QWORD + 668] y: -377883 size: DWORD <|@ <|@
      nr 1566  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1568  <|@ st <@st|@reference-map: [r10:0, stack:20, stack:24, stack:48]
live-base-pointers: []
org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:659) [bci: 49]
locals: stack:56|QWORD[.] vobject:1492729447:0{arg$1=stack:60|DWORD[.]} - - 
org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7]
locals: - - 
org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8]
locals: - - 
java.lang.Iterable.forEach(Iterable.java:75) [bci: 30]
locals: - stack:32|QWORD[.] r10|QWORD[.] - 
vobject:1492729447:0{arg$1=stack:60|DWORD[.]} Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$92/1492729447; stack:60|DWORD[.] 
>@ <|@ instruction DEOPT info [bci:49, 7, 8, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B168" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  946  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  948  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1280662813] <|@ <|@
      nr  950  <|@ instruction r9|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  952  <|@ instruction r11|DWORD = MOVE input: int[-363787|0xfffffffffffa72f5] <|@ <|@
      nr  954  <|@ instruction JUMP ~[] destination: B102 -> B168 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  622  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  624  <|@ instruction JUMP ~[] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  628  <|@ instruction MOV [r15|QWORD + 668] y: -344355 size: DWORD <|@ <|@
      nr  630  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  632  <|@ st <@st|@reference-map: [rax:0, r10:0, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 55]
stack: r10|QWORD[.] rax|QWORD[.] 
locals: r10|QWORD[.] 
org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1]
locals: r10|QWORD[.] - 
org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1]
locals: - 
java.lang.Iterable.forEach(Iterable.java:74) [bci: 22]
locals: - stack:32|QWORD[.] r10|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:55, 1, 1, 22] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B153"
    from_bci -1
    to_bci -1
    predecessors "B151" 
    successors "B154" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1430  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1432  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1434  <|@ instruction JUMP ~[] destination: B153 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B154"
    from_bci -1
    to_bci -1
    predecessors "B153" 
    successors "B157" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1436  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1438  <|@ instruction r11|DWORD = MOVE input: int[-391451|0xfffffffffffa06e5] <|@ <|@
      nr 1446  <|@ instruction JUMP ~[] destination: B154 -> B157 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokestatic  #0          // java.util.Objects.requireNonNull:(java.lang.Object)java.lang.Object
     4: pop           
     5: aload_0       
     6: invokeinterface#1, 1       // iterator:()java.util.Iterator
    11: astore_2      
    12: aload_2       
    13: invokeinterface#2, 1       // java.util.Iterator.hasNext:()boolean
    18: ifeq          38
    21: aload_2       
    22: invokeinterface#3, 1       // java.util.Iterator.next:()java.lang.Object
    27: astore_3      
    28: aload_1       
    29: aload_3       
    30: invokeinterface#4, 2       // java.util.function.Consumer.accept:(java.lang.Object)void
    35: goto          12
    38: return        
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec4848896c244048895424308502448b56084181faaddeadde0f85f9090000448b560c438504d449c1e2034889742428498bf248b8ffffffffffffffff90e800000000904c8be8498b7760488d5618493b57700f874c0a0000498957600f1886d80000004c8b742428488bd649baaddeaddeaddeadde4d8b92a80000004c8916c74608addeadde4489660c49c1ed0344896e10458b5610448956144c8bd24c89542428458b5a0844895c242449b800e01b170100000049b9addeaddeaddeadde0f1f80000000004181fbaddeadde0f85c9020000418b720ce9ef00000066660f1f840000000000833cf50c000000000f8c42000000418b4a14418504cc48c1e1038bde48c1e303488bf1488bd348b8ffffffffffffffff0f1f8000000000e8000000009085c00f85300200004c8b542428660f1f440000418b7210418504f448c1e60348b8ffffffffffffffff90e8000000009085c00f847d0000004c8b542428418b7210418504f448c1e60348b8ffffffffffffffff0f1f8000000000e800000000904885c049b9addeaddeaddeadde0f84110000008b70084c3b0cf5300000000f857f0a000049b800e01b17010000004c8b54242848c1e8034189420c498bf248c1ee09468824068bf085f60f8463ffffffe90effffff49b9addeaddeaddeadde49b800e01b17010000004c8b542428418b720c85f60f8450010000833cf50c000000000f8ce307000048c1e603488bd6418b7214418504f448c1e60348b8ffffffffffffffff0f1f440000e8000000009085c04c8b5424280f84b4070000418b720c48c1e603488b5424304885f60f84850700004c8b542428488bd6e9dc000000666690837a0c000f8c36000000418b7214418504f448c1e60348b8ffffffffffffffff0f1f8000000000e8000000009085c00f85590300004c8b542428660f1f440000418b7210418504f448c1e60348b8ffffffffffffffff90e8000000009085c00f847b0200004c8b542428418b721085f60f840d09000048c1e60348b8ffffffffffffffff666690e800000000904885c049b9addeaddeaddeadde0f84110000008b70084c3b0cf5300000000f85fe09000049b800e01b17010000004c8b542428488bf048c1ee034189720c498bf248c1ee0946882406488bd04885d20f845effffffe919ffffff48c1e603488b542430e9f2feffff49b9addeaddeaddeadde49b800e01b17010000004c8b542428458b5a0c4585db0f846202000042833cdd0c000000000f8c0b07000049c1e303498bd3e976feffff817c2424addeadde0f8519090000418b721485f60f8425060000498bf248b8ffffffffffffffff6690e80000000090488b542430817a08addeadde0f859b030000488bf04c8b54242848897424184885f60f840d000000817e08addeadde0f85d40700004885f60f84aa080000488b542430448b520c44895424144585d20f8473080000428b0cd51c00000085c90f84de070000448b1ccd0c000000448b460c458bc841c1f906453bd90f860f0700008bd948c1e30348c7c701000000418bc848d3e74a0b7ccb104a897ccb10448b4e448b7e5085ff0f84f20200008b04fd1c00000085c00f84710800008b2cfd1000000083fd010f8c210000008b0cc50c0000004c63ed49ffcd448bf14d3bf50f86ca06000085c90f84c2060000448b04fd0c00000041bd00000000e9710000006666660f1f8400000000008bc848c1e103428b4ca91085c90f841f00000049beaddeaddeaddeadde8b34cd080000004c3b34f5400000000f855307000085c90f84730700008b0ccd0c0000008bf1c1fe06443bde0f861706000049c7c60100000049d3e64c0b74f3104c8974f31041ffc5413bed7f95e9d800000049b9addeaddeaddeadde49b800e01b17010000004c8b542428418b720c85f60f84b3060000833cf50c000000000f8c81040000418b521485d20f84e606000048c1e203448bde49c1e303488bf2498bd348b8ffffffffffffffff0f1f440000e8000000009085c04c8b5424280f84d5040000418b720c85f60f8429050000488b5424304589620c48c1e603817a08addeadde0f8407feffffe907020000488b54243049c1e303498bf3e959fcffff49b9addeaddeaddeadde49b800e01b17010000004c8b542428418b720c85f60f8552ffffffe9250600004585c90f84dd010000468b2ccd0c000000418bf5c1fe06443bde0f869d06000044894c241049c7c301000000418bcd49d3e34c0b5cf3104c895cf310468b34cd500000004585f60f84ae010000498b77604c8d5e184d3b5f700f87df0200004d895f600f1886d80000004c8bde4c895c240849b8addeaddeaddeadde4d8b80a80000004c8906c74608addeadde468b04f50c0000004489460c4489661044897614e98c0000006690498bf30f1f4000e800000000904885c00f841b00000048b9addeaddeaddeadde8b7008483b0cf5400000000f85e50400004885c00f84a3050000448b542414428b0cd51c00000085c90f84910400008b34cd0c0000008b500c448bda41c1fb06413bf30f86030600008bf148c1e60349c7c0010000008bca49d3e04e0b44de104e8944de104c8b5c2408418b73148b34f510000000413b73100f8f61ffffffe9200100004585c90f847c000000e9affeffff4c8bd84c8b542428817a08addeadde0f857d0100004d85db0f841c00000049b9addeaddeaddeadde418b73084c3b0cf5300000000f85510400008b720c85f60f846003000048c1e603498bd348b8ffffffffffffffff0f1f8000000000e80000000090448b5c24244c8b542428e9dcf8ffff4c8bdeeb91850500000000448b5c24244c8b542428e9c2f8ffff850500000000448b5c24244c8b542428e9adf8ffff468b34cd440000004585f60f8408010000498b7760488d5610493b57700f8751010000498957600f1886d000000048baaddeaddeaddeadde4c8bde488b92a8000000488916c74608addeadde4489560c49c1e603498bf6498bd36690e80000000090448b5c24244c8b542428e93cf8ffff448b4c2410448b542414468b2ccd440000004585ed0f84a2000000498b7760488d5610493b57700f87fd000000498957600f1886d000000048baaddeaddeaddeadde4c8bde488b92a8000000488916c74608addeadde4489560c49c1e503498bf5498bd30f1f8000000000e80000000090448b5c24244c8b542428e9bcf7ffff488bf2498bd348b8ffffffffffffffff666690e80000000090448b5c24244c8b542428e994f7ffff850500000000448b5c24244c8b542428e97ff7ffff850500000000448b5c24244c8b542428e96af7ffff48beaddeaddeaddeaddeba02000000b901000000e80000000090488bf0448b4c2410448b542414488b542430e9fbfcffff48beaddeaddeaddeaddeba00000000b901000000e80000000090488bf0448b542414e993feffff48beaddeaddeaddeaddeba00000000b901000000e80000000090488bf0448b542414e9e7feffff488b6c24404883c448850500000000c5f877c34589620cebe74589620cebe14589620cbe449ffbff4189b79c0200004d89a7a8020000e800000000904c8bf64181faaddeadde0f85de000000498b77604c8d56184d3b57700f87920000004d8957600f1886d80000004c8bd649bbaddeaddeaddeadde4d8b9ba80000004c891ec74608addeaddec7460cffffffff458b5e0c44895e1044896614498bf24c89542428e800000000904c8b542428e910f6ffff4589620cbe44ecfbffe968ffffff4589620ce937ffffff4c8b74242848beaddeaddeaddeaddeba02000000b901000000e80000000090488bf0e99df5ffff48beaddeaddeaddeaddeba02000000b901000000e80000000090488bf0e957ffffff41c7879c02000044aefaff4d89a7a8020000e8000000009041c7879c020000cde3f9ff4d89a7a8020000e8000000009041b8f5f1f9ff4c8b5424284589879c0200004d89a7a8020000e800000000904c8b54242841bbe552faff45899f9c0200004d89a7a8020000e8000000009041bbe589faff4c8b54242845899f9c0200004d89a7a8020000e800000000904c8b54242849bbaddeaddeaddeadde4d8bcb41bbe56dfaff45899f9c0200004d898fa8020000e800000000904c8b54242841bbf514faff488b4c2408448b4c2410448b44241445899f9c0200004d89a7a8020000e8000000009041bbdda2faffeb8a4c8b54242841bbdd1bfaffebc841bbf5c4faff45899f9c0200004d89a7a8020000e8000000009041b8ddf3f9ffe91affffff41bbf598faff4c8b542428e948ffffff41bb4477fbffebc94c8b54242841c7879c020000dde5faff4d89a7a8020000e8000000009041c7879c0200004476fbff4d89a7a8020000e800000000904c8b54242841bbdd61faffe9dcfeffff41c7879c020000f5b4faff4d89a7a8020000e800000000904c8b54242841bbf560faffe9b4feffff41bbf5a0faff4c8b542428e9c3feffff4c8b54242841bbf51afaffe9fefeffff41bbf5a1faff4c8b542428e9a3feffff41c7879c020000cdacfaff4d89a7a8020000e800000000904c8b54242841c7879c020000e53bfaff4d89a7a8020000e800000000904c8b54242849bbaddeaddeaddeadde4d8bcb41bbf572faffe97dfeffff4c8b54242841c7879c020000ddbefaff4d89a7a8020000e800000000904c8b54242841bbe506faffe96ffeffffe80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@11aa1906 slotKind: QWORD  <||@
  Comment 48 6 stack:32|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 53 8 NULLCHECK [rdx|QWORD[.]] state [bci:0]  <||@
  Comment 53 [rdx:0, rsi:0, stack:48]at java.lang.Iterable.forEach(Iterable.java:73) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-   <||@
  Comment 53 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 55 10 r10|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD  <||@
  Comment 59 12 CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/iterators/FilteredNodeIterable;, resolved>;compressed}  <||@
  Comment 59 {meta{HotSpotType<Lorg/graalvm/compiler/graph/iterators/FilteredNodeIterable;, resolved>;compressed}}  <||@
  Comment 66 14 BRANCH trueDestinationProbability: 0.9129709784999646 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B5  <||@
  Comment 72 block B1 null  <||@
  Comment 72 16 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 72 18 r10|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 76 20 NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:0]  <||@
  Comment 76 [rsi:0, r10:0, stack:48]at java.lang.Iterable.forEach(Iterable.java:73) [bci: 0, duringCall: false, rethrow: false]
              |0             |1                  |2  |3 
     locals:  |rsi|QWORD[.]  |stack:32|QWORD[.]  |-  |-   <||@
  Comment 76 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 80 22 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3  <||@
  Comment 84 24 stack:40|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 89 26 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 92 28 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<NodeIterable.iterator()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:8, 6]  <||@
  Comment 92 6  <||@
  Comment 103 {HotSpotMethod<NodeIterable.iterator()>}  <||@
  Comment 108 [stack:40, stack:48]at org.graalvm.compiler.graph.iterators.FilteredNodeIterable.iterator(FilteredNodeIterable.java:45) [bci: 8, duringCall: true, rethrow: false]
              |0                                                                                                         |1                                                                                                        
     locals:  |stack:40|QWORD[.]                                                                                         |                                                                                                         
     stack:   |vobject:PredicatedProxyNodeIterator:0{current=Object[null],iterator=Object[null],predicate=Object[null]}  |vobject:PredicatedProxyNodeIterator:0{current=Object[null],iterator=Object[null],predicate=Object[null]} 
  at java.lang.Iterable.forEach(Iterable.java:74) [bci: 6, duringCall: true, rethrow: false]
              |0  |1                  |2  |3 
     locals:  |-  |stack:32|QWORD[.]  |-  |-   <||@
  Comment 109 30 r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 112 32 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 116 34 rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD  <||@
  Comment 120 36 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 124 38 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3  <||@
  Comment 130 block B3 null  <||@
  Comment 130 56 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 130 58 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 134 60 AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0  <||@
  Comment 141 62 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 141 64 r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 146 66 JUMP ~[] destination: B3 -> B4  <||@
  Comment 146 block B4 null  <||@
  Comment 146 68 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 146 70 rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 149 72 r10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/compiler/graph/iterators/PredicatedProxyNodeIterator;, resolved>}  <||@
  Comment 149 {meta{HotSpotType<Lorg/graalvm/compiler/graph/iterators/PredicatedProxyNodeIterator;, resolved>}}  <||@
  Comment 159 74 r10|QWORD = MOV [r10|QWORD + 168] size: QWORD  <||@
  Comment 166 76 MOV (x: [rsi|QWORD[*]], y: r10|QWORD) size: QWORD  <||@
  Comment 169 78 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/iterators/PredicatedProxyNodeIterator;, resolved>;compressed}  <||@
  Comment 169 {meta{HotSpotType<Lorg/graalvm/compiler/graph/iterators/PredicatedProxyNodeIterator;, resolved>;compressed}}  <||@
  Comment 176 80 MOV (x: [rsi|QWORD[*] + 12], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 180 82 r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3  <||@
  Comment 184 84 MOV (x: [rsi|QWORD[*] + 16], y: r13|DWORD[.]) size: DWORD  <||@
  Comment 188 86 r10|DWORD[.] = MOV [r14|QWORD[.] + 16] size: DWORD  <||@
  Comment 192 88 MOV (x: [rsi|QWORD[*] + 20], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 196 90 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 199 92 JUMP ~[] destination: B4 -> B10  <||@
  Comment 199 block B10 null  <||@
  Comment 199 166 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 199 168 stack:40|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 204 170 r11|DWORD = MOV [r10|QWORD[.] + 8] size: DWORD  <||@
  Comment 208 172 stack:44|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 213 174 r8|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 223 176 r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/compiler/graph/Node;, resolved>}  <||@
  Comment 223 {meta{HotSpotType<Lorg/graalvm/compiler/graph/Node;, resolved>}}  <||@
  Comment 233 178 JUMP ~[] destination: B10 -> B11  <||@
  Comment 233 block B11 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 233 180 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 240 182 CMP r11|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/iterators/PredicatedProxyNodeIterator;, resolved>;compressed}  <||@
  Comment 240 {meta{HotSpotType<Lorg/graalvm/compiler/graph/iterators/PredicatedProxyNodeIterator;, resolved>;compressed}}  <||@
  Comment 247 184 BRANCH trueDestinationProbability: 0.8217776767447147 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B79  <||@
  Comment 253 block B12 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 253 186 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 253 188 rsi|DWORD[.] = MOV [r10|QWORD[.] + 12] size: DWORD  <||@
  Comment 257 190 JUMP ~[] destination: B12 -> B13  <||@
  Comment 262 block B15 loop 1 depth 2 outer 0 header:167|LoopBegin  <||@
  Comment 262 202 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 272 204 CMP [rsi|DWORD[.] * 8 + 12] y: 0 size: DWORD  <||@
  Comment 280 206 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B15 -> B19 falseDestination: B15 -> B17  <||@
  Comment 286 block B17 loop 1 depth 2 outer 0 header:167|LoopBegin  <||@
  Comment 286 212 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 286 214 rcx|DWORD[.] = MOV [r10|QWORD[.] + 20] size: DWORD  <||@
  Comment 290 216 NULLCHECK [r12|QWORD[*] + rcx|DWORD[.] * 8] state [bci:0, 1, 13]  <||@
  Comment 290 [rcx:0, rsi:0, r10:0, stack:40, stack:48]at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |r10|QWORD[.] 
  at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1, duringCall: true, rethrow: false]
              |0            
     locals:  |r10|QWORD[.] 
  at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13, duringCall: true, rethrow: false]
              |0  |1                  |2             |3 
     locals:  |-  |stack:32|QWORD[.]  |r10|QWORD[.]  |-   <||@
  Comment 290 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 294 218 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3  <||@
  Comment 298 220 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3  <||@
  Comment 304 222 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 307 224 rdx|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 310 226 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<NodePredicate.apply(Node)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:25, 1, 13]  <||@
  Comment 310 6  <||@
  Comment 327 {HotSpotMethod<NodePredicate.apply(Node)>}  <||@
  Comment 332 [stack:40, stack:48]at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 25, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.] 
  at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.] 
  at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13, duringCall: true, rethrow: false]
              |0  |1                  |2                  |3 
     locals:  |-  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-   <||@
  Comment 333 228 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 335 230 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B32  <||@
  Comment 341 block B18 loop 1 depth 2 outer 0 header:167|LoopBegin  <||@
  Comment 341 232 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 341 234 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 346 236 JUMP ~[] destination: B18 -> B19  <||@
  Comment 346 block B19 loop 1 depth 2 outer 0 header:167|LoopBegin  <||@
  Comment 346 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 352 240 rsi|DWORD[.] = MOV [r10|QWORD[.] + 16] size: DWORD  <||@
  Comment 356 242 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:33, 1, 13]  <||@
  Comment 356 [rsi:0, r10:0, stack:40, stack:48]at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 33, duringCall: false, rethrow: false]
              |0            
     locals:  |r10|QWORD[.] 
  at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1, duringCall: true, rethrow: false]
              |0            
     locals:  |r10|QWORD[.] 
  at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13, duringCall: true, rethrow: false]
              |0  |1                  |2             |3 
     locals:  |-  |stack:32|QWORD[.]  |r10|QWORD[.]  |-   <||@
  Comment 356 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 360 244 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3  <||@
  Comment 364 246 rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Iterator.hasNext()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:37, 1, 13]  <||@
  Comment 364 6  <||@
  Comment 375 {HotSpotMethod<Iterator.hasNext()>}  <||@
  Comment 380 [stack:40, stack:48]at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 37, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.] 
  at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.] 
  at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13, duringCall: true, rethrow: false]
              |0  |1                  |2                  |3 
     locals:  |-  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-   <||@
  Comment 381 248 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 383 250 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B25  <||@
  Comment 389 block B25 loop 1 depth 2 outer 0 header:167|LoopBegin  <||@
  Comment 389 294 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 389 296 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 394 298 rsi|DWORD[.] = MOV [r10|QWORD[.] + 16] size: DWORD  <||@
  Comment 398 300 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:42, 1, 13]  <||@
  Comment 398 [rsi:0, r10:0, stack:40, stack:48]at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 42, duringCall: false, rethrow: false]
              |0            
     locals:  |r10|QWORD[.] 
     stack:   |rax|DWORD    
  at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1, duringCall: true, rethrow: false]
              |0            
     locals:  |r10|QWORD[.] 
  at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13, duringCall: true, rethrow: false]
              |0  |1                  |2             |3 
     locals:  |-  |stack:32|QWORD[.]  |r10|QWORD[.]  |-   <||@
  Comment 398 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 402 302 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3  <||@
  Comment 406 304 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Iterator.next()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:50, 1, 13]  <||@
  Comment 406 6  <||@
  Comment 423 {HotSpotMethod<Iterator.next()>}  <||@
  Comment 428 [stack:40, stack:48]at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 50, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.] 
     stack:   |stack:40|QWORD[.] 
  at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.] 
  at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13, duringCall: true, rethrow: false]
              |0  |1                  |2                  |3 
     locals:  |-  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-   <||@
  Comment 429 306 TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD  <||@
  Comment 432 312 r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/compiler/graph/Node;, resolved>}  <||@
  Comment 432 {meta{HotSpotType<Lorg/graalvm/compiler/graph/Node;, resolved>}}  <||@
  Comment 442 308 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B25 -> B29 falseDestination: B25 -> B27  <||@
  Comment 448 block B27 loop 1 depth 2 outer 0 header:167|LoopBegin  <||@
  Comment 448 320 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 448 324 rsi|DWORD = MOV [rax|QWORD[.] + 8] size: DWORD  <||@
  Comment 451 326 CMP (x: r9|QWORD, y: [rsi|DWORD * 8 + 48]) size: QWORD  <||@
  Comment 459 328 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B27 -> B29 falseDestination: B27 -> B30  <||@
  Comment 465 block B29 loop 1 depth 2 outer 0 header:167|LoopBegin  <||@
  Comment 465 338 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 465 314 r8|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 475 316 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 480 340 rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3  <||@
  Comment 484 342 MOV (x: [r10|QWORD[.] + 12], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 488 344 rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD  <||@
  Comment 495 346 MOVB (x: [rsi|QWORD[*] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 499 348 rsi|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD  <||@
  Comment 501 350 JUMP ~[] destination: B29 -> B13  <||@
  Comment 501 block B13 loop 1 depth 2 outer 0 header:167|LoopBegin  <||@
  Comment 501 192 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 501 194 TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 503 196 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B13 -> B19 falseDestination: B13 -> B15  <||@
  Comment 514 block B20 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 514 252 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 514 254 r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/compiler/graph/Node;, resolved>}  <||@
  Comment 514 {meta{HotSpotType<Lorg/graalvm/compiler/graph/Node;, resolved>}}  <||@
  Comment 524 256 r8|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 534 258 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 539 260 rsi|DWORD[.] = MOV [r10|QWORD[.] + 12] size: DWORD  <||@
  Comment 543 262 TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 545 264 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22  <||@
  Comment 551 block B22 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 551 274 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 551 276 CMP [rsi|DWORD[.] * 8 + 12] y: 0 size: DWORD  <||@
  Comment 559 278 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B22 -> B23 falseDestination: B22 -> B24  <||@
  Comment 565 block B24 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 565 286 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 565 288 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3  <||@
  Comment 569 290 rdx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 572 292 JUMP ~[] destination: B24 -> B37  <||@
  Comment 572 block B37 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 572 410 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 572 412 rsi|DWORD[.] = MOV [r10|QWORD[.] + 20] size: DWORD  <||@
  Comment 576 414 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:64, 1, 13]  <||@
  Comment 576 [rdx:0, rsi:0, r10:0, stack:40, stack:48]at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 64, duringCall: false, rethrow: false]
              |0            
     locals:  |r10|QWORD[.] 
  at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1, duringCall: true, rethrow: false]
              |0            
     locals:  |r10|QWORD[.] 
  at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13, duringCall: true, rethrow: false]
              |0  |1                  |2             |3 
     locals:  |-  |stack:32|QWORD[.]  |r10|QWORD[.]  |-   <||@
  Comment 576 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 580 416 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3  <||@
  Comment 584 418 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<NodePredicate.apply(Node)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:89, 1, 13]  <||@
  Comment 584 6  <||@
  Comment 599 {HotSpotMethod<NodePredicate.apply(Node)>}  <||@
  Comment 604 [stack:40, stack:48]at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 89, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.] 
  at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.] 
  at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13, duringCall: true, rethrow: false]
              |0  |1                  |2                  |3 
     locals:  |-  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-   <||@
  Comment 605 420 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 607 426 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 612 422 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39  <||@
  Comment 618 block B39 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 618 432 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 618 436 rsi|DWORD[.] = MOV [r10|QWORD[.] + 12] size: DWORD  <||@
  Comment 622 438 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3  <||@
  Comment 626 440 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 631 442 JUMP ~[] destination: B39 -> B40  <||@
  Comment 631 block B40 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 631 444 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 631 446 TEST (x: rsi|QWORD[.], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 634 448 BRANCH trueDestinationProbability: 0.610225267647409 condition: = trueDestination: B40 -> B83 falseDestination: B40 -> B42  <||@
  Comment 640 block B42 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 640 454 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 640 456 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 645 458 rdx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 648 460 JUMP ~[] destination: B42 -> B43  <||@
  Comment 653 block B45 loop 2 depth 2 outer 0 header:435|LoopBegin  <||@
  Comment 653 472 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 656 474 CMP [rdx|QWORD[.] + 12] y: 0 size: DWORD  <||@
  Comment 660 476 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B45 -> B49 falseDestination: B45 -> B47  <||@
  Comment 666 block B47 loop 2 depth 2 outer 0 header:435|LoopBegin  <||@
  Comment 666 482 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 666 484 rsi|DWORD[.] = MOV [r10|QWORD[.] + 20] size: DWORD  <||@
  Comment 670 486 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:0, 1, 1, 22]  <||@
  Comment 670 [rdx:0, rsi:0, r10:0, stack:40, stack:48]at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |r10|QWORD[.] 
  at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |r10|QWORD[.]  |- 
  at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22, duringCall: true, rethrow: false]
              |0  |1                  |2             |3 
     locals:  |-  |stack:32|QWORD[.]  |r10|QWORD[.]  |-   <||@
  Comment 670 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 674 488 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3  <||@
  Comment 678 490 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<NodePredicate.apply(Node)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:25, 1, 1, 22]  <||@
  Comment 678 6  <||@
  Comment 695 {HotSpotMethod<NodePredicate.apply(Node)>}  <||@
  Comment 700 [stack:40, stack:48]at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 25, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.] 
  at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:40|QWORD[.]  |- 
  at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22, duringCall: true, rethrow: false]
              |0  |1                  |2                  |3 
     locals:  |-  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-   <||@
  Comment 701 492 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 703 494 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B64  <||@
  Comment 709 block B48 loop 2 depth 2 outer 0 header:435|LoopBegin  <||@
  Comment 709 496 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 709 498 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 714 500 JUMP ~[] destination: B48 -> B49  <||@
  Comment 714 block B49 loop 2 depth 2 outer 0 header:435|LoopBegin  <||@
  Comment 714 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 720 504 rsi|DWORD[.] = MOV [r10|QWORD[.] + 16] size: DWORD  <||@
  Comment 724 506 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:33, 1, 1, 22]  <||@
  Comment 724 [rsi:0, r10:0, stack:40, stack:48]at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 33, duringCall: false, rethrow: false]
              |0            
     locals:  |r10|QWORD[.] 
  at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |r10|QWORD[.]  |- 
  at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22, duringCall: true, rethrow: false]
              |0  |1                  |2             |3 
     locals:  |-  |stack:32|QWORD[.]  |r10|QWORD[.]  |-   <||@
  Comment 724 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 728 508 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3  <||@
  Comment 732 510 rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Iterator.hasNext()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:37, 1, 1, 22]  <||@
  Comment 732 6  <||@
  Comment 743 {HotSpotMethod<Iterator.hasNext()>}  <||@
  Comment 748 [stack:40, stack:48]at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 37, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.] 
  at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:40|QWORD[.]  |- 
  at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22, duringCall: true, rethrow: false]
              |0  |1                  |2                  |3 
     locals:  |-  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-   <||@
  Comment 749 512 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 751 514 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B53  <||@
  Comment 757 block B53 loop 2 depth 2 outer 0 header:435|LoopBegin  <||@
  Comment 757 540 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 757 542 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 762 544 rsi|DWORD[.] = MOV [r10|QWORD[.] + 16] size: DWORD  <||@
  Comment 766 546 TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 768 548 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B53 -> B55 falseDestination: B53 -> B57  <||@
  Comment 774 block B57 loop 2 depth 2 outer 0 header:435|LoopBegin  <||@
  Comment 774 568 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 774 570 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3  <||@
  Comment 778 572 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Iterator.next()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:50, 1, 1, 22]  <||@
  Comment 778 6  <||@
  Comment 791 {HotSpotMethod<Iterator.next()>}  <||@
  Comment 796 [stack:40, stack:48]at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 50, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.] 
     stack:   |stack:40|QWORD[.] 
  at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:40|QWORD[.]  |- 
  at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22, duringCall: true, rethrow: false]
              |0  |1                  |2                  |3 
     locals:  |-  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-   <||@
  Comment 797 574 TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD  <||@
  Comment 800 580 r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/compiler/graph/Node;, resolved>}  <||@
  Comment 800 {meta{HotSpotType<Lorg/graalvm/compiler/graph/Node;, resolved>}}  <||@
  Comment 810 576 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B61 falseDestination: B57 -> B59  <||@
  Comment 816 block B59 loop 2 depth 2 outer 0 header:435|LoopBegin  <||@
  Comment 816 588 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 816 592 rsi|DWORD = MOV [rax|QWORD[.] + 8] size: DWORD  <||@
  Comment 819 594 CMP (x: r9|QWORD, y: [rsi|DWORD * 8 + 48]) size: QWORD  <||@
  Comment 827 596 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B59 -> B61 falseDestination: B59 -> B62  <||@
  Comment 833 block B61 loop 2 depth 2 outer 0 header:435|LoopBegin  <||@
  Comment 833 606 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 833 582 r8|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 843 584 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 848 608 rsi|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3  <||@
  Comment 855 610 MOV (x: [r10|QWORD[.] + 12], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 859 612 rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD  <||@
  Comment 866 614 MOVB (x: [rsi|QWORD[*] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 870 616 rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 873 618 JUMP ~[] destination: B61 -> B43  <||@
  Comment 873 block B43 loop 2 depth 2 outer 0 header:435|LoopBegin  <||@
  Comment 873 462 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 873 464 TEST (x: rdx|QWORD[.], y: rdx|QWORD[.]) size: QWORD  <||@
  Comment 876 466 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B43 -> B49 falseDestination: B43 -> B45  <||@
  Comment 887 block B21 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 887 266 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 887 268 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3  <||@
  Comment 891 270 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 896 272 JUMP ~[] destination: B21 -> B40  <||@
  Comment 901 block B32 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 901 366 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 901 368 r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/compiler/graph/Node;, resolved>}  <||@
  Comment 901 {meta{HotSpotType<Lorg/graalvm/compiler/graph/Node;, resolved>}}  <||@
  Comment 911 370 r8|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 921 372 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 926 374 r11|DWORD[.] = MOV [r10|QWORD[.] + 12] size: DWORD  <||@
  Comment 930 376 TEST (x: r11|DWORD[.], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 933 378 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34  <||@
  Comment 939 block B34 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 939 390 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 939 392 CMP [r11|DWORD[.] * 8 + 12] y: 0 size: DWORD  <||@
  Comment 948 394 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B36  <||@
  Comment 954 block B36 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 954 402 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 954 404 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3  <||@
  Comment 958 406 rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 961 408 JUMP ~[] destination: B36 -> B37  <||@
  Comment 966 block B79 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 966 764 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 966 766 CMP stack:44|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeUsageIterator;, resolved>;compressed}  <||@
  Comment 966 {meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeUsageIterator;, resolved>;compressed}}  <||@
  Comment 974 768 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B184  <||@
  Comment 980 block B80 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 980 770 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 980 772 rsi|DWORD[.] = MOV [r10|QWORD[.] + 20] size: DWORD  <||@
  Comment 984 774 TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 986 776 BRANCH trueDestinationProbability: 0.610225267647409 condition: = trueDestination: B80 -> B83 falseDestination: B80 -> B84  <||@
  Comment 992 block B84 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 992 790 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 992 792 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 995 794 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Iterator.next()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:22]  <||@
  Comment 995 6  <||@
  Comment 1007 {HotSpotMethod<Iterator.next()>}  <||@
  Comment 1012 [stack:40, stack:48]at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22, duringCall: true, rethrow: false]
              |0  |1                  |2                  |3 
     locals:  |-  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-   <||@
  Comment 1013 796 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1018 798 CMP [rdx|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$90/1190971543;, resolved>;compressed}  <||@
  Comment 1018 {meta{HotSpotType<Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$90/1190971543;, resolved>;compressed}}  <||@
  Comment 1025 800 BRANCH trueDestinationProbability: 0.5456716749520927 condition: = trueDestination: B84 -> B85 falseDestination: B84 -> B172  <||@
  Comment 1031 block B85 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 1031 802 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1031 804 rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1034 806 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1039 808 JUMP ~[] destination: B85 -> B86  <||@
  Comment 1039 block B86 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 1039 810 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1039 812 stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1044 814 TEST (x: rsi|QWORD[.], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 1047 816 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B86 -> B90 falseDestination: B86 -> B88  <||@
  Comment 1053 block B88 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 1053 822 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1053 824 CMP [rsi|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/nodes/FrameState;, resolved>;compressed}  <||@
  Comment 1053 {meta{HotSpotType<Lorg/graalvm/compiler/nodes/FrameState;, resolved>;compressed}}  <||@
  Comment 1060 826 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B88 -> B90 falseDestination: B88 -> B170  <||@
  Comment 1066 block B90 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 1066 832 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1066 834 TEST (x: rsi|QWORD[.], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 1069 836 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B90 -> B91 falseDestination: B90 -> B92  <||@
  Comment 1075 block B92 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 1075 846 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1075 848 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1080 850 r10|DWORD[.] = MOV [rdx|QWORD[.] + 12] size: DWORD  <||@
  Comment 1084 852 stack:60|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 1089 854 TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 1092 856 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B92 -> B93 falseDestination: B92 -> B94  <||@
  Comment 1098 block B94 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 1098 866 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1098 868 rcx|DWORD[.] = MOV [r10|DWORD[.] * 8 + 28] size: DWORD  <||@
  Comment 1106 870 TEST (x: rcx|DWORD[.], y: rcx|DWORD[.]) size: DWORD  <||@
  Comment 1108 872 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B94 -> B95 falseDestination: B94 -> B96  <||@
  Comment 1114 block B96 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 1114 882 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1114 884 r11|DWORD = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 1122 886 r8|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 1126 888 r9|DWORD = SAR r8|DWORD y: 6 size: DWORD  <||@
  Comment 1133 890 CMP (x: r11|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 1136 892 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B96 -> B97 falseDestination: B96 -> B169  <||@
  Comment 1142 block B97 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 1142 894 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1142 896 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3  <||@
  Comment 1148 898 rdi|QWORD = MOVE input: long[1|0x1]  <||@
  Comment 1155 900 rcx|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1158 902 rdi|QWORD = SHL (x: rdi|QWORD, ~y: rcx|DWORD) size: QWORD  <||@
  Comment 1161 904 rdi|QWORD = OR (x: rdi|QWORD, ~y: [rbx|QWORD[.] + r9|DWORD * 8 + 16]) size: QWORD  <||@
  Comment 1166 906 MOV (x: [rbx|QWORD[.] + r9|DWORD * 8 + 16], y: rdi|QWORD) size: QWORD  <||@
  Comment 1171 908 r9|DWORD[.] = MOV [rsi|QWORD[.] + 68] size: DWORD  <||@
  Comment 1175 910 rdi|DWORD[.] = MOV [rsi|QWORD[.] + 80] size: DWORD  <||@
  Comment 1178 912 TEST (x: rdi|DWORD[.], y: rdi|DWORD[.]) size: DWORD  <||@
  Comment 1180 914 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B97 -> B98 falseDestination: B97 -> B101  <||@
  Comment 1186 block B101 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 1186 936 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1186 938 rax|DWORD[.] = MOV [rdi|DWORD[.] * 8 + 28] size: DWORD  <||@
  Comment 1193 940 TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 1195 942 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103  <||@
  Comment 1201 block B103 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 1201 956 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1201 958 rbp|DWORD = MOV [rdi|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1208 960 CMP rbp|DWORD y: 1 size: DWORD  <||@
  Comment 1211 962 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B103 -> B109 falseDestination: B103 -> B105  <||@
  Comment 1217 block B105 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 1217 968 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1217 970 rcx|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 1224 972 r13|QWORD = MOVSXD rbp|DWORD size: QWORD  <||@
  Comment 1227 974 r13|QWORD = DEC r13|QWORD size: QWORD  <||@
  Comment 1230 976 r14|QWORD = MOV rcx|DWORD size: DWORD  <||@
  Comment 1233 978 CMP (x: r14|QWORD, y: r13|QWORD) size: QWORD  <||@
  Comment 1236 980 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B105 -> B106 falseDestination: B105 -> B166  <||@
  Comment 1242 block B106 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 1242 982 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1242 984 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 1244 986 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B106 -> B166 falseDestination: B106 -> B109  <||@
  Comment 1250 block B109 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 1250 998 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1250 1000 r8|DWORD = MOV [rdi|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 1258 1002 r13|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1264 1004 JUMP ~[] destination: B109 -> B110  <||@
  Comment 1269 block B111 loop 3 depth 2 outer 0 header:353|LoopBegin  <||@
  Comment 1269 1012 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1280 1014 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3  <||@
  Comment 1286 1016 rcx|DWORD[.] = MOV [rcx|QWORD[.] + r13|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1291 1018 TEST (x: rcx|DWORD[.], y: rcx|DWORD[.]) size: DWORD  <||@
  Comment 1293 1020 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B111 -> B115 falseDestination: B111 -> B113  <||@
  Comment 1299 block B113 loop 3 depth 2 outer 0 header:353|LoopBegin  <||@
  Comment 1299 1026 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1299 1028 r14|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/compiler/nodes/virtual/EscapeObjectState;, resolved>}  <||@
  Comment 1299 {meta{HotSpotType<Lorg/graalvm/compiler/nodes/virtual/EscapeObjectState;, resolved>}}  <||@
  Comment 1309 1030 rsi|DWORD = MOV [rcx|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 1316 1032 CMP (x: r14|QWORD, y: [rsi|DWORD * 8 + 64]) size: QWORD  <||@
  Comment 1324 1034 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B113 -> B115 falseDestination: B113 -> B122  <||@
  Comment 1330 block B115 loop 3 depth 2 outer 0 header:353|LoopBegin  <||@
  Comment 1330 1040 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1330 1042 TEST (x: rcx|DWORD[.], y: rcx|DWORD[.]) size: DWORD  <||@
  Comment 1332 1044 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B115 -> B116 falseDestination: B115 -> B118  <||@
  Comment 1338 block B118 loop 3 depth 2 outer 0 header:353|LoopBegin  <||@
  Comment 1338 1058 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1338 1060 rcx|DWORD = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 1345 1062 rsi|DWORD = SAR rcx|DWORD y: 6 size: DWORD  <||@
  Comment 1350 1064 CMP (x: r11|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 1353 1066 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B118 -> B119 falseDestination: B118 -> B120  <||@
  Comment 1359 block B119 loop 3 depth 2 outer 0 header:353|LoopBegin  <||@
  Comment 1359 1068 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1359 1070 r14|QWORD = MOVE input: long[1|0x1]  <||@
  Comment 1366 1072 r14|QWORD = SHL (x: r14|QWORD, ~y: rcx|DWORD) size: QWORD  <||@
  Comment 1369 1074 r14|QWORD = OR (x: r14|QWORD, ~y: [rbx|QWORD[.] + rsi|DWORD * 8 + 16]) size: QWORD  <||@
  Comment 1374 1076 MOV (x: [rbx|QWORD[.] + rsi|DWORD * 8 + 16], y: r14|QWORD) size: QWORD  <||@
  Comment 1379 1078 r13|DWORD = INC r13|DWORD size: DWORD  <||@
  Comment 1382 1080 JUMP ~[] destination: B119 -> B110  <||@
  Comment 1382 block B110 loop 3 depth 2 outer 0 header:353|LoopBegin  <||@
  Comment 1382 1006 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1382 1008 CMP (x: rbp|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 1385 1010 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B110 -> B111 falseDestination: B110 -> B125  <||@
  Comment 1392 block B50 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 1392 516 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1392 518 r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/compiler/graph/Node;, resolved>}  <||@
  Comment 1392 {meta{HotSpotType<Lorg/graalvm/compiler/graph/Node;, resolved>}}  <||@
  Comment 1402 520 r8|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 1412 522 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1417 524 rsi|DWORD[.] = MOV [r10|QWORD[.] + 12] size: DWORD  <||@
  Comment 1421 526 TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 1423 528 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B67  <||@
  Comment 1429 block B67 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 1429 660 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1429 662 CMP [rsi|DWORD[.] * 8 + 12] y: 0 size: DWORD state [bci:64, 1, 1, 22]  <||@
  Comment 1429 [rsi:0, r10:0, stack:40, stack:48]at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 64, duringCall: false, rethrow: false]
              |0            
     locals:  |r10|QWORD[.] 
  at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |r10|QWORD[.]  |- 
  at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22, duringCall: true, rethrow: false]
              |0  |1                  |2             |3 
     locals:  |-  |stack:32|QWORD[.]  |r10|QWORD[.]  |-   <||@
  Comment 1429 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1437 664 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B67 -> B68 falseDestination: B67 -> B69  <||@
  Comment 1443 block B69 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 1443 674 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1443 676 rdx|DWORD[.] = MOV [r10|QWORD[.] + 20] size: DWORD  <||@
  Comment 1447 678 TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 1449 680 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71  <||@
  Comment 1455 block B71 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 1455 690 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1455 692 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3  <||@
  Comment 1459 694 r11|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3  <||@
  Comment 1466 696 rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1469 698 rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1472 700 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<NodePredicate.apply(Node)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:89, 1, 1, 22]  <||@
  Comment 1472 6  <||@
  Comment 1487 {HotSpotMethod<NodePredicate.apply(Node)>}  <||@
  Comment 1492 [stack:40, stack:48]at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 89, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.] 
  at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:40|QWORD[.]  |- 
  at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22, duringCall: true, rethrow: false]
              |0  |1                  |2                  |3 
     locals:  |-  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-   <||@
  Comment 1493 702 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1495 708 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1500 704 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B74  <||@
  Comment 1506 block B74 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 1506 724 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1506 728 rsi|DWORD[.] = MOV [r10|QWORD[.] + 12] size: DWORD  <||@
  Comment 1510 730 TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 1512 732 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76  <||@
  Comment 1518 block B76 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 1518 742 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1518 744 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1523 746 MOV (x: [r10|QWORD[.] + 12], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 1527 748 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3  <||@
  Comment 1531 750 CMP [rdx|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$90/1190971543;, resolved>;compressed}  <||@
  Comment 1531 {meta{HotSpotType<Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$90/1190971543;, resolved>;compressed}}  <||@
  Comment 1538 752 BRANCH trueDestinationProbability: 0.5456716749520927 condition: = trueDestination: B76 -> B86 falseDestination: B76 -> B78  <||@
  Comment 1549 block B33 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 1549 380 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1549 382 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1554 384 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3  <||@
  Comment 1558 386 rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1561 388 JUMP ~[] destination: B33 -> B40  <||@
  Comment 1566 block B64 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 1566 634 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1566 636 r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/compiler/graph/Node;, resolved>}  <||@
  Comment 1566 {meta{HotSpotType<Lorg/graalvm/compiler/graph/Node;, resolved>}}  <||@
  Comment 1576 638 r8|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 1586 640 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1591 642 rsi|DWORD[.] = MOV [r10|QWORD[.] + 12] size: DWORD  <||@
  Comment 1595 644 TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 1597 646 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B67  <||@
  Comment 1608 block B125 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 1608 1114 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1608 1116 TEST (x: r9|DWORD[.], y: r9|DWORD[.]) size: DWORD  <||@
  Comment 1611 1118 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B125 -> B126 falseDestination: B125 -> B128  <||@
  Comment 1617 block B128 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 1617 1134 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1617 1136 r13|DWORD = MOV [r9|DWORD[.] * 8 + 12] size: DWORD state [bci:49, 7, 8, 30]  <||@
  Comment 1617 [rdx:0, rbx:0, r9:0, r10:0, stack:20, stack:24, stack:40, stack:48]at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:659) [bci: 49, duringCall: false, rethrow: false]
              |0                  |1                                         |2  |3 
     locals:  |stack:56|QWORD[.]  |vobject:1492729447:0{arg$1=r10|DWORD[.]}  |-  |- 
  at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30, duringCall: true, rethrow: false]
              |0  |1             |2                  |3 
     locals:  |-  |rdx|QWORD[.]  |stack:40|QWORD[.]  |-   <||@
  Comment 1617 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1625 1138 rsi|DWORD = SAR r13|DWORD y: 6 size: DWORD  <||@
  Comment 1631 1140 CMP (x: r11|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 1634 1142 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B128 -> B129 falseDestination: B128 -> B164  <||@
  Comment 1640 block B129 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 1640 1144 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1640 1146 stack:64|DWORD[.] = MOVE r9|DWORD[.] moveKind: DWORD  <||@
  Comment 1645 1148 r11|QWORD = MOVE input: long[1|0x1]  <||@
  Comment 1652 1150 rcx|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 1655 1152 r11|QWORD = SHL (x: r11|QWORD, ~y: rcx|DWORD) size: QWORD  <||@
  Comment 1658 1154 r11|QWORD = OR (x: r11|QWORD, ~y: [rbx|QWORD[.] + rsi|DWORD * 8 + 16]) size: QWORD  <||@
  Comment 1663 1156 MOV (x: [rbx|QWORD[.] + rsi|DWORD * 8 + 16], y: r11|QWORD) size: QWORD  <||@
  Comment 1668 1158 r14|DWORD[.] = MOV [r9|DWORD[.] * 8 + 80] size: DWORD  <||@
  Comment 1676 1160 TEST (x: r14|DWORD[.], y: r14|DWORD[.]) size: DWORD  <||@
  Comment 1679 1162 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B129 -> B130 falseDestination: B129 -> B136  <||@
  Comment 1685 block B136 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 1685 1246 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1685 1248 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 1689 1250 r11|QWORD = LEA [rsi|QWORD + 24] size: QWORD  <||@
  Comment 1693 1252 CMP (x: r11|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 1697 1254 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B136 -> B137 falseDestination: B136 -> B138  <||@
  Comment 1703 block B138 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 1703 1276 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1703 1278 MOV (x: [r15|QWORD + 96], y: r11|QWORD) size: QWORD  <||@
  Comment 1707 1280 AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0  <||@
  Comment 1714 1282 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1714 1284 JUMP ~[] destination: B138 -> B139  <||@
  Comment 1714 block B139 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 1714 1286 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1714 1288 r11|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 1717 1290 stack:72|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1722 1292 r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeList$NodeListIterator;, resolved>}  <||@
  Comment 1722 {meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeList$NodeListIterator;, resolved>}}  <||@
  Comment 1732 1294 r8|QWORD = MOV [r8|QWORD + 168] size: QWORD  <||@
  Comment 1739 1296 MOV (x: [rsi|QWORD[*]], y: r8|QWORD) size: QWORD  <||@
  Comment 1742 1298 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeList$NodeListIterator;, resolved>;compressed}  <||@
  Comment 1742 {meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeList$NodeListIterator;, resolved>;compressed}}  <||@
  Comment 1749 1300 r8|DWORD = MOV [r14|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 1757 1302 MOV (x: [rsi|QWORD[*] + 12], y: r8|DWORD) size: DWORD  <||@
  Comment 1761 1304 MOV (x: [rsi|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 1765 1306 MOV (x: [rsi|QWORD[*] + 20], y: r14|DWORD[.]) size: DWORD  <||@
  Comment 1769 1308 JUMP ~[] destination: B139 -> B140  <||@
  Comment 1774 block B141 loop 4 depth 2 outer 0 header:648|LoopBegin  <||@
  Comment 1774 1320 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1776 1322 rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1779 1324 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<NodeList$NodeListIterator.next()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:32, 61, 7, 8, 30]  <||@
  Comment 1779 9  <||@
  Comment 1783 {HotSpotMethod<NodeList$NodeListIterator.next()>}  <||@
  Comment 1788 [stack:8, stack:16, stack:20, stack:40, stack:48]at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 32, duringCall: true, rethrow: false]
              |0                  |1                                              |2                  |3 
     locals:  |stack:64|DWORD[.]  |vobject:1492729447:0{arg$1=stack:60|DWORD[.]}  |stack:72|QWORD[.]  |- 
  at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30, duringCall: true, rethrow: false]
              |0  |1                  |2                  |3 
     locals:  |-  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-   <||@
  Comment 1789 1326 TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD  <||@
  Comment 1792 1328 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B141 -> B145 falseDestination: B141 -> B143  <||@
  Comment 1798 block B143 loop 4 depth 2 outer 0 header:648|LoopBegin  <||@
  Comment 1798 1334 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1798 1336 rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/compiler/nodes/virtual/EscapeObjectState;, resolved>}  <||@
  Comment 1798 {meta{HotSpotType<Lorg/graalvm/compiler/nodes/virtual/EscapeObjectState;, resolved>}}  <||@
  Comment 1808 1338 rsi|DWORD = MOV [rax|QWORD[.] + 8] size: DWORD  <||@
  Comment 1811 1340 CMP (x: rcx|QWORD, y: [rsi|DWORD * 8 + 64]) size: QWORD  <||@
  Comment 1819 1342 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B143 -> B145 falseDestination: B143 -> B155  <||@
  Comment 1825 block B145 loop 4 depth 2 outer 0 header:648|LoopBegin  <||@
  Comment 1825 1348 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1825 1350 TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD  <||@
  Comment 1828 1352 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B145 -> B146 falseDestination: B145 -> B148  <||@
  Comment 1834 block B148 loop 4 depth 2 outer 0 header:648|LoopBegin  <||@
  Comment 1834 1372 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1834 1374 r10|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD  <||@
  Comment 1839 1376 rcx|DWORD[.] = MOV [r10|DWORD[.] * 8 + 28] size: DWORD  <||@
  Comment 1847 1378 TEST (x: rcx|DWORD[.], y: rcx|DWORD[.]) size: DWORD  <||@
  Comment 1849 1380 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B148 -> B149 falseDestination: B148 -> B151  <||@
  Comment 1855 block B151 loop 4 depth 2 outer 0 header:648|LoopBegin  <||@
  Comment 1855 1400 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1855 1402 rsi|DWORD = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 1862 1404 rdx|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD  <||@
  Comment 1865 1406 r11|DWORD = SAR rdx|DWORD y: 6 size: DWORD  <||@
  Comment 1872 1408 CMP (x: rsi|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 1875 1410 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B151 -> B152 falseDestination: B151 -> B153  <||@
  Comment 1881 block B152 loop 4 depth 2 outer 0 header:648|LoopBegin  <||@
  Comment 1881 1412 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1881 1414 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3  <||@
  Comment 1887 1416 r8|QWORD = MOVE input: long[1|0x1]  <||@
  Comment 1894 1418 rcx|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 1896 1420 r8|QWORD = SHL (x: r8|QWORD, ~y: rcx|DWORD) size: QWORD  <||@
  Comment 1899 1422 r8|QWORD = OR (x: r8|QWORD, ~y: [rsi|QWORD[.] + r11|DWORD * 8 + 16]) size: QWORD  <||@
  Comment 1904 1424 MOV (x: [rsi|QWORD[.] + r11|DWORD * 8 + 16], y: r8|QWORD) size: QWORD  <||@
  Comment 1909 1426 r11|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1914 1428 JUMP ~[] destination: B152 -> B140  <||@
  Comment 1914 block B140 loop 4 depth 2 outer 0 header:648|LoopBegin  <||@
  Comment 1914 1310 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1914 1312 rsi|DWORD[.] = MOV [r11|QWORD[.] + 20] size: DWORD  <||@
  Comment 1918 1314 rsi|DWORD = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD state [bci:22, 61, 7, 8, 30]  <||@
  Comment 1918 [r11:0, stack:8, stack:16, stack:20, stack:40, stack:48]at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 22, duringCall: false, rethrow: false]
              |0                  |1                                              |2             |3 
     locals:  |stack:64|DWORD[.]  |vobject:1492729447:0{arg$1=stack:60|DWORD[.]}  |r11|QWORD[.]  |- 
  at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30, duringCall: true, rethrow: false]
              |0  |1                  |2                  |3 
     locals:  |-  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-   <||@
  Comment 1918 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1925 1316 CMP (x: rsi|DWORD, y: [r11|QWORD[.] + 16]) size: DWORD  <||@
  Comment 1929 1318 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B140 -> B141 falseDestination: B140 -> B158  <||@
  Comment 1940 block B98 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 1940 916 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1940 918 TEST (x: r9|DWORD[.], y: r9|DWORD[.]) size: DWORD  <||@
  Comment 1943 920 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B98 -> B99 falseDestination: B98 -> B128  <||@
  Comment 1954 block B172 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 1954 1620 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1954 1622 r11|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1957 1624 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1962 1626 JUMP ~[] destination: B172 -> B173  <||@
  Comment 1962 block B173 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 1962 1628 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1962 1630 CMP [rdx|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/phases/common/CanonicalizerPhase$Instance$$Lambda$21/340690072;, resolved>;compressed}  <||@
  Comment 1962 {meta{HotSpotType<Lorg/graalvm/compiler/phases/common/CanonicalizerPhase$Instance$$Lambda$21/340690072;, resolved>;compressed}}  <||@
  Comment 1969 1632 BRANCH trueDestinationProbability: 0.7065224035699004 condition: = trueDestination: B173 -> B174 falseDestination: B173 -> B183  <||@
  Comment 1975 block B174 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 1975 1634 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1975 1636 TEST (x: r11|QWORD[.], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 1978 1638 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B174 -> B178 falseDestination: B174 -> B176  <||@
  Comment 1984 block B176 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 1984 1644 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1984 1646 r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/compiler/graph/Node;, resolved>}  <||@
  Comment 1984 {meta{HotSpotType<Lorg/graalvm/compiler/graph/Node;, resolved>}}  <||@
  Comment 1994 1648 rsi|DWORD = MOV [r11|QWORD[.] + 8] size: DWORD  <||@
  Comment 1998 1650 CMP (x: r9|QWORD, y: [rsi|DWORD * 8 + 48]) size: QWORD  <||@
  Comment 2006 1652 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B176 -> B178 falseDestination: B176 -> B181  <||@
  Comment 2012 block B178 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 2012 1658 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2012 1660 rsi|DWORD[.] = MOV [rdx|QWORD[.] + 12] size: DWORD  <||@
  Comment 2015 1662 TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 2017 1664 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B178 -> B179 falseDestination: B178 -> B180  <||@
  Comment 2023 block B180 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 2023 1674 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2023 1676 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3  <||@
  Comment 2027 1678 rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 2030 1680 - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<NodeWorkList.add(Node)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:8, 30]  <||@
  Comment 2030 7  <||@
  Comment 2047 {HotSpotMethod<NodeWorkList.add(Node)>}  <||@
  Comment 2052 [stack:40, stack:48]at org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance$$Lambda$21.340690072.accept(Object) [bci: 8, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30, duringCall: true, rethrow: false]
              |0  |1                  |2                  |3 
     locals:  |-  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-   <||@
  Comment 2053 1682 r11|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 2058 1684 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2063 1686 JUMP ~[] destination: B180 -> B11  <||@
  Comment 2068 block B78 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 2068 758 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2068 760 r11|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2071 762 JUMP ~[] destination: B78 -> B173  <||@
  Comment 2073 block B99 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 2073 922 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2073 924 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:44, 2, 5, 2, 7, 8, 30]  <||@
  Comment 2073 [r10:0, stack:24, stack:40, stack:48]at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:97) [bci: 44, duringCall: false, rethrow: false]
              |0             |1  |2        
     locals:  |r10|DWORD[.]  |-  |r8|DWORD 
  at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5, duringCall: true, rethrow: false]
              |0                                         |1                 
     locals:  |vobject:1492729447:0{arg$1=r10|DWORD[.]}  |stack:56|QWORD[.] 
  at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:653) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                                         |2  |3 
     locals:  |stack:56|QWORD[.]  |vobject:1492729447:0{arg$1=r10|DWORD[.]}  |-  |- 
  at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30, duringCall: true, rethrow: false]
              |0  |1                  |2                  |3 
     locals:  |-  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-   <||@
  Comment 2073 {infopoint: SAFEPOINT}  <||@
  Comment 2073 11  <||@
  Comment 2079 926 r11|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 2084 928 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2089 930 JUMP ~[] destination: B99 -> B11  <||@
  Comment 2094 block B126 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 2094 1120 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2094 1122 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:22, 7, 8, 30]  <||@
  Comment 2094 [rdi:0, r10:0, stack:24, stack:40, stack:48]at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 22, duringCall: false, rethrow: false]
              |0                  |1                                         |2                                                                                                 |3 
     locals:  |stack:56|QWORD[.]  |vobject:1492729447:0{arg$1=r10|DWORD[.]}  |vobject:NodeList$NodeListIterator:1{expectedModCount=r8|DWORD,index=r13|DWORD,list=rdi|DWORD[.]}  |- 
  at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30, duringCall: true, rethrow: false]
              |0  |1                  |2                  |3 
     locals:  |-  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-   <||@
  Comment 2094 {infopoint: SAFEPOINT}  <||@
  Comment 2094 11  <||@
  Comment 2100 1124 r11|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 2105 1126 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2110 1128 JUMP ~[] destination: B126 -> B11  <||@
  Comment 2115 block B130 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 2115 1164 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2115 1166 r14|DWORD[.] = MOV [r9|DWORD[.] * 8 + 68] size: DWORD  <||@
  Comment 2123 1168 TEST (x: r14|DWORD[.], y: r14|DWORD[.]) size: DWORD  <||@
  Comment 2126 1170 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B130 -> B131 falseDestination: B130 -> B132  <||@
  Comment 2132 block B132 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 2132 1182 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2132 1184 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 2136 1186 rdx|QWORD = LEA [rsi|QWORD + 16] size: QWORD  <||@
  Comment 2140 1188 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 2144 1190 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B132 -> B133 falseDestination: B132 -> B134  <||@
  Comment 2150 block B134 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 2150 1208 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2150 1210 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 2154 1212 AMD64PREFETCH ~[rsi|QWORD + 208] instr: 0  <||@
  Comment 2161 1214 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 2161 1216 JUMP ~[] destination: B134 -> B135  <||@
  Comment 2161 block B135 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 2161 1218 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2161 1220 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$92/1492729447;, resolved>}  <||@
  Comment 2161 {meta{HotSpotType<Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$92/1492729447;, resolved>}}  <||@
  Comment 2171 1222 r11|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 2174 1224 rdx|QWORD = MOV [rdx|QWORD + 168] size: QWORD  <||@
  Comment 2181 1226 MOV (x: [rsi|QWORD[*]], y: rdx|QWORD) size: QWORD  <||@
  Comment 2184 1228 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$92/1492729447;, resolved>;compressed}  <||@
  Comment 2184 {meta{HotSpotType<Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$92/1492729447;, resolved>;compressed}}  <||@
  Comment 2191 1230 MOV (x: [rsi|QWORD[*] + 12], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 2195 1232 r14|QWORD[.] = UNCOMPRESSPOINTER (input: r14|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3  <||@
  Comment 2199 1234 rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 2202 1236 rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 2205 1238 - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FrameState.applyToVirtual(VirtualState$VirtualClosure)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:61, 61, 7, 8, 30]  <||@
  Comment 2205 9  <||@
  Comment 2207 {HotSpotMethod<FrameState.applyToVirtual(VirtualState$VirtualClosure)>}  <||@
  Comment 2212 [stack:40, stack:48]at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30, duringCall: true, rethrow: false]
              |0  |1                  |2                  |3 
     locals:  |-  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-   <||@
  Comment 2213 1240 r11|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 2218 1242 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2223 1244 JUMP ~[] destination: B135 -> B11  <||@
  Comment 2228 block B158 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 2228 1474 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2228 1476 r9|DWORD[.] = MOVE stack:64|DWORD[.] moveKind: DWORD  <||@
  Comment 2233 1478 r10|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD  <||@
  Comment 2238 1480 r13|DWORD[.] = MOV [r9|DWORD[.] * 8 + 68] size: DWORD  <||@
  Comment 2246 1482 TEST (x: r13|DWORD[.], y: r13|DWORD[.]) size: DWORD  <||@
  Comment 2249 1484 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B158 -> B159 falseDestination: B158 -> B160  <||@
  Comment 2255 block B160 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 2255 1496 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2255 1498 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 2259 1500 rdx|QWORD = LEA [rsi|QWORD + 16] size: QWORD  <||@
  Comment 2263 1502 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 2267 1504 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B160 -> B161 falseDestination: B160 -> B162  <||@
  Comment 2273 block B162 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 2273 1522 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2273 1524 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 2277 1526 AMD64PREFETCH ~[rsi|QWORD + 208] instr: 0  <||@
  Comment 2284 1528 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 2284 1530 JUMP ~[] destination: B162 -> B163  <||@
  Comment 2284 block B163 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 2284 1532 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2284 1534 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$92/1492729447;, resolved>}  <||@
  Comment 2284 {meta{HotSpotType<Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$92/1492729447;, resolved>}}  <||@
  Comment 2294 1536 r11|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 2297 1538 rdx|QWORD = MOV [rdx|QWORD + 168] size: QWORD  <||@
  Comment 2304 1540 MOV (x: [rsi|QWORD[*]], y: rdx|QWORD) size: QWORD  <||@
  Comment 2307 1542 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$92/1492729447;, resolved>;compressed}  <||@
  Comment 2307 {meta{HotSpotType<Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$92/1492729447;, resolved>;compressed}}  <||@
  Comment 2314 1544 MOV (x: [rsi|QWORD[*] + 12], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 2318 1546 r13|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3  <||@
  Comment 2322 1548 rsi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 2325 1550 rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 2328 1552 - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FrameState.applyToVirtual(VirtualState$VirtualClosure)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:61, 61, 7, 8, 30]  <||@
  Comment 2328 9  <||@
  Comment 2335 {HotSpotMethod<FrameState.applyToVirtual(VirtualState$VirtualClosure)>}  <||@
  Comment 2340 [stack:40, stack:48]at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30, duringCall: true, rethrow: false]
              |0  |1                  |2                  |3 
     locals:  |-  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-   <||@
  Comment 2341 1554 r11|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 2346 1556 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2351 1558 JUMP ~[] destination: B163 -> B11  <||@
  Comment 2356 block B183 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 2356 1702 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2356 1704 rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2359 1706 rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 2362 1708 - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Consumer.accept(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:30]  <||@
  Comment 2362 6  <||@
  Comment 2375 {HotSpotMethod<Consumer.accept(Object)>}  <||@
  Comment 2380 [stack:40, stack:48]at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30, duringCall: true, rethrow: false]
              |0  |1                  |2                  |3 
     locals:  |-  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-   <||@
  Comment 2381 1710 r11|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 2386 1712 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2391 1714 JUMP ~[] destination: B183 -> B11  <||@
  Comment 2396 block B131 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 2396 1172 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2396 1174 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:44, 2, 5, 2, 61, 7, 8, 30]  <||@
  Comment 2396 [r9:0, r10:0, stack:40, stack:48]at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:97) [bci: 44, duringCall: false, rethrow: false]
              |0             |1  |2         
     locals:  |r10|DWORD[.]  |-  |r13|DWORD 
  at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5, duringCall: true, rethrow: false]
              |0                                         |1           
     locals:  |vobject:1492729447:0{arg$1=r10|DWORD[.]}  |r9|DWORD[.] 
  at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:653) [bci: 2, duringCall: true, rethrow: false]
              |0            |1                                         |2  |3 
     locals:  |r9|DWORD[.]  |vobject:1492729447:0{arg$1=r10|DWORD[.]}  |-  |- 
  at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30, duringCall: true, rethrow: false]
              |0  |1                  |2                  |3 
     locals:  |-  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-   <||@
  Comment 2396 {infopoint: SAFEPOINT}  <||@
  Comment 2396 11  <||@
  Comment 2402 1176 r11|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 2407 1178 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2412 1180 JUMP ~[] destination: B131 -> B11  <||@
  Comment 2417 block B159 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 2417 1486 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2417 1488 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:22, 61, 7, 8, 30]  <||@
  Comment 2417 [r9:0, r10:0, stack:8, stack:40, stack:48]at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 22, duringCall: false, rethrow: false]
              |0            |1                                         |2                  |3 
     locals:  |r9|DWORD[.]  |vobject:1492729447:0{arg$1=r10|DWORD[.]}  |stack:72|QWORD[.]  |- 
  at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30, duringCall: true, rethrow: false]
              |0  |1                  |2                  |3 
     locals:  |-  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-   <||@
  Comment 2417 {infopoint: SAFEPOINT}  <||@
  Comment 2417 11  <||@
  Comment 2423 1490 r11|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 2428 1492 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2433 1494 JUMP ~[] destination: B159 -> B11  <||@
  Comment 2438 block B137 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 2438 1256 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2438 1258 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 2438 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 2448 1260 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 2453 1262 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2458 1264 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:44, 2, 5, 2, 61, 7, 8, 30]  <||@
  Comment 2458 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 2463 [r14:0, stack:16, stack:20, stack:40, stack:48]at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:97) [bci: 44, duringCall: false, rethrow: false]
              |0                  |1  |2         
     locals:  |stack:60|DWORD[.]  |-  |r13|DWORD 
  at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5, duringCall: true, rethrow: false]
              |0                                              |1                 
     locals:  |vobject:1492729447:0{arg$1=stack:60|DWORD[.]}  |stack:64|DWORD[.] 
  at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:653) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                                              |2  |3 
     locals:  |stack:64|DWORD[.]  |vobject:1492729447:0{arg$1=stack:60|DWORD[.]}  |-  |- 
  at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30, duringCall: true, rethrow: false]
              |0  |1                  |2                  |3 
     locals:  |-  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-   <||@
  Comment 2464 1266 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2467 1268 r9|DWORD[.] = MOVE stack:64|DWORD[.] moveKind: DWORD  <||@
  Comment 2472 1270 r10|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD  <||@
  Comment 2477 1272 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2482 1274 JUMP ~[] destination: B137 -> B139  <||@
  Comment 2487 block B133 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 2487 1192 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2487 1194 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 2487 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 2497 1196 rdx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2502 1198 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2507 1200 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:44, 2, 5, 2, 61, 7, 8, 30]  <||@
  Comment 2507 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 2512 [r14:0, stack:16, stack:20, stack:40, stack:48]at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:97) [bci: 44, duringCall: false, rethrow: false]
              |0                  |1  |2         
     locals:  |stack:60|DWORD[.]  |-  |r13|DWORD 
  at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5, duringCall: true, rethrow: false]
              |0                                              |1                 
     locals:  |vobject:1492729447:0{arg$1=stack:60|DWORD[.]}  |stack:64|DWORD[.] 
  at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:653) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                                              |2  |3 
     locals:  |stack:64|DWORD[.]  |vobject:1492729447:0{arg$1=stack:60|DWORD[.]}  |-  |- 
  at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30, duringCall: true, rethrow: false]
              |0  |1                  |2                  |3 
     locals:  |-  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-   <||@
  Comment 2513 1202 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2516 1204 r10|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD  <||@
  Comment 2521 1206 JUMP ~[] destination: B133 -> B135  <||@
  Comment 2526 block B161 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 2526 1506 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2526 1508 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 2526 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 2536 1510 rdx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2541 1512 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2546 1514 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:22, 61, 7, 8, 30]  <||@
  Comment 2546 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 2551 [r13:0, stack:8, stack:16, stack:20, stack:40, stack:48]at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 22, duringCall: false, rethrow: false]
              |0                  |1                                              |2                  |3 
     locals:  |stack:64|DWORD[.]  |vobject:1492729447:0{arg$1=stack:60|DWORD[.]}  |stack:72|QWORD[.]  |- 
  at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30, duringCall: true, rethrow: false]
              |0  |1                  |2                  |3 
     locals:  |-  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-   <||@
  Comment 2552 1516 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2555 1518 r10|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD  <||@
  Comment 2560 1520 JUMP ~[] destination: B161 -> B163  <||@
  Comment 2565 block B83 null  <||@
  Comment 2565 786 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2565 788 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 2574 12  <||@
  Comment 2584 block B23 null  <||@
  Comment 2584 280 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2584 282 MOV (x: [r10|QWORD[.] + 12], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 2588 284 JUMP ~[] destination: B23 -> B83  <||@
  Comment 2590 block B38 null  <||@
  Comment 2590 424 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2590 428 MOV (x: [r10|QWORD[.] + 12], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 2594 430 JUMP ~[] destination: B38 -> B83  <||@
  Comment 2596 block B68 null  <||@
  Comment 2596 666 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2596 668 MOV (x: [r10|QWORD[.] + 12], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 2600 670 rsi|DWORD = MOVE input: int[-286908|0xfffffffffffb9f44]  <||@
  Comment 2605 672 JUMP ~[] destination: B68 -> B73  <||@
  Comment 2605 block B73 null  <||@
  Comment 2605 716 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2605 718 MOV (x: [r15|QWORD + 668], y: rsi|DWORD) size: DWORD  <||@
  Comment 2612 720 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2619 722 DEOPT info [bci:102, 1, 1, 22]  <||@
  Comment 2619 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2624 [r10:0, stack:48]at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:47) [bci: 102, duringCall: false, rethrow: false]
              |0 
     locals:  |- 
  at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |r10|QWORD[.]  |- 
  at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22, duringCall: true, rethrow: false]
              |0  |1                  |2             |3 
     locals:  |-  |stack:32|QWORD[.]  |r10|QWORD[.]  |-   <||@
  Comment 2625 block B5 null  <||@
  Comment 2625 94 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2625 96 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2628 98 CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeUsageIterable;, resolved>;compressed}  <||@
  Comment 2628 {meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeUsageIterable;, resolved>;compressed}}  <||@
  Comment 2635 100 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B185  <||@
  Comment 2641 block B6 null  <||@
  Comment 2641 102 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2641 104 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 2645 106 r10|QWORD = LEA [rsi|QWORD + 24] size: QWORD  <||@
  Comment 2649 108 CMP (x: r10|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 2653 110 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8  <||@
  Comment 2659 block B8 null  <||@
  Comment 2659 126 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2659 128 MOV (x: [r15|QWORD + 96], y: r10|QWORD) size: QWORD  <||@
  Comment 2663 130 AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0  <||@
  Comment 2670 132 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 2670 134 JUMP ~[] destination: B8 -> B9  <||@
  Comment 2670 block B9 null  <||@
  Comment 2670 136 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2670 138 r10|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 2673 140 r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeUsageIterator;, resolved>}  <||@
  Comment 2673 {meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeUsageIterator;, resolved>}}  <||@
  Comment 2683 142 r11|QWORD = MOV [r11|QWORD + 168] size: QWORD  <||@
  Comment 2690 144 MOV (x: [rsi|QWORD[*]], y: r11|QWORD) size: QWORD  <||@
  Comment 2693 146 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeUsageIterator;, resolved>;compressed}  <||@
  Comment 2693 {meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeUsageIterator;, resolved>;compressed}}  <||@
  Comment 2700 148 MOV [rsi|QWORD[*] + 12] y: -1 size: DWORD  <||@
  Comment 2707 150 r11|DWORD[.] = MOV [r14|QWORD[.] + 12] size: DWORD  <||@
  Comment 2711 152 MOV (x: [rsi|QWORD[*] + 16], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 2715 154 MOV (x: [rsi|QWORD[*] + 20], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 2719 156 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2722 158 stack:40|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2727 160 - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<NodeUsageIterator.advance()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:15, 26, 1, 6]  <||@
  Comment 2727 {HotSpotMethod<NodeUsageIterator.advance()>}  <||@
  Comment 2727 9  <||@
  Comment 2732 [stack:40, stack:48]at org.graalvm.compiler.graph.NodeUsageIterator.<init>(NodeUsageIterator.java:51) [bci: 15, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.graph.NodeUsageIterable.iterator(NodeUsageIterable.java:44) [bci: 26, duringCall: true, rethrow: false]
              |0                 
     locals:  |-                 
     stack:   |stack:40|QWORD[.] 
  at org.graalvm.compiler.graph.NodeUsageIterable.iterator(NodeUsageIterable.java:31) [bci: 1, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at java.lang.Iterable.forEach(Iterable.java:74) [bci: 6, duringCall: true, rethrow: false]
              |0  |1                  |2  |3 
     locals:  |-  |stack:32|QWORD[.]  |-  |-   <||@
  Comment 2733 162 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2738 164 JUMP ~[] destination: B9 -> B10  <||@
  Comment 2743 block B72 null  <||@
  Comment 2743 706 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2743 710 MOV (x: [r10|QWORD[.] + 12], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 2747 712 rsi|DWORD = MOVE input: int[-267196|0xfffffffffffbec44]  <||@
  Comment 2752 714 JUMP ~[] destination: B72 -> B73  <||@
  Comment 2757 block B35 null  <||@
  Comment 2757 396 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2757 398 MOV (x: [r10|QWORD[.] + 12], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 2761 400 JUMP ~[] destination: B35 -> B83  <||@
  Comment 2766 block B2 null  <||@
  Comment 2766 40 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2766 42 r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2771 44 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 2771 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 2781 46 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 2786 48 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2791 50 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:13, 6]  <||@
  Comment 2791 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 2796 [r13:0, r14:0, stack:48]at org.graalvm.compiler.graph.iterators.FilteredNodeIterable.iterator(FilteredNodeIterable.java:45) [bci: 13, duringCall: false, rethrow: false]
              |0                                                                                                         |1                                                                                                         |2            
     locals:  |r14|QWORD[.]                                                                                              |                                                                                                          |             
     stack:   |vobject:PredicatedProxyNodeIterator:0{current=Object[null],iterator=Object[null],predicate=Object[null]}  |vobject:PredicatedProxyNodeIterator:0{current=Object[null],iterator=Object[null],predicate=Object[null]}  |r13|QWORD[.] 
  at java.lang.Iterable.forEach(Iterable.java:74) [bci: 6, duringCall: true, rethrow: false]
              |0  |1                  |2  |3 
     locals:  |-  |stack:32|QWORD[.]  |-  |-   <||@
  Comment 2797 52 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2800 54 JUMP ~[] destination: B2 -> B4  <||@
  Comment 2805 block B7 null  <||@
  Comment 2805 112 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2805 114 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 2805 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 2815 116 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 2820 118 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2825 120 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 2825 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 2830 [r14:0, stack:48]at java.lang.Iterable.forEach(Iterable.java:73) [bci: 0, duringCall: false, rethrow: false]
              |0             |1                  |2  |3 
     locals:  |r14|QWORD[.]  |stack:32|QWORD[.]  |-  |-   <||@
  Comment 2831 122 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2834 124 JUMP ~[] destination: B7 -> B9  <||@
  Comment 2839 block B75 null  <||@
  Comment 2839 734 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2839 736 MOV [r15|QWORD + 668] y: -348604 size: DWORD  <||@
  Comment 2850 738 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2857 740 DEOPT info [bci:94, 1, 1, 22]  <||@
  Comment 2857 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2862 [r10:0, stack:48]at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 94, duringCall: false, rethrow: false]
              |0            
     locals:  |r10|QWORD[.] 
     stack:   |rax|DWORD    
  at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |r10|QWORD[.]  |- 
  at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22, duringCall: true, rethrow: false]
              |0  |1                  |2             |3 
     locals:  |-  |stack:32|QWORD[.]  |r10|QWORD[.]  |-   <||@
  Comment 2863 block B185 null  <||@
  Comment 2863 1724 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2863 1726 MOV [r15|QWORD + 668] y: -400435 size: DWORD  <||@
  Comment 2874 1728 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2881 1730 DEOPT info [bci:0]  <||@
  Comment 2881 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2886 [r14:0, stack:48]at java.lang.Iterable.forEach(Iterable.java:73) [bci: 0, duringCall: false, rethrow: false]
              |0             |1                  |2  |3 
     locals:  |r14|QWORD[.]  |stack:32|QWORD[.]  |-  |-   <||@
  Comment 2887 block B179 null  <||@
  Comment 2887 1666 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2887 1668 r8|DWORD = MOVE input: int[-396811|0xfffffffffff9f1f5]  <||@
  Comment 2893 1670 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2898 1672 JUMP ~[] destination: B179 -> B182  <||@
  Comment 2898 block B182 null  <||@
  Comment 2898 1694 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2898 1696 MOV (x: [r15|QWORD + 668], y: r8|DWORD) size: DWORD  <||@
  Comment 2905 1698 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2912 1700 DEOPT info [bci:27]  <||@
  Comment 2912 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2917 [rdx:0, r10:0, r11:0]at java.lang.Iterable.forEach(Iterable.java:74) [bci: 27, duringCall: false, rethrow: false]
              |0             |1             |2             |3 
     locals:  |-             |rdx|QWORD[.]  |r10|QWORD[.]  |- 
     stack:   |r11|QWORD[.]  |              |              |    <||@
  Comment 2918 block B120 null  <||@
  Comment 2918 1082 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2918 1084 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2923 1086 JUMP ~[] destination: B120 -> B121  <||@
  Comment 2923 block B121 null  <||@
  Comment 2923 1088 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2923 1090 r11|DWORD = MOVE input: int[-371995|0xfffffffffffa52e5]  <||@
  Comment 2929 1092 JUMP ~[] destination: B121 -> B124  <||@
  Comment 2929 block B124 null  <||@
  Comment 2929 1106 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2929 1108 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 2936 1110 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2943 1112 DEOPT info [bci:22, 7, 8, 30]  <||@
  Comment 2943 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2948 [rdi:0, r10:0, stack:20, stack:24, stack:48]at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 22, duringCall: false, rethrow: false]
              |0                  |1                                              |2                                                                                                 |3 
     locals:  |stack:56|QWORD[.]  |vobject:1492729447:0{arg$1=stack:60|DWORD[.]}  |vobject:NodeList$NodeListIterator:1{expectedModCount=r8|DWORD,index=r13|DWORD,list=rdi|DWORD[.]}  |- 
  at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30, duringCall: true, rethrow: false]
              |0  |1                  |2             |3 
     locals:  |-  |stack:32|QWORD[.]  |r10|QWORD[.]  |-   <||@
  Comment 2949 block B169 null  <||@
  Comment 2949 1598 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2949 1600 r11|DWORD = MOVE input: int[-357915|0xfffffffffffa89e5]  <||@
  Comment 2955 1602 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2960 1604 JUMP ~[] destination: B169 -> B171  <||@
  Comment 2960 block B171 null  <||@
  Comment 2960 1612 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2960 1614 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 2967 1616 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2974 1618 DEOPT info [bci:27]  <||@
  Comment 2974 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2979 [rsi:0, r10:0, stack:48]at java.lang.Iterable.forEach(Iterable.java:74) [bci: 27, duringCall: false, rethrow: false]
              |0             |1                  |2             |3 
     locals:  |-             |stack:32|QWORD[.]  |r10|QWORD[.]  |- 
     stack:   |rsi|QWORD[.]  |                   |              |    <||@
  Comment 2980 block B166 null  <||@
  Comment 2980 1576 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2980 1572 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2985 1578 JUMP ~[] destination: B166 -> B167  <||@
  Comment 2985 block B167 null  <||@
  Comment 2985 1580 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2985 1582 r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@295001017]  <||@
  Comment 2985 {Object[d.a@295001017]}  <||@
  Comment 2995 1584 r9|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 2998 1586 r11|DWORD = MOVE input: int[-365083|0xfffffffffffa6de5]  <||@
  Comment 3004 1588 JUMP ~[] destination: B167 -> B168  <||@
  Comment 3004 block B168 null  <||@
  Comment 3004 1590 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 3004 1592 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 3011 1594 MOV (x: [r15|QWORD + 680], y: r9|QWORD[.]) size: QWORD  <||@
  Comment 3018 1596 DEOPT info [bci:44, 2, 5, 2, 7, 8, 30]  <||@
  Comment 3018 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3023 [r10:0, stack:20, stack:24, stack:48]at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:97) [bci: 44, duringCall: false, rethrow: false]
              |0                  |1  |2        
     locals:  |stack:60|DWORD[.]  |-  |r8|DWORD 
  at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5, duringCall: true, rethrow: false]
              |0                                              |1                 
     locals:  |vobject:1492729447:0{arg$1=stack:60|DWORD[.]}  |stack:56|QWORD[.] 
  at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:653) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                                              |2  |3 
     locals:  |stack:56|QWORD[.]  |vobject:1492729447:0{arg$1=stack:60|DWORD[.]}  |-  |- 
  at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30, duringCall: true, rethrow: false]
              |0  |1                  |2             |3 
     locals:  |-  |stack:32|QWORD[.]  |r10|QWORD[.]  |-   <||@
  Comment 3024 block B149 null  <||@
  Comment 3024 1382 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3024 1384 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3029 1386 JUMP ~[] destination: B149 -> B150  <||@
  Comment 3029 block B150 null  <||@
  Comment 3029 1388 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3029 1390 r11|DWORD = MOVE input: int[-387851|0xfffffffffffa14f5]  <||@
  Comment 3035 1398 JUMP ~[] destination: B150 -> B157  <||@
  Comment 3035 block B157 null  <||@
  Comment 3035 1466 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3035 1458 rcx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 3040 1460 r9|DWORD[.] = MOVE stack:64|DWORD[.] moveKind: DWORD  <||@
  Comment 3045 1462 r8|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD  <||@
  Comment 3050 1468 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 3057 1470 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3064 1472 DEOPT info [bci:37, 61, 7, 8, 30]  <||@
  Comment 3064 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3069 [rax:0, rcx:0, r8:0, r9:0, r10:0, stack:48]at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 37, duringCall: false, rethrow: false]
              |0             |1                                        |2             |3 
     locals:  |r9|DWORD[.]   |vobject:1492729447:0{arg$1=r8|DWORD[.]}  |rcx|QWORD[.]  |- 
     stack:   |rax|QWORD[.]  |                                         |              |  
  at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30, duringCall: true, rethrow: false]
              |0  |1                  |2             |3 
     locals:  |-  |stack:32|QWORD[.]  |r10|QWORD[.]  |-   <||@
  Comment 3070 block B170 null  <||@
  Comment 3070 1606 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3070 1608 r11|DWORD = MOVE input: int[-351523|0xfffffffffffaa2dd]  <||@
  Comment 3076 1610 JUMP ~[] destination: B170 -> B171  <||@
  Comment 3078 block B155 null  <||@
  Comment 3078 1448 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3078 1450 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3083 1452 JUMP ~[] destination: B155 -> B156  <||@
  Comment 3083 block B156 null  <||@
  Comment 3083 1454 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3083 1456 r11|DWORD = MOVE input: int[-386083|0xfffffffffffa1bdd]  <||@
  Comment 3089 1464 JUMP ~[] destination: B156 -> B157  <||@
  Comment 3091 block B55 null  <||@
  Comment 3091 554 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3091 556 r11|DWORD = MOVE input: int[-342795|0xfffffffffffac4f5]  <||@
  Comment 3097 558 JUMP ~[] destination: B55 -> B56  <||@
  Comment 3097 block B56 null  <||@
  Comment 3097 560 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3097 562 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 3104 564 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3111 566 DEOPT info [bci:42, 1, 1, 22]  <||@
  Comment 3111 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3116 [r10:0, stack:48]at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 42, duringCall: false, rethrow: false]
              |0            
     locals:  |r10|QWORD[.] 
     stack:   |rax|DWORD    
  at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |r10|QWORD[.]  |- 
  at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22, duringCall: true, rethrow: false]
              |0  |1                  |2             |3 
     locals:  |-  |stack:32|QWORD[.]  |r10|QWORD[.]  |-   <||@
  Comment 3117 block B181 null  <||@
  Comment 3117 1688 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3117 1690 r8|DWORD = MOVE input: int[-396323|0xfffffffffff9f3dd]  <||@
  Comment 3123 1692 JUMP ~[] destination: B181 -> B182  <||@
  Comment 3128 block B95 null  <||@
  Comment 3128 874 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3128 876 r11|DWORD = MOVE input: int[-354059|0xfffffffffffa98f5]  <||@
  Comment 3134 878 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3139 880 JUMP ~[] destination: B95 -> B171  <||@
  Comment 3144 block B51 null  <||@
  Comment 3144 530 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3144 532 r11|DWORD = MOVE input: int[-297148|0xfffffffffffb7744]  <||@
  Comment 3150 534 JUMP ~[] destination: B51 -> B56  <||@
  Comment 3152 block B30 null  <||@
  Comment 3152 352 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3152 354 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3157 356 JUMP ~[] destination: B30 -> B31  <||@
  Comment 3157 block B31 null  <||@
  Comment 3157 358 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3157 360 MOV [r15|QWORD + 668] y: -334371 size: DWORD  <||@
  Comment 3168 362 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3175 364 DEOPT info [bci:55, 1, 13]  <||@
  Comment 3175 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3180 [rax:0, r10:0, stack:48]at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 55, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |r10|QWORD[.]  |             
     stack:   |r10|QWORD[.]  |rax|QWORD[.] 
  at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1, duringCall: true, rethrow: false]
              |0            
     locals:  |r10|QWORD[.] 
  at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13, duringCall: true, rethrow: false]
              |0  |1                  |2             |3 
     locals:  |-  |stack:32|QWORD[.]  |r10|QWORD[.]  |-   <||@
  Comment 3181 block B65 null  <||@
  Comment 3181 648 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3181 650 MOV [r15|QWORD + 668] y: -297404 size: DWORD  <||@
  Comment 3192 652 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3199 654 DEOPT info [bci:30, 1, 1, 22]  <||@
  Comment 3199 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3204 [r10:0, stack:48]at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 30, duringCall: false, rethrow: false]
              |0            
     locals:  |r10|QWORD[.] 
     stack:   |rax|DWORD    
  at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |r10|QWORD[.]  |- 
  at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22, duringCall: true, rethrow: false]
              |0  |1                  |2             |3 
     locals:  |-  |stack:32|QWORD[.]  |r10|QWORD[.]  |-   <||@
  Comment 3205 block B122 null  <||@
  Comment 3205 1094 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3205 1096 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3210 1098 JUMP ~[] destination: B122 -> B123  <||@
  Comment 3210 block B123 null  <||@
  Comment 3210 1100 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3210 1102 r11|DWORD = MOVE input: int[-368163|0xfffffffffffa61dd]  <||@
  Comment 3216 1104 JUMP ~[] destination: B123 -> B124  <||@
  Comment 3221 block B70 null  <||@
  Comment 3221 682 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3221 684 MOV [r15|QWORD + 668] y: -346891 size: DWORD  <||@
  Comment 3232 686 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3239 688 DEOPT info [bci:64, 1, 1, 22]  <||@
  Comment 3239 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3244 [r10:0, stack:48]at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 64, duringCall: false, rethrow: false]
              |0            
     locals:  |r10|QWORD[.] 
  at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |r10|QWORD[.]  |- 
  at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22, duringCall: true, rethrow: false]
              |0  |1                  |2             |3 
     locals:  |-  |stack:32|QWORD[.]  |r10|QWORD[.]  |-   <||@
  Comment 3245 block B116 null  <||@
  Comment 3245 1046 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3245 1048 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3250 1050 JUMP ~[] destination: B116 -> B117  <||@
  Comment 3250 block B117 null  <||@
  Comment 3250 1052 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3250 1054 r11|DWORD = MOVE input: int[-368395|0xfffffffffffa60f5]  <||@
  Comment 3256 1056 JUMP ~[] destination: B117 -> B124  <||@
  Comment 3261 block B93 null  <||@
  Comment 3261 858 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3261 860 r11|DWORD = MOVE input: int[-352011|0xfffffffffffaa0f5]  <||@
  Comment 3267 862 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3272 864 JUMP ~[] destination: B93 -> B171  <||@
  Comment 3277 block B146 null  <||@
  Comment 3277 1354 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3277 1356 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3282 1358 JUMP ~[] destination: B146 -> B147  <||@
  Comment 3282 block B147 null  <||@
  Comment 3282 1360 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3282 1362 r11|DWORD = MOVE input: int[-386315|0xfffffffffffa1af5]  <||@
  Comment 3288 1370 JUMP ~[] destination: B147 -> B157  <||@
  Comment 3293 block B91 null  <||@
  Comment 3293 838 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3293 840 r11|DWORD = MOVE input: int[-351755|0xfffffffffffaa1f5]  <||@
  Comment 3299 842 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3304 844 JUMP ~[] destination: B91 -> B171  <||@
  Comment 3309 block B184 null  <||@
  Comment 3309 1716 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3309 1718 MOV [r15|QWORD + 668] y: -348979 size: DWORD  <||@
  Comment 3320 1720 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3327 1722 DEOPT info [bci:12]  <||@
  Comment 3327 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3332 [r10:0, stack:48]at java.lang.Iterable.forEach(Iterable.java:74) [bci: 12, duringCall: false, rethrow: false]
              |0  |1                  |2             |3 
     locals:  |-  |stack:32|QWORD[.]  |r10|QWORD[.]  |-   <||@
  Comment 3333 block B164 null  <||@
  Comment 3333 1560 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3333 1562 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3338 1564 MOV [r15|QWORD + 668] y: -377883 size: DWORD  <||@
  Comment 3349 1566 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3356 1568 DEOPT info [bci:49, 7, 8, 30]  <||@
  Comment 3356 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3361 [r10:0, stack:20, stack:24, stack:48]at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:659) [bci: 49, duringCall: false, rethrow: false]
              |0                  |1                                              |2  |3 
     locals:  |stack:56|QWORD[.]  |vobject:1492729447:0{arg$1=stack:60|DWORD[.]}  |-  |- 
  at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30, duringCall: true, rethrow: false]
              |0  |1                  |2             |3 
     locals:  |-  |stack:32|QWORD[.]  |r10|QWORD[.]  |-   <||@
  Comment 3362 block B102 null  <||@
  Comment 3362 944 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3362 946 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3367 948 r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1280662813]  <||@
  Comment 3367 {Object[d.a@1280662813]}  <||@
  Comment 3377 950 r9|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 3380 952 r11|DWORD = MOVE input: int[-363787|0xfffffffffffa72f5]  <||@
  Comment 3386 954 JUMP ~[] destination: B102 -> B168  <||@
  Comment 3391 block B62 null  <||@
  Comment 3391 620 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3391 622 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3396 624 JUMP ~[] destination: B62 -> B63  <||@
  Comment 3396 block B63 null  <||@
  Comment 3396 626 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3396 628 MOV [r15|QWORD + 668] y: -344355 size: DWORD  <||@
  Comment 3407 630 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3414 632 DEOPT info [bci:55, 1, 1, 22]  <||@
  Comment 3414 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3419 [rax:0, r10:0, stack:48]at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 55, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |r10|QWORD[.]  |             
     stack:   |r10|QWORD[.]  |rax|QWORD[.] 
  at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |r10|QWORD[.]  |- 
  at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22, duringCall: true, rethrow: false]
              |0  |1                  |2             |3 
     locals:  |-  |stack:32|QWORD[.]  |r10|QWORD[.]  |-   <||@
  Comment 3420 block B153 null  <||@
  Comment 3420 1430 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3420 1432 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3425 1434 JUMP ~[] destination: B153 -> B154  <||@
  Comment 3425 block B154 null  <||@
  Comment 3425 1436 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3425 1438 r11|DWORD = MOVE input: int[-391451|0xfffffffffffa06e5]  <||@
  Comment 3431 1446 JUMP ~[] destination: B154 -> B157  <||@
  Comment 3436 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 3436 4  <||@
  Comment 3442 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 3442 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-9407[java.lang.Iterable.forEach(Consumer)]"
  method "HotSpotCompilation-9407[java.lang.Iterable.forEach(Consumer)]"
  date 1527005201912
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 107b5cec0 448b560849c1e203493bc20f858f8fcafe900f1f80000000000f1f800000000089842400c0feff4883ec4848896c244048895424308502448b56084181fa855b04f80f85f9090000448b560c438504d449c1e2034889742428498bf248b8ffffffffffffffff90e8b493cafe904c8be8498b7760488d5618493b57700f874c0a0000498957600f1886d80000004c8b742428488bd649bab0ed22c0070000004d8b92a80000004c8916c74608b65d04f84489660c49c1ed0344896e10458b5610448956144c8bd24c89542428458b5a0844895c242449b800e01b170100000049b9c0af0cc0070000000f1f80000000004181fbb65d04f80f85c9020000418b720ce9ef00000066660f1f840000000000833cf50c000000000f8c42000000418b4a14418504cc48c1e1038bde48c1e303488bf1488bd348b8ffffffffffffffff0f1f8000000000e8d492cafe9085c00f85300200004c8b542428660f1f440000418b7210418504f448c1e60348b8ffffffffffffffff90e8a492cafe9085c00f847d0000004c8b542428418b7210418504f448c1e60348b8ffffffffffffffff0f1f8000000000e87492cafe904885c049b9c0af0cc0070000000f84110000008b70084c3b0cf5300000000f857f0a000049b800e01b17010000004c8b54242848c1e8034189420c498bf248c1ee09468824068bf085f60f8463ffffffe90effffff49b9c0af0cc00700000049b800e01b17010000004c8b542428418b720c85f60f8450010000833cf50c000000000f8ce307000048c1e603488bd6418b7214418504f448c1e60348b8ffffffffffffffff0f1f440000e8c491cafe9085c04c8b5424280f84b4070000418b720c48c1e603488b5424304885f60f84850700004c8b542428488bd6e9dc000000666690837a0c000f8c36000000418b7214418504f448c1e60348b8ffffffffffffffff0f1f8000000000e86491cafe9085c00f85590300004c8b542428660f1f440000418b7210418504f448c1e60348b8ffffffffffffffff90e83491cafe9085c00f847b0200004c8b542428418b721085f60f840d09000048c1e60348b8ffffffffffffffff666690e80491cafe904885c049b9c0af0cc0070000000f84110000008b70084c3b0cf5300000000f85fe09000049b800e01b17010000004c8b542428488bf048c1ee034189720c498bf248c1ee0946882406488bd04885d20f845effffffe919ffffff48c1e603488b542430e9f2feffff49b9c0af0cc00700000049b800e01b17010000004c8b542428458b5a0c4585db0f846202000042833cdd0c000000000f8c0b07000049c1e303498bd3e976feffff817c242496e603f80f8519090000418b721485f60f8425060000498bf248b8ffffffffffffffff6690e82c90cafe90488b542430817a0885c105f80f859b030000488bf04c8b54242848897424184885f60f840d000000817e0813a803f80f85d40700004885f60f84aa080000488b542430448b520c44895424144585d20f8473080000428b0cd51c00000085c90f84de070000448b1ccd0c000000448b460c458bc841c1f906453bd90f860f0700008bd948c1e30348c7c701000000418bc848d3e74a0b7ccb104a897ccb10448b4e448b7e5085ff0f84f20200008b04fd1c00000085c00f84710800008b2cfd1000000083fd010f8c210000008b0cc50c0000004c63ed49ffcd448bf14d3bf50f86ca06000085c90f84c2060000448b04fd0c00000041bd00000000e9710000006666660f1f8400000000008bc848c1e103428b4ca91085c90f841f00000049bec0532ec0070000008b34cd080000004c3b34f5400000000f855307000085c90f84730700008b0ccd0c0000008bf1c1fe06443bde0f861706000049c7c60100000049d3e64c0b74f3104c8974f31041ffc5413bed7f95e9d800000049b9c0af0cc00700000049b800e01b17010000004c8b542428418b720c85f60f84b3060000833cf50c000000000f8c81040000418b521485d20f84e606000048c1e203448bde49c1e303488bf2498bd348b8ffffffffffffffff0f1f440000e84c8ecafe9085c04c8b5424280f84d5040000418b720c85f60f8429050000488b5424304589620c48c1e603817a0885c105f80f8407feffffe907020000488b54243049c1e303498bf3e959fcffff49b9c0af0cc00700000049b800e01b17010000004c8b542428418b720c85f60f8552ffffffe9250600004585c90f84dd010000468b2ccd0c000000418bf5c1fe06443bde0f869d06000044894c241049c7c301000000418bcd49d3e34c0b5cf3104c895cf310468b34cd500000004585f60f84ae010000498b77604c8d5e184d3b5f700f87df0200004d895f600f1886d80000004c8bde4c895c240849b8304d21c0070000004d8b80a80000004c8906c74608a62904f8468b04f50c0000004489460c4489661044897614e98c0000006690498bf30f1f4000e8e48acafe904885c00f841b00000048b9c0532ec0070000008b7008483b0cf5400000000f85e50400004885c00f84a3050000448b542414428b0cd51c00000085c90f84910400008b34cd0c0000008b500c448bda41c1fb06413bf30f86030600008bf148c1e60349c7c0010000008bca49d3e04e0b44de104e8944de104c8b5c2408418b73148b34f510000000413b73100f8f61ffffffe9200100004585c90f847c000000e9affeffff4c8bd84c8b542428817a0885c604f80f857d0100004d85db0f841c00000049b9c0af0cc007000000418b73084c3b0cf5300000000f85510400008b720c85f60f846003000048c1e603498bd348b8ffffffffffffffff0f1f8000000000e81c8ccafe90448b5c24244c8b542428e9dcf8ffff4c8bdeeb9185052719d3fc448b5c24244c8b542428e9c2f8ffff85051219d3fc448b5c24244c8b542428e9adf8ffff468b34cd440000004585f60f8408010000498b7760488d5610493b57700f8751010000498957600f1886d000000048ba28142ec0070000004c8bde488b92a8000000488916c7460885c205f84489560c49c1e603498bf6498bd36690e83c89cafe90448b5c24244c8b542428e93cf8ffff448b4c2410448b542414468b2ccd440000004585ed0f84a2000000498b7760488d5610493b57700f87fd000000498957600f1886d000000048ba28142ec0070000004c8bde488b92a8000000488916c7460885c205f84489560c49c1e503498bf5498bd30f1f8000000000e8bc88cafe90448b5c24244c8b542428e9bcf7ffff488bf2498bd348b8ffffffffffffffff666690e8d48acafe90448b5c24244c8b542428e994f7ffff8505e417d3fc448b5c24244c8b542428e97ff7ffff8505cf17d3fc448b5c24244c8b542428e96af7ffff48be680b00c007000000ba02000000b901000000e8819543ff90488bf0448b4c2410448b542414488b542430e9fbfcffff48be680b00c007000000ba00000000b901000000e8509543ff90488bf0448b542414e993feffff48be680b00c007000000ba00000000b901000000e8299543ff90488bf0448b542414e9e7feffff488b6c24404883c44885053217d3fcc5f877c34589620cebe74589620cebe14589620cbe449ffbff4189b79c0200004d89a7a8020000e8fe9ccafe904c8bf64181fae9e503f80f85de000000498b77604c8d56184d3b57700f87920000004d8957600f1886d80000004c8bd649bbb0341fc0070000004d8b9ba80000004c891ec7460896e603f8c7460cffffffff458b5e0c44895e1044896614498bf24c89542428e83487cafe904c8b542428e910f6ffff4589620cbe44ecfbffe968ffffff4589620ce937ffffff4c8b74242848be680b00c007000000ba02000000b901000000e8349443ff90488bf0e99df5ffff48be680b00c007000000ba02000000b901000000e8129443ff90488bf0e957ffffff41c7879c02000044aefaff4d89a7a8020000e8109ccafe9041c7879c020000cde3f9ff4d89a7a8020000e8f89bcafe9041b8f5f1f9ff4c8b5424284589879c0200004d89a7a8020000e8d99bcafe904c8b54242841bbe552faff45899f9c0200004d89a7a8020000e8ba9bcafe9041bbe589faff4c8b54242845899f9c0200004d89a7a8020000e89b9bcafe904c8b54242849bbd818e7ba070000004d8bcb41bbe56dfaff45899f9c0200004d898fa8020000e86f9bcafe904c8b54242841bbf514faff488b4c2408448b4c2410448b44241445899f9c0200004d89a7a8020000e8419bcafe9041bbdda2faffeb8a4c8b54242841bbdd1bfaffebc841bbf5c4faff45899f9c0200004d89a7a8020000e8129bcafe9041b8ddf3f9ffe91affffff41bbf598faff4c8b542428e948ffffff41bb4477fbffebc94c8b54242841c7879c020000dde5faff4d89a7a8020000e8d29acafe9041c7879c0200004476fbff4d89a7a8020000e8ba9acafe904c8b54242841bbdd61faffe9dcfeffff41c7879c020000f5b4faff4d89a7a8020000e8929acafe904c8b54242841bbf560faffe9b4feffff41bbf5a0faff4c8b542428e9c3feffff4c8b54242841bbf51afaffe9fefeffff41bbf5a1faff4c8b542428e9a3feffff41c7879c020000cdacfaff4d89a7a8020000e83a9acafe904c8b54242841c7879c020000e53bfaff4d89a7a8020000e81d9acafe904c8b54242849bba818e7ba070000004d8bcb41bbf572faffe97dfeffff4c8b54242841c7879c020000ddbefaff4d89a7a8020000e8e399cafe904c8b54242841bbe506faffe96ffeffffe8efc90eff90e8c998cafe90f4f4f4f4f4f4f4f448bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbfffffff4f4f4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@11aa1906 slotKind: QWORD  <||@
  Comment 48 6 stack:32|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 53 8 NULLCHECK [rdx|QWORD[.]] state [bci:0]  <||@
  Comment 53 [rdx:0, rsi:0, stack:48]at java.lang.Iterable.forEach(Iterable.java:73) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-   <||@
  Comment 53 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 55 10 r10|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD  <||@
  Comment 59 12 CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/iterators/FilteredNodeIterable;, resolved>;compressed}  <||@
  Comment 59 {meta{HotSpotType<Lorg/graalvm/compiler/graph/iterators/FilteredNodeIterable;, resolved>;compressed}}  <||@
  Comment 66 14 BRANCH trueDestinationProbability: 0.9129709784999646 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B5  <||@
  Comment 72 block B1 null  <||@
  Comment 72 16 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 72 18 r10|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 76 20 NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:0]  <||@
  Comment 76 [rsi:0, r10:0, stack:48]at java.lang.Iterable.forEach(Iterable.java:73) [bci: 0, duringCall: false, rethrow: false]
              |0             |1                  |2  |3 
     locals:  |rsi|QWORD[.]  |stack:32|QWORD[.]  |-  |-   <||@
  Comment 76 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 80 22 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3  <||@
  Comment 84 24 stack:40|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 89 26 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 92 28 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<NodeIterable.iterator()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:8, 6]  <||@
  Comment 92 6  <||@
  Comment 103 {HotSpotMethod<NodeIterable.iterator()>}  <||@
  Comment 108 [stack:40, stack:48]at org.graalvm.compiler.graph.iterators.FilteredNodeIterable.iterator(FilteredNodeIterable.java:45) [bci: 8, duringCall: true, rethrow: false]
              |0                                                                                                         |1                                                                                                        
     locals:  |stack:40|QWORD[.]                                                                                         |                                                                                                         
     stack:   |vobject:PredicatedProxyNodeIterator:0{current=Object[null],iterator=Object[null],predicate=Object[null]}  |vobject:PredicatedProxyNodeIterator:0{current=Object[null],iterator=Object[null],predicate=Object[null]} 
  at java.lang.Iterable.forEach(Iterable.java:74) [bci: 6, duringCall: true, rethrow: false]
              |0  |1                  |2  |3 
     locals:  |-  |stack:32|QWORD[.]  |-  |-   <||@
  Comment 109 30 r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 112 32 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 116 34 rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD  <||@
  Comment 120 36 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 124 38 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3  <||@
  Comment 130 block B3 null  <||@
  Comment 130 56 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 130 58 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 134 60 AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0  <||@
  Comment 141 62 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 141 64 r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 146 66 JUMP ~[] destination: B3 -> B4  <||@
  Comment 146 block B4 null  <||@
  Comment 146 68 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 146 70 rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 149 72 r10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/compiler/graph/iterators/PredicatedProxyNodeIterator;, resolved>}  <||@
  Comment 149 {meta{HotSpotType<Lorg/graalvm/compiler/graph/iterators/PredicatedProxyNodeIterator;, resolved>}}  <||@
  Comment 159 74 r10|QWORD = MOV [r10|QWORD + 168] size: QWORD  <||@
  Comment 166 76 MOV (x: [rsi|QWORD[*]], y: r10|QWORD) size: QWORD  <||@
  Comment 169 78 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/iterators/PredicatedProxyNodeIterator;, resolved>;compressed}  <||@
  Comment 169 {meta{HotSpotType<Lorg/graalvm/compiler/graph/iterators/PredicatedProxyNodeIterator;, resolved>;compressed}}  <||@
  Comment 176 80 MOV (x: [rsi|QWORD[*] + 12], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 180 82 r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3  <||@
  Comment 184 84 MOV (x: [rsi|QWORD[*] + 16], y: r13|DWORD[.]) size: DWORD  <||@
  Comment 188 86 r10|DWORD[.] = MOV [r14|QWORD[.] + 16] size: DWORD  <||@
  Comment 192 88 MOV (x: [rsi|QWORD[*] + 20], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 196 90 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 199 92 JUMP ~[] destination: B4 -> B10  <||@
  Comment 199 block B10 null  <||@
  Comment 199 166 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 199 168 stack:40|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 204 170 r11|DWORD = MOV [r10|QWORD[.] + 8] size: DWORD  <||@
  Comment 208 172 stack:44|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 213 174 r8|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 223 176 r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/compiler/graph/Node;, resolved>}  <||@
  Comment 223 {meta{HotSpotType<Lorg/graalvm/compiler/graph/Node;, resolved>}}  <||@
  Comment 233 178 JUMP ~[] destination: B10 -> B11  <||@
  Comment 233 block B11 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 233 180 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 240 182 CMP r11|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/iterators/PredicatedProxyNodeIterator;, resolved>;compressed}  <||@
  Comment 240 {meta{HotSpotType<Lorg/graalvm/compiler/graph/iterators/PredicatedProxyNodeIterator;, resolved>;compressed}}  <||@
  Comment 247 184 BRANCH trueDestinationProbability: 0.8217776767447147 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B79  <||@
  Comment 253 block B12 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 253 186 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 253 188 rsi|DWORD[.] = MOV [r10|QWORD[.] + 12] size: DWORD  <||@
  Comment 257 190 JUMP ~[] destination: B12 -> B13  <||@
  Comment 262 block B15 loop 1 depth 2 outer 0 header:167|LoopBegin  <||@
  Comment 262 202 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 272 204 CMP [rsi|DWORD[.] * 8 + 12] y: 0 size: DWORD  <||@
  Comment 280 206 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B15 -> B19 falseDestination: B15 -> B17  <||@
  Comment 286 block B17 loop 1 depth 2 outer 0 header:167|LoopBegin  <||@
  Comment 286 212 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 286 214 rcx|DWORD[.] = MOV [r10|QWORD[.] + 20] size: DWORD  <||@
  Comment 290 216 NULLCHECK [r12|QWORD[*] + rcx|DWORD[.] * 8] state [bci:0, 1, 13]  <||@
  Comment 290 [rcx:0, rsi:0, r10:0, stack:40, stack:48]at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |r10|QWORD[.] 
  at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1, duringCall: true, rethrow: false]
              |0            
     locals:  |r10|QWORD[.] 
  at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13, duringCall: true, rethrow: false]
              |0  |1                  |2             |3 
     locals:  |-  |stack:32|QWORD[.]  |r10|QWORD[.]  |-   <||@
  Comment 290 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 294 218 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3  <||@
  Comment 298 220 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3  <||@
  Comment 304 222 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 307 224 rdx|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 310 226 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<NodePredicate.apply(Node)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:25, 1, 13]  <||@
  Comment 310 6  <||@
  Comment 327 {HotSpotMethod<NodePredicate.apply(Node)>}  <||@
  Comment 332 [stack:40, stack:48]at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 25, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.] 
  at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.] 
  at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13, duringCall: true, rethrow: false]
              |0  |1                  |2                  |3 
     locals:  |-  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-   <||@
  Comment 333 228 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 335 230 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B32  <||@
  Comment 341 block B18 loop 1 depth 2 outer 0 header:167|LoopBegin  <||@
  Comment 341 232 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 341 234 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 346 236 JUMP ~[] destination: B18 -> B19  <||@
  Comment 346 block B19 loop 1 depth 2 outer 0 header:167|LoopBegin  <||@
  Comment 346 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 352 240 rsi|DWORD[.] = MOV [r10|QWORD[.] + 16] size: DWORD  <||@
  Comment 356 242 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:33, 1, 13]  <||@
  Comment 356 [rsi:0, r10:0, stack:40, stack:48]at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 33, duringCall: false, rethrow: false]
              |0            
     locals:  |r10|QWORD[.] 
  at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1, duringCall: true, rethrow: false]
              |0            
     locals:  |r10|QWORD[.] 
  at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13, duringCall: true, rethrow: false]
              |0  |1                  |2             |3 
     locals:  |-  |stack:32|QWORD[.]  |r10|QWORD[.]  |-   <||@
  Comment 356 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 360 244 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3  <||@
  Comment 364 246 rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Iterator.hasNext()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:37, 1, 13]  <||@
  Comment 364 6  <||@
  Comment 375 {HotSpotMethod<Iterator.hasNext()>}  <||@
  Comment 380 [stack:40, stack:48]at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 37, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.] 
  at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.] 
  at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13, duringCall: true, rethrow: false]
              |0  |1                  |2                  |3 
     locals:  |-  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-   <||@
  Comment 381 248 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 383 250 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B25  <||@
  Comment 389 block B25 loop 1 depth 2 outer 0 header:167|LoopBegin  <||@
  Comment 389 294 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 389 296 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 394 298 rsi|DWORD[.] = MOV [r10|QWORD[.] + 16] size: DWORD  <||@
  Comment 398 300 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:42, 1, 13]  <||@
  Comment 398 [rsi:0, r10:0, stack:40, stack:48]at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 42, duringCall: false, rethrow: false]
              |0            
     locals:  |r10|QWORD[.] 
     stack:   |rax|DWORD    
  at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1, duringCall: true, rethrow: false]
              |0            
     locals:  |r10|QWORD[.] 
  at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13, duringCall: true, rethrow: false]
              |0  |1                  |2             |3 
     locals:  |-  |stack:32|QWORD[.]  |r10|QWORD[.]  |-   <||@
  Comment 398 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 402 302 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3  <||@
  Comment 406 304 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Iterator.next()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:50, 1, 13]  <||@
  Comment 406 6  <||@
  Comment 423 {HotSpotMethod<Iterator.next()>}  <||@
  Comment 428 [stack:40, stack:48]at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 50, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.] 
     stack:   |stack:40|QWORD[.] 
  at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.] 
  at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13, duringCall: true, rethrow: false]
              |0  |1                  |2                  |3 
     locals:  |-  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-   <||@
  Comment 429 306 TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD  <||@
  Comment 432 312 r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/compiler/graph/Node;, resolved>}  <||@
  Comment 432 {meta{HotSpotType<Lorg/graalvm/compiler/graph/Node;, resolved>}}  <||@
  Comment 442 308 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B25 -> B29 falseDestination: B25 -> B27  <||@
  Comment 448 block B27 loop 1 depth 2 outer 0 header:167|LoopBegin  <||@
  Comment 448 320 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 448 324 rsi|DWORD = MOV [rax|QWORD[.] + 8] size: DWORD  <||@
  Comment 451 326 CMP (x: r9|QWORD, y: [rsi|DWORD * 8 + 48]) size: QWORD  <||@
  Comment 459 328 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B27 -> B29 falseDestination: B27 -> B30  <||@
  Comment 465 block B29 loop 1 depth 2 outer 0 header:167|LoopBegin  <||@
  Comment 465 338 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 465 314 r8|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 475 316 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 480 340 rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3  <||@
  Comment 484 342 MOV (x: [r10|QWORD[.] + 12], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 488 344 rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD  <||@
  Comment 495 346 MOVB (x: [rsi|QWORD[*] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 499 348 rsi|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD  <||@
  Comment 501 350 JUMP ~[] destination: B29 -> B13  <||@
  Comment 501 block B13 loop 1 depth 2 outer 0 header:167|LoopBegin  <||@
  Comment 501 192 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 501 194 TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 503 196 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B13 -> B19 falseDestination: B13 -> B15  <||@
  Comment 514 block B20 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 514 252 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 514 254 r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/compiler/graph/Node;, resolved>}  <||@
  Comment 514 {meta{HotSpotType<Lorg/graalvm/compiler/graph/Node;, resolved>}}  <||@
  Comment 524 256 r8|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 534 258 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 539 260 rsi|DWORD[.] = MOV [r10|QWORD[.] + 12] size: DWORD  <||@
  Comment 543 262 TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 545 264 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22  <||@
  Comment 551 block B22 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 551 274 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 551 276 CMP [rsi|DWORD[.] * 8 + 12] y: 0 size: DWORD  <||@
  Comment 559 278 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B22 -> B23 falseDestination: B22 -> B24  <||@
  Comment 565 block B24 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 565 286 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 565 288 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3  <||@
  Comment 569 290 rdx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 572 292 JUMP ~[] destination: B24 -> B37  <||@
  Comment 572 block B37 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 572 410 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 572 412 rsi|DWORD[.] = MOV [r10|QWORD[.] + 20] size: DWORD  <||@
  Comment 576 414 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:64, 1, 13]  <||@
  Comment 576 [rdx:0, rsi:0, r10:0, stack:40, stack:48]at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 64, duringCall: false, rethrow: false]
              |0            
     locals:  |r10|QWORD[.] 
  at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1, duringCall: true, rethrow: false]
              |0            
     locals:  |r10|QWORD[.] 
  at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13, duringCall: true, rethrow: false]
              |0  |1                  |2             |3 
     locals:  |-  |stack:32|QWORD[.]  |r10|QWORD[.]  |-   <||@
  Comment 576 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 580 416 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3  <||@
  Comment 584 418 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<NodePredicate.apply(Node)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:89, 1, 13]  <||@
  Comment 584 6  <||@
  Comment 599 {HotSpotMethod<NodePredicate.apply(Node)>}  <||@
  Comment 604 [stack:40, stack:48]at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 89, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.] 
  at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.] 
  at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13, duringCall: true, rethrow: false]
              |0  |1                  |2                  |3 
     locals:  |-  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-   <||@
  Comment 605 420 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 607 426 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 612 422 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39  <||@
  Comment 618 block B39 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 618 432 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 618 436 rsi|DWORD[.] = MOV [r10|QWORD[.] + 12] size: DWORD  <||@
  Comment 622 438 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3  <||@
  Comment 626 440 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 631 442 JUMP ~[] destination: B39 -> B40  <||@
  Comment 631 block B40 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 631 444 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 631 446 TEST (x: rsi|QWORD[.], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 634 448 BRANCH trueDestinationProbability: 0.610225267647409 condition: = trueDestination: B40 -> B83 falseDestination: B40 -> B42  <||@
  Comment 640 block B42 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 640 454 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 640 456 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 645 458 rdx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 648 460 JUMP ~[] destination: B42 -> B43  <||@
  Comment 653 block B45 loop 2 depth 2 outer 0 header:435|LoopBegin  <||@
  Comment 653 472 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 656 474 CMP [rdx|QWORD[.] + 12] y: 0 size: DWORD  <||@
  Comment 660 476 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B45 -> B49 falseDestination: B45 -> B47  <||@
  Comment 666 block B47 loop 2 depth 2 outer 0 header:435|LoopBegin  <||@
  Comment 666 482 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 666 484 rsi|DWORD[.] = MOV [r10|QWORD[.] + 20] size: DWORD  <||@
  Comment 670 486 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:0, 1, 1, 22]  <||@
  Comment 670 [rdx:0, rsi:0, r10:0, stack:40, stack:48]at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |r10|QWORD[.] 
  at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |r10|QWORD[.]  |- 
  at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22, duringCall: true, rethrow: false]
              |0  |1                  |2             |3 
     locals:  |-  |stack:32|QWORD[.]  |r10|QWORD[.]  |-   <||@
  Comment 670 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 674 488 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3  <||@
  Comment 678 490 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<NodePredicate.apply(Node)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:25, 1, 1, 22]  <||@
  Comment 678 6  <||@
  Comment 695 {HotSpotMethod<NodePredicate.apply(Node)>}  <||@
  Comment 700 [stack:40, stack:48]at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 25, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.] 
  at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:40|QWORD[.]  |- 
  at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22, duringCall: true, rethrow: false]
              |0  |1                  |2                  |3 
     locals:  |-  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-   <||@
  Comment 701 492 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 703 494 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B64  <||@
  Comment 709 block B48 loop 2 depth 2 outer 0 header:435|LoopBegin  <||@
  Comment 709 496 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 709 498 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 714 500 JUMP ~[] destination: B48 -> B49  <||@
  Comment 714 block B49 loop 2 depth 2 outer 0 header:435|LoopBegin  <||@
  Comment 714 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 720 504 rsi|DWORD[.] = MOV [r10|QWORD[.] + 16] size: DWORD  <||@
  Comment 724 506 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:33, 1, 1, 22]  <||@
  Comment 724 [rsi:0, r10:0, stack:40, stack:48]at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 33, duringCall: false, rethrow: false]
              |0            
     locals:  |r10|QWORD[.] 
  at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |r10|QWORD[.]  |- 
  at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22, duringCall: true, rethrow: false]
              |0  |1                  |2             |3 
     locals:  |-  |stack:32|QWORD[.]  |r10|QWORD[.]  |-   <||@
  Comment 724 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 728 508 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3  <||@
  Comment 732 510 rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Iterator.hasNext()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:37, 1, 1, 22]  <||@
  Comment 732 6  <||@
  Comment 743 {HotSpotMethod<Iterator.hasNext()>}  <||@
  Comment 748 [stack:40, stack:48]at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 37, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.] 
  at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:40|QWORD[.]  |- 
  at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22, duringCall: true, rethrow: false]
              |0  |1                  |2                  |3 
     locals:  |-  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-   <||@
  Comment 749 512 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 751 514 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B53  <||@
  Comment 757 block B53 loop 2 depth 2 outer 0 header:435|LoopBegin  <||@
  Comment 757 540 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 757 542 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 762 544 rsi|DWORD[.] = MOV [r10|QWORD[.] + 16] size: DWORD  <||@
  Comment 766 546 TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 768 548 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B53 -> B55 falseDestination: B53 -> B57  <||@
  Comment 774 block B57 loop 2 depth 2 outer 0 header:435|LoopBegin  <||@
  Comment 774 568 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 774 570 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3  <||@
  Comment 778 572 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Iterator.next()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:50, 1, 1, 22]  <||@
  Comment 778 6  <||@
  Comment 791 {HotSpotMethod<Iterator.next()>}  <||@
  Comment 796 [stack:40, stack:48]at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 50, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.] 
     stack:   |stack:40|QWORD[.] 
  at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:40|QWORD[.]  |- 
  at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22, duringCall: true, rethrow: false]
              |0  |1                  |2                  |3 
     locals:  |-  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-   <||@
  Comment 797 574 TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD  <||@
  Comment 800 580 r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/compiler/graph/Node;, resolved>}  <||@
  Comment 800 {meta{HotSpotType<Lorg/graalvm/compiler/graph/Node;, resolved>}}  <||@
  Comment 810 576 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B61 falseDestination: B57 -> B59  <||@
  Comment 816 block B59 loop 2 depth 2 outer 0 header:435|LoopBegin  <||@
  Comment 816 588 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 816 592 rsi|DWORD = MOV [rax|QWORD[.] + 8] size: DWORD  <||@
  Comment 819 594 CMP (x: r9|QWORD, y: [rsi|DWORD * 8 + 48]) size: QWORD  <||@
  Comment 827 596 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B59 -> B61 falseDestination: B59 -> B62  <||@
  Comment 833 block B61 loop 2 depth 2 outer 0 header:435|LoopBegin  <||@
  Comment 833 606 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 833 582 r8|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 843 584 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 848 608 rsi|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3  <||@
  Comment 855 610 MOV (x: [r10|QWORD[.] + 12], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 859 612 rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD  <||@
  Comment 866 614 MOVB (x: [rsi|QWORD[*] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 870 616 rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 873 618 JUMP ~[] destination: B61 -> B43  <||@
  Comment 873 block B43 loop 2 depth 2 outer 0 header:435|LoopBegin  <||@
  Comment 873 462 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 873 464 TEST (x: rdx|QWORD[.], y: rdx|QWORD[.]) size: QWORD  <||@
  Comment 876 466 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B43 -> B49 falseDestination: B43 -> B45  <||@
  Comment 887 block B21 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 887 266 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 887 268 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3  <||@
  Comment 891 270 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 896 272 JUMP ~[] destination: B21 -> B40  <||@
  Comment 901 block B32 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 901 366 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 901 368 r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/compiler/graph/Node;, resolved>}  <||@
  Comment 901 {meta{HotSpotType<Lorg/graalvm/compiler/graph/Node;, resolved>}}  <||@
  Comment 911 370 r8|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 921 372 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 926 374 r11|DWORD[.] = MOV [r10|QWORD[.] + 12] size: DWORD  <||@
  Comment 930 376 TEST (x: r11|DWORD[.], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 933 378 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34  <||@
  Comment 939 block B34 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 939 390 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 939 392 CMP [r11|DWORD[.] * 8 + 12] y: 0 size: DWORD  <||@
  Comment 948 394 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B36  <||@
  Comment 954 block B36 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 954 402 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 954 404 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3  <||@
  Comment 958 406 rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 961 408 JUMP ~[] destination: B36 -> B37  <||@
  Comment 966 block B79 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 966 764 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 966 766 CMP stack:44|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeUsageIterator;, resolved>;compressed}  <||@
  Comment 966 {meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeUsageIterator;, resolved>;compressed}}  <||@
  Comment 974 768 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B184  <||@
  Comment 980 block B80 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 980 770 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 980 772 rsi|DWORD[.] = MOV [r10|QWORD[.] + 20] size: DWORD  <||@
  Comment 984 774 TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 986 776 BRANCH trueDestinationProbability: 0.610225267647409 condition: = trueDestination: B80 -> B83 falseDestination: B80 -> B84  <||@
  Comment 992 block B84 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 992 790 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 992 792 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 995 794 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Iterator.next()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:22]  <||@
  Comment 995 6  <||@
  Comment 1007 {HotSpotMethod<Iterator.next()>}  <||@
  Comment 1012 [stack:40, stack:48]at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22, duringCall: true, rethrow: false]
              |0  |1                  |2                  |3 
     locals:  |-  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-   <||@
  Comment 1013 796 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1018 798 CMP [rdx|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$90/1190971543;, resolved>;compressed}  <||@
  Comment 1018 {meta{HotSpotType<Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$90/1190971543;, resolved>;compressed}}  <||@
  Comment 1025 800 BRANCH trueDestinationProbability: 0.5456716749520927 condition: = trueDestination: B84 -> B85 falseDestination: B84 -> B172  <||@
  Comment 1031 block B85 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 1031 802 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1031 804 rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1034 806 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1039 808 JUMP ~[] destination: B85 -> B86  <||@
  Comment 1039 block B86 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 1039 810 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1039 812 stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1044 814 TEST (x: rsi|QWORD[.], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 1047 816 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B86 -> B90 falseDestination: B86 -> B88  <||@
  Comment 1053 block B88 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 1053 822 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1053 824 CMP [rsi|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/nodes/FrameState;, resolved>;compressed}  <||@
  Comment 1053 {meta{HotSpotType<Lorg/graalvm/compiler/nodes/FrameState;, resolved>;compressed}}  <||@
  Comment 1060 826 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B88 -> B90 falseDestination: B88 -> B170  <||@
  Comment 1066 block B90 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 1066 832 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1066 834 TEST (x: rsi|QWORD[.], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 1069 836 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B90 -> B91 falseDestination: B90 -> B92  <||@
  Comment 1075 block B92 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 1075 846 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1075 848 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1080 850 r10|DWORD[.] = MOV [rdx|QWORD[.] + 12] size: DWORD  <||@
  Comment 1084 852 stack:60|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 1089 854 TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 1092 856 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B92 -> B93 falseDestination: B92 -> B94  <||@
  Comment 1098 block B94 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 1098 866 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1098 868 rcx|DWORD[.] = MOV [r10|DWORD[.] * 8 + 28] size: DWORD  <||@
  Comment 1106 870 TEST (x: rcx|DWORD[.], y: rcx|DWORD[.]) size: DWORD  <||@
  Comment 1108 872 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B94 -> B95 falseDestination: B94 -> B96  <||@
  Comment 1114 block B96 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 1114 882 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1114 884 r11|DWORD = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 1122 886 r8|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 1126 888 r9|DWORD = SAR r8|DWORD y: 6 size: DWORD  <||@
  Comment 1133 890 CMP (x: r11|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 1136 892 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B96 -> B97 falseDestination: B96 -> B169  <||@
  Comment 1142 block B97 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 1142 894 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1142 896 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3  <||@
  Comment 1148 898 rdi|QWORD = MOVE input: long[1|0x1]  <||@
  Comment 1155 900 rcx|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1158 902 rdi|QWORD = SHL (x: rdi|QWORD, ~y: rcx|DWORD) size: QWORD  <||@
  Comment 1161 904 rdi|QWORD = OR (x: rdi|QWORD, ~y: [rbx|QWORD[.] + r9|DWORD * 8 + 16]) size: QWORD  <||@
  Comment 1166 906 MOV (x: [rbx|QWORD[.] + r9|DWORD * 8 + 16], y: rdi|QWORD) size: QWORD  <||@
  Comment 1171 908 r9|DWORD[.] = MOV [rsi|QWORD[.] + 68] size: DWORD  <||@
  Comment 1175 910 rdi|DWORD[.] = MOV [rsi|QWORD[.] + 80] size: DWORD  <||@
  Comment 1178 912 TEST (x: rdi|DWORD[.], y: rdi|DWORD[.]) size: DWORD  <||@
  Comment 1180 914 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B97 -> B98 falseDestination: B97 -> B101  <||@
  Comment 1186 block B101 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 1186 936 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1186 938 rax|DWORD[.] = MOV [rdi|DWORD[.] * 8 + 28] size: DWORD  <||@
  Comment 1193 940 TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 1195 942 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103  <||@
  Comment 1201 block B103 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 1201 956 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1201 958 rbp|DWORD = MOV [rdi|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1208 960 CMP rbp|DWORD y: 1 size: DWORD  <||@
  Comment 1211 962 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B103 -> B109 falseDestination: B103 -> B105  <||@
  Comment 1217 block B105 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 1217 968 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1217 970 rcx|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 1224 972 r13|QWORD = MOVSXD rbp|DWORD size: QWORD  <||@
  Comment 1227 974 r13|QWORD = DEC r13|QWORD size: QWORD  <||@
  Comment 1230 976 r14|QWORD = MOV rcx|DWORD size: DWORD  <||@
  Comment 1233 978 CMP (x: r14|QWORD, y: r13|QWORD) size: QWORD  <||@
  Comment 1236 980 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B105 -> B106 falseDestination: B105 -> B166  <||@
  Comment 1242 block B106 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 1242 982 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1242 984 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 1244 986 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B106 -> B166 falseDestination: B106 -> B109  <||@
  Comment 1250 block B109 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 1250 998 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1250 1000 r8|DWORD = MOV [rdi|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 1258 1002 r13|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1264 1004 JUMP ~[] destination: B109 -> B110  <||@
  Comment 1269 block B111 loop 3 depth 2 outer 0 header:353|LoopBegin  <||@
  Comment 1269 1012 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1280 1014 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3  <||@
  Comment 1286 1016 rcx|DWORD[.] = MOV [rcx|QWORD[.] + r13|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1291 1018 TEST (x: rcx|DWORD[.], y: rcx|DWORD[.]) size: DWORD  <||@
  Comment 1293 1020 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B111 -> B115 falseDestination: B111 -> B113  <||@
  Comment 1299 block B113 loop 3 depth 2 outer 0 header:353|LoopBegin  <||@
  Comment 1299 1026 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1299 1028 r14|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/compiler/nodes/virtual/EscapeObjectState;, resolved>}  <||@
  Comment 1299 {meta{HotSpotType<Lorg/graalvm/compiler/nodes/virtual/EscapeObjectState;, resolved>}}  <||@
  Comment 1309 1030 rsi|DWORD = MOV [rcx|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 1316 1032 CMP (x: r14|QWORD, y: [rsi|DWORD * 8 + 64]) size: QWORD  <||@
  Comment 1324 1034 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B113 -> B115 falseDestination: B113 -> B122  <||@
  Comment 1330 block B115 loop 3 depth 2 outer 0 header:353|LoopBegin  <||@
  Comment 1330 1040 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1330 1042 TEST (x: rcx|DWORD[.], y: rcx|DWORD[.]) size: DWORD  <||@
  Comment 1332 1044 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B115 -> B116 falseDestination: B115 -> B118  <||@
  Comment 1338 block B118 loop 3 depth 2 outer 0 header:353|LoopBegin  <||@
  Comment 1338 1058 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1338 1060 rcx|DWORD = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 1345 1062 rsi|DWORD = SAR rcx|DWORD y: 6 size: DWORD  <||@
  Comment 1350 1064 CMP (x: r11|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 1353 1066 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B118 -> B119 falseDestination: B118 -> B120  <||@
  Comment 1359 block B119 loop 3 depth 2 outer 0 header:353|LoopBegin  <||@
  Comment 1359 1068 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1359 1070 r14|QWORD = MOVE input: long[1|0x1]  <||@
  Comment 1366 1072 r14|QWORD = SHL (x: r14|QWORD, ~y: rcx|DWORD) size: QWORD  <||@
  Comment 1369 1074 r14|QWORD = OR (x: r14|QWORD, ~y: [rbx|QWORD[.] + rsi|DWORD * 8 + 16]) size: QWORD  <||@
  Comment 1374 1076 MOV (x: [rbx|QWORD[.] + rsi|DWORD * 8 + 16], y: r14|QWORD) size: QWORD  <||@
  Comment 1379 1078 r13|DWORD = INC r13|DWORD size: DWORD  <||@
  Comment 1382 1080 JUMP ~[] destination: B119 -> B110  <||@
  Comment 1382 block B110 loop 3 depth 2 outer 0 header:353|LoopBegin  <||@
  Comment 1382 1006 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1382 1008 CMP (x: rbp|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 1385 1010 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B110 -> B111 falseDestination: B110 -> B125  <||@
  Comment 1392 block B50 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 1392 516 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1392 518 r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/compiler/graph/Node;, resolved>}  <||@
  Comment 1392 {meta{HotSpotType<Lorg/graalvm/compiler/graph/Node;, resolved>}}  <||@
  Comment 1402 520 r8|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 1412 522 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1417 524 rsi|DWORD[.] = MOV [r10|QWORD[.] + 12] size: DWORD  <||@
  Comment 1421 526 TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 1423 528 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B67  <||@
  Comment 1429 block B67 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 1429 660 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1429 662 CMP [rsi|DWORD[.] * 8 + 12] y: 0 size: DWORD state [bci:64, 1, 1, 22]  <||@
  Comment 1429 [rsi:0, r10:0, stack:40, stack:48]at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 64, duringCall: false, rethrow: false]
              |0            
     locals:  |r10|QWORD[.] 
  at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |r10|QWORD[.]  |- 
  at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22, duringCall: true, rethrow: false]
              |0  |1                  |2             |3 
     locals:  |-  |stack:32|QWORD[.]  |r10|QWORD[.]  |-   <||@
  Comment 1429 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1437 664 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B67 -> B68 falseDestination: B67 -> B69  <||@
  Comment 1443 block B69 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 1443 674 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1443 676 rdx|DWORD[.] = MOV [r10|QWORD[.] + 20] size: DWORD  <||@
  Comment 1447 678 TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 1449 680 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71  <||@
  Comment 1455 block B71 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 1455 690 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1455 692 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3  <||@
  Comment 1459 694 r11|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3  <||@
  Comment 1466 696 rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1469 698 rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1472 700 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<NodePredicate.apply(Node)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:89, 1, 1, 22]  <||@
  Comment 1472 6  <||@
  Comment 1487 {HotSpotMethod<NodePredicate.apply(Node)>}  <||@
  Comment 1492 [stack:40, stack:48]at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 89, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.] 
  at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:40|QWORD[.]  |- 
  at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22, duringCall: true, rethrow: false]
              |0  |1                  |2                  |3 
     locals:  |-  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-   <||@
  Comment 1493 702 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1495 708 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1500 704 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B74  <||@
  Comment 1506 block B74 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 1506 724 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1506 728 rsi|DWORD[.] = MOV [r10|QWORD[.] + 12] size: DWORD  <||@
  Comment 1510 730 TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 1512 732 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76  <||@
  Comment 1518 block B76 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 1518 742 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1518 744 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1523 746 MOV (x: [r10|QWORD[.] + 12], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 1527 748 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3  <||@
  Comment 1531 750 CMP [rdx|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$90/1190971543;, resolved>;compressed}  <||@
  Comment 1531 {meta{HotSpotType<Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$90/1190971543;, resolved>;compressed}}  <||@
  Comment 1538 752 BRANCH trueDestinationProbability: 0.5456716749520927 condition: = trueDestination: B76 -> B86 falseDestination: B76 -> B78  <||@
  Comment 1549 block B33 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 1549 380 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1549 382 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1554 384 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3  <||@
  Comment 1558 386 rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1561 388 JUMP ~[] destination: B33 -> B40  <||@
  Comment 1566 block B64 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 1566 634 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1566 636 r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/compiler/graph/Node;, resolved>}  <||@
  Comment 1566 {meta{HotSpotType<Lorg/graalvm/compiler/graph/Node;, resolved>}}  <||@
  Comment 1576 638 r8|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 1586 640 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1591 642 rsi|DWORD[.] = MOV [r10|QWORD[.] + 12] size: DWORD  <||@
  Comment 1595 644 TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 1597 646 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B67  <||@
  Comment 1608 block B125 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 1608 1114 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1608 1116 TEST (x: r9|DWORD[.], y: r9|DWORD[.]) size: DWORD  <||@
  Comment 1611 1118 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B125 -> B126 falseDestination: B125 -> B128  <||@
  Comment 1617 block B128 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 1617 1134 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1617 1136 r13|DWORD = MOV [r9|DWORD[.] * 8 + 12] size: DWORD state [bci:49, 7, 8, 30]  <||@
  Comment 1617 [rdx:0, rbx:0, r9:0, r10:0, stack:20, stack:24, stack:40, stack:48]at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:659) [bci: 49, duringCall: false, rethrow: false]
              |0                  |1                                         |2  |3 
     locals:  |stack:56|QWORD[.]  |vobject:1492729447:0{arg$1=r10|DWORD[.]}  |-  |- 
  at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30, duringCall: true, rethrow: false]
              |0  |1             |2                  |3 
     locals:  |-  |rdx|QWORD[.]  |stack:40|QWORD[.]  |-   <||@
  Comment 1617 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1625 1138 rsi|DWORD = SAR r13|DWORD y: 6 size: DWORD  <||@
  Comment 1631 1140 CMP (x: r11|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 1634 1142 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B128 -> B129 falseDestination: B128 -> B164  <||@
  Comment 1640 block B129 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 1640 1144 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1640 1146 stack:64|DWORD[.] = MOVE r9|DWORD[.] moveKind: DWORD  <||@
  Comment 1645 1148 r11|QWORD = MOVE input: long[1|0x1]  <||@
  Comment 1652 1150 rcx|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 1655 1152 r11|QWORD = SHL (x: r11|QWORD, ~y: rcx|DWORD) size: QWORD  <||@
  Comment 1658 1154 r11|QWORD = OR (x: r11|QWORD, ~y: [rbx|QWORD[.] + rsi|DWORD * 8 + 16]) size: QWORD  <||@
  Comment 1663 1156 MOV (x: [rbx|QWORD[.] + rsi|DWORD * 8 + 16], y: r11|QWORD) size: QWORD  <||@
  Comment 1668 1158 r14|DWORD[.] = MOV [r9|DWORD[.] * 8 + 80] size: DWORD  <||@
  Comment 1676 1160 TEST (x: r14|DWORD[.], y: r14|DWORD[.]) size: DWORD  <||@
  Comment 1679 1162 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B129 -> B130 falseDestination: B129 -> B136  <||@
  Comment 1685 block B136 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 1685 1246 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1685 1248 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 1689 1250 r11|QWORD = LEA [rsi|QWORD + 24] size: QWORD  <||@
  Comment 1693 1252 CMP (x: r11|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 1697 1254 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B136 -> B137 falseDestination: B136 -> B138  <||@
  Comment 1703 block B138 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 1703 1276 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1703 1278 MOV (x: [r15|QWORD + 96], y: r11|QWORD) size: QWORD  <||@
  Comment 1707 1280 AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0  <||@
  Comment 1714 1282 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1714 1284 JUMP ~[] destination: B138 -> B139  <||@
  Comment 1714 block B139 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 1714 1286 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1714 1288 r11|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 1717 1290 stack:72|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1722 1292 r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeList$NodeListIterator;, resolved>}  <||@
  Comment 1722 {meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeList$NodeListIterator;, resolved>}}  <||@
  Comment 1732 1294 r8|QWORD = MOV [r8|QWORD + 168] size: QWORD  <||@
  Comment 1739 1296 MOV (x: [rsi|QWORD[*]], y: r8|QWORD) size: QWORD  <||@
  Comment 1742 1298 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeList$NodeListIterator;, resolved>;compressed}  <||@
  Comment 1742 {meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeList$NodeListIterator;, resolved>;compressed}}  <||@
  Comment 1749 1300 r8|DWORD = MOV [r14|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 1757 1302 MOV (x: [rsi|QWORD[*] + 12], y: r8|DWORD) size: DWORD  <||@
  Comment 1761 1304 MOV (x: [rsi|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 1765 1306 MOV (x: [rsi|QWORD[*] + 20], y: r14|DWORD[.]) size: DWORD  <||@
  Comment 1769 1308 JUMP ~[] destination: B139 -> B140  <||@
  Comment 1774 block B141 loop 4 depth 2 outer 0 header:648|LoopBegin  <||@
  Comment 1774 1320 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1776 1322 rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1779 1324 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<NodeList$NodeListIterator.next()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:32, 61, 7, 8, 30]  <||@
  Comment 1779 9  <||@
  Comment 1783 {HotSpotMethod<NodeList$NodeListIterator.next()>}  <||@
  Comment 1788 [stack:8, stack:16, stack:20, stack:40, stack:48]at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 32, duringCall: true, rethrow: false]
              |0                  |1                                              |2                  |3 
     locals:  |stack:64|DWORD[.]  |vobject:1492729447:0{arg$1=stack:60|DWORD[.]}  |stack:72|QWORD[.]  |- 
  at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30, duringCall: true, rethrow: false]
              |0  |1                  |2                  |3 
     locals:  |-  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-   <||@
  Comment 1789 1326 TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD  <||@
  Comment 1792 1328 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B141 -> B145 falseDestination: B141 -> B143  <||@
  Comment 1798 block B143 loop 4 depth 2 outer 0 header:648|LoopBegin  <||@
  Comment 1798 1334 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1798 1336 rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/compiler/nodes/virtual/EscapeObjectState;, resolved>}  <||@
  Comment 1798 {meta{HotSpotType<Lorg/graalvm/compiler/nodes/virtual/EscapeObjectState;, resolved>}}  <||@
  Comment 1808 1338 rsi|DWORD = MOV [rax|QWORD[.] + 8] size: DWORD  <||@
  Comment 1811 1340 CMP (x: rcx|QWORD, y: [rsi|DWORD * 8 + 64]) size: QWORD  <||@
  Comment 1819 1342 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B143 -> B145 falseDestination: B143 -> B155  <||@
  Comment 1825 block B145 loop 4 depth 2 outer 0 header:648|LoopBegin  <||@
  Comment 1825 1348 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1825 1350 TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD  <||@
  Comment 1828 1352 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B145 -> B146 falseDestination: B145 -> B148  <||@
  Comment 1834 block B148 loop 4 depth 2 outer 0 header:648|LoopBegin  <||@
  Comment 1834 1372 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1834 1374 r10|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD  <||@
  Comment 1839 1376 rcx|DWORD[.] = MOV [r10|DWORD[.] * 8 + 28] size: DWORD  <||@
  Comment 1847 1378 TEST (x: rcx|DWORD[.], y: rcx|DWORD[.]) size: DWORD  <||@
  Comment 1849 1380 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B148 -> B149 falseDestination: B148 -> B151  <||@
  Comment 1855 block B151 loop 4 depth 2 outer 0 header:648|LoopBegin  <||@
  Comment 1855 1400 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1855 1402 rsi|DWORD = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 1862 1404 rdx|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD  <||@
  Comment 1865 1406 r11|DWORD = SAR rdx|DWORD y: 6 size: DWORD  <||@
  Comment 1872 1408 CMP (x: rsi|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 1875 1410 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B151 -> B152 falseDestination: B151 -> B153  <||@
  Comment 1881 block B152 loop 4 depth 2 outer 0 header:648|LoopBegin  <||@
  Comment 1881 1412 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1881 1414 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3  <||@
  Comment 1887 1416 r8|QWORD = MOVE input: long[1|0x1]  <||@
  Comment 1894 1418 rcx|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 1896 1420 r8|QWORD = SHL (x: r8|QWORD, ~y: rcx|DWORD) size: QWORD  <||@
  Comment 1899 1422 r8|QWORD = OR (x: r8|QWORD, ~y: [rsi|QWORD[.] + r11|DWORD * 8 + 16]) size: QWORD  <||@
  Comment 1904 1424 MOV (x: [rsi|QWORD[.] + r11|DWORD * 8 + 16], y: r8|QWORD) size: QWORD  <||@
  Comment 1909 1426 r11|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1914 1428 JUMP ~[] destination: B152 -> B140  <||@
  Comment 1914 block B140 loop 4 depth 2 outer 0 header:648|LoopBegin  <||@
  Comment 1914 1310 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1914 1312 rsi|DWORD[.] = MOV [r11|QWORD[.] + 20] size: DWORD  <||@
  Comment 1918 1314 rsi|DWORD = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD state [bci:22, 61, 7, 8, 30]  <||@
  Comment 1918 [r11:0, stack:8, stack:16, stack:20, stack:40, stack:48]at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 22, duringCall: false, rethrow: false]
              |0                  |1                                              |2             |3 
     locals:  |stack:64|DWORD[.]  |vobject:1492729447:0{arg$1=stack:60|DWORD[.]}  |r11|QWORD[.]  |- 
  at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30, duringCall: true, rethrow: false]
              |0  |1                  |2                  |3 
     locals:  |-  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-   <||@
  Comment 1918 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1925 1316 CMP (x: rsi|DWORD, y: [r11|QWORD[.] + 16]) size: DWORD  <||@
  Comment 1929 1318 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B140 -> B141 falseDestination: B140 -> B158  <||@
  Comment 1940 block B98 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 1940 916 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1940 918 TEST (x: r9|DWORD[.], y: r9|DWORD[.]) size: DWORD  <||@
  Comment 1943 920 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B98 -> B99 falseDestination: B98 -> B128  <||@
  Comment 1954 block B172 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 1954 1620 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1954 1622 r11|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1957 1624 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1962 1626 JUMP ~[] destination: B172 -> B173  <||@
  Comment 1962 block B173 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 1962 1628 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1962 1630 CMP [rdx|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/phases/common/CanonicalizerPhase$Instance$$Lambda$21/340690072;, resolved>;compressed}  <||@
  Comment 1962 {meta{HotSpotType<Lorg/graalvm/compiler/phases/common/CanonicalizerPhase$Instance$$Lambda$21/340690072;, resolved>;compressed}}  <||@
  Comment 1969 1632 BRANCH trueDestinationProbability: 0.7065224035699004 condition: = trueDestination: B173 -> B174 falseDestination: B173 -> B183  <||@
  Comment 1975 block B174 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 1975 1634 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1975 1636 TEST (x: r11|QWORD[.], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 1978 1638 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B174 -> B178 falseDestination: B174 -> B176  <||@
  Comment 1984 block B176 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 1984 1644 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1984 1646 r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/compiler/graph/Node;, resolved>}  <||@
  Comment 1984 {meta{HotSpotType<Lorg/graalvm/compiler/graph/Node;, resolved>}}  <||@
  Comment 1994 1648 rsi|DWORD = MOV [r11|QWORD[.] + 8] size: DWORD  <||@
  Comment 1998 1650 CMP (x: r9|QWORD, y: [rsi|DWORD * 8 + 48]) size: QWORD  <||@
  Comment 2006 1652 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B176 -> B178 falseDestination: B176 -> B181  <||@
  Comment 2012 block B178 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 2012 1658 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2012 1660 rsi|DWORD[.] = MOV [rdx|QWORD[.] + 12] size: DWORD  <||@
  Comment 2015 1662 TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 2017 1664 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B178 -> B179 falseDestination: B178 -> B180  <||@
  Comment 2023 block B180 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 2023 1674 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2023 1676 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3  <||@
  Comment 2027 1678 rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 2030 1680 - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<NodeWorkList.add(Node)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:8, 30]  <||@
  Comment 2030 7  <||@
  Comment 2047 {HotSpotMethod<NodeWorkList.add(Node)>}  <||@
  Comment 2052 [stack:40, stack:48]at org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance$$Lambda$21.340690072.accept(Object) [bci: 8, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30, duringCall: true, rethrow: false]
              |0  |1                  |2                  |3 
     locals:  |-  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-   <||@
  Comment 2053 1682 r11|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 2058 1684 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2063 1686 JUMP ~[] destination: B180 -> B11  <||@
  Comment 2068 block B78 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 2068 758 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2068 760 r11|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2071 762 JUMP ~[] destination: B78 -> B173  <||@
  Comment 2073 block B99 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 2073 922 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2073 924 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:44, 2, 5, 2, 7, 8, 30]  <||@
  Comment 2073 [r10:0, stack:24, stack:40, stack:48]at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:97) [bci: 44, duringCall: false, rethrow: false]
              |0             |1  |2        
     locals:  |r10|DWORD[.]  |-  |r8|DWORD 
  at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5, duringCall: true, rethrow: false]
              |0                                         |1                 
     locals:  |vobject:1492729447:0{arg$1=r10|DWORD[.]}  |stack:56|QWORD[.] 
  at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:653) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                                         |2  |3 
     locals:  |stack:56|QWORD[.]  |vobject:1492729447:0{arg$1=r10|DWORD[.]}  |-  |- 
  at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30, duringCall: true, rethrow: false]
              |0  |1                  |2                  |3 
     locals:  |-  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-   <||@
  Comment 2073 {infopoint: SAFEPOINT}  <||@
  Comment 2073 11  <||@
  Comment 2079 926 r11|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 2084 928 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2089 930 JUMP ~[] destination: B99 -> B11  <||@
  Comment 2094 block B126 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 2094 1120 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2094 1122 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:22, 7, 8, 30]  <||@
  Comment 2094 [rdi:0, r10:0, stack:24, stack:40, stack:48]at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 22, duringCall: false, rethrow: false]
              |0                  |1                                         |2                                                                                                 |3 
     locals:  |stack:56|QWORD[.]  |vobject:1492729447:0{arg$1=r10|DWORD[.]}  |vobject:NodeList$NodeListIterator:1{expectedModCount=r8|DWORD,index=r13|DWORD,list=rdi|DWORD[.]}  |- 
  at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30, duringCall: true, rethrow: false]
              |0  |1                  |2                  |3 
     locals:  |-  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-   <||@
  Comment 2094 {infopoint: SAFEPOINT}  <||@
  Comment 2094 11  <||@
  Comment 2100 1124 r11|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 2105 1126 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2110 1128 JUMP ~[] destination: B126 -> B11  <||@
  Comment 2115 block B130 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 2115 1164 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2115 1166 r14|DWORD[.] = MOV [r9|DWORD[.] * 8 + 68] size: DWORD  <||@
  Comment 2123 1168 TEST (x: r14|DWORD[.], y: r14|DWORD[.]) size: DWORD  <||@
  Comment 2126 1170 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B130 -> B131 falseDestination: B130 -> B132  <||@
  Comment 2132 block B132 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 2132 1182 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2132 1184 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 2136 1186 rdx|QWORD = LEA [rsi|QWORD + 16] size: QWORD  <||@
  Comment 2140 1188 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 2144 1190 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B132 -> B133 falseDestination: B132 -> B134  <||@
  Comment 2150 block B134 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 2150 1208 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2150 1210 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 2154 1212 AMD64PREFETCH ~[rsi|QWORD + 208] instr: 0  <||@
  Comment 2161 1214 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 2161 1216 JUMP ~[] destination: B134 -> B135  <||@
  Comment 2161 block B135 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 2161 1218 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2161 1220 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$92/1492729447;, resolved>}  <||@
  Comment 2161 {meta{HotSpotType<Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$92/1492729447;, resolved>}}  <||@
  Comment 2171 1222 r11|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 2174 1224 rdx|QWORD = MOV [rdx|QWORD + 168] size: QWORD  <||@
  Comment 2181 1226 MOV (x: [rsi|QWORD[*]], y: rdx|QWORD) size: QWORD  <||@
  Comment 2184 1228 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$92/1492729447;, resolved>;compressed}  <||@
  Comment 2184 {meta{HotSpotType<Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$92/1492729447;, resolved>;compressed}}  <||@
  Comment 2191 1230 MOV (x: [rsi|QWORD[*] + 12], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 2195 1232 r14|QWORD[.] = UNCOMPRESSPOINTER (input: r14|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3  <||@
  Comment 2199 1234 rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 2202 1236 rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 2205 1238 - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FrameState.applyToVirtual(VirtualState$VirtualClosure)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:61, 61, 7, 8, 30]  <||@
  Comment 2205 9  <||@
  Comment 2207 {HotSpotMethod<FrameState.applyToVirtual(VirtualState$VirtualClosure)>}  <||@
  Comment 2212 [stack:40, stack:48]at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30, duringCall: true, rethrow: false]
              |0  |1                  |2                  |3 
     locals:  |-  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-   <||@
  Comment 2213 1240 r11|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 2218 1242 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2223 1244 JUMP ~[] destination: B135 -> B11  <||@
  Comment 2228 block B158 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 2228 1474 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2228 1476 r9|DWORD[.] = MOVE stack:64|DWORD[.] moveKind: DWORD  <||@
  Comment 2233 1478 r10|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD  <||@
  Comment 2238 1480 r13|DWORD[.] = MOV [r9|DWORD[.] * 8 + 68] size: DWORD  <||@
  Comment 2246 1482 TEST (x: r13|DWORD[.], y: r13|DWORD[.]) size: DWORD  <||@
  Comment 2249 1484 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B158 -> B159 falseDestination: B158 -> B160  <||@
  Comment 2255 block B160 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 2255 1496 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2255 1498 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 2259 1500 rdx|QWORD = LEA [rsi|QWORD + 16] size: QWORD  <||@
  Comment 2263 1502 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 2267 1504 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B160 -> B161 falseDestination: B160 -> B162  <||@
  Comment 2273 block B162 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 2273 1522 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2273 1524 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 2277 1526 AMD64PREFETCH ~[rsi|QWORD + 208] instr: 0  <||@
  Comment 2284 1528 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 2284 1530 JUMP ~[] destination: B162 -> B163  <||@
  Comment 2284 block B163 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 2284 1532 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2284 1534 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$92/1492729447;, resolved>}  <||@
  Comment 2284 {meta{HotSpotType<Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$92/1492729447;, resolved>}}  <||@
  Comment 2294 1536 r11|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 2297 1538 rdx|QWORD = MOV [rdx|QWORD + 168] size: QWORD  <||@
  Comment 2304 1540 MOV (x: [rsi|QWORD[*]], y: rdx|QWORD) size: QWORD  <||@
  Comment 2307 1542 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$92/1492729447;, resolved>;compressed}  <||@
  Comment 2307 {meta{HotSpotType<Lorg/graalvm/compiler/loop/LoopFragment$$Lambda$92/1492729447;, resolved>;compressed}}  <||@
  Comment 2314 1544 MOV (x: [rsi|QWORD[*] + 12], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 2318 1546 r13|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2fe36889 encoding: base: 0 shift: 3  <||@
  Comment 2322 1548 rsi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 2325 1550 rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 2328 1552 - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FrameState.applyToVirtual(VirtualState$VirtualClosure)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:61, 61, 7, 8, 30]  <||@
  Comment 2328 9  <||@
  Comment 2335 {HotSpotMethod<FrameState.applyToVirtual(VirtualState$VirtualClosure)>}  <||@
  Comment 2340 [stack:40, stack:48]at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30, duringCall: true, rethrow: false]
              |0  |1                  |2                  |3 
     locals:  |-  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-   <||@
  Comment 2341 1554 r11|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 2346 1556 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2351 1558 JUMP ~[] destination: B163 -> B11  <||@
  Comment 2356 block B183 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 2356 1702 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2356 1704 rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2359 1706 rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 2362 1708 - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Consumer.accept(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:30]  <||@
  Comment 2362 6  <||@
  Comment 2375 {HotSpotMethod<Consumer.accept(Object)>}  <||@
  Comment 2380 [stack:40, stack:48]at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30, duringCall: true, rethrow: false]
              |0  |1                  |2                  |3 
     locals:  |-  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-   <||@
  Comment 2381 1710 r11|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 2386 1712 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2391 1714 JUMP ~[] destination: B183 -> B11  <||@
  Comment 2396 block B131 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 2396 1172 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2396 1174 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:44, 2, 5, 2, 61, 7, 8, 30]  <||@
  Comment 2396 [r9:0, r10:0, stack:40, stack:48]at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:97) [bci: 44, duringCall: false, rethrow: false]
              |0             |1  |2         
     locals:  |r10|DWORD[.]  |-  |r13|DWORD 
  at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5, duringCall: true, rethrow: false]
              |0                                         |1           
     locals:  |vobject:1492729447:0{arg$1=r10|DWORD[.]}  |r9|DWORD[.] 
  at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:653) [bci: 2, duringCall: true, rethrow: false]
              |0            |1                                         |2  |3 
     locals:  |r9|DWORD[.]  |vobject:1492729447:0{arg$1=r10|DWORD[.]}  |-  |- 
  at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30, duringCall: true, rethrow: false]
              |0  |1                  |2                  |3 
     locals:  |-  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-   <||@
  Comment 2396 {infopoint: SAFEPOINT}  <||@
  Comment 2396 11  <||@
  Comment 2402 1176 r11|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 2407 1178 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2412 1180 JUMP ~[] destination: B131 -> B11  <||@
  Comment 2417 block B159 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 2417 1486 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2417 1488 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:22, 61, 7, 8, 30]  <||@
  Comment 2417 [r9:0, r10:0, stack:8, stack:40, stack:48]at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 22, duringCall: false, rethrow: false]
              |0            |1                                         |2                  |3 
     locals:  |r9|DWORD[.]  |vobject:1492729447:0{arg$1=r10|DWORD[.]}  |stack:72|QWORD[.]  |- 
  at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30, duringCall: true, rethrow: false]
              |0  |1                  |2                  |3 
     locals:  |-  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-   <||@
  Comment 2417 {infopoint: SAFEPOINT}  <||@
  Comment 2417 11  <||@
  Comment 2423 1490 r11|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 2428 1492 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2433 1494 JUMP ~[] destination: B159 -> B11  <||@
  Comment 2438 block B137 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 2438 1256 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2438 1258 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 2438 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 2448 1260 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 2453 1262 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2458 1264 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:44, 2, 5, 2, 61, 7, 8, 30]  <||@
  Comment 2458 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 2463 [r14:0, stack:16, stack:20, stack:40, stack:48]at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:97) [bci: 44, duringCall: false, rethrow: false]
              |0                  |1  |2         
     locals:  |stack:60|DWORD[.]  |-  |r13|DWORD 
  at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5, duringCall: true, rethrow: false]
              |0                                              |1                 
     locals:  |vobject:1492729447:0{arg$1=stack:60|DWORD[.]}  |stack:64|DWORD[.] 
  at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:653) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                                              |2  |3 
     locals:  |stack:64|DWORD[.]  |vobject:1492729447:0{arg$1=stack:60|DWORD[.]}  |-  |- 
  at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30, duringCall: true, rethrow: false]
              |0  |1                  |2                  |3 
     locals:  |-  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-   <||@
  Comment 2464 1266 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2467 1268 r9|DWORD[.] = MOVE stack:64|DWORD[.] moveKind: DWORD  <||@
  Comment 2472 1270 r10|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD  <||@
  Comment 2477 1272 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2482 1274 JUMP ~[] destination: B137 -> B139  <||@
  Comment 2487 block B133 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 2487 1192 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2487 1194 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 2487 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 2497 1196 rdx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2502 1198 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2507 1200 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:44, 2, 5, 2, 61, 7, 8, 30]  <||@
  Comment 2507 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 2512 [r14:0, stack:16, stack:20, stack:40, stack:48]at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:97) [bci: 44, duringCall: false, rethrow: false]
              |0                  |1  |2         
     locals:  |stack:60|DWORD[.]  |-  |r13|DWORD 
  at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5, duringCall: true, rethrow: false]
              |0                                              |1                 
     locals:  |vobject:1492729447:0{arg$1=stack:60|DWORD[.]}  |stack:64|DWORD[.] 
  at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:653) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                                              |2  |3 
     locals:  |stack:64|DWORD[.]  |vobject:1492729447:0{arg$1=stack:60|DWORD[.]}  |-  |- 
  at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30, duringCall: true, rethrow: false]
              |0  |1                  |2                  |3 
     locals:  |-  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-   <||@
  Comment 2513 1202 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2516 1204 r10|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD  <||@
  Comment 2521 1206 JUMP ~[] destination: B133 -> B135  <||@
  Comment 2526 block B161 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 2526 1506 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2526 1508 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 2526 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 2536 1510 rdx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2541 1512 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2546 1514 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:22, 61, 7, 8, 30]  <||@
  Comment 2546 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 2551 [r13:0, stack:8, stack:16, stack:20, stack:40, stack:48]at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 22, duringCall: false, rethrow: false]
              |0                  |1                                              |2                  |3 
     locals:  |stack:64|DWORD[.]  |vobject:1492729447:0{arg$1=stack:60|DWORD[.]}  |stack:72|QWORD[.]  |- 
  at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30, duringCall: true, rethrow: false]
              |0  |1                  |2                  |3 
     locals:  |-  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-   <||@
  Comment 2552 1516 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2555 1518 r10|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD  <||@
  Comment 2560 1520 JUMP ~[] destination: B161 -> B163  <||@
  Comment 2565 block B83 null  <||@
  Comment 2565 786 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2565 788 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 2574 12  <||@
  Comment 2584 block B23 null  <||@
  Comment 2584 280 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2584 282 MOV (x: [r10|QWORD[.] + 12], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 2588 284 JUMP ~[] destination: B23 -> B83  <||@
  Comment 2590 block B38 null  <||@
  Comment 2590 424 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2590 428 MOV (x: [r10|QWORD[.] + 12], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 2594 430 JUMP ~[] destination: B38 -> B83  <||@
  Comment 2596 block B68 null  <||@
  Comment 2596 666 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2596 668 MOV (x: [r10|QWORD[.] + 12], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 2600 670 rsi|DWORD = MOVE input: int[-286908|0xfffffffffffb9f44]  <||@
  Comment 2605 672 JUMP ~[] destination: B68 -> B73  <||@
  Comment 2605 block B73 null  <||@
  Comment 2605 716 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2605 718 MOV (x: [r15|QWORD + 668], y: rsi|DWORD) size: DWORD  <||@
  Comment 2612 720 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2619 722 DEOPT info [bci:102, 1, 1, 22]  <||@
  Comment 2619 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2624 [r10:0, stack:48]at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:47) [bci: 102, duringCall: false, rethrow: false]
              |0 
     locals:  |- 
  at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |r10|QWORD[.]  |- 
  at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22, duringCall: true, rethrow: false]
              |0  |1                  |2             |3 
     locals:  |-  |stack:32|QWORD[.]  |r10|QWORD[.]  |-   <||@
  Comment 2625 block B5 null  <||@
  Comment 2625 94 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2625 96 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2628 98 CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeUsageIterable;, resolved>;compressed}  <||@
  Comment 2628 {meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeUsageIterable;, resolved>;compressed}}  <||@
  Comment 2635 100 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B185  <||@
  Comment 2641 block B6 null  <||@
  Comment 2641 102 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2641 104 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 2645 106 r10|QWORD = LEA [rsi|QWORD + 24] size: QWORD  <||@
  Comment 2649 108 CMP (x: r10|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 2653 110 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8  <||@
  Comment 2659 block B8 null  <||@
  Comment 2659 126 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2659 128 MOV (x: [r15|QWORD + 96], y: r10|QWORD) size: QWORD  <||@
  Comment 2663 130 AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0  <||@
  Comment 2670 132 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 2670 134 JUMP ~[] destination: B8 -> B9  <||@
  Comment 2670 block B9 null  <||@
  Comment 2670 136 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2670 138 r10|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 2673 140 r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeUsageIterator;, resolved>}  <||@
  Comment 2673 {meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeUsageIterator;, resolved>}}  <||@
  Comment 2683 142 r11|QWORD = MOV [r11|QWORD + 168] size: QWORD  <||@
  Comment 2690 144 MOV (x: [rsi|QWORD[*]], y: r11|QWORD) size: QWORD  <||@
  Comment 2693 146 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeUsageIterator;, resolved>;compressed}  <||@
  Comment 2693 {meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeUsageIterator;, resolved>;compressed}}  <||@
  Comment 2700 148 MOV [rsi|QWORD[*] + 12] y: -1 size: DWORD  <||@
  Comment 2707 150 r11|DWORD[.] = MOV [r14|QWORD[.] + 12] size: DWORD  <||@
  Comment 2711 152 MOV (x: [rsi|QWORD[*] + 16], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 2715 154 MOV (x: [rsi|QWORD[*] + 20], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 2719 156 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2722 158 stack:40|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2727 160 - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<NodeUsageIterator.advance()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:15, 26, 1, 6]  <||@
  Comment 2727 {HotSpotMethod<NodeUsageIterator.advance()>}  <||@
  Comment 2727 9  <||@
  Comment 2732 [stack:40, stack:48]at org.graalvm.compiler.graph.NodeUsageIterator.<init>(NodeUsageIterator.java:51) [bci: 15, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.graph.NodeUsageIterable.iterator(NodeUsageIterable.java:44) [bci: 26, duringCall: true, rethrow: false]
              |0                 
     locals:  |-                 
     stack:   |stack:40|QWORD[.] 
  at org.graalvm.compiler.graph.NodeUsageIterable.iterator(NodeUsageIterable.java:31) [bci: 1, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at java.lang.Iterable.forEach(Iterable.java:74) [bci: 6, duringCall: true, rethrow: false]
              |0  |1                  |2  |3 
     locals:  |-  |stack:32|QWORD[.]  |-  |-   <||@
  Comment 2733 162 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2738 164 JUMP ~[] destination: B9 -> B10  <||@
  Comment 2743 block B72 null  <||@
  Comment 2743 706 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2743 710 MOV (x: [r10|QWORD[.] + 12], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 2747 712 rsi|DWORD = MOVE input: int[-267196|0xfffffffffffbec44]  <||@
  Comment 2752 714 JUMP ~[] destination: B72 -> B73  <||@
  Comment 2757 block B35 null  <||@
  Comment 2757 396 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2757 398 MOV (x: [r10|QWORD[.] + 12], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 2761 400 JUMP ~[] destination: B35 -> B83  <||@
  Comment 2766 block B2 null  <||@
  Comment 2766 40 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2766 42 r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2771 44 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 2771 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 2781 46 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 2786 48 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2791 50 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:13, 6]  <||@
  Comment 2791 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 2796 [r13:0, r14:0, stack:48]at org.graalvm.compiler.graph.iterators.FilteredNodeIterable.iterator(FilteredNodeIterable.java:45) [bci: 13, duringCall: false, rethrow: false]
              |0                                                                                                         |1                                                                                                         |2            
     locals:  |r14|QWORD[.]                                                                                              |                                                                                                          |             
     stack:   |vobject:PredicatedProxyNodeIterator:0{current=Object[null],iterator=Object[null],predicate=Object[null]}  |vobject:PredicatedProxyNodeIterator:0{current=Object[null],iterator=Object[null],predicate=Object[null]}  |r13|QWORD[.] 
  at java.lang.Iterable.forEach(Iterable.java:74) [bci: 6, duringCall: true, rethrow: false]
              |0  |1                  |2  |3 
     locals:  |-  |stack:32|QWORD[.]  |-  |-   <||@
  Comment 2797 52 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2800 54 JUMP ~[] destination: B2 -> B4  <||@
  Comment 2805 block B7 null  <||@
  Comment 2805 112 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2805 114 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 2805 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 2815 116 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 2820 118 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2825 120 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 2825 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 2830 [r14:0, stack:48]at java.lang.Iterable.forEach(Iterable.java:73) [bci: 0, duringCall: false, rethrow: false]
              |0             |1                  |2  |3 
     locals:  |r14|QWORD[.]  |stack:32|QWORD[.]  |-  |-   <||@
  Comment 2831 122 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2834 124 JUMP ~[] destination: B7 -> B9  <||@
  Comment 2839 block B75 null  <||@
  Comment 2839 734 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2839 736 MOV [r15|QWORD + 668] y: -348604 size: DWORD  <||@
  Comment 2850 738 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2857 740 DEOPT info [bci:94, 1, 1, 22]  <||@
  Comment 2857 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2862 [r10:0, stack:48]at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 94, duringCall: false, rethrow: false]
              |0            
     locals:  |r10|QWORD[.] 
     stack:   |rax|DWORD    
  at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |r10|QWORD[.]  |- 
  at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22, duringCall: true, rethrow: false]
              |0  |1                  |2             |3 
     locals:  |-  |stack:32|QWORD[.]  |r10|QWORD[.]  |-   <||@
  Comment 2863 block B185 null  <||@
  Comment 2863 1724 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2863 1726 MOV [r15|QWORD + 668] y: -400435 size: DWORD  <||@
  Comment 2874 1728 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2881 1730 DEOPT info [bci:0]  <||@
  Comment 2881 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2886 [r14:0, stack:48]at java.lang.Iterable.forEach(Iterable.java:73) [bci: 0, duringCall: false, rethrow: false]
              |0             |1                  |2  |3 
     locals:  |r14|QWORD[.]  |stack:32|QWORD[.]  |-  |-   <||@
  Comment 2887 block B179 null  <||@
  Comment 2887 1666 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2887 1668 r8|DWORD = MOVE input: int[-396811|0xfffffffffff9f1f5]  <||@
  Comment 2893 1670 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2898 1672 JUMP ~[] destination: B179 -> B182  <||@
  Comment 2898 block B182 null  <||@
  Comment 2898 1694 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2898 1696 MOV (x: [r15|QWORD + 668], y: r8|DWORD) size: DWORD  <||@
  Comment 2905 1698 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2912 1700 DEOPT info [bci:27]  <||@
  Comment 2912 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2917 [rdx:0, r10:0, r11:0]at java.lang.Iterable.forEach(Iterable.java:74) [bci: 27, duringCall: false, rethrow: false]
              |0             |1             |2             |3 
     locals:  |-             |rdx|QWORD[.]  |r10|QWORD[.]  |- 
     stack:   |r11|QWORD[.]  |              |              |    <||@
  Comment 2918 block B120 null  <||@
  Comment 2918 1082 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2918 1084 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2923 1086 JUMP ~[] destination: B120 -> B121  <||@
  Comment 2923 block B121 null  <||@
  Comment 2923 1088 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2923 1090 r11|DWORD = MOVE input: int[-371995|0xfffffffffffa52e5]  <||@
  Comment 2929 1092 JUMP ~[] destination: B121 -> B124  <||@
  Comment 2929 block B124 null  <||@
  Comment 2929 1106 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2929 1108 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 2936 1110 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2943 1112 DEOPT info [bci:22, 7, 8, 30]  <||@
  Comment 2943 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2948 [rdi:0, r10:0, stack:20, stack:24, stack:48]at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 22, duringCall: false, rethrow: false]
              |0                  |1                                              |2                                                                                                 |3 
     locals:  |stack:56|QWORD[.]  |vobject:1492729447:0{arg$1=stack:60|DWORD[.]}  |vobject:NodeList$NodeListIterator:1{expectedModCount=r8|DWORD,index=r13|DWORD,list=rdi|DWORD[.]}  |- 
  at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30, duringCall: true, rethrow: false]
              |0  |1                  |2             |3 
     locals:  |-  |stack:32|QWORD[.]  |r10|QWORD[.]  |-   <||@
  Comment 2949 block B169 null  <||@
  Comment 2949 1598 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2949 1600 r11|DWORD = MOVE input: int[-357915|0xfffffffffffa89e5]  <||@
  Comment 2955 1602 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2960 1604 JUMP ~[] destination: B169 -> B171  <||@
  Comment 2960 block B171 null  <||@
  Comment 2960 1612 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2960 1614 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 2967 1616 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2974 1618 DEOPT info [bci:27]  <||@
  Comment 2974 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2979 [rsi:0, r10:0, stack:48]at java.lang.Iterable.forEach(Iterable.java:74) [bci: 27, duringCall: false, rethrow: false]
              |0             |1                  |2             |3 
     locals:  |-             |stack:32|QWORD[.]  |r10|QWORD[.]  |- 
     stack:   |rsi|QWORD[.]  |                   |              |    <||@
  Comment 2980 block B166 null  <||@
  Comment 2980 1576 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2980 1572 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2985 1578 JUMP ~[] destination: B166 -> B167  <||@
  Comment 2985 block B167 null  <||@
  Comment 2985 1580 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2985 1582 r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@295001017]  <||@
  Comment 2985 {Object[d.a@295001017]}  <||@
  Comment 2995 1584 r9|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 2998 1586 r11|DWORD = MOVE input: int[-365083|0xfffffffffffa6de5]  <||@
  Comment 3004 1588 JUMP ~[] destination: B167 -> B168  <||@
  Comment 3004 block B168 null  <||@
  Comment 3004 1590 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 3004 1592 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 3011 1594 MOV (x: [r15|QWORD + 680], y: r9|QWORD[.]) size: QWORD  <||@
  Comment 3018 1596 DEOPT info [bci:44, 2, 5, 2, 7, 8, 30]  <||@
  Comment 3018 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3023 [r10:0, stack:20, stack:24, stack:48]at org.graalvm.compiler.graph.NodeBitMap.mark(NodeBitMap.java:97) [bci: 44, duringCall: false, rethrow: false]
              |0                  |1  |2        
     locals:  |stack:60|DWORD[.]  |-  |r8|DWORD 
  at org.graalvm.compiler.loop.LoopFragment.lambda$null$0(LoopFragment.java:210) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.loop.LoopFragment$$Lambda$92.1492729447.apply(VirtualState) [bci: 5, duringCall: true, rethrow: false]
              |0                                              |1                 
     locals:  |vobject:1492729447:0{arg$1=stack:60|DWORD[.]}  |stack:56|QWORD[.] 
  at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:653) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                                              |2  |3 
     locals:  |stack:56|QWORD[.]  |vobject:1492729447:0{arg$1=stack:60|DWORD[.]}  |-  |- 
  at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30, duringCall: true, rethrow: false]
              |0  |1                  |2             |3 
     locals:  |-  |stack:32|QWORD[.]  |r10|QWORD[.]  |-   <||@
  Comment 3024 block B149 null  <||@
  Comment 3024 1382 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3024 1384 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3029 1386 JUMP ~[] destination: B149 -> B150  <||@
  Comment 3029 block B150 null  <||@
  Comment 3029 1388 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3029 1390 r11|DWORD = MOVE input: int[-387851|0xfffffffffffa14f5]  <||@
  Comment 3035 1398 JUMP ~[] destination: B150 -> B157  <||@
  Comment 3035 block B157 null  <||@
  Comment 3035 1466 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3035 1458 rcx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 3040 1460 r9|DWORD[.] = MOVE stack:64|DWORD[.] moveKind: DWORD  <||@
  Comment 3045 1462 r8|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD  <||@
  Comment 3050 1468 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 3057 1470 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3064 1472 DEOPT info [bci:37, 61, 7, 8, 30]  <||@
  Comment 3064 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3069 [rax:0, rcx:0, r8:0, r9:0, r10:0, stack:48]at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:655) [bci: 37, duringCall: false, rethrow: false]
              |0             |1                                        |2             |3 
     locals:  |r9|DWORD[.]   |vobject:1492729447:0{arg$1=r8|DWORD[.]}  |rcx|QWORD[.]  |- 
     stack:   |rax|QWORD[.]  |                                         |              |  
  at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:660) [bci: 61, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30, duringCall: true, rethrow: false]
              |0  |1                  |2             |3 
     locals:  |-  |stack:32|QWORD[.]  |r10|QWORD[.]  |-   <||@
  Comment 3070 block B170 null  <||@
  Comment 3070 1606 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3070 1608 r11|DWORD = MOVE input: int[-351523|0xfffffffffffaa2dd]  <||@
  Comment 3076 1610 JUMP ~[] destination: B170 -> B171  <||@
  Comment 3078 block B155 null  <||@
  Comment 3078 1448 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3078 1450 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3083 1452 JUMP ~[] destination: B155 -> B156  <||@
  Comment 3083 block B156 null  <||@
  Comment 3083 1454 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3083 1456 r11|DWORD = MOVE input: int[-386083|0xfffffffffffa1bdd]  <||@
  Comment 3089 1464 JUMP ~[] destination: B156 -> B157  <||@
  Comment 3091 block B55 null  <||@
  Comment 3091 554 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3091 556 r11|DWORD = MOVE input: int[-342795|0xfffffffffffac4f5]  <||@
  Comment 3097 558 JUMP ~[] destination: B55 -> B56  <||@
  Comment 3097 block B56 null  <||@
  Comment 3097 560 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3097 562 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 3104 564 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3111 566 DEOPT info [bci:42, 1, 1, 22]  <||@
  Comment 3111 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3116 [r10:0, stack:48]at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 42, duringCall: false, rethrow: false]
              |0            
     locals:  |r10|QWORD[.] 
     stack:   |rax|DWORD    
  at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |r10|QWORD[.]  |- 
  at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22, duringCall: true, rethrow: false]
              |0  |1                  |2             |3 
     locals:  |-  |stack:32|QWORD[.]  |r10|QWORD[.]  |-   <||@
  Comment 3117 block B181 null  <||@
  Comment 3117 1688 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3117 1690 r8|DWORD = MOVE input: int[-396323|0xfffffffffff9f3dd]  <||@
  Comment 3123 1692 JUMP ~[] destination: B181 -> B182  <||@
  Comment 3128 block B95 null  <||@
  Comment 3128 874 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3128 876 r11|DWORD = MOVE input: int[-354059|0xfffffffffffa98f5]  <||@
  Comment 3134 878 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3139 880 JUMP ~[] destination: B95 -> B171  <||@
  Comment 3144 block B51 null  <||@
  Comment 3144 530 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3144 532 r11|DWORD = MOVE input: int[-297148|0xfffffffffffb7744]  <||@
  Comment 3150 534 JUMP ~[] destination: B51 -> B56  <||@
  Comment 3152 block B30 null  <||@
  Comment 3152 352 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3152 354 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3157 356 JUMP ~[] destination: B30 -> B31  <||@
  Comment 3157 block B31 null  <||@
  Comment 3157 358 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3157 360 MOV [r15|QWORD + 668] y: -334371 size: DWORD  <||@
  Comment 3168 362 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3175 364 DEOPT info [bci:55, 1, 13]  <||@
  Comment 3175 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3180 [rax:0, r10:0, stack:48]at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 55, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |r10|QWORD[.]  |             
     stack:   |r10|QWORD[.]  |rax|QWORD[.] 
  at org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:38) [bci: 1, duringCall: true, rethrow: false]
              |0            
     locals:  |r10|QWORD[.] 
  at java.lang.Iterable.forEach(Iterable.java:74) [bci: 13, duringCall: true, rethrow: false]
              |0  |1                  |2             |3 
     locals:  |-  |stack:32|QWORD[.]  |r10|QWORD[.]  |-   <||@
  Comment 3181 block B65 null  <||@
  Comment 3181 648 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3181 650 MOV [r15|QWORD + 668] y: -297404 size: DWORD  <||@
  Comment 3192 652 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3199 654 DEOPT info [bci:30, 1, 1, 22]  <||@
  Comment 3199 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3204 [r10:0, stack:48]at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:41) [bci: 30, duringCall: false, rethrow: false]
              |0            
     locals:  |r10|QWORD[.] 
     stack:   |rax|DWORD    
  at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |r10|QWORD[.]  |- 
  at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22, duringCall: true, rethrow: false]
              |0  |1                  |2             |3 
     locals:  |-  |stack:32|QWORD[.]  |r10|QWORD[.]  |-   <||@
  Comment 3205 block B122 null  <||@
  Comment 3205 1094 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3205 1096 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3210 1098 JUMP ~[] destination: B122 -> B123  <||@
  Comment 3210 block B123 null  <||@
  Comment 3210 1100 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3210 1102 r11|DWORD = MOVE input: int[-368163|0xfffffffffffa61dd]  <||@
  Comment 3216 1104 JUMP ~[] destination: B123 -> B124  <||@
  Comment 3221 block B70 null  <||@
  Comment 3221 682 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3221 684 MOV [r15|QWORD + 668] y: -346891 size: DWORD  <||@
  Comment 3232 686 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3239 688 DEOPT info [bci:64, 1, 1, 22]  <||@
  Comment 3239 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3244 [r10:0, stack:48]at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44) [bci: 64, duringCall: false, rethrow: false]
              |0            
     locals:  |r10|QWORD[.] 
  at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |r10|QWORD[.]  |- 
  at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22, duringCall: true, rethrow: false]
              |0  |1                  |2             |3 
     locals:  |-  |stack:32|QWORD[.]  |r10|QWORD[.]  |-   <||@
  Comment 3245 block B116 null  <||@
  Comment 3245 1046 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3245 1048 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3250 1050 JUMP ~[] destination: B116 -> B117  <||@
  Comment 3250 block B117 null  <||@
  Comment 3250 1052 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3250 1054 r11|DWORD = MOVE input: int[-368395|0xfffffffffffa60f5]  <||@
  Comment 3256 1056 JUMP ~[] destination: B117 -> B124  <||@
  Comment 3261 block B93 null  <||@
  Comment 3261 858 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3261 860 r11|DWORD = MOVE input: int[-352011|0xfffffffffffaa0f5]  <||@
  Comment 3267 862 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3272 864 JUMP ~[] destination: B93 -> B171  <||@
  Comment 3277 block B146 null  <||@
  Comment 3277 1354 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3277 1356 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3282 1358 JUMP ~[] destination: B146 -> B147  <||@
  Comment 3282 block B147 null  <||@
  Comment 3282 1360 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3282 1362 r11|DWORD = MOVE input: int[-386315|0xfffffffffffa1af5]  <||@
  Comment 3288 1370 JUMP ~[] destination: B147 -> B157  <||@
  Comment 3293 block B91 null  <||@
  Comment 3293 838 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3293 840 r11|DWORD = MOVE input: int[-351755|0xfffffffffffaa1f5]  <||@
  Comment 3299 842 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3304 844 JUMP ~[] destination: B91 -> B171  <||@
  Comment 3309 block B184 null  <||@
  Comment 3309 1716 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3309 1718 MOV [r15|QWORD + 668] y: -348979 size: DWORD  <||@
  Comment 3320 1720 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3327 1722 DEOPT info [bci:12]  <||@
  Comment 3327 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3332 [r10:0, stack:48]at java.lang.Iterable.forEach(Iterable.java:74) [bci: 12, duringCall: false, rethrow: false]
              |0  |1                  |2             |3 
     locals:  |-  |stack:32|QWORD[.]  |r10|QWORD[.]  |-   <||@
  Comment 3333 block B164 null  <||@
  Comment 3333 1560 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3333 1562 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3338 1564 MOV [r15|QWORD + 668] y: -377883 size: DWORD  <||@
  Comment 3349 1566 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3356 1568 DEOPT info [bci:49, 7, 8, 30]  <||@
  Comment 3356 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3361 [r10:0, stack:20, stack:24, stack:48]at org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:659) [bci: 49, duringCall: false, rethrow: false]
              |0                  |1                                              |2  |3 
     locals:  |stack:56|QWORD[.]  |vobject:1492729447:0{arg$1=stack:60|DWORD[.]}  |-  |- 
  at org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.loop.LoopFragment$$Lambda$90.1190971543.accept(Object) [bci: 8, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Iterable.forEach(Iterable.java:75) [bci: 30, duringCall: true, rethrow: false]
              |0  |1                  |2             |3 
     locals:  |-  |stack:32|QWORD[.]  |r10|QWORD[.]  |-   <||@
  Comment 3362 block B102 null  <||@
  Comment 3362 944 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3362 946 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3367 948 r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1280662813]  <||@
  Comment 3367 {Object[d.a@1280662813]}  <||@
  Comment 3377 950 r9|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 3380 952 r11|DWORD = MOVE input: int[-363787|0xfffffffffffa72f5]  <||@
  Comment 3386 954 JUMP ~[] destination: B102 -> B168  <||@
  Comment 3391 block B62 null  <||@
  Comment 3391 620 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3391 622 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3396 624 JUMP ~[] destination: B62 -> B63  <||@
  Comment 3396 block B63 null  <||@
  Comment 3396 626 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3396 628 MOV [r15|QWORD + 668] y: -344355 size: DWORD  <||@
  Comment 3407 630 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3414 632 DEOPT info [bci:55, 1, 1, 22]  <||@
  Comment 3414 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3419 [rax:0, r10:0, stack:48]at org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:42) [bci: 55, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |r10|QWORD[.]  |             
     stack:   |r10|QWORD[.]  |rax|QWORD[.] 
  at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:44) [bci: 1, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |r10|QWORD[.]  |- 
  at org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:30) [bci: 1, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at java.lang.Iterable.forEach(Iterable.java:74) [bci: 22, duringCall: true, rethrow: false]
              |0  |1                  |2             |3 
     locals:  |-  |stack:32|QWORD[.]  |r10|QWORD[.]  |-   <||@
  Comment 3420 block B153 null  <||@
  Comment 3420 1430 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3420 1432 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3425 1434 JUMP ~[] destination: B153 -> B154  <||@
  Comment 3425 block B154 null  <||@
  Comment 3425 1436 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3425 1438 r11|DWORD = MOVE input: int[-391451|0xfffffffffffa06e5]  <||@
  Comment 3431 1446 JUMP ~[] destination: B154 -> B157  <||@
  Comment 3436 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 3436 4  <||@
  Comment 3442 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 3442 5  <||@
  HexCodeFile>>> <|@
end_nmethod
