begin_compilation
  name " HotSpotCompilation-9445[java.lang.Class.getSimpleBinaryName()]"
  method "HotSpotCompilation-9445[java.lang.Class.getSimpleBinaryName()]"
  date 1527005214209
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a130 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a130  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/lang/Class;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?405 ?100 v76 v312 v570 v301 v267 ?143 j527 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid v267 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.Class.getEnclosingMethodInfo(Class.java:1072) [bci: 1]
at java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
returnStamp: a [Ljava/lang/Object;
signature: [Ljdk.vm.ci.meta.JavaType;@166775f8
stamp: void
targetMethod: HotSpotMethod<Class.getEnclosingMethod0()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
a130 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?100 <|@
d <@d|@=== Debug Properties ===
bci: 1
code: ResolvedJavaMethodBytecode<Class.getSimpleBinaryName()>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Class.java
sourceLine: 1443
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - 
=== Succesors ===
=== Usages ===
?143 ?165 ?84 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - -  <|@  <|@
tid ?143 <|@
d <@d|@=== Debug Properties ===
bci: 1
code: ResolvedJavaMethodBytecode<Class.getEnclosingClass()>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Class.java
sourceLine: 1272
stackSize: 0
=== Inputs ===
outerFrameState: ?100 
values: a1 - - - 
=== Succesors ===
=== Usages ===
?131 ?140 ?402 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?100 values: a1 - - -  <|@  <|@
tid ?402 <|@
d <@d|@=== Debug Properties ===
bci: 1
code: ResolvedJavaMethodBytecode<Class.getEnclosingMethodInfo()>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Class.java
sourceLine: 1072
stackSize: 0
=== Inputs ===
outerFrameState: ?143 
values: - - 
=== Succesors ===
=== Usages ===
a130 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?143 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a130 <|@
d <@d|@=== Debug Properties ===
bci: 1
nodeSourcePosition: at java.lang.Class.getEnclosingMethodInfo(Class.java:1072) [bci: 1]
at java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
polymorphic: false
stamp: a [Ljava/lang/Object;
targetMethod: Direct#Class.getEnclosingMethod0
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v267 
stateDuring: ?402 
=== Succesors ===
next: v135 
=== Usages ===
?131 v132 v318 ?140 
=== Predecessor ===
v0 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v267 stateDuring: ?402 #next: v135  <|@  <|@
f <@~|@floating>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getEnclosingMethodInfo(Class.java:1073) [bci: 6]
at java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
stamp: void
=== Inputs ===
value: a130 
=== Succesors ===
=== Usages ===
v135 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a130  <|@  <|@
f <@~|@floating>@ <|@
tid a6 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Class.getSimpleBinaryName(Class.java:1444) [bci: 6]
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v258 v413 v427 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i107 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.substring(String.java:1926) [bci: 1]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 22]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v112 v485 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j382 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v483 v526 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i435 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
a449 a497 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i447 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
a449 a497 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v433 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a449 a497 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j544 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 24
stableDimension: 0
stamp: i64 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j545 j552 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a268 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.getSecurityManager(System.java:334) [bci: 0]
at java.lang.Class.checkPackageAccess(Class.java:2361) [bci: 0]
at java.lang.Class.getEnclosingClass(Class.java:1288) [bci: 55]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
rawvalue: Class:java.lang.System
stableDimension: 0
stamp: a!# Ljava/lang/Class;
stampKind: a -
value: Object[Class:java.lang.System]
=== Inputs ===
=== Succesors ===
=== Usages ===
v569 v596 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v135 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getEnclosingMethodInfo(Class.java:1073) [bci: 6]
at java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
stamp: void
trueSuccessorProbability: 0.9901123531748284
=== Inputs ===
condition: v132 
=== Succesors ===
trueSuccessor: v133 
falseSuccessor: v134 
=== Usages ===
=== Predecessor ===
a130 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v132 #trueSuccessor: v133 #falseSuccessor: v134  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607093358794902580
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getEnclosingMethodInfo(Class.java:1074) [bci: 9]
at java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: a149 
=== Usages ===
=== Predecessor ===
v135 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a149  <|@  <|@
tid v312 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.Class.getDeclaringClass(Class.java:1235) [bci: 1]
at java.lang.Class.getEnclosingClass(Class.java:1277) [bci: 10]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
returnStamp: a# Ljava/lang/Class;
signature: [Ljdk.vm.ci.meta.JavaType;@526580cd
stamp: void
targetMethod: HotSpotMethod<Class.getDeclaringClass0()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
a149 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?165 <|@
d <@d|@=== Debug Properties ===
bci: 10
code: ResolvedJavaMethodBytecode<Class.getEnclosingClass()>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Class.java
sourceLine: 1277
stackSize: 0
=== Inputs ===
outerFrameState: ?100 
values: - - - - 
=== Succesors ===
=== Usages ===
?150 ?403 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?100 values: - - - -  <|@  <|@
tid ?403 <|@
d <@d|@=== Debug Properties ===
bci: 1
code: ResolvedJavaMethodBytecode<Class.getDeclaringClass()>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Class.java
sourceLine: 1235
stackSize: 0
=== Inputs ===
outerFrameState: ?165 
values: - - 
=== Succesors ===
=== Usages ===
a149 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?165 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a149 <|@
d <@d|@=== Debug Properties ===
bci: 1
nodeSourcePosition: at java.lang.Class.getDeclaringClass(Class.java:1235) [bci: 1]
at java.lang.Class.getEnclosingClass(Class.java:1277) [bci: 10]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
polymorphic: false
stamp: a# Ljava/lang/Class;
targetMethod: Direct#Class.getDeclaringClass0
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v312 
stateDuring: ?403 
=== Succesors ===
next: v154 
=== Usages ===
?150 v151 a83 a83 
=== Predecessor ===
v133 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v312 stateDuring: ?403 #next: v154  <|@  <|@
f <@~|@floating>@ <|@
tid v151 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getDeclaringClass(Class.java:1237) [bci: 6]
at java.lang.Class.getEnclosingClass(Class.java:1277) [bci: 10]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
stamp: void
=== Inputs ===
value: a149 
=== Succesors ===
=== Usages ===
v154 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a149  <|@  <|@
f <@*|@fixed>@ <|@
tid v154 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getDeclaringClass(Class.java:1237) [bci: 6]
at java.lang.Class.getEnclosingClass(Class.java:1277) [bci: 10]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
stamp: void
trueSuccessorProbability: 0.7818621453964507
=== Inputs ===
condition: v151 
=== Succesors ===
trueSuccessor: v152 
falseSuccessor: v153 
=== Usages ===
=== Predecessor ===
a149 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v151 #trueSuccessor: v152 #falseSuccessor: v153  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B12" 
    xhandlers
    flags 
    probability 4605147975031933422
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v152 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getDeclaringClass(Class.java:1240) [bci: 20]
at java.lang.Class.getEnclosingClass(Class.java:1277) [bci: 10]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v80 
=== Usages ===
=== Predecessor ===
v154 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v80  <|@  <|@
f <@*|@fixed>@ <|@
tid v80 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getEnclosingClass(Class.java:1287) [bci: 43]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v81 
=== Predecessor ===
v152 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4596949555342412057
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v153 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getDeclaringClass(Class.java:1238) [bci: 9]
at java.lang.Class.getEnclosingClass(Class.java:1277) [bci: 10]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v315 
=== Usages ===
=== Predecessor ===
v154 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v315  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v315 <|@
d <@d|@=== Debug Properties ===
barriers: 0
location: ANY_LOCATION
nodeSourcePosition: at java.lang.System.getSecurityManager(System.java:334) [bci: 0]
at java.lang.Class.checkPackageAccess(Class.java:2361) [bci: 0]
at java.lang.Class.getDeclaringClass(Class.java:1238) [bci: 17]
at java.lang.Class.getEnclosingClass(Class.java:1277) [bci: 10]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: a559 
=== Usages ===
=== Predecessor ===
v153 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a559  <|@  <|@
f <@~|@floating>@ <|@
tid v596 <|@
d <@d|@=== Debug Properties ===
displacement: 116
scale: Times1
stamp: void*
=== Inputs ===
base: a268 
index: - 
=== Succesors ===
=== Usages ===
a559 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a268 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a559 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: System.security
nodeSourcePosition: at java.lang.System.getSecurityManager(System.java:334) [bci: 0]
at java.lang.Class.checkPackageAccess(Class.java:2361) [bci: 0]
at java.lang.Class.getDeclaringClass(Class.java:1238) [bci: 17]
at java.lang.Class.getEnclosingClass(Class.java:1277) [bci: 10]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
nullCheck: false
stamp: n# Ljava/lang/SecurityManager;
=== Inputs ===
stateBefore: - 
guard: - 
address: v596 
=== Succesors ===
next: v348 
=== Usages ===
v328 
=== Predecessor ===
v315 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v596 #next: v348  <|@  <|@
f <@~|@floating>@ <|@
tid v328 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.checkPackageAccess(Class.java:2362) [bci: 5]
at java.lang.Class.getDeclaringClass(Class.java:1238) [bci: 17]
at java.lang.Class.getEnclosingClass(Class.java:1277) [bci: 10]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
stamp: void
=== Inputs ===
value: a559 
=== Succesors ===
=== Usages ===
v348 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a559  <|@  <|@
f <@*|@fixed>@ <|@
tid v348 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.checkPackageAccess(Class.java:2362) [bci: 5]
at java.lang.Class.getDeclaringClass(Class.java:1238) [bci: 17]
at java.lang.Class.getEnclosingClass(Class.java:1277) [bci: 10]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v328 
=== Succesors ===
trueSuccessor: v345 
falseSuccessor: v347 
=== Usages ===
=== Predecessor ===
a559 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v328 #trueSuccessor: v345 #falseSuccessor: v347  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B12" 
    xhandlers
    flags 
    probability 4596949555342412057
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v345 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.checkPackageAccess(Class.java:2362) [bci: 5]
at java.lang.Class.getDeclaringClass(Class.java:1238) [bci: 17]
at java.lang.Class.getEnclosingClass(Class.java:1277) [bci: 10]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v316 
=== Usages ===
=== Predecessor ===
v348 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v316  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v316 <|@
d <@d|@=== Debug Properties ===
barriers: 3
location: ANY_LOCATION
nodeSourcePosition: at java.lang.System.getSecurityManager(System.java:334) [bci: 0]
at java.lang.Class.checkPackageAccess(Class.java:2361) [bci: 0]
at java.lang.Class.getDeclaringClass(Class.java:1238) [bci: 17]
at java.lang.Class.getEnclosingClass(Class.java:1277) [bci: 10]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v190 
=== Usages ===
=== Predecessor ===
v345 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v190  <|@  <|@
f <@*|@fixed>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v81 
=== Predecessor ===
v316 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v347 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.checkPackageAccess(Class.java:2362) [bci: 5]
at java.lang.Class.getDeclaringClass(Class.java:1238) [bci: 17]
at java.lang.Class.getEnclosingClass(Class.java:1277) [bci: 10]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v346 
=== Usages ===
=== Predecessor ===
v348 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v346  <|@  <|@
tid ?150 <|@
d <@d|@=== Debug Properties ===
bci: 4
code: ResolvedJavaMethodBytecode<Class.getDeclaringClass()>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.Class.getDeclaringClass(Class.java:1235) [bci: 1]
at java.lang.Class.getEnclosingClass(Class.java:1277) [bci: 10]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
rethrowException: false
sourceFile: Class.java
sourceLine: 1235
stackSize: 1
=== Inputs ===
outerFrameState: ?165 
values: - - a149 
=== Succesors ===
=== Usages ===
v346 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?165 values: - - a149  <|@  <|@
f <@*|@fixed>@ <|@
tid v346 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 317
nodeSourcePosition: at java.lang.Class.checkPackageAccess(Class.java:2362) [bci: 5]
at java.lang.Class.getDeclaringClass(Class.java:1238) [bci: 17]
at java.lang.Class.getEnclosingClass(Class.java:1277) [bci: 10]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?150 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v347 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?150  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4576853462108402432
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getEnclosingMethodInfo(Class.java:1076) [bci: 11]
at java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: j436 
=== Usages ===
=== Predecessor ===
v135 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j436  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j436 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j456 
=== Usages ===
v577 v578 
=== Predecessor ===
v134 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j456  <|@  <|@
f <@~|@floating>@ <|@
tid v577 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j436 
index: - 
=== Succesors ===
=== Usages ===
j456 v458 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j436 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j456 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v577 
=== Succesors ===
next: j457 
=== Usages ===
j545 j462 v589 
=== Predecessor ===
j436 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v577 #next: j457  <|@  <|@
f <@~|@floating>@ <|@
tid v578 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j436 
index: - 
=== Succesors ===
=== Usages ===
j457 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j436 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j457 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v578 
=== Succesors ===
next: v444 
=== Usages ===
v441 
=== Predecessor ===
j456 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v578 #next: v444  <|@  <|@
f <@~|@floating>@ <|@
tid j545 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j456 
y: j544 
=== Succesors ===
=== Usages ===
v441 v458 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j456 y: j544  <|@  <|@
f <@~|@floating>@ <|@
tid v441 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j457 
y: j545 
=== Succesors ===
=== Usages ===
v444 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j457 y: j545  <|@  <|@
f <@*|@fixed>@ <|@
tid v444 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v441 
=== Succesors ===
trueSuccessor: v442 
falseSuccessor: v443 
=== Usages ===
=== Predecessor ===
j457 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v441 #trueSuccessor: v442 #falseSuccessor: v443  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4546924220008466684
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v442 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a449 
=== Usages ===
=== Predecessor ===
v444 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a449  <|@  <|@
tid ?131 <|@
d <@d|@=== Debug Properties ===
bci: 4
code: ResolvedJavaMethodBytecode<Class.getEnclosingMethodInfo()>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.Class.getEnclosingMethodInfo(Class.java:1072) [bci: 1]
at java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
rethrowException: false
sourceFile: Class.java
sourceLine: 1072
stackSize: 1
=== Inputs ===
outerFrameState: ?143 
values: - - a130 
=== Succesors ===
=== Usages ===
a449 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?143 values: - - a130  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a449 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?131 
arguments: v433 i447 i435 
=== Succesors ===
next: j450 
=== Usages ===
j450 
=== Predecessor ===
v442 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?131 arguments: v433 i447 i435 #next: j450  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j450 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a449 
=== Succesors ===
next: v463 
=== Usages ===
j462 
=== Predecessor ===
a449 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a449 #next: v463  <|@  <|@
f <@*|@fixed>@ <|@
tid v463 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v460 
=== Predecessor ===
j450 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576796463705128942
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v443 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v458 
=== Usages ===
=== Predecessor ===
v444 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v458  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v458 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v577 
value: j545 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v454 
=== Usages ===
=== Predecessor ===
v443 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v577 value: j545 stateAfter: - lastLocationAccess: - #next: v454  <|@  <|@
f <@~|@floating>@ <|@
tid v589 <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j456 
index: - 
=== Succesors ===
=== Usages ===
v454 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j456 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v454 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v589 
=== Succesors ===
next: v461 
=== Usages ===
=== Predecessor ===
v458 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v589 #next: v461  <|@  <|@
f <@*|@fixed>@ <|@
tid v461 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v460 
=== Predecessor ===
v454 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4576853462108402432
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j462 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v460 
values: j456 j450 
=== Succesors ===
=== Usages ===
v581 v580 a384 v590 v591 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v460 values: j456 j450  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v460 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v461 v463 
=== Succesors ===
next: a384 
=== Usages ===
j462 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v461 v463 #next: a384  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a384 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j462 
=== Succesors ===
next: j474 
=== Usages ===
a390 
=== Predecessor ===
v460 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j462 #next: j474  <|@  <|@
f <@~|@floating>@ <|@
tid v468 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/Class$EnclosingMethodInfo;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/lang/Class$EnclosingMethodInfo;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j469 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j469 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v468 
=== Succesors ===
=== Usages ===
v579 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v468  <|@  <|@
f <@~|@floating>@ <|@
tid v579 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j469 
index: - 
=== Succesors ===
=== Usages ===
j474 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j469 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j474 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v579 
=== Succesors ===
next: v475 
=== Usages ===
v475 
=== Predecessor ===
a384 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v579 #next: v475  <|@  <|@
f <@~|@floating>@ <|@
tid v580 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j462 
index: - 
=== Succesors ===
=== Usages ===
v475 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j462 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v475 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v580 
value: j474 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v479 
=== Usages ===
=== Predecessor ===
j474 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v580 value: j474 stateAfter: - lastLocationAccess: - #next: v479  <|@  <|@
f <@~|@floating>@ <|@
tid v581 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j462 
index: - 
=== Succesors ===
=== Usages ===
v479 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j462 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v549 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/Class$EnclosingMethodInfo;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/Class$EnclosingMethodInfo;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v479 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v479 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v581 
value: v549 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v483 
=== Usages ===
=== Predecessor ===
v475 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v581 value: v549 stateAfter: - lastLocationAccess: - #next: v483  <|@  <|@
f <@~|@floating>@ <|@
tid v590 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j462 
index: - 
=== Succesors ===
=== Usages ===
v483 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j462 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v483 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v590 
value: j382 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v485 
=== Usages ===
=== Predecessor ===
v479 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v590 value: j382 stateAfter: - lastLocationAccess: - #next: v485  <|@  <|@
f <@~|@floating>@ <|@
tid v591 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j462 
index: - 
=== Succesors ===
=== Usages ===
v485 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j462 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v485 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v591 
value: i107 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a390 
=== Usages ===
=== Predecessor ===
v483 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v591 value: i107 stateAfter: - lastLocationAccess: - #next: a390  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a390 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a384 
=== Succesors ===
next: v391 
=== Usages ===
v318 ?195 v576 
=== Predecessor ===
v485 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a384 #next: v391  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v391 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v139 
=== Usages ===
=== Predecessor ===
a390 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v139  <|@  <|@
tid v318 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.Class$EnclosingMethodInfo.<init>(Class.java:1080) [bci: 2]
at java.lang.Class.getEnclosingMethodInfo(Class.java:1076) [bci: 17]
at java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@6392feb7
stamp: void
targetMethod: HotSpotMethod<Class$EnclosingMethodInfo.<init>(Object[])>
=== Inputs ===
arguments: a390 a130 
=== Succesors ===
=== Usages ===
v139 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a390 a130  <|@  <|@
tid a192 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@55cf5454
hasIdentity: true
objectId: 0
stamp: a!# Ljava/lang/Class$EnclosingMethodInfo;
type: HotSpotType<Ljava/lang/Class$EnclosingMethodInfo;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?195 ?140 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?140 <|@
d <@d|@=== Debug Properties ===
bci: 17
code: ResolvedJavaMethodBytecode<Class.getEnclosingMethodInfo()>
duringCall: true
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.Class$EnclosingMethodInfo.<init>(Class.java:1080) [bci: 2]
at java.lang.Class.getEnclosingMethodInfo(Class.java:1076) [bci: 17]
at java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
rethrowException: false
sourceFile: Class.java
sourceLine: 1076
stackSize: 1
=== Inputs ===
outerFrameState: ?143 
values: - a130 a192 
=== Succesors ===
=== Usages ===
?141 ?404 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?143 values: - a130 a192  <|@  <|@
tid ?195 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a192 
materializedValue: a390 
=== Succesors ===
=== Usages ===
?141 ?404 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a192 materializedValue: a390  <|@  <|@
tid ?404 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<Class$EnclosingMethodInfo.<init>(Object[], Class$1)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Class.java
sourceLine: 1080
stackSize: 0
=== Inputs ===
outerFrameState: ?140 
values: - - - 
virtualObjectMappings: ?195 
=== Succesors ===
=== Usages ===
v139 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?140 values: - - - virtualObjectMappings: ?195  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
bci: 2
nodeSourcePosition: at java.lang.Class$EnclosingMethodInfo.<init>(Class.java:1080) [bci: 2]
at java.lang.Class.getEnclosingMethodInfo(Class.java:1076) [bci: 17]
at java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
polymorphic: false
stamp: void
targetMethod: Direct#Class$EnclosingMethodInfo.<init>
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v318 
stateDuring: ?404 
=== Succesors ===
next: a560 
=== Usages ===
=== Predecessor ===
v391 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v318 stateDuring: ?404 #next: a560  <|@  <|@
f <@~|@floating>@ <|@
tid v576 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a390 
index: - 
=== Succesors ===
=== Usages ===
a560 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a390 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a560 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Class$EnclosingMethodInfo.enclosingClass
nodeSourcePosition: at java.lang.Class$EnclosingMethodInfo.getEnclosingClass(Class.java:1116) [bci: 1]
at java.lang.Class.getEnclosingClass(Class.java:1279) [bci: 18]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
nullCheck: false
stamp: n# Ljava/lang/Class;
=== Inputs ===
stateBefore: - 
guard: - 
address: v576 
=== Succesors ===
next: v352 
=== Usages ===
a321 v595 
=== Predecessor ===
v139 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v576 #next: v352  <|@  <|@
f <@~|@floating>@ <|@
tid a321 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.Class$EnclosingMethodInfo.getEnclosingClass(Class.java:1116) [bci: 1]
at java.lang.Class.getEnclosingClass(Class.java:1279) [bci: 18]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
op: Uncompress
stamp: a# Ljava/lang/Class;
=== Inputs ===
value: a560 
=== Succesors ===
=== Usages ===
v76 a83 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a560  <|@  <|@
f <@~|@floating>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.Class.getEnclosingClass(Class.java:1281) [bci: 24]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a1 
y: a321 
=== Succesors ===
=== Usages ===
v352 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a1 y: a321  <|@  <|@
tid ?141 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<Class$EnclosingMethodInfo.<init>(Object[], Class$1)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.lang.Class$EnclosingMethodInfo.<init>(Class.java:1080) [bci: 2]
at java.lang.Class.getEnclosingMethodInfo(Class.java:1076) [bci: 17]
at java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
rethrowException: false
sourceFile: Class.java
sourceLine: 1080
stackSize: 0
=== Inputs ===
outerFrameState: ?140 
values: - - - 
virtualObjectMappings: ?195 
=== Succesors ===
=== Usages ===
v427 v595 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?140 values: - - - virtualObjectMappings: ?195  <|@  <|@
f <@*|@fixed>@ <|@
tid v352 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getEnclosingClass(Class.java:1281) [bci: 24]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v76 
=== Succesors ===
trueSuccessor: v351 
falseSuccessor: v349 
=== Usages ===
=== Predecessor ===
a560 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v76 #trueSuccessor: v351 #falseSuccessor: v349  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v351 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getEnclosingClass(Class.java:1281) [bci: 24]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v427 
=== Usages ===
=== Predecessor ===
v352 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v427  <|@  <|@
f <@~|@floating>@ <|@
tid i424 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -82451
stableDimension: 0
stamp: i32 [-82451] ⇊00000000fffebded ⇈00000000fffebded
stampKind: i32
value: int[-82451|0xfffffffffffebded]
=== Inputs ===
=== Succesors ===
=== Usages ===
v427 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v427 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?141 
actionAndReason: i424 
speculation: a6 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v351 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?141 actionAndReason: i424 speculation: a6  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576853462108402432
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getEnclosingClass(Class.java:1281) [bci: 24]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v595 
=== Usages ===
=== Predecessor ===
v352 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v595  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v595 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?141 
object: a560 
=== Succesors ===
next: v82 
=== Usages ===
=== Predecessor ===
v349 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?141 object: a560 #next: v82  <|@  <|@
f <@*|@fixed>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getEnclosingClass(Class.java:1287) [bci: 43]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v81 
=== Predecessor ===
v595 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B2" "B11" "B4" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a83 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getEnclosingClass(Class.java:1287) [bci: 43]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
stamp: a# Ljava/lang/Class;
valueDescription: a -
=== Inputs ===
merge: v81 
values: a149 a321 a149 
=== Succesors ===
=== Usages ===
?84 ?39 v7 j537 ?406 v575 v309 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v81 values: a149 a321 a149  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getEnclosingClass(Class.java:1287) [bci: 43]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v80 v82 v190 
=== Succesors ===
next: v88 
=== Usages ===
a83 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v80 v82 v190 #next: v88  <|@  <|@
f <@~|@floating>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getSimpleBinaryName(Class.java:1444) [bci: 6]
stamp: void
=== Inputs ===
value: a83 
=== Succesors ===
=== Usages ===
v88 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a83  <|@  <|@
f <@*|@fixed>@ <|@
tid v88 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getEnclosingClass(Class.java:1287) [bci: 44]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
stamp: void
trueSuccessorProbability: 0.7744184392117807
=== Inputs ===
condition: v7 
=== Succesors ===
trueSuccessor: v86 
falseSuccessor: v87 
=== Usages ===
=== Predecessor ===
v81 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v7 #trueSuccessor: v86 #falseSuccessor: v87  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 4605150560733802449
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getEnclosingClass(Class.java:1290) [bci: 58]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v258 
=== Usages ===
=== Predecessor ===
v88 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v258  <|@  <|@
f <@*|@fixed>@ <|@
tid v258 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a6 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v86 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a6 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B31" 
    xhandlers
    flags 
    probability 4597295452555395260
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getEnclosingClass(Class.java:1288) [bci: 47]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v273 
=== Usages ===
=== Predecessor ===
v88 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v273  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v273 <|@
d <@d|@=== Debug Properties ===
barriers: 0
location: ANY_LOCATION
nodeSourcePosition: at java.lang.System.getSecurityManager(System.java:334) [bci: 0]
at java.lang.Class.checkPackageAccess(Class.java:2361) [bci: 0]
at java.lang.Class.getEnclosingClass(Class.java:1288) [bci: 55]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: a561 
=== Usages ===
=== Predecessor ===
v87 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a561  <|@  <|@
f <@~|@floating>@ <|@
tid v569 <|@
d <@d|@=== Debug Properties ===
displacement: 116
scale: Times1
stamp: void*
=== Inputs ===
base: a268 
index: - 
=== Succesors ===
=== Usages ===
a561 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a268 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a561 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: System.security
nodeSourcePosition: at java.lang.System.getSecurityManager(System.java:334) [bci: 0]
at java.lang.Class.checkPackageAccess(Class.java:2361) [bci: 0]
at java.lang.Class.getEnclosingClass(Class.java:1288) [bci: 55]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
nullCheck: false
stamp: n# Ljava/lang/SecurityManager;
=== Inputs ===
stateBefore: - 
guard: - 
address: v569 
=== Succesors ===
next: v360 
=== Usages ===
v324 
=== Predecessor ===
v273 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v569 #next: v360  <|@  <|@
f <@~|@floating>@ <|@
tid v324 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.checkPackageAccess(Class.java:2362) [bci: 5]
at java.lang.Class.getEnclosingClass(Class.java:1288) [bci: 55]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
stamp: void
=== Inputs ===
value: a561 
=== Succesors ===
=== Usages ===
v360 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a561  <|@  <|@
f <@*|@fixed>@ <|@
tid v360 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.checkPackageAccess(Class.java:2362) [bci: 5]
at java.lang.Class.getEnclosingClass(Class.java:1288) [bci: 55]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v324 
=== Succesors ===
trueSuccessor: v357 
falseSuccessor: v359 
=== Usages ===
=== Predecessor ===
a561 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v324 #trueSuccessor: v357 #falseSuccessor: v359  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B19" 
    xhandlers
    flags 
    probability 4597295452555395260
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v357 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.checkPackageAccess(Class.java:2362) [bci: 5]
at java.lang.Class.getEnclosingClass(Class.java:1288) [bci: 55]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v274 
=== Usages ===
=== Predecessor ===
v360 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v274  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v274 <|@
d <@d|@=== Debug Properties ===
barriers: 3
location: ANY_LOCATION
nodeSourcePosition: at java.lang.System.getSecurityManager(System.java:334) [bci: 0]
at java.lang.Class.checkPackageAccess(Class.java:2361) [bci: 0]
at java.lang.Class.getEnclosingClass(Class.java:1288) [bci: 55]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: a562 
=== Usages ===
=== Predecessor ===
v357 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a562  <|@  <|@
f <@~|@floating>@ <|@
tid v570 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a562 v303 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a562 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Class.name
nodeSourcePosition: at java.lang.Class.getName(Class.java:640) [bci: 1]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 12]
nullCheck: false
stamp: n# Ljava/lang/String;
=== Inputs ===
stateBefore: - 
guard: - 
address: v570 
=== Succesors ===
next: v31 
=== Usages ===
a279 v325 
=== Predecessor ===
v274 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v570 #next: v31  <|@  <|@
f <@~|@floating>@ <|@
tid v325 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getName(Class.java:641) [bci: 6]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 12]
stamp: void
=== Inputs ===
value: a562 
=== Succesors ===
=== Usages ===
v31 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a562  <|@  <|@
f <@~|@floating>@ <|@
tid v575 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a83 
index: - 
=== Succesors ===
=== Usages ===
a563 a564 v311 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a83 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i534 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.Class.getName(Class.java:642) [bci: 16]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 12]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v533 v541 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i528 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.Class.getName(Class.java:642) [bci: 16]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 12]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j529 j538 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j532 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.Class.getName(Class.java:642) [bci: 16]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 12]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v587 v588 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getName(Class.java:641) [bci: 6]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 12]
stamp: void
trueSuccessorProbability: 0.0029740774790130153
=== Inputs ===
condition: v325 
=== Succesors ===
trueSuccessor: v29 
falseSuccessor: v30 
=== Usages ===
=== Predecessor ===
a562 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v325 #trueSuccessor: v29 #falseSuccessor: v30  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4559327156266419042
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getName(Class.java:642) [bci: 9]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: a33 
=== Usages ===
=== Predecessor ===
v31 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a33  <|@  <|@
tid v301 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.Class.getName(Class.java:642) [bci: 11]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 12]
returnStamp: a# Ljava/lang/String;
signature: [Ljdk.vm.ci.meta.JavaType;@5c337785
stamp: void
targetMethod: HotSpotMethod<Class.getName0()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
a33 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?39 <|@
d <@d|@=== Debug Properties ===
bci: 12
code: ResolvedJavaMethodBytecode<Class.getSimpleBinaryName()>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Class.java
sourceLine: 1448
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a83 - 
=== Succesors ===
=== Usages ===
?405 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a83 -  <|@  <|@
tid ?405 <|@
d <@d|@=== Debug Properties ===
bci: 11
code: ResolvedJavaMethodBytecode<Class.getName()>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Class.java
sourceLine: 642
stackSize: 1
=== Inputs ===
outerFrameState: ?39 
values: - - a1 
=== Succesors ===
=== Usages ===
a33 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?39 values: - - a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a33 <|@
d <@d|@=== Debug Properties ===
bci: 11
nodeSourcePosition: at java.lang.Class.getName(Class.java:642) [bci: 11]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 12]
polymorphic: false
stamp: a# Ljava/lang/String;
targetMethod: Direct#Class.getName0
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v301 
stateDuring: ?405 
=== Succesors ===
next: v303 
=== Usages ===
a217 a302 a216 
=== Predecessor ===
v29 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v301 stateDuring: ?405 #next: v303  <|@  <|@
f <@~|@floating>@ <|@
tid a302 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.Class.getName(Class.java:642) [bci: 16]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 12]
op: Compress
stamp: n# Ljava/lang/String;
=== Inputs ===
value: a33 
=== Succesors ===
=== Usages ===
v303 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a33  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v303 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: Class.name
nodeSourcePosition: at java.lang.Class.getName(Class.java:642) [bci: 16]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 12]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v570 
value: a302 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j527 
=== Usages ===
=== Predecessor ===
a33 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v570 value: a302 stateAfter: - lastLocationAccess: - #next: j527  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j527 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.lang.Class.getName(Class.java:642) [bci: 16]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 12]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v533 
=== Usages ===
j529 
=== Predecessor ===
v303 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v533  <|@  <|@
f <@~|@floating>@ <|@
tid j529 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.Class.getName(Class.java:642) [bci: 16]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 12]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j527 
y: i528 
=== Succesors ===
=== Usages ===
v587 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j527 y: i528  <|@  <|@
f <@~|@floating>@ <|@
tid v587 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j529 
index: j532 
=== Succesors ===
=== Usages ===
v533 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j529 index: j532  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v533 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.Class.getName(Class.java:642) [bci: 16]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 12]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v587 
value: i534 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a563 
=== Usages ===
=== Predecessor ===
j527 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v587 value: i534 stateAfter: - lastLocationAccess: - #next: a563  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a563 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Class.name
nodeSourcePosition: at java.lang.Class.getName(Class.java:640) [bci: 1]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 16]
nullCheck: false
stamp: n# Ljava/lang/String;
=== Inputs ===
stateBefore: - 
guard: - 
address: v575 
=== Succesors ===
next: v50 
=== Usages ===
a306 v326 
=== Predecessor ===
v533 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v575 #next: v50  <|@  <|@
f <@~|@floating>@ <|@
tid v326 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getName(Class.java:641) [bci: 6]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 16]
stamp: void
=== Inputs ===
value: a563 
=== Succesors ===
=== Usages ===
v50 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a563  <|@  <|@
f <@*|@fixed>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getName(Class.java:641) [bci: 6]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 16]
stamp: void
trueSuccessorProbability: 0.0029740774790130153
=== Inputs ===
condition: v326 
=== Succesors ===
trueSuccessor: v48 
falseSuccessor: v49 
=== Usages ===
=== Predecessor ===
a563 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v326 #trueSuccessor: v48 #falseSuccessor: v49  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B21" 
    xhandlers
    flags 
    probability 4521821694645981636
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getName(Class.java:642) [bci: 9]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v209 
=== Usages ===
=== Predecessor ===
v50 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v209  <|@  <|@
f <@*|@fixed>@ <|@
tid v209 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v208 
=== Predecessor ===
v48 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4559308752874257424
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getName(Class.java:643) [bci: 19]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v60 
=== Usages ===
=== Predecessor ===
v50 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v60  <|@  <|@
f <@~|@floating>@ <|@
tid a306 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.Class.getName(Class.java:640) [bci: 1]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 16]
op: Uncompress
stamp: a# Ljava/lang/String;
=== Inputs ===
value: a563 
=== Succesors ===
=== Usages ===
a61 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a563  <|@  <|@
f <@*|@fixed>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v59 
=== Predecessor ===
v49 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B20" "B22" 
    xhandlers
    flags 
    probability 4597271280942134137
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getName(Class.java:643) [bci: 19]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: a564 
=== Usages ===
=== Predecessor ===
v31 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a564  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a564 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Class.name
nodeSourcePosition: at java.lang.Class.getName(Class.java:640) [bci: 1]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 16]
nullCheck: false
stamp: n# Ljava/lang/String;
=== Inputs ===
stateBefore: - 
guard: - 
address: v575 
=== Succesors ===
next: v226 
=== Usages ===
a308 v327 
=== Predecessor ===
v30 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v575 #next: v226  <|@  <|@
f <@~|@floating>@ <|@
tid v327 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getName(Class.java:641) [bci: 6]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 16]
stamp: void
=== Inputs ===
value: a564 
=== Succesors ===
=== Usages ===
v226 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a564  <|@  <|@
f <@~|@floating>@ <|@
tid a279 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.Class.getName(Class.java:640) [bci: 1]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 12]
op: Uncompress
stamp: a# Ljava/lang/String;
=== Inputs ===
value: a562 
=== Succesors ===
=== Usages ===
a216 a217 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a562  <|@  <|@
f <@*|@fixed>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getName(Class.java:641) [bci: 6]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 16]
stamp: void
trueSuccessorProbability: 0.0029740774790130153
=== Inputs ===
condition: v327 
=== Succesors ===
trueSuccessor: v224 
falseSuccessor: v225 
=== Usages ===
=== Predecessor ===
a564 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v327 #trueSuccessor: v224 #falseSuccessor: v225  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4559308752874257424
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getName(Class.java:642) [bci: 9]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v210 
=== Usages ===
=== Predecessor ===
v226 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v210  <|@  <|@
f <@*|@fixed>@ <|@
tid v210 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v208 
=== Predecessor ===
v224 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4559327156266419042
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a216 <|@
d <@d|@=== Debug Properties ===
stamp: a# Ljava/lang/String;
valueDescription: a -
=== Inputs ===
merge: v208 
values: a33 a279 
=== Succesors ===
=== Usages ===
?58 a217 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v208 values: a33 a279  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v208 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v209 v210 
=== Succesors ===
next: a52 
=== Usages ===
a216 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v209 v210 #next: a52  <|@  <|@
tid v309 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.Class.getName(Class.java:642) [bci: 11]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 16]
returnStamp: a# Ljava/lang/String;
signature: [Ljdk.vm.ci.meta.JavaType;@7156114e
stamp: void
targetMethod: HotSpotMethod<Class.getName0()>
=== Inputs ===
arguments: a83 
=== Succesors ===
=== Usages ===
a52 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a83  <|@  <|@
tid ?58 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<Class.getSimpleBinaryName()>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Class.java
sourceLine: 1448
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - - - a216 
=== Succesors ===
=== Usages ===
?406 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - a216  <|@  <|@
tid ?406 <|@
d <@d|@=== Debug Properties ===
bci: 11
code: ResolvedJavaMethodBytecode<Class.getName()>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Class.java
sourceLine: 642
stackSize: 1
=== Inputs ===
outerFrameState: ?58 
values: - - a83 
=== Succesors ===
=== Usages ===
a52 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?58 values: - - a83  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a52 <|@
d <@d|@=== Debug Properties ===
bci: 11
nodeSourcePosition: at java.lang.Class.getName(Class.java:642) [bci: 11]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 16]
polymorphic: false
stamp: a# Ljava/lang/String;
targetMethod: Direct#Class.getName0
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v309 
stateDuring: ?406 
=== Succesors ===
next: v311 
=== Usages ===
a61 a310 
=== Predecessor ===
v208 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v309 stateDuring: ?406 #next: v311  <|@  <|@
f <@~|@floating>@ <|@
tid a310 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.Class.getName(Class.java:642) [bci: 16]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 16]
op: Compress
stamp: n# Ljava/lang/String;
=== Inputs ===
value: a52 
=== Succesors ===
=== Usages ===
v311 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a52  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v311 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: Class.name
nodeSourcePosition: at java.lang.Class.getName(Class.java:642) [bci: 16]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 16]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v575 
value: a310 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j537 
=== Usages ===
=== Predecessor ===
a52 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v575 value: a310 stateAfter: - lastLocationAccess: - #next: j537  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j537 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.lang.Class.getName(Class.java:642) [bci: 16]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 16]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a83 
=== Succesors ===
next: v541 
=== Usages ===
j538 
=== Predecessor ===
v311 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a83 #next: v541  <|@  <|@
f <@~|@floating>@ <|@
tid j538 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.Class.getName(Class.java:642) [bci: 16]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 16]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j537 
y: i528 
=== Succesors ===
=== Usages ===
v588 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j537 y: i528  <|@  <|@
f <@~|@floating>@ <|@
tid v588 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j538 
index: j532 
=== Succesors ===
=== Usages ===
v541 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j538 index: j532  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v541 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.Class.getName(Class.java:642) [bci: 16]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 16]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v588 
value: i534 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v62 
=== Usages ===
=== Predecessor ===
j537 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v588 value: i534 stateAfter: - lastLocationAccess: - #next: v62  <|@  <|@
f <@*|@fixed>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v59 
=== Predecessor ===
v541 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4597247181217123645
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v225 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getName(Class.java:643) [bci: 19]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v227 
=== Usages ===
=== Predecessor ===
v226 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v227  <|@  <|@
f <@~|@floating>@ <|@
tid a308 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.Class.getName(Class.java:640) [bci: 1]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 16]
op: Uncompress
stamp: a# Ljava/lang/String;
=== Inputs ===
value: a564 
=== Succesors ===
=== Usages ===
a61 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a564  <|@  <|@
f <@*|@fixed>@ <|@
tid v227 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v59 
=== Predecessor ===
v225 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B18" "B21" "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4597295452555395260
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a61 <|@
d <@d|@=== Debug Properties ===
stamp: a# Ljava/lang/String;
valueDescription: a -
=== Inputs ===
merge: v59 
values: a306 a52 a308 
=== Succesors ===
=== Usages ===
?17 v571 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v59 values: a306 a52 a308  <|@  <|@
f <@~|@floating>@ <|@
tid a217 <|@
d <@d|@=== Debug Properties ===
stamp: a# Ljava/lang/String;
valueDescription: a -
=== Inputs ===
merge: v59 
values: a33 a216 a279 
=== Succesors ===
=== Usages ===
?17 v573 v188 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v59 values: a33 a216 a279  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v60 v62 v227 
=== Succesors ===
next: a565 
=== Usages ===
a61 a217 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v60 v62 v227 #next: a565  <|@  <|@
tid ?17 <|@
d <@d|@=== Debug Properties ===
bci: 19
code: ResolvedJavaMethodBytecode<Class.getSimpleBinaryName()>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 16]
rethrowException: false
sourceFile: Class.java
sourceLine: 1448
stackSize: 2
=== Inputs ===
outerFrameState: - 
values: - - - a217 a61 
=== Succesors ===
=== Usages ===
v413 a497 a565 v594 a566 i567 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - a217 a61  <|@  <|@
f <@~|@floating>@ <|@
tid v571 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a61 
index: - 
=== Succesors ===
=== Usages ===
a565 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a61 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a565 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 19]
nullCheck: true
stamp: n# [C
=== Inputs ===
stateBefore: ?17 
guard: - 
address: v571 
=== Succesors ===
next: v594 
=== Usages ===
v572 v594 
=== Predecessor ===
v59 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?17 guard: - address: v571 #next: v594  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v594 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?17 
object: a565 
=== Succesors ===
next: a566 
=== Usages ===
=== Predecessor ===
a565 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?17 object: a565 #next: a566  <|@  <|@
f <@~|@floating>@ <|@
tid v573 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a217 
index: - 
=== Succesors ===
=== Usages ===
a566 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a217 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a566 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.substring(String.java:1929) [bci: 14]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 22]
nullCheck: true
stamp: n# [C
=== Inputs ===
stateBefore: ?17 
guard: - 
address: v573 
=== Succesors ===
next: i567 
=== Usages ===
a293 v574 
=== Predecessor ===
v594 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?17 guard: - address: v573 #next: i567  <|@  <|@
f <@~|@floating>@ <|@
tid v574 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a566 
=== Succesors ===
=== Usages ===
i567 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a566  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i567 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.substring(String.java:1929) [bci: 17]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 22]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?17 
guard: - 
address: v574 
=== Succesors ===
next: i568 
=== Usages ===
i110 v123 
=== Predecessor ===
a566 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?17 guard: - address: v574 #next: i568  <|@  <|@
f <@~|@floating>@ <|@
tid v572 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a565 
=== Succesors ===
=== Usages ===
i568 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a565  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i568 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 19]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v572 
=== Succesors ===
next: v380 
=== Usages ===
v123 i110 v112 v300 
=== Predecessor ===
i567 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v572 #next: v380  <|@  <|@
f <@~|@floating>@ <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.String.substring(String.java:1930) [bci: 22]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 22]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i567 
y: i568 
=== Succesors ===
=== Usages ===
v380 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i567 y: i568  <|@  <|@
f <@*|@fixed>@ <|@
tid v380 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1930) [bci: 22]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 22]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v123 
=== Succesors ===
trueSuccessor: v379 
falseSuccessor: v377 
=== Usages ===
=== Predecessor ===
i568 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v123 #trueSuccessor: v379 #falseSuccessor: v377  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v379 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1930) [bci: 22]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v413 
=== Usages ===
=== Predecessor ===
v380 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v413  <|@  <|@
f <@~|@floating>@ <|@
tid i421 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -76563
stableDimension: 0
stamp: i32 [-76563] ⇊00000000fffed4ed ⇈00000000fffed4ed
stampKind: i32
value: int[-76563|0xfffffffffffed4ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
v413 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v413 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?17 
actionAndReason: i421 
speculation: a6 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v379 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?17 actionAndReason: i421 speculation: a6  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4597295452555395260
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v377 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1930) [bci: 22]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v115 
=== Usages ===
=== Predecessor ===
v380 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v115  <|@  <|@
f <@~|@floating>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.substring(String.java:1933) [bci: 35]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 22]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i568 
y: i107 
=== Succesors ===
=== Usages ===
v115 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i568 y: i107  <|@  <|@
f <@*|@fixed>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1933) [bci: 35]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 22]
stamp: void
trueSuccessorProbability: 0.9651155608201366
=== Inputs ===
condition: v112 
=== Succesors ===
trueSuccessor: v113 
falseSuccessor: v114 
=== Usages ===
=== Predecessor ===
v377 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v112 #trueSuccessor: v113 #falseSuccessor: v114  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors 
    xhandlers
    flags 
    probability 4597011931638863298
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1933) [bci: 38]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v188 
=== Usages ===
=== Predecessor ===
v115 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v188  <|@  <|@
f <@*|@fixed>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a217 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v113 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a217 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4575689956445564837
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1933) [bci: 42]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: j486 
=== Usages ===
=== Predecessor ===
v115 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j486  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j486 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j501 
=== Usages ===
v582 v583 
=== Predecessor ===
v114 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j501  <|@  <|@
f <@~|@floating>@ <|@
tid v582 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j486 
index: - 
=== Succesors ===
=== Usages ===
j501 v503 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j486 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j501 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v582 
=== Succesors ===
next: j502 
=== Usages ===
j552 j507 v592 
=== Predecessor ===
j486 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v582 #next: j502  <|@  <|@
f <@~|@floating>@ <|@
tid v583 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j486 
index: - 
=== Succesors ===
=== Usages ===
j502 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j486 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j502 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v583 
=== Succesors ===
next: v494 
=== Usages ===
v491 
=== Predecessor ===
j501 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v583 #next: v494  <|@  <|@
f <@~|@floating>@ <|@
tid j552 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j501 
y: j544 
=== Succesors ===
=== Usages ===
v491 v503 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j501 y: j544  <|@  <|@
f <@~|@floating>@ <|@
tid v491 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j502 
y: j552 
=== Succesors ===
=== Usages ===
v494 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j502 y: j552  <|@  <|@
f <@*|@fixed>@ <|@
tid v494 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v491 
=== Succesors ===
trueSuccessor: v492 
falseSuccessor: v493 
=== Usages ===
=== Predecessor ===
j502 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v491 #trueSuccessor: v492 #falseSuccessor: v493  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4545434932760034561
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v492 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a497 
=== Usages ===
=== Predecessor ===
v494 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a497  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a497 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?17 
arguments: v433 i447 i435 
=== Succesors ===
next: j498 
=== Usages ===
j498 
=== Predecessor ===
v492 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?17 arguments: v433 i447 i435 #next: j498  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j498 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a497 
=== Succesors ===
next: v508 
=== Usages ===
j507 
=== Predecessor ===
a497 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a497 #next: v508  <|@  <|@
f <@*|@fixed>@ <|@
tid v508 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v505 
=== Predecessor ===
j498 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4575631964789415510
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v493 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v503 
=== Usages ===
=== Predecessor ===
v494 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v503  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v503 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v582 
value: j552 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v500 
=== Usages ===
=== Predecessor ===
v493 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v582 value: j552 stateAfter: - lastLocationAccess: - #next: v500  <|@  <|@
f <@~|@floating>@ <|@
tid v592 <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j501 
index: - 
=== Succesors ===
=== Usages ===
v500 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j501 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v500 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v592 
=== Succesors ===
next: v506 
=== Usages ===
=== Predecessor ===
v503 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v592 #next: v506  <|@  <|@
f <@*|@fixed>@ <|@
tid v506 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v505 
=== Predecessor ===
v500 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B28" 
    successors 
    xhandlers
    flags 
    probability 4575689956445564837
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j507 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v505 
values: j501 j498 
=== Succesors ===
=== Usages ===
v586 v585 a394 v593 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v505 values: j501 j498  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v505 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v506 v508 
=== Succesors ===
next: a394 
=== Usages ===
j507 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v506 v508 #next: a394  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a394 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j507 
=== Succesors ===
next: j518 
=== Usages ===
a399 
=== Predecessor ===
v505 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j507 #next: j518  <|@  <|@
f <@~|@floating>@ <|@
tid v513 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/lang/String;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j514 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j514 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v513 
=== Succesors ===
=== Usages ===
v584 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v513  <|@  <|@
f <@~|@floating>@ <|@
tid v584 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j514 
index: - 
=== Succesors ===
=== Usages ===
j518 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j514 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j518 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v584 
=== Succesors ===
next: v519 
=== Usages ===
v519 
=== Predecessor ===
a394 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v584 #next: v519  <|@  <|@
f <@~|@floating>@ <|@
tid v585 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j507 
index: - 
=== Succesors ===
=== Usages ===
v519 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j507 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v519 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v585 
value: j518 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v522 
=== Usages ===
=== Predecessor ===
j518 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v585 value: j518 stateAfter: - lastLocationAccess: - #next: v522  <|@  <|@
f <@~|@floating>@ <|@
tid v586 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j507 
index: - 
=== Succesors ===
=== Usages ===
v522 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j507 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v555 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v522 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v522 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v586 
value: v555 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v526 
=== Usages ===
=== Predecessor ===
v519 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v586 value: v555 stateAfter: - lastLocationAccess: - #next: v526  <|@  <|@
f <@~|@floating>@ <|@
tid v593 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j507 
index: - 
=== Succesors ===
=== Usages ===
v526 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j507 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v526 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v593 
value: j382 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a399 
=== Usages ===
=== Predecessor ===
v522 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v593 value: j382 stateAfter: - lastLocationAccess: - #next: a399  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a399 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a394 
=== Succesors ===
next: v400 
=== Usages ===
v300 ?199 v189 
=== Predecessor ===
v526 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a394 #next: v400  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v400 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v119 
=== Usages ===
=== Predecessor ===
a399 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v119  <|@  <|@
f <@~|@floating>@ <|@
tid a293 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.substring(String.java:1929) [bci: 14]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 22]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a566 
=== Succesors ===
=== Usages ===
v300 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a566  <|@  <|@
f <@~|@floating>@ <|@
tid i110 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.String.substring(String.java:1929) [bci: 19]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 22]
stamp: i32 [-2147483647 - 2147483647]
=== Inputs ===
x: i567 
y: i568 
=== Succesors ===
=== Usages ===
v300 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i567 y: i568  <|@  <|@
tid v300 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.String.substring(String.java:1933) [bci: 52]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 22]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@fcb9441
stamp: void
targetMethod: HotSpotMethod<String.<init>(char[], int, int)>
=== Inputs ===
arguments: a399 a293 i568 i110 
=== Succesors ===
=== Usages ===
v119 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a399 a293 i568 i110  <|@  <|@
tid ?124 <|@
d <@d|@=== Debug Properties ===
bci: 22
code: ResolvedJavaMethodBytecode<Class.getSimpleBinaryName()>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Class.java
sourceLine: 1448
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - 
=== Succesors ===
=== Usages ===
?407 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - -  <|@  <|@
tid a196 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@5a86b9fc
hasIdentity: true
objectId: 1
stamp: a!# Ljava/lang/String;
type: HotSpotType<Ljava/lang/String;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?199 ?407 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?199 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a196 
materializedValue: a399 
=== Succesors ===
=== Usages ===
?407 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a196 materializedValue: a399  <|@  <|@
tid ?407 <|@
d <@d|@=== Debug Properties ===
bci: 52
code: ResolvedJavaMethodBytecode<String.substring(int)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: String.java
sourceLine: 1933
stackSize: 1
=== Inputs ===
outerFrameState: ?124 
values: - - - a196 
virtualObjectMappings: ?199 
=== Succesors ===
=== Usages ===
v119 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?124 values: - - - a196 virtualObjectMappings: ?199  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
bci: 52
nodeSourcePosition: at java.lang.String.substring(String.java:1933) [bci: 52]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 22]
polymorphic: false
stamp: void
targetMethod: Direct#String.<init>
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v300 
stateDuring: ?407 
=== Succesors ===
next: v189 
=== Usages ===
=== Predecessor ===
v400 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v300 stateDuring: ?407 #next: v189  <|@  <|@
f <@*|@fixed>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a399 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v119 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a399 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v359 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.checkPackageAccess(Class.java:2362) [bci: 5]
at java.lang.Class.getEnclosingClass(Class.java:1288) [bci: 55]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v358 
=== Usages ===
=== Predecessor ===
v360 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v358  <|@  <|@
tid ?84 <|@
d <@d|@=== Debug Properties ===
bci: 43
code: ResolvedJavaMethodBytecode<Class.getEnclosingClass()>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Class.java
sourceLine: 1287
stackSize: 0
=== Inputs ===
outerFrameState: ?100 
values: - - a83 - 
=== Succesors ===
=== Usages ===
v358 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?100 values: - - a83 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v358 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 275
nodeSourcePosition: at java.lang.Class.checkPackageAccess(Class.java:2362) [bci: 5]
at java.lang.Class.getEnclosingClass(Class.java:1288) [bci: 55]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?84 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v359 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?84  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a130 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a130  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/lang/Class;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?405 ?100 v76 v312 v570 v301 v267 ?143 j527 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid v267 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.Class.getEnclosingMethodInfo(Class.java:1072) [bci: 1]
at java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
returnStamp: a [Ljava/lang/Object;
signature: [Ljdk.vm.ci.meta.JavaType;@166775f8
stamp: void
targetMethod: HotSpotMethod<Class.getEnclosingMethod0()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
a130 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?100 <|@
d <@d|@=== Debug Properties ===
bci: 1
code: ResolvedJavaMethodBytecode<Class.getSimpleBinaryName()>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Class.java
sourceLine: 1443
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - 
=== Succesors ===
=== Usages ===
?143 ?165 ?84 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - -  <|@  <|@
tid ?143 <|@
d <@d|@=== Debug Properties ===
bci: 1
code: ResolvedJavaMethodBytecode<Class.getEnclosingClass()>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Class.java
sourceLine: 1272
stackSize: 0
=== Inputs ===
outerFrameState: ?100 
values: a1 - - - 
=== Succesors ===
=== Usages ===
?131 ?140 ?402 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?100 values: a1 - - -  <|@  <|@
tid ?402 <|@
d <@d|@=== Debug Properties ===
bci: 1
code: ResolvedJavaMethodBytecode<Class.getEnclosingMethodInfo()>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Class.java
sourceLine: 1072
stackSize: 0
=== Inputs ===
outerFrameState: ?143 
values: - - 
=== Succesors ===
=== Usages ===
a130 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?143 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a130 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 1
nodeSourcePosition: at java.lang.Class.getEnclosingMethodInfo(Class.java:1072) [bci: 1]
at java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
polymorphic: false
stamp: a [Ljava/lang/Object;
targetMethod: Direct#Class.getEnclosingMethod0
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v267 
stateDuring: ?402 
=== Succesors ===
next: v135 
=== Usages ===
?131 v132 v318 ?140 
=== Predecessor ===
v0 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v267 stateDuring: ?402 #next: v135  <|@  <|@
f <@~|@floating>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getEnclosingMethodInfo(Class.java:1073) [bci: 6]
at java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
stamp: void
=== Inputs ===
value: a130 
=== Succesors ===
=== Usages ===
v135 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a130  <|@  <|@
f <@~|@floating>@ <|@
tid a6 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Class.getSimpleBinaryName(Class.java:1444) [bci: 6]
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v258 v413 v427 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i107 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.substring(String.java:1926) [bci: 1]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 22]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v112 v485 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j382 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v483 v526 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i435 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
a449 a497 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i447 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
a449 a497 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v433 <|@
result v2|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a449 a497 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j544 <|@
result long[24|0x18] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 24
stableDimension: 0
stamp: i64 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j545 j552 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a268 <|@
result v3|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.getSecurityManager(System.java:334) [bci: 0]
at java.lang.Class.checkPackageAccess(Class.java:2361) [bci: 0]
at java.lang.Class.getEnclosingClass(Class.java:1288) [bci: 55]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
rawvalue: Class:java.lang.System
stableDimension: 0
stamp: a!# Ljava/lang/Class;
stampKind: a -
value: Object[Class:java.lang.System]
=== Inputs ===
=== Succesors ===
=== Usages ===
v569 v596 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v135 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getEnclosingMethodInfo(Class.java:1073) [bci: 6]
at java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
stamp: void
trueSuccessorProbability: 0.9901123531748284
=== Inputs ===
condition: v132 
=== Succesors ===
trueSuccessor: v133 
falseSuccessor: v134 
=== Usages ===
=== Predecessor ===
a130 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v132 #trueSuccessor: v133 #falseSuccessor: v134  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7bd8a449 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Class.getEnclosingMethodInfo(Class.java:1072) [bci: 1]
locals: - - 
java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1]
locals: v0|QWORD[.] - - - 
java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Class.getEnclosingMethod0()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1, 1, 1] <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:java.lang.System] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9901123531748284 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607093358794902580
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getEnclosingMethodInfo(Class.java:1074) [bci: 9]
at java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: a149 
=== Usages ===
=== Predecessor ===
v135 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a149  <|@  <|@
tid v312 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.Class.getDeclaringClass(Class.java:1235) [bci: 1]
at java.lang.Class.getEnclosingClass(Class.java:1277) [bci: 10]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
returnStamp: a# Ljava/lang/Class;
signature: [Ljdk.vm.ci.meta.JavaType;@526580cd
stamp: void
targetMethod: HotSpotMethod<Class.getDeclaringClass0()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
a149 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?165 <|@
d <@d|@=== Debug Properties ===
bci: 10
code: ResolvedJavaMethodBytecode<Class.getEnclosingClass()>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Class.java
sourceLine: 1277
stackSize: 0
=== Inputs ===
outerFrameState: ?100 
values: - - - - 
=== Succesors ===
=== Usages ===
?150 ?403 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?100 values: - - - -  <|@  <|@
tid ?403 <|@
d <@d|@=== Debug Properties ===
bci: 1
code: ResolvedJavaMethodBytecode<Class.getDeclaringClass()>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Class.java
sourceLine: 1235
stackSize: 0
=== Inputs ===
outerFrameState: ?165 
values: - - 
=== Succesors ===
=== Usages ===
a149 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?165 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a149 <|@
result v4|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 1
nodeSourcePosition: at java.lang.Class.getDeclaringClass(Class.java:1235) [bci: 1]
at java.lang.Class.getEnclosingClass(Class.java:1277) [bci: 10]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
polymorphic: false
stamp: a# Ljava/lang/Class;
targetMethod: Direct#Class.getDeclaringClass0
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v312 
stateDuring: ?403 
=== Succesors ===
next: v154 
=== Usages ===
?150 v151 a83 a83 
=== Predecessor ===
v133 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v312 stateDuring: ?403 #next: v154  <|@  <|@
f <@~|@floating>@ <|@
tid v151 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getDeclaringClass(Class.java:1237) [bci: 6]
at java.lang.Class.getEnclosingClass(Class.java:1277) [bci: 10]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
stamp: void
=== Inputs ===
value: a149 
=== Succesors ===
=== Usages ===
v154 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a149  <|@  <|@
f <@*|@fixed>@ <|@
tid v154 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getDeclaringClass(Class.java:1237) [bci: 6]
at java.lang.Class.getEnclosingClass(Class.java:1277) [bci: 10]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
stamp: void
trueSuccessorProbability: 0.7818621453964507
=== Inputs ===
condition: v151 
=== Succesors ===
trueSuccessor: v152 
falseSuccessor: v153 
=== Usages ===
=== Predecessor ===
a149 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v151 #trueSuccessor: v152 #falseSuccessor: v153  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Class.getDeclaringClass(Class.java:1235) [bci: 1]
locals: - - 
java.lang.Class.getEnclosingClass(Class.java:1277) [bci: 10]
locals: - - - - 
java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Class.getDeclaringClass0()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1, 10, 1] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|QWORD[.], y: v4|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7818621453964507 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B12" 
    xhandlers
    flags 
    probability 4605147975031933422
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v152 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getDeclaringClass(Class.java:1240) [bci: 20]
at java.lang.Class.getEnclosingClass(Class.java:1277) [bci: 10]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v80 
=== Usages ===
=== Predecessor ===
v154 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v80  <|@  <|@
f <@*|@fixed>@ <|@
tid v80 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getEnclosingClass(Class.java:1287) [bci: 43]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v81 
=== Predecessor ===
v152 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v4|QWORD[.]] destination: B2 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4596949555342412057
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v153 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getDeclaringClass(Class.java:1238) [bci: 9]
at java.lang.Class.getEnclosingClass(Class.java:1277) [bci: 10]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v315 
=== Usages ===
=== Predecessor ===
v154 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v315  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v315 <|@
d <@d|@=== Debug Properties ===
barriers: 0
location: ANY_LOCATION
nodeSourcePosition: at java.lang.System.getSecurityManager(System.java:334) [bci: 0]
at java.lang.Class.checkPackageAccess(Class.java:2361) [bci: 0]
at java.lang.Class.getDeclaringClass(Class.java:1238) [bci: 17]
at java.lang.Class.getEnclosingClass(Class.java:1277) [bci: 10]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: a559 
=== Usages ===
=== Predecessor ===
v153 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a559  <|@  <|@
f <@~|@floating>@ <|@
tid v596 <|@
result [v3|QWORD[.] + 116] <|@
d <@d|@=== Debug Properties ===
displacement: 116
scale: Times1
stamp: void*
=== Inputs ===
base: a268 
index: - 
=== Succesors ===
=== Usages ===
a559 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a268 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a559 <|@
result v5|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: System.security
nodeSourcePosition: at java.lang.System.getSecurityManager(System.java:334) [bci: 0]
at java.lang.Class.checkPackageAccess(Class.java:2361) [bci: 0]
at java.lang.Class.getDeclaringClass(Class.java:1238) [bci: 17]
at java.lang.Class.getEnclosingClass(Class.java:1277) [bci: 10]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
nullCheck: false
stamp: n# Ljava/lang/SecurityManager;
=== Inputs ===
stateBefore: - 
guard: - 
address: v596 
=== Succesors ===
next: v348 
=== Usages ===
v328 
=== Predecessor ===
v315 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v596 #next: v348  <|@  <|@
f <@~|@floating>@ <|@
tid v328 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.checkPackageAccess(Class.java:2362) [bci: 5]
at java.lang.Class.getDeclaringClass(Class.java:1238) [bci: 17]
at java.lang.Class.getEnclosingClass(Class.java:1277) [bci: 10]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
stamp: void
=== Inputs ===
value: a559 
=== Succesors ===
=== Usages ===
v348 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a559  <|@  <|@
f <@*|@fixed>@ <|@
tid v348 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.checkPackageAccess(Class.java:2362) [bci: 5]
at java.lang.Class.getDeclaringClass(Class.java:1238) [bci: 17]
at java.lang.Class.getEnclosingClass(Class.java:1277) [bci: 10]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v328 
=== Succesors ===
trueSuccessor: v345 
falseSuccessor: v347 
=== Usages ===
=== Predecessor ===
a559 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v328 #trueSuccessor: v345 #falseSuccessor: v347  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[.] = MOV [v3|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v5|DWORD[.], y: v5|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B12" 
    xhandlers
    flags 
    probability 4596949555342412057
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v345 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.checkPackageAccess(Class.java:2362) [bci: 5]
at java.lang.Class.getDeclaringClass(Class.java:1238) [bci: 17]
at java.lang.Class.getEnclosingClass(Class.java:1277) [bci: 10]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v316 
=== Usages ===
=== Predecessor ===
v348 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v316  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v316 <|@
d <@d|@=== Debug Properties ===
barriers: 3
location: ANY_LOCATION
nodeSourcePosition: at java.lang.System.getSecurityManager(System.java:334) [bci: 0]
at java.lang.Class.checkPackageAccess(Class.java:2361) [bci: 0]
at java.lang.Class.getDeclaringClass(Class.java:1238) [bci: 17]
at java.lang.Class.getEnclosingClass(Class.java:1277) [bci: 10]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v190 
=== Usages ===
=== Predecessor ===
v345 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v190  <|@  <|@
f <@*|@fixed>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v81 
=== Predecessor ===
v316 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v4|QWORD[.]] destination: B4 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v347 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.checkPackageAccess(Class.java:2362) [bci: 5]
at java.lang.Class.getDeclaringClass(Class.java:1238) [bci: 17]
at java.lang.Class.getEnclosingClass(Class.java:1277) [bci: 10]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v346 
=== Usages ===
=== Predecessor ===
v348 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v346  <|@  <|@
tid ?150 <|@
d <@d|@=== Debug Properties ===
bci: 4
code: ResolvedJavaMethodBytecode<Class.getDeclaringClass()>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.Class.getDeclaringClass(Class.java:1235) [bci: 1]
at java.lang.Class.getEnclosingClass(Class.java:1277) [bci: 10]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
rethrowException: false
sourceFile: Class.java
sourceLine: 1235
stackSize: 1
=== Inputs ===
outerFrameState: ?165 
values: - - a149 
=== Succesors ===
=== Usages ===
v346 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?165 values: - - a149  <|@  <|@
f <@*|@fixed>@ <|@
tid v346 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 317
nodeSourcePosition: at java.lang.Class.checkPackageAccess(Class.java:2362) [bci: 5]
at java.lang.Class.getDeclaringClass(Class.java:1238) [bci: 17]
at java.lang.Class.getEnclosingClass(Class.java:1277) [bci: 10]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?150 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v347 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?150  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -81171 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Class.getDeclaringClass(Class.java:1235) [bci: 4]
stack: v4|QWORD[.] 
locals: - - 
java.lang.Class.getEnclosingClass(Class.java:1277) [bci: 10]
locals: - - - - 
java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 10, 1] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4576853462108402432
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getEnclosingMethodInfo(Class.java:1076) [bci: 11]
at java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: j436 
=== Usages ===
=== Predecessor ===
v135 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j436  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j436 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j456 
=== Usages ===
v577 v578 
=== Predecessor ===
v134 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j456  <|@  <|@
f <@~|@floating>@ <|@
tid v577 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j436 
index: - 
=== Succesors ===
=== Usages ===
j456 v458 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j436 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j456 <|@
result v6|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v577 
=== Succesors ===
next: j457 
=== Usages ===
j545 j462 v589 
=== Predecessor ===
j436 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v577 #next: j457  <|@  <|@
f <@~|@floating>@ <|@
tid v578 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j436 
index: - 
=== Succesors ===
=== Usages ===
j457 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j436 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j457 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v578 
=== Succesors ===
next: v444 
=== Usages ===
v441 
=== Predecessor ===
j456 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v578 #next: v444  <|@  <|@
f <@~|@floating>@ <|@
tid j545 <|@
result v7|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j456 
y: j544 
=== Succesors ===
=== Usages ===
v441 v458 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j456 y: j544  <|@  <|@
f <@~|@floating>@ <|@
tid v441 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j457 
y: j545 
=== Succesors ===
=== Usages ===
v444 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j457 y: j545  <|@  <|@
f <@*|@fixed>@ <|@
tid v444 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v441 
=== Succesors ===
trueSuccessor: v442 
falseSuccessor: v443 
=== Usages ===
=== Predecessor ===
j457 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v441 #trueSuccessor: v442 #falseSuccessor: v443  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = LEA [v6|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4546924220008466684
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v442 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a449 
=== Usages ===
=== Predecessor ===
v444 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a449  <|@  <|@
tid ?131 <|@
d <@d|@=== Debug Properties ===
bci: 4
code: ResolvedJavaMethodBytecode<Class.getEnclosingMethodInfo()>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.Class.getEnclosingMethodInfo(Class.java:1072) [bci: 1]
at java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
rethrowException: false
sourceFile: Class.java
sourceLine: 1072
stackSize: 1
=== Inputs ===
outerFrameState: ?143 
values: - - a130 
=== Succesors ===
=== Usages ===
a449 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?143 values: - - a130  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a449 <|@
result v8|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?131 
arguments: v433 i447 i435 
=== Succesors ===
next: j450 
=== Usages ===
j450 
=== Predecessor ===
v442 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?131 arguments: v433 i447 i435 #next: j450  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j450 <|@
result v8|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a449 
=== Succesors ===
next: v463 
=== Usages ===
j462 
=== Predecessor ===
a449 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a449 #next: v463  <|@  <|@
f <@*|@fixed>@ <|@
tid v463 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v460 
=== Predecessor ===
j450 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v2|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Class.getEnclosingMethodInfo(Class.java:1072) [bci: 4]
stack: v1|QWORD[.] 
locals: - - 
java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1]
locals: v0|QWORD[.] - - - 
java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:4, 1, 1] <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v8|QWORD[.]] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576796463705128942
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v443 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v458 
=== Usages ===
=== Predecessor ===
v444 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v458  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v458 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v577 
value: j545 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v454 
=== Usages ===
=== Predecessor ===
v443 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v577 value: j545 stateAfter: - lastLocationAccess: - #next: v454  <|@  <|@
f <@~|@floating>@ <|@
tid v589 <|@
result [v6|QWORD + 216] <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j456 
index: - 
=== Succesors ===
=== Usages ===
v454 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j456 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v454 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v589 
=== Succesors ===
next: v461 
=== Usages ===
=== Predecessor ===
v458 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v589 #next: v461  <|@  <|@
f <@*|@fixed>@ <|@
tid v461 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v460 
=== Predecessor ===
v454 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v7|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v6|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v6|QWORD] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4576853462108402432
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j462 <|@
result v9|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v460 
values: j456 j450 
=== Succesors ===
=== Usages ===
v581 v580 a384 v590 v591 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v460 values: j456 j450  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v460 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v461 v463 
=== Succesors ===
next: a384 
=== Usages ===
j462 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v461 v463 #next: a384  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a384 <|@
result v10|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j462 
=== Succesors ===
next: j474 
=== Usages ===
a390 
=== Predecessor ===
v460 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j462 #next: j474  <|@  <|@
f <@~|@floating>@ <|@
tid v468 <|@
result v11|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/Class$EnclosingMethodInfo;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/lang/Class$EnclosingMethodInfo;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j469 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j469 <|@
result v11|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v468 
=== Succesors ===
=== Usages ===
v579 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v468  <|@  <|@
f <@~|@floating>@ <|@
tid v579 <|@
result [v11|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j469 
index: - 
=== Succesors ===
=== Usages ===
j474 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j469 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j474 <|@
result v12|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v579 
=== Succesors ===
next: v475 
=== Usages ===
v475 
=== Predecessor ===
a384 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v579 #next: v475  <|@  <|@
f <@~|@floating>@ <|@
tid v580 <|@
result [v9|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j462 
index: - 
=== Succesors ===
=== Usages ===
v475 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j462 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v475 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v580 
value: j474 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v479 
=== Usages ===
=== Predecessor ===
j474 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v580 value: j474 stateAfter: - lastLocationAccess: - #next: v479  <|@  <|@
f <@~|@floating>@ <|@
tid v581 <|@
result [v9|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j462 
index: - 
=== Succesors ===
=== Usages ===
v479 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j462 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v549 <|@
result meta{HotSpotType<Ljava/lang/Class$EnclosingMethodInfo;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/Class$EnclosingMethodInfo;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/Class$EnclosingMethodInfo;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v479 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v479 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v581 
value: v549 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v483 
=== Usages ===
=== Predecessor ===
v475 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v581 value: v549 stateAfter: - lastLocationAccess: - #next: v483  <|@  <|@
f <@~|@floating>@ <|@
tid v590 <|@
result [v9|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j462 
index: - 
=== Succesors ===
=== Usages ===
v483 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j462 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v483 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v590 
value: j382 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v485 
=== Usages ===
=== Predecessor ===
v479 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v590 value: j382 stateAfter: - lastLocationAccess: - #next: v485  <|@  <|@
f <@~|@floating>@ <|@
tid v591 <|@
result [v9|QWORD[*] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j462 
index: - 
=== Succesors ===
=== Usages ===
v485 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j462 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v485 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v591 
value: i107 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a390 
=== Usages ===
=== Predecessor ===
v483 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v591 value: i107 stateAfter: - lastLocationAccess: - #next: a390  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a390 <|@
result v10|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a384 
=== Succesors ===
next: v391 
=== Usages ===
v318 ?195 v576 
=== Predecessor ===
v485 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a384 #next: v391  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v391 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v139 
=== Usages ===
=== Predecessor ===
a390 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v139  <|@  <|@
tid v318 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.Class$EnclosingMethodInfo.<init>(Class.java:1080) [bci: 2]
at java.lang.Class.getEnclosingMethodInfo(Class.java:1076) [bci: 17]
at java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@6392feb7
stamp: void
targetMethod: HotSpotMethod<Class$EnclosingMethodInfo.<init>(Object[])>
=== Inputs ===
arguments: a390 a130 
=== Succesors ===
=== Usages ===
v139 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a390 a130  <|@  <|@
tid a192 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@55cf5454
hasIdentity: true
objectId: 0
stamp: a!# Ljava/lang/Class$EnclosingMethodInfo;
type: HotSpotType<Ljava/lang/Class$EnclosingMethodInfo;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?195 ?140 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?140 <|@
d <@d|@=== Debug Properties ===
bci: 17
code: ResolvedJavaMethodBytecode<Class.getEnclosingMethodInfo()>
duringCall: true
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.Class$EnclosingMethodInfo.<init>(Class.java:1080) [bci: 2]
at java.lang.Class.getEnclosingMethodInfo(Class.java:1076) [bci: 17]
at java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
rethrowException: false
sourceFile: Class.java
sourceLine: 1076
stackSize: 1
=== Inputs ===
outerFrameState: ?143 
values: - a130 a192 
=== Succesors ===
=== Usages ===
?141 ?404 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?143 values: - a130 a192  <|@  <|@
tid ?195 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a192 
materializedValue: a390 
=== Succesors ===
=== Usages ===
?141 ?404 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a192 materializedValue: a390  <|@  <|@
tid ?404 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<Class$EnclosingMethodInfo.<init>(Object[], Class$1)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Class.java
sourceLine: 1080
stackSize: 0
=== Inputs ===
outerFrameState: ?140 
values: - - - 
virtualObjectMappings: ?195 
=== Succesors ===
=== Usages ===
v139 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?140 values: - - - virtualObjectMappings: ?195  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
bci: 2
nodeSourcePosition: at java.lang.Class$EnclosingMethodInfo.<init>(Class.java:1080) [bci: 2]
at java.lang.Class.getEnclosingMethodInfo(Class.java:1076) [bci: 17]
at java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
polymorphic: false
stamp: void
targetMethod: Direct#Class$EnclosingMethodInfo.<init>
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v318 
stateDuring: ?404 
=== Succesors ===
next: a560 
=== Usages ===
=== Predecessor ===
v391 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v318 stateDuring: ?404 #next: a560  <|@  <|@
f <@~|@floating>@ <|@
tid v576 <|@
result [v10|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a390 
index: - 
=== Succesors ===
=== Usages ===
a560 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a390 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a560 <|@
result v13|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Class$EnclosingMethodInfo.enclosingClass
nodeSourcePosition: at java.lang.Class$EnclosingMethodInfo.getEnclosingClass(Class.java:1116) [bci: 1]
at java.lang.Class.getEnclosingClass(Class.java:1279) [bci: 18]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
nullCheck: false
stamp: n# Ljava/lang/Class;
=== Inputs ===
stateBefore: - 
guard: - 
address: v576 
=== Succesors ===
next: v352 
=== Usages ===
a321 v595 
=== Predecessor ===
v139 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v576 #next: v352  <|@  <|@
f <@~|@floating>@ <|@
tid a321 <|@
result v14|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.Class$EnclosingMethodInfo.getEnclosingClass(Class.java:1116) [bci: 1]
at java.lang.Class.getEnclosingClass(Class.java:1279) [bci: 18]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
op: Uncompress
stamp: a# Ljava/lang/Class;
=== Inputs ===
value: a560 
=== Succesors ===
=== Usages ===
v76 a83 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a560  <|@  <|@
f <@~|@floating>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.Class.getEnclosingClass(Class.java:1281) [bci: 24]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a1 
y: a321 
=== Succesors ===
=== Usages ===
v352 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a1 y: a321  <|@  <|@
tid ?141 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<Class$EnclosingMethodInfo.<init>(Object[], Class$1)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.lang.Class$EnclosingMethodInfo.<init>(Class.java:1080) [bci: 2]
at java.lang.Class.getEnclosingMethodInfo(Class.java:1076) [bci: 17]
at java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
rethrowException: false
sourceFile: Class.java
sourceLine: 1080
stackSize: 0
=== Inputs ===
outerFrameState: ?140 
values: - - - 
virtualObjectMappings: ?195 
=== Succesors ===
=== Usages ===
v427 v595 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?140 values: - - - virtualObjectMappings: ?195  <|@  <|@
f <@*|@fixed>@ <|@
tid v352 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getEnclosingClass(Class.java:1281) [bci: 24]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v76 
=== Succesors ===
trueSuccessor: v351 
falseSuccessor: v349 
=== Usages ===
=== Predecessor ===
a560 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v76 #trueSuccessor: v351 #falseSuccessor: v349  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v9|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = MOVE v9|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Class$EnclosingMethodInfo;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOV [v11|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v9|QWORD[*]], y: v12|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v9|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Class$EnclosingMethodInfo;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v9|QWORD[*] + 12], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v9|QWORD[*] + 20], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Class$EnclosingMethodInfo.<init>(Class.java:1080) [bci: 2]
locals: - - - 
java.lang.Class.getEnclosingMethodInfo(Class.java:1076) [bci: 17]
stack: v10|QWORD[.] 
locals: - v1|QWORD[.] 
java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1]
locals: v0|QWORD[.] - - - 
java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
locals: v0|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Class$EnclosingMethodInfo.<init>(Object[])> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:2, 17, 1, 1] <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[.] = MOV [v10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3c106be8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v14|QWORD[.], y: v0|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v351 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getEnclosingClass(Class.java:1281) [bci: 24]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v427 
=== Usages ===
=== Predecessor ===
v352 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v427  <|@  <|@
f <@~|@floating>@ <|@
tid i424 <|@
result int[-82451|0xfffffffffffebded] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -82451
stableDimension: 0
stamp: i32 [-82451] ⇊00000000fffebded ⇈00000000fffebded
stampKind: i32
value: int[-82451|0xfffffffffffebded]
=== Inputs ===
=== Succesors ===
=== Usages ===
v427 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v427 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?141 
actionAndReason: i424 
speculation: a6 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v351 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?141 actionAndReason: i424 speculation: a6  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -82451 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Class$EnclosingMethodInfo.<init>(Class.java:1080) [bci: 5]
locals: - - - 
java.lang.Class.getEnclosingMethodInfo(Class.java:1076) [bci: 17]
stack: v10|QWORD[.] 
locals: - v1|QWORD[.] 
java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1]
locals: v0|QWORD[.] - - - 
java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:5, 17, 1, 1] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576853462108402432
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getEnclosingClass(Class.java:1281) [bci: 24]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v595 
=== Usages ===
=== Predecessor ===
v352 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v595  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v595 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?141 
object: a560 
=== Succesors ===
next: v82 
=== Usages ===
=== Predecessor ===
v349 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?141 object: a560 #next: v82  <|@  <|@
f <@*|@fixed>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getEnclosingClass(Class.java:1287) [bci: 43]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v81 
=== Predecessor ===
v595 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Class$EnclosingMethodInfo.<init>(Class.java:1080) [bci: 5]
locals: - - - 
java.lang.Class.getEnclosingMethodInfo(Class.java:1076) [bci: 17]
stack: v10|QWORD[.] 
locals: - v1|QWORD[.] 
java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1]
locals: v0|QWORD[.] - - - 
java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
locals: v0|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v13|DWORD[.] * 8] state [bci:5, 17, 1, 1] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v14|QWORD[.]] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B2" "B11" "B4" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a83 <|@
result v15|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getEnclosingClass(Class.java:1287) [bci: 43]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
stamp: a# Ljava/lang/Class;
valueDescription: a -
=== Inputs ===
merge: v81 
values: a149 a321 a149 
=== Succesors ===
=== Usages ===
?84 ?39 v7 j537 ?406 v575 v309 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v81 values: a149 a321 a149  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getEnclosingClass(Class.java:1287) [bci: 43]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v80 v82 v190 
=== Succesors ===
next: v88 
=== Usages ===
a83 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v80 v82 v190 #next: v88  <|@  <|@
f <@~|@floating>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getSimpleBinaryName(Class.java:1444) [bci: 6]
stamp: void
=== Inputs ===
value: a83 
=== Succesors ===
=== Usages ===
v88 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a83  <|@  <|@
f <@*|@fixed>@ <|@
tid v88 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getEnclosingClass(Class.java:1287) [bci: 44]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
stamp: void
trueSuccessorProbability: 0.7744184392117807
=== Inputs ===
condition: v7 
=== Succesors ===
trueSuccessor: v86 
falseSuccessor: v87 
=== Usages ===
=== Predecessor ===
v81 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v7 #trueSuccessor: v86 #falseSuccessor: v87  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v15|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v15|QWORD[.], y: v15|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7744184392117807 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 4605150560733802449
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getEnclosingClass(Class.java:1290) [bci: 58]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v258 
=== Usages ===
=== Predecessor ===
v88 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v258  <|@  <|@
f <@*|@fixed>@ <|@
tid v258 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a6 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v86 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a6 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B31" 
    xhandlers
    flags 
    probability 4597295452555395260
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getEnclosingClass(Class.java:1288) [bci: 47]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v273 
=== Usages ===
=== Predecessor ===
v88 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v273  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v273 <|@
d <@d|@=== Debug Properties ===
barriers: 0
location: ANY_LOCATION
nodeSourcePosition: at java.lang.System.getSecurityManager(System.java:334) [bci: 0]
at java.lang.Class.checkPackageAccess(Class.java:2361) [bci: 0]
at java.lang.Class.getEnclosingClass(Class.java:1288) [bci: 55]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: a561 
=== Usages ===
=== Predecessor ===
v87 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a561  <|@  <|@
f <@~|@floating>@ <|@
tid v569 <|@
result [v3|QWORD[.] + 116] <|@
d <@d|@=== Debug Properties ===
displacement: 116
scale: Times1
stamp: void*
=== Inputs ===
base: a268 
index: - 
=== Succesors ===
=== Usages ===
a561 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a268 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a561 <|@
result v16|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: System.security
nodeSourcePosition: at java.lang.System.getSecurityManager(System.java:334) [bci: 0]
at java.lang.Class.checkPackageAccess(Class.java:2361) [bci: 0]
at java.lang.Class.getEnclosingClass(Class.java:1288) [bci: 55]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
nullCheck: false
stamp: n# Ljava/lang/SecurityManager;
=== Inputs ===
stateBefore: - 
guard: - 
address: v569 
=== Succesors ===
next: v360 
=== Usages ===
v324 
=== Predecessor ===
v273 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v569 #next: v360  <|@  <|@
f <@~|@floating>@ <|@
tid v324 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.checkPackageAccess(Class.java:2362) [bci: 5]
at java.lang.Class.getEnclosingClass(Class.java:1288) [bci: 55]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
stamp: void
=== Inputs ===
value: a561 
=== Succesors ===
=== Usages ===
v360 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a561  <|@  <|@
f <@*|@fixed>@ <|@
tid v360 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.checkPackageAccess(Class.java:2362) [bci: 5]
at java.lang.Class.getEnclosingClass(Class.java:1288) [bci: 55]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v324 
=== Succesors ===
trueSuccessor: v357 
falseSuccessor: v359 
=== Usages ===
=== Predecessor ===
a561 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v324 #trueSuccessor: v357 #falseSuccessor: v359  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v16|DWORD[.] = MOV [v3|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v16|DWORD[.], y: v16|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B19" 
    xhandlers
    flags 
    probability 4597295452555395260
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v357 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.checkPackageAccess(Class.java:2362) [bci: 5]
at java.lang.Class.getEnclosingClass(Class.java:1288) [bci: 55]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v274 
=== Usages ===
=== Predecessor ===
v360 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v274  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v274 <|@
d <@d|@=== Debug Properties ===
barriers: 3
location: ANY_LOCATION
nodeSourcePosition: at java.lang.System.getSecurityManager(System.java:334) [bci: 0]
at java.lang.Class.checkPackageAccess(Class.java:2361) [bci: 0]
at java.lang.Class.getEnclosingClass(Class.java:1288) [bci: 55]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: a562 
=== Usages ===
=== Predecessor ===
v357 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a562  <|@  <|@
f <@~|@floating>@ <|@
tid v570 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a562 v303 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a562 <|@
result v17|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Class.name
nodeSourcePosition: at java.lang.Class.getName(Class.java:640) [bci: 1]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 12]
nullCheck: false
stamp: n# Ljava/lang/String;
=== Inputs ===
stateBefore: - 
guard: - 
address: v570 
=== Succesors ===
next: v31 
=== Usages ===
a279 v325 
=== Predecessor ===
v274 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v570 #next: v31  <|@  <|@
f <@~|@floating>@ <|@
tid v325 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getName(Class.java:641) [bci: 6]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 12]
stamp: void
=== Inputs ===
value: a562 
=== Succesors ===
=== Usages ===
v31 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a562  <|@  <|@
f <@~|@floating>@ <|@
tid v575 <|@
result [v15|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a83 
index: - 
=== Succesors ===
=== Usages ===
a563 a564 v311 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a83 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i534 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.Class.getName(Class.java:642) [bci: 16]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 12]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v533 v541 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i528 <|@
result int[9|0x9] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.Class.getName(Class.java:642) [bci: 16]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 12]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j529 j538 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j532 <|@
result v18|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.Class.getName(Class.java:642) [bci: 16]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 12]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v587 v588 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getName(Class.java:641) [bci: 6]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 12]
stamp: void
trueSuccessorProbability: 0.0029740774790130153
=== Inputs ===
condition: v325 
=== Succesors ===
trueSuccessor: v29 
falseSuccessor: v30 
=== Usages ===
=== Predecessor ===
a562 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v325 #trueSuccessor: v29 #falseSuccessor: v30  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v17|DWORD[.] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v17|DWORD[.], y: v17|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0029740774790130153 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4559327156266419042
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getName(Class.java:642) [bci: 9]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: a33 
=== Usages ===
=== Predecessor ===
v31 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a33  <|@  <|@
tid v301 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.Class.getName(Class.java:642) [bci: 11]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 12]
returnStamp: a# Ljava/lang/String;
signature: [Ljdk.vm.ci.meta.JavaType;@5c337785
stamp: void
targetMethod: HotSpotMethod<Class.getName0()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
a33 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?39 <|@
d <@d|@=== Debug Properties ===
bci: 12
code: ResolvedJavaMethodBytecode<Class.getSimpleBinaryName()>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Class.java
sourceLine: 1448
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a83 - 
=== Succesors ===
=== Usages ===
?405 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a83 -  <|@  <|@
tid ?405 <|@
d <@d|@=== Debug Properties ===
bci: 11
code: ResolvedJavaMethodBytecode<Class.getName()>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Class.java
sourceLine: 642
stackSize: 1
=== Inputs ===
outerFrameState: ?39 
values: - - a1 
=== Succesors ===
=== Usages ===
a33 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?39 values: - - a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a33 <|@
result v19|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 11
nodeSourcePosition: at java.lang.Class.getName(Class.java:642) [bci: 11]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 12]
polymorphic: false
stamp: a# Ljava/lang/String;
targetMethod: Direct#Class.getName0
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v301 
stateDuring: ?405 
=== Succesors ===
next: v303 
=== Usages ===
a217 a302 a216 
=== Predecessor ===
v29 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v301 stateDuring: ?405 #next: v303  <|@  <|@
f <@~|@floating>@ <|@
tid a302 <|@
result v20|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.Class.getName(Class.java:642) [bci: 16]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 12]
op: Compress
stamp: n# Ljava/lang/String;
=== Inputs ===
value: a33 
=== Succesors ===
=== Usages ===
v303 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a33  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v303 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: Class.name
nodeSourcePosition: at java.lang.Class.getName(Class.java:642) [bci: 16]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 12]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v570 
value: a302 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j527 
=== Usages ===
=== Predecessor ===
a33 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v570 value: a302 stateAfter: - lastLocationAccess: - #next: j527  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j527 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.lang.Class.getName(Class.java:642) [bci: 16]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 12]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v533 
=== Usages ===
j529 
=== Predecessor ===
v303 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v533  <|@  <|@
f <@~|@floating>@ <|@
tid j529 <|@
result v21|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.Class.getName(Class.java:642) [bci: 16]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 12]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j527 
y: i528 
=== Succesors ===
=== Usages ===
v587 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j527 y: i528  <|@  <|@
f <@~|@floating>@ <|@
tid v587 <|@
result [v21|QWORD[*] + v18|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j529 
index: j532 
=== Succesors ===
=== Usages ===
v533 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j529 index: j532  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v533 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.Class.getName(Class.java:642) [bci: 16]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 12]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v587 
value: i534 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a563 
=== Usages ===
=== Predecessor ===
j527 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v587 value: i534 stateAfter: - lastLocationAccess: - #next: a563  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a563 <|@
result v22|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Class.name
nodeSourcePosition: at java.lang.Class.getName(Class.java:640) [bci: 1]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 16]
nullCheck: false
stamp: n# Ljava/lang/String;
=== Inputs ===
stateBefore: - 
guard: - 
address: v575 
=== Succesors ===
next: v50 
=== Usages ===
a306 v326 
=== Predecessor ===
v533 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v575 #next: v50  <|@  <|@
f <@~|@floating>@ <|@
tid v326 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getName(Class.java:641) [bci: 6]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 16]
stamp: void
=== Inputs ===
value: a563 
=== Succesors ===
=== Usages ===
v50 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a563  <|@  <|@
f <@*|@fixed>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getName(Class.java:641) [bci: 6]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 16]
stamp: void
trueSuccessorProbability: 0.0029740774790130153
=== Inputs ===
condition: v326 
=== Succesors ===
trueSuccessor: v48 
falseSuccessor: v49 
=== Usages ===
=== Predecessor ===
a563 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v326 #trueSuccessor: v48 #falseSuccessor: v49  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Class.getName(Class.java:642) [bci: 11]
stack: v0|QWORD[.] 
locals: - - 
java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 12]
locals: - v15|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Class.getName0()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:11, 12] <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD[.] = COMPRESSPOINTER (input: v19|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3c106be8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v20|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v21|QWORD[*] + v18|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v22|DWORD[.] = MOV [v15|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v22|DWORD[.], y: v22|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0029740774790130153 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B21" 
    xhandlers
    flags 
    probability 4521821694645981636
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getName(Class.java:642) [bci: 9]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v209 
=== Usages ===
=== Predecessor ===
v50 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v209  <|@  <|@
f <@*|@fixed>@ <|@
tid v209 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v208 
=== Predecessor ===
v48 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v19|QWORD[.]] destination: B17 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4559308752874257424
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getName(Class.java:643) [bci: 19]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v60 
=== Usages ===
=== Predecessor ===
v50 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v60  <|@  <|@
f <@~|@floating>@ <|@
tid a306 <|@
result v23|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.Class.getName(Class.java:640) [bci: 1]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 16]
op: Uncompress
stamp: a# Ljava/lang/String;
=== Inputs ===
value: a563 
=== Succesors ===
=== Usages ===
a61 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a563  <|@  <|@
f <@*|@fixed>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v59 
=== Predecessor ===
v49 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = UNCOMPRESSPOINTER (input: v22|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3c106be8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v23|QWORD[.], v19|QWORD[.]] destination: B18 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B20" "B22" 
    xhandlers
    flags 
    probability 4597271280942134137
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getName(Class.java:643) [bci: 19]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: a564 
=== Usages ===
=== Predecessor ===
v31 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a564  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a564 <|@
result v24|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Class.name
nodeSourcePosition: at java.lang.Class.getName(Class.java:640) [bci: 1]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 16]
nullCheck: false
stamp: n# Ljava/lang/String;
=== Inputs ===
stateBefore: - 
guard: - 
address: v575 
=== Succesors ===
next: v226 
=== Usages ===
a308 v327 
=== Predecessor ===
v30 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v575 #next: v226  <|@  <|@
f <@~|@floating>@ <|@
tid v327 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getName(Class.java:641) [bci: 6]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 16]
stamp: void
=== Inputs ===
value: a564 
=== Succesors ===
=== Usages ===
v226 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a564  <|@  <|@
f <@~|@floating>@ <|@
tid a279 <|@
result v25|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.Class.getName(Class.java:640) [bci: 1]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 12]
op: Uncompress
stamp: a# Ljava/lang/String;
=== Inputs ===
value: a562 
=== Succesors ===
=== Usages ===
a216 a217 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a562  <|@  <|@
f <@*|@fixed>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getName(Class.java:641) [bci: 6]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 16]
stamp: void
trueSuccessorProbability: 0.0029740774790130153
=== Inputs ===
condition: v327 
=== Succesors ===
trueSuccessor: v224 
falseSuccessor: v225 
=== Usages ===
=== Predecessor ===
a564 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v327 #trueSuccessor: v224 #falseSuccessor: v225  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v24|DWORD[.] = MOV [v15|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[.] = UNCOMPRESSPOINTER (input: v17|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3c106be8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TEST (x: v24|DWORD[.], y: v24|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0029740774790130153 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4559308752874257424
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getName(Class.java:642) [bci: 9]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v210 
=== Usages ===
=== Predecessor ===
v226 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v210  <|@  <|@
f <@*|@fixed>@ <|@
tid v210 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v208 
=== Predecessor ===
v224 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v25|QWORD[.]] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4559327156266419042
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a216 <|@
result v26|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# Ljava/lang/String;
valueDescription: a -
=== Inputs ===
merge: v208 
values: a33 a279 
=== Succesors ===
=== Usages ===
?58 a217 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v208 values: a33 a279  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v208 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v209 v210 
=== Succesors ===
next: a52 
=== Usages ===
a216 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v209 v210 #next: a52  <|@  <|@
tid v309 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.Class.getName(Class.java:642) [bci: 11]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 16]
returnStamp: a# Ljava/lang/String;
signature: [Ljdk.vm.ci.meta.JavaType;@7156114e
stamp: void
targetMethod: HotSpotMethod<Class.getName0()>
=== Inputs ===
arguments: a83 
=== Succesors ===
=== Usages ===
a52 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a83  <|@  <|@
tid ?58 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<Class.getSimpleBinaryName()>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Class.java
sourceLine: 1448
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - - - a216 
=== Succesors ===
=== Usages ===
?406 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - a216  <|@  <|@
tid ?406 <|@
d <@d|@=== Debug Properties ===
bci: 11
code: ResolvedJavaMethodBytecode<Class.getName()>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Class.java
sourceLine: 642
stackSize: 1
=== Inputs ===
outerFrameState: ?58 
values: - - a83 
=== Succesors ===
=== Usages ===
a52 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?58 values: - - a83  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a52 <|@
result v27|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 11
nodeSourcePosition: at java.lang.Class.getName(Class.java:642) [bci: 11]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 16]
polymorphic: false
stamp: a# Ljava/lang/String;
targetMethod: Direct#Class.getName0
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v309 
stateDuring: ?406 
=== Succesors ===
next: v311 
=== Usages ===
a61 a310 
=== Predecessor ===
v208 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v309 stateDuring: ?406 #next: v311  <|@  <|@
f <@~|@floating>@ <|@
tid a310 <|@
result v28|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.Class.getName(Class.java:642) [bci: 16]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 16]
op: Compress
stamp: n# Ljava/lang/String;
=== Inputs ===
value: a52 
=== Succesors ===
=== Usages ===
v311 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a52  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v311 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: Class.name
nodeSourcePosition: at java.lang.Class.getName(Class.java:642) [bci: 16]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 16]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v575 
value: a310 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j537 
=== Usages ===
=== Predecessor ===
a52 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v575 value: a310 stateAfter: - lastLocationAccess: - #next: j537  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j537 <|@
result v15|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.lang.Class.getName(Class.java:642) [bci: 16]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 16]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a83 
=== Succesors ===
next: v541 
=== Usages ===
j538 
=== Predecessor ===
v311 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a83 #next: v541  <|@  <|@
f <@~|@floating>@ <|@
tid j538 <|@
result v29|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.Class.getName(Class.java:642) [bci: 16]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 16]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j537 
y: i528 
=== Succesors ===
=== Usages ===
v588 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j537 y: i528  <|@  <|@
f <@~|@floating>@ <|@
tid v588 <|@
result [v29|QWORD[*] + v18|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j538 
index: j532 
=== Succesors ===
=== Usages ===
v541 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j538 index: j532  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v541 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.Class.getName(Class.java:642) [bci: 16]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 16]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v588 
value: i534 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v62 
=== Usages ===
=== Predecessor ===
j537 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v588 value: i534 stateAfter: - lastLocationAccess: - #next: v62  <|@  <|@
f <@*|@fixed>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v59 
=== Predecessor ===
v541 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v26|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v15|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Class.getName(Class.java:642) [bci: 11]
stack: v15|QWORD[.] 
locals: - - 
java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 16]
stack: v26|QWORD[.] 
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Class.getName0()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:11, 16] <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD[.] = COMPRESSPOINTER (input: v27|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3c106be8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v15|QWORD[.] + 20], y: v28|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[*] = SHR v15|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v29|QWORD[*] + v18|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v27|QWORD[.], v26|QWORD[.]] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4597247181217123645
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v225 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getName(Class.java:643) [bci: 19]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v227 
=== Usages ===
=== Predecessor ===
v226 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v227  <|@  <|@
f <@~|@floating>@ <|@
tid a308 <|@
result v30|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.Class.getName(Class.java:640) [bci: 1]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 16]
op: Uncompress
stamp: a# Ljava/lang/String;
=== Inputs ===
value: a564 
=== Succesors ===
=== Usages ===
a61 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a564  <|@  <|@
f <@*|@fixed>@ <|@
tid v227 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v59 
=== Predecessor ===
v225 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[.] = UNCOMPRESSPOINTER (input: v24|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3c106be8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v30|QWORD[.], v25|QWORD[.]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B18" "B21" "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4597295452555395260
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a61 <|@
result v31|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# Ljava/lang/String;
valueDescription: a -
=== Inputs ===
merge: v59 
values: a306 a52 a308 
=== Succesors ===
=== Usages ===
?17 v571 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v59 values: a306 a52 a308  <|@  <|@
f <@~|@floating>@ <|@
tid a217 <|@
result v32|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# Ljava/lang/String;
valueDescription: a -
=== Inputs ===
merge: v59 
values: a33 a216 a279 
=== Succesors ===
=== Usages ===
?17 v573 v188 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v59 values: a33 a216 a279  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v60 v62 v227 
=== Succesors ===
next: a565 
=== Usages ===
a61 a217 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v60 v62 v227 #next: a565  <|@  <|@
tid ?17 <|@
d <@d|@=== Debug Properties ===
bci: 19
code: ResolvedJavaMethodBytecode<Class.getSimpleBinaryName()>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 16]
rethrowException: false
sourceFile: Class.java
sourceLine: 1448
stackSize: 2
=== Inputs ===
outerFrameState: - 
values: - - - a217 a61 
=== Succesors ===
=== Usages ===
v413 a497 a565 v594 a566 i567 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - a217 a61  <|@  <|@
f <@~|@floating>@ <|@
tid v571 <|@
result [v31|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a61 
index: - 
=== Succesors ===
=== Usages ===
a565 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a61 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a565 <|@
result v33|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 19]
nullCheck: true
stamp: n# [C
=== Inputs ===
stateBefore: ?17 
guard: - 
address: v571 
=== Succesors ===
next: v594 
=== Usages ===
v572 v594 
=== Predecessor ===
v59 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?17 guard: - address: v571 #next: v594  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v594 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?17 
object: a565 
=== Succesors ===
next: a566 
=== Usages ===
=== Predecessor ===
a565 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?17 object: a565 #next: a566  <|@  <|@
f <@~|@floating>@ <|@
tid v573 <|@
result [v32|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a217 
index: - 
=== Succesors ===
=== Usages ===
a566 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a217 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a566 <|@
result v34|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.substring(String.java:1929) [bci: 14]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 22]
nullCheck: true
stamp: n# [C
=== Inputs ===
stateBefore: ?17 
guard: - 
address: v573 
=== Succesors ===
next: i567 
=== Usages ===
a293 v574 
=== Predecessor ===
v594 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?17 guard: - address: v573 #next: i567  <|@  <|@
f <@~|@floating>@ <|@
tid v574 <|@
result [v34|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a566 
=== Succesors ===
=== Usages ===
i567 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a566  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i567 <|@
result v35|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.substring(String.java:1929) [bci: 17]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 22]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?17 
guard: - 
address: v574 
=== Succesors ===
next: i568 
=== Usages ===
i110 v123 
=== Predecessor ===
a566 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?17 guard: - address: v574 #next: i568  <|@  <|@
f <@~|@floating>@ <|@
tid v572 <|@
result [v33|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a565 
=== Succesors ===
=== Usages ===
i568 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a565  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i568 <|@
result v36|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 19]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v572 
=== Succesors ===
next: v380 
=== Usages ===
v123 i110 v112 v300 
=== Predecessor ===
i567 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v572 #next: v380  <|@  <|@
f <@~|@floating>@ <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.String.substring(String.java:1930) [bci: 22]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 22]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i567 
y: i568 
=== Succesors ===
=== Usages ===
v380 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i567 y: i568  <|@  <|@
f <@*|@fixed>@ <|@
tid v380 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1930) [bci: 22]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 22]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v123 
=== Succesors ===
trueSuccessor: v379 
falseSuccessor: v377 
=== Usages ===
=== Predecessor ===
i568 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v123 #trueSuccessor: v379 #falseSuccessor: v377  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v31|QWORD[.], v32|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 19]
stack: v32|QWORD[.] v31|QWORD[.] 
locals: - - - 
>@ <|@ instruction v33|DWORD[.] = MOV [v31|QWORD[.] + 12] size: DWORD state [bci:19] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 19]
stack: v32|QWORD[.] v31|QWORD[.] 
locals: - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v33|DWORD[.] * 8] state [bci:19] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 19]
stack: v32|QWORD[.] v31|QWORD[.] 
locals: - - - 
>@ <|@ instruction v34|DWORD[.] = MOV [v32|QWORD[.] + 12] size: DWORD state [bci:19] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 19]
stack: v32|QWORD[.] v31|QWORD[.] 
locals: - - - 
>@ <|@ instruction v35|DWORD = MOV [v34|DWORD[.] * 8 + 12] size: DWORD state [bci:19] <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOV [v33|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v36|DWORD, y: v35|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v379 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1930) [bci: 22]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v413 
=== Usages ===
=== Predecessor ===
v380 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v413  <|@  <|@
f <@~|@floating>@ <|@
tid i421 <|@
result int[-76563|0xfffffffffffed4ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -76563
stableDimension: 0
stamp: i32 [-76563] ⇊00000000fffed4ed ⇈00000000fffed4ed
stampKind: i32
value: int[-76563|0xfffffffffffed4ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
v413 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v413 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?17 
actionAndReason: i421 
speculation: a6 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v379 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?17 actionAndReason: i421 speculation: a6  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -76563 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 19]
stack: v32|QWORD[.] v31|QWORD[.] 
locals: - - - 
>@ <|@ instruction DEOPT info [bci:19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4597295452555395260
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v377 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1930) [bci: 22]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v115 
=== Usages ===
=== Predecessor ===
v380 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v115  <|@  <|@
f <@~|@floating>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.substring(String.java:1933) [bci: 35]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 22]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i568 
y: i107 
=== Succesors ===
=== Usages ===
v115 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i568 y: i107  <|@  <|@
f <@*|@fixed>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1933) [bci: 35]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 22]
stamp: void
trueSuccessorProbability: 0.9651155608201366
=== Inputs ===
condition: v112 
=== Succesors ===
trueSuccessor: v113 
falseSuccessor: v114 
=== Usages ===
=== Predecessor ===
v377 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v112 #trueSuccessor: v113 #falseSuccessor: v114  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v36|DWORD, y: v36|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9651155608201366 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors 
    xhandlers
    flags 
    probability 4597011931638863298
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1933) [bci: 38]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v188 
=== Usages ===
=== Predecessor ===
v115 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v188  <|@  <|@
f <@*|@fixed>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a217 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v113 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a217 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4575689956445564837
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1933) [bci: 42]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: j486 
=== Usages ===
=== Predecessor ===
v115 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j486  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j486 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j501 
=== Usages ===
v582 v583 
=== Predecessor ===
v114 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j501  <|@  <|@
f <@~|@floating>@ <|@
tid v582 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j486 
index: - 
=== Succesors ===
=== Usages ===
j501 v503 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j486 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j501 <|@
result v37|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v582 
=== Succesors ===
next: j502 
=== Usages ===
j552 j507 v592 
=== Predecessor ===
j486 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v582 #next: j502  <|@  <|@
f <@~|@floating>@ <|@
tid v583 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j486 
index: - 
=== Succesors ===
=== Usages ===
j502 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j486 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j502 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v583 
=== Succesors ===
next: v494 
=== Usages ===
v491 
=== Predecessor ===
j501 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v583 #next: v494  <|@  <|@
f <@~|@floating>@ <|@
tid j552 <|@
result v38|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j501 
y: j544 
=== Succesors ===
=== Usages ===
v491 v503 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j501 y: j544  <|@  <|@
f <@~|@floating>@ <|@
tid v491 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j502 
y: j552 
=== Succesors ===
=== Usages ===
v494 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j502 y: j552  <|@  <|@
f <@*|@fixed>@ <|@
tid v494 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v491 
=== Succesors ===
trueSuccessor: v492 
falseSuccessor: v493 
=== Usages ===
=== Predecessor ===
j502 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v491 #trueSuccessor: v492 #falseSuccessor: v493  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = LEA [v37|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v38|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4545434932760034561
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v492 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a497 
=== Usages ===
=== Predecessor ===
v494 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a497  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a497 <|@
result v39|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?17 
arguments: v433 i447 i435 
=== Succesors ===
next: j498 
=== Usages ===
j498 
=== Predecessor ===
v492 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?17 arguments: v433 i447 i435 #next: j498  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j498 <|@
result v39|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a497 
=== Succesors ===
next: v508 
=== Usages ===
j507 
=== Predecessor ===
a497 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a497 #next: v508  <|@  <|@
f <@*|@fixed>@ <|@
tid v508 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v505 
=== Predecessor ===
j498 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v2|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 19]
stack: v32|QWORD[.] v31|QWORD[.] 
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:19] <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v39|QWORD[.]] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4575631964789415510
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v493 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v503 
=== Usages ===
=== Predecessor ===
v494 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v503  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v503 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v582 
value: j552 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v500 
=== Usages ===
=== Predecessor ===
v493 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v582 value: j552 stateAfter: - lastLocationAccess: - #next: v500  <|@  <|@
f <@~|@floating>@ <|@
tid v592 <|@
result [v37|QWORD + 216] <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j501 
index: - 
=== Succesors ===
=== Usages ===
v500 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j501 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v500 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v592 
=== Succesors ===
next: v506 
=== Usages ===
=== Predecessor ===
v503 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v592 #next: v506  <|@  <|@
f <@*|@fixed>@ <|@
tid v506 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v505 
=== Predecessor ===
v500 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v38|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v37|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v37|QWORD] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B28" 
    successors 
    xhandlers
    flags 
    probability 4575689956445564837
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j507 <|@
result v40|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v505 
values: j501 j498 
=== Succesors ===
=== Usages ===
v586 v585 a394 v593 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v505 values: j501 j498  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v505 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v506 v508 
=== Succesors ===
next: a394 
=== Usages ===
j507 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v506 v508 #next: a394  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a394 <|@
result v41|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j507 
=== Succesors ===
next: j518 
=== Usages ===
a399 
=== Predecessor ===
v505 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j507 #next: j518  <|@  <|@
f <@~|@floating>@ <|@
tid v513 <|@
result v42|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/lang/String;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j514 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j514 <|@
result v42|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v513 
=== Succesors ===
=== Usages ===
v584 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v513  <|@  <|@
f <@~|@floating>@ <|@
tid v584 <|@
result [v42|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j514 
index: - 
=== Succesors ===
=== Usages ===
j518 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j514 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j518 <|@
result v43|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v584 
=== Succesors ===
next: v519 
=== Usages ===
v519 
=== Predecessor ===
a394 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v584 #next: v519  <|@  <|@
f <@~|@floating>@ <|@
tid v585 <|@
result [v40|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j507 
index: - 
=== Succesors ===
=== Usages ===
v519 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j507 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v519 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v585 
value: j518 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v522 
=== Usages ===
=== Predecessor ===
j518 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v585 value: j518 stateAfter: - lastLocationAccess: - #next: v522  <|@  <|@
f <@~|@floating>@ <|@
tid v586 <|@
result [v40|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j507 
index: - 
=== Succesors ===
=== Usages ===
v522 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j507 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v555 <|@
result meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v522 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v522 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v586 
value: v555 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v526 
=== Usages ===
=== Predecessor ===
v519 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v586 value: v555 stateAfter: - lastLocationAccess: - #next: v526  <|@  <|@
f <@~|@floating>@ <|@
tid v593 <|@
result [v40|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j507 
index: - 
=== Succesors ===
=== Usages ===
v526 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j507 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v526 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v593 
value: j382 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a399 
=== Usages ===
=== Predecessor ===
v522 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v593 value: j382 stateAfter: - lastLocationAccess: - #next: a399  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a399 <|@
result v41|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a394 
=== Succesors ===
next: v400 
=== Usages ===
v300 ?199 v189 
=== Predecessor ===
v526 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a394 #next: v400  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v400 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v119 
=== Usages ===
=== Predecessor ===
a399 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v119  <|@  <|@
f <@~|@floating>@ <|@
tid a293 <|@
result v44|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.substring(String.java:1929) [bci: 14]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 22]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a566 
=== Succesors ===
=== Usages ===
v300 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a566  <|@  <|@
f <@~|@floating>@ <|@
tid i110 <|@
result v45|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.String.substring(String.java:1929) [bci: 19]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 22]
stamp: i32 [-2147483647 - 2147483647]
=== Inputs ===
x: i567 
y: i568 
=== Succesors ===
=== Usages ===
v300 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i567 y: i568  <|@  <|@
tid v300 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.String.substring(String.java:1933) [bci: 52]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 22]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@fcb9441
stamp: void
targetMethod: HotSpotMethod<String.<init>(char[], int, int)>
=== Inputs ===
arguments: a399 a293 i568 i110 
=== Succesors ===
=== Usages ===
v119 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a399 a293 i568 i110  <|@  <|@
tid ?124 <|@
d <@d|@=== Debug Properties ===
bci: 22
code: ResolvedJavaMethodBytecode<Class.getSimpleBinaryName()>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Class.java
sourceLine: 1448
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - 
=== Succesors ===
=== Usages ===
?407 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - -  <|@  <|@
tid a196 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@5a86b9fc
hasIdentity: true
objectId: 1
stamp: a!# Ljava/lang/String;
type: HotSpotType<Ljava/lang/String;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?199 ?407 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?199 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a196 
materializedValue: a399 
=== Succesors ===
=== Usages ===
?407 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a196 materializedValue: a399  <|@  <|@
tid ?407 <|@
d <@d|@=== Debug Properties ===
bci: 52
code: ResolvedJavaMethodBytecode<String.substring(int)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: String.java
sourceLine: 1933
stackSize: 1
=== Inputs ===
outerFrameState: ?124 
values: - - - a196 
virtualObjectMappings: ?199 
=== Succesors ===
=== Usages ===
v119 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?124 values: - - - a196 virtualObjectMappings: ?199  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
bci: 52
nodeSourcePosition: at java.lang.String.substring(String.java:1933) [bci: 52]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 22]
polymorphic: false
stamp: void
targetMethod: Direct#String.<init>
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v300 
stateDuring: ?407 
=== Succesors ===
next: v189 
=== Usages ===
=== Predecessor ===
v400 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v300 stateDuring: ?407 #next: v189  <|@  <|@
f <@*|@fixed>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a399 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v119 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a399 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v40|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[.] = MOVE v40|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOV [v42|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v40|QWORD[*]], y: v43|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v40|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v40|QWORD[*] + 12], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3c106be8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = SUB (x: v35|DWORD, ~y: v36|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v41|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v44|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v36|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE v45|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.substring(String.java:1933) [bci: 52]
stack: v41|QWORD[.] 
locals: - - - 
java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 22]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<String.<init>(char[], int, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:52, 22] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v41|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v359 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.checkPackageAccess(Class.java:2362) [bci: 5]
at java.lang.Class.getEnclosingClass(Class.java:1288) [bci: 55]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v358 
=== Usages ===
=== Predecessor ===
v360 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v358  <|@  <|@
tid ?84 <|@
d <@d|@=== Debug Properties ===
bci: 43
code: ResolvedJavaMethodBytecode<Class.getEnclosingClass()>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Class.java
sourceLine: 1287
stackSize: 0
=== Inputs ===
outerFrameState: ?100 
values: - - a83 - 
=== Succesors ===
=== Usages ===
v358 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?100 values: - - a83 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v358 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 275
nodeSourcePosition: at java.lang.Class.checkPackageAccess(Class.java:2362) [bci: 5]
at java.lang.Class.getEnclosingClass(Class.java:1288) [bci: 55]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?84 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v359 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?84  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -70419 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Class.getEnclosingClass(Class.java:1287) [bci: 43]
locals: - - v15|QWORD[.] - 
java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:43, 1] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7bd8a449 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Class.getEnclosingMethodInfo(Class.java:1072) [bci: 1]
locals: - - 
java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1]
locals: v0|QWORD[.] - - - 
java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Class.getEnclosingMethod0()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1, 1, 1] <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9901123531748284 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607093358794902580
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Class.getDeclaringClass(Class.java:1235) [bci: 1]
locals: - - 
java.lang.Class.getEnclosingClass(Class.java:1277) [bci: 10]
locals: - - - - 
java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Class.getDeclaringClass0()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1, 10, 1] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|QWORD[.], y: v4|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7818621453964507 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B12" 
    xhandlers
    flags 
    probability 4605147975031933422
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v4|QWORD[.]] destination: B2 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B2" "B11" "B4" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v15|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v15|QWORD[.], y: v15|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7744184392117807 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 4605150560733802449
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B31" 
    xhandlers
    flags 
    probability 4597295452555395260
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:java.lang.System] <|@ <|@
      nr   -1  <|@ instruction v16|DWORD[.] = MOV [v48|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v16|DWORD[.], y: v16|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B19" 
    xhandlers
    flags 
    probability 4597295452555395260
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v17|DWORD[.] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v17|DWORD[.], y: v17|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0029740774790130153 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B20" "B22" 
    xhandlers
    flags 
    probability 4597271280942134137
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v24|DWORD[.] = MOV [v15|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[.] = UNCOMPRESSPOINTER (input: v17|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3c106be8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TEST (x: v24|DWORD[.], y: v24|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0029740774790130153 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4597247181217123645
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[.] = UNCOMPRESSPOINTER (input: v24|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3c106be8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v30|QWORD[.], v25|QWORD[.]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B18" "B21" "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4597295452555395260
    begin_IR
      LIR
      nr   -1  <|@ instruction [v31|QWORD[.], v32|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 19]
stack: v32|QWORD[.] v31|QWORD[.] 
locals: - - - 
>@ <|@ instruction v33|DWORD[.] = MOV [v31|QWORD[.] + 12] size: DWORD state [bci:19] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 19]
stack: v32|QWORD[.] v31|QWORD[.] 
locals: - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v33|DWORD[.] * 8] state [bci:19] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 19]
stack: v32|QWORD[.] v31|QWORD[.] 
locals: - - - 
>@ <|@ instruction v34|DWORD[.] = MOV [v32|QWORD[.] + 12] size: DWORD state [bci:19] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 19]
stack: v32|QWORD[.] v31|QWORD[.] 
locals: - - - 
>@ <|@ instruction v35|DWORD = MOV [v34|DWORD[.] * 8 + 12] size: DWORD state [bci:19] <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOV [v33|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v36|DWORD, y: v35|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4597295452555395260
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v36|DWORD, y: v36|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9651155608201366 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors 
    xhandlers
    flags 
    probability 4597011931638863298
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4596949555342412057
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:java.lang.System] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[.] = MOV [v49|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v5|DWORD[.], y: v5|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B12" 
    xhandlers
    flags 
    probability 4596949555342412057
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v4|QWORD[.]] destination: B4 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4576853462108402432
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = LEA [v6|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576796463705128942
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v7|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v6|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v6|QWORD] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4576853462108402432
    begin_IR
      LIR
      nr   -1  <|@ instruction [v9|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = MOVE v9|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Class$EnclosingMethodInfo;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOV [v11|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v9|QWORD[*]], y: v12|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v9|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Class$EnclosingMethodInfo;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v9|QWORD[*] + 12], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v9|QWORD[*] + 20], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Class$EnclosingMethodInfo.<init>(Class.java:1080) [bci: 2]
locals: - - - 
java.lang.Class.getEnclosingMethodInfo(Class.java:1076) [bci: 17]
stack: v10|QWORD[.] 
locals: - v1|QWORD[.] 
java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1]
locals: v0|QWORD[.] - - - 
java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
locals: v0|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Class$EnclosingMethodInfo.<init>(Object[])> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:2, 17, 1, 1] <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[.] = MOV [v10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3c106be8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v14|QWORD[.], y: v0|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576853462108402432
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Class$EnclosingMethodInfo.<init>(Class.java:1080) [bci: 5]
locals: - - - 
java.lang.Class.getEnclosingMethodInfo(Class.java:1076) [bci: 17]
stack: v10|QWORD[.] 
locals: - v1|QWORD[.] 
java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1]
locals: v0|QWORD[.] - - - 
java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
locals: v0|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v13|DWORD[.] * 8] state [bci:5, 17, 1, 1] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v14|QWORD[.]] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4575689956445564837
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = LEA [v37|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v38|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4575631964789415510
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v38|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v37|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v37|QWORD] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B28" 
    successors 
    xhandlers
    flags 
    probability 4575689956445564837
    begin_IR
      LIR
      nr   -1  <|@ instruction [v40|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[.] = MOVE v40|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOV [v42|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v40|QWORD[*]], y: v43|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v40|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v40|QWORD[*] + 12], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3c106be8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = SUB (x: v35|DWORD, ~y: v36|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v41|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v44|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v36|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE v45|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.substring(String.java:1933) [bci: 52]
stack: v41|QWORD[.] 
locals: - - - 
java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 22]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<String.<init>(char[], int, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:52, 22] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v41|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4559327156266419042
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Class.getName(Class.java:642) [bci: 11]
stack: v0|QWORD[.] 
locals: - - 
java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 12]
locals: - v15|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Class.getName0()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:11, 12] <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD[.] = COMPRESSPOINTER (input: v19|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3c106be8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v20|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v21|QWORD[*] + v51|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v22|DWORD[.] = MOV [v15|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v22|DWORD[.], y: v22|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0029740774790130153 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4559308752874257424
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = UNCOMPRESSPOINTER (input: v22|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3c106be8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v23|QWORD[.], v19|QWORD[.]] destination: B18 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4559308752874257424
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v25|QWORD[.]] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4559327156266419042
    begin_IR
      LIR
      nr   -1  <|@ instruction [v26|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v15|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Class.getName(Class.java:642) [bci: 11]
stack: v15|QWORD[.] 
locals: - - 
java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 16]
stack: v26|QWORD[.] 
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Class.getName0()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:11, 16] <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD[.] = COMPRESSPOINTER (input: v27|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3c106be8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v15|QWORD[.] + 20], y: v28|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[*] = SHR v15|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v29|QWORD[*] + v50|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v27|QWORD[.], v26|QWORD[.]] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4546924220008466684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v47|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Class.getEnclosingMethodInfo(Class.java:1072) [bci: 4]
stack: v1|QWORD[.] 
locals: - - 
java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1]
locals: v0|QWORD[.] - - - 
java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:4, 1, 1] <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v8|QWORD[.]] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4545434932760034561
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v46|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 19]
stack: v32|QWORD[.] v31|QWORD[.] 
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:19] <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v39|QWORD[.]] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B21" 
    xhandlers
    flags 
    probability 4521821694645981636
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v19|QWORD[.]] destination: B17 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -76563 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 19]
stack: v32|QWORD[.] v31|QWORD[.] 
locals: - - - 
>@ <|@ instruction DEOPT info [bci:19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -81171 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Class.getDeclaringClass(Class.java:1235) [bci: 4]
stack: v4|QWORD[.] 
locals: - - 
java.lang.Class.getEnclosingClass(Class.java:1277) [bci: 10]
locals: - - - - 
java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 10, 1] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -82451 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Class$EnclosingMethodInfo.<init>(Class.java:1080) [bci: 5]
locals: - - - 
java.lang.Class.getEnclosingMethodInfo(Class.java:1076) [bci: 17]
stack: v10|QWORD[.] 
locals: - v1|QWORD[.] 
java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1]
locals: v0|QWORD[.] - - - 
java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:5, 17, 1, 1] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -70419 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Class.getEnclosingClass(Class.java:1287) [bci: 43]
locals: - - v15|QWORD[.] - 
java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:43, 1] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #104        // getEnclosingClass:()java.lang.Class
     4: astore_1      
     5: aload_1       
     6: ifnonnull     11
     9: aconst_null   
    10: areturn       
    11: aload_0       
    12: invokevirtual #14         // getName:()java.lang.String
    15: aload_1       
    16: invokevirtual #14         // getName:()java.lang.String
    19: invokevirtual #99         // java.lang.String.length:()int
    22: invokevirtual #98         // java.lang.String.substring:(int)java.lang.String
    25: areturn       
    26: astore_2      
    27: new           #99         // java.lang.InternalError
    30: dup           
    31: ldc           #129        // "Malformed class name"
    33: aload_2       
    34: invokespecial #106        // java.lang.InternalError.<init>:(java.lang.String, java.lang.Throwable)void
    37: athrow        
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7bd8a449 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ st <@st|@reference-map: [stack:32]
live-base-pointers: []
java.lang.Class.getEnclosingMethodInfo(Class.java:1072) [bci: 1]
locals: - - 
java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1]
locals: stack:32|QWORD[.] - - - 
java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Class.getEnclosingMethod0()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1, 1, 1] <|@ <|@
      nr   14  <|@ instruction TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr   16  <|@ instruction BRANCH trueDestinationProbability: 0.9901123531748284 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607093358794902580
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   22  <|@ st <@st|@reference-map: [stack:32]
live-base-pointers: []
java.lang.Class.getDeclaringClass(Class.java:1235) [bci: 1]
locals: - - 
java.lang.Class.getEnclosingClass(Class.java:1277) [bci: 10]
locals: - - - - 
java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Class.getDeclaringClass0()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1, 10, 1] <|@ <|@
      nr   24  <|@ instruction TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr   26  <|@ instruction BRANCH trueDestinationProbability: 0.7818621453964507 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B12" 
    xhandlers
    flags 
    probability 4605147975031933422
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction JUMP ~[] destination: B2 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B2" "B11" "B4" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  156  <|@ instruction TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  158  <|@ instruction BRANCH trueDestinationProbability: 0.7744184392117807 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 4605150560733802449
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  162  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  164  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B31" 
    xhandlers
    flags 
    probability 4597295452555395260
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  168  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:java.lang.System] <|@ <|@
      nr  170  <|@ instruction rsi|DWORD[.] = MOV [rsi|QWORD[.] + 116] size: DWORD <|@ <|@
      nr  172  <|@ instruction TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr  174  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B19" 
    xhandlers
    flags 
    probability 4597295452555395260
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  178  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  180  <|@ instruction stack:40|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  182  <|@ instruction rdx|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  184  <|@ instruction TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr  186  <|@ instruction BRANCH trueDestinationProbability: 0.0029740774790130153 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B20" "B22" 
    xhandlers
    flags 
    probability 4597271280942134137
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  236  <|@ instruction rsi|DWORD[.] = MOV [rax|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  238  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3c106be8 encoding: base: 0 shift: 3 <|@ <|@
      nr  240  <|@ instruction TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr  242  <|@ instruction BRANCH trueDestinationProbability: 0.0029740774790130153 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4597247181217123645
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  280  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3c106be8 encoding: base: 0 shift: 3 <|@ <|@
      nr  282  <|@ instruction r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B18" "B21" "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4597295452555395260
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  290  <|@ st <@st|@reference-map: [r13:0, r14:0]
live-base-pointers: []
java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 19]
stack: r14|QWORD[.] r13|QWORD[.] 
locals: - - - 
>@ <|@ instruction rax|DWORD[.] = MOV [r13|QWORD[.] + 12] size: DWORD state [bci:19] <|@ <|@
      nr  292  <|@ st <@st|@reference-map: [rax:0, r13:0, r14:0]
live-base-pointers: []
java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 19]
stack: r14|QWORD[.] r13|QWORD[.] 
locals: - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rax|DWORD[.] * 8] state [bci:19] <|@ <|@
      nr  294  <|@ st <@st|@reference-map: [rax:0, r13:0, r14:0]
live-base-pointers: []
java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 19]
stack: r14|QWORD[.] r13|QWORD[.] 
locals: - - - 
>@ <|@ instruction r10|DWORD[.] = MOV [r14|QWORD[.] + 12] size: DWORD state [bci:19] <|@ <|@
      nr  296  <|@ st <@st|@reference-map: [rax:0, r10:0, r13:0, r14:0]
live-base-pointers: []
java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 19]
stack: r14|QWORD[.] r13|QWORD[.] 
locals: - - - 
>@ <|@ instruction r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:19] <|@ <|@
      nr  298  <|@ instruction r8|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  300  <|@ instruction CMP (x: r8|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  302  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4597295452555395260
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  314  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  316  <|@ instruction BRANCH trueDestinationProbability: 0.9651155608201366 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors 
    xhandlers
    flags 
    probability 4597011931638863298
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  320  <|@ instruction rax|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  322  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4596949555342412057
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   34  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:java.lang.System] <|@ <|@
      nr   36  <|@ instruction rsi|DWORD[.] = MOV [rsi|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   38  <|@ instruction TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr   40  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B12" 
    xhandlers
    flags 
    probability 4596949555342412057
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ instruction JUMP ~[] destination: B4 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4576853462108402432
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   62  <|@ instruction r10|QWORD = LEA [rdx|QWORD + 24] size: QWORD <|@ <|@
      nr   64  <|@ instruction CMP (x: r10|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   66  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576796463705128942
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   90  <|@ instruction MOV (x: [r15|QWORD + 96], y: r10|QWORD) size: QWORD <|@ <|@
      nr   92  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + 216] instr: 0 <|@ <|@
      nr   94  <|@ instruction rsi|QWORD[*] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr   96  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4576853462108402432
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  100  <|@ instruction r11|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Class$EnclosingMethodInfo;, resolved>} <|@ <|@
      nr  104  <|@ instruction rdx|QWORD = MOV [rdx|QWORD + 168] size: QWORD <|@ <|@
      nr  106  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  108  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Class$EnclosingMethodInfo;, resolved>;compressed} <|@ <|@
      nr  110  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  112  <|@ instruction MOV (x: [rsi|QWORD[*] + 20], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  114  <|@ instruction rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  116  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  118  <|@ instruction stack:40|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction stack:48|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  122  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:32]
live-base-pointers: []
java.lang.Class$EnclosingMethodInfo.<init>(Class.java:1080) [bci: 2]
locals: - - - 
java.lang.Class.getEnclosingMethodInfo(Class.java:1076) [bci: 17]
stack: stack:48|QWORD[.] 
locals: - stack:40|QWORD[.] 
java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1]
locals: stack:32|QWORD[.] - - - 
java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Class$EnclosingMethodInfo.<init>(Object[])> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:2, 17, 1, 1] <|@ <|@
      nr  124  <|@ instruction r11|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  126  <|@ instruction rsi|DWORD[.] = MOV [r11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  128  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3c106be8 encoding: base: 0 shift: 3 <|@ <|@
      nr  130  <|@ instruction CMP (x: rdx|QWORD[.], y: stack:32|QWORD[.]) size: QWORD <|@ <|@
      nr  132  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576853462108402432
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  148  <|@ st <@st|@reference-map: [rdx:0, r11:0, stack:24, stack:32]
live-base-pointers: []
java.lang.Class$EnclosingMethodInfo.<init>(Class.java:1080) [bci: 5]
locals: - - - 
java.lang.Class.getEnclosingMethodInfo(Class.java:1076) [bci: 17]
stack: r11|QWORD[.] 
locals: - stack:40|QWORD[.] 
java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1]
locals: stack:32|QWORD[.] - - - 
java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:5, 17, 1, 1] <|@ <|@
      nr  150  <|@ instruction rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  152  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4575689956445564837
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  326  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  328  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr  330  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  332  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4575631964789415510
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  362  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  364  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0 <|@ <|@
      nr  366  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  368  <|@ instruction JUMP ~[] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B28" 
    successors 
    xhandlers
    flags 
    probability 4575689956445564837
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  372  <|@ instruction r9|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  376  <|@ instruction rdx|QWORD = MOV [rdx|QWORD + 168] size: QWORD <|@ <|@
      nr  378  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  380  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  382  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  384  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3c106be8 encoding: base: 0 shift: 3 <|@ <|@
      nr  386  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  388  <|@ instruction rsi|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  390  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  392  <|@ instruction rcx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  394  <|@ instruction r8|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  396  <|@ instruction stack:48|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  398  <|@ st <@st|@reference-map: [stack:16]
live-base-pointers: []
java.lang.String.substring(String.java:1933) [bci: 52]
stack: stack:48|QWORD[.] 
locals: - - - 
java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 22]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<String.<init>(char[], int, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:52, 22] <|@ <|@
      nr  400  <|@ instruction rax|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4559327156266419042
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  190  <|@ instruction r10|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  192  <|@ instruction r11|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  194  <|@ instruction rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  196  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
java.lang.Class.getName(Class.java:642) [bci: 11]
stack: stack:32|QWORD[.] 
locals: - - 
java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 12]
locals: - stack:40|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Class.getName0()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:11, 12] <|@ <|@
      nr  198  <|@ instruction rsi|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3c106be8 encoding: base: 0 shift: 3 <|@ <|@
      nr  200  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction MOV (x: [r13|QWORD[.] + 20], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr  204  <|@ instruction rsi|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  206  <|@ instruction r10|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  208  <|@ instruction MOVB (x: [rsi|QWORD[*] + r10|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  210  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction rsi|DWORD[.] = MOV [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  214  <|@ instruction TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr  216  <|@ instruction BRANCH trueDestinationProbability: 0.0029740774790130153 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4559308752874257424
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  226  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3c106be8 encoding: base: 0 shift: 3 <|@ <|@
      nr  228  <|@ instruction r14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction JUMP ~[] destination: B18 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4559308752874257424
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  246  <|@ instruction stack:48|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  248  <|@ instruction r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  250  <|@ instruction JUMP ~[] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4559327156266419042
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  254  <|@ instruction r11|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  256  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  258  <|@ st <@st|@reference-map: [stack:16, stack:24]
live-base-pointers: []
java.lang.Class.getName(Class.java:642) [bci: 11]
stack: stack:40|QWORD[.] 
locals: - - 
java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 16]
stack: stack:48|QWORD[.] 
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Class.getName0()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:11, 16] <|@ <|@
      nr  260  <|@ instruction rsi|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3c106be8 encoding: base: 0 shift: 3 <|@ <|@
      nr  262  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr  266  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  268  <|@ instruction r11|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  270  <|@ instruction MOVB (x: [rsi|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  272  <|@ instruction r14|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  276  <|@ instruction JUMP ~[] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4546924220008466684
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction stack:40|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   72  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   74  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   76  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   78  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   80  <|@ st <@st|@reference-map: [r13:0, stack:24, stack:32]
live-base-pointers: []
java.lang.Class.getEnclosingMethodInfo(Class.java:1072) [bci: 4]
stack: stack:40|QWORD[.] 
locals: - - 
java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1]
locals: r13|QWORD[.] - - - 
java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
locals: r13|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:4, 1, 1] <|@ <|@
      nr   82  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction rax|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4545434932760034561
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  336  <|@ instruction stack:52|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  338  <|@ instruction stack:56|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  340  <|@ instruction stack:60|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  342  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  344  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  346  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  348  <|@ st <@st|@reference-map: [r13:0, r14:0, stack:4]
live-base-pointers: []
java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 19]
stack: r14|QWORD[.] r13|QWORD[.] 
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:19] <|@ <|@
      nr  350  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  352  <|@ instruction r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  354  <|@ instruction r11|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr  356  <|@ instruction r10|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD <|@ <|@
      nr  358  <|@ instruction JUMP ~[] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B21" 
    xhandlers
    flags 
    probability 4521821694645981636
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  220  <|@ instruction stack:48|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  222  <|@ instruction JUMP ~[] destination: B17 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  306  <|@ instruction MOV [r15|QWORD + 668] y: -76563 size: DWORD <|@ <|@
      nr  308  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  310  <|@ st <@st|@reference-map: [r13:0, r14:0]
live-base-pointers: []
java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 19]
stack: r14|QWORD[.] r13|QWORD[.] 
locals: - - - 
>@ <|@ instruction DEOPT info [bci:19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   48  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   50  <|@ instruction MOV [r15|QWORD + 668] y: -81171 size: DWORD <|@ <|@
      nr   52  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   54  <|@ st <@st|@reference-map: [rax:0, r13:0]
live-base-pointers: []
java.lang.Class.getDeclaringClass(Class.java:1235) [bci: 4]
stack: rax|QWORD[.] 
locals: - - 
java.lang.Class.getEnclosingClass(Class.java:1277) [bci: 10]
locals: - - - - 
java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
locals: r13|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 10, 1] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  136  <|@ instruction rax|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  140  <|@ instruction MOV [r15|QWORD + 668] y: -82451 size: DWORD <|@ <|@
      nr  142  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  144  <|@ st <@st|@reference-map: [rax:0, r11:0, r13:0]
live-base-pointers: []
java.lang.Class$EnclosingMethodInfo.<init>(Class.java:1080) [bci: 5]
locals: - - - 
java.lang.Class.getEnclosingMethodInfo(Class.java:1076) [bci: 17]
stack: r11|QWORD[.] 
locals: - rax|QWORD[.] 
java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1]
locals: r13|QWORD[.] - - - 
java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
locals: r13|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:5, 17, 1, 1] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  406  <|@ instruction r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  408  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction MOV [r15|QWORD + 668] y: -70419 size: DWORD <|@ <|@
      nr  412  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  414  <|@ st <@st|@reference-map: [r10:0, r13:0]
live-base-pointers: []
java.lang.Class.getEnclosingClass(Class.java:1287) [bci: 43]
locals: - - r10|QWORD[.] - 
java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
locals: r13|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:43, 1] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #104        // getEnclosingClass:()java.lang.Class
     4: astore_1      
     5: aload_1       
     6: ifnonnull     11
     9: aconst_null   
    10: areturn       
    11: aload_0       
    12: invokevirtual #14         // getName:()java.lang.String
    15: aload_1       
    16: invokevirtual #14         // getName:()java.lang.String
    19: invokevirtual #99         // java.lang.String.length:()int
    22: invokevirtual #98         // java.lang.String.substring:(int)java.lang.String
    25: areturn       
    26: astore_2      
    27: new           #99         // java.lang.InternalError
    30: dup           
    31: ldc           #129        // "Malformed class name"
    33: aload_2       
    34: invokespecial #106        // java.lang.InternalError.<init>:(java.lang.String, java.lang.Throwable)void
    37: athrow        
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7bd8a449 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ st <@st|@reference-map: [stack:32]
live-base-pointers: []
java.lang.Class.getEnclosingMethodInfo(Class.java:1072) [bci: 1]
locals: - - 
java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1]
locals: stack:32|QWORD[.] - - - 
java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Class.getEnclosingMethod0()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1, 1, 1] <|@ <|@
      nr   14  <|@ instruction TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr   16  <|@ instruction BRANCH trueDestinationProbability: 0.9901123531748284 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B12" "B3" 
    xhandlers
    flags 
    probability 4607093358794902580
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   22  <|@ st <@st|@reference-map: [stack:32]
live-base-pointers: []
java.lang.Class.getDeclaringClass(Class.java:1235) [bci: 1]
locals: - - 
java.lang.Class.getEnclosingClass(Class.java:1277) [bci: 10]
locals: - - - - 
java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Class.getDeclaringClass0()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1, 10, 1] <|@ <|@
      nr   24  <|@ instruction TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr   26  <|@ instruction BRANCH trueDestinationProbability: 0.7818621453964507 condition: = trueDestination: B1 -> B12 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B1" "B11" "B3" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  156  <|@ instruction TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  158  <|@ instruction BRANCH trueDestinationProbability: 0.7744184392117807 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 4605150560733802449
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  162  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  164  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B31" 
    xhandlers
    flags 
    probability 4597295452555395260
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  168  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:java.lang.System] <|@ <|@
      nr  170  <|@ instruction rsi|DWORD[.] = MOV [rsi|QWORD[.] + 116] size: DWORD <|@ <|@
      nr  172  <|@ instruction TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr  174  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B19" 
    xhandlers
    flags 
    probability 4597295452555395260
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  178  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  180  <|@ instruction stack:40|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  182  <|@ instruction rdx|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  184  <|@ instruction TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr  186  <|@ instruction BRANCH trueDestinationProbability: 0.0029740774790130153 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B20" "B22" 
    xhandlers
    flags 
    probability 4597271280942134137
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  236  <|@ instruction rsi|DWORD[.] = MOV [rax|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  238  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3c106be8 encoding: base: 0 shift: 3 <|@ <|@
      nr  240  <|@ instruction TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr  242  <|@ instruction BRANCH trueDestinationProbability: 0.0029740774790130153 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4597247181217123645
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  280  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3c106be8 encoding: base: 0 shift: 3 <|@ <|@
      nr  282  <|@ instruction r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B18" "B21" "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4597295452555395260
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  290  <|@ st <@st|@reference-map: [r13:0, r14:0]
live-base-pointers: []
java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 19]
stack: r14|QWORD[.] r13|QWORD[.] 
locals: - - - 
>@ <|@ instruction rax|DWORD[.] = MOV [r13|QWORD[.] + 12] size: DWORD state [bci:19] <|@ <|@
      nr  292  <|@ st <@st|@reference-map: [rax:0, r13:0, r14:0]
live-base-pointers: []
java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 19]
stack: r14|QWORD[.] r13|QWORD[.] 
locals: - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rax|DWORD[.] * 8] state [bci:19] <|@ <|@
      nr  294  <|@ st <@st|@reference-map: [rax:0, r13:0, r14:0]
live-base-pointers: []
java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 19]
stack: r14|QWORD[.] r13|QWORD[.] 
locals: - - - 
>@ <|@ instruction r10|DWORD[.] = MOV [r14|QWORD[.] + 12] size: DWORD state [bci:19] <|@ <|@
      nr  296  <|@ st <@st|@reference-map: [rax:0, r10:0, r13:0, r14:0]
live-base-pointers: []
java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 19]
stack: r14|QWORD[.] r13|QWORD[.] 
locals: - - - 
>@ <|@ instruction r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:19] <|@ <|@
      nr  298  <|@ instruction r8|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  300  <|@ instruction CMP (x: r8|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  302  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4597295452555395260
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  314  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  316  <|@ instruction BRANCH trueDestinationProbability: 0.9651155608201366 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors 
    xhandlers
    flags 
    probability 4597011931638863298
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  320  <|@ instruction rax|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  322  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B12" "B5" 
    xhandlers
    flags 
    probability 4596949555342412057
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   34  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:java.lang.System] <|@ <|@
      nr   36  <|@ instruction rsi|DWORD[.] = MOV [rsi|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   38  <|@ instruction TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr   40  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B12 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4576853462108402432
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   62  <|@ instruction r10|QWORD = LEA [rdx|QWORD + 24] size: QWORD <|@ <|@
      nr   64  <|@ instruction CMP (x: r10|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   66  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576796463705128942
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   90  <|@ instruction MOV (x: [r15|QWORD + 96], y: r10|QWORD) size: QWORD <|@ <|@
      nr   92  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + 216] instr: 0 <|@ <|@
      nr   94  <|@ instruction rsi|QWORD[*] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr   96  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4576853462108402432
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  100  <|@ instruction r11|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Class$EnclosingMethodInfo;, resolved>} <|@ <|@
      nr  104  <|@ instruction rdx|QWORD = MOV [rdx|QWORD + 168] size: QWORD <|@ <|@
      nr  106  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  108  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Class$EnclosingMethodInfo;, resolved>;compressed} <|@ <|@
      nr  110  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  112  <|@ instruction MOV (x: [rsi|QWORD[*] + 20], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  114  <|@ instruction rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  116  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  118  <|@ instruction stack:40|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction stack:48|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  122  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:32]
live-base-pointers: []
java.lang.Class$EnclosingMethodInfo.<init>(Class.java:1080) [bci: 2]
locals: - - - 
java.lang.Class.getEnclosingMethodInfo(Class.java:1076) [bci: 17]
stack: stack:48|QWORD[.] 
locals: - stack:40|QWORD[.] 
java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1]
locals: stack:32|QWORD[.] - - - 
java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Class$EnclosingMethodInfo.<init>(Object[])> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:2, 17, 1, 1] <|@ <|@
      nr  124  <|@ instruction r11|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  126  <|@ instruction rsi|DWORD[.] = MOV [r11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  128  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3c106be8 encoding: base: 0 shift: 3 <|@ <|@
      nr  130  <|@ instruction CMP (x: rdx|QWORD[.], y: stack:32|QWORD[.]) size: QWORD <|@ <|@
      nr  132  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576853462108402432
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  148  <|@ st <@st|@reference-map: [rdx:0, r11:0, stack:24, stack:32]
live-base-pointers: []
java.lang.Class$EnclosingMethodInfo.<init>(Class.java:1080) [bci: 5]
locals: - - - 
java.lang.Class.getEnclosingMethodInfo(Class.java:1076) [bci: 17]
stack: r11|QWORD[.] 
locals: - stack:40|QWORD[.] 
java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1]
locals: stack:32|QWORD[.] - - - 
java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:5, 17, 1, 1] <|@ <|@
      nr  150  <|@ instruction rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  152  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4575689956445564837
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  326  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  328  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr  330  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  332  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4575631964789415510
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  362  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  364  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0 <|@ <|@
      nr  366  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  368  <|@ instruction JUMP ~[] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B28" 
    successors 
    xhandlers
    flags 
    probability 4575689956445564837
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  372  <|@ instruction r9|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  376  <|@ instruction rdx|QWORD = MOV [rdx|QWORD + 168] size: QWORD <|@ <|@
      nr  378  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  380  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  382  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  384  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3c106be8 encoding: base: 0 shift: 3 <|@ <|@
      nr  386  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  388  <|@ instruction rsi|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  390  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  392  <|@ instruction rcx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  394  <|@ instruction r8|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  396  <|@ instruction stack:48|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  398  <|@ st <@st|@reference-map: [stack:16]
live-base-pointers: []
java.lang.String.substring(String.java:1933) [bci: 52]
stack: stack:48|QWORD[.] 
locals: - - - 
java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 22]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<String.<init>(char[], int, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:52, 22] <|@ <|@
      nr  400  <|@ instruction rax|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4559327156266419042
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  190  <|@ instruction r10|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  192  <|@ instruction r11|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  196  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
java.lang.Class.getName(Class.java:642) [bci: 11]
stack: stack:32|QWORD[.] 
locals: - - 
java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 12]
locals: - stack:40|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Class.getName0()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:11, 12] <|@ <|@
      nr  198  <|@ instruction rsi|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3c106be8 encoding: base: 0 shift: 3 <|@ <|@
      nr  200  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction MOV (x: [r13|QWORD[.] + 20], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr  204  <|@ instruction rsi|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  206  <|@ instruction r10|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  208  <|@ instruction MOVB (x: [rsi|QWORD[*] + r10|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  210  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction rsi|DWORD[.] = MOV [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  214  <|@ instruction TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr  216  <|@ instruction BRANCH trueDestinationProbability: 0.0029740774790130153 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4559308752874257424
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  226  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3c106be8 encoding: base: 0 shift: 3 <|@ <|@
      nr  228  <|@ instruction r14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction JUMP ~[] destination: B18 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4559308752874257424
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  246  <|@ instruction stack:48|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  248  <|@ instruction r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  250  <|@ instruction JUMP ~[] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4559327156266419042
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  254  <|@ instruction r11|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  256  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  258  <|@ st <@st|@reference-map: [stack:16, stack:24]
live-base-pointers: []
java.lang.Class.getName(Class.java:642) [bci: 11]
stack: stack:40|QWORD[.] 
locals: - - 
java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 16]
stack: stack:48|QWORD[.] 
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Class.getName0()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:11, 16] <|@ <|@
      nr  260  <|@ instruction rsi|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3c106be8 encoding: base: 0 shift: 3 <|@ <|@
      nr  262  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr  266  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  268  <|@ instruction r11|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  270  <|@ instruction MOVB (x: [rsi|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  272  <|@ instruction r14|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  276  <|@ instruction JUMP ~[] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4546924220008466684
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction stack:40|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   72  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   74  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   76  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   78  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   80  <|@ st <@st|@reference-map: [r13:0, stack:24, stack:32]
live-base-pointers: []
java.lang.Class.getEnclosingMethodInfo(Class.java:1072) [bci: 4]
stack: stack:40|QWORD[.] 
locals: - - 
java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1]
locals: r13|QWORD[.] - - - 
java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
locals: r13|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:4, 1, 1] <|@ <|@
      nr   82  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction rax|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4545434932760034561
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  336  <|@ instruction stack:52|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  338  <|@ instruction stack:56|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  340  <|@ instruction stack:60|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  342  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  344  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  346  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  348  <|@ st <@st|@reference-map: [r13:0, r14:0, stack:4]
live-base-pointers: []
java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 19]
stack: r14|QWORD[.] r13|QWORD[.] 
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:19] <|@ <|@
      nr  350  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  352  <|@ instruction r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  354  <|@ instruction r11|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr  356  <|@ instruction r10|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD <|@ <|@
      nr  358  <|@ instruction JUMP ~[] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B21" 
    xhandlers
    flags 
    probability 4521821694645981636
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  220  <|@ instruction stack:48|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  222  <|@ instruction JUMP ~[] destination: B17 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  306  <|@ instruction MOV [r15|QWORD + 668] y: -76563 size: DWORD <|@ <|@
      nr  308  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  310  <|@ st <@st|@reference-map: [r13:0, r14:0]
live-base-pointers: []
java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 19]
stack: r14|QWORD[.] r13|QWORD[.] 
locals: - - - 
>@ <|@ instruction DEOPT info [bci:19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   48  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   50  <|@ instruction MOV [r15|QWORD + 668] y: -81171 size: DWORD <|@ <|@
      nr   52  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   54  <|@ st <@st|@reference-map: [rax:0, r13:0]
live-base-pointers: []
java.lang.Class.getDeclaringClass(Class.java:1235) [bci: 4]
stack: rax|QWORD[.] 
locals: - - 
java.lang.Class.getEnclosingClass(Class.java:1277) [bci: 10]
locals: - - - - 
java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
locals: r13|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 10, 1] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  136  <|@ instruction rax|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  140  <|@ instruction MOV [r15|QWORD + 668] y: -82451 size: DWORD <|@ <|@
      nr  142  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  144  <|@ st <@st|@reference-map: [rax:0, r11:0, r13:0]
live-base-pointers: []
java.lang.Class$EnclosingMethodInfo.<init>(Class.java:1080) [bci: 5]
locals: - - - 
java.lang.Class.getEnclosingMethodInfo(Class.java:1076) [bci: 17]
stack: r11|QWORD[.] 
locals: - rax|QWORD[.] 
java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1]
locals: r13|QWORD[.] - - - 
java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
locals: r13|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:5, 17, 1, 1] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  406  <|@ instruction r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  408  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction MOV [r15|QWORD + 668] y: -70419 size: DWORD <|@ <|@
      nr  412  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  414  <|@ st <@st|@reference-map: [r10:0, r13:0]
live-base-pointers: []
java.lang.Class.getEnclosingClass(Class.java:1287) [bci: 43]
locals: - - r10|QWORD[.] - 
java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
locals: r13|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:43, 1] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #104        // getEnclosingClass:()java.lang.Class
     4: astore_1      
     5: aload_1       
     6: ifnonnull     11
     9: aconst_null   
    10: areturn       
    11: aload_0       
    12: invokevirtual #14         // getName:()java.lang.String
    15: aload_1       
    16: invokevirtual #14         // getName:()java.lang.String
    19: invokevirtual #99         // java.lang.String.length:()int
    22: invokevirtual #98         // java.lang.String.substring:(int)java.lang.String
    25: areturn       
    26: astore_2      
    27: new           #99         // java.lang.InternalError
    30: dup           
    31: ldc           #129        // "Malformed class name"
    33: aload_2       
    34: invokespecial #106        // java.lang.InternalError.<init>:(java.lang.String, java.lang.Throwable)void
    37: athrow        
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec3848896c243048897424204c8bd60f1f8000000000e800000000904885c00f85df000000488b7424200f1f4000e800000000904885c00f85ad0000004885c00f851d00000048b80000000000000000488b6c24304883c438850500000000c5f877c348beaddeaddeaddeadde8b767485f60f850e030000488b74242048894424188b561485d20f847f0100008b701448c1e20385f60f84cd01000048c1e6034c8bf24c8bee418b450c418504c4458b560c468b1cd50c000000448b04c50c000000453bc30f87640200004585c00f85be000000498bc6488b6c24304883c438850500000000c5f877c348beaddeaddeaddeadde8b767485f60f843effffffe943020000488b742420498b57604c8d52184d3b57700f879b0100004d8957600f1882d8000000488bf24c8bde48baaddeaddeaddeadde488b92a8000000488916c74608addeadde4c89660c44896614498bf3488bd048894424184c895c24100f1f8000000000e800000000904c8b5c2410418b730c8bd648c1e203483b5424200f84de010000418504f4488bc2e9abfeffff498b7760488d5618493b57700f8741010000498957600f1886d80000004c8bce48baaddeaddeaddeadde488b92a8000000488916c74608addeadde4c89660c49c1e203452bd8498bf1498bd2418bc8458bc34c894c24100f1f440000e80000000090488b442410488b6c24304883c438850500000000c5f877c349ba00e01b17010000004c8bde0f1f440000e80000000090488bf048c1ee034c8b6c242041897514498bf548c1ee0949ba00e01b1701000000468824164c8b542418418b721485f60f84cb00000048c1e6034c8bf04c8beee93dfeffff48895424104c8bd049bb00e01b1701000000498bf2e80000000090488bf048c1ee034c8b54241841897214498bf248c1ee0949bb00e01b17010000004688241e4c8b7424104c8be8e9f0fdffff48894424184c8bee48beaddeaddeaddeaddeba02000000b901000000e80000000090488bf0488b442418e944feffff448944240c44895c2408448954240448beaddeaddeaddeaddeba02000000b901000000e80000000090488bf0448b44240c448b5c2408448b542404e98afeffff4889442410e942ffffff41c7879c020000edd4feff4d89a7a8020000e800000000904c8b6c242041c7879c020000edc2feff4d89a7a8020000e80000000090488b4424184c8b6c242041c7879c020000edbdfeff4d89a7a8020000e800000000904c8bd04c8b6c242041c7879c020000edecfeff4d89a7a8020000e80000000090e80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7bd8a449 slotKind: QWORD  <||@
  Comment 48 6 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 53 8 r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 56 12 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Class.getEnclosingMethod0()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1, 1, 1]  <||@
  Comment 56 9  <||@
  Comment 63 {HotSpotMethod<Class.getEnclosingMethod0()>}  <||@
  Comment 68 [stack:32]at java.lang.Class.getEnclosingMethodInfo(Class.java:1072) [bci: 1, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:32|QWORD[.]  |-  |-  |- 
  at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |-   <||@
  Comment 69 14 TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD  <||@
  Comment 72 16 BRANCH trueDestinationProbability: 0.9901123531748284 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B6  <||@
  Comment 78 block B1 null  <||@
  Comment 78 18 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 78 20 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 83 22 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Class.getDeclaringClass0()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1, 10, 1]  <||@
  Comment 83 9  <||@
  Comment 87 {HotSpotMethod<Class.getDeclaringClass0()>}  <||@
  Comment 92 [stack:32]at java.lang.Class.getDeclaringClass(Class.java:1235) [bci: 1, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Class.getEnclosingClass(Class.java:1277) [bci: 10, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |-   <||@
  Comment 93 24 TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD  <||@
  Comment 96 26 BRANCH trueDestinationProbability: 0.7818621453964507 condition: = trueDestination: B1 -> B12 falseDestination: B1 -> B3  <||@
  Comment 102 block B12 null  <||@
  Comment 102 154 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 102 156 TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD  <||@
  Comment 105 158 BRANCH trueDestinationProbability: 0.7744184392117807 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14  <||@
  Comment 111 block B13 null  <||@
  Comment 111 160 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 111 162 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 121 164 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 130 12  <||@
  Comment 140 block B14 null  <||@
  Comment 140 166 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 140 168 rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:java.lang.System]  <||@
  Comment 140 {Object[Class:java.lang.System]}  <||@
  Comment 150 170 rsi|DWORD[.] = MOV [rsi|QWORD[.] + 116] size: DWORD  <||@
  Comment 153 172 TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 155 174 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B31  <||@
  Comment 161 block B15 null  <||@
  Comment 161 176 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 161 178 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 166 180 stack:40|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 171 182 rdx|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 174 184 TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 176 186 BRANCH trueDestinationProbability: 0.0029740774790130153 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B19  <||@
  Comment 182 block B19 null  <||@
  Comment 182 234 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 182 236 rsi|DWORD[.] = MOV [rax|QWORD[.] + 20] size: DWORD  <||@
  Comment 185 238 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3c106be8 encoding: base: 0 shift: 3  <||@
  Comment 189 240 TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 191 242 BRANCH trueDestinationProbability: 0.0029740774790130153 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B22  <||@
  Comment 197 block B22 null  <||@
  Comment 197 278 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 197 280 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3c106be8 encoding: base: 0 shift: 3  <||@
  Comment 201 282 r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 204 284 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 207 286 JUMP ~[] destination: B22 -> B23  <||@
  Comment 207 block B23 null  <||@
  Comment 207 288 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 207 290 rax|DWORD[.] = MOV [r13|QWORD[.] + 12] size: DWORD state [bci:19]  <||@
  Comment 207 [r13:0, r14:0]at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 19, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |-             |-             |- 
     stack:   |r14|QWORD[.]  |r13|QWORD[.]  |    <||@
  Comment 207 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 211 292 NULLCHECK [r12|QWORD[*] + rax|DWORD[.] * 8] state [bci:19]  <||@
  Comment 211 [rax:0, r13:0, r14:0]at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 19, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |-             |-             |- 
     stack:   |r14|QWORD[.]  |r13|QWORD[.]  |    <||@
  Comment 211 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 215 294 r10|DWORD[.] = MOV [r14|QWORD[.] + 12] size: DWORD state [bci:19]  <||@
  Comment 215 [rax:0, r13:0, r14:0]at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 19, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |-             |-             |- 
     stack:   |r14|QWORD[.]  |r13|QWORD[.]  |    <||@
  Comment 215 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 219 296 r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:19]  <||@
  Comment 219 [rax:0, r10:0, r13:0, r14:0]at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 19, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |-             |-             |- 
     stack:   |r14|QWORD[.]  |r13|QWORD[.]  |    <||@
  Comment 219 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 227 298 r8|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 235 300 CMP (x: r8|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 238 302 BRANCH trueDestinationProbability: 0.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25  <||@
  Comment 244 block B25 null  <||@
  Comment 244 312 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 244 314 TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 247 316 BRANCH trueDestinationProbability: 0.9651155608201366 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27  <||@
  Comment 253 block B26 null  <||@
  Comment 253 318 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 253 320 rax|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 256 322 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 265 12  <||@
  Comment 275 block B3 null  <||@
  Comment 275 32 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 275 34 rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:java.lang.System]  <||@
  Comment 275 {Object[Class:java.lang.System]}  <||@
  Comment 285 36 rsi|DWORD[.] = MOV [rsi|QWORD[.] + 116] size: DWORD  <||@
  Comment 288 38 TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 290 40 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B12 falseDestination: B3 -> B5  <||@
  Comment 301 block B6 null  <||@
  Comment 301 56 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 301 58 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 306 60 rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 310 62 r10|QWORD = LEA [rdx|QWORD + 24] size: QWORD  <||@
  Comment 314 64 CMP (x: r10|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 318 66 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8  <||@
  Comment 324 block B8 null  <||@
  Comment 324 88 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 324 90 MOV (x: [r15|QWORD + 96], y: r10|QWORD) size: QWORD  <||@
  Comment 328 92 AMD64PREFETCH ~[rdx|QWORD + 216] instr: 0  <||@
  Comment 335 94 rsi|QWORD[*] = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 338 96 JUMP ~[] destination: B8 -> B9  <||@
  Comment 338 block B9 null  <||@
  Comment 338 98 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 338 100 r11|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 341 102 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Class$EnclosingMethodInfo;, resolved>}  <||@
  Comment 341 {meta{HotSpotType<Ljava/lang/Class$EnclosingMethodInfo;, resolved>}}  <||@
  Comment 351 104 rdx|QWORD = MOV [rdx|QWORD + 168] size: QWORD  <||@
  Comment 358 106 MOV (x: [rsi|QWORD[*]], y: rdx|QWORD) size: QWORD  <||@
  Comment 361 108 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Class$EnclosingMethodInfo;, resolved>;compressed}  <||@
  Comment 361 {meta{HotSpotType<Ljava/lang/Class$EnclosingMethodInfo;, resolved>;compressed}}  <||@
  Comment 368 110 MOV (x: [rsi|QWORD[*] + 12], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 372 112 MOV (x: [rsi|QWORD[*] + 20], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 376 114 rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 379 116 rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 382 118 stack:40|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 387 120 stack:48|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 392 122 - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Class$EnclosingMethodInfo.<init>(Object[])> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:2, 17, 1, 1]  <||@
  Comment 392 9  <||@
  Comment 399 {HotSpotMethod<Class$EnclosingMethodInfo.<init>(Object[])>}  <||@
  Comment 404 [stack:16, stack:24, stack:32]at java.lang.Class$EnclosingMethodInfo.<init>(Class.java:1080) [bci: 2, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.lang.Class.getEnclosingMethodInfo(Class.java:1076) [bci: 17, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |-                  |stack:40|QWORD[.] 
     stack:   |stack:48|QWORD[.]  |                  
  at java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:32|QWORD[.]  |-  |-  |- 
  at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |-   <||@
  Comment 405 124 r11|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 410 126 rsi|DWORD[.] = MOV [r11|QWORD[.] + 12] size: DWORD  <||@
  Comment 414 128 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3c106be8 encoding: base: 0 shift: 3  <||@
  Comment 420 130 CMP (x: rdx|QWORD[.], y: stack:32|QWORD[.]) size: QWORD  <||@
  Comment 425 132 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11  <||@
  Comment 431 block B11 null  <||@
  Comment 431 146 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 431 148 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:5, 17, 1, 1]  <||@
  Comment 431 [rdx:0, r11:0, stack:24, stack:32]at java.lang.Class$EnclosingMethodInfo.<init>(Class.java:1080) [bci: 5, duringCall: false, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.lang.Class.getEnclosingMethodInfo(Class.java:1076) [bci: 17, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |-             |stack:40|QWORD[.] 
     stack:   |r11|QWORD[.]  |                  
  at java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:32|QWORD[.]  |-  |-  |- 
  at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |-   <||@
  Comment 431 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 435 150 rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 438 152 JUMP ~[] destination: B11 -> B12  <||@
  Comment 443 block B27 null  <||@
  Comment 443 324 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 443 326 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 447 328 rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD  <||@
  Comment 451 330 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 455 332 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29  <||@
  Comment 461 block B29 null  <||@
  Comment 461 360 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 461 362 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 465 364 AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0  <||@
  Comment 472 366 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 472 368 JUMP ~[] destination: B29 -> B30  <||@
  Comment 472 block B30 null  <||@
  Comment 472 370 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 472 372 r9|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 475 374 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 475 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 485 376 rdx|QWORD = MOV [rdx|QWORD + 168] size: QWORD  <||@
  Comment 492 378 MOV (x: [rsi|QWORD[*]], y: rdx|QWORD) size: QWORD  <||@
  Comment 495 380 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 495 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 502 382 MOV (x: [rsi|QWORD[*] + 12], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 506 384 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3c106be8 encoding: base: 0 shift: 3  <||@
  Comment 510 386 r11|DWORD = SUB (x: r11|DWORD, ~y: r8|DWORD) size: DWORD  <||@
  Comment 513 388 rsi|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 516 390 rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 519 392 rcx|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 522 394 r8|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 525 396 stack:48|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 530 398 - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<String.<init>(char[], int, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:52, 22]  <||@
  Comment 530 9  <||@
  Comment 535 {HotSpotMethod<String.<init>(char[], int, int)>}  <||@
  Comment 540 [stack:16]at java.lang.String.substring(String.java:1933) [bci: 52, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |-                  |-  |- 
     stack:   |stack:48|QWORD[.]  |   |  
  at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 22, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 541 400 rax|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 546 402 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 555 12  <||@
  Comment 565 block B16 null  <||@
  Comment 565 188 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 565 190 r10|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 575 192 r11|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 578 196 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Class.getName0()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:11, 12]  <||@
  Comment 578 9  <||@
  Comment 583 {HotSpotMethod<Class.getName0()>}  <||@
  Comment 588 [stack:24, stack:32]at java.lang.Class.getName(Class.java:642) [bci: 11, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |-                  |- 
     stack:   |stack:32|QWORD[.]  |  
  at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 12, duringCall: true, rethrow: false]
              |0  |1                  |2 
     locals:  |-  |stack:40|QWORD[.]  |-   <||@
  Comment 589 198 rsi|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3c106be8 encoding: base: 0 shift: 3  <||@
  Comment 596 200 r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 601 202 MOV (x: [r13|QWORD[.] + 20], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 605 204 rsi|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD  <||@
  Comment 612 206 r10|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 622 208 MOVB (x: [rsi|QWORD[*] + r10|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 626 210 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 631 212 rsi|DWORD[.] = MOV [r10|QWORD[.] + 20] size: DWORD  <||@
  Comment 635 214 TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 637 216 BRANCH trueDestinationProbability: 0.0029740774790130153 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18  <||@
  Comment 643 block B18 null  <||@
  Comment 643 224 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 643 226 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3c106be8 encoding: base: 0 shift: 3  <||@
  Comment 647 228 r14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 650 230 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 653 232 JUMP ~[] destination: B18 -> B23  <||@
  Comment 658 block B20 null  <||@
  Comment 658 244 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 658 246 stack:48|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 663 248 r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 666 250 JUMP ~[] destination: B20 -> B21  <||@
  Comment 666 block B21 null  <||@
  Comment 666 252 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 666 254 r11|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 676 256 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 679 258 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Class.getName0()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:11, 16]  <||@
  Comment 679 {HotSpotMethod<Class.getName0()>}  <||@
  Comment 679 9  <||@
  Comment 684 [stack:16, stack:24]at java.lang.Class.getName(Class.java:642) [bci: 11, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |-                  |- 
     stack:   |stack:40|QWORD[.]  |  
  at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |-                  |-  |- 
     stack:   |stack:48|QWORD[.]  |   |    <||@
  Comment 685 260 rsi|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3c106be8 encoding: base: 0 shift: 3  <||@
  Comment 692 262 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 697 264 MOV (x: [r10|QWORD[.] + 20], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 701 266 rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD  <||@
  Comment 708 268 r11|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 718 270 MOVB (x: [rsi|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 722 272 r14|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 727 274 r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 730 276 JUMP ~[] destination: B21 -> B23  <||@
  Comment 735 block B7 null  <||@
  Comment 735 68 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 735 70 stack:40|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 740 72 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 743 74 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 743 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 753 76 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 758 78 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 763 80 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:4, 1, 1]  <||@
  Comment 763 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 768 [r13:0, stack:24, stack:32]at java.lang.Class.getEnclosingMethodInfo(Class.java:1072) [bci: 4, duringCall: false, rethrow: false]
              |0                  |1 
     locals:  |-                  |- 
     stack:   |stack:40|QWORD[.]  |  
  at java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1, duringCall: true, rethrow: false]
              |0             |1  |2  |3 
     locals:  |r13|QWORD[.]  |-  |-  |- 
  at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1, duringCall: true, rethrow: false]
              |0             |1  |2 
     locals:  |r13|QWORD[.]  |-  |-   <||@
  Comment 769 82 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 772 84 rax|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 777 86 JUMP ~[] destination: B7 -> B9  <||@
  Comment 782 block B28 null  <||@
  Comment 782 334 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 782 336 stack:52|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 787 338 stack:56|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 792 340 stack:60|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 797 342 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 797 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 807 344 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 812 346 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 817 348 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:19]  <||@
  Comment 817 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 822 [r13:0, r14:0, stack:4]at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 19, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |-             |-             |- 
     stack:   |r14|QWORD[.]  |r13|QWORD[.]  |    <||@
  Comment 823 350 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 826 352 r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 831 354 r11|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 836 356 r10|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD  <||@
  Comment 841 358 JUMP ~[] destination: B28 -> B30  <||@
  Comment 846 block B17 null  <||@
  Comment 846 218 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 846 220 stack:48|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 851 222 JUMP ~[] destination: B17 -> B21  <||@
  Comment 856 block B24 null  <||@
  Comment 856 304 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 856 306 MOV [r15|QWORD + 668] y: -76563 size: DWORD  <||@
  Comment 867 308 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 874 310 DEOPT info [bci:19]  <||@
  Comment 874 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 879 [r13:0, r14:0]at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 19, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |-             |-             |- 
     stack:   |r14|QWORD[.]  |r13|QWORD[.]  |    <||@
  Comment 880 block B5 null  <||@
  Comment 880 46 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 880 48 r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 885 50 MOV [r15|QWORD + 668] y: -81171 size: DWORD  <||@
  Comment 896 52 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 903 54 DEOPT info [bci:4, 10, 1]  <||@
  Comment 903 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 908 [rax:0, r13:0]at java.lang.Class.getDeclaringClass(Class.java:1235) [bci: 4, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |-             |- 
     stack:   |rax|QWORD[.]  |  
  at java.lang.Class.getEnclosingClass(Class.java:1277) [bci: 10, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1, duringCall: true, rethrow: false]
              |0             |1  |2 
     locals:  |r13|QWORD[.]  |-  |-   <||@
  Comment 909 block B10 null  <||@
  Comment 909 134 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 909 136 rax|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 914 138 r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 919 140 MOV [r15|QWORD + 668] y: -82451 size: DWORD  <||@
  Comment 930 142 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 937 144 DEOPT info [bci:5, 17, 1, 1]  <||@
  Comment 937 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 942 [rax:0, r11:0, r13:0]at java.lang.Class$EnclosingMethodInfo.<init>(Class.java:1080) [bci: 5, duringCall: false, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.lang.Class.getEnclosingMethodInfo(Class.java:1076) [bci: 17, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |-             |rax|QWORD[.] 
     stack:   |r11|QWORD[.]  |             
  at java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1, duringCall: true, rethrow: false]
              |0             |1  |2  |3 
     locals:  |r13|QWORD[.]  |-  |-  |- 
  at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1, duringCall: true, rethrow: false]
              |0             |1  |2 
     locals:  |r13|QWORD[.]  |-  |-   <||@
  Comment 943 block B31 null  <||@
  Comment 943 404 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 943 406 r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 946 408 r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 951 410 MOV [r15|QWORD + 668] y: -70419 size: DWORD  <||@
  Comment 962 412 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 969 414 DEOPT info [bci:43, 1]  <||@
  Comment 969 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 974 [r10:0, r13:0]at java.lang.Class.getEnclosingClass(Class.java:1287) [bci: 43, duringCall: false, rethrow: false]
              |0  |1  |2             |3 
     locals:  |-  |-  |r10|QWORD[.]  |- 
  at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1, duringCall: true, rethrow: false]
              |0             |1  |2 
     locals:  |r13|QWORD[.]  |-  |-   <||@
  Comment 975 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 975 4  <||@
  Comment 981 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 981 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-9445[java.lang.Class.getSimpleBinaryName()]"
  method "HotSpotCompilation-9445[java.lang.Class.getSimpleBinaryName()]"
  date 1527005214396
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 107bdf660 448b560849c1e203493bc20f85ef67c2fe900f1f80000000000f1f800000000089842400c0feff4883ec3848896c243048897424204c8bd60f1f8000000000e8fc69c2fe904885c00f85df000000488b7424200f1f4000e8e469c2fe904885c00f85ad0000004885c00f851d00000048b80000000000000000488b6c24304883c43885051ef9cafcc5f877c348be28cd03c0060000008b767485f60f850e030000488b74242048894424188b561485d20f847f0100008b701448c1e20385f60f84cd01000048c1e6034c8bf24c8bee418b450c418504c4458b560c468b1cd50c000000448b04c50c000000453bc30f87640200004585c00f85be000000498bc6488b6c24304883c438850597f8cafcc5f877c348be28cd03c0060000008b767485f60f843effffffe943020000488b742420498b57604c8d52184d3b57700f879b0100004d8957600f1882d8000000488bf24c8bde48bae0292dc007000000488b92a8000000488916c746083ca505f84c89660c44896614498bf3488bd048894424184c895c24100f1f8000000000e8ac68c2fe904c8b5c2410418b730c8bd648c1e203483b5424200f84de010000418504f4488bc2e9abfeffff498b7760488d5618493b57700f8741010000498957600f1886d80000004c8bce48bad01600c007000000488b92a8000000488916c74608da0200f84c89660c49c1e203452bd8498bf1498bd2418bc8458bc34c894c24100f1f440000e82468c2fe90488b442410488b6c24304883c438850575f7cafcc5f877c349ba00e01b17010000004c8bde0f1f440000e8f467c2fe90488bf048c1ee034c8b6c242041897514498bf548c1ee0949ba00e01b1701000000468824164c8b542418418b721485f60f84cb00000048c1e6034c8bf04c8beee93dfeffff48895424104c8bd049bb00e01b1701000000498bf2e89467c2fe90488bf048c1ee034c8b54241841897214498bf248c1ee0949bb00e01b17010000004688241e4c8b7424104c8be8e9f0fdffff48894424184c8bee48be680b00c007000000ba02000000b901000000e880743bff90488bf0488b442418e944feffff448944240c44895c2408448954240448be680b00c007000000ba02000000b901000000e84a743bff90488bf0448b44240c448b5c2408448b542404e98afeffff4889442410e942ffffff41c7879c020000edd4feff4d89a7a8020000e82f7cc2fe904c8b6c242041c7879c020000edc2feff4d89a7a8020000e8127cc2fe90488b4424184c8b6c242041c7879c020000edbdfeff4d89a7a8020000e8f07bc2fe904c8bd04c8b6c242041c7879c020000edecfeff4d89a7a8020000e8d07bc2fe90e8ecab06ff90e8c67ac2fe90f4f4f4f4f448bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbfffffff4f4f4f4f4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7bd8a449 slotKind: QWORD  <||@
  Comment 48 6 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 53 8 r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 56 12 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Class.getEnclosingMethod0()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1, 1, 1]  <||@
  Comment 56 9  <||@
  Comment 63 {HotSpotMethod<Class.getEnclosingMethod0()>}  <||@
  Comment 68 [stack:32]at java.lang.Class.getEnclosingMethodInfo(Class.java:1072) [bci: 1, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:32|QWORD[.]  |-  |-  |- 
  at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |-   <||@
  Comment 69 14 TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD  <||@
  Comment 72 16 BRANCH trueDestinationProbability: 0.9901123531748284 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B6  <||@
  Comment 78 block B1 null  <||@
  Comment 78 18 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 78 20 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 83 22 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Class.getDeclaringClass0()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1, 10, 1]  <||@
  Comment 83 9  <||@
  Comment 87 {HotSpotMethod<Class.getDeclaringClass0()>}  <||@
  Comment 92 [stack:32]at java.lang.Class.getDeclaringClass(Class.java:1235) [bci: 1, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Class.getEnclosingClass(Class.java:1277) [bci: 10, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |-   <||@
  Comment 93 24 TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD  <||@
  Comment 96 26 BRANCH trueDestinationProbability: 0.7818621453964507 condition: = trueDestination: B1 -> B12 falseDestination: B1 -> B3  <||@
  Comment 102 block B12 null  <||@
  Comment 102 154 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 102 156 TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD  <||@
  Comment 105 158 BRANCH trueDestinationProbability: 0.7744184392117807 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14  <||@
  Comment 111 block B13 null  <||@
  Comment 111 160 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 111 162 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 121 164 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 130 12  <||@
  Comment 140 block B14 null  <||@
  Comment 140 166 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 140 168 rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:java.lang.System]  <||@
  Comment 140 {Object[Class:java.lang.System]}  <||@
  Comment 150 170 rsi|DWORD[.] = MOV [rsi|QWORD[.] + 116] size: DWORD  <||@
  Comment 153 172 TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 155 174 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B31  <||@
  Comment 161 block B15 null  <||@
  Comment 161 176 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 161 178 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 166 180 stack:40|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 171 182 rdx|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 174 184 TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 176 186 BRANCH trueDestinationProbability: 0.0029740774790130153 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B19  <||@
  Comment 182 block B19 null  <||@
  Comment 182 234 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 182 236 rsi|DWORD[.] = MOV [rax|QWORD[.] + 20] size: DWORD  <||@
  Comment 185 238 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3c106be8 encoding: base: 0 shift: 3  <||@
  Comment 189 240 TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 191 242 BRANCH trueDestinationProbability: 0.0029740774790130153 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B22  <||@
  Comment 197 block B22 null  <||@
  Comment 197 278 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 197 280 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3c106be8 encoding: base: 0 shift: 3  <||@
  Comment 201 282 r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 204 284 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 207 286 JUMP ~[] destination: B22 -> B23  <||@
  Comment 207 block B23 null  <||@
  Comment 207 288 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 207 290 rax|DWORD[.] = MOV [r13|QWORD[.] + 12] size: DWORD state [bci:19]  <||@
  Comment 207 [r13:0, r14:0]at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 19, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |-             |-             |- 
     stack:   |r14|QWORD[.]  |r13|QWORD[.]  |    <||@
  Comment 207 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 211 292 NULLCHECK [r12|QWORD[*] + rax|DWORD[.] * 8] state [bci:19]  <||@
  Comment 211 [rax:0, r13:0, r14:0]at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 19, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |-             |-             |- 
     stack:   |r14|QWORD[.]  |r13|QWORD[.]  |    <||@
  Comment 211 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 215 294 r10|DWORD[.] = MOV [r14|QWORD[.] + 12] size: DWORD state [bci:19]  <||@
  Comment 215 [rax:0, r13:0, r14:0]at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 19, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |-             |-             |- 
     stack:   |r14|QWORD[.]  |r13|QWORD[.]  |    <||@
  Comment 215 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 219 296 r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:19]  <||@
  Comment 219 [rax:0, r10:0, r13:0, r14:0]at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 19, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |-             |-             |- 
     stack:   |r14|QWORD[.]  |r13|QWORD[.]  |    <||@
  Comment 219 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 227 298 r8|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 235 300 CMP (x: r8|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 238 302 BRANCH trueDestinationProbability: 0.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25  <||@
  Comment 244 block B25 null  <||@
  Comment 244 312 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 244 314 TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 247 316 BRANCH trueDestinationProbability: 0.9651155608201366 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27  <||@
  Comment 253 block B26 null  <||@
  Comment 253 318 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 253 320 rax|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 256 322 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 265 12  <||@
  Comment 275 block B3 null  <||@
  Comment 275 32 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 275 34 rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:java.lang.System]  <||@
  Comment 275 {Object[Class:java.lang.System]}  <||@
  Comment 285 36 rsi|DWORD[.] = MOV [rsi|QWORD[.] + 116] size: DWORD  <||@
  Comment 288 38 TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 290 40 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B12 falseDestination: B3 -> B5  <||@
  Comment 301 block B6 null  <||@
  Comment 301 56 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 301 58 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 306 60 rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 310 62 r10|QWORD = LEA [rdx|QWORD + 24] size: QWORD  <||@
  Comment 314 64 CMP (x: r10|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 318 66 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8  <||@
  Comment 324 block B8 null  <||@
  Comment 324 88 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 324 90 MOV (x: [r15|QWORD + 96], y: r10|QWORD) size: QWORD  <||@
  Comment 328 92 AMD64PREFETCH ~[rdx|QWORD + 216] instr: 0  <||@
  Comment 335 94 rsi|QWORD[*] = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 338 96 JUMP ~[] destination: B8 -> B9  <||@
  Comment 338 block B9 null  <||@
  Comment 338 98 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 338 100 r11|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 341 102 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Class$EnclosingMethodInfo;, resolved>}  <||@
  Comment 341 {meta{HotSpotType<Ljava/lang/Class$EnclosingMethodInfo;, resolved>}}  <||@
  Comment 351 104 rdx|QWORD = MOV [rdx|QWORD + 168] size: QWORD  <||@
  Comment 358 106 MOV (x: [rsi|QWORD[*]], y: rdx|QWORD) size: QWORD  <||@
  Comment 361 108 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Class$EnclosingMethodInfo;, resolved>;compressed}  <||@
  Comment 361 {meta{HotSpotType<Ljava/lang/Class$EnclosingMethodInfo;, resolved>;compressed}}  <||@
  Comment 368 110 MOV (x: [rsi|QWORD[*] + 12], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 372 112 MOV (x: [rsi|QWORD[*] + 20], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 376 114 rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 379 116 rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 382 118 stack:40|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 387 120 stack:48|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 392 122 - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Class$EnclosingMethodInfo.<init>(Object[])> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:2, 17, 1, 1]  <||@
  Comment 392 9  <||@
  Comment 399 {HotSpotMethod<Class$EnclosingMethodInfo.<init>(Object[])>}  <||@
  Comment 404 [stack:16, stack:24, stack:32]at java.lang.Class$EnclosingMethodInfo.<init>(Class.java:1080) [bci: 2, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.lang.Class.getEnclosingMethodInfo(Class.java:1076) [bci: 17, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |-                  |stack:40|QWORD[.] 
     stack:   |stack:48|QWORD[.]  |                  
  at java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:32|QWORD[.]  |-  |-  |- 
  at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |-   <||@
  Comment 405 124 r11|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 410 126 rsi|DWORD[.] = MOV [r11|QWORD[.] + 12] size: DWORD  <||@
  Comment 414 128 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3c106be8 encoding: base: 0 shift: 3  <||@
  Comment 420 130 CMP (x: rdx|QWORD[.], y: stack:32|QWORD[.]) size: QWORD  <||@
  Comment 425 132 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11  <||@
  Comment 431 block B11 null  <||@
  Comment 431 146 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 431 148 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:5, 17, 1, 1]  <||@
  Comment 431 [rdx:0, r11:0, stack:24, stack:32]at java.lang.Class$EnclosingMethodInfo.<init>(Class.java:1080) [bci: 5, duringCall: false, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.lang.Class.getEnclosingMethodInfo(Class.java:1076) [bci: 17, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |-             |stack:40|QWORD[.] 
     stack:   |r11|QWORD[.]  |                  
  at java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:32|QWORD[.]  |-  |-  |- 
  at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |-   <||@
  Comment 431 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 435 150 rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 438 152 JUMP ~[] destination: B11 -> B12  <||@
  Comment 443 block B27 null  <||@
  Comment 443 324 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 443 326 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 447 328 rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD  <||@
  Comment 451 330 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 455 332 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29  <||@
  Comment 461 block B29 null  <||@
  Comment 461 360 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 461 362 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 465 364 AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0  <||@
  Comment 472 366 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 472 368 JUMP ~[] destination: B29 -> B30  <||@
  Comment 472 block B30 null  <||@
  Comment 472 370 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 472 372 r9|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 475 374 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 475 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 485 376 rdx|QWORD = MOV [rdx|QWORD + 168] size: QWORD  <||@
  Comment 492 378 MOV (x: [rsi|QWORD[*]], y: rdx|QWORD) size: QWORD  <||@
  Comment 495 380 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 495 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 502 382 MOV (x: [rsi|QWORD[*] + 12], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 506 384 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3c106be8 encoding: base: 0 shift: 3  <||@
  Comment 510 386 r11|DWORD = SUB (x: r11|DWORD, ~y: r8|DWORD) size: DWORD  <||@
  Comment 513 388 rsi|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 516 390 rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 519 392 rcx|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 522 394 r8|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 525 396 stack:48|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 530 398 - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<String.<init>(char[], int, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:52, 22]  <||@
  Comment 530 9  <||@
  Comment 535 {HotSpotMethod<String.<init>(char[], int, int)>}  <||@
  Comment 540 [stack:16]at java.lang.String.substring(String.java:1933) [bci: 52, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |-                  |-  |- 
     stack:   |stack:48|QWORD[.]  |   |  
  at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 22, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 541 400 rax|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 546 402 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 555 12  <||@
  Comment 565 block B16 null  <||@
  Comment 565 188 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 565 190 r10|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 575 192 r11|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 578 196 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Class.getName0()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:11, 12]  <||@
  Comment 578 9  <||@
  Comment 583 {HotSpotMethod<Class.getName0()>}  <||@
  Comment 588 [stack:24, stack:32]at java.lang.Class.getName(Class.java:642) [bci: 11, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |-                  |- 
     stack:   |stack:32|QWORD[.]  |  
  at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 12, duringCall: true, rethrow: false]
              |0  |1                  |2 
     locals:  |-  |stack:40|QWORD[.]  |-   <||@
  Comment 589 198 rsi|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3c106be8 encoding: base: 0 shift: 3  <||@
  Comment 596 200 r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 601 202 MOV (x: [r13|QWORD[.] + 20], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 605 204 rsi|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD  <||@
  Comment 612 206 r10|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 622 208 MOVB (x: [rsi|QWORD[*] + r10|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 626 210 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 631 212 rsi|DWORD[.] = MOV [r10|QWORD[.] + 20] size: DWORD  <||@
  Comment 635 214 TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 637 216 BRANCH trueDestinationProbability: 0.0029740774790130153 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18  <||@
  Comment 643 block B18 null  <||@
  Comment 643 224 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 643 226 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3c106be8 encoding: base: 0 shift: 3  <||@
  Comment 647 228 r14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 650 230 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 653 232 JUMP ~[] destination: B18 -> B23  <||@
  Comment 658 block B20 null  <||@
  Comment 658 244 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 658 246 stack:48|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 663 248 r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 666 250 JUMP ~[] destination: B20 -> B21  <||@
  Comment 666 block B21 null  <||@
  Comment 666 252 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 666 254 r11|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 676 256 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 679 258 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Class.getName0()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:11, 16]  <||@
  Comment 679 {HotSpotMethod<Class.getName0()>}  <||@
  Comment 679 9  <||@
  Comment 684 [stack:16, stack:24]at java.lang.Class.getName(Class.java:642) [bci: 11, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |-                  |- 
     stack:   |stack:40|QWORD[.]  |  
  at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |-                  |-  |- 
     stack:   |stack:48|QWORD[.]  |   |    <||@
  Comment 685 260 rsi|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3c106be8 encoding: base: 0 shift: 3  <||@
  Comment 692 262 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 697 264 MOV (x: [r10|QWORD[.] + 20], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 701 266 rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD  <||@
  Comment 708 268 r11|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 718 270 MOVB (x: [rsi|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 722 272 r14|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 727 274 r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 730 276 JUMP ~[] destination: B21 -> B23  <||@
  Comment 735 block B7 null  <||@
  Comment 735 68 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 735 70 stack:40|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 740 72 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 743 74 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 743 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 753 76 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 758 78 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 763 80 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:4, 1, 1]  <||@
  Comment 763 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 768 [r13:0, stack:24, stack:32]at java.lang.Class.getEnclosingMethodInfo(Class.java:1072) [bci: 4, duringCall: false, rethrow: false]
              |0                  |1 
     locals:  |-                  |- 
     stack:   |stack:40|QWORD[.]  |  
  at java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1, duringCall: true, rethrow: false]
              |0             |1  |2  |3 
     locals:  |r13|QWORD[.]  |-  |-  |- 
  at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1, duringCall: true, rethrow: false]
              |0             |1  |2 
     locals:  |r13|QWORD[.]  |-  |-   <||@
  Comment 769 82 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 772 84 rax|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 777 86 JUMP ~[] destination: B7 -> B9  <||@
  Comment 782 block B28 null  <||@
  Comment 782 334 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 782 336 stack:52|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 787 338 stack:56|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 792 340 stack:60|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 797 342 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 797 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 807 344 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 812 346 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 817 348 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:19]  <||@
  Comment 817 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 822 [r13:0, r14:0, stack:4]at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 19, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |-             |-             |- 
     stack:   |r14|QWORD[.]  |r13|QWORD[.]  |    <||@
  Comment 823 350 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 826 352 r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 831 354 r11|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 836 356 r10|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD  <||@
  Comment 841 358 JUMP ~[] destination: B28 -> B30  <||@
  Comment 846 block B17 null  <||@
  Comment 846 218 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 846 220 stack:48|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 851 222 JUMP ~[] destination: B17 -> B21  <||@
  Comment 856 block B24 null  <||@
  Comment 856 304 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 856 306 MOV [r15|QWORD + 668] y: -76563 size: DWORD  <||@
  Comment 867 308 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 874 310 DEOPT info [bci:19]  <||@
  Comment 874 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 879 [r13:0, r14:0]at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 19, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |-             |-             |- 
     stack:   |r14|QWORD[.]  |r13|QWORD[.]  |    <||@
  Comment 880 block B5 null  <||@
  Comment 880 46 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 880 48 r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 885 50 MOV [r15|QWORD + 668] y: -81171 size: DWORD  <||@
  Comment 896 52 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 903 54 DEOPT info [bci:4, 10, 1]  <||@
  Comment 903 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 908 [rax:0, r13:0]at java.lang.Class.getDeclaringClass(Class.java:1235) [bci: 4, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |-             |- 
     stack:   |rax|QWORD[.]  |  
  at java.lang.Class.getEnclosingClass(Class.java:1277) [bci: 10, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1, duringCall: true, rethrow: false]
              |0             |1  |2 
     locals:  |r13|QWORD[.]  |-  |-   <||@
  Comment 909 block B10 null  <||@
  Comment 909 134 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 909 136 rax|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 914 138 r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 919 140 MOV [r15|QWORD + 668] y: -82451 size: DWORD  <||@
  Comment 930 142 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 937 144 DEOPT info [bci:5, 17, 1, 1]  <||@
  Comment 937 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 942 [rax:0, r11:0, r13:0]at java.lang.Class$EnclosingMethodInfo.<init>(Class.java:1080) [bci: 5, duringCall: false, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.lang.Class.getEnclosingMethodInfo(Class.java:1076) [bci: 17, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |-             |rax|QWORD[.] 
     stack:   |r11|QWORD[.]  |             
  at java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1, duringCall: true, rethrow: false]
              |0             |1  |2  |3 
     locals:  |r13|QWORD[.]  |-  |-  |- 
  at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1, duringCall: true, rethrow: false]
              |0             |1  |2 
     locals:  |r13|QWORD[.]  |-  |-   <||@
  Comment 943 block B31 null  <||@
  Comment 943 404 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 943 406 r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 946 408 r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 951 410 MOV [r15|QWORD + 668] y: -70419 size: DWORD  <||@
  Comment 962 412 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 969 414 DEOPT info [bci:43, 1]  <||@
  Comment 969 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 974 [r10:0, r13:0]at java.lang.Class.getEnclosingClass(Class.java:1287) [bci: 43, duringCall: false, rethrow: false]
              |0  |1  |2             |3 
     locals:  |-  |-  |r10|QWORD[.]  |- 
  at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1, duringCall: true, rethrow: false]
              |0             |1  |2 
     locals:  |r13|QWORD[.]  |-  |-   <||@
  Comment 975 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 975 4  <||@
  Comment 981 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 981 5  <||@
  HexCodeFile>>> <|@
end_nmethod
