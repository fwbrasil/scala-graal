begin_compilation
  name " HotSpotCompilation-8662[java.util.LinkedList.listIterator(int)]"
  method "HotSpotCompilation-8662[java.util.LinkedList.listIterator(int)]"
  date 1527005197847
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v108 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v108  <|@  <|@
f <@~|@floating>@ <|@
tid a31 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 29]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
a38 v141 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/LinkedList;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v228 v225 v227 v226 a129 ?57 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v47 v50 v77 v74 v198 ?39 v27 v63 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i15 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedList.checkPositionIndex(LinkedList.java:559) [bci: 5]
at java.util.LinkedList.listIterator(LinkedList.java:867) [bci: 2]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v47 v202 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:541) [bci: 1]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:559) [bci: 2]
at java.util.LinkedList.listIterator(LinkedList.java:867) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i15 
=== Succesors ===
=== Usages ===
v108 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:541) [bci: 1]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:559) [bci: 2]
at java.util.LinkedList.listIterator(LinkedList.java:867) [bci: 2]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v47 
=== Succesors ===
trueSuccessor: v107 
falseSuccessor: v105 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v47 #trueSuccessor: v107 #falseSuccessor: v105  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B12" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:541) [bci: 1]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:559) [bci: 2]
at java.util.LinkedList.listIterator(LinkedList.java:867) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v137 
=== Usages ===
=== Predecessor ===
v108 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v137  <|@  <|@
f <@~|@floating>@ <|@
tid i138 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -21267
stableDimension: 0
stamp: i32 [-21267] ⇊00000000ffffaced ⇈00000000ffffaced
stampKind: i32
value: int[-21267|0xffffffffffffaced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i139 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v137 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v136 
=== Predecessor ===
v107 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:541) [bci: 1]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:559) [bci: 2]
at java.util.LinkedList.listIterator(LinkedList.java:867) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: i221 
=== Usages ===
=== Predecessor ===
v108 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i221  <|@  <|@
f <@~|@floating>@ <|@
tid v225 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i221 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i221 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: LinkedList.size
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:541) [bci: 6]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:559) [bci: 2]
at java.util.LinkedList.listIterator(LinkedList.java:867) [bci: 2]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v225 
=== Succesors ===
next: v30 
=== Usages ===
v50 v27 i62 i73 
=== Predecessor ===
v105 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v225 #next: v30  <|@  <|@
f <@~|@floating>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 26]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i221 
=== Succesors ===
=== Usages ===
v30 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2 y: i221  <|@  <|@
f <@~|@floating>@ <|@
tid i61 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:569) [bci: 5]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i62 v77 a164 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 26]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
stamp: void
trueSuccessorProbability: 0.4381880536401267
=== Inputs ===
condition: v27 
=== Succesors ===
trueSuccessor: v28 
falseSuccessor: v109 
=== Usages ===
=== Predecessor ===
i221 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v27 #trueSuccessor: v28 #falseSuccessor: v109  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B14" 
    xhandlers
    flags 
    probability 4601565314138273430
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 29]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v35 
=== Usages ===
=== Predecessor ===
v30 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v35  <|@  <|@
f <@~|@floating>@ <|@
tid a134 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: n - NULL
stampKind: n -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
a135 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 38]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v36 
=== Predecessor ===
v28 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4603235571689833653
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:541) [bci: 9]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:559) [bci: 2]
at java.util.LinkedList.listIterator(LinkedList.java:867) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v112 
=== Usages ===
=== Predecessor ===
v30 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v112  <|@  <|@
f <@~|@floating>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:541) [bci: 9]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:559) [bci: 2]
at java.util.LinkedList.listIterator(LinkedList.java:867) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i221 
y: i2 
=== Succesors ===
=== Usages ===
v112 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i221 y: i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:541) [bci: 9]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:559) [bci: 2]
at java.util.LinkedList.listIterator(LinkedList.java:867) [bci: 2]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v50 
=== Succesors ===
trueSuccessor: v111 
falseSuccessor: v29 
=== Usages ===
=== Predecessor ===
v109 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v50 #trueSuccessor: v111 #falseSuccessor: v29  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B12" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:541) [bci: 9]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:559) [bci: 2]
at java.util.LinkedList.listIterator(LinkedList.java:867) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v142 
=== Usages ===
=== Predecessor ===
v112 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v142  <|@  <|@
f <@~|@floating>@ <|@
tid i143 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -22291
stableDimension: 0
stamp: i32 [-22291] ⇊00000000ffffa8ed ⇈00000000ffffa8ed
stampKind: i32
value: int[-22291|0xffffffffffffa8ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i139 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v142 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v136 
=== Predecessor ===
v111 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B10" 
    xhandlers
    flags 
    probability 4603235571689833653
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 33]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v66 
=== Usages ===
=== Predecessor ===
v112 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v66  <|@  <|@
f <@~|@floating>@ <|@
tid i62 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:569) [bci: 6]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
stamp: i32 [-1073741824 - 1073741823]
=== Inputs ===
x: i221 
y: i61 
=== Succesors ===
=== Usages ===
v63 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i221 y: i61  <|@  <|@
f <@~|@floating>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:569) [bci: 7]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i62 
=== Succesors ===
=== Usages ===
v66 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i62  <|@  <|@
f <@*|@fixed>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:569) [bci: 7]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
stamp: void
trueSuccessorProbability: 0.7247571894353684
=== Inputs ===
condition: v63 
=== Succesors ===
trueSuccessor: v64 
falseSuccessor: v65 
=== Usages ===
=== Predecessor ===
v29 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v63 #trueSuccessor: v64 #falseSuccessor: v65  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4601006673113591004
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:570) [bci: 10]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v116 
=== Usages ===
=== Predecessor ===
v66 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v116  <|@  <|@
f <@~|@floating>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:571) [bci: 19]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i61 
=== Succesors ===
=== Usages ===
v116 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i61  <|@  <|@
f <@*|@fixed>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:571) [bci: 19]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v77 
=== Succesors ===
trueSuccessor: v113 
falseSuccessor: v115 
=== Usages ===
=== Predecessor ===
v64 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v77 #trueSuccessor: v113 #falseSuccessor: v115  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B14" 
    xhandlers
    flags 
    probability 4601006673113591004
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:571) [bci: 19]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: a222 
=== Usages ===
=== Predecessor ===
v116 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a222  <|@  <|@
f <@~|@floating>@ <|@
tid v227 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a222 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a222 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: LinkedList.first
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:570) [bci: 11]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
nullCheck: false
stamp: n# Ljava/util/LinkedList$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v227 
=== Succesors ===
next: v37 
=== Usages ===
a94 a135 
=== Predecessor ===
v113 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v227 #next: v37  <|@  <|@
f <@~|@floating>@ <|@
tid a94 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:570) [bci: 11]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
op: Uncompress
stamp: a# Ljava/util/LinkedList$Node;
=== Inputs ===
value: a222 
=== Succesors ===
=== Usages ===
a38 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a222  <|@  <|@
f <@*|@fixed>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 38]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v36 
=== Predecessor ===
a222 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:571) [bci: 19]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v146 
=== Usages ===
=== Predecessor ===
v116 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v146  <|@  <|@
f <@~|@floating>@ <|@
tid i147 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -24339
stableDimension: 0
stamp: i32 [-24339] ⇊00000000ffffa0ed ⇈00000000ffffa0ed
stampKind: i32
value: int[-24339|0xffffffffffffa0ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i139 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v146 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v136 
=== Predecessor ===
v115 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" "B13" 
    xhandlers
    flags 
    probability 4594739322477394204
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:575) [bci: 35]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v120 
=== Usages ===
=== Predecessor ===
v66 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v120  <|@  <|@
f <@~|@floating>@ <|@
tid i72 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:576) [bci: 45]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i73 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i73 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:576) [bci: 45]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
stamp: i32
=== Inputs ===
x: i221 
y: i72 
=== Succesors ===
=== Usages ===
v74 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i221 y: i72  <|@  <|@
f <@~|@floating>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:576) [bci: 49]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i73 
=== Succesors ===
=== Usages ===
v120 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i73  <|@  <|@
f <@*|@fixed>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:576) [bci: 49]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v74 
=== Succesors ===
trueSuccessor: v119 
falseSuccessor: v117 
=== Usages ===
=== Predecessor ===
v65 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v74 #trueSuccessor: v119 #falseSuccessor: v117  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:576) [bci: 49]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v144 
=== Usages ===
=== Predecessor ===
v120 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v144  <|@  <|@
f <@~|@floating>@ <|@
tid i145 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -25619
stableDimension: 0
stamp: i32 [-25619] ⇊00000000ffff9bed ⇈00000000ffff9bed
stampKind: i32
value: int[-25619|0xffffffffffff9bed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i139 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v144 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v136 
=== Predecessor ===
v119 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" "B11" "B9" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i139 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-25619 - -21267] ⇊00000000ffff80ed ⇈00000000ffffbfed
valueDescription: i32
=== Inputs ===
merge: v136 
values: i138 i143 i145 i147 
=== Succesors ===
=== Usages ===
v141 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v136 values: i138 i143 i145 i147  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v137 v142 v144 v146 
=== Succesors ===
next: v141 
=== Usages ===
i139 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v137 v142 v144 v146 #next: v141  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<LinkedList.listIterator(int)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: LinkedList.java
sourceLine: 867
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 
=== Succesors ===
=== Usages ===
v141 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i139 
speculation: a31 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v136 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i139 speculation: a31  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4594739322477394204
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v117 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:576) [bci: 49]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: a223 
=== Usages ===
=== Predecessor ===
v120 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a223  <|@  <|@
f <@~|@floating>@ <|@
tid v228 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a223 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a223 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: LinkedList.last
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:575) [bci: 36]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
nullCheck: false
stamp: n# Ljava/util/LinkedList$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v228 
=== Succesors ===
next: v82 
=== Usages ===
a99 a135 
=== Predecessor ===
v117 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v228 #next: v82  <|@  <|@
f <@~|@floating>@ <|@
tid a99 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:575) [bci: 36]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
op: Uncompress
stamp: a# Ljava/util/LinkedList$Node;
=== Inputs ===
value: a223 
=== Succesors ===
=== Usages ===
a38 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a223  <|@  <|@
f <@*|@fixed>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v36 
=== Predecessor ===
a223 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B3" "B8" "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a38 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 38]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
stamp: a# Ljava/util/LinkedList$Node;
valueDescription: a -
=== Inputs ===
merge: v36 
values: a31 a94 a99 
=== Succesors ===
=== Usages ===
?39 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v36 values: a31 a94 a99  <|@  <|@
f <@~|@floating>@ <|@
tid a135 <|@
d <@d|@=== Debug Properties ===
stamp: n# Ljava/util/LinkedList$Node;
valueDescription: n -
=== Inputs ===
merge: v36 
values: a134 a222 a223 
=== Succesors ===
=== Usages ===
v204 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v36 values: a134 a222 a223  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 38]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v35 v37 v82 
=== Succesors ===
next: j151 
=== Usages ===
a38 a135 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v35 v37 v82 #next: j151  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j151 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j171 
=== Usages ===
v229 v230 
=== Predecessor ===
v36 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j171  <|@  <|@
f <@~|@floating>@ <|@
tid v229 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j151 
index: - 
=== Succesors ===
=== Usages ===
j171 v173 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j151 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j171 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v229 
=== Succesors ===
next: j172 
=== Usages ===
j209 j177 v234 
=== Predecessor ===
j151 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v229 #next: j172  <|@  <|@
f <@~|@floating>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j151 
index: - 
=== Succesors ===
=== Usages ===
j172 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j151 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j172 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v230 
=== Succesors ===
next: i224 
=== Usages ===
v156 
=== Predecessor ===
j171 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v230 #next: i224  <|@  <|@
f <@~|@floating>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i224 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i224 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:875) [bci: 14]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v226 
=== Succesors ===
next: v159 
=== Usages ===
v200 ?57 
=== Predecessor ===
j172 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v226 #next: v159  <|@  <|@
f <@~|@floating>@ <|@
tid j208 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 32
stableDimension: 0
stamp: i64 [32] ⇊0000000000000020 ⇈0000000000000020
stampKind: i64
value: long[32|0x20]
=== Inputs ===
=== Succesors ===
=== Usages ===
j209 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j209 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j171 
y: j208 
=== Succesors ===
=== Usages ===
v156 v173 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j171 y: j208  <|@  <|@
f <@~|@floating>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j172 
y: j209 
=== Succesors ===
=== Usages ===
v159 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j172 y: j209  <|@  <|@
f <@*|@fixed>@ <|@
tid v159 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v156 
=== Succesors ===
trueSuccessor: v157 
falseSuccessor: v158 
=== Usages ===
=== Predecessor ===
i224 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v156 #trueSuccessor: v157 #falseSuccessor: v158  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a164 
=== Usages ===
=== Predecessor ===
v159 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a164  <|@  <|@
tid a55 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@776e63b7
hasIdentity: true
objectId: 0
stamp: a!# Ljava/util/LinkedList$ListItr;
type: HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?39 ?39 ?46 ?57 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?46 <|@
d <@d|@=== Debug Properties ===
bci: 11
code: ResolvedJavaMethodBytecode<LinkedList.listIterator(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: LinkedList.java
sourceLine: 868
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - - a55 
=== Succesors ===
=== Usages ===
?39 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - a55  <|@  <|@
tid ?57 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a55 
values: - i224 - - a1 
=== Succesors ===
=== Usages ===
?39 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a55 values: - i224 - - a1  <|@  <|@
tid ?39 <|@
d <@d|@=== Debug Properties ===
bci: 38
code: ResolvedJavaMethodBytecode<LinkedList$ListItr.<init>(LinkedList, int)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: LinkedList.java
sourceLine: 879
stackSize: 2
=== Inputs ===
outerFrameState: ?46 
values: a55 - i2 a55 a38 
virtualObjectMappings: ?57 
=== Succesors ===
=== Usages ===
a164 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?46 values: a55 - i2 a55 a38 virtualObjectMappings: ?57  <|@  <|@
f <@~|@floating>@ <|@
tid v149 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a164 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i211 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i32 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i32
value: int[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
a164 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a164 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?39 
arguments: v149 i211 i61 
=== Succesors ===
next: j165 
=== Usages ===
j165 
=== Predecessor ===
v157 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?39 arguments: v149 i211 i61 #next: j165  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j165 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a164 
=== Succesors ===
next: v178 
=== Usages ===
j177 
=== Predecessor ===
a164 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a164 #next: v178  <|@  <|@
f <@*|@fixed>@ <|@
tid v178 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v175 
=== Predecessor ===
j165 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v158 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v173 
=== Usages ===
=== Predecessor ===
v159 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v173  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v229 
value: j209 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v169 
=== Usages ===
=== Predecessor ===
v158 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v229 value: j209 stateAfter: - lastLocationAccess: - #next: v169  <|@  <|@
f <@~|@floating>@ <|@
tid v234 <|@
d <@d|@=== Debug Properties ===
displacement: 224
scale: Times1
stamp: void*
=== Inputs ===
base: j171 
index: - 
=== Succesors ===
=== Usages ===
v169 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j171 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v169 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v234 
=== Succesors ===
next: v176 
=== Usages ===
=== Predecessor ===
v173 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v234 #next: v176  <|@  <|@
f <@*|@fixed>@ <|@
tid v176 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v175 
=== Predecessor ===
v169 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j177 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v175 
values: j171 j165 
=== Succesors ===
=== Usages ===
v233 v232 a124 v235 v236 v237 v238 v239 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v175 values: j171 j165  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v175 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v176 v178 
=== Succesors ===
next: a124 
=== Usages ===
j177 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v176 v178 #next: a124  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a124 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j177 
=== Succesors ===
next: j189 
=== Usages ===
a132 
=== Predecessor ===
v175 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j177 #next: j189  <|@  <|@
f <@~|@floating>@ <|@
tid v183 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j184 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j184 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v183 
=== Succesors ===
=== Usages ===
v231 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v183  <|@  <|@
f <@~|@floating>@ <|@
tid v231 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j184 
index: - 
=== Succesors ===
=== Usages ===
j189 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j184 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j189 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v231 
=== Succesors ===
next: v190 
=== Usages ===
v190 
=== Predecessor ===
a124 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v231 #next: v190  <|@  <|@
f <@~|@floating>@ <|@
tid v232 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j177 
index: - 
=== Succesors ===
=== Usages ===
v190 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j177 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v232 
value: j189 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v194 
=== Usages ===
=== Predecessor ===
j189 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v232 value: j189 stateAfter: - lastLocationAccess: - #next: v194  <|@  <|@
f <@~|@floating>@ <|@
tid v233 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j177 
index: - 
=== Succesors ===
=== Usages ===
v194 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j177 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v214 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v194 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v194 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v233 
value: v214 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v198 
=== Usages ===
=== Predecessor ===
v190 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v233 value: v214 stateAfter: - lastLocationAccess: - #next: v198  <|@  <|@
f <@~|@floating>@ <|@
tid v235 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j177 
index: - 
=== Succesors ===
=== Usages ===
v198 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j177 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v198 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v235 
value: i2 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v200 
=== Usages ===
=== Predecessor ===
v194 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v235 value: i2 stateAfter: - lastLocationAccess: - #next: v200  <|@  <|@
f <@~|@floating>@ <|@
tid v236 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j177 
index: - 
=== Succesors ===
=== Usages ===
v200 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j177 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v200 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v236 
value: i224 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v202 
=== Usages ===
=== Predecessor ===
v198 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v236 value: i224 stateAfter: - lastLocationAccess: - #next: v202  <|@  <|@
f <@~|@floating>@ <|@
tid v237 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j177 
index: - 
=== Succesors ===
=== Usages ===
v202 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j177 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v202 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v237 
value: i15 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v204 
=== Usages ===
=== Predecessor ===
v200 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v237 value: i15 stateAfter: - lastLocationAccess: - #next: v204  <|@  <|@
f <@~|@floating>@ <|@
tid v238 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j177 
index: - 
=== Succesors ===
=== Usages ===
v204 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j177 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v204 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v238 
value: a135 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v207 
=== Usages ===
=== Predecessor ===
v202 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v238 value: a135 stateAfter: - lastLocationAccess: - #next: v207  <|@  <|@
f <@~|@floating>@ <|@
tid v239 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: j177 
index: - 
=== Succesors ===
=== Usages ===
v207 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j177 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a129 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n!# Ljava/util/LinkedList;
=== Inputs ===
value: a1 
=== Succesors ===
=== Usages ===
v207 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v207 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v239 
value: a129 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a132 
=== Usages ===
=== Predecessor ===
v204 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v239 value: a129 stateAfter: - lastLocationAccess: - #next: a132  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a132 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a124 
=== Succesors ===
next: v133 
=== Usages ===
v11 
=== Predecessor ===
v207 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a124 #next: v133  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v11 
=== Usages ===
=== Predecessor ===
a132 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v11  <|@  <|@
f <@*|@fixed>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 14]
stamp: void
=== Inputs ===
result: a132 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v133 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a132 memoryMap: -  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v108 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v108  <|@  <|@
f <@~|@floating>@ <|@
tid a31 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 29]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
a38 v141 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/LinkedList;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v228 v225 v227 v226 a129 ?57 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v47 v50 v77 v74 v198 ?39 v27 v63 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i15 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedList.checkPositionIndex(LinkedList.java:559) [bci: 5]
at java.util.LinkedList.listIterator(LinkedList.java:867) [bci: 2]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v47 v202 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:541) [bci: 1]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:559) [bci: 2]
at java.util.LinkedList.listIterator(LinkedList.java:867) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i15 
=== Succesors ===
=== Usages ===
v108 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:541) [bci: 1]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:559) [bci: 2]
at java.util.LinkedList.listIterator(LinkedList.java:867) [bci: 2]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v47 
=== Succesors ===
trueSuccessor: v107 
falseSuccessor: v105 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v47 #trueSuccessor: v107 #falseSuccessor: v105  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@409df40c slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B12" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:541) [bci: 1]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:559) [bci: 2]
at java.util.LinkedList.listIterator(LinkedList.java:867) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v137 
=== Usages ===
=== Predecessor ===
v108 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v137  <|@  <|@
f <@~|@floating>@ <|@
tid i138 <|@
result int[-21267|0xffffffffffffaced] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -21267
stableDimension: 0
stamp: i32 [-21267] ⇊00000000ffffaced ⇈00000000ffffaced
stampKind: i32
value: int[-21267|0xffffffffffffaced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i139 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v137 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v136 
=== Predecessor ===
v107 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-21267|0xffffffffffffaced]] destination: B1 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:541) [bci: 1]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:559) [bci: 2]
at java.util.LinkedList.listIterator(LinkedList.java:867) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: i221 
=== Usages ===
=== Predecessor ===
v108 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i221  <|@  <|@
f <@~|@floating>@ <|@
tid v225 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i221 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i221 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: LinkedList.size
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:541) [bci: 6]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:559) [bci: 2]
at java.util.LinkedList.listIterator(LinkedList.java:867) [bci: 2]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v225 
=== Succesors ===
next: v30 
=== Usages ===
v50 v27 i62 i73 
=== Predecessor ===
v105 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v225 #next: v30  <|@  <|@
f <@~|@floating>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 26]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i221 
=== Succesors ===
=== Usages ===
v30 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2 y: i221  <|@  <|@
f <@~|@floating>@ <|@
tid i61 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:569) [bci: 5]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i62 v77 a164 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 26]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
stamp: void
trueSuccessorProbability: 0.4381880536401267
=== Inputs ===
condition: v27 
=== Succesors ===
trueSuccessor: v28 
falseSuccessor: v109 
=== Usages ===
=== Predecessor ===
i221 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v27 #trueSuccessor: v28 #falseSuccessor: v109  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.4381880536401267 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B14" 
    xhandlers
    flags 
    probability 4601565314138273430
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 29]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v35 
=== Usages ===
=== Predecessor ===
v30 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v35  <|@  <|@
f <@~|@floating>@ <|@
tid a134 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: n - NULL
stampKind: n -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
a135 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 38]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v36 
=== Predecessor ===
v28 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[Object[null], Object[null]] destination: B3 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4603235571689833653
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:541) [bci: 9]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:559) [bci: 2]
at java.util.LinkedList.listIterator(LinkedList.java:867) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v112 
=== Usages ===
=== Predecessor ===
v30 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v112  <|@  <|@
f <@~|@floating>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:541) [bci: 9]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:559) [bci: 2]
at java.util.LinkedList.listIterator(LinkedList.java:867) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i221 
y: i2 
=== Succesors ===
=== Usages ===
v112 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i221 y: i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:541) [bci: 9]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:559) [bci: 2]
at java.util.LinkedList.listIterator(LinkedList.java:867) [bci: 2]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v50 
=== Succesors ===
trueSuccessor: v111 
falseSuccessor: v29 
=== Usages ===
=== Predecessor ===
v109 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v50 #trueSuccessor: v111 #falseSuccessor: v29  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v1|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B12" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:541) [bci: 9]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:559) [bci: 2]
at java.util.LinkedList.listIterator(LinkedList.java:867) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v142 
=== Usages ===
=== Predecessor ===
v112 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v142  <|@  <|@
f <@~|@floating>@ <|@
tid i143 <|@
result int[-22291|0xffffffffffffa8ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -22291
stableDimension: 0
stamp: i32 [-22291] ⇊00000000ffffa8ed ⇈00000000ffffa8ed
stampKind: i32
value: int[-22291|0xffffffffffffa8ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i139 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v142 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v136 
=== Predecessor ===
v111 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-22291|0xffffffffffffa8ed]] destination: B5 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B10" 
    xhandlers
    flags 
    probability 4603235571689833653
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 33]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v66 
=== Usages ===
=== Predecessor ===
v112 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v66  <|@  <|@
f <@~|@floating>@ <|@
tid i62 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:569) [bci: 6]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
stamp: i32 [-1073741824 - 1073741823]
=== Inputs ===
x: i221 
y: i61 
=== Succesors ===
=== Usages ===
v63 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i221 y: i61  <|@  <|@
f <@~|@floating>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:569) [bci: 7]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i62 
=== Succesors ===
=== Usages ===
v66 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i62  <|@  <|@
f <@*|@fixed>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:569) [bci: 7]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
stamp: void
trueSuccessorProbability: 0.7247571894353684
=== Inputs ===
condition: v63 
=== Succesors ===
trueSuccessor: v64 
falseSuccessor: v65 
=== Usages ===
=== Predecessor ===
v29 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v63 #trueSuccessor: v64 #falseSuccessor: v65  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = SAR v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7247571894353684 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4601006673113591004
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:570) [bci: 10]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v116 
=== Usages ===
=== Predecessor ===
v66 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v116  <|@  <|@
f <@~|@floating>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:571) [bci: 19]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i61 
=== Succesors ===
=== Usages ===
v116 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i61  <|@  <|@
f <@*|@fixed>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:571) [bci: 19]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v77 
=== Succesors ===
trueSuccessor: v113 
falseSuccessor: v115 
=== Usages ===
=== Predecessor ===
v64 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v77 #trueSuccessor: v113 #falseSuccessor: v115  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v1|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B14" 
    xhandlers
    flags 
    probability 4601006673113591004
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:571) [bci: 19]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: a222 
=== Usages ===
=== Predecessor ===
v116 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a222  <|@  <|@
f <@~|@floating>@ <|@
tid v227 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a222 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a222 <|@
result v4|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: LinkedList.first
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:570) [bci: 11]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
nullCheck: false
stamp: n# Ljava/util/LinkedList$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v227 
=== Succesors ===
next: v37 
=== Usages ===
a94 a135 
=== Predecessor ===
v113 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v227 #next: v37  <|@  <|@
f <@~|@floating>@ <|@
tid a94 <|@
result v5|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:570) [bci: 11]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
op: Uncompress
stamp: a# Ljava/util/LinkedList$Node;
=== Inputs ===
value: a222 
=== Succesors ===
=== Usages ===
a38 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a222  <|@  <|@
f <@*|@fixed>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 38]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v36 
=== Predecessor ===
a222 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[.] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6e444e65 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v5|QWORD[.], v4|DWORD[.]] destination: B8 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:571) [bci: 19]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v146 
=== Usages ===
=== Predecessor ===
v116 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v146  <|@  <|@
f <@~|@floating>@ <|@
tid i147 <|@
result int[-24339|0xffffffffffffa0ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -24339
stableDimension: 0
stamp: i32 [-24339] ⇊00000000ffffa0ed ⇈00000000ffffa0ed
stampKind: i32
value: int[-24339|0xffffffffffffa0ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i139 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v146 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v136 
=== Predecessor ===
v115 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-24339|0xffffffffffffa0ed]] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" "B13" 
    xhandlers
    flags 
    probability 4594739322477394204
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:575) [bci: 35]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v120 
=== Usages ===
=== Predecessor ===
v66 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v120  <|@  <|@
f <@~|@floating>@ <|@
tid i72 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:576) [bci: 45]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i73 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i73 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:576) [bci: 45]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
stamp: i32
=== Inputs ===
x: i221 
y: i72 
=== Succesors ===
=== Usages ===
v74 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i221 y: i72  <|@  <|@
f <@~|@floating>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:576) [bci: 49]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i73 
=== Succesors ===
=== Usages ===
v120 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i73  <|@  <|@
f <@*|@fixed>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:576) [bci: 49]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v74 
=== Succesors ===
trueSuccessor: v119 
falseSuccessor: v117 
=== Usages ===
=== Predecessor ===
v65 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v74 #trueSuccessor: v119 #falseSuccessor: v117  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = DEC v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v6|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:576) [bci: 49]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v144 
=== Usages ===
=== Predecessor ===
v120 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v144  <|@  <|@
f <@~|@floating>@ <|@
tid i145 <|@
result int[-25619|0xffffffffffff9bed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -25619
stableDimension: 0
stamp: i32 [-25619] ⇊00000000ffff9bed ⇈00000000ffff9bed
stampKind: i32
value: int[-25619|0xffffffffffff9bed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i139 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v144 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v136 
=== Predecessor ===
v119 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-25619|0xffffffffffff9bed]] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" "B11" "B9" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i139 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-25619 - -21267] ⇊00000000ffff80ed ⇈00000000ffffbfed
valueDescription: i32
=== Inputs ===
merge: v136 
values: i138 i143 i145 i147 
=== Succesors ===
=== Usages ===
v141 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v136 values: i138 i143 i145 i147  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v137 v142 v144 v146 
=== Succesors ===
next: v141 
=== Usages ===
i139 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v137 v142 v144 v146 #next: v141  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<LinkedList.listIterator(int)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: LinkedList.java
sourceLine: 867
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 
=== Succesors ===
=== Usages ===
v141 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i139 
speculation: a31 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v136 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i139 speculation: a31  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v7|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedList.listIterator(LinkedList.java:867) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4594739322477394204
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v117 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:576) [bci: 49]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: a223 
=== Usages ===
=== Predecessor ===
v120 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a223  <|@  <|@
f <@~|@floating>@ <|@
tid v228 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a223 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a223 <|@
result v8|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: LinkedList.last
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:575) [bci: 36]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
nullCheck: false
stamp: n# Ljava/util/LinkedList$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v228 
=== Succesors ===
next: v82 
=== Usages ===
a99 a135 
=== Predecessor ===
v117 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v228 #next: v82  <|@  <|@
f <@~|@floating>@ <|@
tid a99 <|@
result v9|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:575) [bci: 36]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
op: Uncompress
stamp: a# Ljava/util/LinkedList$Node;
=== Inputs ===
value: a223 
=== Succesors ===
=== Usages ===
a38 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a223  <|@  <|@
f <@*|@fixed>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v36 
=== Predecessor ===
a223 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6e444e65 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v9|QWORD[.], v8|DWORD[.]] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B3" "B8" "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a38 <|@
result v10|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 38]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
stamp: a# Ljava/util/LinkedList$Node;
valueDescription: a -
=== Inputs ===
merge: v36 
values: a31 a94 a99 
=== Succesors ===
=== Usages ===
?39 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v36 values: a31 a94 a99  <|@  <|@
f <@~|@floating>@ <|@
tid a135 <|@
result v11|DWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: n# Ljava/util/LinkedList$Node;
valueDescription: n -
=== Inputs ===
merge: v36 
values: a134 a222 a223 
=== Succesors ===
=== Usages ===
v204 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v36 values: a134 a222 a223  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 38]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v35 v37 v82 
=== Succesors ===
next: j151 
=== Usages ===
a38 a135 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v35 v37 v82 #next: j151  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j151 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j171 
=== Usages ===
v229 v230 
=== Predecessor ===
v36 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j171  <|@  <|@
f <@~|@floating>@ <|@
tid v229 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j151 
index: - 
=== Succesors ===
=== Usages ===
j171 v173 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j151 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j171 <|@
result v12|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v229 
=== Succesors ===
next: j172 
=== Usages ===
j209 j177 v234 
=== Predecessor ===
j151 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v229 #next: j172  <|@  <|@
f <@~|@floating>@ <|@
tid v230 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j151 
index: - 
=== Succesors ===
=== Usages ===
j172 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j151 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j172 <|@
result v13|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v230 
=== Succesors ===
next: i224 
=== Usages ===
v156 
=== Predecessor ===
j171 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v230 #next: i224  <|@  <|@
f <@~|@floating>@ <|@
tid v226 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i224 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i224 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:875) [bci: 14]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v226 
=== Succesors ===
next: v159 
=== Usages ===
v200 ?57 
=== Predecessor ===
j172 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v226 #next: v159  <|@  <|@
f <@~|@floating>@ <|@
tid j208 <|@
result long[32|0x20] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 32
stableDimension: 0
stamp: i64 [32] ⇊0000000000000020 ⇈0000000000000020
stampKind: i64
value: long[32|0x20]
=== Inputs ===
=== Succesors ===
=== Usages ===
j209 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j209 <|@
result v15|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j171 
y: j208 
=== Succesors ===
=== Usages ===
v156 v173 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j171 y: j208  <|@  <|@
f <@~|@floating>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j172 
y: j209 
=== Succesors ===
=== Usages ===
v159 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j172 y: j209  <|@  <|@
f <@*|@fixed>@ <|@
tid v159 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v156 
=== Succesors ===
trueSuccessor: v157 
falseSuccessor: v158 
=== Usages ===
=== Predecessor ===
i224 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v156 #trueSuccessor: v157 #falseSuccessor: v158  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v10|QWORD[.], v11|DWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = LEA [v12|QWORD + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v15|QWORD, y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a164 
=== Usages ===
=== Predecessor ===
v159 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a164  <|@  <|@
tid a55 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@776e63b7
hasIdentity: true
objectId: 0
stamp: a!# Ljava/util/LinkedList$ListItr;
type: HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?39 ?39 ?46 ?57 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?46 <|@
d <@d|@=== Debug Properties ===
bci: 11
code: ResolvedJavaMethodBytecode<LinkedList.listIterator(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: LinkedList.java
sourceLine: 868
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - - a55 
=== Succesors ===
=== Usages ===
?39 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - a55  <|@  <|@
tid ?57 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a55 
values: - i224 - - a1 
=== Succesors ===
=== Usages ===
?39 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a55 values: - i224 - - a1  <|@  <|@
tid ?39 <|@
d <@d|@=== Debug Properties ===
bci: 38
code: ResolvedJavaMethodBytecode<LinkedList$ListItr.<init>(LinkedList, int)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: LinkedList.java
sourceLine: 879
stackSize: 2
=== Inputs ===
outerFrameState: ?46 
values: a55 - i2 a55 a38 
virtualObjectMappings: ?57 
=== Succesors ===
=== Usages ===
a164 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?46 values: a55 - i2 a55 a38 virtualObjectMappings: ?57  <|@  <|@
f <@~|@floating>@ <|@
tid v149 <|@
result v16|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a164 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i211 <|@
result int[4|0x4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i32 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i32
value: int[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
a164 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a164 <|@
result v17|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?39 
arguments: v149 i211 i61 
=== Succesors ===
next: j165 
=== Usages ===
j165 
=== Predecessor ===
v157 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?39 arguments: v149 i211 i61 #next: j165  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j165 <|@
result v17|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a164 
=== Succesors ===
next: v178 
=== Usages ===
j177 
=== Predecessor ===
a164 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a164 #next: v178  <|@  <|@
f <@*|@fixed>@ <|@
tid v178 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v175 
=== Predecessor ===
j165 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v16|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 38]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v14|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} v10|QWORD[.] 
locals: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v14|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} - v1|DWORD 
java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v14|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} 
locals: - - 
vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v14|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} Ljava/util/LinkedList$ListItr; int[0|0x0] v14|DWORD Object[null] Object[null] v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:38, 11] <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v17|QWORD[.]] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v158 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v173 
=== Usages ===
=== Predecessor ===
v159 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v173  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v229 
value: j209 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v169 
=== Usages ===
=== Predecessor ===
v158 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v229 value: j209 stateAfter: - lastLocationAccess: - #next: v169  <|@  <|@
f <@~|@floating>@ <|@
tid v234 <|@
result [v12|QWORD + 224] <|@
d <@d|@=== Debug Properties ===
displacement: 224
scale: Times1
stamp: void*
=== Inputs ===
base: j171 
index: - 
=== Succesors ===
=== Usages ===
v169 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j171 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v169 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v234 
=== Succesors ===
next: v176 
=== Usages ===
=== Predecessor ===
v173 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v234 #next: v176  <|@  <|@
f <@*|@fixed>@ <|@
tid v176 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v175 
=== Predecessor ===
v169 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v15|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v12|QWORD + 224] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v12|QWORD] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j177 <|@
result v18|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v175 
values: j171 j165 
=== Succesors ===
=== Usages ===
v233 v232 a124 v235 v236 v237 v238 v239 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v175 values: j171 j165  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v175 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v176 v178 
=== Succesors ===
next: a124 
=== Usages ===
j177 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v176 v178 #next: a124  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a124 <|@
result v19|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j177 
=== Succesors ===
next: j189 
=== Usages ===
a132 
=== Predecessor ===
v175 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j177 #next: j189  <|@  <|@
f <@~|@floating>@ <|@
tid v183 <|@
result v20|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j184 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j184 <|@
result v20|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v183 
=== Succesors ===
=== Usages ===
v231 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v183  <|@  <|@
f <@~|@floating>@ <|@
tid v231 <|@
result [v20|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j184 
index: - 
=== Succesors ===
=== Usages ===
j189 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j184 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j189 <|@
result v21|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v231 
=== Succesors ===
next: v190 
=== Usages ===
v190 
=== Predecessor ===
a124 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v231 #next: v190  <|@  <|@
f <@~|@floating>@ <|@
tid v232 <|@
result [v18|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j177 
index: - 
=== Succesors ===
=== Usages ===
v190 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j177 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v232 
value: j189 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v194 
=== Usages ===
=== Predecessor ===
j189 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v232 value: j189 stateAfter: - lastLocationAccess: - #next: v194  <|@  <|@
f <@~|@floating>@ <|@
tid v233 <|@
result [v18|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j177 
index: - 
=== Succesors ===
=== Usages ===
v194 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j177 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v214 <|@
result meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v194 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v194 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v233 
value: v214 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v198 
=== Usages ===
=== Predecessor ===
v190 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v233 value: v214 stateAfter: - lastLocationAccess: - #next: v198  <|@  <|@
f <@~|@floating>@ <|@
tid v235 <|@
result [v18|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j177 
index: - 
=== Succesors ===
=== Usages ===
v198 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j177 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v198 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v235 
value: i2 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v200 
=== Usages ===
=== Predecessor ===
v194 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v235 value: i2 stateAfter: - lastLocationAccess: - #next: v200  <|@  <|@
f <@~|@floating>@ <|@
tid v236 <|@
result [v18|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j177 
index: - 
=== Succesors ===
=== Usages ===
v200 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j177 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v200 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v236 
value: i224 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v202 
=== Usages ===
=== Predecessor ===
v198 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v236 value: i224 stateAfter: - lastLocationAccess: - #next: v202  <|@  <|@
f <@~|@floating>@ <|@
tid v237 <|@
result [v18|QWORD[*] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j177 
index: - 
=== Succesors ===
=== Usages ===
v202 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j177 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v202 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v237 
value: i15 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v204 
=== Usages ===
=== Predecessor ===
v200 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v237 value: i15 stateAfter: - lastLocationAccess: - #next: v204  <|@  <|@
f <@~|@floating>@ <|@
tid v238 <|@
result [v18|QWORD[*] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j177 
index: - 
=== Succesors ===
=== Usages ===
v204 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j177 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v204 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v238 
value: a135 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v207 
=== Usages ===
=== Predecessor ===
v202 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v238 value: a135 stateAfter: - lastLocationAccess: - #next: v207  <|@  <|@
f <@~|@floating>@ <|@
tid v239 <|@
result [v18|QWORD[*] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: j177 
index: - 
=== Succesors ===
=== Usages ===
v207 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j177 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a129 <|@
result v22|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n!# Ljava/util/LinkedList;
=== Inputs ===
value: a1 
=== Succesors ===
=== Usages ===
v207 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v207 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v239 
value: a129 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a132 
=== Usages ===
=== Predecessor ===
v204 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v239 value: a129 stateAfter: - lastLocationAccess: - #next: a132  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a132 <|@
result v19|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a124 
=== Succesors ===
next: v133 
=== Usages ===
v11 
=== Predecessor ===
v207 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a124 #next: v133  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v11 
=== Usages ===
=== Predecessor ===
a132 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v11  <|@  <|@
f <@*|@fixed>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 14]
stamp: void
=== Inputs ===
result: a132 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v133 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a132 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v18|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = MOVE v18|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = MOV [v20|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[*]], y: v21|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v18|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[*] + 12], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[*] + 16], y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[*] + 20], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[*] + 24], y: v11|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD[.] = COMPRESSPOINTER (input: v0|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@6e444e65 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[*] + 28], y: v22|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@409df40c slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.4381880536401267 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4603235571689833653
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v1|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B10" 
    xhandlers
    flags 
    probability 4603235571689833653
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = SAR v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7247571894353684 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4601006673113591004
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v1|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B14" 
    xhandlers
    flags 
    probability 4601006673113591004
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[.] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6e444e65 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v5|QWORD[.], v4|DWORD[.]] destination: B8 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B3" "B8" "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v10|QWORD[.], v11|DWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = LEA [v12|QWORD + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v15|QWORD, y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v15|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v12|QWORD + 224] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v12|QWORD] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v18|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = MOVE v18|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = MOV [v20|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[*]], y: v21|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v18|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[*] + 12], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[*] + 16], y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[*] + 20], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[*] + 24], y: v11|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD[.] = COMPRESSPOINTER (input: v0|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@6e444e65 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[*] + 28], y: v22|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B14" 
    xhandlers
    flags 
    probability 4601565314138273430
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[Object[null], Object[null]] destination: B3 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" "B13" 
    xhandlers
    flags 
    probability 4594739322477394204
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = DEC v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v6|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4594739322477394204
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6e444e65 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v9|QWORD[.], v8|DWORD[.]] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v16|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 38]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v14|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} v10|QWORD[.] 
locals: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v14|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} - v1|DWORD 
java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v14|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} 
locals: - - 
vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v14|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} Ljava/util/LinkedList$ListItr; int[0|0x0] v14|DWORD Object[null] Object[null] v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:38, 11] <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v17|QWORD[.]] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B12" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-22291|0xffffffffffffa8ed]] destination: B5 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" "B11" "B9" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v7|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedList.listIterator(LinkedList.java:867) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-25619|0xffffffffffff9bed]] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-24339|0xffffffffffffa0ed]] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B12" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-21267|0xffffffffffffaced]] destination: B1 -> B12 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: invokespecial #20         // checkPositionIndex:(int)void
     5: new           #46         // java.util.LinkedList$ListItr
     8: dup           
     9: aload_0       
    10: iload_1       
    11: invokespecial #39         // java.util.LinkedList$ListItr.<init>:(java.util.LinkedList, int)void
    14: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@409df40c slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r14|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction rax|DWORD = MOV [r13|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   24  <|@ instruction CMP (x: rax|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr   26  <|@ instruction BRANCH trueDestinationProbability: 0.4381880536401267 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4603235571689833653
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   38  <|@ instruction CMP (x: r14|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   40  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B10" 
    xhandlers
    flags 
    probability 4603235571689833653
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction rsi|DWORD = SAR rax|DWORD size: DWORD <|@ <|@
      nr   52  <|@ instruction CMP (x: rsi|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr   54  <|@ instruction BRANCH trueDestinationProbability: 0.7247571894353684 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4601006673113591004
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ instruction CMP r14|DWORD y: 1 size: DWORD <|@ <|@
      nr   60  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B14" 
    xhandlers
    flags 
    probability 4601006673113591004
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction rax|DWORD[.] = MOV [r13|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   66  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6e444e65 encoding: base: 0 shift: 3 <|@ <|@
      nr   68  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   70  <|@ instruction JUMP ~[] destination: B8 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B3" "B8" "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  112  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  114  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  116  <|@ instruction r10|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  118  <|@ instruction r11|QWORD = LEA [rdx|QWORD + 32] size: QWORD <|@ <|@
      nr  120  <|@ instruction CMP (x: r11|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  122  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  150  <|@ instruction MOV (x: [r15|QWORD + 96], y: r11|QWORD) size: QWORD <|@ <|@
      nr  152  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + 224] instr: 0 <|@ <|@
      nr  154  <|@ instruction rsi|QWORD[*] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  160  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  162  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>} <|@ <|@
      nr  164  <|@ instruction rcx|QWORD = MOV [rcx|QWORD + 168] size: QWORD <|@ <|@
      nr  166  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  168  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>;compressed} <|@ <|@
      nr  170  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: r14|DWORD) size: DWORD <|@ <|@
      nr  172  <|@ instruction MOV (x: [rsi|QWORD[*] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr  174  <|@ instruction MOV (x: [rsi|QWORD[*] + 20], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  176  <|@ instruction MOV (x: [rsi|QWORD[*] + 24], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  178  <|@ instruction r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@6e444e65 encoding: base: 0 shift: 3 <|@ <|@
      nr  180  <|@ instruction MOV (x: [rsi|QWORD[*] + 28], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr  182  <|@ instruction rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B14" 
    xhandlers
    flags 
    probability 4601565314138273430
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction rax|DWORD[.] = MOVE input: int[0|0x0] <|@ <|@
      nr   32  <|@ instruction stack:32|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   34  <|@ instruction JUMP ~[] destination: B3 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" "B13" 
    xhandlers
    flags 
    probability 4594739322477394204
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ instruction rax|DWORD = DEC rax|DWORD size: DWORD <|@ <|@
      nr   82  <|@ instruction CMP (x: rax|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr   84  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4594739322477394204
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  102  <|@ instruction rax|DWORD[.] = MOV [r13|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  104  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6e444e65 encoding: base: 0 shift: 3 <|@ <|@
      nr  106  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  108  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  126  <|@ instruction stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  128  <|@ instruction stack:40|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  130  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  132  <|@ instruction rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction rdx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr  136  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  138  <|@ st <@st|@reference-map: [r13:0, stack:8, stack:16]
live-base-pointers: []
java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 38]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=stack:36|DWORD,lastReturned=Object[null],next=Object[null],this$0=r13|QWORD[.]} stack:32|QWORD[.] 
locals: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=stack:36|DWORD,lastReturned=Object[null],next=Object[null],this$0=r13|QWORD[.]} - r14|DWORD 
java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=stack:36|DWORD,lastReturned=Object[null],next=Object[null],this$0=r13|QWORD[.]} 
locals: - - 
vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=stack:36|DWORD,lastReturned=Object[null],next=Object[null],this$0=r13|QWORD[.]} Ljava/util/LinkedList$ListItr; int[0|0x0] stack:36|DWORD Object[null] Object[null] r13|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:38, 11] <|@ <|@
      nr  140  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  142  <|@ instruction r10|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  144  <|@ instruction rax|DWORD[.] = MOVE stack:40|DWORD[.] moveKind: DWORD <|@ <|@
      nr  146  <|@ instruction JUMP ~[] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B12" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ instruction r10|DWORD = MOVE input: int[-22291|0xffffffffffffa8ed] <|@ <|@
      nr   46  <|@ instruction JUMP ~[] destination: B5 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" "B11" "B9" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   94  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr   96  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   98  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
java.util.LinkedList.listIterator(LinkedList.java:867) [bci: 0]
locals: r13|QWORD[.] r14|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   88  <|@ instruction r10|DWORD = MOVE input: int[-25619|0xffffffffffff9bed] <|@ <|@
      nr   90  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction r10|DWORD = MOVE input: int[-24339|0xffffffffffffa0ed] <|@ <|@
      nr   76  <|@ instruction JUMP ~[] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B12" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction r10|DWORD = MOVE input: int[-21267|0xffffffffffffaced] <|@ <|@
      nr   18  <|@ instruction JUMP ~[] destination: B1 -> B12 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: invokespecial #20         // checkPositionIndex:(int)void
     5: new           #46         // java.util.LinkedList$ListItr
     8: dup           
     9: aload_0       
    10: iload_1       
    11: invokespecial #39         // java.util.LinkedList$ListItr.<init>:(java.util.LinkedList, int)void
    14: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@409df40c slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r14|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction rax|DWORD = MOV [r13|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   24  <|@ instruction CMP (x: rax|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr   26  <|@ instruction BRANCH trueDestinationProbability: 0.4381880536401267 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4603235571689833653
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   38  <|@ instruction CMP (x: r14|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   40  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B10" 
    xhandlers
    flags 
    probability 4603235571689833653
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction rsi|DWORD = SAR rax|DWORD size: DWORD <|@ <|@
      nr   52  <|@ instruction CMP (x: rsi|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr   54  <|@ instruction BRANCH trueDestinationProbability: 0.7247571894353684 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4601006673113591004
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ instruction CMP r14|DWORD y: 1 size: DWORD <|@ <|@
      nr   60  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B14" 
    xhandlers
    flags 
    probability 4601006673113591004
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction rax|DWORD[.] = MOV [r13|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   66  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6e444e65 encoding: base: 0 shift: 3 <|@ <|@
      nr   68  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   70  <|@ instruction JUMP ~[] destination: B8 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B3" "B8" "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  112  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  114  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  116  <|@ instruction r10|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  118  <|@ instruction r11|QWORD = LEA [rdx|QWORD + 32] size: QWORD <|@ <|@
      nr  120  <|@ instruction CMP (x: r11|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  122  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  150  <|@ instruction MOV (x: [r15|QWORD + 96], y: r11|QWORD) size: QWORD <|@ <|@
      nr  152  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + 224] instr: 0 <|@ <|@
      nr  154  <|@ instruction rsi|QWORD[*] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  160  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  162  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>} <|@ <|@
      nr  164  <|@ instruction rcx|QWORD = MOV [rcx|QWORD + 168] size: QWORD <|@ <|@
      nr  166  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  168  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>;compressed} <|@ <|@
      nr  170  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: r14|DWORD) size: DWORD <|@ <|@
      nr  172  <|@ instruction MOV (x: [rsi|QWORD[*] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr  174  <|@ instruction MOV (x: [rsi|QWORD[*] + 20], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  176  <|@ instruction MOV (x: [rsi|QWORD[*] + 24], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  178  <|@ instruction r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@6e444e65 encoding: base: 0 shift: 3 <|@ <|@
      nr  180  <|@ instruction MOV (x: [rsi|QWORD[*] + 28], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr  182  <|@ instruction rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B14" 
    xhandlers
    flags 
    probability 4601565314138273430
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction rax|DWORD[.] = MOVE input: int[0|0x0] <|@ <|@
      nr   32  <|@ instruction stack:32|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   34  <|@ instruction JUMP ~[] destination: B3 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" "B13" 
    xhandlers
    flags 
    probability 4594739322477394204
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ instruction rax|DWORD = DEC rax|DWORD size: DWORD <|@ <|@
      nr   82  <|@ instruction CMP (x: rax|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr   84  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4594739322477394204
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  102  <|@ instruction rax|DWORD[.] = MOV [r13|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  104  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6e444e65 encoding: base: 0 shift: 3 <|@ <|@
      nr  106  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  108  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  126  <|@ instruction stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  128  <|@ instruction stack:40|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  130  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  132  <|@ instruction rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction rdx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr  136  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  138  <|@ st <@st|@reference-map: [r13:0, stack:8, stack:16]
live-base-pointers: []
java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 38]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=stack:36|DWORD,lastReturned=Object[null],next=Object[null],this$0=r13|QWORD[.]} stack:32|QWORD[.] 
locals: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=stack:36|DWORD,lastReturned=Object[null],next=Object[null],this$0=r13|QWORD[.]} - r14|DWORD 
java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=stack:36|DWORD,lastReturned=Object[null],next=Object[null],this$0=r13|QWORD[.]} 
locals: - - 
vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=stack:36|DWORD,lastReturned=Object[null],next=Object[null],this$0=r13|QWORD[.]} Ljava/util/LinkedList$ListItr; int[0|0x0] stack:36|DWORD Object[null] Object[null] r13|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:38, 11] <|@ <|@
      nr  140  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  142  <|@ instruction r10|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  144  <|@ instruction rax|DWORD[.] = MOVE stack:40|DWORD[.] moveKind: DWORD <|@ <|@
      nr  146  <|@ instruction JUMP ~[] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B12" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ instruction r10|DWORD = MOVE input: int[-22291|0xffffffffffffa8ed] <|@ <|@
      nr   46  <|@ instruction JUMP ~[] destination: B5 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" "B11" "B9" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   94  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr   96  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   98  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
java.util.LinkedList.listIterator(LinkedList.java:867) [bci: 0]
locals: r13|QWORD[.] r14|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   88  <|@ instruction r10|DWORD = MOVE input: int[-25619|0xffffffffffff9bed] <|@ <|@
      nr   90  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction r10|DWORD = MOVE input: int[-24339|0xffffffffffffa0ed] <|@ <|@
      nr   76  <|@ instruction JUMP ~[] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B12" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction r10|DWORD = MOVE input: int[-21267|0xffffffffffffaced] <|@ <|@
      nr   18  <|@ instruction JUMP ~[] destination: B1 -> B12 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: invokespecial #20         // checkPositionIndex:(int)void
     5: new           #46         // java.util.LinkedList$ListItr
     8: dup           
     9: aload_0       
    10: iload_1       
    11: invokespecial #39         // java.util.LinkedList$ListItr.<init>:(java.util.LinkedList, int)void
    14: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec2848896c24204c8bee448bf24585f60f8c41010000418b4510413bc60f84a1000000443bf00f8f010100008bf0d1fe413bf60f8e9e0000004183fe010f8d0c010000418b45148bf048c1e6034889742410498b5760498b4f70458b550c4c8d5a204c3bd90f878b0000004d895f600f1882e0000000488bf2488bd648b9addeaddeaddeadde488b89a800000048890ec74608addeadde4489760c448956104489661489461849c1ed0344896e1c488bc2488b6c24204883c428850500000000c5f877c3b80000000048c744241000000000e97bffffffffc8413bc60f8f65000000418b45188bf048c1e6034889742410e95cffffff448954240c8944240848baaddeaddeaddeadde488bf2ba04000000b901000000e80000000090488bf0448b54240c8b442408e94cffffff41baeda8ffff4589979c0200004d89a7a8020000e8000000009041baed9bffffebe441baeda0ffffebdc41baedacffffebd4e80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@409df40c slotKind: QWORD  <||@
  Comment 48 6 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 51 8 r14|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 54 10 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 57 12 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 63 block B2 null  <||@
  Comment 63 20 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 63 22 rax|DWORD = MOV [r13|QWORD[.] + 16] size: DWORD  <||@
  Comment 67 24 CMP (x: rax|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 70 26 BRANCH trueDestinationProbability: 0.4381880536401267 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4  <||@
  Comment 76 block B4 null  <||@
  Comment 76 36 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 76 38 CMP (x: r14|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 79 40 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6  <||@
  Comment 85 block B6 null  <||@
  Comment 85 48 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 85 50 rsi|DWORD = SAR rax|DWORD size: DWORD  <||@
  Comment 89 52 CMP (x: rsi|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 92 54 BRANCH trueDestinationProbability: 0.7247571894353684 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B10  <||@
  Comment 98 block B7 null  <||@
  Comment 98 56 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 98 58 CMP r14|DWORD y: 1 size: DWORD  <||@
  Comment 102 60 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9  <||@
  Comment 108 block B8 null  <||@
  Comment 108 62 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 108 64 rax|DWORD[.] = MOV [r13|QWORD[.] + 20] size: DWORD  <||@
  Comment 112 66 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6e444e65 encoding: base: 0 shift: 3  <||@
  Comment 118 68 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 123 70 JUMP ~[] destination: B8 -> B14  <||@
  Comment 123 block B14 null  <||@
  Comment 123 110 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 123 112 rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 127 114 rcx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 131 116 r10|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD  <||@
  Comment 135 118 r11|QWORD = LEA [rdx|QWORD + 32] size: QWORD  <||@
  Comment 139 120 CMP (x: r11|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 142 122 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16  <||@
  Comment 148 block B16 null  <||@
  Comment 148 148 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 148 150 MOV (x: [r15|QWORD + 96], y: r11|QWORD) size: QWORD  <||@
  Comment 152 152 AMD64PREFETCH ~[rdx|QWORD + 224] instr: 0  <||@
  Comment 159 154 rsi|QWORD[*] = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 162 156 JUMP ~[] destination: B16 -> B17  <||@
  Comment 162 block B17 null  <||@
  Comment 162 158 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 162 160 rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 165 162 rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>}  <||@
  Comment 165 {meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>}}  <||@
  Comment 175 164 rcx|QWORD = MOV [rcx|QWORD + 168] size: QWORD  <||@
  Comment 182 166 MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD  <||@
  Comment 185 168 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>;compressed}  <||@
  Comment 185 {meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>;compressed}}  <||@
  Comment 192 170 MOV (x: [rsi|QWORD[*] + 12], y: r14|DWORD) size: DWORD  <||@
  Comment 196 172 MOV (x: [rsi|QWORD[*] + 16], y: r10|DWORD) size: DWORD  <||@
  Comment 200 174 MOV (x: [rsi|QWORD[*] + 20], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 204 176 MOV (x: [rsi|QWORD[*] + 24], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 207 178 r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@6e444e65 encoding: base: 0 shift: 3  <||@
  Comment 211 180 MOV (x: [rsi|QWORD[*] + 28], y: r13|DWORD[.]) size: DWORD  <||@
  Comment 215 182 rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 218 184 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 227 12  <||@
  Comment 237 block B3 null  <||@
  Comment 237 28 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 237 30 rax|DWORD[.] = MOVE input: int[0|0x0]  <||@
  Comment 242 32 stack:32|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 251 34 JUMP ~[] destination: B3 -> B14  <||@
  Comment 256 block B10 null  <||@
  Comment 256 78 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 256 80 rax|DWORD = DEC rax|DWORD size: DWORD  <||@
  Comment 258 82 CMP (x: rax|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 261 84 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B13  <||@
  Comment 267 block B13 null  <||@
  Comment 267 100 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 267 102 rax|DWORD[.] = MOV [r13|QWORD[.] + 24] size: DWORD  <||@
  Comment 271 104 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6e444e65 encoding: base: 0 shift: 3  <||@
  Comment 277 106 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 282 108 JUMP ~[] destination: B13 -> B14  <||@
  Comment 287 block B15 null  <||@
  Comment 287 124 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 287 126 stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 292 128 stack:40|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD  <||@
  Comment 296 130 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 296 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 306 132 rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 309 134 rdx|DWORD = MOVE input: int[4|0x4]  <||@
  Comment 314 136 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 319 138 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:38, 11]  <||@
  Comment 319 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 324 [r13:0, stack:8, stack:16]at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 38, duringCall: false, rethrow: false]
              |0                                                                                                                                                   |1                  |2         
     locals:  |vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=stack:36|DWORD,lastReturned=Object[null],next=Object[null],this$0=r13|QWORD[.]}  |-                  |r14|DWORD 
     stack:   |vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=stack:36|DWORD,lastReturned=Object[null],next=Object[null],this$0=r13|QWORD[.]}  |stack:32|QWORD[.]  |          
  at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11, duringCall: true, rethrow: false]
              |0                                                                                                                                                   |1 
     locals:  |-                                                                                                                                                   |- 
     stack:   |vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=stack:36|DWORD,lastReturned=Object[null],next=Object[null],this$0=r13|QWORD[.]}  |    <||@
  Comment 325 140 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 328 142 r10|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 333 144 rax|DWORD[.] = MOVE stack:40|DWORD[.] moveKind: DWORD  <||@
  Comment 337 146 JUMP ~[] destination: B15 -> B17  <||@
  Comment 342 block B5 null  <||@
  Comment 342 42 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 342 44 r10|DWORD = MOVE input: int[-22291|0xffffffffffffa8ed]  <||@
  Comment 348 46 JUMP ~[] destination: B5 -> B12  <||@
  Comment 348 block B12 null  <||@
  Comment 348 92 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 348 94 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 355 96 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 362 98 DEOPT info [bci:0]  <||@
  Comment 362 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 367 [r13:0]at java.util.LinkedList.listIterator(LinkedList.java:867) [bci: 0, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |r13|QWORD[.]  |r14|DWORD   <||@
  Comment 368 block B11 null  <||@
  Comment 368 86 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 368 88 r10|DWORD = MOVE input: int[-25619|0xffffffffffff9bed]  <||@
  Comment 374 90 JUMP ~[] destination: B11 -> B12  <||@
  Comment 376 block B9 null  <||@
  Comment 376 72 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 376 74 r10|DWORD = MOVE input: int[-24339|0xffffffffffffa0ed]  <||@
  Comment 382 76 JUMP ~[] destination: B9 -> B12  <||@
  Comment 384 block B1 null  <||@
  Comment 384 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 384 16 r10|DWORD = MOVE input: int[-21267|0xffffffffffffaced]  <||@
  Comment 390 18 JUMP ~[] destination: B1 -> B12  <||@
  Comment 392 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 392 4  <||@
  Comment 398 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 398 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-8662[java.util.LinkedList.listIterator(int)]"
  method "HotSpotCompilation-8662[java.util.LinkedList.listIterator(int)]"
  date 1527005197954
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 1068e1ce0 448b560849c1e203493bc20f856f41f2ff900f1f80000000000f1f800000000089842400c0feff4883ec2848896c24204c8bee448bf24585f60f8c41010000418b4510413bc60f84a1000000443bf00f8f010100008bf0d1fe413bf60f8e9e0000004183fe010f8d0c010000418b45148bf048c1e6034889742410498b5760498b4f70458b550c4c8d5a204c3bd90f878b0000004d895f600f1882e0000000488bf2488bd648b9203222c007000000488b89a800000048890ec74608444604f84489760c448956104489661489461849c1ed0344896e1c488bc2488b6c24204883c42885053dd2fafdc5f877c3b80000000048c744241000000000e97bffffffffc8413bc60f8f65000000418b45188bf048c1e6034889742410e95cffffff448954240c8944240848ba680b00c007000000488bf2ba04000000b901000000e8bc4f6b0090488bf0448b54240c8b442408e94cffffff41baeda8ffff4589979c0200004d89a7a8020000e8af57f2ff9041baed9bffffebe441baeda0ffffebdc41baedacffffebd4e8b387360090e88d56f2ff90f4f4f4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@409df40c slotKind: QWORD  <||@
  Comment 48 6 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 51 8 r14|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 54 10 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 57 12 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 63 block B2 null  <||@
  Comment 63 20 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 63 22 rax|DWORD = MOV [r13|QWORD[.] + 16] size: DWORD  <||@
  Comment 67 24 CMP (x: rax|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 70 26 BRANCH trueDestinationProbability: 0.4381880536401267 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4  <||@
  Comment 76 block B4 null  <||@
  Comment 76 36 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 76 38 CMP (x: r14|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 79 40 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6  <||@
  Comment 85 block B6 null  <||@
  Comment 85 48 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 85 50 rsi|DWORD = SAR rax|DWORD size: DWORD  <||@
  Comment 89 52 CMP (x: rsi|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 92 54 BRANCH trueDestinationProbability: 0.7247571894353684 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B10  <||@
  Comment 98 block B7 null  <||@
  Comment 98 56 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 98 58 CMP r14|DWORD y: 1 size: DWORD  <||@
  Comment 102 60 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9  <||@
  Comment 108 block B8 null  <||@
  Comment 108 62 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 108 64 rax|DWORD[.] = MOV [r13|QWORD[.] + 20] size: DWORD  <||@
  Comment 112 66 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6e444e65 encoding: base: 0 shift: 3  <||@
  Comment 118 68 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 123 70 JUMP ~[] destination: B8 -> B14  <||@
  Comment 123 block B14 null  <||@
  Comment 123 110 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 123 112 rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 127 114 rcx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 131 116 r10|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD  <||@
  Comment 135 118 r11|QWORD = LEA [rdx|QWORD + 32] size: QWORD  <||@
  Comment 139 120 CMP (x: r11|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 142 122 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16  <||@
  Comment 148 block B16 null  <||@
  Comment 148 148 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 148 150 MOV (x: [r15|QWORD + 96], y: r11|QWORD) size: QWORD  <||@
  Comment 152 152 AMD64PREFETCH ~[rdx|QWORD + 224] instr: 0  <||@
  Comment 159 154 rsi|QWORD[*] = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 162 156 JUMP ~[] destination: B16 -> B17  <||@
  Comment 162 block B17 null  <||@
  Comment 162 158 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 162 160 rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 165 162 rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>}  <||@
  Comment 165 {meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>}}  <||@
  Comment 175 164 rcx|QWORD = MOV [rcx|QWORD + 168] size: QWORD  <||@
  Comment 182 166 MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD  <||@
  Comment 185 168 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>;compressed}  <||@
  Comment 185 {meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>;compressed}}  <||@
  Comment 192 170 MOV (x: [rsi|QWORD[*] + 12], y: r14|DWORD) size: DWORD  <||@
  Comment 196 172 MOV (x: [rsi|QWORD[*] + 16], y: r10|DWORD) size: DWORD  <||@
  Comment 200 174 MOV (x: [rsi|QWORD[*] + 20], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 204 176 MOV (x: [rsi|QWORD[*] + 24], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 207 178 r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@6e444e65 encoding: base: 0 shift: 3  <||@
  Comment 211 180 MOV (x: [rsi|QWORD[*] + 28], y: r13|DWORD[.]) size: DWORD  <||@
  Comment 215 182 rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 218 184 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 227 12  <||@
  Comment 237 block B3 null  <||@
  Comment 237 28 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 237 30 rax|DWORD[.] = MOVE input: int[0|0x0]  <||@
  Comment 242 32 stack:32|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 251 34 JUMP ~[] destination: B3 -> B14  <||@
  Comment 256 block B10 null  <||@
  Comment 256 78 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 256 80 rax|DWORD = DEC rax|DWORD size: DWORD  <||@
  Comment 258 82 CMP (x: rax|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 261 84 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B13  <||@
  Comment 267 block B13 null  <||@
  Comment 267 100 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 267 102 rax|DWORD[.] = MOV [r13|QWORD[.] + 24] size: DWORD  <||@
  Comment 271 104 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6e444e65 encoding: base: 0 shift: 3  <||@
  Comment 277 106 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 282 108 JUMP ~[] destination: B13 -> B14  <||@
  Comment 287 block B15 null  <||@
  Comment 287 124 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 287 126 stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 292 128 stack:40|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD  <||@
  Comment 296 130 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 296 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 306 132 rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 309 134 rdx|DWORD = MOVE input: int[4|0x4]  <||@
  Comment 314 136 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 319 138 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:38, 11]  <||@
  Comment 319 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 324 [r13:0, stack:8, stack:16]at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 38, duringCall: false, rethrow: false]
              |0                                                                                                                                                   |1                  |2         
     locals:  |vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=stack:36|DWORD,lastReturned=Object[null],next=Object[null],this$0=r13|QWORD[.]}  |-                  |r14|DWORD 
     stack:   |vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=stack:36|DWORD,lastReturned=Object[null],next=Object[null],this$0=r13|QWORD[.]}  |stack:32|QWORD[.]  |          
  at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11, duringCall: true, rethrow: false]
              |0                                                                                                                                                   |1 
     locals:  |-                                                                                                                                                   |- 
     stack:   |vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=stack:36|DWORD,lastReturned=Object[null],next=Object[null],this$0=r13|QWORD[.]}  |    <||@
  Comment 325 140 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 328 142 r10|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 333 144 rax|DWORD[.] = MOVE stack:40|DWORD[.] moveKind: DWORD  <||@
  Comment 337 146 JUMP ~[] destination: B15 -> B17  <||@
  Comment 342 block B5 null  <||@
  Comment 342 42 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 342 44 r10|DWORD = MOVE input: int[-22291|0xffffffffffffa8ed]  <||@
  Comment 348 46 JUMP ~[] destination: B5 -> B12  <||@
  Comment 348 block B12 null  <||@
  Comment 348 92 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 348 94 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 355 96 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 362 98 DEOPT info [bci:0]  <||@
  Comment 362 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 367 [r13:0]at java.util.LinkedList.listIterator(LinkedList.java:867) [bci: 0, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |r13|QWORD[.]  |r14|DWORD   <||@
  Comment 368 block B11 null  <||@
  Comment 368 86 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 368 88 r10|DWORD = MOVE input: int[-25619|0xffffffffffff9bed]  <||@
  Comment 374 90 JUMP ~[] destination: B11 -> B12  <||@
  Comment 376 block B9 null  <||@
  Comment 376 72 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 376 74 r10|DWORD = MOVE input: int[-24339|0xffffffffffffa0ed]  <||@
  Comment 382 76 JUMP ~[] destination: B9 -> B12  <||@
  Comment 384 block B1 null  <||@
  Comment 384 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 384 16 r10|DWORD = MOVE input: int[-21267|0xffffffffffffaced]  <||@
  Comment 390 18 JUMP ~[] destination: B1 -> B12  <||@
  Comment 392 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 392 4  <||@
  Comment 398 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 398 5  <||@
  HexCodeFile>>> <|@
end_nmethod
