begin_compilation
  name " HotSpotCompilation-7914[java.util.ArrayList.<init>(int)]"
  method "HotSpotCompilation-7914[java.util.ArrayList.<init>(int)]"
  date 1527005187772
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v31 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v31  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/ArrayList;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v295 v294 ?6 ?7 j60 j169 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v294 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v31 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.AbstractList.<init>(AbstractList.java:601) [bci: 5]
at java.util.ArrayList.<init>(ArrayList.java:151) [bci: 1]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v31 v17 a97 v162 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList.modCount
nodeSourcePosition: at java.util.AbstractList.<init>(AbstractList.java:601) [bci: 6]
at java.util.ArrayList.<init>(ArrayList.java:151) [bci: 1]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v294 
value: i4 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v12 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v294 value: i4 stateAfter: - lastLocationAccess: - #next: v12  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v17 ?6 v9 j177 v124 i145 i73 v82 a97 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?6 <|@
d <@d|@=== Debug Properties ===
bci: 1
code: ResolvedJavaMethodBytecode<ArrayList.<init>(int)>
duringCall: true
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.AbstractList.<init>(AbstractList.java:601) [bci: 6]
at java.util.ArrayList.<init>(ArrayList.java:151) [bci: 1]
rethrowException: false
sourceFile: ArrayList.java
sourceLine: 151
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 
=== Succesors ===
=== Usages ===
?7 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2  <|@  <|@
tid ?7 <|@
d <@d|@=== Debug Properties ===
bci: 9
code: ResolvedJavaMethodBytecode<AbstractList.<init>()>
duringCall: false
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.AbstractList.<init>(AbstractList.java:601) [bci: 6]
at java.util.ArrayList.<init>(ArrayList.java:151) [bci: 1]
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 77
stackSize: 0
=== Inputs ===
outerFrameState: ?6 
values: a1 
=== Succesors ===
=== Usages ===
a97 v45 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?6 values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid i67 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.ArrayList.<init>(ArrayList.java:155) [bci: 27]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v66 v173 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i61 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.ArrayList.<init>(ArrayList.java:155) [bci: 27]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j62 j142 j149 j170 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j65 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.ArrayList.<init>(ArrayList.java:155) [bci: 27]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v297 j164 v307 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v295 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v36 v41 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i8 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList.<init>(ArrayList.java:152) [bci: 5]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v9 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList.<init>(ArrayList.java:152) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i8 
=== Succesors ===
=== Usages ===
v12 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.<init>(ArrayList.java:152) [bci: 5]
stamp: void
trueSuccessorProbability: 0.009729833502041929
=== Inputs ===
condition: v9 
=== Succesors ===
trueSuccessor: v10 
falseSuccessor: v11 
=== Usages ===
=== Predecessor ===
v31 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v9 #trueSuccessor: v10 #falseSuccessor: v11  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4576762488921427584
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.<init>(ArrayList.java:154) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v47 
=== Usages ===
=== Predecessor ===
v12 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v47  <|@  <|@
f <@~|@floating>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.ArrayList.<init>(ArrayList.java:154) [bci: 20]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i4 
=== Succesors ===
=== Usages ===
v47 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.<init>(ArrayList.java:154) [bci: 20]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v17 
=== Succesors ===
trueSuccessor: v44 
falseSuccessor: v46 
=== Usages ===
=== Predecessor ===
v10 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v17 #trueSuccessor: v44 #falseSuccessor: v46  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4576762488921427584
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v44 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.<init>(ArrayList.java:154) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v36 
=== Usages ===
=== Predecessor ===
v47 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v36  <|@  <|@
f <@~|@floating>@ <|@
tid a42 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList.<init>(ArrayList.java:155) [bci: 27]
rawvalue: Object[0]{}
stableDimension: 0
stamp: n!# [Ljava/lang/Object;
stampKind: n -
value: NarrowOop[Object[0]{}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v36 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: ArrayList.elementData
nodeSourcePosition: at java.util.ArrayList.<init>(ArrayList.java:155) [bci: 27]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v295 
value: a42 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j60 
=== Usages ===
=== Predecessor ===
v44 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v295 value: a42 stateAfter: - lastLocationAccess: - #next: j60  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j60 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.ArrayList.<init>(ArrayList.java:155) [bci: 27]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v66 
=== Usages ===
j62 
=== Predecessor ===
v36 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v66  <|@  <|@
f <@~|@floating>@ <|@
tid j62 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.ArrayList.<init>(ArrayList.java:155) [bci: 27]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j60 
y: i61 
=== Succesors ===
=== Usages ===
v297 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j60 y: i61  <|@  <|@
f <@~|@floating>@ <|@
tid v297 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j62 
index: j65 
=== Succesors ===
=== Usages ===
v66 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j62 index: j65  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.ArrayList.<init>(ArrayList.java:155) [bci: 27]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v297 
value: i67 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v28 
=== Usages ===
=== Predecessor ===
j60 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v297 value: i67 stateAfter: - lastLocationAccess: - #next: v28  <|@  <|@
f <@*|@fixed>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.<init>(ArrayList.java:160) [bci: 60]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v66 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.<init>(ArrayList.java:154) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v45 
=== Usages ===
=== Predecessor ===
v47 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v45  <|@  <|@
f <@*|@fixed>@ <|@
tid v45 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 32
nodeSourcePosition: at java.util.ArrayList.<init>(ArrayList.java:154) [bci: 20]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?7 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v46 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?7  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" "B8" 
    xhandlers
    flags 
    probability 4607094780250949062
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: j76 
=== Usages ===
=== Predecessor ===
v12 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j76  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j76 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j121 
=== Usages ===
v298 v299 
=== Predecessor ===
v11 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j121  <|@  <|@
f <@~|@floating>@ <|@
tid v298 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j76 
index: - 
=== Succesors ===
=== Usages ===
j121 v123 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j76 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j121 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v298 
=== Succesors ===
next: j122 
=== Usages ===
j80 v300 v301 a96 v306 v302 v303 v304 v305 
=== Predecessor ===
j76 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v298 #next: j122  <|@  <|@
f <@~|@floating>@ <|@
tid v299 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j76 
index: - 
=== Succesors ===
=== Usages ===
j122 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j76 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j122 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v299 
=== Succesors ===
next: v85 
=== Usages ===
v86 
=== Predecessor ===
j121 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v299 #next: v85  <|@  <|@
f <@~|@floating>@ <|@
tid j71 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v125 j151 v157 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i72 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i73 i146 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i81 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 48]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v82 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i81 
=== Succesors ===
=== Usages ===
v85 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2 y: i81  <|@  <|@
f <@*|@fixed>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v82 
=== Succesors ===
trueSuccessor: v84 
falseSuccessor: v83 
=== Usages ===
=== Predecessor ===
j122 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v82 #trueSuccessor: v84 #falseSuccessor: v83  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4606202824180381798
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v92 
=== Usages ===
=== Predecessor ===
v85 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v92  <|@  <|@
f <@~|@floating>@ <|@
tid i73 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i2 
y: i72 
=== Succesors ===
=== Usages ===
i105 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i2 y: i72  <|@  <|@
f <@~|@floating>@ <|@
tid i104 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i105 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i105 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
stamp: i32 [-2147483645 - 2147483647] ⇊0000000000000003
=== Inputs ===
x: i73 
y: i104 
=== Succesors ===
=== Usages ===
i75 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i73 y: i104  <|@  <|@
f <@~|@floating>@ <|@
tid i74 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i75 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i75 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i105 
y: i74 
=== Succesors ===
=== Usages ===
j79 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i105 y: i74  <|@  <|@
f <@~|@floating>@ <|@
tid j79 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i75 
=== Succesors ===
=== Usages ===
j80 v302 v303 v304 v305 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i75  <|@  <|@
f <@~|@floating>@ <|@
tid j80 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
stamp: i64
=== Inputs ===
x: j79 
y: j121 
=== Succesors ===
=== Usages ===
v86 v123 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j79 y: j121  <|@  <|@
f <@~|@floating>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j122 
y: j80 
=== Succesors ===
=== Usages ===
v92 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j122 y: j80  <|@  <|@
f <@*|@fixed>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v86 
=== Succesors ===
trueSuccessor: v91 
falseSuccessor: v90 
=== Usages ===
=== Predecessor ===
v84 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v86 #trueSuccessor: v91 #falseSuccessor: v90  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576291288747520889
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v89 
=== Usages ===
=== Predecessor ===
v92 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v89  <|@  <|@
f <@*|@fixed>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v88 
=== Predecessor ===
v91 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606122548134030744
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v123 
=== Usages ===
=== Predecessor ===
v92 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v123  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v298 
value: j80 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v110 
=== Usages ===
=== Predecessor ===
v90 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v298 value: j80 stateAfter: - lastLocationAccess: - #next: v110  <|@  <|@
f <@~|@floating>@ <|@
tid v302 <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j79 
index: j121 
=== Succesors ===
=== Usages ===
v110 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j79 index: j121  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
stamp: void
=== Inputs ===
address: v302 
=== Succesors ===
next: v113 
=== Usages ===
=== Predecessor ===
v123 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v302 #next: v113  <|@  <|@
f <@~|@floating>@ <|@
tid v303 <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j79 
index: j121 
=== Succesors ===
=== Usages ===
v113 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j79 index: j121  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
stamp: void
=== Inputs ===
address: v303 
=== Succesors ===
next: v116 
=== Usages ===
=== Predecessor ===
v110 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v303 #next: v116  <|@  <|@
f <@~|@floating>@ <|@
tid v304 <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j79 
index: j121 
=== Succesors ===
=== Usages ===
v116 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j79 index: j121  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
stamp: void
=== Inputs ===
address: v304 
=== Succesors ===
next: v119 
=== Usages ===
=== Predecessor ===
v113 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v304 #next: v119  <|@  <|@
f <@~|@floating>@ <|@
tid v305 <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j79 
index: j121 
=== Succesors ===
=== Usages ===
v119 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j79 index: j121  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
stamp: void
=== Inputs ===
address: v305 
=== Succesors ===
next: v124 
=== Usages ===
=== Predecessor ===
v116 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v305 #next: v124  <|@  <|@
f <@~|@floating>@ <|@
tid v300 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j121 
index: - 
=== Succesors ===
=== Usages ===
v124 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j121 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v300 
value: i2 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v125 
=== Usages ===
=== Predecessor ===
v119 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v300 value: i2 stateAfter: - lastLocationAccess: - #next: v125  <|@  <|@
f <@~|@floating>@ <|@
tid v301 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j121 
index: - 
=== Succesors ===
=== Usages ===
v125 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j121 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v125 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v301 
value: j71 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v129 
=== Usages ===
=== Predecessor ===
v124 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v301 value: j71 stateAfter: - lastLocationAccess: - #next: v129  <|@  <|@
f <@~|@floating>@ <|@
tid v306 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j121 
index: - 
=== Succesors ===
=== Usages ===
v129 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j121 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v176 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
rawvalue: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v129 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v306 
value: v176 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v95 
=== Usages ===
=== Predecessor ===
v125 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v306 value: v176 stateAfter: - lastLocationAccess: - #next: v95  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: a96 
=== Usages ===
=== Predecessor ===
v129 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a96  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a96 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j121 
=== Succesors ===
next: v98 
=== Usages ===
a101 
=== Predecessor ===
v95 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j121 #next: v98  <|@  <|@
f <@*|@fixed>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v99 
=== Predecessor ===
a96 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 4591800069227703043
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v87 
=== Usages ===
=== Predecessor ===
v85 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v87  <|@  <|@
f <@*|@fixed>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v88 
=== Predecessor ===
v83 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4592442277598511474
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v88 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v87 v89 
=== Succesors ===
next: a97 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v87 v89 #next: a97  <|@  <|@
f <@~|@floating>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
rawvalue: meta{HotSpotType<[Ljava/lang/Object;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[Ljava/lang/Object;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a97 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a97 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?7 
arguments: v70 i2 i4 
=== Succesors ===
next: v100 
=== Usages ===
a101 
=== Predecessor ===
v88 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?7 arguments: v70 i2 i4 #next: v100  <|@  <|@
f <@*|@fixed>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v99 
=== Predecessor ===
a97 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607094780250949062
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a101 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v99 
values: a96 a97 
=== Succesors ===
=== Usages ===
v296 a55 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v99 values: a96 a97  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v98 v100 
=== Succesors ===
next: v235 
=== Usages ===
a101 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v98 v100 #next: v235  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v235 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v188 
=== Usages ===
j237 
=== Predecessor ===
v99 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v188  <|@  <|@
f <@~|@floating>@ <|@
tid v296 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a101 
index: - 
=== Succesors ===
=== Usages ===
j237 j143 j141 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a101 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j237 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v235 
address: v296 
=== Succesors ===
=== Usages ===
v308 v309 v310 v311 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v235 address: v296  <|@  <|@
f <@~|@floating>@ <|@
tid j177 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i2 
=== Succesors ===
=== Usages ===
j278 j265 j271 j275 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2  <|@  <|@
f <@~|@floating>@ <|@
tid j264 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j265 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j265 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j177 
y: j264 
=== Succesors ===
=== Usages ===
v266 v268 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j177 y: j264  <|@  <|@
f <@~|@floating>@ <|@
tid j108 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j258 v266 j252 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v266 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j265 
y: j108 
=== Succesors ===
=== Usages ===
v188 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j265 y: j108  <|@  <|@
f <@*|@fixed>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v266 
=== Succesors ===
trueSuccessor: v186 
falseSuccessor: v187 
=== Usages ===
=== Predecessor ===
v235 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v266 #trueSuccessor: v186 #falseSuccessor: v187  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    probability 4604864890074530900
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v198 
=== Usages ===
=== Predecessor ===
v188 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v198  <|@  <|@
f <@*|@fixed>@ <|@
tid v198 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v199 
=== Predecessor ===
v186 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4598087580996208070
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v189 
=== Usages ===
=== Predecessor ===
v188 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v189  <|@  <|@
f <@~|@floating>@ <|@
tid j127 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j263 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v290 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null,null,null,null,null,null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL>
stampKind: <n -,n -,n -,n -,n -,n -,n -,n ->
value: SIMD<null,null,null,null,null,null,null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v289 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v190 
=== Predecessor ===
v187 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B28" 
    successors "B14" "B28" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607094780250949062
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j258 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v190 
values: j108 j263 
=== Succesors ===
=== Usages ===
v311 j263 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v190 values: j108 j263  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v189 
=== Succesors ===
next: v289 
=== Usages ===
j258 v194 v195 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v189 #next: v289  <|@  <|@
f <@~|@floating>@ <|@
tid v311 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j237 
index: j258 
=== Succesors ===
=== Usages ===
v289 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j237 index: j258  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v289 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v311 
value: v290 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v197 
=== Usages ===
=== Predecessor ===
v190 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v311 value: v290 stateAfter: - lastLocationAccess: - #next: v197  <|@  <|@
f <@~|@floating>@ <|@
tid j263 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j258 
y: j127 
=== Succesors ===
=== Usages ===
j252 j258 v268 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j258 y: j127  <|@  <|@
f <@~|@floating>@ <|@
tid v268 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j265 
y: j263 
=== Succesors ===
=== Usages ===
v197 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j265 y: j263  <|@  <|@
f <@*|@fixed>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v268 
=== Succesors ===
trueSuccessor: v194 
falseSuccessor: v196 
=== Usages ===
=== Predecessor ===
v289 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v268 #trueSuccessor: v194 #falseSuccessor: v196  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4598087580996208070
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v194 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v190 
=== Succesors ===
next: v200 
=== Usages ===
=== Predecessor ===
v197 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v190 #next: v200  <|@  <|@
f <@*|@fixed>@ <|@
tid v200 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v199 
=== Predecessor ===
v194 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B11" "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607094780250949062
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j252 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v199 
values: j108 j263 
=== Succesors ===
=== Usages ===
v310 j257 j245 v272 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v199 values: j108 j263  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v198 v200 
=== Succesors ===
next: v218 
=== Usages ===
j252 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v198 v200 #next: v218  <|@  <|@
f <@~|@floating>@ <|@
tid j270 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j271 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j271 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j177 
y: j270 
=== Succesors ===
=== Usages ===
v272 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j177 y: j270  <|@  <|@
f <@~|@floating>@ <|@
tid v272 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j271 
y: j252 
=== Succesors ===
=== Usages ===
v218 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j271 y: j252  <|@  <|@
f <@*|@fixed>@ <|@
tid v218 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v272 
=== Succesors ===
trueSuccessor: v217 
falseSuccessor: v216 
=== Usages ===
=== Predecessor ===
v199 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v272 #trueSuccessor: v217 #falseSuccessor: v216  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4598087580996208070
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v221 
=== Usages ===
=== Predecessor ===
v218 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v221  <|@  <|@
f <@*|@fixed>@ <|@
tid v221 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v210 
=== Predecessor ===
v217 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4604864890074530900
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v216 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v288 
=== Usages ===
=== Predecessor ===
v218 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v288  <|@  <|@
f <@~|@floating>@ <|@
tid v310 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j237 
index: j252 
=== Succesors ===
=== Usages ===
v288 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j237 index: j252  <|@  <|@
f <@~|@floating>@ <|@
tid v293 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null,null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL,n - NULL,n - NULL>
stampKind: <n -,n -,n -,n ->
value: SIMD<null,null,null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v288 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v288 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v310 
value: v293 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v209 
=== Usages ===
=== Predecessor ===
v216 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v310 value: v293 stateAfter: - lastLocationAccess: - #next: v209  <|@  <|@
f <@~|@floating>@ <|@
tid j240 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j257 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j257 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j252 
y: j240 
=== Succesors ===
=== Usages ===
j245 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j252 y: j240  <|@  <|@
f <@*|@fixed>@ <|@
tid v209 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v210 
=== Predecessor ===
v288 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607094780250949062
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j245 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v210 
values: j257 j252 
=== Succesors ===
=== Usages ===
v309 j251 j238 v276 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v210 values: j257 j252  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v210 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v209 v221 
=== Succesors ===
next: v224 
=== Usages ===
j245 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v209 v221 #next: v224  <|@  <|@
f <@~|@floating>@ <|@
tid j274 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j275 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j275 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j177 
y: j274 
=== Succesors ===
=== Usages ===
v276 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j177 y: j274  <|@  <|@
f <@~|@floating>@ <|@
tid v276 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j275 
y: j245 
=== Succesors ===
=== Usages ===
v224 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j275 y: j245  <|@  <|@
f <@*|@fixed>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v276 
=== Succesors ===
trueSuccessor: v223 
falseSuccessor: v222 
=== Usages ===
=== Predecessor ===
v210 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v276 #trueSuccessor: v223 #falseSuccessor: v222  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4598087580996208070
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v223 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v227 
=== Usages ===
=== Predecessor ===
v224 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v227  <|@  <|@
f <@*|@fixed>@ <|@
tid v227 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v213 
=== Predecessor ===
v223 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4604864890074530900
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v286 
=== Usages ===
=== Predecessor ===
v224 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v286  <|@  <|@
f <@~|@floating>@ <|@
tid v309 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j237 
index: j245 
=== Succesors ===
=== Usages ===
v286 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j237 index: j245  <|@  <|@
f <@~|@floating>@ <|@
tid v292 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL>
stampKind: <n -,n ->
value: SIMD<null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v286 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v286 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v309 
value: v292 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v212 
=== Usages ===
=== Predecessor ===
v222 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v309 value: v292 stateAfter: - lastLocationAccess: - #next: v212  <|@  <|@
f <@~|@floating>@ <|@
tid j250 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j251 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j251 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j245 
y: j250 
=== Succesors ===
=== Usages ===
j238 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j245 y: j250  <|@  <|@
f <@*|@fixed>@ <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v213 
=== Predecessor ===
v286 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4607094780250949062
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j238 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v213 
values: j251 j245 
=== Succesors ===
=== Usages ===
v308 v279 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v213 values: j251 j245  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v213 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v212 v227 
=== Succesors ===
next: v230 
=== Usages ===
j238 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v212 v227 #next: v230  <|@  <|@
f <@~|@floating>@ <|@
tid j155 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 50]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j156 j278 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j278 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j177 
y: j155 
=== Succesors ===
=== Usages ===
v279 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j177 y: j155  <|@  <|@
f <@~|@floating>@ <|@
tid v279 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j278 
y: j238 
=== Succesors ===
=== Usages ===
v230 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j278 y: j238  <|@  <|@
f <@*|@fixed>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v279 
=== Succesors ===
trueSuccessor: v229 
falseSuccessor: v228 
=== Usages ===
=== Predecessor ===
v213 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v279 #trueSuccessor: v229 #falseSuccessor: v228  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4598087580996208070
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v229 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v233 
=== Usages ===
=== Predecessor ===
v230 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v233  <|@  <|@
f <@*|@fixed>@ <|@
tid v233 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v203 
=== Predecessor ===
v229 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4604864890074530900
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v228 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v284 
=== Usages ===
=== Predecessor ===
v230 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v284  <|@  <|@
f <@~|@floating>@ <|@
tid v308 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j237 
index: j238 
=== Succesors ===
=== Usages ===
v284 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j237 index: j238  <|@  <|@
f <@~|@floating>@ <|@
tid a291 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: n - NULL
stampKind: n -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v284 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v284 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v308 
value: a291 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v215 
=== Usages ===
=== Predecessor ===
v228 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v308 value: a291 stateAfter: - lastLocationAccess: - #next: v215  <|@  <|@
f <@*|@fixed>@ <|@
tid v215 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v203 
=== Predecessor ===
v284 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4607094780250949062
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v203 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v215 v233 
=== Succesors ===
next: j141 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v215 v233 #next: j141  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j141 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToFirstArrayElement(WriteBarrierSnippets.java:376) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:159) [bci: 20]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v296 
=== Succesors ===
next: j143 
=== Usages ===
j142 
=== Predecessor ===
v203 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v296 #next: j143  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j143 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:385) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v296 
=== Succesors ===
next: v152 
=== Usages ===
j148 
=== Predecessor ===
j141 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v296 #next: v152  <|@  <|@
f <@~|@floating>@ <|@
tid i144 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i145 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i145 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
stamp: i32
=== Inputs ===
x: i2 
y: i144 
=== Succesors ===
=== Usages ===
i146 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2 y: i144  <|@  <|@
f <@~|@floating>@ <|@
tid i146 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i145 
y: i72 
=== Succesors ===
=== Usages ===
j147 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i145 y: i72  <|@  <|@
f <@~|@floating>@ <|@
tid j147 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 26]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
resultBits: 64
stamp: i64 [-2147483648 - 2147483644] ⇈fffffffffffffffc
=== Inputs ===
value: i146 
=== Succesors ===
=== Usages ===
j148 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i146  <|@  <|@
f <@~|@floating>@ <|@
tid j148 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 27]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
stamp: i64
=== Inputs ===
x: j143 
y: j147 
=== Succesors ===
=== Usages ===
j149 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j143 y: j147  <|@  <|@
f <@~|@floating>@ <|@
tid j149 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 34]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j148 
y: i61 
=== Succesors ===
=== Usages ===
j150 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j148 y: i61  <|@  <|@
f <@~|@floating>@ <|@
tid j142 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:159) [bci: 24]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j141 
y: i61 
=== Succesors ===
=== Usages ===
j150 j164 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j141 y: i61  <|@  <|@
f <@~|@floating>@ <|@
tid j150 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:161) [bci: 41]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
stamp: i64 [-36028797018963967 - 36028797018963967]
=== Inputs ===
x: j149 
y: j142 
=== Succesors ===
=== Usages ===
j151 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j149 y: j142  <|@  <|@
f <@~|@floating>@ <|@
tid j151 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:161) [bci: 43]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
stamp: i64 [-36028797018963966 - 36028797018963968]
=== Inputs ===
x: j150 
y: j71 
=== Succesors ===
=== Usages ===
j154 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j150 y: j71  <|@  <|@
f <@*|@fixed>@ <|@
tid v152 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v153 
=== Predecessor ===
j143 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B27" 
    successors "B26" "B27" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4611598379878319558
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j154 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v153 
values: j151 j156 
=== Succesors ===
=== Usages ===
j156 v157 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v153 values: j151 j156  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v153 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 2.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v152 
=== Succesors ===
next: v160 
=== Usages ===
j154 v158 v163 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v152 #next: v160  <|@  <|@
f <@~|@floating>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 55]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j154 
y: j71 
=== Succesors ===
=== Usages ===
v160 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j154 y: j71  <|@  <|@
f <@*|@fixed>@ <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 55]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v157 
=== Succesors ===
trueSuccessor: v158 
falseSuccessor: v159 
=== Usages ===
=== Predecessor ===
v153 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v157 #trueSuccessor: v158 #falseSuccessor: v159  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors 
    xhandlers
    flags 
    probability 4607094780250949062
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v158 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:165) [bci: 76]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v153 
=== Succesors ===
next: a55 
=== Usages ===
=== Predecessor ===
v160 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v153 #next: a55  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a55 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a101 
=== Succesors ===
next: v41 
=== Usages ===
a40 
=== Predecessor ===
v158 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a101 #next: v41  <|@  <|@
f <@~|@floating>@ <|@
tid a40 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 13]
op: Compress
stamp: n! -
=== Inputs ===
value: a55 
=== Succesors ===
=== Usages ===
v41 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a55  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: ArrayList.elementData
nodeSourcePosition: at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 13]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v295 
value: a40 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j169 
=== Usages ===
=== Predecessor ===
a55 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v295 value: a40 stateAfter: - lastLocationAccess: - #next: j169  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j169 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 13]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v173 
=== Usages ===
j170 
=== Predecessor ===
v41 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v173  <|@  <|@
f <@~|@floating>@ <|@
tid j170 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 13]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j169 
y: i61 
=== Succesors ===
=== Usages ===
v307 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j169 y: i61  <|@  <|@
f <@~|@floating>@ <|@
tid v307 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j170 
index: j65 
=== Succesors ===
=== Usages ===
v173 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j170 index: j65  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 13]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v307 
value: i67 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v27 
=== Usages ===
=== Predecessor ===
j169 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v307 value: i67 stateAfter: - lastLocationAccess: - #next: v27  <|@  <|@
f <@*|@fixed>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.<init>(ArrayList.java:160) [bci: 60]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v173 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B25" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4607094780250949062
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v159 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 58]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v162 
=== Usages ===
=== Predecessor ===
v160 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v162  <|@  <|@
f <@~|@floating>@ <|@
tid j156 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 50]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
stamp: i64
=== Inputs ===
x: j154 
y: j155 
=== Succesors ===
=== Usages ===
j154 j161 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j154 y: j155  <|@  <|@
f <@~|@floating>@ <|@
tid j164 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 62]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
stamp: i64 [4682670080 - 36028801701634047] ⇈00ffffffffffffff
=== Inputs ===
x: j142 
y: j65 
=== Succesors ===
=== Usages ===
j161 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j142 y: j65  <|@  <|@
f <@~|@floating>@ <|@
tid j161 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 65]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
stamp: i64
=== Inputs ===
x: j156 
y: j164 
=== Succesors ===
=== Usages ===
v162 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j156 y: j164  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v162 <|@
d <@d|@=== Debug Properties ===
kind: boolean
nodeSourcePosition: at org.graalvm.compiler.replacements.nodes.DirectStoreNode.storeBoolean(long, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 70]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
stamp: void
=== Inputs ===
address: j161 
value: i4 
=== Succesors ===
next: v163 
=== Usages ===
=== Predecessor ===
v159 >@ <|@
instruction <@DirectStore|@org.graalvm.compiler.replacements.nodes.DirectStoreNode>@ address: j161 value: i4 #next: v163  <|@  <|@
f <@*|@fixed>@ <|@
tid v163 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
stamp: void
=== Inputs ===
loopBegin: v153 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v162 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v153  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4604864890074530900
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v196 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v195 
=== Usages ===
=== Predecessor ===
v197 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v195  <|@  <|@
f <@*|@fixed>@ <|@
tid v195 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v190 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v196 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v190  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v31 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v31  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/ArrayList;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v295 v294 ?6 ?7 j60 j169 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v294 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v31 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.AbstractList.<init>(AbstractList.java:601) [bci: 5]
at java.util.ArrayList.<init>(ArrayList.java:151) [bci: 1]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v31 v17 a97 v162 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList.modCount
nodeSourcePosition: at java.util.AbstractList.<init>(AbstractList.java:601) [bci: 6]
at java.util.ArrayList.<init>(ArrayList.java:151) [bci: 1]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v294 
value: i4 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v12 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v294 value: i4 stateAfter: - lastLocationAccess: - #next: v12  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v17 ?6 v9 j177 v124 i145 i73 v82 a97 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?6 <|@
d <@d|@=== Debug Properties ===
bci: 1
code: ResolvedJavaMethodBytecode<ArrayList.<init>(int)>
duringCall: true
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.AbstractList.<init>(AbstractList.java:601) [bci: 6]
at java.util.ArrayList.<init>(ArrayList.java:151) [bci: 1]
rethrowException: false
sourceFile: ArrayList.java
sourceLine: 151
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 
=== Succesors ===
=== Usages ===
?7 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2  <|@  <|@
tid ?7 <|@
d <@d|@=== Debug Properties ===
bci: 9
code: ResolvedJavaMethodBytecode<AbstractList.<init>()>
duringCall: false
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.AbstractList.<init>(AbstractList.java:601) [bci: 6]
at java.util.ArrayList.<init>(ArrayList.java:151) [bci: 1]
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 77
stackSize: 0
=== Inputs ===
outerFrameState: ?6 
values: a1 
=== Succesors ===
=== Usages ===
a97 v45 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?6 values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid i67 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.ArrayList.<init>(ArrayList.java:155) [bci: 27]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v66 v173 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i61 <|@
result int[9|0x9] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.ArrayList.<init>(ArrayList.java:155) [bci: 27]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j62 j142 j149 j170 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j65 <|@
result v2|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.ArrayList.<init>(ArrayList.java:155) [bci: 27]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v297 j164 v307 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v295 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v36 v41 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i8 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList.<init>(ArrayList.java:152) [bci: 5]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v9 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList.<init>(ArrayList.java:152) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i8 
=== Succesors ===
=== Usages ===
v12 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.<init>(ArrayList.java:152) [bci: 5]
stamp: void
trueSuccessorProbability: 0.009729833502041929
=== Inputs ===
condition: v9 
=== Succesors ===
trueSuccessor: v10 
falseSuccessor: v11 
=== Usages ===
=== Predecessor ===
v31 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v9 #trueSuccessor: v10 #falseSuccessor: v11  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@678435c5 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction CMP v1|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.009729833502041929 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4576762488921427584
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.<init>(ArrayList.java:154) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v47 
=== Usages ===
=== Predecessor ===
v12 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v47  <|@  <|@
f <@~|@floating>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.ArrayList.<init>(ArrayList.java:154) [bci: 20]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i4 
=== Succesors ===
=== Usages ===
v47 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.<init>(ArrayList.java:154) [bci: 20]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v17 
=== Succesors ===
trueSuccessor: v44 
falseSuccessor: v46 
=== Usages ===
=== Predecessor ===
v10 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v17 #trueSuccessor: v44 #falseSuccessor: v46  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4576762488921427584
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v44 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.<init>(ArrayList.java:154) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v36 
=== Usages ===
=== Predecessor ===
v47 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v36  <|@  <|@
f <@~|@floating>@ <|@
tid a42 <|@
result NarrowOop[Object[0]{}] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList.<init>(ArrayList.java:155) [bci: 27]
rawvalue: Object[0]{}
stableDimension: 0
stamp: n!# [Ljava/lang/Object;
stampKind: n -
value: NarrowOop[Object[0]{}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v36 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: ArrayList.elementData
nodeSourcePosition: at java.util.ArrayList.<init>(ArrayList.java:155) [bci: 27]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v295 
value: a42 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j60 
=== Usages ===
=== Predecessor ===
v44 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v295 value: a42 stateAfter: - lastLocationAccess: - #next: j60  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j60 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.ArrayList.<init>(ArrayList.java:155) [bci: 27]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v66 
=== Usages ===
j62 
=== Predecessor ===
v36 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v66  <|@  <|@
f <@~|@floating>@ <|@
tid j62 <|@
result v3|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.ArrayList.<init>(ArrayList.java:155) [bci: 27]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j60 
y: i61 
=== Succesors ===
=== Usages ===
v297 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j60 y: i61  <|@  <|@
f <@~|@floating>@ <|@
tid v297 <|@
result [v3|QWORD[*] + v2|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j62 
index: j65 
=== Succesors ===
=== Usages ===
v66 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j62 index: j65  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.ArrayList.<init>(ArrayList.java:155) [bci: 27]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v297 
value: i67 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v28 
=== Usages ===
=== Predecessor ===
j60 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v297 value: i67 stateAfter: - lastLocationAccess: - #next: v28  <|@  <|@
f <@*|@fixed>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.<init>(ArrayList.java:160) [bci: 60]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v66 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 20] y: -559030611 size: DWORD c: NarrowOop[Object[0]{}] <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v3|QWORD[*] + v2|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.<init>(ArrayList.java:154) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v45 
=== Usages ===
=== Predecessor ===
v47 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v45  <|@  <|@
f <@*|@fixed>@ <|@
tid v45 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 32
nodeSourcePosition: at java.util.ArrayList.<init>(ArrayList.java:154) [bci: 20]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?7 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v46 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?7  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -8211 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.<init>(AbstractList.java:77) [bci: 9]
locals: v0|QWORD[.] 
java.util.ArrayList.<init>(ArrayList.java:151) [bci: 1]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:9, 1] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" "B8" 
    xhandlers
    flags 
    probability 4607094780250949062
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: j76 
=== Usages ===
=== Predecessor ===
v12 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j76  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j76 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j121 
=== Usages ===
v298 v299 
=== Predecessor ===
v11 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j121  <|@  <|@
f <@~|@floating>@ <|@
tid v298 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j76 
index: - 
=== Succesors ===
=== Usages ===
j121 v123 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j76 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j121 <|@
result v4|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v298 
=== Succesors ===
next: j122 
=== Usages ===
j80 v300 v301 a96 v306 v302 v303 v304 v305 
=== Predecessor ===
j76 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v298 #next: j122  <|@  <|@
f <@~|@floating>@ <|@
tid v299 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j76 
index: - 
=== Succesors ===
=== Usages ===
j122 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j76 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j122 <|@
result v5|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v299 
=== Succesors ===
next: v85 
=== Usages ===
v86 
=== Predecessor ===
j121 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v299 #next: v85  <|@  <|@
f <@~|@floating>@ <|@
tid j71 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v125 j151 v157 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i72 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i73 i146 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i81 <|@
result int[16777215|0xffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 48]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v82 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i81 
=== Succesors ===
=== Usages ===
v85 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2 y: i81  <|@  <|@
f <@*|@fixed>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v82 
=== Succesors ===
trueSuccessor: v84 
falseSuccessor: v83 
=== Usages ===
=== Predecessor ===
j122 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v82 #trueSuccessor: v84 #falseSuccessor: v83  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v1|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4606202824180381798
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v92 
=== Usages ===
=== Predecessor ===
v85 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v92  <|@  <|@
f <@~|@floating>@ <|@
tid i73 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i2 
y: i72 
=== Succesors ===
=== Usages ===
i105 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i2 y: i72  <|@  <|@
f <@~|@floating>@ <|@
tid i104 <|@
result int[23|0x17] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i105 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i105 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
stamp: i32 [-2147483645 - 2147483647] ⇊0000000000000003
=== Inputs ===
x: i73 
y: i104 
=== Succesors ===
=== Usages ===
i75 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i73 y: i104  <|@  <|@
f <@~|@floating>@ <|@
tid i74 <|@
result int[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i75 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i75 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i105 
y: i74 
=== Succesors ===
=== Usages ===
j79 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i105 y: i74  <|@  <|@
f <@~|@floating>@ <|@
tid j79 <|@
result v9|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i75 
=== Succesors ===
=== Usages ===
j80 v302 v303 v304 v305 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i75  <|@  <|@
f <@~|@floating>@ <|@
tid j80 <|@
result v10|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
stamp: i64
=== Inputs ===
x: j79 
y: j121 
=== Succesors ===
=== Usages ===
v86 v123 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j79 y: j121  <|@  <|@
f <@~|@floating>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j122 
y: j80 
=== Succesors ===
=== Usages ===
v92 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j122 y: j80  <|@  <|@
f <@*|@fixed>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v86 
=== Succesors ===
trueSuccessor: v91 
falseSuccessor: v90 
=== Usages ===
=== Predecessor ===
v84 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v86 #trueSuccessor: v91 #falseSuccessor: v90  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = SHL v1|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = LEA [v6|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = AND v7|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOVSXD v8|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = ADD (x: v9|QWORD, y: v4|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|QWORD, y: v5|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576291288747520889
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v89 
=== Usages ===
=== Predecessor ===
v92 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v89  <|@  <|@
f <@*|@fixed>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v88 
=== Predecessor ===
v91 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606122548134030744
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v123 
=== Usages ===
=== Predecessor ===
v92 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v123  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v298 
value: j80 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v110 
=== Usages ===
=== Predecessor ===
v90 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v298 value: j80 stateAfter: - lastLocationAccess: - #next: v110  <|@  <|@
f <@~|@floating>@ <|@
tid v302 <|@
result [v9|QWORD + v4|QWORD * 1 + 192] <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j79 
index: j121 
=== Succesors ===
=== Usages ===
v110 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j79 index: j121  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
stamp: void
=== Inputs ===
address: v302 
=== Succesors ===
next: v113 
=== Usages ===
=== Predecessor ===
v123 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v302 #next: v113  <|@  <|@
f <@~|@floating>@ <|@
tid v303 <|@
result [v9|QWORD + v4|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j79 
index: j121 
=== Succesors ===
=== Usages ===
v113 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j79 index: j121  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
stamp: void
=== Inputs ===
address: v303 
=== Succesors ===
next: v116 
=== Usages ===
=== Predecessor ===
v110 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v303 #next: v116  <|@  <|@
f <@~|@floating>@ <|@
tid v304 <|@
result [v9|QWORD + v4|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j79 
index: j121 
=== Succesors ===
=== Usages ===
v116 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j79 index: j121  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
stamp: void
=== Inputs ===
address: v304 
=== Succesors ===
next: v119 
=== Usages ===
=== Predecessor ===
v113 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v304 #next: v119  <|@  <|@
f <@~|@floating>@ <|@
tid v305 <|@
result [v9|QWORD + v4|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j79 
index: j121 
=== Succesors ===
=== Usages ===
v119 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j79 index: j121  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
stamp: void
=== Inputs ===
address: v305 
=== Succesors ===
next: v124 
=== Usages ===
=== Predecessor ===
v116 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v305 #next: v124  <|@  <|@
f <@~|@floating>@ <|@
tid v300 <|@
result [v4|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j121 
index: - 
=== Succesors ===
=== Usages ===
v124 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j121 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v300 
value: i2 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v125 
=== Usages ===
=== Predecessor ===
v119 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v300 value: i2 stateAfter: - lastLocationAccess: - #next: v125  <|@  <|@
f <@~|@floating>@ <|@
tid v301 <|@
result [v4|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j121 
index: - 
=== Succesors ===
=== Usages ===
v125 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j121 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v125 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v301 
value: j71 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v129 
=== Usages ===
=== Predecessor ===
v124 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v301 value: j71 stateAfter: - lastLocationAccess: - #next: v129  <|@  <|@
f <@~|@floating>@ <|@
tid v306 <|@
result [v4|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j121 
index: - 
=== Succesors ===
=== Usages ===
v129 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j121 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v176 <|@
result meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
rawvalue: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v129 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v306 
value: v176 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v95 
=== Usages ===
=== Predecessor ===
v125 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v306 value: v176 stateAfter: - lastLocationAccess: - #next: v95  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: a96 
=== Usages ===
=== Predecessor ===
v129 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a96  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a96 <|@
result v11|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j121 
=== Succesors ===
next: v98 
=== Usages ===
a101 
=== Predecessor ===
v95 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j121 #next: v98  <|@  <|@
f <@*|@fixed>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v99 
=== Predecessor ===
a96 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v9|QWORD + v4|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v9|QWORD + v4|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v9|QWORD + v4|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v9|QWORD + v4|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v4|QWORD + 12], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v4|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v4|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = MOVE v4|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v11|QWORD[.]] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 4591800069227703043
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v87 
=== Usages ===
=== Predecessor ===
v85 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v87  <|@  <|@
f <@*|@fixed>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v88 
=== Predecessor ===
v83 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4592442277598511474
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v88 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v87 v89 
=== Succesors ===
next: a97 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v87 v89 #next: a97  <|@  <|@
f <@~|@floating>@ <|@
tid v70 <|@
result v12|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
rawvalue: meta{HotSpotType<[Ljava/lang/Object;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[Ljava/lang/Object;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a97 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a97 <|@
result v13|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?7 
arguments: v70 i2 i4 
=== Succesors ===
next: v100 
=== Usages ===
a101 
=== Predecessor ===
v88 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?7 arguments: v70 i2 i4 #next: v100  <|@  <|@
f <@*|@fixed>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v99 
=== Predecessor ===
a97 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v12|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.<init>(AbstractList.java:77) [bci: 9]
locals: v0|QWORD[.] 
java.util.ArrayList.<init>(ArrayList.java:151) [bci: 1]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:9, 1] <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v13|QWORD[.]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607094780250949062
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a101 <|@
result v14|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v99 
values: a96 a97 
=== Succesors ===
=== Usages ===
v296 a55 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v99 values: a96 a97  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v98 v100 
=== Succesors ===
next: v235 
=== Usages ===
a101 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v98 v100 #next: v235  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v235 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v188 
=== Usages ===
j237 
=== Predecessor ===
v99 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v188  <|@  <|@
f <@~|@floating>@ <|@
tid v296 <|@
result [v14|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a101 
index: - 
=== Succesors ===
=== Usages ===
j237 j143 j141 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a101 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j237 <|@
result v15|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v235 
address: v296 
=== Succesors ===
=== Usages ===
v308 v309 v310 v311 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v235 address: v296  <|@  <|@
f <@~|@floating>@ <|@
tid j177 <|@
result v16|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i2 
=== Succesors ===
=== Usages ===
j278 j265 j271 j275 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2  <|@  <|@
f <@~|@floating>@ <|@
tid j264 <|@
result long[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j265 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j265 <|@
result v17|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j177 
y: j264 
=== Succesors ===
=== Usages ===
v266 v268 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j177 y: j264  <|@  <|@
f <@~|@floating>@ <|@
tid j108 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j258 v266 j252 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v266 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j265 
y: j108 
=== Succesors ===
=== Usages ===
v188 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j265 y: j108  <|@  <|@
f <@*|@fixed>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v266 
=== Succesors ===
trueSuccessor: v186 
falseSuccessor: v187 
=== Usages ===
=== Predecessor ===
v235 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v266 #trueSuccessor: v186 #falseSuccessor: v187  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v14|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = LEA [v14|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOVSXD v1|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = LEA [v16|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v17|QWORD, y: v17|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    probability 4604864890074530900
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v198 
=== Usages ===
=== Predecessor ===
v188 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v198  <|@  <|@
f <@*|@fixed>@ <|@
tid v198 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v199 
=== Predecessor ===
v186 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4598087580996208070
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v189 
=== Usages ===
=== Predecessor ===
v188 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v189  <|@  <|@
f <@~|@floating>@ <|@
tid j127 <|@
result long[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j263 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v290 <|@
result v18|V256_DWORD[........] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null,null,null,null,null,null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL>
stampKind: <n -,n -,n -,n -,n -,n -,n -,n ->
value: SIMD<null,null,null,null,null,null,null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v289 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v190 
=== Predecessor ===
v187 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v18|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B28" 
    successors "B14" "B28" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607094780250949062
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j258 <|@
result v19|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v190 
values: j108 j263 
=== Succesors ===
=== Usages ===
v311 j263 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v190 values: j108 j263  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v189 
=== Succesors ===
next: v289 
=== Usages ===
j258 v194 v195 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v189 #next: v289  <|@  <|@
f <@~|@floating>@ <|@
tid v311 <|@
result [v15|QWORD[.] + v19|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j237 
index: j258 
=== Succesors ===
=== Usages ===
v289 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j237 index: j258  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v289 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v311 
value: v290 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v197 
=== Usages ===
=== Predecessor ===
v190 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v311 value: v290 stateAfter: - lastLocationAccess: - #next: v197  <|@  <|@
f <@~|@floating>@ <|@
tid j263 <|@
result v20|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j258 
y: j127 
=== Succesors ===
=== Usages ===
j252 j258 v268 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j258 y: j127  <|@  <|@
f <@~|@floating>@ <|@
tid v268 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j265 
y: j263 
=== Succesors ===
=== Usages ===
v197 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j265 y: j263  <|@  <|@
f <@*|@fixed>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v268 
=== Succesors ===
trueSuccessor: v194 
falseSuccessor: v196 
=== Usages ===
=== Predecessor ===
v289 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v268 #trueSuccessor: v194 #falseSuccessor: v196  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v19|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v15|QWORD[.] + v19|QWORD * 4], input: v18|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = LEA [v19|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v20|QWORD, y: v17|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4598087580996208070
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v194 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v190 
=== Succesors ===
next: v200 
=== Usages ===
=== Predecessor ===
v197 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v190 #next: v200  <|@  <|@
f <@*|@fixed>@ <|@
tid v200 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v199 
=== Predecessor ===
v194 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v20|QWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B11" "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607094780250949062
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j252 <|@
result v21|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v199 
values: j108 j263 
=== Succesors ===
=== Usages ===
v310 j257 j245 v272 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v199 values: j108 j263  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v198 v200 
=== Succesors ===
next: v218 
=== Usages ===
j252 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v198 v200 #next: v218  <|@  <|@
f <@~|@floating>@ <|@
tid j270 <|@
result long[-4|0xfffffffffffffffc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j271 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j271 <|@
result v22|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j177 
y: j270 
=== Succesors ===
=== Usages ===
v272 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j177 y: j270  <|@  <|@
f <@~|@floating>@ <|@
tid v272 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j271 
y: j252 
=== Succesors ===
=== Usages ===
v218 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j271 y: j252  <|@  <|@
f <@*|@fixed>@ <|@
tid v218 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v272 
=== Succesors ===
trueSuccessor: v217 
falseSuccessor: v216 
=== Usages ===
=== Predecessor ===
v199 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v272 #trueSuccessor: v217 #falseSuccessor: v216  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v21|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = LEA [v16|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v21|QWORD, y: v22|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4598087580996208070
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v221 
=== Usages ===
=== Predecessor ===
v218 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v221  <|@  <|@
f <@*|@fixed>@ <|@
tid v221 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v210 
=== Predecessor ===
v217 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v21|QWORD] destination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4604864890074530900
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v216 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v288 
=== Usages ===
=== Predecessor ===
v218 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v288  <|@  <|@
f <@~|@floating>@ <|@
tid v310 <|@
result [v15|QWORD[.] + v21|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j237 
index: j252 
=== Succesors ===
=== Usages ===
v288 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j237 index: j252  <|@  <|@
f <@~|@floating>@ <|@
tid v293 <|@
result v23|V128_DWORD[....] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null,null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL,n - NULL,n - NULL>
stampKind: <n -,n -,n -,n ->
value: SIMD<null,null,null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v288 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v288 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v310 
value: v293 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v209 
=== Usages ===
=== Predecessor ===
v216 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v310 value: v293 stateAfter: - lastLocationAccess: - #next: v209  <|@  <|@
f <@~|@floating>@ <|@
tid j240 <|@
result long[4|0x4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j257 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j257 <|@
result v24|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j252 
y: j240 
=== Succesors ===
=== Usages ===
j245 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j252 y: j240  <|@  <|@
f <@*|@fixed>@ <|@
tid v209 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v210 
=== Predecessor ===
v288 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v23|V128_DWORD[....] = L oc: SIMD<null,null,null,null> <|@ <|@
      nr   -1  <|@ instruction J (address: [v15|QWORD[.] + v21|QWORD * 4], input: v23|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = LEA [v21|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v24|QWORD] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607094780250949062
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j245 <|@
result v25|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v210 
values: j257 j252 
=== Succesors ===
=== Usages ===
v309 j251 j238 v276 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v210 values: j257 j252  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v210 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v209 v221 
=== Succesors ===
next: v224 
=== Usages ===
j245 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v209 v221 #next: v224  <|@  <|@
f <@~|@floating>@ <|@
tid j274 <|@
result long[-2|0xfffffffffffffffe] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j275 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j275 <|@
result v26|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j177 
y: j274 
=== Succesors ===
=== Usages ===
v276 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j177 y: j274  <|@  <|@
f <@~|@floating>@ <|@
tid v276 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j275 
y: j245 
=== Succesors ===
=== Usages ===
v224 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j275 y: j245  <|@  <|@
f <@*|@fixed>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v276 
=== Succesors ===
trueSuccessor: v223 
falseSuccessor: v222 
=== Usages ===
=== Predecessor ===
v210 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v276 #trueSuccessor: v223 #falseSuccessor: v222  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v25|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = LEA [v16|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v25|QWORD, y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4598087580996208070
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v223 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v227 
=== Usages ===
=== Predecessor ===
v224 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v227  <|@  <|@
f <@*|@fixed>@ <|@
tid v227 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v213 
=== Predecessor ===
v223 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v25|QWORD] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4604864890074530900
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v286 
=== Usages ===
=== Predecessor ===
v224 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v286  <|@  <|@
f <@~|@floating>@ <|@
tid v309 <|@
result [v15|QWORD[.] + v25|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j237 
index: j245 
=== Succesors ===
=== Usages ===
v286 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j237 index: j245  <|@  <|@
f <@~|@floating>@ <|@
tid v292 <|@
result v27|V64_DWORD[..] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL>
stampKind: <n -,n ->
value: SIMD<null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v286 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v286 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v309 
value: v292 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v212 
=== Usages ===
=== Predecessor ===
v222 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v309 value: v292 stateAfter: - lastLocationAccess: - #next: v212  <|@  <|@
f <@~|@floating>@ <|@
tid j250 <|@
result long[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j251 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j251 <|@
result v28|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j245 
y: j250 
=== Succesors ===
=== Usages ===
j238 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j245 y: j250  <|@  <|@
f <@*|@fixed>@ <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v213 
=== Predecessor ===
v286 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|V64_DWORD[..] = L oc: SIMD<null,null> <|@ <|@
      nr   -1  <|@ instruction J (address: [v15|QWORD[.] + v25|QWORD * 4], input: v27|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = LEA [v25|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v28|QWORD] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4607094780250949062
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j238 <|@
result v29|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v213 
values: j251 j245 
=== Succesors ===
=== Usages ===
v308 v279 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v213 values: j251 j245  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v213 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v212 v227 
=== Succesors ===
next: v230 
=== Usages ===
j238 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v212 v227 #next: v230  <|@  <|@
f <@~|@floating>@ <|@
tid j155 <|@
result long[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 50]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j156 j278 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j278 <|@
result v30|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j177 
y: j155 
=== Succesors ===
=== Usages ===
v279 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j177 y: j155  <|@  <|@
f <@~|@floating>@ <|@
tid v279 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j278 
y: j238 
=== Succesors ===
=== Usages ===
v230 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j278 y: j238  <|@  <|@
f <@*|@fixed>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v279 
=== Succesors ===
trueSuccessor: v229 
falseSuccessor: v228 
=== Usages ===
=== Predecessor ===
v213 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v279 #trueSuccessor: v229 #falseSuccessor: v228  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v29|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = DEC v16|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v29|QWORD, y: v30|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4598087580996208070
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v229 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v233 
=== Usages ===
=== Predecessor ===
v230 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v233  <|@  <|@
f <@*|@fixed>@ <|@
tid v233 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v203 
=== Predecessor ===
v229 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4604864890074530900
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v228 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v284 
=== Usages ===
=== Predecessor ===
v230 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v284  <|@  <|@
f <@~|@floating>@ <|@
tid v308 <|@
result [v15|QWORD[.] + v29|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j237 
index: j238 
=== Succesors ===
=== Usages ===
v284 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j237 index: j238  <|@  <|@
f <@~|@floating>@ <|@
tid a291 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: n - NULL
stampKind: n -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v284 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v284 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v308 
value: a291 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v215 
=== Usages ===
=== Predecessor ===
v228 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v308 value: a291 stateAfter: - lastLocationAccess: - #next: v215  <|@  <|@
f <@*|@fixed>@ <|@
tid v215 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v203 
=== Predecessor ===
v284 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v15|QWORD[.] + v29|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4607094780250949062
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v203 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v215 v233 
=== Succesors ===
next: j141 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v215 v233 #next: j141  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j141 <|@
result [v14|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToFirstArrayElement(WriteBarrierSnippets.java:376) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:159) [bci: 20]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v296 
=== Succesors ===
next: j143 
=== Usages ===
j142 
=== Predecessor ===
v203 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v296 #next: j143  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j143 <|@
result [v14|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:385) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v296 
=== Succesors ===
next: v152 
=== Usages ===
j148 
=== Predecessor ===
j141 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v296 #next: v152  <|@  <|@
f <@~|@floating>@ <|@
tid i144 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i145 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i145 <|@
result v31|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
stamp: i32
=== Inputs ===
x: i2 
y: i144 
=== Succesors ===
=== Usages ===
i146 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2 y: i144  <|@  <|@
f <@~|@floating>@ <|@
tid i146 <|@
result v32|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i145 
y: i72 
=== Succesors ===
=== Usages ===
j147 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i145 y: i72  <|@  <|@
f <@~|@floating>@ <|@
tid j147 <|@
result v33|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 26]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
resultBits: 64
stamp: i64 [-2147483648 - 2147483644] ⇈fffffffffffffffc
=== Inputs ===
value: i146 
=== Succesors ===
=== Usages ===
j148 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i146  <|@  <|@
f <@~|@floating>@ <|@
tid j148 <|@
result v35|QWORD[.] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 27]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
stamp: i64
=== Inputs ===
x: j143 
y: j147 
=== Succesors ===
=== Usages ===
j149 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j143 y: j147  <|@  <|@
f <@~|@floating>@ <|@
tid j149 <|@
result v36|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 34]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j148 
y: i61 
=== Succesors ===
=== Usages ===
j150 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j148 y: i61  <|@  <|@
f <@~|@floating>@ <|@
tid j142 <|@
result v37|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:159) [bci: 24]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j141 
y: i61 
=== Succesors ===
=== Usages ===
j150 j164 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j141 y: i61  <|@  <|@
f <@~|@floating>@ <|@
tid j150 <|@
result v39|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:161) [bci: 41]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
stamp: i64 [-36028797018963967 - 36028797018963967]
=== Inputs ===
x: j149 
y: j142 
=== Succesors ===
=== Usages ===
j151 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j149 y: j142  <|@  <|@
f <@~|@floating>@ <|@
tid j151 <|@
result v40|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:161) [bci: 43]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
stamp: i64 [-36028797018963966 - 36028797018963968]
=== Inputs ===
x: j150 
y: j71 
=== Succesors ===
=== Usages ===
j154 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j150 y: j71  <|@  <|@
f <@*|@fixed>@ <|@
tid v152 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v153 
=== Predecessor ===
j143 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = DEC v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = SHL v31|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = MOVSXD v32|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = LEA [v14|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = ADD (x: v34|QWORD[.], y: v33|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[*] = SHR v35|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = LEA [v14|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[*] = SHR v38|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[*] = SUB (x: v36|QWORD[*], ~y: v37|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[*] = INC v39|QWORD[*] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v40|QWORD[*]] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B27" 
    successors "B26" "B27" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4611598379878319558
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j154 <|@
result v41|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v153 
values: j151 j156 
=== Succesors ===
=== Usages ===
j156 v157 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v153 values: j151 j156  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v153 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 2.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v152 
=== Succesors ===
next: v160 
=== Usages ===
j154 v158 v163 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v152 #next: v160  <|@  <|@
f <@~|@floating>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 55]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j154 
y: j71 
=== Succesors ===
=== Usages ===
v160 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j154 y: j71  <|@  <|@
f <@*|@fixed>@ <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 55]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v157 
=== Succesors ===
trueSuccessor: v158 
falseSuccessor: v159 
=== Usages ===
=== Predecessor ===
v153 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v157 #trueSuccessor: v158 #falseSuccessor: v159  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v41|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v41|QWORD[*] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors 
    xhandlers
    flags 
    probability 4607094780250949062
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v158 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:165) [bci: 76]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v153 
=== Succesors ===
next: a55 
=== Usages ===
=== Predecessor ===
v160 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v153 #next: a55  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a55 <|@
result v14|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a101 
=== Succesors ===
next: v41 
=== Usages ===
a40 
=== Predecessor ===
v158 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a101 #next: v41  <|@  <|@
f <@~|@floating>@ <|@
tid a40 <|@
result v42|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 13]
op: Compress
stamp: n! -
=== Inputs ===
value: a55 
=== Succesors ===
=== Usages ===
v41 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a55  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: ArrayList.elementData
nodeSourcePosition: at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 13]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v295 
value: a40 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j169 
=== Usages ===
=== Predecessor ===
a55 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v295 value: a40 stateAfter: - lastLocationAccess: - #next: j169  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j169 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 13]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v173 
=== Usages ===
j170 
=== Predecessor ===
v41 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v173  <|@  <|@
f <@~|@floating>@ <|@
tid j170 <|@
result v43|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 13]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j169 
y: i61 
=== Succesors ===
=== Usages ===
v307 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j169 y: i61  <|@  <|@
f <@~|@floating>@ <|@
tid v307 <|@
result [v43|QWORD[*] + v2|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j170 
index: j65 
=== Succesors ===
=== Usages ===
v173 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j170 index: j65  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 13]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v307 
value: i67 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v27 
=== Usages ===
=== Predecessor ===
j169 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v307 value: i67 stateAfter: - lastLocationAccess: - #next: v27  <|@  <|@
f <@*|@fixed>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.<init>(ArrayList.java:160) [bci: 60]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v173 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v42|DWORD[.] = COMPRESSPOINTER (input: v14|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@3a75f42d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v42|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v43|QWORD[*] + v2|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B25" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4607094780250949062
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v159 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 58]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v162 
=== Usages ===
=== Predecessor ===
v160 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v162  <|@  <|@
f <@~|@floating>@ <|@
tid j156 <|@
result v44|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 50]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
stamp: i64
=== Inputs ===
x: j154 
y: j155 
=== Succesors ===
=== Usages ===
j154 j161 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j154 y: j155  <|@  <|@
f <@~|@floating>@ <|@
tid j164 <|@
result v45|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 62]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
stamp: i64 [4682670080 - 36028801701634047] ⇈00ffffffffffffff
=== Inputs ===
x: j142 
y: j65 
=== Succesors ===
=== Usages ===
j161 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j142 y: j65  <|@  <|@
f <@~|@floating>@ <|@
tid j161 <|@
result v46|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 65]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
stamp: i64
=== Inputs ===
x: j156 
y: j164 
=== Succesors ===
=== Usages ===
v162 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j156 y: j164  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v162 <|@
d <@d|@=== Debug Properties ===
kind: boolean
nodeSourcePosition: at org.graalvm.compiler.replacements.nodes.DirectStoreNode.storeBoolean(long, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 70]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
stamp: void
=== Inputs ===
address: j161 
value: i4 
=== Succesors ===
next: v163 
=== Usages ===
=== Predecessor ===
v159 >@ <|@
instruction <@DirectStore|@org.graalvm.compiler.replacements.nodes.DirectStoreNode>@ address: j161 value: i4 #next: v163  <|@  <|@
f <@*|@fixed>@ <|@
tid v163 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at java.util.ArrayList.<init>(ArrayList.java:153) [bci: 10]
stamp: void
=== Inputs ===
loopBegin: v153 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v162 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v153  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[*] = DEC v41|QWORD[*] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[*] = ADD (x: v37|QWORD[*], y: v2|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[*] = ADD (x: v45|QWORD[*], y: v44|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v46|QWORD[*]], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v44|QWORD[*]] destination: B27 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4604864890074530900
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v196 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v195 
=== Usages ===
=== Predecessor ===
v197 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v195  <|@  <|@
f <@*|@fixed>@ <|@
tid v195 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v190 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v196 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v190  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v20|QWORD] destination: B28 -> B13 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@678435c5 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction CMP v1|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.009729833502041929 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" "B8" 
    xhandlers
    flags 
    probability 4607094780250949062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v1|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4606202824180381798
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = SHL v1|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = LEA [v6|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = AND v7|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOVSXD v8|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = ADD (x: v9|QWORD, y: v4|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|QWORD, y: v5|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606122548134030744
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v9|QWORD + v4|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v9|QWORD + v4|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v9|QWORD + v4|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v9|QWORD + v4|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v4|QWORD + 12], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v4|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v4|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = MOVE v4|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v11|QWORD[.]] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607094780250949062
    begin_IR
      LIR
      nr   -1  <|@ instruction [v14|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = LEA [v14|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOVSXD v1|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = LEA [v16|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v17|QWORD, y: v17|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    probability 4604864890074530900
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B11" "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607094780250949062
    begin_IR
      LIR
      nr   -1  <|@ instruction [v21|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = LEA [v16|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v21|QWORD, y: v22|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4604864890074530900
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v23|V128_DWORD[....] = L oc: SIMD<null,null,null,null> <|@ <|@
      nr   -1  <|@ instruction J (address: [v15|QWORD[.] + v21|QWORD * 4], input: v23|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = LEA [v21|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v24|QWORD] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607094780250949062
    begin_IR
      LIR
      nr   -1  <|@ instruction [v25|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = LEA [v16|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v25|QWORD, y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4604864890074530900
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|V64_DWORD[..] = L oc: SIMD<null,null> <|@ <|@
      nr   -1  <|@ instruction J (address: [v15|QWORD[.] + v25|QWORD * 4], input: v27|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = LEA [v25|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v28|QWORD] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4607094780250949062
    begin_IR
      LIR
      nr   -1  <|@ instruction [v29|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = DEC v16|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v29|QWORD, y: v30|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4604864890074530900
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v15|QWORD[.] + v29|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4607094780250949062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = DEC v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = SHL v31|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = MOVSXD v32|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = LEA [v14|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = ADD (x: v34|QWORD[.], y: v33|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[*] = SHR v35|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = LEA [v14|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[*] = SHR v38|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[*] = SUB (x: v36|QWORD[*], ~y: v37|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[*] = INC v39|QWORD[*] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v40|QWORD[*]] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B25" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4607094780250949062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[*] = DEC v41|QWORD[*] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[*] = ADD (x: v37|QWORD[*], y: v2|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[*] = ADD (x: v45|QWORD[*], y: v44|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v46|QWORD[*]], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v44|QWORD[*]] destination: B27 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B27" 
    successors "B26" "B27" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4611598379878319558
    begin_IR
      LIR
      nr   -1  <|@ instruction [v41|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v41|QWORD[*] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors 
    xhandlers
    flags 
    probability 4607094780250949062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v42|DWORD[.] = COMPRESSPOINTER (input: v14|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@3a75f42d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v42|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v43|QWORD[*] + v2|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4598087580996208070
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v25|QWORD] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4598087580996208070
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4598087580996208070
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v18|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4604864890074530900
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v20|QWORD] destination: B28 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B28" 
    successors "B14" "B28" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607094780250949062
    begin_IR
      LIR
      nr   -1  <|@ instruction [v19|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v15|QWORD[.] + v19|QWORD * 4], input: v18|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = LEA [v19|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v20|QWORD, y: v17|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4598087580996208070
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v21|QWORD] destination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4598087580996208070
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v20|QWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 4591800069227703043
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4592442277598511474
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v12|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.<init>(AbstractList.java:77) [bci: 9]
locals: v0|QWORD[.] 
java.util.ArrayList.<init>(ArrayList.java:151) [bci: 1]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:9, 1] <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v13|QWORD[.]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4576762488921427584
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4576762488921427584
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 20] y: -559030611 size: DWORD c: NarrowOop[Object[0]{}] <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v3|QWORD[*] + v2|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576291288747520889
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -8211 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.<init>(AbstractList.java:77) [bci: 9]
locals: v0|QWORD[.] 
java.util.ArrayList.<init>(ArrayList.java:151) [bci: 1]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:9, 1] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokespecial #1          // java.util.AbstractList.<init>:()void
     4: iload_1       
     5: ifle          19
     8: aload_0       
     9: iload_1       
    10: anewarray     #4          // java.lang.Object
    13: putfield      #2          // elementData:java.lang.Object[]
    16: goto          60
    19: iload_1       
    20: ifne          33
    23: aload_0       
    24: getstatic     #3          // EMPTY_ELEMENTDATA:java.lang.Object[]
    27: putfield      #2          // elementData:java.lang.Object[]
    30: goto          60
    33: new           #7          // java.lang.IllegalArgumentException
    36: dup           
    37: new           #8          // java.lang.StringBuilder
    40: dup           
    41: invokespecial #4          // java.lang.StringBuilder.<init>:()void
    44: ldc           #10         // "Illegal Capacity: "
    46: invokevirtual #5          // java.lang.StringBuilder.append:(java.lang.String)java.lang.StringBuilder
    49: iload_1       
    50: invokevirtual #6          // java.lang.StringBuilder.append:(int)java.lang.StringBuilder
    53: invokevirtual #7          // java.lang.StringBuilder.toString:()java.lang.String
    56: invokespecial #8          // java.lang.IllegalArgumentException.<init>:(java.lang.String)void
    59: athrow        
    60: return        
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@678435c5 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r14|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction MOV (x: [r13|QWORD[.] + 12], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   12  <|@ instruction r10|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   14  <|@ instruction CMP r14|DWORD y: 1 size: DWORD <|@ <|@
      nr   16  <|@ instruction BRANCH trueDestinationProbability: 0.009729833502041929 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" "B8" 
    xhandlers
    flags 
    probability 4607094780250949062
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   52  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   54  <|@ instruction CMP r14|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   56  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4606202824180381798
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   60  <|@ instruction rcx|DWORD = SHL r14|DWORD y: 2 size: DWORD <|@ <|@
      nr   62  <|@ instruction rcx|DWORD = LEA [rcx|DWORD + 23] size: DWORD <|@ <|@
      nr   64  <|@ instruction rcx|DWORD = AND rcx|DWORD y: -8 size: DWORD <|@ <|@
      nr   66  <|@ instruction rcx|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr   68  <|@ instruction r11|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr   70  <|@ instruction CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr   72  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606122548134030744
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   82  <|@ instruction MOV (x: [r15|QWORD + 96], y: r11|QWORD) size: QWORD <|@ <|@
      nr   84  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   86  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   88  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   90  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   92  <|@ instruction MOV (x: [rsi|QWORD + 12], y: r14|DWORD) size: DWORD <|@ <|@
      nr   94  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr   96  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr   98  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  100  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction r13|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607094780250949062
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  130  <|@ instruction r10|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  132  <|@ instruction r11|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr  134  <|@ instruction r8|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  136  <|@ instruction TEST (x: r8|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  138  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    probability 4604864890074530900
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  142  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  144  <|@ instruction JUMP ~[] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B11" "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607094780250949062
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  170  <|@ instruction r8|QWORD = LEA [r11|QWORD - 4] size: QWORD <|@ <|@
      nr  172  <|@ instruction CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  174  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4604864890074530900
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  182  <|@ instruction xmm0|V128_DWORD[....] = L oc: SIMD<null,null,null,null> <|@ <|@
      nr  184  <|@ instruction J (address: [r10|QWORD[.] + r9|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  186  <|@ instruction r8|QWORD = LEA [r9|QWORD + 4] size: QWORD <|@ <|@
      nr  188  <|@ instruction r9|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  190  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607094780250949062
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  194  <|@ instruction r8|QWORD = LEA [r11|QWORD - 2] size: QWORD <|@ <|@
      nr  196  <|@ instruction CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  198  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4604864890074530900
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  206  <|@ instruction xmm0|V64_DWORD[..] = L oc: SIMD<null,null> <|@ <|@
      nr  208  <|@ instruction J (address: [r10|QWORD[.] + r9|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr  210  <|@ instruction r8|QWORD = LEA [r9|QWORD + 2] size: QWORD <|@ <|@
      nr  212  <|@ instruction r9|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction JUMP ~[] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4607094780250949062
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  218  <|@ instruction r11|QWORD = DEC r11|QWORD size: QWORD <|@ <|@
      nr  220  <|@ instruction CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  222  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4604864890074530900
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  230  <|@ instruction MOV (x: [r10|QWORD[.] + r9|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  232  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4607094780250949062
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  236  <|@ instruction r14|DWORD = DEC r14|DWORD size: DWORD <|@ <|@
      nr  238  <|@ instruction r14|DWORD = SHL r14|DWORD y: 2 size: DWORD <|@ <|@
      nr  240  <|@ instruction r10|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr  242  <|@ instruction r11|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  244  <|@ instruction r11|QWORD[.] = ADD (x: r11|QWORD[.], y: r10|QWORD) size: QWORD <|@ <|@
      nr  246  <|@ instruction r11|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  248  <|@ instruction r10|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  250  <|@ instruction r10|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  252  <|@ instruction r11|QWORD[*] = SUB (x: r11|QWORD[*], ~y: r10|QWORD[*]) size: QWORD <|@ <|@
      nr  254  <|@ instruction r11|QWORD[*] = INC r11|QWORD[*] size: QWORD <|@ <|@
      nr  256  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B25" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4607094780250949062
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  280  <|@ instruction r11|QWORD[*] = DEC r11|QWORD[*] size: QWORD <|@ <|@
      nr  282  <|@ instruction r8|QWORD[*] = ADD (x: r10|QWORD[*], y: r13|QWORD) size: QWORD <|@ <|@
      nr  284  <|@ instruction r8|QWORD[*] = ADD (x: r8|QWORD[*], y: r11|QWORD[*]) size: QWORD <|@ <|@
      nr  286  <|@ instruction MOVB (x: [r8|QWORD[*]], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  288  <|@ instruction JUMP ~[] destination: B27 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B27" 
    successors "B26" "B27" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4611598379878319558
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  260  <|@ instruction CMP r11|QWORD[*] y: 1 size: QWORD <|@ <|@
      nr  262  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors 
    xhandlers
    flags 
    probability 4607094780250949062
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  266  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@3a75f42d encoding: base: 0 shift: 3 <|@ <|@
      nr  270  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  272  <|@ instruction r10|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  274  <|@ instruction MOVB (x: [r10|QWORD[*] + r13|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  276  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4598087580996208070
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  202  <|@ instruction JUMP ~[] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4598087580996208070
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  226  <|@ instruction JUMP ~[] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4598087580996208070
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  148  <|@ instruction xmm0|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null> <|@ <|@
      nr  150  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  152  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4604864890074530900
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  292  <|@ instruction JUMP ~[] destination: B28 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B28" 
    successors "B14" "B28" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607094780250949062
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  156  <|@ instruction J (address: [r10|QWORD[.] + r9|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  158  <|@ instruction r9|QWORD = LEA [r9|QWORD + 8] size: QWORD <|@ <|@
      nr  160  <|@ instruction CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  162  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4598087580996208070
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  178  <|@ instruction JUMP ~[] destination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4598087580996208070
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 4591800069227703043
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  110  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  112  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4592442277598511474
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  116  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr  118  <|@ instruction rdx|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  120  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  122  <|@ instruction r13|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  124  <|@ st <@st|@reference-map: [stack:0]
live-base-pointers: []
java.util.AbstractList.<init>(AbstractList.java:77) [bci: 9]
locals: stack:32|QWORD[.] 
java.util.ArrayList.<init>(ArrayList.java:151) [bci: 1]
locals: stack:32|QWORD[.] r14|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:9, 1] <|@ <|@
      nr  126  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4576762488921427584
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction r13|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr   28  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4576762488921427584
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction MOV [r10|QWORD[.] + 20] y: -559030611 size: DWORD c: NarrowOop[Object[0]{}] <|@ <|@
      nr   34  <|@ instruction r10|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   36  <|@ instruction MOVB (x: [r10|QWORD[*] + r13|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   38  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576291288747520889
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   76  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   42  <|@ instruction MOV [r15|QWORD + 668] y: -8211 size: DWORD <|@ <|@
      nr   44  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   46  <|@ st <@st|@reference-map: [r10:0]
live-base-pointers: []
java.util.AbstractList.<init>(AbstractList.java:77) [bci: 9]
locals: r10|QWORD[.] 
java.util.ArrayList.<init>(ArrayList.java:151) [bci: 1]
locals: r10|QWORD[.] r14|DWORD 
>@ <|@ instruction DEOPT info [bci:9, 1] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokespecial #1          // java.util.AbstractList.<init>:()void
     4: iload_1       
     5: ifle          19
     8: aload_0       
     9: iload_1       
    10: anewarray     #4          // java.lang.Object
    13: putfield      #2          // elementData:java.lang.Object[]
    16: goto          60
    19: iload_1       
    20: ifne          33
    23: aload_0       
    24: getstatic     #3          // EMPTY_ELEMENTDATA:java.lang.Object[]
    27: putfield      #2          // elementData:java.lang.Object[]
    30: goto          60
    33: new           #7          // java.lang.IllegalArgumentException
    36: dup           
    37: new           #8          // java.lang.StringBuilder
    40: dup           
    41: invokespecial #4          // java.lang.StringBuilder.<init>:()void
    44: ldc           #10         // "Illegal Capacity: "
    46: invokevirtual #5          // java.lang.StringBuilder.append:(java.lang.String)java.lang.StringBuilder
    49: iload_1       
    50: invokevirtual #6          // java.lang.StringBuilder.append:(int)java.lang.StringBuilder
    53: invokevirtual #7          // java.lang.StringBuilder.toString:()java.lang.String
    56: invokespecial #8          // java.lang.IllegalArgumentException.<init>:(java.lang.String)void
    59: athrow        
    60: return        
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@678435c5 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r14|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction MOV (x: [r13|QWORD[.] + 12], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   12  <|@ instruction r10|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   14  <|@ instruction CMP r14|DWORD y: 1 size: DWORD <|@ <|@
      nr   16  <|@ instruction BRANCH trueDestinationProbability: 0.009729833502041929 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4607094780250949062
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   52  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   54  <|@ instruction CMP r14|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   56  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" "B7" 
    xhandlers
    flags 
    probability 4606202824180381798
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   60  <|@ instruction rcx|DWORD = SHL r14|DWORD y: 2 size: DWORD <|@ <|@
      nr   62  <|@ instruction rcx|DWORD = LEA [rcx|DWORD + 23] size: DWORD <|@ <|@
      nr   64  <|@ instruction rcx|DWORD = AND rcx|DWORD y: -8 size: DWORD <|@ <|@
      nr   66  <|@ instruction rcx|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr   68  <|@ instruction r11|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr   70  <|@ instruction CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr   72  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B5 -> B9 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606122548134030744
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   82  <|@ instruction MOV (x: [r15|QWORD + 96], y: r11|QWORD) size: QWORD <|@ <|@
      nr   84  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   86  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   88  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   90  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   92  <|@ instruction MOV (x: [rsi|QWORD + 12], y: r14|DWORD) size: DWORD <|@ <|@
      nr   94  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr   96  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr   98  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  100  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction r13|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607094780250949062
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  130  <|@ instruction r10|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  132  <|@ instruction r11|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr  134  <|@ instruction r8|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  136  <|@ instruction TEST (x: r8|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  138  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    probability 4604864890074530900
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  142  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  144  <|@ instruction JUMP ~[] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B18" "B17" 
    xhandlers
    flags 
    probability 4607094780250949062
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  170  <|@ instruction r8|QWORD = LEA [r11|QWORD - 4] size: QWORD <|@ <|@
      nr  172  <|@ instruction CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  174  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B15 -> B18 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4604864890074530900
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  182  <|@ instruction xmm0|V128_DWORD[....] = L oc: SIMD<null,null,null,null> <|@ <|@
      nr  184  <|@ instruction J (address: [r10|QWORD[.] + r9|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  186  <|@ instruction r8|QWORD = LEA [r9|QWORD + 4] size: QWORD <|@ <|@
      nr  188  <|@ instruction r9|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  190  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B15" 
    successors "B21" "B20" 
    xhandlers
    flags 
    probability 4607094780250949062
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  194  <|@ instruction r8|QWORD = LEA [r11|QWORD - 2] size: QWORD <|@ <|@
      nr  196  <|@ instruction CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  198  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B18 -> B21 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4604864890074530900
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  206  <|@ instruction xmm0|V64_DWORD[..] = L oc: SIMD<null,null> <|@ <|@
      nr  208  <|@ instruction J (address: [r10|QWORD[.] + r9|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr  210  <|@ instruction r8|QWORD = LEA [r9|QWORD + 2] size: QWORD <|@ <|@
      nr  212  <|@ instruction r9|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction JUMP ~[] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B18" 
    successors "B24" "B23" 
    xhandlers
    flags 
    probability 4607094780250949062
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  218  <|@ instruction r11|QWORD = DEC r11|QWORD size: QWORD <|@ <|@
      nr  220  <|@ instruction CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  222  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B21 -> B24 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4604864890074530900
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  230  <|@ instruction MOV (x: [r10|QWORD[.] + r9|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  232  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B21" 
    successors "B25" 
    xhandlers
    flags 
    probability 4607094780250949062
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  236  <|@ instruction r14|DWORD = DEC r14|DWORD size: DWORD <|@ <|@
      nr  238  <|@ instruction r14|DWORD = SHL r14|DWORD y: 2 size: DWORD <|@ <|@
      nr  240  <|@ instruction r10|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr  242  <|@ instruction r11|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  244  <|@ instruction r11|QWORD[.] = ADD (x: r11|QWORD[.], y: r10|QWORD) size: QWORD <|@ <|@
      nr  246  <|@ instruction r11|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  248  <|@ instruction r10|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  250  <|@ instruction r10|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  252  <|@ instruction r11|QWORD[*] = SUB (x: r11|QWORD[*], ~y: r10|QWORD[*]) size: QWORD <|@ <|@
      nr  254  <|@ instruction r11|QWORD[*] = INC r11|QWORD[*] size: QWORD <|@ <|@
      nr  256  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B25" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4607094780250949062
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  280  <|@ instruction r11|QWORD[*] = DEC r11|QWORD[*] size: QWORD <|@ <|@
      nr  282  <|@ instruction r8|QWORD[*] = ADD (x: r10|QWORD[*], y: r13|QWORD) size: QWORD <|@ <|@
      nr  284  <|@ instruction r8|QWORD[*] = ADD (x: r8|QWORD[*], y: r11|QWORD[*]) size: QWORD <|@ <|@
      nr  286  <|@ instruction MOVB (x: [r8|QWORD[*]], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  288  <|@ instruction JUMP ~[] destination: B27 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B27" 
    successors "B26" "B27" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4611598379878319558
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  260  <|@ instruction CMP r11|QWORD[*] y: 1 size: QWORD <|@ <|@
      nr  262  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors 
    xhandlers
    flags 
    probability 4607094780250949062
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  266  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@3a75f42d encoding: base: 0 shift: 3 <|@ <|@
      nr  270  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  272  <|@ instruction r10|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  274  <|@ instruction MOVB (x: [r10|QWORD[*] + r13|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  276  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4598087580996208070
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  148  <|@ instruction xmm0|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null> <|@ <|@
      nr  150  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  152  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B13" 
    successors "B15" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607094780250949062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  156  <|@ instruction J (address: [r10|QWORD[.] + r9|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  158  <|@ instruction r9|QWORD = LEA [r9|QWORD + 8] size: QWORD <|@ <|@
      nr  160  <|@ instruction CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  162  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B13 -> B15 falseDestination: B13 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4592442277598511474
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  110  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  116  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr  118  <|@ instruction rdx|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  120  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  122  <|@ instruction r13|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  124  <|@ st <@st|@reference-map: [stack:0]
live-base-pointers: []
java.util.AbstractList.<init>(AbstractList.java:77) [bci: 9]
locals: stack:32|QWORD[.] 
java.util.ArrayList.<init>(ArrayList.java:151) [bci: 1]
locals: stack:32|QWORD[.] r14|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:9, 1] <|@ <|@
      nr  126  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4576762488921427584
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction r13|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr   28  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4576762488921427584
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction MOV [r10|QWORD[.] + 20] y: -559030611 size: DWORD c: NarrowOop[Object[0]{}] <|@ <|@
      nr   34  <|@ instruction r10|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   36  <|@ instruction MOVB (x: [r10|QWORD[*] + r13|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   38  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   42  <|@ instruction MOV [r15|QWORD + 668] y: -8211 size: DWORD <|@ <|@
      nr   44  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   46  <|@ st <@st|@reference-map: [r10:0]
live-base-pointers: []
java.util.AbstractList.<init>(AbstractList.java:77) [bci: 9]
locals: r10|QWORD[.] 
java.util.ArrayList.<init>(ArrayList.java:151) [bci: 1]
locals: r10|QWORD[.] r14|DWORD 
>@ <|@ instruction DEOPT info [bci:9, 1] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokespecial #1          // java.util.AbstractList.<init>:()void
     4: iload_1       
     5: ifle          19
     8: aload_0       
     9: iload_1       
    10: anewarray     #4          // java.lang.Object
    13: putfield      #2          // elementData:java.lang.Object[]
    16: goto          60
    19: iload_1       
    20: ifne          33
    23: aload_0       
    24: getstatic     #3          // EMPTY_ELEMENTDATA:java.lang.Object[]
    27: putfield      #2          // elementData:java.lang.Object[]
    30: goto          60
    33: new           #7          // java.lang.IllegalArgumentException
    36: dup           
    37: new           #8          // java.lang.StringBuilder
    40: dup           
    41: invokespecial #4          // java.lang.StringBuilder.<init>:()void
    44: ldc           #10         // "Illegal Capacity: "
    46: invokevirtual #5          // java.lang.StringBuilder.append:(java.lang.String)java.lang.StringBuilder
    49: iload_1       
    50: invokevirtual #6          // java.lang.StringBuilder.append:(int)java.lang.StringBuilder
    53: invokevirtual #7          // java.lang.StringBuilder.toString:()java.lang.String
    56: invokespecial #8          // java.lang.IllegalArgumentException.<init>:(java.lang.String)void
    59: athrow        
    60: return        
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c24104c8bee448bf24589650c49ba00e01b17010000004183fe010f8c8a010000498b7760498b57704181feffffff000f8351010000418bcec1e1028d491783e1f84863c94c8bd94c03de4c3bda0f87330100004d895f600f188431c00000000f188431000100000f188431400100000f188431800100004489760c48c70601000000c74608addeadde488bc64c892c244d8bea4c8d50104d63de4d8d43f84d85c00f8db700000049c7c1000000004d8d43fc4d3bc80f8f11000000c5f9efc0c4817a7f048a4d8d41044d8bc84d8d43fe4d3bc80f8f11000000c5f9efc0c481f97e048a4d8d41024d8bc849ffcb4d3bcb0f8f040000004789248a41ffce41c1e6024d63d64c8d58104d03da49c1eb094c8d501049c1ea094d2bda49ffc3e90f00000049ffcb4d8bc24d03c54d03c34588204983fb017deb4c8b142448c1e8034189421449c1ea094788242a488b6c24104883c418850500000000c5f877c3c5f9efc049c7c100000000660f1f840000000000c4817e7f048a4d8d49084d3bc87ef1e928ffffff4c892c2448beaddeaddeaddeadde418bd6b9000000004d8beae80000000090e9e9feffff4c892c244d8bea4c8b14244585f60f852300000041c74214addeadde49c1ea094788242a488b6c24104883c418850500000000c5f877c341c7879c020000eddfffff4d89a7a8020000e80000000090e80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@678435c5 slotKind: QWORD  <||@
  Comment 48 6 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 51 8 r14|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 54 10 MOV (x: [r13|QWORD[.] + 12], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 58 12 r10|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 68 14 CMP r14|DWORD y: 1 size: DWORD  <||@
  Comment 72 16 BRANCH trueDestinationProbability: 0.009729833502041929 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B4  <||@
  Comment 78 block B4 null  <||@
  Comment 78 48 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 78 50 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 82 52 rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 86 54 CMP r14|DWORD y: 16777215 size: DWORD  <||@
  Comment 93 56 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B9  <||@
  Comment 99 block B5 null  <||@
  Comment 99 58 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 99 60 rcx|DWORD = SHL r14|DWORD y: 2 size: DWORD  <||@
  Comment 105 62 rcx|DWORD = LEA [rcx|DWORD + 23] size: DWORD  <||@
  Comment 108 64 rcx|DWORD = AND rcx|DWORD y: -8 size: DWORD  <||@
  Comment 111 66 rcx|QWORD = MOVSXD rcx|DWORD size: QWORD  <||@
  Comment 114 68 r11|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 120 70 CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 123 72 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B5 -> B9 falseDestination: B5 -> B7  <||@
  Comment 129 block B7 null  <||@
  Comment 129 80 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 129 82 MOV (x: [r15|QWORD + 96], y: r11|QWORD) size: QWORD  <||@
  Comment 133 84 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 192] instr: 0  <||@
  Comment 141 86 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 256] instr: 0  <||@
  Comment 149 88 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 320] instr: 0  <||@
  Comment 157 90 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 384] instr: 0  <||@
  Comment 165 92 MOV (x: [rsi|QWORD + 12], y: r14|DWORD) size: DWORD  <||@
  Comment 169 94 MOV [rsi|QWORD] y: 1 size: QWORD  <||@
  Comment 176 96 MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}  <||@
  Comment 176 {meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}}  <||@
  Comment 183 98 rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 183 100 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 186 102 stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 190 104 r13|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 193 106 JUMP ~[] destination: B7 -> B10  <||@
  Comment 193 block B10 null  <||@
  Comment 193 128 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 193 130 r10|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 197 132 r11|QWORD = MOVSXD r14|DWORD size: QWORD  <||@
  Comment 200 134 r8|QWORD = LEA [r11|QWORD - 8] size: QWORD  <||@
  Comment 204 136 TEST (x: r8|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 207 138 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12  <||@
  Comment 213 block B11 null  <||@
  Comment 213 140 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 213 142 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 220 144 JUMP ~[] destination: B11 -> B15  <||@
  Comment 220 block B15 null  <||@
  Comment 220 168 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 220 170 r8|QWORD = LEA [r11|QWORD - 4] size: QWORD  <||@
  Comment 224 172 CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 227 174 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B15 -> B18 falseDestination: B15 -> B17  <||@
  Comment 233 block B17 null  <||@
  Comment 233 180 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 233 182 xmm0|V128_DWORD[....] = L oc: SIMD<null,null,null,null>  <||@
  Comment 237 184 J (address: [r10|QWORD[.] + r9|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU  <||@
  Comment 243 186 r8|QWORD = LEA [r9|QWORD + 4] size: QWORD  <||@
  Comment 247 188 r9|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 250 190 JUMP ~[] destination: B17 -> B18  <||@
  Comment 250 block B18 null  <||@
  Comment 250 192 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 250 194 r8|QWORD = LEA [r11|QWORD - 2] size: QWORD  <||@
  Comment 254 196 CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 257 198 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B18 -> B21 falseDestination: B18 -> B20  <||@
  Comment 263 block B20 null  <||@
  Comment 263 204 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 263 206 xmm0|V64_DWORD[..] = L oc: SIMD<null,null>  <||@
  Comment 267 208 J (address: [r10|QWORD[.] + r9|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ  <||@
  Comment 273 210 r8|QWORD = LEA [r9|QWORD + 2] size: QWORD  <||@
  Comment 277 212 r9|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 280 214 JUMP ~[] destination: B20 -> B21  <||@
  Comment 280 block B21 null  <||@
  Comment 280 216 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 280 218 r11|QWORD = DEC r11|QWORD size: QWORD  <||@
  Comment 283 220 CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 286 222 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B21 -> B24 falseDestination: B21 -> B23  <||@
  Comment 292 block B23 null  <||@
  Comment 292 228 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 292 230 MOV (x: [r10|QWORD[.] + r9|QWORD * 4], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 296 232 JUMP ~[] destination: B23 -> B24  <||@
  Comment 296 block B24 null  <||@
  Comment 296 234 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 296 236 r14|DWORD = DEC r14|DWORD size: DWORD  <||@
  Comment 299 238 r14|DWORD = SHL r14|DWORD y: 2 size: DWORD  <||@
  Comment 303 240 r10|QWORD = MOVSXD r14|DWORD size: QWORD  <||@
  Comment 306 242 r11|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 310 244 r11|QWORD[.] = ADD (x: r11|QWORD[.], y: r10|QWORD) size: QWORD  <||@
  Comment 313 246 r11|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD  <||@
  Comment 317 248 r10|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 321 250 r10|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD  <||@
  Comment 325 252 r11|QWORD[*] = SUB (x: r11|QWORD[*], ~y: r10|QWORD[*]) size: QWORD  <||@
  Comment 328 254 r11|QWORD[*] = INC r11|QWORD[*] size: QWORD  <||@
  Comment 331 256 JUMP ~[] destination: B24 -> B25  <||@
  Comment 336 block B27 loop 1 depth 1 header:153|LoopBegin  <||@
  Comment 336 278 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 336 280 r11|QWORD[*] = DEC r11|QWORD[*] size: QWORD  <||@
  Comment 339 282 r8|QWORD[*] = ADD (x: r10|QWORD[*], y: r13|QWORD) size: QWORD  <||@
  Comment 345 284 r8|QWORD[*] = ADD (x: r8|QWORD[*], y: r11|QWORD[*]) size: QWORD  <||@
  Comment 348 286 MOVB (x: [r8|QWORD[*]], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 351 288 JUMP ~[] destination: B27 -> B25  <||@
  Comment 351 block B25 loop 1 depth 1 header:153|LoopBegin  <||@
  Comment 351 258 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 351 260 CMP r11|QWORD[*] y: 1 size: QWORD  <||@
  Comment 355 262 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B27  <||@
  Comment 357 block B26 null  <||@
  Comment 357 264 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 357 266 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 361 268 rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@3a75f42d encoding: base: 0 shift: 3  <||@
  Comment 365 270 MOV (x: [r10|QWORD[.] + 20], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 369 272 r10|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD  <||@
  Comment 373 274 MOVB (x: [r10|QWORD[*] + r13|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 377 276 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 386 12  <||@
  Comment 396 block B12 null  <||@
  Comment 396 146 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 396 148 xmm0|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null>  <||@
  Comment 400 150 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 407 152 JUMP ~[] destination: B12 -> B13  <||@
  Comment 407 block B13 loop 0 depth 1 header:190|LoopBegin  <||@
  Comment 407 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 416 156 J (address: [r10|QWORD[.] + r9|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU  <||@
  Comment 422 158 r9|QWORD = LEA [r9|QWORD + 8] size: QWORD  <||@
  Comment 426 160 CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 429 162 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B13 -> B15 falseDestination: B13 -> B13  <||@
  Comment 436 block B9 null  <||@
  Comment 436 114 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 436 110 stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 440 116 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>}  <||@
  Comment 440 {meta{HotSpotType<[Ljava/lang/Object;, resolved>}}  <||@
  Comment 450 118 rdx|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 453 120 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 458 122 r13|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 461 124 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:9, 1]  <||@
  Comment 461 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 466 [stack:0]at java.util.AbstractList.<init>(AbstractList.java:77) [bci: 9, duringCall: false, rethrow: false]
              |0                 
     locals:  |stack:32|QWORD[.] 
  at java.util.ArrayList.<init>(ArrayList.java:151) [bci: 1, duringCall: true, rethrow: false]
              |0                  |1         
     locals:  |stack:32|QWORD[.]  |r14|DWORD   <||@
  Comment 467 126 JUMP ~[] destination: B9 -> B10  <||@
  Comment 472 block B1 null  <||@
  Comment 472 18 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 472 20 stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 476 22 r13|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 479 24 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 483 26 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 486 28 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3  <||@
  Comment 492 block B2 null  <||@
  Comment 492 30 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 492 32 MOV [r10|QWORD[.] + 20] y: -559030611 size: DWORD c: NarrowOop[Object[0]{}]  <||@
  Comment 492 {NarrowOop[Object[0]{}]}  <||@
  Comment 500 34 r10|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD  <||@
  Comment 504 36 MOVB (x: [r10|QWORD[*] + r13|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 508 38 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 517 12  <||@
  Comment 527 block B3 null  <||@
  Comment 527 40 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 527 42 MOV [r15|QWORD + 668] y: -8211 size: DWORD  <||@
  Comment 538 44 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 545 46 DEOPT info [bci:9, 1]  <||@
  Comment 545 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 550 [r10:0]at java.util.AbstractList.<init>(AbstractList.java:77) [bci: 9, duringCall: false, rethrow: false]
              |0            
     locals:  |r10|QWORD[.] 
  at java.util.ArrayList.<init>(ArrayList.java:151) [bci: 1, duringCall: true, rethrow: false]
              |0             |1         
     locals:  |r10|QWORD[.]  |r14|DWORD   <||@
  Comment 551 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 551 4  <||@
  Comment 557 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 557 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-7914[java.util.ArrayList.<init>(int)]"
  method "HotSpotCompilation-7914[java.util.ArrayList.<init>(int)]"
  date 1527005187914
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 107b18080 448b560849c1e203493bc20f85cfddcefe900f1f80000000000f1f800000000089842400c0feff4883ec1848896c24104c8bee448bf24589650c49ba00e01b17010000004183fe010f8c8a010000498b7760498b57704181feffffff000f8351010000418bcec1e1028d491783e1f84863c94c8bd94c03de4c3bda0f87330100004d895f600f188431c00000000f188431000100000f188431400100000f188431800100004489760c48c70601000000c74608f52200f8488bc64c892c244d8bea4c8d50104d63de4d8d43f84d85c00f8db700000049c7c1000000004d8d43fc4d3bc80f8f11000000c5f9efc0c4817a7f048a4d8d41044d8bc84d8d43fe4d3bc80f8f11000000c5f9efc0c481f97e048a4d8d41024d8bc849ffcb4d3bcb0f8f040000004789248a41ffce41c1e6024d63d64c8d58104d03da49c1eb094c8d501049c1ea094d2bda49ffc3e90f00000049ffcb4d8bc24d03c54d03c34588204983fb017deb4c8b142448c1e8034189421449c1ea094788242a488b6c24104883c4188505fe6dd7fcc5f877c3c5f9efc049c7c100000000660f1f840000000000c4817e7f048a4d8d49084d3bc87ef1e928ffffff4c892c2448bea81701c007000000418bd6b9000000004d8beae88eeb47ff90e9e9feffff4c892c244d8bea4c8b14244585f60f852300000041c74214fca700d849c1ea094788242a488b6c24104883c41885057b6dd7fcc5f877c341c7879c020000eddfffff4d89a7a8020000e858f3cefe90e8742313ff90e84ef2cefe90f4f4f4f4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@678435c5 slotKind: QWORD  <||@
  Comment 48 6 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 51 8 r14|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 54 10 MOV (x: [r13|QWORD[.] + 12], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 58 12 r10|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 68 14 CMP r14|DWORD y: 1 size: DWORD  <||@
  Comment 72 16 BRANCH trueDestinationProbability: 0.009729833502041929 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B4  <||@
  Comment 78 block B4 null  <||@
  Comment 78 48 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 78 50 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 82 52 rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 86 54 CMP r14|DWORD y: 16777215 size: DWORD  <||@
  Comment 93 56 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B9  <||@
  Comment 99 block B5 null  <||@
  Comment 99 58 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 99 60 rcx|DWORD = SHL r14|DWORD y: 2 size: DWORD  <||@
  Comment 105 62 rcx|DWORD = LEA [rcx|DWORD + 23] size: DWORD  <||@
  Comment 108 64 rcx|DWORD = AND rcx|DWORD y: -8 size: DWORD  <||@
  Comment 111 66 rcx|QWORD = MOVSXD rcx|DWORD size: QWORD  <||@
  Comment 114 68 r11|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 120 70 CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 123 72 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B5 -> B9 falseDestination: B5 -> B7  <||@
  Comment 129 block B7 null  <||@
  Comment 129 80 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 129 82 MOV (x: [r15|QWORD + 96], y: r11|QWORD) size: QWORD  <||@
  Comment 133 84 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 192] instr: 0  <||@
  Comment 141 86 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 256] instr: 0  <||@
  Comment 149 88 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 320] instr: 0  <||@
  Comment 157 90 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 384] instr: 0  <||@
  Comment 165 92 MOV (x: [rsi|QWORD + 12], y: r14|DWORD) size: DWORD  <||@
  Comment 169 94 MOV [rsi|QWORD] y: 1 size: QWORD  <||@
  Comment 176 96 MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}  <||@
  Comment 176 {meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}}  <||@
  Comment 183 98 rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 183 100 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 186 102 stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 190 104 r13|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 193 106 JUMP ~[] destination: B7 -> B10  <||@
  Comment 193 block B10 null  <||@
  Comment 193 128 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 193 130 r10|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 197 132 r11|QWORD = MOVSXD r14|DWORD size: QWORD  <||@
  Comment 200 134 r8|QWORD = LEA [r11|QWORD - 8] size: QWORD  <||@
  Comment 204 136 TEST (x: r8|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 207 138 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12  <||@
  Comment 213 block B11 null  <||@
  Comment 213 140 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 213 142 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 220 144 JUMP ~[] destination: B11 -> B15  <||@
  Comment 220 block B15 null  <||@
  Comment 220 168 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 220 170 r8|QWORD = LEA [r11|QWORD - 4] size: QWORD  <||@
  Comment 224 172 CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 227 174 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B15 -> B18 falseDestination: B15 -> B17  <||@
  Comment 233 block B17 null  <||@
  Comment 233 180 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 233 182 xmm0|V128_DWORD[....] = L oc: SIMD<null,null,null,null>  <||@
  Comment 237 184 J (address: [r10|QWORD[.] + r9|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU  <||@
  Comment 243 186 r8|QWORD = LEA [r9|QWORD + 4] size: QWORD  <||@
  Comment 247 188 r9|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 250 190 JUMP ~[] destination: B17 -> B18  <||@
  Comment 250 block B18 null  <||@
  Comment 250 192 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 250 194 r8|QWORD = LEA [r11|QWORD - 2] size: QWORD  <||@
  Comment 254 196 CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 257 198 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B18 -> B21 falseDestination: B18 -> B20  <||@
  Comment 263 block B20 null  <||@
  Comment 263 204 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 263 206 xmm0|V64_DWORD[..] = L oc: SIMD<null,null>  <||@
  Comment 267 208 J (address: [r10|QWORD[.] + r9|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ  <||@
  Comment 273 210 r8|QWORD = LEA [r9|QWORD + 2] size: QWORD  <||@
  Comment 277 212 r9|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 280 214 JUMP ~[] destination: B20 -> B21  <||@
  Comment 280 block B21 null  <||@
  Comment 280 216 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 280 218 r11|QWORD = DEC r11|QWORD size: QWORD  <||@
  Comment 283 220 CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 286 222 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B21 -> B24 falseDestination: B21 -> B23  <||@
  Comment 292 block B23 null  <||@
  Comment 292 228 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 292 230 MOV (x: [r10|QWORD[.] + r9|QWORD * 4], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 296 232 JUMP ~[] destination: B23 -> B24  <||@
  Comment 296 block B24 null  <||@
  Comment 296 234 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 296 236 r14|DWORD = DEC r14|DWORD size: DWORD  <||@
  Comment 299 238 r14|DWORD = SHL r14|DWORD y: 2 size: DWORD  <||@
  Comment 303 240 r10|QWORD = MOVSXD r14|DWORD size: QWORD  <||@
  Comment 306 242 r11|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 310 244 r11|QWORD[.] = ADD (x: r11|QWORD[.], y: r10|QWORD) size: QWORD  <||@
  Comment 313 246 r11|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD  <||@
  Comment 317 248 r10|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 321 250 r10|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD  <||@
  Comment 325 252 r11|QWORD[*] = SUB (x: r11|QWORD[*], ~y: r10|QWORD[*]) size: QWORD  <||@
  Comment 328 254 r11|QWORD[*] = INC r11|QWORD[*] size: QWORD  <||@
  Comment 331 256 JUMP ~[] destination: B24 -> B25  <||@
  Comment 336 block B27 loop 1 depth 1 header:153|LoopBegin  <||@
  Comment 336 278 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 336 280 r11|QWORD[*] = DEC r11|QWORD[*] size: QWORD  <||@
  Comment 339 282 r8|QWORD[*] = ADD (x: r10|QWORD[*], y: r13|QWORD) size: QWORD  <||@
  Comment 345 284 r8|QWORD[*] = ADD (x: r8|QWORD[*], y: r11|QWORD[*]) size: QWORD  <||@
  Comment 348 286 MOVB (x: [r8|QWORD[*]], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 351 288 JUMP ~[] destination: B27 -> B25  <||@
  Comment 351 block B25 loop 1 depth 1 header:153|LoopBegin  <||@
  Comment 351 258 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 351 260 CMP r11|QWORD[*] y: 1 size: QWORD  <||@
  Comment 355 262 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B27  <||@
  Comment 357 block B26 null  <||@
  Comment 357 264 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 357 266 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 361 268 rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@3a75f42d encoding: base: 0 shift: 3  <||@
  Comment 365 270 MOV (x: [r10|QWORD[.] + 20], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 369 272 r10|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD  <||@
  Comment 373 274 MOVB (x: [r10|QWORD[*] + r13|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 377 276 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 386 12  <||@
  Comment 396 block B12 null  <||@
  Comment 396 146 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 396 148 xmm0|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null>  <||@
  Comment 400 150 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 407 152 JUMP ~[] destination: B12 -> B13  <||@
  Comment 407 block B13 loop 0 depth 1 header:190|LoopBegin  <||@
  Comment 407 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 416 156 J (address: [r10|QWORD[.] + r9|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU  <||@
  Comment 422 158 r9|QWORD = LEA [r9|QWORD + 8] size: QWORD  <||@
  Comment 426 160 CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 429 162 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B13 -> B15 falseDestination: B13 -> B13  <||@
  Comment 436 block B9 null  <||@
  Comment 436 114 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 436 110 stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 440 116 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>}  <||@
  Comment 440 {meta{HotSpotType<[Ljava/lang/Object;, resolved>}}  <||@
  Comment 450 118 rdx|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 453 120 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 458 122 r13|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 461 124 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:9, 1]  <||@
  Comment 461 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 466 [stack:0]at java.util.AbstractList.<init>(AbstractList.java:77) [bci: 9, duringCall: false, rethrow: false]
              |0                 
     locals:  |stack:32|QWORD[.] 
  at java.util.ArrayList.<init>(ArrayList.java:151) [bci: 1, duringCall: true, rethrow: false]
              |0                  |1         
     locals:  |stack:32|QWORD[.]  |r14|DWORD   <||@
  Comment 467 126 JUMP ~[] destination: B9 -> B10  <||@
  Comment 472 block B1 null  <||@
  Comment 472 18 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 472 20 stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 476 22 r13|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 479 24 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 483 26 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 486 28 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3  <||@
  Comment 492 block B2 null  <||@
  Comment 492 30 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 492 32 MOV [r10|QWORD[.] + 20] y: -559030611 size: DWORD c: NarrowOop[Object[0]{}]  <||@
  Comment 492 {NarrowOop[Object[0]{}]}  <||@
  Comment 500 34 r10|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD  <||@
  Comment 504 36 MOVB (x: [r10|QWORD[*] + r13|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 508 38 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 517 12  <||@
  Comment 527 block B3 null  <||@
  Comment 527 40 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 527 42 MOV [r15|QWORD + 668] y: -8211 size: DWORD  <||@
  Comment 538 44 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 545 46 DEOPT info [bci:9, 1]  <||@
  Comment 545 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 550 [r10:0]at java.util.AbstractList.<init>(AbstractList.java:77) [bci: 9, duringCall: false, rethrow: false]
              |0            
     locals:  |r10|QWORD[.] 
  at java.util.ArrayList.<init>(ArrayList.java:151) [bci: 1, duringCall: true, rethrow: false]
              |0             |1         
     locals:  |r10|QWORD[.]  |r14|DWORD   <||@
  Comment 551 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 551 4  <||@
  Comment 557 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 557 5  <||@
  HexCodeFile>>> <|@
end_nmethod
